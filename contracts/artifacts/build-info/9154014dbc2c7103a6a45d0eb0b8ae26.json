{
	"id": "9154014dbc2c7103a6a45d0eb0b8ae26",
	"_format": "hh-sol-build-info-1",
	"solcVersion": "0.8.18",
	"solcLongVersion": "0.8.18+commit.87f61d96",
	"input": {
		"language": "Solidity",
		"sources": {
			"contracts/NFTStaking.sol": {
				"content": "// SPDX-License-Identifier: MIT\n\npragma solidity ^0.8.4;\n\nimport \"@openzeppelin/contracts/token/ERC20/IERC20.sol\";\nimport \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\";\nimport \"@openzeppelin/contracts/token/ERC721/IERC721.sol\";\nimport \"@openzeppelin/contracts/access/Ownable.sol\";\nimport \"@openzeppelin/contracts/security/ReentrancyGuard.sol\";\n\n// https://deflydogs.s3.us-east-2.amazonaws.com/d3o6g4s8/skooty/jsons/skooty_corgi.json\n// @title Moon Rabbits NFT Staking \n// @author OctaLoop\n\ncontract MoonRabbitsStaking is Ownable, ReentrancyGuard {\n\n    //NFT Contract\n    IERC721 public NFTCollection;\n\n    //Token Contract\n    IERC20 public rewardToken;\n\n    // Index of staking\n    uint256 public index = 0;\n\n    using SafeERC20 for IERC20;\n    uint256 private totalTokens;\n\n    struct Staker {\n        uint256 index;\n        address user;\n        uint256 tokenId;\n        uint256 pool;\n        uint256 timestamp;\n    }\n\n    mapping(uint256 => Staker) public stakes;\n    mapping(address => uint256[]) public staking_details;\n    mapping(address => uint256[]) public unstaking_details;\n\n    constructor(address _RewardToken,address _NFTCollection) {\n        rewardToken = IERC20(_RewardToken);\n        NFTCollection = IERC721(_NFTCollection);\n    }\n\n    event Stake(address indexed owner, uint256 id, uint256 pool, uint256 time);\n    event UnStake(address indexed owner, uint256 id, uint256 pool, uint256 time, uint256 rewardTokens);\n\n    /**\n     * Calculate reward for the user's pool\n     * @param _pool Pool of NFT\n     */\n    function calculateRewardPool(uint256 _pool) private pure returns(uint256)  {\n        if(_pool==7) {\n            return 1000;\n        } else if(_pool==14) {\n            return 3000;\n        } else if(_pool==30) {\n            return 5000;\n        } else {\n            return 10000;\n        }\n    }\n\n    /**\n     * Create a new staking for a specific user\n     * @param _tokenId Token Id of NFT to stake\n     * @param _pool Pool of NFT\n     */\n    function stakeNFT(uint256 _tokenId, uint256 _pool) public {\n        require(NFTCollection.ownerOf(_tokenId) == msg.sender,\"Can't stake nft you don't own!\");\n        stakes[index] = Staker(index,msg.sender,_tokenId, _pool, block.timestamp);\n        staking_details[msg.sender].push(index);\n        NFTCollection.transferFrom(msg.sender, address(this), _tokenId);\n        index++;\n        emit Stake(msg.sender, _tokenId, _pool, block.timestamp);\n    }\n\n    /**\n     * Unstake the NFT and rewards user if pool is completed\n     * @param _tokenId Token Id of NFT to stake\n     * @param _pool Pool of NFT\n     */\n    function unStakeNFT(uint256 _index,uint256 _tokenId, uint256 _pool) public {\n        require((block.timestamp - stakes[_index].timestamp) / 60 / 60 / 24 >= _pool,\"Staking pool not ended yet!!!!\");\n        require(stakes[_index].user == msg.sender,\"You are not owner of this NFT staking\");\n        delete stakes[_index];\n        unstaking_details[msg.sender].push(_index);\n        NFTCollection.transferFrom( address(this), msg.sender, _tokenId);\n        uint256 reward =  calculateRewardPool(_pool);\n        rewardToken.transfer( msg.sender, reward);\n        emit UnStake(msg.sender, _tokenId, _pool,  block.timestamp, reward);\n    }\n\n    /**\n     * Get user's staking list\n     * @param _user Address of the user\n     */\n    function userStakingList(address _user)\n        public\n        view\n        returns (uint256[] memory)\n    {\n        uint256[] memory list = staking_details[_user];\n        return list;\n    }\n\n    /**\n     * Check if nft index is already unstaked\n      * @param _tempIndex of the nft\n      * @param _user of the user\n     */\n    function checkIfAlreadyUnstaked(uint256 _tempIndex,address _user) public view returns(bool) {\n        for (uint j=0; j < unstaking_details[_user].length; j++) {\n            if(unstaking_details[_user][j]==_tempIndex){\n                    return true;\n            }\n        }  \n        return false;\n    }\n}"
			},
			"@openzeppelin/contracts/security/ReentrancyGuard.sol": {
				"content": "// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v4.8.0) (security/ReentrancyGuard.sol)\n\npragma solidity ^0.8.0;\n\n/**\n * @dev Contract module that helps prevent reentrant calls to a function.\n *\n * Inheriting from `ReentrancyGuard` will make the {nonReentrant} modifier\n * available, which can be applied to functions to make sure there are no nested\n * (reentrant) calls to them.\n *\n * Note that because there is a single `nonReentrant` guard, functions marked as\n * `nonReentrant` may not call one another. This can be worked around by making\n * those functions `private`, and then adding `external` `nonReentrant` entry\n * points to them.\n *\n * TIP: If you would like to learn more about reentrancy and alternative ways\n * to protect against it, check out our blog post\n * https://blog.openzeppelin.com/reentrancy-after-istanbul/[Reentrancy After Istanbul].\n */\nabstract contract ReentrancyGuard {\n    // Booleans are more expensive than uint256 or any type that takes up a full\n    // word because each write operation emits an extra SLOAD to first read the\n    // slot's contents, replace the bits taken up by the boolean, and then write\n    // back. This is the compiler's defense against contract upgrades and\n    // pointer aliasing, and it cannot be disabled.\n\n    // The values being non-zero value makes deployment a bit more expensive,\n    // but in exchange the refund on every call to nonReentrant will be lower in\n    // amount. Since refunds are capped to a percentage of the total\n    // transaction's gas, it is best to keep them low in cases like this one, to\n    // increase the likelihood of the full refund coming into effect.\n    uint256 private constant _NOT_ENTERED = 1;\n    uint256 private constant _ENTERED = 2;\n\n    uint256 private _status;\n\n    constructor() {\n        _status = _NOT_ENTERED;\n    }\n\n    /**\n     * @dev Prevents a contract from calling itself, directly or indirectly.\n     * Calling a `nonReentrant` function from another `nonReentrant`\n     * function is not supported. It is possible to prevent this from happening\n     * by making the `nonReentrant` function external, and making it call a\n     * `private` function that does the actual work.\n     */\n    modifier nonReentrant() {\n        _nonReentrantBefore();\n        _;\n        _nonReentrantAfter();\n    }\n\n    function _nonReentrantBefore() private {\n        // On the first call to nonReentrant, _status will be _NOT_ENTERED\n        require(_status != _ENTERED, \"ReentrancyGuard: reentrant call\");\n\n        // Any calls to nonReentrant after this point will fail\n        _status = _ENTERED;\n    }\n\n    function _nonReentrantAfter() private {\n        // By storing the original value once again, a refund is triggered (see\n        // https://eips.ethereum.org/EIPS/eip-2200)\n        _status = _NOT_ENTERED;\n    }\n}\n"
			},
			"@openzeppelin/contracts/access/Ownable.sol": {
				"content": "// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v4.7.0) (access/Ownable.sol)\n\npragma solidity ^0.8.0;\n\nimport \"../utils/Context.sol\";\n\n/**\n * @dev Contract module which provides a basic access control mechanism, where\n * there is an account (an owner) that can be granted exclusive access to\n * specific functions.\n *\n * By default, the owner account will be the one that deploys the contract. This\n * can later be changed with {transferOwnership}.\n *\n * This module is used through inheritance. It will make available the modifier\n * `onlyOwner`, which can be applied to your functions to restrict their use to\n * the owner.\n */\nabstract contract Ownable is Context {\n    address private _owner;\n\n    event OwnershipTransferred(address indexed previousOwner, address indexed newOwner);\n\n    /**\n     * @dev Initializes the contract setting the deployer as the initial owner.\n     */\n    constructor() {\n        _transferOwnership(_msgSender());\n    }\n\n    /**\n     * @dev Throws if called by any account other than the owner.\n     */\n    modifier onlyOwner() {\n        _checkOwner();\n        _;\n    }\n\n    /**\n     * @dev Returns the address of the current owner.\n     */\n    function owner() public view virtual returns (address) {\n        return _owner;\n    }\n\n    /**\n     * @dev Throws if the sender is not the owner.\n     */\n    function _checkOwner() internal view virtual {\n        require(owner() == _msgSender(), \"Ownable: caller is not the owner\");\n    }\n\n    /**\n     * @dev Leaves the contract without owner. It will not be possible to call\n     * `onlyOwner` functions anymore. Can only be called by the current owner.\n     *\n     * NOTE: Renouncing ownership will leave the contract without an owner,\n     * thereby removing any functionality that is only available to the owner.\n     */\n    function renounceOwnership() public virtual onlyOwner {\n        _transferOwnership(address(0));\n    }\n\n    /**\n     * @dev Transfers ownership of the contract to a new account (`newOwner`).\n     * Can only be called by the current owner.\n     */\n    function transferOwnership(address newOwner) public virtual onlyOwner {\n        require(newOwner != address(0), \"Ownable: new owner is the zero address\");\n        _transferOwnership(newOwner);\n    }\n\n    /**\n     * @dev Transfers ownership of the contract to a new account (`newOwner`).\n     * Internal function without access restriction.\n     */\n    function _transferOwnership(address newOwner) internal virtual {\n        address oldOwner = _owner;\n        _owner = newOwner;\n        emit OwnershipTransferred(oldOwner, newOwner);\n    }\n}\n"
			},
			"@openzeppelin/contracts/token/ERC721/IERC721.sol": {
				"content": "// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v4.8.0) (token/ERC721/IERC721.sol)\n\npragma solidity ^0.8.0;\n\nimport \"../../utils/introspection/IERC165.sol\";\n\n/**\n * @dev Required interface of an ERC721 compliant contract.\n */\ninterface IERC721 is IERC165 {\n    /**\n     * @dev Emitted when `tokenId` token is transferred from `from` to `to`.\n     */\n    event Transfer(address indexed from, address indexed to, uint256 indexed tokenId);\n\n    /**\n     * @dev Emitted when `owner` enables `approved` to manage the `tokenId` token.\n     */\n    event Approval(address indexed owner, address indexed approved, uint256 indexed tokenId);\n\n    /**\n     * @dev Emitted when `owner` enables or disables (`approved`) `operator` to manage all of its assets.\n     */\n    event ApprovalForAll(address indexed owner, address indexed operator, bool approved);\n\n    /**\n     * @dev Returns the number of tokens in ``owner``'s account.\n     */\n    function balanceOf(address owner) external view returns (uint256 balance);\n\n    /**\n     * @dev Returns the owner of the `tokenId` token.\n     *\n     * Requirements:\n     *\n     * - `tokenId` must exist.\n     */\n    function ownerOf(uint256 tokenId) external view returns (address owner);\n\n    /**\n     * @dev Safely transfers `tokenId` token from `from` to `to`.\n     *\n     * Requirements:\n     *\n     * - `from` cannot be the zero address.\n     * - `to` cannot be the zero address.\n     * - `tokenId` token must exist and be owned by `from`.\n     * - If the caller is not `from`, it must be approved to move this token by either {approve} or {setApprovalForAll}.\n     * - If `to` refers to a smart contract, it must implement {IERC721Receiver-onERC721Received}, which is called upon a safe transfer.\n     *\n     * Emits a {Transfer} event.\n     */\n    function safeTransferFrom(\n        address from,\n        address to,\n        uint256 tokenId,\n        bytes calldata data\n    ) external;\n\n    /**\n     * @dev Safely transfers `tokenId` token from `from` to `to`, checking first that contract recipients\n     * are aware of the ERC721 protocol to prevent tokens from being forever locked.\n     *\n     * Requirements:\n     *\n     * - `from` cannot be the zero address.\n     * - `to` cannot be the zero address.\n     * - `tokenId` token must exist and be owned by `from`.\n     * - If the caller is not `from`, it must have been allowed to move this token by either {approve} or {setApprovalForAll}.\n     * - If `to` refers to a smart contract, it must implement {IERC721Receiver-onERC721Received}, which is called upon a safe transfer.\n     *\n     * Emits a {Transfer} event.\n     */\n    function safeTransferFrom(\n        address from,\n        address to,\n        uint256 tokenId\n    ) external;\n\n    /**\n     * @dev Transfers `tokenId` token from `from` to `to`.\n     *\n     * WARNING: Note that the caller is responsible to confirm that the recipient is capable of receiving ERC721\n     * or else they may be permanently lost. Usage of {safeTransferFrom} prevents loss, though the caller must\n     * understand this adds an external call which potentially creates a reentrancy vulnerability.\n     *\n     * Requirements:\n     *\n     * - `from` cannot be the zero address.\n     * - `to` cannot be the zero address.\n     * - `tokenId` token must be owned by `from`.\n     * - If the caller is not `from`, it must be approved to move this token by either {approve} or {setApprovalForAll}.\n     *\n     * Emits a {Transfer} event.\n     */\n    function transferFrom(\n        address from,\n        address to,\n        uint256 tokenId\n    ) external;\n\n    /**\n     * @dev Gives permission to `to` to transfer `tokenId` token to another account.\n     * The approval is cleared when the token is transferred.\n     *\n     * Only a single account can be approved at a time, so approving the zero address clears previous approvals.\n     *\n     * Requirements:\n     *\n     * - The caller must own the token or be an approved operator.\n     * - `tokenId` must exist.\n     *\n     * Emits an {Approval} event.\n     */\n    function approve(address to, uint256 tokenId) external;\n\n    /**\n     * @dev Approve or remove `operator` as an operator for the caller.\n     * Operators can call {transferFrom} or {safeTransferFrom} for any token owned by the caller.\n     *\n     * Requirements:\n     *\n     * - The `operator` cannot be the caller.\n     *\n     * Emits an {ApprovalForAll} event.\n     */\n    function setApprovalForAll(address operator, bool _approved) external;\n\n    /**\n     * @dev Returns the account approved for `tokenId` token.\n     *\n     * Requirements:\n     *\n     * - `tokenId` must exist.\n     */\n    function getApproved(uint256 tokenId) external view returns (address operator);\n\n    /**\n     * @dev Returns if the `operator` is allowed to manage all of the assets of `owner`.\n     *\n     * See {setApprovalForAll}\n     */\n    function isApprovedForAll(address owner, address operator) external view returns (bool);\n}\n"
			},
			"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol": {
				"content": "// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v4.8.0) (token/ERC20/utils/SafeERC20.sol)\n\npragma solidity ^0.8.0;\n\nimport \"../IERC20.sol\";\nimport \"../extensions/draft-IERC20Permit.sol\";\nimport \"../../../utils/Address.sol\";\n\n/**\n * @title SafeERC20\n * @dev Wrappers around ERC20 operations that throw on failure (when the token\n * contract returns false). Tokens that return no value (and instead revert or\n * throw on failure) are also supported, non-reverting calls are assumed to be\n * successful.\n * To use this library you can add a `using SafeERC20 for IERC20;` statement to your contract,\n * which allows you to call the safe operations as `token.safeTransfer(...)`, etc.\n */\nlibrary SafeERC20 {\n    using Address for address;\n\n    function safeTransfer(\n        IERC20 token,\n        address to,\n        uint256 value\n    ) internal {\n        _callOptionalReturn(token, abi.encodeWithSelector(token.transfer.selector, to, value));\n    }\n\n    function safeTransferFrom(\n        IERC20 token,\n        address from,\n        address to,\n        uint256 value\n    ) internal {\n        _callOptionalReturn(token, abi.encodeWithSelector(token.transferFrom.selector, from, to, value));\n    }\n\n    /**\n     * @dev Deprecated. This function has issues similar to the ones found in\n     * {IERC20-approve}, and its usage is discouraged.\n     *\n     * Whenever possible, use {safeIncreaseAllowance} and\n     * {safeDecreaseAllowance} instead.\n     */\n    function safeApprove(\n        IERC20 token,\n        address spender,\n        uint256 value\n    ) internal {\n        // safeApprove should only be called when setting an initial allowance,\n        // or when resetting it to zero. To increase and decrease it, use\n        // 'safeIncreaseAllowance' and 'safeDecreaseAllowance'\n        require(\n            (value == 0) || (token.allowance(address(this), spender) == 0),\n            \"SafeERC20: approve from non-zero to non-zero allowance\"\n        );\n        _callOptionalReturn(token, abi.encodeWithSelector(token.approve.selector, spender, value));\n    }\n\n    function safeIncreaseAllowance(\n        IERC20 token,\n        address spender,\n        uint256 value\n    ) internal {\n        uint256 newAllowance = token.allowance(address(this), spender) + value;\n        _callOptionalReturn(token, abi.encodeWithSelector(token.approve.selector, spender, newAllowance));\n    }\n\n    function safeDecreaseAllowance(\n        IERC20 token,\n        address spender,\n        uint256 value\n    ) internal {\n        unchecked {\n            uint256 oldAllowance = token.allowance(address(this), spender);\n            require(oldAllowance >= value, \"SafeERC20: decreased allowance below zero\");\n            uint256 newAllowance = oldAllowance - value;\n            _callOptionalReturn(token, abi.encodeWithSelector(token.approve.selector, spender, newAllowance));\n        }\n    }\n\n    function safePermit(\n        IERC20Permit token,\n        address owner,\n        address spender,\n        uint256 value,\n        uint256 deadline,\n        uint8 v,\n        bytes32 r,\n        bytes32 s\n    ) internal {\n        uint256 nonceBefore = token.nonces(owner);\n        token.permit(owner, spender, value, deadline, v, r, s);\n        uint256 nonceAfter = token.nonces(owner);\n        require(nonceAfter == nonceBefore + 1, \"SafeERC20: permit did not succeed\");\n    }\n\n    /**\n     * @dev Imitates a Solidity high-level call (i.e. a regular function call to a contract), relaxing the requirement\n     * on the return value: the return value is optional (but if data is returned, it must not be false).\n     * @param token The token targeted by the call.\n     * @param data The call data (encoded using abi.encode or one of its variants).\n     */\n    function _callOptionalReturn(IERC20 token, bytes memory data) private {\n        // We need to perform a low level call here, to bypass Solidity's return data size checking mechanism, since\n        // we're implementing it ourselves. We use {Address-functionCall} to perform this call, which verifies that\n        // the target address contains contract code and also asserts for success in the low-level call.\n\n        bytes memory returndata = address(token).functionCall(data, \"SafeERC20: low-level call failed\");\n        if (returndata.length > 0) {\n            // Return data is optional\n            require(abi.decode(returndata, (bool)), \"SafeERC20: ERC20 operation did not succeed\");\n        }\n    }\n}\n"
			},
			"@openzeppelin/contracts/token/ERC20/IERC20.sol": {
				"content": "// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v4.6.0) (token/ERC20/IERC20.sol)\n\npragma solidity ^0.8.0;\n\n/**\n * @dev Interface of the ERC20 standard as defined in the EIP.\n */\ninterface IERC20 {\n    /**\n     * @dev Emitted when `value` tokens are moved from one account (`from`) to\n     * another (`to`).\n     *\n     * Note that `value` may be zero.\n     */\n    event Transfer(address indexed from, address indexed to, uint256 value);\n\n    /**\n     * @dev Emitted when the allowance of a `spender` for an `owner` is set by\n     * a call to {approve}. `value` is the new allowance.\n     */\n    event Approval(address indexed owner, address indexed spender, uint256 value);\n\n    /**\n     * @dev Returns the amount of tokens in existence.\n     */\n    function totalSupply() external view returns (uint256);\n\n    /**\n     * @dev Returns the amount of tokens owned by `account`.\n     */\n    function balanceOf(address account) external view returns (uint256);\n\n    /**\n     * @dev Moves `amount` tokens from the caller's account to `to`.\n     *\n     * Returns a boolean value indicating whether the operation succeeded.\n     *\n     * Emits a {Transfer} event.\n     */\n    function transfer(address to, uint256 amount) external returns (bool);\n\n    /**\n     * @dev Returns the remaining number of tokens that `spender` will be\n     * allowed to spend on behalf of `owner` through {transferFrom}. This is\n     * zero by default.\n     *\n     * This value changes when {approve} or {transferFrom} are called.\n     */\n    function allowance(address owner, address spender) external view returns (uint256);\n\n    /**\n     * @dev Sets `amount` as the allowance of `spender` over the caller's tokens.\n     *\n     * Returns a boolean value indicating whether the operation succeeded.\n     *\n     * IMPORTANT: Beware that changing an allowance with this method brings the risk\n     * that someone may use both the old and the new allowance by unfortunate\n     * transaction ordering. One possible solution to mitigate this race\n     * condition is to first reduce the spender's allowance to 0 and set the\n     * desired value afterwards:\n     * https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729\n     *\n     * Emits an {Approval} event.\n     */\n    function approve(address spender, uint256 amount) external returns (bool);\n\n    /**\n     * @dev Moves `amount` tokens from `from` to `to` using the\n     * allowance mechanism. `amount` is then deducted from the caller's\n     * allowance.\n     *\n     * Returns a boolean value indicating whether the operation succeeded.\n     *\n     * Emits a {Transfer} event.\n     */\n    function transferFrom(\n        address from,\n        address to,\n        uint256 amount\n    ) external returns (bool);\n}\n"
			},
			"@openzeppelin/contracts/utils/introspection/IERC165.sol": {
				"content": "// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts v4.4.1 (utils/introspection/IERC165.sol)\n\npragma solidity ^0.8.0;\n\n/**\n * @dev Interface of the ERC165 standard, as defined in the\n * https://eips.ethereum.org/EIPS/eip-165[EIP].\n *\n * Implementers can declare support of contract interfaces, which can then be\n * queried by others ({ERC165Checker}).\n *\n * For an implementation, see {ERC165}.\n */\ninterface IERC165 {\n    /**\n     * @dev Returns true if this contract implements the interface defined by\n     * `interfaceId`. See the corresponding\n     * https://eips.ethereum.org/EIPS/eip-165#how-interfaces-are-identified[EIP section]\n     * to learn more about how these ids are created.\n     *\n     * This function call must use less than 30 000 gas.\n     */\n    function supportsInterface(bytes4 interfaceId) external view returns (bool);\n}\n"
			},
			"@openzeppelin/contracts/utils/Address.sol": {
				"content": "// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v4.8.0) (utils/Address.sol)\n\npragma solidity ^0.8.1;\n\n/**\n * @dev Collection of functions related to the address type\n */\nlibrary Address {\n    /**\n     * @dev Returns true if `account` is a contract.\n     *\n     * [IMPORTANT]\n     * ====\n     * It is unsafe to assume that an address for which this function returns\n     * false is an externally-owned account (EOA) and not a contract.\n     *\n     * Among others, `isContract` will return false for the following\n     * types of addresses:\n     *\n     *  - an externally-owned account\n     *  - a contract in construction\n     *  - an address where a contract will be created\n     *  - an address where a contract lived, but was destroyed\n     * ====\n     *\n     * [IMPORTANT]\n     * ====\n     * You shouldn't rely on `isContract` to protect against flash loan attacks!\n     *\n     * Preventing calls from contracts is highly discouraged. It breaks composability, breaks support for smart wallets\n     * like Gnosis Safe, and does not provide security since it can be circumvented by calling from a contract\n     * constructor.\n     * ====\n     */\n    function isContract(address account) internal view returns (bool) {\n        // This method relies on extcodesize/address.code.length, which returns 0\n        // for contracts in construction, since the code is only stored at the end\n        // of the constructor execution.\n\n        return account.code.length > 0;\n    }\n\n    /**\n     * @dev Replacement for Solidity's `transfer`: sends `amount` wei to\n     * `recipient`, forwarding all available gas and reverting on errors.\n     *\n     * https://eips.ethereum.org/EIPS/eip-1884[EIP1884] increases the gas cost\n     * of certain opcodes, possibly making contracts go over the 2300 gas limit\n     * imposed by `transfer`, making them unable to receive funds via\n     * `transfer`. {sendValue} removes this limitation.\n     *\n     * https://diligence.consensys.net/posts/2019/09/stop-using-soliditys-transfer-now/[Learn more].\n     *\n     * IMPORTANT: because control is transferred to `recipient`, care must be\n     * taken to not create reentrancy vulnerabilities. Consider using\n     * {ReentrancyGuard} or the\n     * https://solidity.readthedocs.io/en/v0.5.11/security-considerations.html#use-the-checks-effects-interactions-pattern[checks-effects-interactions pattern].\n     */\n    function sendValue(address payable recipient, uint256 amount) internal {\n        require(address(this).balance >= amount, \"Address: insufficient balance\");\n\n        (bool success, ) = recipient.call{value: amount}(\"\");\n        require(success, \"Address: unable to send value, recipient may have reverted\");\n    }\n\n    /**\n     * @dev Performs a Solidity function call using a low level `call`. A\n     * plain `call` is an unsafe replacement for a function call: use this\n     * function instead.\n     *\n     * If `target` reverts with a revert reason, it is bubbled up by this\n     * function (like regular Solidity function calls).\n     *\n     * Returns the raw returned data. To convert to the expected return value,\n     * use https://solidity.readthedocs.io/en/latest/units-and-global-variables.html?highlight=abi.decode#abi-encoding-and-decoding-functions[`abi.decode`].\n     *\n     * Requirements:\n     *\n     * - `target` must be a contract.\n     * - calling `target` with `data` must not revert.\n     *\n     * _Available since v3.1._\n     */\n    function functionCall(address target, bytes memory data) internal returns (bytes memory) {\n        return functionCallWithValue(target, data, 0, \"Address: low-level call failed\");\n    }\n\n    /**\n     * @dev Same as {xref-Address-functionCall-address-bytes-}[`functionCall`], but with\n     * `errorMessage` as a fallback revert reason when `target` reverts.\n     *\n     * _Available since v3.1._\n     */\n    function functionCall(\n        address target,\n        bytes memory data,\n        string memory errorMessage\n    ) internal returns (bytes memory) {\n        return functionCallWithValue(target, data, 0, errorMessage);\n    }\n\n    /**\n     * @dev Same as {xref-Address-functionCall-address-bytes-}[`functionCall`],\n     * but also transferring `value` wei to `target`.\n     *\n     * Requirements:\n     *\n     * - the calling contract must have an ETH balance of at least `value`.\n     * - the called Solidity function must be `payable`.\n     *\n     * _Available since v3.1._\n     */\n    function functionCallWithValue(\n        address target,\n        bytes memory data,\n        uint256 value\n    ) internal returns (bytes memory) {\n        return functionCallWithValue(target, data, value, \"Address: low-level call with value failed\");\n    }\n\n    /**\n     * @dev Same as {xref-Address-functionCallWithValue-address-bytes-uint256-}[`functionCallWithValue`], but\n     * with `errorMessage` as a fallback revert reason when `target` reverts.\n     *\n     * _Available since v3.1._\n     */\n    function functionCallWithValue(\n        address target,\n        bytes memory data,\n        uint256 value,\n        string memory errorMessage\n    ) internal returns (bytes memory) {\n        require(address(this).balance >= value, \"Address: insufficient balance for call\");\n        (bool success, bytes memory returndata) = target.call{value: value}(data);\n        return verifyCallResultFromTarget(target, success, returndata, errorMessage);\n    }\n\n    /**\n     * @dev Same as {xref-Address-functionCall-address-bytes-}[`functionCall`],\n     * but performing a static call.\n     *\n     * _Available since v3.3._\n     */\n    function functionStaticCall(address target, bytes memory data) internal view returns (bytes memory) {\n        return functionStaticCall(target, data, \"Address: low-level static call failed\");\n    }\n\n    /**\n     * @dev Same as {xref-Address-functionCall-address-bytes-string-}[`functionCall`],\n     * but performing a static call.\n     *\n     * _Available since v3.3._\n     */\n    function functionStaticCall(\n        address target,\n        bytes memory data,\n        string memory errorMessage\n    ) internal view returns (bytes memory) {\n        (bool success, bytes memory returndata) = target.staticcall(data);\n        return verifyCallResultFromTarget(target, success, returndata, errorMessage);\n    }\n\n    /**\n     * @dev Same as {xref-Address-functionCall-address-bytes-}[`functionCall`],\n     * but performing a delegate call.\n     *\n     * _Available since v3.4._\n     */\n    function functionDelegateCall(address target, bytes memory data) internal returns (bytes memory) {\n        return functionDelegateCall(target, data, \"Address: low-level delegate call failed\");\n    }\n\n    /**\n     * @dev Same as {xref-Address-functionCall-address-bytes-string-}[`functionCall`],\n     * but performing a delegate call.\n     *\n     * _Available since v3.4._\n     */\n    function functionDelegateCall(\n        address target,\n        bytes memory data,\n        string memory errorMessage\n    ) internal returns (bytes memory) {\n        (bool success, bytes memory returndata) = target.delegatecall(data);\n        return verifyCallResultFromTarget(target, success, returndata, errorMessage);\n    }\n\n    /**\n     * @dev Tool to verify that a low level call to smart-contract was successful, and revert (either by bubbling\n     * the revert reason or using the provided one) in case of unsuccessful call or if target was not a contract.\n     *\n     * _Available since v4.8._\n     */\n    function verifyCallResultFromTarget(\n        address target,\n        bool success,\n        bytes memory returndata,\n        string memory errorMessage\n    ) internal view returns (bytes memory) {\n        if (success) {\n            if (returndata.length == 0) {\n                // only check isContract if the call was successful and the return data is empty\n                // otherwise we already know that it was a contract\n                require(isContract(target), \"Address: call to non-contract\");\n            }\n            return returndata;\n        } else {\n            _revert(returndata, errorMessage);\n        }\n    }\n\n    /**\n     * @dev Tool to verify that a low level call was successful, and revert if it wasn't, either by bubbling the\n     * revert reason or using the provided one.\n     *\n     * _Available since v4.3._\n     */\n    function verifyCallResult(\n        bool success,\n        bytes memory returndata,\n        string memory errorMessage\n    ) internal pure returns (bytes memory) {\n        if (success) {\n            return returndata;\n        } else {\n            _revert(returndata, errorMessage);\n        }\n    }\n\n    function _revert(bytes memory returndata, string memory errorMessage) private pure {\n        // Look for revert reason and bubble it up if present\n        if (returndata.length > 0) {\n            // The easiest way to bubble the revert reason is using memory via assembly\n            /// @solidity memory-safe-assembly\n            assembly {\n                let returndata_size := mload(returndata)\n                revert(add(32, returndata), returndata_size)\n            }\n        } else {\n            revert(errorMessage);\n        }\n    }\n}\n"
			},
			"@openzeppelin/contracts/token/ERC20/extensions/draft-IERC20Permit.sol": {
				"content": "// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts v4.4.1 (token/ERC20/extensions/draft-IERC20Permit.sol)\n\npragma solidity ^0.8.0;\n\n/**\n * @dev Interface of the ERC20 Permit extension allowing approvals to be made via signatures, as defined in\n * https://eips.ethereum.org/EIPS/eip-2612[EIP-2612].\n *\n * Adds the {permit} method, which can be used to change an account's ERC20 allowance (see {IERC20-allowance}) by\n * presenting a message signed by the account. By not relying on {IERC20-approve}, the token holder account doesn't\n * need to send a transaction, and thus is not required to hold Ether at all.\n */\ninterface IERC20Permit {\n    /**\n     * @dev Sets `value` as the allowance of `spender` over ``owner``'s tokens,\n     * given ``owner``'s signed approval.\n     *\n     * IMPORTANT: The same issues {IERC20-approve} has related to transaction\n     * ordering also apply here.\n     *\n     * Emits an {Approval} event.\n     *\n     * Requirements:\n     *\n     * - `spender` cannot be the zero address.\n     * - `deadline` must be a timestamp in the future.\n     * - `v`, `r` and `s` must be a valid `secp256k1` signature from `owner`\n     * over the EIP712-formatted function arguments.\n     * - the signature must use ``owner``'s current nonce (see {nonces}).\n     *\n     * For more information on the signature format, see the\n     * https://eips.ethereum.org/EIPS/eip-2612#specification[relevant EIP\n     * section].\n     */\n    function permit(\n        address owner,\n        address spender,\n        uint256 value,\n        uint256 deadline,\n        uint8 v,\n        bytes32 r,\n        bytes32 s\n    ) external;\n\n    /**\n     * @dev Returns the current nonce for `owner`. This value must be\n     * included whenever a signature is generated for {permit}.\n     *\n     * Every successful call to {permit} increases ``owner``'s nonce by one. This\n     * prevents a signature from being used multiple times.\n     */\n    function nonces(address owner) external view returns (uint256);\n\n    /**\n     * @dev Returns the domain separator used in the encoding of the signature for {permit}, as defined by {EIP712}.\n     */\n    // solhint-disable-next-line func-name-mixedcase\n    function DOMAIN_SEPARATOR() external view returns (bytes32);\n}\n"
			},
			"@openzeppelin/contracts/utils/Context.sol": {
				"content": "// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts v4.4.1 (utils/Context.sol)\n\npragma solidity ^0.8.0;\n\n/**\n * @dev Provides information about the current execution context, including the\n * sender of the transaction and its data. While these are generally available\n * via msg.sender and msg.data, they should not be accessed in such a direct\n * manner, since when dealing with meta-transactions the account sending and\n * paying for execution may not be the actual sender (as far as an application\n * is concerned).\n *\n * This contract is only required for intermediate, library-like contracts.\n */\nabstract contract Context {\n    function _msgSender() internal view virtual returns (address) {\n        return msg.sender;\n    }\n\n    function _msgData() internal view virtual returns (bytes calldata) {\n        return msg.data;\n    }\n}\n"
			}
		},
		"settings": {
			"optimizer": {
				"enabled": false,
				"runs": 200
			},
			"outputSelection": {
				"*": {
					"": [
						"ast"
					],
					"*": [
						"abi",
						"metadata",
						"devdoc",
						"userdoc",
						"storageLayout",
						"evm.legacyAssembly",
						"evm.bytecode",
						"evm.deployedBytecode",
						"evm.methodIdentifiers",
						"evm.gasEstimates",
						"evm.assembly"
					]
				}
			}
		}
	},
	"output": {
		"contracts": {
			"@openzeppelin/contracts/access/Ownable.sol": {
				"Ownable": {
					"abi": [
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "previousOwner",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "newOwner",
									"type": "address"
								}
							],
							"name": "OwnershipTransferred",
							"type": "event"
						},
						{
							"inputs": [],
							"name": "owner",
							"outputs": [
								{
									"internalType": "address",
									"name": "",
									"type": "address"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "renounceOwnership",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "newOwner",
									"type": "address"
								}
							],
							"name": "transferOwnership",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						}
					],
					"devdoc": {
						"details": "Contract module which provides a basic access control mechanism, where there is an account (an owner) that can be granted exclusive access to specific functions. By default, the owner account will be the one that deploys the contract. This can later be changed with {transferOwnership}. This module is used through inheritance. It will make available the modifier `onlyOwner`, which can be applied to your functions to restrict their use to the owner.",
						"kind": "dev",
						"methods": {
							"constructor": {
								"details": "Initializes the contract setting the deployer as the initial owner."
							},
							"owner()": {
								"details": "Returns the address of the current owner."
							},
							"renounceOwnership()": {
								"details": "Leaves the contract without owner. It will not be possible to call `onlyOwner` functions anymore. Can only be called by the current owner. NOTE: Renouncing ownership will leave the contract without an owner, thereby removing any functionality that is only available to the owner."
							},
							"transferOwnership(address)": {
								"details": "Transfers ownership of the contract to a new account (`newOwner`). Can only be called by the current owner."
							}
						},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {
							"owner()": "8da5cb5b",
							"renounceOwnership()": "715018a6",
							"transferOwnership(address)": "f2fde38b"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.18+commit.87f61d96\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"previousOwner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"OwnershipTransferred\",\"type\":\"event\"},{\"inputs\":[],\"name\":\"owner\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"renounceOwnership\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"transferOwnership\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"Contract module which provides a basic access control mechanism, where there is an account (an owner) that can be granted exclusive access to specific functions. By default, the owner account will be the one that deploys the contract. This can later be changed with {transferOwnership}. This module is used through inheritance. It will make available the modifier `onlyOwner`, which can be applied to your functions to restrict their use to the owner.\",\"kind\":\"dev\",\"methods\":{\"constructor\":{\"details\":\"Initializes the contract setting the deployer as the initial owner.\"},\"owner()\":{\"details\":\"Returns the address of the current owner.\"},\"renounceOwnership()\":{\"details\":\"Leaves the contract without owner. It will not be possible to call `onlyOwner` functions anymore. Can only be called by the current owner. NOTE: Renouncing ownership will leave the contract without an owner, thereby removing any functionality that is only available to the owner.\"},\"transferOwnership(address)\":{\"details\":\"Transfers ownership of the contract to a new account (`newOwner`). Can only be called by the current owner.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/access/Ownable.sol\":\"Ownable\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/access/Ownable.sol\":{\"keccak256\":\"0xa94b34880e3c1b0b931662cb1c09e5dfa6662f31cba80e07c5ee71cd135c9673\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://40fb1b5102468f783961d0af743f91b9980cf66b50d1d12009f6bb1869cea4d2\",\"dweb:/ipfs/QmYqEbJML4jB1GHbzD4cUZDtJg5wVwNm3vDJq1GbyDus8y\"]},\"@openzeppelin/contracts/utils/Context.sol\":{\"keccak256\":\"0xe2e337e6dde9ef6b680e07338c493ebea1b5fd09b43424112868e9cc1706bca7\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://6df0ddf21ce9f58271bdfaa85cde98b200ef242a05a3f85c2bc10a8294800a92\",\"dweb:/ipfs/QmRK2Y5Yc6BK7tGKkgsgn3aJEQGi5aakeSPZvS65PV8Xp3\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [
							{
								"astId": 7,
								"contract": "@openzeppelin/contracts/access/Ownable.sol:Ownable",
								"label": "_owner",
								"offset": 0,
								"slot": "0",
								"type": "t_address"
							}
						],
						"types": {
							"t_address": {
								"encoding": "inplace",
								"label": "address",
								"numberOfBytes": "20"
							}
						}
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"@openzeppelin/contracts/security/ReentrancyGuard.sol": {
				"ReentrancyGuard": {
					"abi": [],
					"devdoc": {
						"details": "Contract module that helps prevent reentrant calls to a function. Inheriting from `ReentrancyGuard` will make the {nonReentrant} modifier available, which can be applied to functions to make sure there are no nested (reentrant) calls to them. Note that because there is a single `nonReentrant` guard, functions marked as `nonReentrant` may not call one another. This can be worked around by making those functions `private`, and then adding `external` `nonReentrant` entry points to them. TIP: If you would like to learn more about reentrancy and alternative ways to protect against it, check out our blog post https://blog.openzeppelin.com/reentrancy-after-istanbul/[Reentrancy After Istanbul].",
						"kind": "dev",
						"methods": {},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.18+commit.87f61d96\"},\"language\":\"Solidity\",\"output\":{\"abi\":[],\"devdoc\":{\"details\":\"Contract module that helps prevent reentrant calls to a function. Inheriting from `ReentrancyGuard` will make the {nonReentrant} modifier available, which can be applied to functions to make sure there are no nested (reentrant) calls to them. Note that because there is a single `nonReentrant` guard, functions marked as `nonReentrant` may not call one another. This can be worked around by making those functions `private`, and then adding `external` `nonReentrant` entry points to them. TIP: If you would like to learn more about reentrancy and alternative ways to protect against it, check out our blog post https://blog.openzeppelin.com/reentrancy-after-istanbul/[Reentrancy After Istanbul].\",\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/security/ReentrancyGuard.sol\":\"ReentrancyGuard\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/security/ReentrancyGuard.sol\":{\"keccak256\":\"0x190dd6f8d592b7e4e930feb7f4313aeb8e1c4ad3154c27ce1cf6a512fc30d8cc\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://4ce8dfb62d0c4fa260d6eec8f1cd47f5f2a044e11bde5b31d18072fa6e7d9010\",\"dweb:/ipfs/QmTyFztU3tLEcEDnqqiaW4UJetqsU77LXc6pjc9oTXCK5u\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [
							{
								"astId": 123,
								"contract": "@openzeppelin/contracts/security/ReentrancyGuard.sol:ReentrancyGuard",
								"label": "_status",
								"offset": 0,
								"slot": "0",
								"type": "t_uint256"
							}
						],
						"types": {
							"t_uint256": {
								"encoding": "inplace",
								"label": "uint256",
								"numberOfBytes": "32"
							}
						}
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"@openzeppelin/contracts/token/ERC20/IERC20.sol": {
				"IERC20": {
					"abi": [
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "spender",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "Approval",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "Transfer",
							"type": "event"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								}
							],
							"name": "allowance",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "amount",
									"type": "uint256"
								}
							],
							"name": "approve",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "account",
									"type": "address"
								}
							],
							"name": "balanceOf",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "totalSupply",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "amount",
									"type": "uint256"
								}
							],
							"name": "transfer",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "amount",
									"type": "uint256"
								}
							],
							"name": "transferFrom",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						}
					],
					"devdoc": {
						"details": "Interface of the ERC20 standard as defined in the EIP.",
						"events": {
							"Approval(address,address,uint256)": {
								"details": "Emitted when the allowance of a `spender` for an `owner` is set by a call to {approve}. `value` is the new allowance."
							},
							"Transfer(address,address,uint256)": {
								"details": "Emitted when `value` tokens are moved from one account (`from`) to another (`to`). Note that `value` may be zero."
							}
						},
						"kind": "dev",
						"methods": {
							"allowance(address,address)": {
								"details": "Returns the remaining number of tokens that `spender` will be allowed to spend on behalf of `owner` through {transferFrom}. This is zero by default. This value changes when {approve} or {transferFrom} are called."
							},
							"approve(address,uint256)": {
								"details": "Sets `amount` as the allowance of `spender` over the caller's tokens. Returns a boolean value indicating whether the operation succeeded. IMPORTANT: Beware that changing an allowance with this method brings the risk that someone may use both the old and the new allowance by unfortunate transaction ordering. One possible solution to mitigate this race condition is to first reduce the spender's allowance to 0 and set the desired value afterwards: https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729 Emits an {Approval} event."
							},
							"balanceOf(address)": {
								"details": "Returns the amount of tokens owned by `account`."
							},
							"totalSupply()": {
								"details": "Returns the amount of tokens in existence."
							},
							"transfer(address,uint256)": {
								"details": "Moves `amount` tokens from the caller's account to `to`. Returns a boolean value indicating whether the operation succeeded. Emits a {Transfer} event."
							},
							"transferFrom(address,address,uint256)": {
								"details": "Moves `amount` tokens from `from` to `to` using the allowance mechanism. `amount` is then deducted from the caller's allowance. Returns a boolean value indicating whether the operation succeeded. Emits a {Transfer} event."
							}
						},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {
							"allowance(address,address)": "dd62ed3e",
							"approve(address,uint256)": "095ea7b3",
							"balanceOf(address)": "70a08231",
							"totalSupply()": "18160ddd",
							"transfer(address,uint256)": "a9059cbb",
							"transferFrom(address,address,uint256)": "23b872dd"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.18+commit.87f61d96\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Approval\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Transfer\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"}],\"name\":\"allowance\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"approve\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"balanceOf\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"totalSupply\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"transfer\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"transferFrom\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"Interface of the ERC20 standard as defined in the EIP.\",\"events\":{\"Approval(address,address,uint256)\":{\"details\":\"Emitted when the allowance of a `spender` for an `owner` is set by a call to {approve}. `value` is the new allowance.\"},\"Transfer(address,address,uint256)\":{\"details\":\"Emitted when `value` tokens are moved from one account (`from`) to another (`to`). Note that `value` may be zero.\"}},\"kind\":\"dev\",\"methods\":{\"allowance(address,address)\":{\"details\":\"Returns the remaining number of tokens that `spender` will be allowed to spend on behalf of `owner` through {transferFrom}. This is zero by default. This value changes when {approve} or {transferFrom} are called.\"},\"approve(address,uint256)\":{\"details\":\"Sets `amount` as the allowance of `spender` over the caller's tokens. Returns a boolean value indicating whether the operation succeeded. IMPORTANT: Beware that changing an allowance with this method brings the risk that someone may use both the old and the new allowance by unfortunate transaction ordering. One possible solution to mitigate this race condition is to first reduce the spender's allowance to 0 and set the desired value afterwards: https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729 Emits an {Approval} event.\"},\"balanceOf(address)\":{\"details\":\"Returns the amount of tokens owned by `account`.\"},\"totalSupply()\":{\"details\":\"Returns the amount of tokens in existence.\"},\"transfer(address,uint256)\":{\"details\":\"Moves `amount` tokens from the caller's account to `to`. Returns a boolean value indicating whether the operation succeeded. Emits a {Transfer} event.\"},\"transferFrom(address,address,uint256)\":{\"details\":\"Moves `amount` tokens from `from` to `to` using the allowance mechanism. `amount` is then deducted from the caller's allowance. Returns a boolean value indicating whether the operation succeeded. Emits a {Transfer} event.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/token/ERC20/IERC20.sol\":\"IERC20\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/token/ERC20/IERC20.sol\":{\"keccak256\":\"0x9750c6b834f7b43000631af5cc30001c5f547b3ceb3635488f140f60e897ea6b\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://5a7d5b1ef5d8d5889ad2ed89d8619c09383b80b72ab226e0fe7bde1636481e34\",\"dweb:/ipfs/QmebXWgtEfumQGBdVeM6c71McLixYXQP5Bk6kKXuoY4Bmr\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"@openzeppelin/contracts/token/ERC20/extensions/draft-IERC20Permit.sol": {
				"IERC20Permit": {
					"abi": [
						{
							"inputs": [],
							"name": "DOMAIN_SEPARATOR",
							"outputs": [
								{
									"internalType": "bytes32",
									"name": "",
									"type": "bytes32"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "owner",
									"type": "address"
								}
							],
							"name": "nonces",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "deadline",
									"type": "uint256"
								},
								{
									"internalType": "uint8",
									"name": "v",
									"type": "uint8"
								},
								{
									"internalType": "bytes32",
									"name": "r",
									"type": "bytes32"
								},
								{
									"internalType": "bytes32",
									"name": "s",
									"type": "bytes32"
								}
							],
							"name": "permit",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						}
					],
					"devdoc": {
						"details": "Interface of the ERC20 Permit extension allowing approvals to be made via signatures, as defined in https://eips.ethereum.org/EIPS/eip-2612[EIP-2612]. Adds the {permit} method, which can be used to change an account's ERC20 allowance (see {IERC20-allowance}) by presenting a message signed by the account. By not relying on {IERC20-approve}, the token holder account doesn't need to send a transaction, and thus is not required to hold Ether at all.",
						"kind": "dev",
						"methods": {
							"DOMAIN_SEPARATOR()": {
								"details": "Returns the domain separator used in the encoding of the signature for {permit}, as defined by {EIP712}."
							},
							"nonces(address)": {
								"details": "Returns the current nonce for `owner`. This value must be included whenever a signature is generated for {permit}. Every successful call to {permit} increases ``owner``'s nonce by one. This prevents a signature from being used multiple times."
							},
							"permit(address,address,uint256,uint256,uint8,bytes32,bytes32)": {
								"details": "Sets `value` as the allowance of `spender` over ``owner``'s tokens, given ``owner``'s signed approval. IMPORTANT: The same issues {IERC20-approve} has related to transaction ordering also apply here. Emits an {Approval} event. Requirements: - `spender` cannot be the zero address. - `deadline` must be a timestamp in the future. - `v`, `r` and `s` must be a valid `secp256k1` signature from `owner` over the EIP712-formatted function arguments. - the signature must use ``owner``'s current nonce (see {nonces}). For more information on the signature format, see the https://eips.ethereum.org/EIPS/eip-2612#specification[relevant EIP section]."
							}
						},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {
							"DOMAIN_SEPARATOR()": "3644e515",
							"nonces(address)": "7ecebe00",
							"permit(address,address,uint256,uint256,uint8,bytes32,bytes32)": "d505accf"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.18+commit.87f61d96\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[],\"name\":\"DOMAIN_SEPARATOR\",\"outputs\":[{\"internalType\":\"bytes32\",\"name\":\"\",\"type\":\"bytes32\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"}],\"name\":\"nonces\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"deadline\",\"type\":\"uint256\"},{\"internalType\":\"uint8\",\"name\":\"v\",\"type\":\"uint8\"},{\"internalType\":\"bytes32\",\"name\":\"r\",\"type\":\"bytes32\"},{\"internalType\":\"bytes32\",\"name\":\"s\",\"type\":\"bytes32\"}],\"name\":\"permit\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"Interface of the ERC20 Permit extension allowing approvals to be made via signatures, as defined in https://eips.ethereum.org/EIPS/eip-2612[EIP-2612]. Adds the {permit} method, which can be used to change an account's ERC20 allowance (see {IERC20-allowance}) by presenting a message signed by the account. By not relying on {IERC20-approve}, the token holder account doesn't need to send a transaction, and thus is not required to hold Ether at all.\",\"kind\":\"dev\",\"methods\":{\"DOMAIN_SEPARATOR()\":{\"details\":\"Returns the domain separator used in the encoding of the signature for {permit}, as defined by {EIP712}.\"},\"nonces(address)\":{\"details\":\"Returns the current nonce for `owner`. This value must be included whenever a signature is generated for {permit}. Every successful call to {permit} increases ``owner``'s nonce by one. This prevents a signature from being used multiple times.\"},\"permit(address,address,uint256,uint256,uint8,bytes32,bytes32)\":{\"details\":\"Sets `value` as the allowance of `spender` over ``owner``'s tokens, given ``owner``'s signed approval. IMPORTANT: The same issues {IERC20-approve} has related to transaction ordering also apply here. Emits an {Approval} event. Requirements: - `spender` cannot be the zero address. - `deadline` must be a timestamp in the future. - `v`, `r` and `s` must be a valid `secp256k1` signature from `owner` over the EIP712-formatted function arguments. - the signature must use ``owner``'s current nonce (see {nonces}). For more information on the signature format, see the https://eips.ethereum.org/EIPS/eip-2612#specification[relevant EIP section].\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/token/ERC20/extensions/draft-IERC20Permit.sol\":\"IERC20Permit\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/token/ERC20/extensions/draft-IERC20Permit.sol\":{\"keccak256\":\"0xf41ca991f30855bf80ffd11e9347856a517b977f0a6c2d52e6421a99b7840329\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://b2717fd2bdac99daa960a6de500754ea1b932093c946388c381da48658234b95\",\"dweb:/ipfs/QmP6QVMn6UeA3ByahyJbYQr5M6coHKBKsf3ySZSfbyA8R7\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol": {
				"SafeERC20": {
					"abi": [],
					"devdoc": {
						"details": "Wrappers around ERC20 operations that throw on failure (when the token contract returns false). Tokens that return no value (and instead revert or throw on failure) are also supported, non-reverting calls are assumed to be successful. To use this library you can add a `using SafeERC20 for IERC20;` statement to your contract, which allows you to call the safe operations as `token.safeTransfer(...)`, etc.",
						"kind": "dev",
						"methods": {},
						"title": "SafeERC20",
						"version": 1
					},
					"evm": {
						"assembly": "    /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":707:4455  library SafeERC20 {... */\n  dataSize(sub_0)\n  dataOffset(sub_0)\n  0x0b\n  dup3\n  dup3\n  dup3\n  codecopy\n  dup1\n  mload\n  0x00\n  byte\n  0x73\n  eq\n  tag_1\n  jumpi\n  mstore(0x00, 0x4e487b7100000000000000000000000000000000000000000000000000000000)\n  mstore(0x04, 0x00)\n  revert(0x00, 0x24)\ntag_1:\n  mstore(0x00, address)\n  0x73\n  dup2\n  mstore8\n  dup3\n  dup2\n  return\nstop\n\nsub_0: assembly {\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":707:4455  library SafeERC20 {... */\n      eq(address, deployTimeAddress())\n      mstore(0x40, 0x80)\n      0x00\n      dup1\n      revert\n\n    auxdata: 0xa2646970667358221220bbcb1fd435e5744a5b541c709a8f7209eca403ec3ecfbdbe7bdc2822cdbb6f3d64736f6c63430008120033\n}\n",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "60566050600b82828239805160001a6073146043577f4e487b7100000000000000000000000000000000000000000000000000000000600052600060045260246000fd5b30600052607381538281f3fe73000000000000000000000000000000000000000030146080604052600080fdfea2646970667358221220bbcb1fd435e5744a5b541c709a8f7209eca403ec3ecfbdbe7bdc2822cdbb6f3d64736f6c63430008120033",
							"opcodes": "PUSH1 0x56 PUSH1 0x50 PUSH1 0xB DUP3 DUP3 DUP3 CODECOPY DUP1 MLOAD PUSH1 0x0 BYTE PUSH1 0x73 EQ PUSH1 0x43 JUMPI PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x0 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST ADDRESS PUSH1 0x0 MSTORE PUSH1 0x73 DUP2 MSTORE8 DUP3 DUP2 RETURN INVALID PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 0xBB 0xCB 0x1F 0xD4 CALLDATALOAD 0xE5 PUSH21 0x4A5B541C709A8F7209ECA403EC3ECFBDBE7BDC2822 0xCD 0xBB PUSH16 0x3D64736F6C6343000812003300000000 ",
							"sourceMap": "707:3748:4:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;"
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "73000000000000000000000000000000000000000030146080604052600080fdfea2646970667358221220bbcb1fd435e5744a5b541c709a8f7209eca403ec3ecfbdbe7bdc2822cdbb6f3d64736f6c63430008120033",
							"opcodes": "PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 0xBB 0xCB 0x1F 0xD4 CALLDATALOAD 0xE5 PUSH21 0x4A5B541C709A8F7209ECA403EC3ECFBDBE7BDC2822 0xCD 0xBB PUSH16 0x3D64736F6C6343000812003300000000 ",
							"sourceMap": "707:3748:4:-:0;;;;;;;;"
						},
						"gasEstimates": {
							"creation": {
								"codeDepositCost": "17200",
								"executionCost": "97",
								"totalCost": "17297"
							},
							"internal": {
								"_callOptionalReturn(contract IERC20,bytes memory)": "infinite",
								"safeApprove(contract IERC20,address,uint256)": "infinite",
								"safeDecreaseAllowance(contract IERC20,address,uint256)": "infinite",
								"safeIncreaseAllowance(contract IERC20,address,uint256)": "infinite",
								"safePermit(contract IERC20Permit,address,address,uint256,uint256,uint8,bytes32,bytes32)": "infinite",
								"safeTransfer(contract IERC20,address,uint256)": "infinite",
								"safeTransferFrom(contract IERC20,address,address,uint256)": "infinite"
							}
						},
						"legacyAssembly": {
							".code": [
								{
									"begin": 707,
									"end": 4455,
									"name": "PUSH #[$]",
									"source": 4,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 707,
									"end": 4455,
									"name": "PUSH [$]",
									"source": 4,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 707,
									"end": 4455,
									"name": "PUSH",
									"source": 4,
									"value": "B"
								},
								{
									"begin": 707,
									"end": 4455,
									"name": "DUP3",
									"source": 4
								},
								{
									"begin": 707,
									"end": 4455,
									"name": "DUP3",
									"source": 4
								},
								{
									"begin": 707,
									"end": 4455,
									"name": "DUP3",
									"source": 4
								},
								{
									"begin": 707,
									"end": 4455,
									"name": "CODECOPY",
									"source": 4
								},
								{
									"begin": 707,
									"end": 4455,
									"name": "DUP1",
									"source": 4
								},
								{
									"begin": 707,
									"end": 4455,
									"name": "MLOAD",
									"source": 4
								},
								{
									"begin": 707,
									"end": 4455,
									"name": "PUSH",
									"source": 4,
									"value": "0"
								},
								{
									"begin": 707,
									"end": 4455,
									"name": "BYTE",
									"source": 4
								},
								{
									"begin": 707,
									"end": 4455,
									"name": "PUSH",
									"source": 4,
									"value": "73"
								},
								{
									"begin": 707,
									"end": 4455,
									"name": "EQ",
									"source": 4
								},
								{
									"begin": 707,
									"end": 4455,
									"name": "PUSH [tag]",
									"source": 4,
									"value": "1"
								},
								{
									"begin": 707,
									"end": 4455,
									"name": "JUMPI",
									"source": 4
								},
								{
									"begin": 707,
									"end": 4455,
									"name": "PUSH",
									"source": 4,
									"value": "4E487B7100000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 707,
									"end": 4455,
									"name": "PUSH",
									"source": 4,
									"value": "0"
								},
								{
									"begin": 707,
									"end": 4455,
									"name": "MSTORE",
									"source": 4
								},
								{
									"begin": 707,
									"end": 4455,
									"name": "PUSH",
									"source": 4,
									"value": "0"
								},
								{
									"begin": 707,
									"end": 4455,
									"name": "PUSH",
									"source": 4,
									"value": "4"
								},
								{
									"begin": 707,
									"end": 4455,
									"name": "MSTORE",
									"source": 4
								},
								{
									"begin": 707,
									"end": 4455,
									"name": "PUSH",
									"source": 4,
									"value": "24"
								},
								{
									"begin": 707,
									"end": 4455,
									"name": "PUSH",
									"source": 4,
									"value": "0"
								},
								{
									"begin": 707,
									"end": 4455,
									"name": "REVERT",
									"source": 4
								},
								{
									"begin": 707,
									"end": 4455,
									"name": "tag",
									"source": 4,
									"value": "1"
								},
								{
									"begin": 707,
									"end": 4455,
									"name": "JUMPDEST",
									"source": 4
								},
								{
									"begin": 707,
									"end": 4455,
									"name": "ADDRESS",
									"source": 4
								},
								{
									"begin": 707,
									"end": 4455,
									"name": "PUSH",
									"source": 4,
									"value": "0"
								},
								{
									"begin": 707,
									"end": 4455,
									"name": "MSTORE",
									"source": 4
								},
								{
									"begin": 707,
									"end": 4455,
									"name": "PUSH",
									"source": 4,
									"value": "73"
								},
								{
									"begin": 707,
									"end": 4455,
									"name": "DUP2",
									"source": 4
								},
								{
									"begin": 707,
									"end": 4455,
									"name": "MSTORE8",
									"source": 4
								},
								{
									"begin": 707,
									"end": 4455,
									"name": "DUP3",
									"source": 4
								},
								{
									"begin": 707,
									"end": 4455,
									"name": "DUP2",
									"source": 4
								},
								{
									"begin": 707,
									"end": 4455,
									"name": "RETURN",
									"source": 4
								}
							],
							".data": {
								"0": {
									".auxdata": "a2646970667358221220bbcb1fd435e5744a5b541c709a8f7209eca403ec3ecfbdbe7bdc2822cdbb6f3d64736f6c63430008120033",
									".code": [
										{
											"begin": 707,
											"end": 4455,
											"name": "PUSHDEPLOYADDRESS",
											"source": 4
										},
										{
											"begin": 707,
											"end": 4455,
											"name": "ADDRESS",
											"source": 4
										},
										{
											"begin": 707,
											"end": 4455,
											"name": "EQ",
											"source": 4
										},
										{
											"begin": 707,
											"end": 4455,
											"name": "PUSH",
											"source": 4,
											"value": "80"
										},
										{
											"begin": 707,
											"end": 4455,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 707,
											"end": 4455,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 707,
											"end": 4455,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 707,
											"end": 4455,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 707,
											"end": 4455,
											"name": "REVERT",
											"source": 4
										}
									]
								}
							},
							"sourceList": [
								"@openzeppelin/contracts/access/Ownable.sol",
								"@openzeppelin/contracts/security/ReentrancyGuard.sol",
								"@openzeppelin/contracts/token/ERC20/IERC20.sol",
								"@openzeppelin/contracts/token/ERC20/extensions/draft-IERC20Permit.sol",
								"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol",
								"@openzeppelin/contracts/token/ERC721/IERC721.sol",
								"@openzeppelin/contracts/utils/Address.sol",
								"@openzeppelin/contracts/utils/Context.sol",
								"@openzeppelin/contracts/utils/introspection/IERC165.sol",
								"contracts/NFTStaking.sol",
								"#utility.yul"
							]
						},
						"methodIdentifiers": {}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.18+commit.87f61d96\"},\"language\":\"Solidity\",\"output\":{\"abi\":[],\"devdoc\":{\"details\":\"Wrappers around ERC20 operations that throw on failure (when the token contract returns false). Tokens that return no value (and instead revert or throw on failure) are also supported, non-reverting calls are assumed to be successful. To use this library you can add a `using SafeERC20 for IERC20;` statement to your contract, which allows you to call the safe operations as `token.safeTransfer(...)`, etc.\",\"kind\":\"dev\",\"methods\":{},\"title\":\"SafeERC20\",\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":\"SafeERC20\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/token/ERC20/IERC20.sol\":{\"keccak256\":\"0x9750c6b834f7b43000631af5cc30001c5f547b3ceb3635488f140f60e897ea6b\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://5a7d5b1ef5d8d5889ad2ed89d8619c09383b80b72ab226e0fe7bde1636481e34\",\"dweb:/ipfs/QmebXWgtEfumQGBdVeM6c71McLixYXQP5Bk6kKXuoY4Bmr\"]},\"@openzeppelin/contracts/token/ERC20/extensions/draft-IERC20Permit.sol\":{\"keccak256\":\"0xf41ca991f30855bf80ffd11e9347856a517b977f0a6c2d52e6421a99b7840329\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://b2717fd2bdac99daa960a6de500754ea1b932093c946388c381da48658234b95\",\"dweb:/ipfs/QmP6QVMn6UeA3ByahyJbYQr5M6coHKBKsf3ySZSfbyA8R7\"]},\"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":{\"keccak256\":\"0x9b72f93be69ca894d8492c244259615c4a742afc8d63720dbc8bb81087d9b238\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://f5a7b96e511be78d5cdf635c784e6ab8cdd38625bb8cafb8a80914a1c89cf0f6\",\"dweb:/ipfs/QmVzTCwJxQAkjRQHboT5QrvsVJGWQHgfEjeTbvyxoKBrds\"]},\"@openzeppelin/contracts/utils/Address.sol\":{\"keccak256\":\"0xf96f969e24029d43d0df89e59d365f277021dac62b48e1c1e3ebe0acdd7f1ca1\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://ec772b45a624be516f1c81970caa8a2e144301e9d0921cbc1a2789fef39a1269\",\"dweb:/ipfs/QmNyjwxCrGhQMyzLD93oUobJXVe9ceJvRvfXwbEtuxPiEj\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"@openzeppelin/contracts/token/ERC721/IERC721.sol": {
				"IERC721": {
					"abi": [
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "approved",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								}
							],
							"name": "Approval",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "operator",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "bool",
									"name": "approved",
									"type": "bool"
								}
							],
							"name": "ApprovalForAll",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								}
							],
							"name": "Transfer",
							"type": "event"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								}
							],
							"name": "approve",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "owner",
									"type": "address"
								}
							],
							"name": "balanceOf",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "balance",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								}
							],
							"name": "getApproved",
							"outputs": [
								{
									"internalType": "address",
									"name": "operator",
									"type": "address"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "operator",
									"type": "address"
								}
							],
							"name": "isApprovedForAll",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								}
							],
							"name": "ownerOf",
							"outputs": [
								{
									"internalType": "address",
									"name": "owner",
									"type": "address"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								}
							],
							"name": "safeTransferFrom",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								},
								{
									"internalType": "bytes",
									"name": "data",
									"type": "bytes"
								}
							],
							"name": "safeTransferFrom",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "operator",
									"type": "address"
								},
								{
									"internalType": "bool",
									"name": "_approved",
									"type": "bool"
								}
							],
							"name": "setApprovalForAll",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "bytes4",
									"name": "interfaceId",
									"type": "bytes4"
								}
							],
							"name": "supportsInterface",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								}
							],
							"name": "transferFrom",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						}
					],
					"devdoc": {
						"details": "Required interface of an ERC721 compliant contract.",
						"events": {
							"Approval(address,address,uint256)": {
								"details": "Emitted when `owner` enables `approved` to manage the `tokenId` token."
							},
							"ApprovalForAll(address,address,bool)": {
								"details": "Emitted when `owner` enables or disables (`approved`) `operator` to manage all of its assets."
							},
							"Transfer(address,address,uint256)": {
								"details": "Emitted when `tokenId` token is transferred from `from` to `to`."
							}
						},
						"kind": "dev",
						"methods": {
							"approve(address,uint256)": {
								"details": "Gives permission to `to` to transfer `tokenId` token to another account. The approval is cleared when the token is transferred. Only a single account can be approved at a time, so approving the zero address clears previous approvals. Requirements: - The caller must own the token or be an approved operator. - `tokenId` must exist. Emits an {Approval} event."
							},
							"balanceOf(address)": {
								"details": "Returns the number of tokens in ``owner``'s account."
							},
							"getApproved(uint256)": {
								"details": "Returns the account approved for `tokenId` token. Requirements: - `tokenId` must exist."
							},
							"isApprovedForAll(address,address)": {
								"details": "Returns if the `operator` is allowed to manage all of the assets of `owner`. See {setApprovalForAll}"
							},
							"ownerOf(uint256)": {
								"details": "Returns the owner of the `tokenId` token. Requirements: - `tokenId` must exist."
							},
							"safeTransferFrom(address,address,uint256)": {
								"details": "Safely transfers `tokenId` token from `from` to `to`, checking first that contract recipients are aware of the ERC721 protocol to prevent tokens from being forever locked. Requirements: - `from` cannot be the zero address. - `to` cannot be the zero address. - `tokenId` token must exist and be owned by `from`. - If the caller is not `from`, it must have been allowed to move this token by either {approve} or {setApprovalForAll}. - If `to` refers to a smart contract, it must implement {IERC721Receiver-onERC721Received}, which is called upon a safe transfer. Emits a {Transfer} event."
							},
							"safeTransferFrom(address,address,uint256,bytes)": {
								"details": "Safely transfers `tokenId` token from `from` to `to`. Requirements: - `from` cannot be the zero address. - `to` cannot be the zero address. - `tokenId` token must exist and be owned by `from`. - If the caller is not `from`, it must be approved to move this token by either {approve} or {setApprovalForAll}. - If `to` refers to a smart contract, it must implement {IERC721Receiver-onERC721Received}, which is called upon a safe transfer. Emits a {Transfer} event."
							},
							"setApprovalForAll(address,bool)": {
								"details": "Approve or remove `operator` as an operator for the caller. Operators can call {transferFrom} or {safeTransferFrom} for any token owned by the caller. Requirements: - The `operator` cannot be the caller. Emits an {ApprovalForAll} event."
							},
							"supportsInterface(bytes4)": {
								"details": "Returns true if this contract implements the interface defined by `interfaceId`. See the corresponding https://eips.ethereum.org/EIPS/eip-165#how-interfaces-are-identified[EIP section] to learn more about how these ids are created. This function call must use less than 30 000 gas."
							},
							"transferFrom(address,address,uint256)": {
								"details": "Transfers `tokenId` token from `from` to `to`. WARNING: Note that the caller is responsible to confirm that the recipient is capable of receiving ERC721 or else they may be permanently lost. Usage of {safeTransferFrom} prevents loss, though the caller must understand this adds an external call which potentially creates a reentrancy vulnerability. Requirements: - `from` cannot be the zero address. - `to` cannot be the zero address. - `tokenId` token must be owned by `from`. - If the caller is not `from`, it must be approved to move this token by either {approve} or {setApprovalForAll}. Emits a {Transfer} event."
							}
						},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {
							"approve(address,uint256)": "095ea7b3",
							"balanceOf(address)": "70a08231",
							"getApproved(uint256)": "081812fc",
							"isApprovedForAll(address,address)": "e985e9c5",
							"ownerOf(uint256)": "6352211e",
							"safeTransferFrom(address,address,uint256)": "42842e0e",
							"safeTransferFrom(address,address,uint256,bytes)": "b88d4fde",
							"setApprovalForAll(address,bool)": "a22cb465",
							"supportsInterface(bytes4)": "01ffc9a7",
							"transferFrom(address,address,uint256)": "23b872dd"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.18+commit.87f61d96\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"approved\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"Approval\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"bool\",\"name\":\"approved\",\"type\":\"bool\"}],\"name\":\"ApprovalForAll\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"Transfer\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"approve\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"}],\"name\":\"balanceOf\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"balance\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"getApproved\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"}],\"name\":\"isApprovedForAll\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"ownerOf\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"safeTransferFrom\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"},{\"internalType\":\"bytes\",\"name\":\"data\",\"type\":\"bytes\"}],\"name\":\"safeTransferFrom\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"},{\"internalType\":\"bool\",\"name\":\"_approved\",\"type\":\"bool\"}],\"name\":\"setApprovalForAll\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes4\",\"name\":\"interfaceId\",\"type\":\"bytes4\"}],\"name\":\"supportsInterface\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"transferFrom\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"Required interface of an ERC721 compliant contract.\",\"events\":{\"Approval(address,address,uint256)\":{\"details\":\"Emitted when `owner` enables `approved` to manage the `tokenId` token.\"},\"ApprovalForAll(address,address,bool)\":{\"details\":\"Emitted when `owner` enables or disables (`approved`) `operator` to manage all of its assets.\"},\"Transfer(address,address,uint256)\":{\"details\":\"Emitted when `tokenId` token is transferred from `from` to `to`.\"}},\"kind\":\"dev\",\"methods\":{\"approve(address,uint256)\":{\"details\":\"Gives permission to `to` to transfer `tokenId` token to another account. The approval is cleared when the token is transferred. Only a single account can be approved at a time, so approving the zero address clears previous approvals. Requirements: - The caller must own the token or be an approved operator. - `tokenId` must exist. Emits an {Approval} event.\"},\"balanceOf(address)\":{\"details\":\"Returns the number of tokens in ``owner``'s account.\"},\"getApproved(uint256)\":{\"details\":\"Returns the account approved for `tokenId` token. Requirements: - `tokenId` must exist.\"},\"isApprovedForAll(address,address)\":{\"details\":\"Returns if the `operator` is allowed to manage all of the assets of `owner`. See {setApprovalForAll}\"},\"ownerOf(uint256)\":{\"details\":\"Returns the owner of the `tokenId` token. Requirements: - `tokenId` must exist.\"},\"safeTransferFrom(address,address,uint256)\":{\"details\":\"Safely transfers `tokenId` token from `from` to `to`, checking first that contract recipients are aware of the ERC721 protocol to prevent tokens from being forever locked. Requirements: - `from` cannot be the zero address. - `to` cannot be the zero address. - `tokenId` token must exist and be owned by `from`. - If the caller is not `from`, it must have been allowed to move this token by either {approve} or {setApprovalForAll}. - If `to` refers to a smart contract, it must implement {IERC721Receiver-onERC721Received}, which is called upon a safe transfer. Emits a {Transfer} event.\"},\"safeTransferFrom(address,address,uint256,bytes)\":{\"details\":\"Safely transfers `tokenId` token from `from` to `to`. Requirements: - `from` cannot be the zero address. - `to` cannot be the zero address. - `tokenId` token must exist and be owned by `from`. - If the caller is not `from`, it must be approved to move this token by either {approve} or {setApprovalForAll}. - If `to` refers to a smart contract, it must implement {IERC721Receiver-onERC721Received}, which is called upon a safe transfer. Emits a {Transfer} event.\"},\"setApprovalForAll(address,bool)\":{\"details\":\"Approve or remove `operator` as an operator for the caller. Operators can call {transferFrom} or {safeTransferFrom} for any token owned by the caller. Requirements: - The `operator` cannot be the caller. Emits an {ApprovalForAll} event.\"},\"supportsInterface(bytes4)\":{\"details\":\"Returns true if this contract implements the interface defined by `interfaceId`. See the corresponding https://eips.ethereum.org/EIPS/eip-165#how-interfaces-are-identified[EIP section] to learn more about how these ids are created. This function call must use less than 30 000 gas.\"},\"transferFrom(address,address,uint256)\":{\"details\":\"Transfers `tokenId` token from `from` to `to`. WARNING: Note that the caller is responsible to confirm that the recipient is capable of receiving ERC721 or else they may be permanently lost. Usage of {safeTransferFrom} prevents loss, though the caller must understand this adds an external call which potentially creates a reentrancy vulnerability. Requirements: - `from` cannot be the zero address. - `to` cannot be the zero address. - `tokenId` token must be owned by `from`. - If the caller is not `from`, it must be approved to move this token by either {approve} or {setApprovalForAll}. Emits a {Transfer} event.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/token/ERC721/IERC721.sol\":\"IERC721\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/token/ERC721/IERC721.sol\":{\"keccak256\":\"0xab28a56179c1db258c9bf5235b382698cb650debecb51b23d12be9e241374b68\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://daae589a9d6fa7e55f99f86c0a16796ca490f243fb3693632c3711c0646c1d56\",\"dweb:/ipfs/QmR3zpd7wNw3rcUdekwiv6FYHJqksuTCXLVioTxu6Fbxk3\"]},\"@openzeppelin/contracts/utils/introspection/IERC165.sol\":{\"keccak256\":\"0x447a5f3ddc18419d41ff92b3773fb86471b1db25773e07f877f548918a185bf1\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://be161e54f24e5c6fae81a12db1a8ae87bc5ae1b0ddc805d82a1440a68455088f\",\"dweb:/ipfs/QmP7C3CHdY9urF4dEMb9wmsp1wMxHF6nhA2yQE5SKiPAdy\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"@openzeppelin/contracts/utils/Address.sol": {
				"Address": {
					"abi": [],
					"devdoc": {
						"details": "Collection of functions related to the address type",
						"kind": "dev",
						"methods": {},
						"version": 1
					},
					"evm": {
						"assembly": "    /* \"@openzeppelin/contracts/utils/Address.sol\":194:9158  library Address {... */\n  dataSize(sub_0)\n  dataOffset(sub_0)\n  0x0b\n  dup3\n  dup3\n  dup3\n  codecopy\n  dup1\n  mload\n  0x00\n  byte\n  0x73\n  eq\n  tag_1\n  jumpi\n  mstore(0x00, 0x4e487b7100000000000000000000000000000000000000000000000000000000)\n  mstore(0x04, 0x00)\n  revert(0x00, 0x24)\ntag_1:\n  mstore(0x00, address)\n  0x73\n  dup2\n  mstore8\n  dup3\n  dup2\n  return\nstop\n\nsub_0: assembly {\n        /* \"@openzeppelin/contracts/utils/Address.sol\":194:9158  library Address {... */\n      eq(address, deployTimeAddress())\n      mstore(0x40, 0x80)\n      0x00\n      dup1\n      revert\n\n    auxdata: 0xa264697066735822122056388b4bd61a0a82b1b5642110ef2e3e47829ce58d55205c0109152159a2901a64736f6c63430008120033\n}\n",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "60566050600b82828239805160001a6073146043577f4e487b7100000000000000000000000000000000000000000000000000000000600052600060045260246000fd5b30600052607381538281f3fe73000000000000000000000000000000000000000030146080604052600080fdfea264697066735822122056388b4bd61a0a82b1b5642110ef2e3e47829ce58d55205c0109152159a2901a64736f6c63430008120033",
							"opcodes": "PUSH1 0x56 PUSH1 0x50 PUSH1 0xB DUP3 DUP3 DUP3 CODECOPY DUP1 MLOAD PUSH1 0x0 BYTE PUSH1 0x73 EQ PUSH1 0x43 JUMPI PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x0 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST ADDRESS PUSH1 0x0 MSTORE PUSH1 0x73 DUP2 MSTORE8 DUP3 DUP2 RETURN INVALID PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 JUMP CODESIZE DUP12 0x4B 0xD6 BYTE EXP DUP3 0xB1 0xB5 PUSH5 0x2110EF2E3E SELFBALANCE DUP3 SWAP13 0xE5 DUP14 SSTORE KECCAK256 0x5C ADD MULMOD ISZERO 0x21 MSIZE LOG2 SWAP1 BYTE PUSH5 0x736F6C6343 STOP ADDMOD SLT STOP CALLER ",
							"sourceMap": "194:8964:6:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;"
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "73000000000000000000000000000000000000000030146080604052600080fdfea264697066735822122056388b4bd61a0a82b1b5642110ef2e3e47829ce58d55205c0109152159a2901a64736f6c63430008120033",
							"opcodes": "PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 JUMP CODESIZE DUP12 0x4B 0xD6 BYTE EXP DUP3 0xB1 0xB5 PUSH5 0x2110EF2E3E SELFBALANCE DUP3 SWAP13 0xE5 DUP14 SSTORE KECCAK256 0x5C ADD MULMOD ISZERO 0x21 MSIZE LOG2 SWAP1 BYTE PUSH5 0x736F6C6343 STOP ADDMOD SLT STOP CALLER ",
							"sourceMap": "194:8964:6:-:0;;;;;;;;"
						},
						"gasEstimates": {
							"creation": {
								"codeDepositCost": "17200",
								"executionCost": "97",
								"totalCost": "17297"
							},
							"internal": {
								"_revert(bytes memory,string memory)": "infinite",
								"functionCall(address,bytes memory)": "infinite",
								"functionCall(address,bytes memory,string memory)": "infinite",
								"functionCallWithValue(address,bytes memory,uint256)": "infinite",
								"functionCallWithValue(address,bytes memory,uint256,string memory)": "infinite",
								"functionDelegateCall(address,bytes memory)": "infinite",
								"functionDelegateCall(address,bytes memory,string memory)": "infinite",
								"functionStaticCall(address,bytes memory)": "infinite",
								"functionStaticCall(address,bytes memory,string memory)": "infinite",
								"isContract(address)": "infinite",
								"sendValue(address payable,uint256)": "infinite",
								"verifyCallResult(bool,bytes memory,string memory)": "infinite",
								"verifyCallResultFromTarget(address,bool,bytes memory,string memory)": "infinite"
							}
						},
						"legacyAssembly": {
							".code": [
								{
									"begin": 194,
									"end": 9158,
									"name": "PUSH #[$]",
									"source": 6,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 194,
									"end": 9158,
									"name": "PUSH [$]",
									"source": 6,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 194,
									"end": 9158,
									"name": "PUSH",
									"source": 6,
									"value": "B"
								},
								{
									"begin": 194,
									"end": 9158,
									"name": "DUP3",
									"source": 6
								},
								{
									"begin": 194,
									"end": 9158,
									"name": "DUP3",
									"source": 6
								},
								{
									"begin": 194,
									"end": 9158,
									"name": "DUP3",
									"source": 6
								},
								{
									"begin": 194,
									"end": 9158,
									"name": "CODECOPY",
									"source": 6
								},
								{
									"begin": 194,
									"end": 9158,
									"name": "DUP1",
									"source": 6
								},
								{
									"begin": 194,
									"end": 9158,
									"name": "MLOAD",
									"source": 6
								},
								{
									"begin": 194,
									"end": 9158,
									"name": "PUSH",
									"source": 6,
									"value": "0"
								},
								{
									"begin": 194,
									"end": 9158,
									"name": "BYTE",
									"source": 6
								},
								{
									"begin": 194,
									"end": 9158,
									"name": "PUSH",
									"source": 6,
									"value": "73"
								},
								{
									"begin": 194,
									"end": 9158,
									"name": "EQ",
									"source": 6
								},
								{
									"begin": 194,
									"end": 9158,
									"name": "PUSH [tag]",
									"source": 6,
									"value": "1"
								},
								{
									"begin": 194,
									"end": 9158,
									"name": "JUMPI",
									"source": 6
								},
								{
									"begin": 194,
									"end": 9158,
									"name": "PUSH",
									"source": 6,
									"value": "4E487B7100000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 194,
									"end": 9158,
									"name": "PUSH",
									"source": 6,
									"value": "0"
								},
								{
									"begin": 194,
									"end": 9158,
									"name": "MSTORE",
									"source": 6
								},
								{
									"begin": 194,
									"end": 9158,
									"name": "PUSH",
									"source": 6,
									"value": "0"
								},
								{
									"begin": 194,
									"end": 9158,
									"name": "PUSH",
									"source": 6,
									"value": "4"
								},
								{
									"begin": 194,
									"end": 9158,
									"name": "MSTORE",
									"source": 6
								},
								{
									"begin": 194,
									"end": 9158,
									"name": "PUSH",
									"source": 6,
									"value": "24"
								},
								{
									"begin": 194,
									"end": 9158,
									"name": "PUSH",
									"source": 6,
									"value": "0"
								},
								{
									"begin": 194,
									"end": 9158,
									"name": "REVERT",
									"source": 6
								},
								{
									"begin": 194,
									"end": 9158,
									"name": "tag",
									"source": 6,
									"value": "1"
								},
								{
									"begin": 194,
									"end": 9158,
									"name": "JUMPDEST",
									"source": 6
								},
								{
									"begin": 194,
									"end": 9158,
									"name": "ADDRESS",
									"source": 6
								},
								{
									"begin": 194,
									"end": 9158,
									"name": "PUSH",
									"source": 6,
									"value": "0"
								},
								{
									"begin": 194,
									"end": 9158,
									"name": "MSTORE",
									"source": 6
								},
								{
									"begin": 194,
									"end": 9158,
									"name": "PUSH",
									"source": 6,
									"value": "73"
								},
								{
									"begin": 194,
									"end": 9158,
									"name": "DUP2",
									"source": 6
								},
								{
									"begin": 194,
									"end": 9158,
									"name": "MSTORE8",
									"source": 6
								},
								{
									"begin": 194,
									"end": 9158,
									"name": "DUP3",
									"source": 6
								},
								{
									"begin": 194,
									"end": 9158,
									"name": "DUP2",
									"source": 6
								},
								{
									"begin": 194,
									"end": 9158,
									"name": "RETURN",
									"source": 6
								}
							],
							".data": {
								"0": {
									".auxdata": "a264697066735822122056388b4bd61a0a82b1b5642110ef2e3e47829ce58d55205c0109152159a2901a64736f6c63430008120033",
									".code": [
										{
											"begin": 194,
											"end": 9158,
											"name": "PUSHDEPLOYADDRESS",
											"source": 6
										},
										{
											"begin": 194,
											"end": 9158,
											"name": "ADDRESS",
											"source": 6
										},
										{
											"begin": 194,
											"end": 9158,
											"name": "EQ",
											"source": 6
										},
										{
											"begin": 194,
											"end": 9158,
											"name": "PUSH",
											"source": 6,
											"value": "80"
										},
										{
											"begin": 194,
											"end": 9158,
											"name": "PUSH",
											"source": 6,
											"value": "40"
										},
										{
											"begin": 194,
											"end": 9158,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 194,
											"end": 9158,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 194,
											"end": 9158,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 194,
											"end": 9158,
											"name": "REVERT",
											"source": 6
										}
									]
								}
							},
							"sourceList": [
								"@openzeppelin/contracts/access/Ownable.sol",
								"@openzeppelin/contracts/security/ReentrancyGuard.sol",
								"@openzeppelin/contracts/token/ERC20/IERC20.sol",
								"@openzeppelin/contracts/token/ERC20/extensions/draft-IERC20Permit.sol",
								"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol",
								"@openzeppelin/contracts/token/ERC721/IERC721.sol",
								"@openzeppelin/contracts/utils/Address.sol",
								"@openzeppelin/contracts/utils/Context.sol",
								"@openzeppelin/contracts/utils/introspection/IERC165.sol",
								"contracts/NFTStaking.sol",
								"#utility.yul"
							]
						},
						"methodIdentifiers": {}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.18+commit.87f61d96\"},\"language\":\"Solidity\",\"output\":{\"abi\":[],\"devdoc\":{\"details\":\"Collection of functions related to the address type\",\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/utils/Address.sol\":\"Address\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/utils/Address.sol\":{\"keccak256\":\"0xf96f969e24029d43d0df89e59d365f277021dac62b48e1c1e3ebe0acdd7f1ca1\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://ec772b45a624be516f1c81970caa8a2e144301e9d0921cbc1a2789fef39a1269\",\"dweb:/ipfs/QmNyjwxCrGhQMyzLD93oUobJXVe9ceJvRvfXwbEtuxPiEj\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"@openzeppelin/contracts/utils/Context.sol": {
				"Context": {
					"abi": [],
					"devdoc": {
						"details": "Provides information about the current execution context, including the sender of the transaction and its data. While these are generally available via msg.sender and msg.data, they should not be accessed in such a direct manner, since when dealing with meta-transactions the account sending and paying for execution may not be the actual sender (as far as an application is concerned). This contract is only required for intermediate, library-like contracts.",
						"kind": "dev",
						"methods": {},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.18+commit.87f61d96\"},\"language\":\"Solidity\",\"output\":{\"abi\":[],\"devdoc\":{\"details\":\"Provides information about the current execution context, including the sender of the transaction and its data. While these are generally available via msg.sender and msg.data, they should not be accessed in such a direct manner, since when dealing with meta-transactions the account sending and paying for execution may not be the actual sender (as far as an application is concerned). This contract is only required for intermediate, library-like contracts.\",\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/utils/Context.sol\":\"Context\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/utils/Context.sol\":{\"keccak256\":\"0xe2e337e6dde9ef6b680e07338c493ebea1b5fd09b43424112868e9cc1706bca7\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://6df0ddf21ce9f58271bdfaa85cde98b200ef242a05a3f85c2bc10a8294800a92\",\"dweb:/ipfs/QmRK2Y5Yc6BK7tGKkgsgn3aJEQGi5aakeSPZvS65PV8Xp3\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"@openzeppelin/contracts/utils/introspection/IERC165.sol": {
				"IERC165": {
					"abi": [
						{
							"inputs": [
								{
									"internalType": "bytes4",
									"name": "interfaceId",
									"type": "bytes4"
								}
							],
							"name": "supportsInterface",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "view",
							"type": "function"
						}
					],
					"devdoc": {
						"details": "Interface of the ERC165 standard, as defined in the https://eips.ethereum.org/EIPS/eip-165[EIP]. Implementers can declare support of contract interfaces, which can then be queried by others ({ERC165Checker}). For an implementation, see {ERC165}.",
						"kind": "dev",
						"methods": {
							"supportsInterface(bytes4)": {
								"details": "Returns true if this contract implements the interface defined by `interfaceId`. See the corresponding https://eips.ethereum.org/EIPS/eip-165#how-interfaces-are-identified[EIP section] to learn more about how these ids are created. This function call must use less than 30 000 gas."
							}
						},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {
							"supportsInterface(bytes4)": "01ffc9a7"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.18+commit.87f61d96\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"bytes4\",\"name\":\"interfaceId\",\"type\":\"bytes4\"}],\"name\":\"supportsInterface\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"Interface of the ERC165 standard, as defined in the https://eips.ethereum.org/EIPS/eip-165[EIP]. Implementers can declare support of contract interfaces, which can then be queried by others ({ERC165Checker}). For an implementation, see {ERC165}.\",\"kind\":\"dev\",\"methods\":{\"supportsInterface(bytes4)\":{\"details\":\"Returns true if this contract implements the interface defined by `interfaceId`. See the corresponding https://eips.ethereum.org/EIPS/eip-165#how-interfaces-are-identified[EIP section] to learn more about how these ids are created. This function call must use less than 30 000 gas.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/utils/introspection/IERC165.sol\":\"IERC165\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/utils/introspection/IERC165.sol\":{\"keccak256\":\"0x447a5f3ddc18419d41ff92b3773fb86471b1db25773e07f877f548918a185bf1\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://be161e54f24e5c6fae81a12db1a8ae87bc5ae1b0ddc805d82a1440a68455088f\",\"dweb:/ipfs/QmP7C3CHdY9urF4dEMb9wmsp1wMxHF6nhA2yQE5SKiPAdy\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"contracts/NFTStaking.sol": {
				"MoonRabbitsStaking": {
					"abi": [
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "_RewardToken",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "_NFTCollection",
									"type": "address"
								}
							],
							"stateMutability": "nonpayable",
							"type": "constructor"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "previousOwner",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "newOwner",
									"type": "address"
								}
							],
							"name": "OwnershipTransferred",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "id",
									"type": "uint256"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "pool",
									"type": "uint256"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "time",
									"type": "uint256"
								}
							],
							"name": "Stake",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "id",
									"type": "uint256"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "pool",
									"type": "uint256"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "time",
									"type": "uint256"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "rewardTokens",
									"type": "uint256"
								}
							],
							"name": "UnStake",
							"type": "event"
						},
						{
							"inputs": [],
							"name": "NFTCollection",
							"outputs": [
								{
									"internalType": "contract IERC721",
									"name": "",
									"type": "address"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "_tempIndex",
									"type": "uint256"
								},
								{
									"internalType": "address",
									"name": "_user",
									"type": "address"
								}
							],
							"name": "checkIfAlreadyUnstaked",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "index",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "owner",
							"outputs": [
								{
									"internalType": "address",
									"name": "",
									"type": "address"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "renounceOwnership",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "rewardToken",
							"outputs": [
								{
									"internalType": "contract IERC20",
									"name": "",
									"type": "address"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "_tokenId",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "_pool",
									"type": "uint256"
								}
							],
							"name": "stakeNFT",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"name": "stakes",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "index",
									"type": "uint256"
								},
								{
									"internalType": "address",
									"name": "user",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "pool",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "timestamp",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"name": "staking_details",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "newOwner",
									"type": "address"
								}
							],
							"name": "transferOwnership",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "_index",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "_tokenId",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "_pool",
									"type": "uint256"
								}
							],
							"name": "unStakeNFT",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"name": "unstaking_details",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "_user",
									"type": "address"
								}
							],
							"name": "userStakingList",
							"outputs": [
								{
									"internalType": "uint256[]",
									"name": "",
									"type": "uint256[]"
								}
							],
							"stateMutability": "view",
							"type": "function"
						}
					],
					"devdoc": {
						"kind": "dev",
						"methods": {
							"checkIfAlreadyUnstaked(uint256,address)": {
								"params": {
									"_tempIndex": "of the nft",
									"_user": "of the user"
								}
							},
							"owner()": {
								"details": "Returns the address of the current owner."
							},
							"renounceOwnership()": {
								"details": "Leaves the contract without owner. It will not be possible to call `onlyOwner` functions anymore. Can only be called by the current owner. NOTE: Renouncing ownership will leave the contract without an owner, thereby removing any functionality that is only available to the owner."
							},
							"stakeNFT(uint256,uint256)": {
								"params": {
									"_pool": "Pool of NFT",
									"_tokenId": "Token Id of NFT to stake"
								}
							},
							"transferOwnership(address)": {
								"details": "Transfers ownership of the contract to a new account (`newOwner`). Can only be called by the current owner."
							},
							"unStakeNFT(uint256,uint256,uint256)": {
								"params": {
									"_pool": "Pool of NFT",
									"_tokenId": "Token Id of NFT to stake"
								}
							},
							"userStakingList(address)": {
								"params": {
									"_user": "Address of the user"
								}
							}
						},
						"version": 1
					},
					"evm": {
						"assembly": "    /* \"contracts/NFTStaking.sol\":502:3963  contract MoonRabbitsStaking is Ownable, ReentrancyGuard {... */\n  mstore(0x40, 0x80)\n    /* \"contracts/NFTStaking.sol\":719:720  0 */\n  0x00\n    /* \"contracts/NFTStaking.sol\":696:720  uint256 public index = 0 */\n  0x04\n  sstore\n    /* \"contracts/NFTStaking.sol\":1104:1261  constructor(address _RewardToken,address _NFTCollection) {... */\n  callvalue\n  dup1\n  iszero\n  tag_1\n  jumpi\n  0x00\n  dup1\n  revert\ntag_1:\n  pop\n  mload(0x40)\n  sub(codesize, bytecodeSize)\n  dup1\n  bytecodeSize\n  dup4\n  codecopy\n  dup2\n  dup2\n  add\n  0x40\n  mstore\n  dup2\n  add\n  swap1\n  tag_2\n  swap2\n  swap1\n  tag_3\n  jump\t// in\ntag_2:\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":936:968  _transferOwnership(_msgSender()) */\n  tag_8\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":955:967  _msgSender() */\n  tag_9\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":955:965  _msgSender */\n  shl(0x20, tag_10)\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":955:967  _msgSender() */\n  0x20\n  shr\n  jump\t// in\ntag_9:\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":936:954  _transferOwnership */\n  shl(0x20, tag_11)\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":936:968  _transferOwnership(_msgSender()) */\n  0x20\n  shr\n  jump\t// in\ntag_8:\n    /* \"@openzeppelin/contracts/security/ReentrancyGuard.sol\":1716:1717  1 */\n  0x01\n    /* \"@openzeppelin/contracts/security/ReentrancyGuard.sol\":1821:1828  _status */\n  dup1\n    /* \"@openzeppelin/contracts/security/ReentrancyGuard.sol\":1821:1843  _status = _NOT_ENTERED */\n  dup2\n  swap1\n  sstore\n  pop\n    /* \"contracts/NFTStaking.sol\":1192:1204  _RewardToken */\n  dup2\n    /* \"contracts/NFTStaking.sol\":1171:1182  rewardToken */\n  0x03\n  0x00\n    /* \"contracts/NFTStaking.sol\":1171:1205  rewardToken = IERC20(_RewardToken) */\n  0x0100\n  exp\n  dup2\n  sload\n  dup2\n  0xffffffffffffffffffffffffffffffffffffffff\n  mul\n  not\n  and\n  swap1\n  dup4\n  0xffffffffffffffffffffffffffffffffffffffff\n  and\n  mul\n  or\n  swap1\n  sstore\n  pop\n    /* \"contracts/NFTStaking.sol\":1239:1253  _NFTCollection */\n  dup1\n    /* \"contracts/NFTStaking.sol\":1215:1228  NFTCollection */\n  0x02\n  0x00\n    /* \"contracts/NFTStaking.sol\":1215:1254  NFTCollection = IERC721(_NFTCollection) */\n  0x0100\n  exp\n  dup2\n  sload\n  dup2\n  0xffffffffffffffffffffffffffffffffffffffff\n  mul\n  not\n  and\n  swap1\n  dup4\n  0xffffffffffffffffffffffffffffffffffffffff\n  and\n  mul\n  or\n  swap1\n  sstore\n  pop\n    /* \"contracts/NFTStaking.sol\":1104:1261  constructor(address _RewardToken,address _NFTCollection) {... */\n  pop\n  pop\n    /* \"contracts/NFTStaking.sol\":502:3963  contract MoonRabbitsStaking is Ownable, ReentrancyGuard {... */\n  jump(tag_14)\n    /* \"@openzeppelin/contracts/utils/Context.sol\":640:736  function _msgSender() internal view virtual returns (address) {... */\ntag_10:\n    /* \"@openzeppelin/contracts/utils/Context.sol\":693:700  address */\n  0x00\n    /* \"@openzeppelin/contracts/utils/Context.sol\":719:729  msg.sender */\n  caller\n    /* \"@openzeppelin/contracts/utils/Context.sol\":712:729  return msg.sender */\n  swap1\n  pop\n    /* \"@openzeppelin/contracts/utils/Context.sol\":640:736  function _msgSender() internal view virtual returns (address) {... */\n  swap1\n  jump\t// out\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":2433:2620  function _transferOwnership(address newOwner) internal virtual {... */\ntag_11:\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":2506:2522  address oldOwner */\n  0x00\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":2525:2531  _owner */\n  dup1\n  0x00\n  swap1\n  sload\n  swap1\n  0x0100\n  exp\n  swap1\n  div\n  0xffffffffffffffffffffffffffffffffffffffff\n  and\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":2506:2531  address oldOwner = _owner */\n  swap1\n  pop\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":2550:2558  newOwner */\n  dup2\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":2541:2547  _owner */\n  0x00\n  dup1\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":2541:2558  _owner = newOwner */\n  0x0100\n  exp\n  dup2\n  sload\n  dup2\n  0xffffffffffffffffffffffffffffffffffffffff\n  mul\n  not\n  and\n  swap1\n  dup4\n  0xffffffffffffffffffffffffffffffffffffffff\n  and\n  mul\n  or\n  swap1\n  sstore\n  pop\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":2604:2612  newOwner */\n  dup2\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":2573:2613  OwnershipTransferred(oldOwner, newOwner) */\n  0xffffffffffffffffffffffffffffffffffffffff\n  and\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":2594:2602  oldOwner */\n  dup2\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":2573:2613  OwnershipTransferred(oldOwner, newOwner) */\n  0xffffffffffffffffffffffffffffffffffffffff\n  and\n  0x8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e0\n  mload(0x40)\n  mload(0x40)\n  dup1\n  swap2\n  sub\n  swap1\n  log3\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":2496:2620  {... */\n  pop\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":2433:2620  function _transferOwnership(address newOwner) internal virtual {... */\n  pop\n  jump\t// out\n    /* \"#utility.yul\":88:205   */\ntag_18:\n    /* \"#utility.yul\":197:198   */\n  0x00\n    /* \"#utility.yul\":194:195   */\n  dup1\n    /* \"#utility.yul\":187:199   */\n  revert\n    /* \"#utility.yul\":334:460   */\ntag_20:\n    /* \"#utility.yul\":371:378   */\n  0x00\n    /* \"#utility.yul\":411:453   */\n  0xffffffffffffffffffffffffffffffffffffffff\n    /* \"#utility.yul\":404:409   */\n  dup3\n    /* \"#utility.yul\":400:454   */\n  and\n    /* \"#utility.yul\":389:454   */\n  swap1\n  pop\n    /* \"#utility.yul\":334:460   */\n  swap2\n  swap1\n  pop\n  jump\t// out\n    /* \"#utility.yul\":466:562   */\ntag_21:\n    /* \"#utility.yul\":503:510   */\n  0x00\n    /* \"#utility.yul\":532:556   */\n  tag_30\n    /* \"#utility.yul\":550:555   */\n  dup3\n    /* \"#utility.yul\":532:556   */\n  tag_20\n  jump\t// in\ntag_30:\n    /* \"#utility.yul\":521:556   */\n  swap1\n  pop\n    /* \"#utility.yul\":466:562   */\n  swap2\n  swap1\n  pop\n  jump\t// out\n    /* \"#utility.yul\":568:690   */\ntag_22:\n    /* \"#utility.yul\":641:665   */\n  tag_32\n    /* \"#utility.yul\":659:664   */\n  dup2\n    /* \"#utility.yul\":641:665   */\n  tag_21\n  jump\t// in\ntag_32:\n    /* \"#utility.yul\":634:639   */\n  dup2\n    /* \"#utility.yul\":631:666   */\n  eq\n    /* \"#utility.yul\":621:684   */\n  tag_33\n  jumpi\n    /* \"#utility.yul\":680:681   */\n  0x00\n    /* \"#utility.yul\":677:678   */\n  dup1\n    /* \"#utility.yul\":670:682   */\n  revert\n    /* \"#utility.yul\":621:684   */\ntag_33:\n    /* \"#utility.yul\":568:690   */\n  pop\n  jump\t// out\n    /* \"#utility.yul\":696:839   */\ntag_23:\n    /* \"#utility.yul\":753:758   */\n  0x00\n    /* \"#utility.yul\":784:790   */\n  dup2\n    /* \"#utility.yul\":778:791   */\n  mload\n    /* \"#utility.yul\":769:791   */\n  swap1\n  pop\n    /* \"#utility.yul\":800:833   */\n  tag_35\n    /* \"#utility.yul\":827:832   */\n  dup2\n    /* \"#utility.yul\":800:833   */\n  tag_22\n  jump\t// in\ntag_35:\n    /* \"#utility.yul\":696:839   */\n  swap3\n  swap2\n  pop\n  pop\n  jump\t// out\n    /* \"#utility.yul\":845:1352   */\ntag_3:\n    /* \"#utility.yul\":924:930   */\n  0x00\n    /* \"#utility.yul\":932:938   */\n  dup1\n    /* \"#utility.yul\":981:983   */\n  0x40\n    /* \"#utility.yul\":969:978   */\n  dup4\n    /* \"#utility.yul\":960:967   */\n  dup6\n    /* \"#utility.yul\":956:979   */\n  sub\n    /* \"#utility.yul\":952:984   */\n  slt\n    /* \"#utility.yul\":949:1068   */\n  iszero\n  tag_37\n  jumpi\n    /* \"#utility.yul\":987:1066   */\n  tag_38\n  tag_18\n  jump\t// in\ntag_38:\n    /* \"#utility.yul\":949:1068   */\ntag_37:\n    /* \"#utility.yul\":1107:1108   */\n  0x00\n    /* \"#utility.yul\":1132:1196   */\n  tag_39\n    /* \"#utility.yul\":1188:1195   */\n  dup6\n    /* \"#utility.yul\":1179:1185   */\n  dup3\n    /* \"#utility.yul\":1168:1177   */\n  dup7\n    /* \"#utility.yul\":1164:1186   */\n  add\n    /* \"#utility.yul\":1132:1196   */\n  tag_23\n  jump\t// in\ntag_39:\n    /* \"#utility.yul\":1122:1196   */\n  swap3\n  pop\n    /* \"#utility.yul\":1078:1206   */\n  pop\n    /* \"#utility.yul\":1245:1247   */\n  0x20\n    /* \"#utility.yul\":1271:1335   */\n  tag_40\n    /* \"#utility.yul\":1327:1334   */\n  dup6\n    /* \"#utility.yul\":1318:1324   */\n  dup3\n    /* \"#utility.yul\":1307:1316   */\n  dup7\n    /* \"#utility.yul\":1303:1325   */\n  add\n    /* \"#utility.yul\":1271:1335   */\n  tag_23\n  jump\t// in\ntag_40:\n    /* \"#utility.yul\":1261:1335   */\n  swap2\n  pop\n    /* \"#utility.yul\":1216:1345   */\n  pop\n    /* \"#utility.yul\":845:1352   */\n  swap3\n  pop\n  swap3\n  swap1\n  pop\n  jump\t// out\n    /* \"contracts/NFTStaking.sol\":502:3963  contract MoonRabbitsStaking is Ownable, ReentrancyGuard {... */\ntag_14:\n  dataSize(sub_0)\n  dup1\n  dataOffset(sub_0)\n  0x00\n  codecopy\n  0x00\n  return\nstop\n\nsub_0: assembly {\n        /* \"contracts/NFTStaking.sol\":502:3963  contract MoonRabbitsStaking is Ownable, ReentrancyGuard {... */\n      mstore(0x40, 0x80)\n      callvalue\n      dup1\n      iszero\n      tag_1\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_1:\n      pop\n      jumpi(tag_2, lt(calldatasize, 0x04))\n      shr(0xe0, calldataload(0x00))\n      dup1\n      0x78dba594\n      gt\n      tag_16\n      jumpi\n      dup1\n      0xd5a44f86\n      gt\n      tag_17\n      jumpi\n      dup1\n      0xd5a44f86\n      eq\n      tag_12\n      jumpi\n      dup1\n      0xf2fde38b\n      eq\n      tag_13\n      jumpi\n      dup1\n      0xf7c618c1\n      eq\n      tag_14\n      jumpi\n      dup1\n      0xfbaca086\n      eq\n      tag_15\n      jumpi\n      jump(tag_2)\n    tag_17:\n      dup1\n      0x78dba594\n      eq\n      tag_9\n      jumpi\n      dup1\n      0x79e5f7d7\n      eq\n      tag_10\n      jumpi\n      dup1\n      0x8da5cb5b\n      eq\n      tag_11\n      jumpi\n      jump(tag_2)\n    tag_16:\n      dup1\n      0x2986c0e5\n      eq\n      tag_3\n      jumpi\n      dup1\n      0x3af416d1\n      eq\n      tag_4\n      jumpi\n      dup1\n      0x3f106929\n      eq\n      tag_5\n      jumpi\n      dup1\n      0x51cecc80\n      eq\n      tag_6\n      jumpi\n      dup1\n      0x715018a6\n      eq\n      tag_7\n      jumpi\n      dup1\n      0x78b2e3a9\n      eq\n      tag_8\n      jumpi\n    tag_2:\n      0x00\n      dup1\n      revert\n        /* \"contracts/NFTStaking.sol\":696:720  uint256 public index = 0 */\n    tag_3:\n      tag_18\n      tag_19\n      jump\t// in\n    tag_18:\n      mload(0x40)\n      tag_20\n      swap2\n      swap1\n      tag_21\n      jump\t// in\n    tag_20:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"contracts/NFTStaking.sol\":1043:1097  mapping(address => uint256[]) public unstaking_details */\n    tag_4:\n      tag_22\n      0x04\n      dup1\n      calldatasize\n      sub\n      dup2\n      add\n      swap1\n      tag_23\n      swap2\n      swap1\n      tag_24\n      jump\t// in\n    tag_23:\n      tag_25\n      jump\t// in\n    tag_22:\n      mload(0x40)\n      tag_26\n      swap2\n      swap1\n      tag_21\n      jump\t// in\n    tag_26:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"contracts/NFTStaking.sol\":985:1037  mapping(address => uint256[]) public staking_details */\n    tag_5:\n      tag_27\n      0x04\n      dup1\n      calldatasize\n      sub\n      dup2\n      add\n      swap1\n      tag_28\n      swap2\n      swap1\n      tag_24\n      jump\t// in\n    tag_28:\n      tag_29\n      jump\t// in\n    tag_27:\n      mload(0x40)\n      tag_30\n      swap2\n      swap1\n      tag_21\n      jump\t// in\n    tag_30:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"contracts/NFTStaking.sol\":1989:2439  function stakeNFT(uint256 _tokenId, uint256 _pool) public {... */\n    tag_6:\n      tag_31\n      0x04\n      dup1\n      calldatasize\n      sub\n      dup2\n      add\n      swap1\n      tag_32\n      swap2\n      swap1\n      tag_33\n      jump\t// in\n    tag_32:\n      tag_34\n      jump\t// in\n    tag_31:\n      stop\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1831:1932  function renounceOwnership() public virtual onlyOwner {... */\n    tag_7:\n      tag_35\n      tag_36\n      jump\t// in\n    tag_35:\n      stop\n        /* \"contracts/NFTStaking.sol\":584:612  IERC721 public NFTCollection */\n    tag_8:\n      tag_37\n      tag_38\n      jump\t// in\n    tag_37:\n      mload(0x40)\n      tag_39\n      swap2\n      swap1\n      tag_40\n      jump\t// in\n    tag_39:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"contracts/NFTStaking.sol\":2602:3235  function unStakeNFT(uint256 _index,uint256 _tokenId, uint256 _pool) public {... */\n    tag_9:\n      tag_41\n      0x04\n      dup1\n      calldatasize\n      sub\n      dup2\n      add\n      swap1\n      tag_42\n      swap2\n      swap1\n      tag_43\n      jump\t// in\n    tag_42:\n      tag_44\n      jump\t// in\n    tag_41:\n      stop\n        /* \"contracts/NFTStaking.sol\":3328:3519  function userStakingList(address _user)... */\n    tag_10:\n      tag_45\n      0x04\n      dup1\n      calldatasize\n      sub\n      dup2\n      add\n      swap1\n      tag_46\n      swap2\n      swap1\n      tag_47\n      jump\t// in\n    tag_46:\n      tag_48\n      jump\t// in\n    tag_45:\n      mload(0x40)\n      tag_49\n      swap2\n      swap1\n      tag_50\n      jump\t// in\n    tag_49:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1201:1286  function owner() public view virtual returns (address) {... */\n    tag_11:\n      tag_51\n      tag_52\n      jump\t// in\n    tag_51:\n      mload(0x40)\n      tag_53\n      swap2\n      swap1\n      tag_54\n      jump\t// in\n    tag_53:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"contracts/NFTStaking.sol\":939:979  mapping(uint256 => Staker) public stakes */\n    tag_12:\n      tag_55\n      0x04\n      dup1\n      calldatasize\n      sub\n      dup2\n      add\n      swap1\n      tag_56\n      swap2\n      swap1\n      tag_57\n      jump\t// in\n    tag_56:\n      tag_58\n      jump\t// in\n    tag_55:\n      mload(0x40)\n      tag_59\n      swap6\n      swap5\n      swap4\n      swap3\n      swap2\n      swap1\n      tag_60\n      jump\t// in\n    tag_59:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2081:2279  function transferOwnership(address newOwner) public virtual onlyOwner {... */\n    tag_13:\n      tag_61\n      0x04\n      dup1\n      calldatasize\n      sub\n      dup2\n      add\n      swap1\n      tag_62\n      swap2\n      swap1\n      tag_47\n      jump\t// in\n    tag_62:\n      tag_63\n      jump\t// in\n    tag_61:\n      stop\n        /* \"contracts/NFTStaking.sol\":640:665  IERC20 public rewardToken */\n    tag_14:\n      tag_64\n      tag_65\n      jump\t// in\n    tag_64:\n      mload(0x40)\n      tag_66\n      swap2\n      swap1\n      tag_67\n      jump\t// in\n    tag_66:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"contracts/NFTStaking.sol\":3657:3961  function checkIfAlreadyUnstaked(uint256 _tempIndex,address _user) public view returns(bool) {... */\n    tag_15:\n      tag_68\n      0x04\n      dup1\n      calldatasize\n      sub\n      dup2\n      add\n      swap1\n      tag_69\n      swap2\n      swap1\n      tag_70\n      jump\t// in\n    tag_69:\n      tag_71\n      jump\t// in\n    tag_68:\n      mload(0x40)\n      tag_72\n      swap2\n      swap1\n      tag_73\n      jump\t// in\n    tag_72:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"contracts/NFTStaking.sol\":696:720  uint256 public index = 0 */\n    tag_19:\n      sload(0x04)\n      dup2\n      jump\t// out\n        /* \"contracts/NFTStaking.sol\":1043:1097  mapping(address => uint256[]) public unstaking_details */\n    tag_25:\n      mstore(0x20, 0x08)\n      dup2\n      0x00\n      mstore\n      keccak256(0x00, 0x40)\n      dup2\n      dup2\n      sload\n      dup2\n      lt\n      tag_74\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_74:\n      swap1\n      0x00\n      mstore\n      keccak256(0x00, 0x20)\n      add\n      0x00\n      swap2\n      pop\n      swap2\n      pop\n      pop\n      sload\n      dup2\n      jump\t// out\n        /* \"contracts/NFTStaking.sol\":985:1037  mapping(address => uint256[]) public staking_details */\n    tag_29:\n      mstore(0x20, 0x07)\n      dup2\n      0x00\n      mstore\n      keccak256(0x00, 0x40)\n      dup2\n      dup2\n      sload\n      dup2\n      lt\n      tag_76\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_76:\n      swap1\n      0x00\n      mstore\n      keccak256(0x00, 0x20)\n      add\n      0x00\n      swap2\n      pop\n      swap2\n      pop\n      pop\n      sload\n      dup2\n      jump\t// out\n        /* \"contracts/NFTStaking.sol\":1989:2439  function stakeNFT(uint256 _tokenId, uint256 _pool) public {... */\n    tag_34:\n        /* \"contracts/NFTStaking.sol\":2100:2110  msg.sender */\n      caller\n        /* \"contracts/NFTStaking.sol\":2065:2110  NFTCollection.ownerOf(_tokenId) == msg.sender */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"contracts/NFTStaking.sol\":2065:2078  NFTCollection */\n      0x02\n      0x00\n      swap1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"contracts/NFTStaking.sol\":2065:2086  NFTCollection.ownerOf */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0x6352211e\n        /* \"contracts/NFTStaking.sol\":2087:2095  _tokenId */\n      dup5\n        /* \"contracts/NFTStaking.sol\":2065:2096  NFTCollection.ownerOf(_tokenId) */\n      mload(0x40)\n      dup3\n      0xffffffff\n      and\n      0xe0\n      shl\n      dup2\n      mstore\n      0x04\n      add\n      tag_79\n      swap2\n      swap1\n      tag_21\n      jump\t// in\n    tag_79:\n      0x20\n      mload(0x40)\n      dup1\n      dup4\n      sub\n      dup2\n      dup7\n      gas\n      staticcall\n      iszero\n      dup1\n      iszero\n      tag_81\n      jumpi\n      returndatasize\n      0x00\n      dup1\n      returndatacopy\n      revert(0x00, returndatasize)\n    tag_81:\n      pop\n      pop\n      pop\n      pop\n      mload(0x40)\n      returndatasize\n      not(0x1f)\n      0x1f\n      dup3\n      add\n      and\n      dup3\n      add\n      dup1\n      0x40\n      mstore\n      pop\n      dup2\n      add\n      swap1\n      tag_82\n      swap2\n      swap1\n      tag_83\n      jump\t// in\n    tag_82:\n        /* \"contracts/NFTStaking.sol\":2065:2110  NFTCollection.ownerOf(_tokenId) == msg.sender */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      eq\n        /* \"contracts/NFTStaking.sol\":2057:2144  require(NFTCollection.ownerOf(_tokenId) == msg.sender,\"Can't stake nft you don't own!\") */\n      tag_84\n      jumpi\n      mload(0x40)\n      0x08c379a000000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_85\n      swap1\n      tag_86\n      jump\t// in\n    tag_85:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n    tag_84:\n        /* \"contracts/NFTStaking.sol\":2170:2227  Staker(index,msg.sender,_tokenId, _pool, block.timestamp) */\n      mload(0x40)\n      dup1\n      0xa0\n      add\n      0x40\n      mstore\n      dup1\n        /* \"contracts/NFTStaking.sol\":2177:2182  index */\n      sload(0x04)\n        /* \"contracts/NFTStaking.sol\":2170:2227  Staker(index,msg.sender,_tokenId, _pool, block.timestamp) */\n      dup2\n      mstore\n      0x20\n      add\n        /* \"contracts/NFTStaking.sol\":2183:2193  msg.sender */\n      caller\n        /* \"contracts/NFTStaking.sol\":2170:2227  Staker(index,msg.sender,_tokenId, _pool, block.timestamp) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n        /* \"contracts/NFTStaking.sol\":2194:2202  _tokenId */\n      dup4\n        /* \"contracts/NFTStaking.sol\":2170:2227  Staker(index,msg.sender,_tokenId, _pool, block.timestamp) */\n      dup2\n      mstore\n      0x20\n      add\n        /* \"contracts/NFTStaking.sol\":2204:2209  _pool */\n      dup3\n        /* \"contracts/NFTStaking.sol\":2170:2227  Staker(index,msg.sender,_tokenId, _pool, block.timestamp) */\n      dup2\n      mstore\n      0x20\n      add\n        /* \"contracts/NFTStaking.sol\":2211:2226  block.timestamp */\n      timestamp\n        /* \"contracts/NFTStaking.sol\":2170:2227  Staker(index,msg.sender,_tokenId, _pool, block.timestamp) */\n      dup2\n      mstore\n      pop\n        /* \"contracts/NFTStaking.sol\":2154:2160  stakes */\n      0x06\n        /* \"contracts/NFTStaking.sol\":2154:2167  stakes[index] */\n      0x00\n        /* \"contracts/NFTStaking.sol\":2161:2166  index */\n      sload(0x04)\n        /* \"contracts/NFTStaking.sol\":2154:2167  stakes[index] */\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n        /* \"contracts/NFTStaking.sol\":2154:2227  stakes[index] = Staker(index,msg.sender,_tokenId, _pool, block.timestamp) */\n      0x00\n      dup3\n      add\n      mload\n      dup2\n      0x00\n      add\n      sstore\n      0x20\n      dup3\n      add\n      mload\n      dup2\n      0x01\n      add\n      exp(0x0100, 0x00)\n      dup2\n      sload\n      dup2\n      0xffffffffffffffffffffffffffffffffffffffff\n      mul\n      not\n      and\n      swap1\n      dup4\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      mul\n      or\n      swap1\n      sstore\n      pop\n      0x40\n      dup3\n      add\n      mload\n      dup2\n      0x02\n      add\n      sstore\n      0x60\n      dup3\n      add\n      mload\n      dup2\n      0x03\n      add\n      sstore\n      0x80\n      dup3\n      add\n      mload\n      dup2\n      0x04\n      add\n      sstore\n      swap1\n      pop\n      pop\n        /* \"contracts/NFTStaking.sol\":2237:2252  staking_details */\n      0x07\n        /* \"contracts/NFTStaking.sol\":2237:2264  staking_details[msg.sender] */\n      0x00\n        /* \"contracts/NFTStaking.sol\":2253:2263  msg.sender */\n      caller\n        /* \"contracts/NFTStaking.sol\":2237:2264  staking_details[msg.sender] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n        /* \"contracts/NFTStaking.sol\":2270:2275  index */\n      sload(0x04)\n        /* \"contracts/NFTStaking.sol\":2237:2276  staking_details[msg.sender].push(index) */\n      swap1\n      dup1\n      0x01\n      dup2\n      sload\n      add\n      dup1\n      dup3\n      sstore\n      dup1\n      swap2\n      pop\n      pop\n      0x01\n      swap1\n      sub\n      swap1\n      0x00\n      mstore\n      keccak256(0x00, 0x20)\n      add\n      0x00\n      swap1\n      swap2\n      swap1\n      swap2\n      swap1\n      swap2\n      pop\n      sstore\n        /* \"contracts/NFTStaking.sol\":2286:2299  NFTCollection */\n      0x02\n      0x00\n      swap1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"contracts/NFTStaking.sol\":2286:2312  NFTCollection.transferFrom */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0x23b872dd\n        /* \"contracts/NFTStaking.sol\":2313:2323  msg.sender */\n      caller\n        /* \"contracts/NFTStaking.sol\":2333:2337  this */\n      address\n        /* \"contracts/NFTStaking.sol\":2340:2348  _tokenId */\n      dup6\n        /* \"contracts/NFTStaking.sol\":2286:2349  NFTCollection.transferFrom(msg.sender, address(this), _tokenId) */\n      mload(0x40)\n      dup5\n      0xffffffff\n      and\n      0xe0\n      shl\n      dup2\n      mstore\n      0x04\n      add\n      tag_88\n      swap4\n      swap3\n      swap2\n      swap1\n      tag_89\n      jump\t// in\n    tag_88:\n      0x00\n      mload(0x40)\n      dup1\n      dup4\n      sub\n      dup2\n      0x00\n      dup8\n      dup1\n      extcodesize\n      iszero\n      dup1\n      iszero\n      tag_90\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_90:\n      pop\n      gas\n      call\n      iszero\n      dup1\n      iszero\n      tag_92\n      jumpi\n      returndatasize\n      0x00\n      dup1\n      returndatacopy\n      revert(0x00, returndatasize)\n    tag_92:\n      pop\n      pop\n      pop\n      pop\n        /* \"contracts/NFTStaking.sol\":2359:2364  index */\n      0x04\n      0x00\n        /* \"contracts/NFTStaking.sol\":2359:2366  index++ */\n      dup2\n      sload\n      dup1\n      swap3\n      swap2\n      swap1\n      tag_93\n      swap1\n      tag_94\n      jump\t// in\n    tag_93:\n      swap2\n      swap1\n      pop\n      sstore\n      pop\n        /* \"contracts/NFTStaking.sol\":2387:2397  msg.sender */\n      caller\n        /* \"contracts/NFTStaking.sol\":2381:2432  Stake(msg.sender, _tokenId, _pool, block.timestamp) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xf556991011e831bcfac4f406d547e5e32cdd98267efab83935230d5f8d02c446\n        /* \"contracts/NFTStaking.sol\":2399:2407  _tokenId */\n      dup4\n        /* \"contracts/NFTStaking.sol\":2409:2414  _pool */\n      dup4\n        /* \"contracts/NFTStaking.sol\":2416:2431  block.timestamp */\n      timestamp\n        /* \"contracts/NFTStaking.sol\":2381:2432  Stake(msg.sender, _tokenId, _pool, block.timestamp) */\n      mload(0x40)\n      tag_95\n      swap4\n      swap3\n      swap2\n      swap1\n      tag_96\n      jump\t// in\n    tag_95:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      log2\n        /* \"contracts/NFTStaking.sol\":1989:2439  function stakeNFT(uint256 _tokenId, uint256 _pool) public {... */\n      pop\n      pop\n      jump\t// out\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1831:1932  function renounceOwnership() public virtual onlyOwner {... */\n    tag_36:\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1094:1107  _checkOwner() */\n      tag_98\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1094:1105  _checkOwner */\n      tag_99\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1094:1107  _checkOwner() */\n      jump\t// in\n    tag_98:\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1895:1925  _transferOwnership(address(0)) */\n      tag_101\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1922:1923  0 */\n      0x00\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1895:1913  _transferOwnership */\n      tag_102\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1895:1925  _transferOwnership(address(0)) */\n      jump\t// in\n    tag_101:\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1831:1932  function renounceOwnership() public virtual onlyOwner {... */\n      jump\t// out\n        /* \"contracts/NFTStaking.sol\":584:612  IERC721 public NFTCollection */\n    tag_38:\n      0x02\n      0x00\n      swap1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      jump\t// out\n        /* \"contracts/NFTStaking.sol\":2602:3235  function unStakeNFT(uint256 _index,uint256 _tokenId, uint256 _pool) public {... */\n    tag_44:\n        /* \"contracts/NFTStaking.sol\":2758:2763  _pool */\n      dup1\n        /* \"contracts/NFTStaking.sol\":2752:2754  24 */\n      0x18\n        /* \"contracts/NFTStaking.sol\":2747:2749  60 */\n      0x3c\n        /* \"contracts/NFTStaking.sol\":2742:2744  60 */\n      dup1\n        /* \"contracts/NFTStaking.sol\":2714:2720  stakes */\n      0x06\n        /* \"contracts/NFTStaking.sol\":2714:2728  stakes[_index] */\n      0x00\n        /* \"contracts/NFTStaking.sol\":2721:2727  _index */\n      dup9\n        /* \"contracts/NFTStaking.sol\":2714:2728  stakes[_index] */\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n        /* \"contracts/NFTStaking.sol\":2714:2738  stakes[_index].timestamp */\n      0x04\n      add\n      sload\n        /* \"contracts/NFTStaking.sol\":2696:2711  block.timestamp */\n      timestamp\n        /* \"contracts/NFTStaking.sol\":2696:2738  block.timestamp - stakes[_index].timestamp */\n      tag_104\n      swap2\n      swap1\n      tag_105\n      jump\t// in\n    tag_104:\n        /* \"contracts/NFTStaking.sol\":2695:2744  (block.timestamp - stakes[_index].timestamp) / 60 */\n      tag_106\n      swap2\n      swap1\n      tag_107\n      jump\t// in\n    tag_106:\n        /* \"contracts/NFTStaking.sol\":2695:2749  (block.timestamp - stakes[_index].timestamp) / 60 / 60 */\n      tag_108\n      swap2\n      swap1\n      tag_107\n      jump\t// in\n    tag_108:\n        /* \"contracts/NFTStaking.sol\":2695:2754  (block.timestamp - stakes[_index].timestamp) / 60 / 60 / 24 */\n      tag_109\n      swap2\n      swap1\n      tag_107\n      jump\t// in\n    tag_109:\n        /* \"contracts/NFTStaking.sol\":2695:2763  (block.timestamp - stakes[_index].timestamp) / 60 / 60 / 24 >= _pool */\n      lt\n      iszero\n        /* \"contracts/NFTStaking.sol\":2687:2797  require((block.timestamp - stakes[_index].timestamp) / 60 / 60 / 24 >= _pool,\"Staking pool not ended yet!!!!\") */\n      tag_110\n      jumpi\n      mload(0x40)\n      0x08c379a000000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_111\n      swap1\n      tag_112\n      jump\t// in\n    tag_111:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n    tag_110:\n        /* \"contracts/NFTStaking.sol\":2838:2848  msg.sender */\n      caller\n        /* \"contracts/NFTStaking.sol\":2815:2848  stakes[_index].user == msg.sender */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"contracts/NFTStaking.sol\":2815:2821  stakes */\n      0x06\n        /* \"contracts/NFTStaking.sol\":2815:2829  stakes[_index] */\n      0x00\n        /* \"contracts/NFTStaking.sol\":2822:2828  _index */\n      dup6\n        /* \"contracts/NFTStaking.sol\":2815:2829  stakes[_index] */\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n        /* \"contracts/NFTStaking.sol\":2815:2834  stakes[_index].user */\n      0x01\n      add\n      0x00\n      swap1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"contracts/NFTStaking.sol\":2815:2848  stakes[_index].user == msg.sender */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      eq\n        /* \"contracts/NFTStaking.sol\":2807:2889  require(stakes[_index].user == msg.sender,\"You are not owner of this NFT staking\") */\n      tag_113\n      jumpi\n      mload(0x40)\n      0x08c379a000000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_114\n      swap1\n      tag_115\n      jump\t// in\n    tag_114:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n    tag_113:\n        /* \"contracts/NFTStaking.sol\":2906:2912  stakes */\n      0x06\n        /* \"contracts/NFTStaking.sol\":2906:2920  stakes[_index] */\n      0x00\n        /* \"contracts/NFTStaking.sol\":2913:2919  _index */\n      dup5\n        /* \"contracts/NFTStaking.sol\":2906:2920  stakes[_index] */\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n      0x00\n        /* \"contracts/NFTStaking.sol\":2899:2920  delete stakes[_index] */\n      dup1\n      dup3\n      add\n      0x00\n      swap1\n      sstore\n      0x01\n      dup3\n      add\n      exp(0x0100, 0x00)\n      dup2\n      sload\n      swap1\n      0xffffffffffffffffffffffffffffffffffffffff\n      mul\n      not\n      and\n      swap1\n      sstore\n      0x02\n      dup3\n      add\n      0x00\n      swap1\n      sstore\n      0x03\n      dup3\n      add\n      0x00\n      swap1\n      sstore\n      0x04\n      dup3\n      add\n      0x00\n      swap1\n      sstore\n      pop\n      pop\n        /* \"contracts/NFTStaking.sol\":2930:2947  unstaking_details */\n      0x08\n        /* \"contracts/NFTStaking.sol\":2930:2959  unstaking_details[msg.sender] */\n      0x00\n        /* \"contracts/NFTStaking.sol\":2948:2958  msg.sender */\n      caller\n        /* \"contracts/NFTStaking.sol\":2930:2959  unstaking_details[msg.sender] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n        /* \"contracts/NFTStaking.sol\":2965:2971  _index */\n      dup4\n        /* \"contracts/NFTStaking.sol\":2930:2972  unstaking_details[msg.sender].push(_index) */\n      swap1\n      dup1\n      0x01\n      dup2\n      sload\n      add\n      dup1\n      dup3\n      sstore\n      dup1\n      swap2\n      pop\n      pop\n      0x01\n      swap1\n      sub\n      swap1\n      0x00\n      mstore\n      keccak256(0x00, 0x20)\n      add\n      0x00\n      swap1\n      swap2\n      swap1\n      swap2\n      swap1\n      swap2\n      pop\n      sstore\n        /* \"contracts/NFTStaking.sol\":2982:2995  NFTCollection */\n      0x02\n      0x00\n      swap1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"contracts/NFTStaking.sol\":2982:3008  NFTCollection.transferFrom */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0x23b872dd\n        /* \"contracts/NFTStaking.sol\":3018:3022  this */\n      address\n        /* \"contracts/NFTStaking.sol\":3025:3035  msg.sender */\n      caller\n        /* \"contracts/NFTStaking.sol\":3037:3045  _tokenId */\n      dup6\n        /* \"contracts/NFTStaking.sol\":2982:3046  NFTCollection.transferFrom( address(this), msg.sender, _tokenId) */\n      mload(0x40)\n      dup5\n      0xffffffff\n      and\n      0xe0\n      shl\n      dup2\n      mstore\n      0x04\n      add\n      tag_117\n      swap4\n      swap3\n      swap2\n      swap1\n      tag_89\n      jump\t// in\n    tag_117:\n      0x00\n      mload(0x40)\n      dup1\n      dup4\n      sub\n      dup2\n      0x00\n      dup8\n      dup1\n      extcodesize\n      iszero\n      dup1\n      iszero\n      tag_118\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_118:\n      pop\n      gas\n      call\n      iszero\n      dup1\n      iszero\n      tag_120\n      jumpi\n      returndatasize\n      0x00\n      dup1\n      returndatacopy\n      revert(0x00, returndatasize)\n    tag_120:\n      pop\n      pop\n      pop\n      pop\n        /* \"contracts/NFTStaking.sol\":3056:3070  uint256 reward */\n      0x00\n        /* \"contracts/NFTStaking.sol\":3074:3100  calculateRewardPool(_pool) */\n      tag_121\n        /* \"contracts/NFTStaking.sol\":3094:3099  _pool */\n      dup3\n        /* \"contracts/NFTStaking.sol\":3074:3093  calculateRewardPool */\n      tag_122\n        /* \"contracts/NFTStaking.sol\":3074:3100  calculateRewardPool(_pool) */\n      jump\t// in\n    tag_121:\n        /* \"contracts/NFTStaking.sol\":3056:3100  uint256 reward =  calculateRewardPool(_pool) */\n      swap1\n      pop\n        /* \"contracts/NFTStaking.sol\":3110:3121  rewardToken */\n      0x03\n      0x00\n      swap1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"contracts/NFTStaking.sol\":3110:3130  rewardToken.transfer */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xa9059cbb\n        /* \"contracts/NFTStaking.sol\":3132:3142  msg.sender */\n      caller\n        /* \"contracts/NFTStaking.sol\":3144:3150  reward */\n      dup4\n        /* \"contracts/NFTStaking.sol\":3110:3151  rewardToken.transfer( msg.sender, reward) */\n      mload(0x40)\n      dup4\n      0xffffffff\n      and\n      0xe0\n      shl\n      dup2\n      mstore\n      0x04\n      add\n      tag_123\n      swap3\n      swap2\n      swap1\n      tag_124\n      jump\t// in\n    tag_123:\n      0x20\n      mload(0x40)\n      dup1\n      dup4\n      sub\n      dup2\n      0x00\n      dup8\n      gas\n      call\n      iszero\n      dup1\n      iszero\n      tag_126\n      jumpi\n      returndatasize\n      0x00\n      dup1\n      returndatacopy\n      revert(0x00, returndatasize)\n    tag_126:\n      pop\n      pop\n      pop\n      pop\n      mload(0x40)\n      returndatasize\n      not(0x1f)\n      0x1f\n      dup3\n      add\n      and\n      dup3\n      add\n      dup1\n      0x40\n      mstore\n      pop\n      dup2\n      add\n      swap1\n      tag_127\n      swap2\n      swap1\n      tag_128\n      jump\t// in\n    tag_127:\n      pop\n        /* \"contracts/NFTStaking.sol\":3174:3184  msg.sender */\n      caller\n        /* \"contracts/NFTStaking.sol\":3166:3228  UnStake(msg.sender, _tokenId, _pool,  block.timestamp, reward) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xf74c9f1985016ff6aa83c3fd81e31d0be3b194f205ae5e1b57f5bd74ad28e4cf\n        /* \"contracts/NFTStaking.sol\":3186:3194  _tokenId */\n      dup5\n        /* \"contracts/NFTStaking.sol\":3196:3201  _pool */\n      dup5\n        /* \"contracts/NFTStaking.sol\":3204:3219  block.timestamp */\n      timestamp\n        /* \"contracts/NFTStaking.sol\":3221:3227  reward */\n      dup6\n        /* \"contracts/NFTStaking.sol\":3166:3228  UnStake(msg.sender, _tokenId, _pool,  block.timestamp, reward) */\n      mload(0x40)\n      tag_129\n      swap5\n      swap4\n      swap3\n      swap2\n      swap1\n      tag_130\n      jump\t// in\n    tag_129:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      log2\n        /* \"contracts/NFTStaking.sol\":2677:3235  {... */\n      pop\n        /* \"contracts/NFTStaking.sol\":2602:3235  function unStakeNFT(uint256 _index,uint256 _tokenId, uint256 _pool) public {... */\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"contracts/NFTStaking.sol\":3328:3519  function userStakingList(address _user)... */\n    tag_48:\n        /* \"contracts/NFTStaking.sol\":3413:3429  uint256[] memory */\n      0x60\n        /* \"contracts/NFTStaking.sol\":3445:3466  uint256[] memory list */\n      0x00\n        /* \"contracts/NFTStaking.sol\":3469:3484  staking_details */\n      0x07\n        /* \"contracts/NFTStaking.sol\":3469:3491  staking_details[_user] */\n      0x00\n        /* \"contracts/NFTStaking.sol\":3485:3490  _user */\n      dup5\n        /* \"contracts/NFTStaking.sol\":3469:3491  staking_details[_user] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n        /* \"contracts/NFTStaking.sol\":3445:3491  uint256[] memory list = staking_details[_user] */\n      dup1\n      sload\n      dup1\n      0x20\n      mul\n      0x20\n      add\n      mload(0x40)\n      swap1\n      dup2\n      add\n      0x40\n      mstore\n      dup1\n      swap3\n      swap2\n      swap1\n      dup2\n      dup2\n      mstore\n      0x20\n      add\n      dup3\n      dup1\n      sload\n      dup1\n      iszero\n      tag_132\n      jumpi\n      0x20\n      mul\n      dup3\n      add\n      swap2\n      swap1\n      0x00\n      mstore\n      keccak256(0x00, 0x20)\n      swap1\n    tag_133:\n      dup2\n      sload\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      0x01\n      add\n      swap1\n      dup1\n      dup4\n      gt\n      tag_133\n      jumpi\n    tag_132:\n      pop\n      pop\n      pop\n      pop\n      pop\n      swap1\n      pop\n        /* \"contracts/NFTStaking.sol\":3508:3512  list */\n      dup1\n        /* \"contracts/NFTStaking.sol\":3501:3512  return list */\n      swap2\n      pop\n      pop\n        /* \"contracts/NFTStaking.sol\":3328:3519  function userStakingList(address _user)... */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1201:1286  function owner() public view virtual returns (address) {... */\n    tag_52:\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1247:1254  address */\n      0x00\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1273:1279  _owner */\n      dup1\n      0x00\n      swap1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1266:1279  return _owner */\n      swap1\n      pop\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1201:1286  function owner() public view virtual returns (address) {... */\n      swap1\n      jump\t// out\n        /* \"contracts/NFTStaking.sol\":939:979  mapping(uint256 => Staker) public stakes */\n    tag_58:\n      mstore(0x20, 0x06)\n      dup1\n      0x00\n      mstore\n      keccak256(0x00, 0x40)\n      0x00\n      swap2\n      pop\n      swap1\n      pop\n      dup1\n      0x00\n      add\n      sload\n      swap1\n      dup1\n      0x01\n      add\n      0x00\n      swap1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      swap1\n      dup1\n      0x02\n      add\n      sload\n      swap1\n      dup1\n      0x03\n      add\n      sload\n      swap1\n      dup1\n      0x04\n      add\n      sload\n      swap1\n      pop\n      dup6\n      jump\t// out\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2081:2279  function transferOwnership(address newOwner) public virtual onlyOwner {... */\n    tag_63:\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1094:1107  _checkOwner() */\n      tag_136\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1094:1105  _checkOwner */\n      tag_99\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1094:1107  _checkOwner() */\n      jump\t// in\n    tag_136:\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2189:2190  0 */\n      0x00\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2169:2191  newOwner != address(0) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2169:2177  newOwner */\n      dup2\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2169:2191  newOwner != address(0) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      sub\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2161:2234  require(newOwner != address(0), \"Ownable: new owner is the zero address\") */\n      tag_138\n      jumpi\n      mload(0x40)\n      0x08c379a000000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_139\n      swap1\n      tag_140\n      jump\t// in\n    tag_139:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n    tag_138:\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2244:2272  _transferOwnership(newOwner) */\n      tag_141\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2263:2271  newOwner */\n      dup2\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2244:2262  _transferOwnership */\n      tag_102\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2244:2272  _transferOwnership(newOwner) */\n      jump\t// in\n    tag_141:\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2081:2279  function transferOwnership(address newOwner) public virtual onlyOwner {... */\n      pop\n      jump\t// out\n        /* \"contracts/NFTStaking.sol\":640:665  IERC20 public rewardToken */\n    tag_65:\n      0x03\n      0x00\n      swap1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      jump\t// out\n        /* \"contracts/NFTStaking.sol\":3657:3961  function checkIfAlreadyUnstaked(uint256 _tempIndex,address _user) public view returns(bool) {... */\n    tag_71:\n        /* \"contracts/NFTStaking.sol\":3743:3747  bool */\n      0x00\n        /* \"contracts/NFTStaking.sol\":3764:3770  uint j */\n      dup1\n        /* \"contracts/NFTStaking.sol\":3771:3772  0 */\n      0x00\n        /* \"contracts/NFTStaking.sol\":3764:3772  uint j=0 */\n      swap1\n      pop\n        /* \"contracts/NFTStaking.sol\":3759:3931  for (uint j=0; j < unstaking_details[_user].length; j++) {... */\n    tag_143:\n        /* \"contracts/NFTStaking.sol\":3778:3795  unstaking_details */\n      0x08\n        /* \"contracts/NFTStaking.sol\":3778:3802  unstaking_details[_user] */\n      0x00\n        /* \"contracts/NFTStaking.sol\":3796:3801  _user */\n      dup5\n        /* \"contracts/NFTStaking.sol\":3778:3802  unstaking_details[_user] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n        /* \"contracts/NFTStaking.sol\":3778:3809  unstaking_details[_user].length */\n      dup1\n      sload\n      swap1\n      pop\n        /* \"contracts/NFTStaking.sol\":3774:3775  j */\n      dup2\n        /* \"contracts/NFTStaking.sol\":3774:3809  j < unstaking_details[_user].length */\n      lt\n        /* \"contracts/NFTStaking.sol\":3759:3931  for (uint j=0; j < unstaking_details[_user].length; j++) {... */\n      iszero\n      tag_144\n      jumpi\n        /* \"contracts/NFTStaking.sol\":3862:3872  _tempIndex */\n      dup4\n        /* \"contracts/NFTStaking.sol\":3833:3850  unstaking_details */\n      0x08\n        /* \"contracts/NFTStaking.sol\":3833:3857  unstaking_details[_user] */\n      0x00\n        /* \"contracts/NFTStaking.sol\":3851:3856  _user */\n      dup6\n        /* \"contracts/NFTStaking.sol\":3833:3857  unstaking_details[_user] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n        /* \"contracts/NFTStaking.sol\":3858:3859  j */\n      dup3\n        /* \"contracts/NFTStaking.sol\":3833:3860  unstaking_details[_user][j] */\n      dup2\n      sload\n      dup2\n      lt\n      tag_146\n      jumpi\n      tag_147\n      tag_148\n      jump\t// in\n    tag_147:\n    tag_146:\n      swap1\n      0x00\n      mstore\n      keccak256(0x00, 0x20)\n      add\n      sload\n        /* \"contracts/NFTStaking.sol\":3833:3872  unstaking_details[_user][j]==_tempIndex */\n      sub\n        /* \"contracts/NFTStaking.sol\":3830:3921  if(unstaking_details[_user][j]==_tempIndex){... */\n      tag_150\n      jumpi\n        /* \"contracts/NFTStaking.sol\":3902:3906  true */\n      0x01\n        /* \"contracts/NFTStaking.sol\":3895:3906  return true */\n      swap2\n      pop\n      pop\n      jump(tag_142)\n        /* \"contracts/NFTStaking.sol\":3830:3921  if(unstaking_details[_user][j]==_tempIndex){... */\n    tag_150:\n        /* \"contracts/NFTStaking.sol\":3811:3814  j++ */\n      dup1\n      dup1\n      tag_151\n      swap1\n      tag_94\n      jump\t// in\n    tag_151:\n      swap2\n      pop\n      pop\n        /* \"contracts/NFTStaking.sol\":3759:3931  for (uint j=0; j < unstaking_details[_user].length; j++) {... */\n      jump(tag_143)\n    tag_144:\n      pop\n        /* \"contracts/NFTStaking.sol\":3949:3954  false */\n      0x00\n        /* \"contracts/NFTStaking.sol\":3942:3954  return false */\n      swap1\n      pop\n        /* \"contracts/NFTStaking.sol\":3657:3961  function checkIfAlreadyUnstaked(uint256 _tempIndex,address _user) public view returns(bool) {... */\n    tag_142:\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1359:1489  function _checkOwner() internal view virtual {... */\n    tag_99:\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1433:1445  _msgSender() */\n      tag_153\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1433:1443  _msgSender */\n      tag_154\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1433:1445  _msgSender() */\n      jump\t// in\n    tag_153:\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1422:1445  owner() == _msgSender() */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1422:1429  owner() */\n      tag_155\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1422:1427  owner */\n      tag_52\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1422:1429  owner() */\n      jump\t// in\n    tag_155:\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1422:1445  owner() == _msgSender() */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      eq\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1414:1482  require(owner() == _msgSender(), \"Ownable: caller is not the owner\") */\n      tag_156\n      jumpi\n      mload(0x40)\n      0x08c379a000000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_157\n      swap1\n      tag_158\n      jump\t// in\n    tag_157:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n    tag_156:\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1359:1489  function _checkOwner() internal view virtual {... */\n      jump\t// out\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2433:2620  function _transferOwnership(address newOwner) internal virtual {... */\n    tag_102:\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2506:2522  address oldOwner */\n      0x00\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2525:2531  _owner */\n      dup1\n      0x00\n      swap1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2506:2531  address oldOwner = _owner */\n      swap1\n      pop\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2550:2558  newOwner */\n      dup2\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2541:2547  _owner */\n      0x00\n      dup1\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2541:2558  _owner = newOwner */\n      0x0100\n      exp\n      dup2\n      sload\n      dup2\n      0xffffffffffffffffffffffffffffffffffffffff\n      mul\n      not\n      and\n      swap1\n      dup4\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      mul\n      or\n      swap1\n      sstore\n      pop\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2604:2612  newOwner */\n      dup2\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2573:2613  OwnershipTransferred(oldOwner, newOwner) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2594:2602  oldOwner */\n      dup2\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2573:2613  OwnershipTransferred(oldOwner, newOwner) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0x8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e0\n      mload(0x40)\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      log3\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2496:2620  {... */\n      pop\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2433:2620  function _transferOwnership(address newOwner) internal virtual {... */\n      pop\n      jump\t// out\n        /* \"contracts/NFTStaking.sol\":1544:1839  function calculateRewardPool(uint256 _pool) private pure returns(uint256)  {... */\n    tag_122:\n        /* \"contracts/NFTStaking.sol\":1609:1616  uint256 */\n      0x00\n        /* \"contracts/NFTStaking.sol\":1639:1640  7 */\n      0x07\n        /* \"contracts/NFTStaking.sol\":1632:1637  _pool */\n      dup3\n        /* \"contracts/NFTStaking.sol\":1632:1640  _pool==7 */\n      sub\n        /* \"contracts/NFTStaking.sol\":1629:1833  if(_pool==7) {... */\n      tag_161\n      jumpi\n        /* \"contracts/NFTStaking.sol\":1663:1667  1000 */\n      0x03e8\n        /* \"contracts/NFTStaking.sol\":1656:1667  return 1000 */\n      swap1\n      pop\n      jump(tag_160)\n        /* \"contracts/NFTStaking.sol\":1629:1833  if(_pool==7) {... */\n    tag_161:\n        /* \"contracts/NFTStaking.sol\":1694:1696  14 */\n      0x0e\n        /* \"contracts/NFTStaking.sol\":1687:1692  _pool */\n      dup3\n        /* \"contracts/NFTStaking.sol\":1687:1696  _pool==14 */\n      sub\n        /* \"contracts/NFTStaking.sol\":1684:1833  if(_pool==14) {... */\n      tag_163\n      jumpi\n        /* \"contracts/NFTStaking.sol\":1719:1723  3000 */\n      0x0bb8\n        /* \"contracts/NFTStaking.sol\":1712:1723  return 3000 */\n      swap1\n      pop\n      jump(tag_160)\n        /* \"contracts/NFTStaking.sol\":1684:1833  if(_pool==14) {... */\n    tag_163:\n        /* \"contracts/NFTStaking.sol\":1750:1752  30 */\n      0x1e\n        /* \"contracts/NFTStaking.sol\":1743:1748  _pool */\n      dup3\n        /* \"contracts/NFTStaking.sol\":1743:1752  _pool==30 */\n      sub\n        /* \"contracts/NFTStaking.sol\":1740:1833  if(_pool==30) {... */\n      tag_165\n      jumpi\n        /* \"contracts/NFTStaking.sol\":1775:1779  5000 */\n      0x1388\n        /* \"contracts/NFTStaking.sol\":1768:1779  return 5000 */\n      swap1\n      pop\n      jump(tag_160)\n        /* \"contracts/NFTStaking.sol\":1740:1833  if(_pool==30) {... */\n    tag_165:\n        /* \"contracts/NFTStaking.sol\":1817:1822  10000 */\n      0x2710\n        /* \"contracts/NFTStaking.sol\":1810:1822  return 10000 */\n      swap1\n      pop\n        /* \"contracts/NFTStaking.sol\":1544:1839  function calculateRewardPool(uint256 _pool) private pure returns(uint256)  {... */\n    tag_160:\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"@openzeppelin/contracts/utils/Context.sol\":640:736  function _msgSender() internal view virtual returns (address) {... */\n    tag_154:\n        /* \"@openzeppelin/contracts/utils/Context.sol\":693:700  address */\n      0x00\n        /* \"@openzeppelin/contracts/utils/Context.sol\":719:729  msg.sender */\n      caller\n        /* \"@openzeppelin/contracts/utils/Context.sol\":712:729  return msg.sender */\n      swap1\n      pop\n        /* \"@openzeppelin/contracts/utils/Context.sol\":640:736  function _msgSender() internal view virtual returns (address) {... */\n      swap1\n      jump\t// out\n        /* \"#utility.yul\":7:84   */\n    tag_168:\n        /* \"#utility.yul\":44:51   */\n      0x00\n        /* \"#utility.yul\":73:78   */\n      dup2\n        /* \"#utility.yul\":62:78   */\n      swap1\n      pop\n        /* \"#utility.yul\":7:84   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":90:208   */\n    tag_169:\n        /* \"#utility.yul\":177:201   */\n      tag_215\n        /* \"#utility.yul\":195:200   */\n      dup2\n        /* \"#utility.yul\":177:201   */\n      tag_168\n      jump\t// in\n    tag_215:\n        /* \"#utility.yul\":172:175   */\n      dup3\n        /* \"#utility.yul\":165:202   */\n      mstore\n        /* \"#utility.yul\":90:208   */\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":214:436   */\n    tag_21:\n        /* \"#utility.yul\":307:311   */\n      0x00\n        /* \"#utility.yul\":345:347   */\n      0x20\n        /* \"#utility.yul\":334:343   */\n      dup3\n        /* \"#utility.yul\":330:348   */\n      add\n        /* \"#utility.yul\":322:348   */\n      swap1\n      pop\n        /* \"#utility.yul\":358:429   */\n      tag_217\n        /* \"#utility.yul\":426:427   */\n      0x00\n        /* \"#utility.yul\":415:424   */\n      dup4\n        /* \"#utility.yul\":411:428   */\n      add\n        /* \"#utility.yul\":402:408   */\n      dup5\n        /* \"#utility.yul\":358:429   */\n      tag_169\n      jump\t// in\n    tag_217:\n        /* \"#utility.yul\":214:436   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":523:640   */\n    tag_171:\n        /* \"#utility.yul\":632:633   */\n      0x00\n        /* \"#utility.yul\":629:630   */\n      dup1\n        /* \"#utility.yul\":622:634   */\n      revert\n        /* \"#utility.yul\":769:895   */\n    tag_173:\n        /* \"#utility.yul\":806:813   */\n      0x00\n        /* \"#utility.yul\":846:888   */\n      0xffffffffffffffffffffffffffffffffffffffff\n        /* \"#utility.yul\":839:844   */\n      dup3\n        /* \"#utility.yul\":835:889   */\n      and\n        /* \"#utility.yul\":824:889   */\n      swap1\n      pop\n        /* \"#utility.yul\":769:895   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":901:997   */\n    tag_174:\n        /* \"#utility.yul\":938:945   */\n      0x00\n        /* \"#utility.yul\":967:991   */\n      tag_223\n        /* \"#utility.yul\":985:990   */\n      dup3\n        /* \"#utility.yul\":967:991   */\n      tag_173\n      jump\t// in\n    tag_223:\n        /* \"#utility.yul\":956:991   */\n      swap1\n      pop\n        /* \"#utility.yul\":901:997   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":1003:1125   */\n    tag_175:\n        /* \"#utility.yul\":1076:1100   */\n      tag_225\n        /* \"#utility.yul\":1094:1099   */\n      dup2\n        /* \"#utility.yul\":1076:1100   */\n      tag_174\n      jump\t// in\n    tag_225:\n        /* \"#utility.yul\":1069:1074   */\n      dup2\n        /* \"#utility.yul\":1066:1101   */\n      eq\n        /* \"#utility.yul\":1056:1119   */\n      tag_226\n      jumpi\n        /* \"#utility.yul\":1115:1116   */\n      0x00\n        /* \"#utility.yul\":1112:1113   */\n      dup1\n        /* \"#utility.yul\":1105:1117   */\n      revert\n        /* \"#utility.yul\":1056:1119   */\n    tag_226:\n        /* \"#utility.yul\":1003:1125   */\n      pop\n      jump\t// out\n        /* \"#utility.yul\":1131:1270   */\n    tag_176:\n        /* \"#utility.yul\":1177:1182   */\n      0x00\n        /* \"#utility.yul\":1215:1221   */\n      dup2\n        /* \"#utility.yul\":1202:1222   */\n      calldataload\n        /* \"#utility.yul\":1193:1222   */\n      swap1\n      pop\n        /* \"#utility.yul\":1231:1264   */\n      tag_228\n        /* \"#utility.yul\":1258:1263   */\n      dup2\n        /* \"#utility.yul\":1231:1264   */\n      tag_175\n      jump\t// in\n    tag_228:\n        /* \"#utility.yul\":1131:1270   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":1276:1398   */\n    tag_177:\n        /* \"#utility.yul\":1349:1373   */\n      tag_230\n        /* \"#utility.yul\":1367:1372   */\n      dup2\n        /* \"#utility.yul\":1349:1373   */\n      tag_168\n      jump\t// in\n    tag_230:\n        /* \"#utility.yul\":1342:1347   */\n      dup2\n        /* \"#utility.yul\":1339:1374   */\n      eq\n        /* \"#utility.yul\":1329:1392   */\n      tag_231\n      jumpi\n        /* \"#utility.yul\":1388:1389   */\n      0x00\n        /* \"#utility.yul\":1385:1386   */\n      dup1\n        /* \"#utility.yul\":1378:1390   */\n      revert\n        /* \"#utility.yul\":1329:1392   */\n    tag_231:\n        /* \"#utility.yul\":1276:1398   */\n      pop\n      jump\t// out\n        /* \"#utility.yul\":1404:1543   */\n    tag_178:\n        /* \"#utility.yul\":1450:1455   */\n      0x00\n        /* \"#utility.yul\":1488:1494   */\n      dup2\n        /* \"#utility.yul\":1475:1495   */\n      calldataload\n        /* \"#utility.yul\":1466:1495   */\n      swap1\n      pop\n        /* \"#utility.yul\":1504:1537   */\n      tag_233\n        /* \"#utility.yul\":1531:1536   */\n      dup2\n        /* \"#utility.yul\":1504:1537   */\n      tag_177\n      jump\t// in\n    tag_233:\n        /* \"#utility.yul\":1404:1543   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":1549:2023   */\n    tag_24:\n        /* \"#utility.yul\":1617:1623   */\n      0x00\n        /* \"#utility.yul\":1625:1631   */\n      dup1\n        /* \"#utility.yul\":1674:1676   */\n      0x40\n        /* \"#utility.yul\":1662:1671   */\n      dup4\n        /* \"#utility.yul\":1653:1660   */\n      dup6\n        /* \"#utility.yul\":1649:1672   */\n      sub\n        /* \"#utility.yul\":1645:1677   */\n      slt\n        /* \"#utility.yul\":1642:1761   */\n      iszero\n      tag_235\n      jumpi\n        /* \"#utility.yul\":1680:1759   */\n      tag_236\n      tag_171\n      jump\t// in\n    tag_236:\n        /* \"#utility.yul\":1642:1761   */\n    tag_235:\n        /* \"#utility.yul\":1800:1801   */\n      0x00\n        /* \"#utility.yul\":1825:1878   */\n      tag_237\n        /* \"#utility.yul\":1870:1877   */\n      dup6\n        /* \"#utility.yul\":1861:1867   */\n      dup3\n        /* \"#utility.yul\":1850:1859   */\n      dup7\n        /* \"#utility.yul\":1846:1868   */\n      add\n        /* \"#utility.yul\":1825:1878   */\n      tag_176\n      jump\t// in\n    tag_237:\n        /* \"#utility.yul\":1815:1878   */\n      swap3\n      pop\n        /* \"#utility.yul\":1771:1888   */\n      pop\n        /* \"#utility.yul\":1927:1929   */\n      0x20\n        /* \"#utility.yul\":1953:2006   */\n      tag_238\n        /* \"#utility.yul\":1998:2005   */\n      dup6\n        /* \"#utility.yul\":1989:1995   */\n      dup3\n        /* \"#utility.yul\":1978:1987   */\n      dup7\n        /* \"#utility.yul\":1974:1996   */\n      add\n        /* \"#utility.yul\":1953:2006   */\n      tag_178\n      jump\t// in\n    tag_238:\n        /* \"#utility.yul\":1943:2006   */\n      swap2\n      pop\n        /* \"#utility.yul\":1898:2016   */\n      pop\n        /* \"#utility.yul\":1549:2023   */\n      swap3\n      pop\n      swap3\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":2029:2503   */\n    tag_33:\n        /* \"#utility.yul\":2097:2103   */\n      0x00\n        /* \"#utility.yul\":2105:2111   */\n      dup1\n        /* \"#utility.yul\":2154:2156   */\n      0x40\n        /* \"#utility.yul\":2142:2151   */\n      dup4\n        /* \"#utility.yul\":2133:2140   */\n      dup6\n        /* \"#utility.yul\":2129:2152   */\n      sub\n        /* \"#utility.yul\":2125:2157   */\n      slt\n        /* \"#utility.yul\":2122:2241   */\n      iszero\n      tag_240\n      jumpi\n        /* \"#utility.yul\":2160:2239   */\n      tag_241\n      tag_171\n      jump\t// in\n    tag_241:\n        /* \"#utility.yul\":2122:2241   */\n    tag_240:\n        /* \"#utility.yul\":2280:2281   */\n      0x00\n        /* \"#utility.yul\":2305:2358   */\n      tag_242\n        /* \"#utility.yul\":2350:2357   */\n      dup6\n        /* \"#utility.yul\":2341:2347   */\n      dup3\n        /* \"#utility.yul\":2330:2339   */\n      dup7\n        /* \"#utility.yul\":2326:2348   */\n      add\n        /* \"#utility.yul\":2305:2358   */\n      tag_178\n      jump\t// in\n    tag_242:\n        /* \"#utility.yul\":2295:2358   */\n      swap3\n      pop\n        /* \"#utility.yul\":2251:2368   */\n      pop\n        /* \"#utility.yul\":2407:2409   */\n      0x20\n        /* \"#utility.yul\":2433:2486   */\n      tag_243\n        /* \"#utility.yul\":2478:2485   */\n      dup6\n        /* \"#utility.yul\":2469:2475   */\n      dup3\n        /* \"#utility.yul\":2458:2467   */\n      dup7\n        /* \"#utility.yul\":2454:2476   */\n      add\n        /* \"#utility.yul\":2433:2486   */\n      tag_178\n      jump\t// in\n    tag_243:\n        /* \"#utility.yul\":2423:2486   */\n      swap2\n      pop\n        /* \"#utility.yul\":2378:2496   */\n      pop\n        /* \"#utility.yul\":2029:2503   */\n      swap3\n      pop\n      swap3\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":2509:2569   */\n    tag_179:\n        /* \"#utility.yul\":2537:2540   */\n      0x00\n        /* \"#utility.yul\":2558:2563   */\n      dup2\n        /* \"#utility.yul\":2551:2563   */\n      swap1\n      pop\n        /* \"#utility.yul\":2509:2569   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":2575:2717   */\n    tag_180:\n        /* \"#utility.yul\":2625:2634   */\n      0x00\n        /* \"#utility.yul\":2658:2711   */\n      tag_246\n        /* \"#utility.yul\":2676:2710   */\n      tag_247\n        /* \"#utility.yul\":2685:2709   */\n      tag_248\n        /* \"#utility.yul\":2703:2708   */\n      dup5\n        /* \"#utility.yul\":2685:2709   */\n      tag_173\n      jump\t// in\n    tag_248:\n        /* \"#utility.yul\":2676:2710   */\n      tag_179\n      jump\t// in\n    tag_247:\n        /* \"#utility.yul\":2658:2711   */\n      tag_173\n      jump\t// in\n    tag_246:\n        /* \"#utility.yul\":2645:2711   */\n      swap1\n      pop\n        /* \"#utility.yul\":2575:2717   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":2723:2849   */\n    tag_181:\n        /* \"#utility.yul\":2773:2782   */\n      0x00\n        /* \"#utility.yul\":2806:2843   */\n      tag_250\n        /* \"#utility.yul\":2837:2842   */\n      dup3\n        /* \"#utility.yul\":2806:2843   */\n      tag_180\n      jump\t// in\n    tag_250:\n        /* \"#utility.yul\":2793:2843   */\n      swap1\n      pop\n        /* \"#utility.yul\":2723:2849   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":2855:2996   */\n    tag_182:\n        /* \"#utility.yul\":2920:2929   */\n      0x00\n        /* \"#utility.yul\":2953:2990   */\n      tag_252\n        /* \"#utility.yul\":2984:2989   */\n      dup3\n        /* \"#utility.yul\":2953:2990   */\n      tag_181\n      jump\t// in\n    tag_252:\n        /* \"#utility.yul\":2940:2990   */\n      swap1\n      pop\n        /* \"#utility.yul\":2855:2996   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":3002:3163   */\n    tag_183:\n        /* \"#utility.yul\":3104:3156   */\n      tag_254\n        /* \"#utility.yul\":3150:3155   */\n      dup2\n        /* \"#utility.yul\":3104:3156   */\n      tag_182\n      jump\t// in\n    tag_254:\n        /* \"#utility.yul\":3099:3102   */\n      dup3\n        /* \"#utility.yul\":3092:3157   */\n      mstore\n        /* \"#utility.yul\":3002:3163   */\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":3169:3421   */\n    tag_40:\n        /* \"#utility.yul\":3277:3281   */\n      0x00\n        /* \"#utility.yul\":3315:3317   */\n      0x20\n        /* \"#utility.yul\":3304:3313   */\n      dup3\n        /* \"#utility.yul\":3300:3318   */\n      add\n        /* \"#utility.yul\":3292:3318   */\n      swap1\n      pop\n        /* \"#utility.yul\":3328:3414   */\n      tag_256\n        /* \"#utility.yul\":3411:3412   */\n      0x00\n        /* \"#utility.yul\":3400:3409   */\n      dup4\n        /* \"#utility.yul\":3396:3413   */\n      add\n        /* \"#utility.yul\":3387:3393   */\n      dup5\n        /* \"#utility.yul\":3328:3414   */\n      tag_183\n      jump\t// in\n    tag_256:\n        /* \"#utility.yul\":3169:3421   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":3427:4046   */\n    tag_43:\n        /* \"#utility.yul\":3504:3510   */\n      0x00\n        /* \"#utility.yul\":3512:3518   */\n      dup1\n        /* \"#utility.yul\":3520:3526   */\n      0x00\n        /* \"#utility.yul\":3569:3571   */\n      0x60\n        /* \"#utility.yul\":3557:3566   */\n      dup5\n        /* \"#utility.yul\":3548:3555   */\n      dup7\n        /* \"#utility.yul\":3544:3567   */\n      sub\n        /* \"#utility.yul\":3540:3572   */\n      slt\n        /* \"#utility.yul\":3537:3656   */\n      iszero\n      tag_258\n      jumpi\n        /* \"#utility.yul\":3575:3654   */\n      tag_259\n      tag_171\n      jump\t// in\n    tag_259:\n        /* \"#utility.yul\":3537:3656   */\n    tag_258:\n        /* \"#utility.yul\":3695:3696   */\n      0x00\n        /* \"#utility.yul\":3720:3773   */\n      tag_260\n        /* \"#utility.yul\":3765:3772   */\n      dup7\n        /* \"#utility.yul\":3756:3762   */\n      dup3\n        /* \"#utility.yul\":3745:3754   */\n      dup8\n        /* \"#utility.yul\":3741:3763   */\n      add\n        /* \"#utility.yul\":3720:3773   */\n      tag_178\n      jump\t// in\n    tag_260:\n        /* \"#utility.yul\":3710:3773   */\n      swap4\n      pop\n        /* \"#utility.yul\":3666:3783   */\n      pop\n        /* \"#utility.yul\":3822:3824   */\n      0x20\n        /* \"#utility.yul\":3848:3901   */\n      tag_261\n        /* \"#utility.yul\":3893:3900   */\n      dup7\n        /* \"#utility.yul\":3884:3890   */\n      dup3\n        /* \"#utility.yul\":3873:3882   */\n      dup8\n        /* \"#utility.yul\":3869:3891   */\n      add\n        /* \"#utility.yul\":3848:3901   */\n      tag_178\n      jump\t// in\n    tag_261:\n        /* \"#utility.yul\":3838:3901   */\n      swap3\n      pop\n        /* \"#utility.yul\":3793:3911   */\n      pop\n        /* \"#utility.yul\":3950:3952   */\n      0x40\n        /* \"#utility.yul\":3976:4029   */\n      tag_262\n        /* \"#utility.yul\":4021:4028   */\n      dup7\n        /* \"#utility.yul\":4012:4018   */\n      dup3\n        /* \"#utility.yul\":4001:4010   */\n      dup8\n        /* \"#utility.yul\":3997:4019   */\n      add\n        /* \"#utility.yul\":3976:4029   */\n      tag_178\n      jump\t// in\n    tag_262:\n        /* \"#utility.yul\":3966:4029   */\n      swap2\n      pop\n        /* \"#utility.yul\":3921:4039   */\n      pop\n        /* \"#utility.yul\":3427:4046   */\n      swap3\n      pop\n      swap3\n      pop\n      swap3\n      jump\t// out\n        /* \"#utility.yul\":4052:4381   */\n    tag_47:\n        /* \"#utility.yul\":4111:4117   */\n      0x00\n        /* \"#utility.yul\":4160:4162   */\n      0x20\n        /* \"#utility.yul\":4148:4157   */\n      dup3\n        /* \"#utility.yul\":4139:4146   */\n      dup5\n        /* \"#utility.yul\":4135:4158   */\n      sub\n        /* \"#utility.yul\":4131:4163   */\n      slt\n        /* \"#utility.yul\":4128:4247   */\n      iszero\n      tag_264\n      jumpi\n        /* \"#utility.yul\":4166:4245   */\n      tag_265\n      tag_171\n      jump\t// in\n    tag_265:\n        /* \"#utility.yul\":4128:4247   */\n    tag_264:\n        /* \"#utility.yul\":4286:4287   */\n      0x00\n        /* \"#utility.yul\":4311:4364   */\n      tag_266\n        /* \"#utility.yul\":4356:4363   */\n      dup5\n        /* \"#utility.yul\":4347:4353   */\n      dup3\n        /* \"#utility.yul\":4336:4345   */\n      dup6\n        /* \"#utility.yul\":4332:4354   */\n      add\n        /* \"#utility.yul\":4311:4364   */\n      tag_176\n      jump\t// in\n    tag_266:\n        /* \"#utility.yul\":4301:4364   */\n      swap2\n      pop\n        /* \"#utility.yul\":4257:4374   */\n      pop\n        /* \"#utility.yul\":4052:4381   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":4387:4501   */\n    tag_184:\n        /* \"#utility.yul\":4454:4460   */\n      0x00\n        /* \"#utility.yul\":4488:4493   */\n      dup2\n        /* \"#utility.yul\":4482:4494   */\n      mload\n        /* \"#utility.yul\":4472:4494   */\n      swap1\n      pop\n        /* \"#utility.yul\":4387:4501   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":4507:4691   */\n    tag_185:\n        /* \"#utility.yul\":4606:4617   */\n      0x00\n        /* \"#utility.yul\":4640:4646   */\n      dup3\n        /* \"#utility.yul\":4635:4638   */\n      dup3\n        /* \"#utility.yul\":4628:4647   */\n      mstore\n        /* \"#utility.yul\":4680:4684   */\n      0x20\n        /* \"#utility.yul\":4675:4678   */\n      dup3\n        /* \"#utility.yul\":4671:4685   */\n      add\n        /* \"#utility.yul\":4656:4685   */\n      swap1\n      pop\n        /* \"#utility.yul\":4507:4691   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":4697:4829   */\n    tag_186:\n        /* \"#utility.yul\":4764:4768   */\n      0x00\n        /* \"#utility.yul\":4787:4790   */\n      dup2\n        /* \"#utility.yul\":4779:4790   */\n      swap1\n      pop\n        /* \"#utility.yul\":4817:4821   */\n      0x20\n        /* \"#utility.yul\":4812:4815   */\n      dup3\n        /* \"#utility.yul\":4808:4822   */\n      add\n        /* \"#utility.yul\":4800:4822   */\n      swap1\n      pop\n        /* \"#utility.yul\":4697:4829   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":4835:4943   */\n    tag_187:\n        /* \"#utility.yul\":4912:4936   */\n      tag_271\n        /* \"#utility.yul\":4930:4935   */\n      dup2\n        /* \"#utility.yul\":4912:4936   */\n      tag_168\n      jump\t// in\n    tag_271:\n        /* \"#utility.yul\":4907:4910   */\n      dup3\n        /* \"#utility.yul\":4900:4937   */\n      mstore\n        /* \"#utility.yul\":4835:4943   */\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":4949:5128   */\n    tag_188:\n        /* \"#utility.yul\":5018:5028   */\n      0x00\n        /* \"#utility.yul\":5039:5085   */\n      tag_273\n        /* \"#utility.yul\":5081:5084   */\n      dup4\n        /* \"#utility.yul\":5073:5079   */\n      dup4\n        /* \"#utility.yul\":5039:5085   */\n      tag_187\n      jump\t// in\n    tag_273:\n        /* \"#utility.yul\":5117:5121   */\n      0x20\n        /* \"#utility.yul\":5112:5115   */\n      dup4\n        /* \"#utility.yul\":5108:5122   */\n      add\n        /* \"#utility.yul\":5094:5122   */\n      swap1\n      pop\n        /* \"#utility.yul\":4949:5128   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":5134:5247   */\n    tag_189:\n        /* \"#utility.yul\":5204:5208   */\n      0x00\n        /* \"#utility.yul\":5236:5240   */\n      0x20\n        /* \"#utility.yul\":5231:5234   */\n      dup3\n        /* \"#utility.yul\":5227:5241   */\n      add\n        /* \"#utility.yul\":5219:5241   */\n      swap1\n      pop\n        /* \"#utility.yul\":5134:5247   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":5283:6015   */\n    tag_190:\n        /* \"#utility.yul\":5402:5405   */\n      0x00\n        /* \"#utility.yul\":5431:5485   */\n      tag_276\n        /* \"#utility.yul\":5479:5484   */\n      dup3\n        /* \"#utility.yul\":5431:5485   */\n      tag_184\n      jump\t// in\n    tag_276:\n        /* \"#utility.yul\":5501:5587   */\n      tag_277\n        /* \"#utility.yul\":5580:5586   */\n      dup2\n        /* \"#utility.yul\":5575:5578   */\n      dup6\n        /* \"#utility.yul\":5501:5587   */\n      tag_185\n      jump\t// in\n    tag_277:\n        /* \"#utility.yul\":5494:5587   */\n      swap4\n      pop\n        /* \"#utility.yul\":5611:5667   */\n      tag_278\n        /* \"#utility.yul\":5661:5666   */\n      dup4\n        /* \"#utility.yul\":5611:5667   */\n      tag_186\n      jump\t// in\n    tag_278:\n        /* \"#utility.yul\":5690:5697   */\n      dup1\n        /* \"#utility.yul\":5721:5722   */\n      0x00\n        /* \"#utility.yul\":5706:5990   */\n    tag_279:\n        /* \"#utility.yul\":5731:5737   */\n      dup4\n        /* \"#utility.yul\":5728:5729   */\n      dup2\n        /* \"#utility.yul\":5725:5738   */\n      lt\n        /* \"#utility.yul\":5706:5990   */\n      iszero\n      tag_281\n      jumpi\n        /* \"#utility.yul\":5807:5813   */\n      dup2\n        /* \"#utility.yul\":5801:5814   */\n      mload\n        /* \"#utility.yul\":5834:5897   */\n      tag_282\n        /* \"#utility.yul\":5893:5896   */\n      dup9\n        /* \"#utility.yul\":5878:5891   */\n      dup3\n        /* \"#utility.yul\":5834:5897   */\n      tag_188\n      jump\t// in\n    tag_282:\n        /* \"#utility.yul\":5827:5897   */\n      swap8\n      pop\n        /* \"#utility.yul\":5920:5980   */\n      tag_283\n        /* \"#utility.yul\":5973:5979   */\n      dup4\n        /* \"#utility.yul\":5920:5980   */\n      tag_189\n      jump\t// in\n    tag_283:\n        /* \"#utility.yul\":5910:5980   */\n      swap3\n      pop\n        /* \"#utility.yul\":5766:5990   */\n      pop\n        /* \"#utility.yul\":5753:5754   */\n      0x01\n        /* \"#utility.yul\":5750:5751   */\n      dup2\n        /* \"#utility.yul\":5746:5755   */\n      add\n        /* \"#utility.yul\":5741:5755   */\n      swap1\n      pop\n        /* \"#utility.yul\":5706:5990   */\n      jump(tag_279)\n    tag_281:\n        /* \"#utility.yul\":5710:5724   */\n      pop\n        /* \"#utility.yul\":6006:6009   */\n      dup6\n        /* \"#utility.yul\":5999:6009   */\n      swap4\n      pop\n        /* \"#utility.yul\":5407:6015   */\n      pop\n      pop\n      pop\n        /* \"#utility.yul\":5283:6015   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":6021:6394   */\n    tag_50:\n        /* \"#utility.yul\":6164:6168   */\n      0x00\n        /* \"#utility.yul\":6202:6204   */\n      0x20\n        /* \"#utility.yul\":6191:6200   */\n      dup3\n        /* \"#utility.yul\":6187:6205   */\n      add\n        /* \"#utility.yul\":6179:6205   */\n      swap1\n      pop\n        /* \"#utility.yul\":6251:6260   */\n      dup2\n        /* \"#utility.yul\":6245:6249   */\n      dup2\n        /* \"#utility.yul\":6241:6261   */\n      sub\n        /* \"#utility.yul\":6237:6238   */\n      0x00\n        /* \"#utility.yul\":6226:6235   */\n      dup4\n        /* \"#utility.yul\":6222:6239   */\n      add\n        /* \"#utility.yul\":6215:6262   */\n      mstore\n        /* \"#utility.yul\":6279:6387   */\n      tag_285\n        /* \"#utility.yul\":6382:6386   */\n      dup2\n        /* \"#utility.yul\":6373:6379   */\n      dup5\n        /* \"#utility.yul\":6279:6387   */\n      tag_190\n      jump\t// in\n    tag_285:\n        /* \"#utility.yul\":6271:6387   */\n      swap1\n      pop\n        /* \"#utility.yul\":6021:6394   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":6400:6518   */\n    tag_191:\n        /* \"#utility.yul\":6487:6511   */\n      tag_287\n        /* \"#utility.yul\":6505:6510   */\n      dup2\n        /* \"#utility.yul\":6487:6511   */\n      tag_174\n      jump\t// in\n    tag_287:\n        /* \"#utility.yul\":6482:6485   */\n      dup3\n        /* \"#utility.yul\":6475:6512   */\n      mstore\n        /* \"#utility.yul\":6400:6518   */\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":6524:6746   */\n    tag_54:\n        /* \"#utility.yul\":6617:6621   */\n      0x00\n        /* \"#utility.yul\":6655:6657   */\n      0x20\n        /* \"#utility.yul\":6644:6653   */\n      dup3\n        /* \"#utility.yul\":6640:6658   */\n      add\n        /* \"#utility.yul\":6632:6658   */\n      swap1\n      pop\n        /* \"#utility.yul\":6668:6739   */\n      tag_289\n        /* \"#utility.yul\":6736:6737   */\n      0x00\n        /* \"#utility.yul\":6725:6734   */\n      dup4\n        /* \"#utility.yul\":6721:6738   */\n      add\n        /* \"#utility.yul\":6712:6718   */\n      dup5\n        /* \"#utility.yul\":6668:6739   */\n      tag_191\n      jump\t// in\n    tag_289:\n        /* \"#utility.yul\":6524:6746   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":6752:7081   */\n    tag_57:\n        /* \"#utility.yul\":6811:6817   */\n      0x00\n        /* \"#utility.yul\":6860:6862   */\n      0x20\n        /* \"#utility.yul\":6848:6857   */\n      dup3\n        /* \"#utility.yul\":6839:6846   */\n      dup5\n        /* \"#utility.yul\":6835:6858   */\n      sub\n        /* \"#utility.yul\":6831:6863   */\n      slt\n        /* \"#utility.yul\":6828:6947   */\n      iszero\n      tag_291\n      jumpi\n        /* \"#utility.yul\":6866:6945   */\n      tag_292\n      tag_171\n      jump\t// in\n    tag_292:\n        /* \"#utility.yul\":6828:6947   */\n    tag_291:\n        /* \"#utility.yul\":6986:6987   */\n      0x00\n        /* \"#utility.yul\":7011:7064   */\n      tag_293\n        /* \"#utility.yul\":7056:7063   */\n      dup5\n        /* \"#utility.yul\":7047:7053   */\n      dup3\n        /* \"#utility.yul\":7036:7045   */\n      dup6\n        /* \"#utility.yul\":7032:7054   */\n      add\n        /* \"#utility.yul\":7011:7064   */\n      tag_178\n      jump\t// in\n    tag_293:\n        /* \"#utility.yul\":7001:7064   */\n      swap2\n      pop\n        /* \"#utility.yul\":6957:7074   */\n      pop\n        /* \"#utility.yul\":6752:7081   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":7087:7751   */\n    tag_60:\n        /* \"#utility.yul\":7292:7296   */\n      0x00\n        /* \"#utility.yul\":7330:7333   */\n      0xa0\n        /* \"#utility.yul\":7319:7328   */\n      dup3\n        /* \"#utility.yul\":7315:7334   */\n      add\n        /* \"#utility.yul\":7307:7334   */\n      swap1\n      pop\n        /* \"#utility.yul\":7344:7415   */\n      tag_295\n        /* \"#utility.yul\":7412:7413   */\n      0x00\n        /* \"#utility.yul\":7401:7410   */\n      dup4\n        /* \"#utility.yul\":7397:7414   */\n      add\n        /* \"#utility.yul\":7388:7394   */\n      dup9\n        /* \"#utility.yul\":7344:7415   */\n      tag_169\n      jump\t// in\n    tag_295:\n        /* \"#utility.yul\":7425:7497   */\n      tag_296\n        /* \"#utility.yul\":7493:7495   */\n      0x20\n        /* \"#utility.yul\":7482:7491   */\n      dup4\n        /* \"#utility.yul\":7478:7496   */\n      add\n        /* \"#utility.yul\":7469:7475   */\n      dup8\n        /* \"#utility.yul\":7425:7497   */\n      tag_191\n      jump\t// in\n    tag_296:\n        /* \"#utility.yul\":7507:7579   */\n      tag_297\n        /* \"#utility.yul\":7575:7577   */\n      0x40\n        /* \"#utility.yul\":7564:7573   */\n      dup4\n        /* \"#utility.yul\":7560:7578   */\n      add\n        /* \"#utility.yul\":7551:7557   */\n      dup7\n        /* \"#utility.yul\":7507:7579   */\n      tag_169\n      jump\t// in\n    tag_297:\n        /* \"#utility.yul\":7589:7661   */\n      tag_298\n        /* \"#utility.yul\":7657:7659   */\n      0x60\n        /* \"#utility.yul\":7646:7655   */\n      dup4\n        /* \"#utility.yul\":7642:7660   */\n      add\n        /* \"#utility.yul\":7633:7639   */\n      dup6\n        /* \"#utility.yul\":7589:7661   */\n      tag_169\n      jump\t// in\n    tag_298:\n        /* \"#utility.yul\":7671:7744   */\n      tag_299\n        /* \"#utility.yul\":7739:7742   */\n      0x80\n        /* \"#utility.yul\":7728:7737   */\n      dup4\n        /* \"#utility.yul\":7724:7743   */\n      add\n        /* \"#utility.yul\":7715:7721   */\n      dup5\n        /* \"#utility.yul\":7671:7744   */\n      tag_169\n      jump\t// in\n    tag_299:\n        /* \"#utility.yul\":7087:7751   */\n      swap7\n      swap6\n      pop\n      pop\n      pop\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":7757:7897   */\n    tag_192:\n        /* \"#utility.yul\":7821:7830   */\n      0x00\n        /* \"#utility.yul\":7854:7891   */\n      tag_301\n        /* \"#utility.yul\":7885:7890   */\n      dup3\n        /* \"#utility.yul\":7854:7891   */\n      tag_181\n      jump\t// in\n    tag_301:\n        /* \"#utility.yul\":7841:7891   */\n      swap1\n      pop\n        /* \"#utility.yul\":7757:7897   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":7903:8062   */\n    tag_193:\n        /* \"#utility.yul\":8004:8055   */\n      tag_303\n        /* \"#utility.yul\":8049:8054   */\n      dup2\n        /* \"#utility.yul\":8004:8055   */\n      tag_192\n      jump\t// in\n    tag_303:\n        /* \"#utility.yul\":7999:8002   */\n      dup3\n        /* \"#utility.yul\":7992:8056   */\n      mstore\n        /* \"#utility.yul\":7903:8062   */\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":8068:8318   */\n    tag_67:\n        /* \"#utility.yul\":8175:8179   */\n      0x00\n        /* \"#utility.yul\":8213:8215   */\n      0x20\n        /* \"#utility.yul\":8202:8211   */\n      dup3\n        /* \"#utility.yul\":8198:8216   */\n      add\n        /* \"#utility.yul\":8190:8216   */\n      swap1\n      pop\n        /* \"#utility.yul\":8226:8311   */\n      tag_305\n        /* \"#utility.yul\":8308:8309   */\n      0x00\n        /* \"#utility.yul\":8297:8306   */\n      dup4\n        /* \"#utility.yul\":8293:8310   */\n      add\n        /* \"#utility.yul\":8284:8290   */\n      dup5\n        /* \"#utility.yul\":8226:8311   */\n      tag_193\n      jump\t// in\n    tag_305:\n        /* \"#utility.yul\":8068:8318   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":8324:8798   */\n    tag_70:\n        /* \"#utility.yul\":8392:8398   */\n      0x00\n        /* \"#utility.yul\":8400:8406   */\n      dup1\n        /* \"#utility.yul\":8449:8451   */\n      0x40\n        /* \"#utility.yul\":8437:8446   */\n      dup4\n        /* \"#utility.yul\":8428:8435   */\n      dup6\n        /* \"#utility.yul\":8424:8447   */\n      sub\n        /* \"#utility.yul\":8420:8452   */\n      slt\n        /* \"#utility.yul\":8417:8536   */\n      iszero\n      tag_307\n      jumpi\n        /* \"#utility.yul\":8455:8534   */\n      tag_308\n      tag_171\n      jump\t// in\n    tag_308:\n        /* \"#utility.yul\":8417:8536   */\n    tag_307:\n        /* \"#utility.yul\":8575:8576   */\n      0x00\n        /* \"#utility.yul\":8600:8653   */\n      tag_309\n        /* \"#utility.yul\":8645:8652   */\n      dup6\n        /* \"#utility.yul\":8636:8642   */\n      dup3\n        /* \"#utility.yul\":8625:8634   */\n      dup7\n        /* \"#utility.yul\":8621:8643   */\n      add\n        /* \"#utility.yul\":8600:8653   */\n      tag_178\n      jump\t// in\n    tag_309:\n        /* \"#utility.yul\":8590:8653   */\n      swap3\n      pop\n        /* \"#utility.yul\":8546:8663   */\n      pop\n        /* \"#utility.yul\":8702:8704   */\n      0x20\n        /* \"#utility.yul\":8728:8781   */\n      tag_310\n        /* \"#utility.yul\":8773:8780   */\n      dup6\n        /* \"#utility.yul\":8764:8770   */\n      dup3\n        /* \"#utility.yul\":8753:8762   */\n      dup7\n        /* \"#utility.yul\":8749:8771   */\n      add\n        /* \"#utility.yul\":8728:8781   */\n      tag_176\n      jump\t// in\n    tag_310:\n        /* \"#utility.yul\":8718:8781   */\n      swap2\n      pop\n        /* \"#utility.yul\":8673:8791   */\n      pop\n        /* \"#utility.yul\":8324:8798   */\n      swap3\n      pop\n      swap3\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":8804:8894   */\n    tag_194:\n        /* \"#utility.yul\":8838:8845   */\n      0x00\n        /* \"#utility.yul\":8881:8886   */\n      dup2\n        /* \"#utility.yul\":8874:8887   */\n      iszero\n        /* \"#utility.yul\":8867:8888   */\n      iszero\n        /* \"#utility.yul\":8856:8888   */\n      swap1\n      pop\n        /* \"#utility.yul\":8804:8894   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":8900:9009   */\n    tag_195:\n        /* \"#utility.yul\":8981:9002   */\n      tag_313\n        /* \"#utility.yul\":8996:9001   */\n      dup2\n        /* \"#utility.yul\":8981:9002   */\n      tag_194\n      jump\t// in\n    tag_313:\n        /* \"#utility.yul\":8976:8979   */\n      dup3\n        /* \"#utility.yul\":8969:9003   */\n      mstore\n        /* \"#utility.yul\":8900:9009   */\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":9015:9225   */\n    tag_73:\n        /* \"#utility.yul\":9102:9106   */\n      0x00\n        /* \"#utility.yul\":9140:9142   */\n      0x20\n        /* \"#utility.yul\":9129:9138   */\n      dup3\n        /* \"#utility.yul\":9125:9143   */\n      add\n        /* \"#utility.yul\":9117:9143   */\n      swap1\n      pop\n        /* \"#utility.yul\":9153:9218   */\n      tag_315\n        /* \"#utility.yul\":9215:9216   */\n      0x00\n        /* \"#utility.yul\":9204:9213   */\n      dup4\n        /* \"#utility.yul\":9200:9217   */\n      add\n        /* \"#utility.yul\":9191:9197   */\n      dup5\n        /* \"#utility.yul\":9153:9218   */\n      tag_195\n      jump\t// in\n    tag_315:\n        /* \"#utility.yul\":9015:9225   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":9231:9374   */\n    tag_196:\n        /* \"#utility.yul\":9288:9293   */\n      0x00\n        /* \"#utility.yul\":9319:9325   */\n      dup2\n        /* \"#utility.yul\":9313:9326   */\n      mload\n        /* \"#utility.yul\":9304:9326   */\n      swap1\n      pop\n        /* \"#utility.yul\":9335:9368   */\n      tag_317\n        /* \"#utility.yul\":9362:9367   */\n      dup2\n        /* \"#utility.yul\":9335:9368   */\n      tag_175\n      jump\t// in\n    tag_317:\n        /* \"#utility.yul\":9231:9374   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":9380:9731   */\n    tag_83:\n        /* \"#utility.yul\":9450:9456   */\n      0x00\n        /* \"#utility.yul\":9499:9501   */\n      0x20\n        /* \"#utility.yul\":9487:9496   */\n      dup3\n        /* \"#utility.yul\":9478:9485   */\n      dup5\n        /* \"#utility.yul\":9474:9497   */\n      sub\n        /* \"#utility.yul\":9470:9502   */\n      slt\n        /* \"#utility.yul\":9467:9586   */\n      iszero\n      tag_319\n      jumpi\n        /* \"#utility.yul\":9505:9584   */\n      tag_320\n      tag_171\n      jump\t// in\n    tag_320:\n        /* \"#utility.yul\":9467:9586   */\n    tag_319:\n        /* \"#utility.yul\":9625:9626   */\n      0x00\n        /* \"#utility.yul\":9650:9714   */\n      tag_321\n        /* \"#utility.yul\":9706:9713   */\n      dup5\n        /* \"#utility.yul\":9697:9703   */\n      dup3\n        /* \"#utility.yul\":9686:9695   */\n      dup6\n        /* \"#utility.yul\":9682:9704   */\n      add\n        /* \"#utility.yul\":9650:9714   */\n      tag_196\n      jump\t// in\n    tag_321:\n        /* \"#utility.yul\":9640:9714   */\n      swap2\n      pop\n        /* \"#utility.yul\":9596:9724   */\n      pop\n        /* \"#utility.yul\":9380:9731   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":9737:9906   */\n    tag_197:\n        /* \"#utility.yul\":9821:9832   */\n      0x00\n        /* \"#utility.yul\":9855:9861   */\n      dup3\n        /* \"#utility.yul\":9850:9853   */\n      dup3\n        /* \"#utility.yul\":9843:9862   */\n      mstore\n        /* \"#utility.yul\":9895:9899   */\n      0x20\n        /* \"#utility.yul\":9890:9893   */\n      dup3\n        /* \"#utility.yul\":9886:9900   */\n      add\n        /* \"#utility.yul\":9871:9900   */\n      swap1\n      pop\n        /* \"#utility.yul\":9737:9906   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":9912:10092   */\n    tag_198:\n        /* \"#utility.yul\":10052:10084   */\n      0x43616e2774207374616b65206e667420796f7520646f6e2774206f776e210000\n        /* \"#utility.yul\":10048:10049   */\n      0x00\n        /* \"#utility.yul\":10040:10046   */\n      dup3\n        /* \"#utility.yul\":10036:10050   */\n      add\n        /* \"#utility.yul\":10029:10085   */\n      mstore\n        /* \"#utility.yul\":9912:10092   */\n      pop\n      jump\t// out\n        /* \"#utility.yul\":10098:10464   */\n    tag_199:\n        /* \"#utility.yul\":10240:10243   */\n      0x00\n        /* \"#utility.yul\":10261:10328   */\n      tag_325\n        /* \"#utility.yul\":10325:10327   */\n      0x1e\n        /* \"#utility.yul\":10320:10323   */\n      dup4\n        /* \"#utility.yul\":10261:10328   */\n      tag_197\n      jump\t// in\n    tag_325:\n        /* \"#utility.yul\":10254:10328   */\n      swap2\n      pop\n        /* \"#utility.yul\":10337:10430   */\n      tag_326\n        /* \"#utility.yul\":10426:10429   */\n      dup3\n        /* \"#utility.yul\":10337:10430   */\n      tag_198\n      jump\t// in\n    tag_326:\n        /* \"#utility.yul\":10455:10457   */\n      0x20\n        /* \"#utility.yul\":10450:10453   */\n      dup3\n        /* \"#utility.yul\":10446:10458   */\n      add\n        /* \"#utility.yul\":10439:10458   */\n      swap1\n      pop\n        /* \"#utility.yul\":10098:10464   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":10470:10889   */\n    tag_86:\n        /* \"#utility.yul\":10636:10640   */\n      0x00\n        /* \"#utility.yul\":10674:10676   */\n      0x20\n        /* \"#utility.yul\":10663:10672   */\n      dup3\n        /* \"#utility.yul\":10659:10677   */\n      add\n        /* \"#utility.yul\":10651:10677   */\n      swap1\n      pop\n        /* \"#utility.yul\":10723:10732   */\n      dup2\n        /* \"#utility.yul\":10717:10721   */\n      dup2\n        /* \"#utility.yul\":10713:10733   */\n      sub\n        /* \"#utility.yul\":10709:10710   */\n      0x00\n        /* \"#utility.yul\":10698:10707   */\n      dup4\n        /* \"#utility.yul\":10694:10711   */\n      add\n        /* \"#utility.yul\":10687:10734   */\n      mstore\n        /* \"#utility.yul\":10751:10882   */\n      tag_328\n        /* \"#utility.yul\":10877:10881   */\n      dup2\n        /* \"#utility.yul\":10751:10882   */\n      tag_199\n      jump\t// in\n    tag_328:\n        /* \"#utility.yul\":10743:10882   */\n      swap1\n      pop\n        /* \"#utility.yul\":10470:10889   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":10895:11337   */\n    tag_89:\n        /* \"#utility.yul\":11044:11048   */\n      0x00\n        /* \"#utility.yul\":11082:11084   */\n      0x60\n        /* \"#utility.yul\":11071:11080   */\n      dup3\n        /* \"#utility.yul\":11067:11085   */\n      add\n        /* \"#utility.yul\":11059:11085   */\n      swap1\n      pop\n        /* \"#utility.yul\":11095:11166   */\n      tag_330\n        /* \"#utility.yul\":11163:11164   */\n      0x00\n        /* \"#utility.yul\":11152:11161   */\n      dup4\n        /* \"#utility.yul\":11148:11165   */\n      add\n        /* \"#utility.yul\":11139:11145   */\n      dup7\n        /* \"#utility.yul\":11095:11166   */\n      tag_191\n      jump\t// in\n    tag_330:\n        /* \"#utility.yul\":11176:11248   */\n      tag_331\n        /* \"#utility.yul\":11244:11246   */\n      0x20\n        /* \"#utility.yul\":11233:11242   */\n      dup4\n        /* \"#utility.yul\":11229:11247   */\n      add\n        /* \"#utility.yul\":11220:11226   */\n      dup6\n        /* \"#utility.yul\":11176:11248   */\n      tag_191\n      jump\t// in\n    tag_331:\n        /* \"#utility.yul\":11258:11330   */\n      tag_332\n        /* \"#utility.yul\":11326:11328   */\n      0x40\n        /* \"#utility.yul\":11315:11324   */\n      dup4\n        /* \"#utility.yul\":11311:11329   */\n      add\n        /* \"#utility.yul\":11302:11308   */\n      dup5\n        /* \"#utility.yul\":11258:11330   */\n      tag_169\n      jump\t// in\n    tag_332:\n        /* \"#utility.yul\":10895:11337   */\n      swap5\n      swap4\n      pop\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":11343:11523   */\n    tag_200:\n        /* \"#utility.yul\":11391:11468   */\n      0x4e487b7100000000000000000000000000000000000000000000000000000000\n        /* \"#utility.yul\":11388:11389   */\n      0x00\n        /* \"#utility.yul\":11381:11469   */\n      mstore\n        /* \"#utility.yul\":11488:11492   */\n      0x11\n        /* \"#utility.yul\":11485:11486   */\n      0x04\n        /* \"#utility.yul\":11478:11493   */\n      mstore\n        /* \"#utility.yul\":11512:11516   */\n      0x24\n        /* \"#utility.yul\":11509:11510   */\n      0x00\n        /* \"#utility.yul\":11502:11517   */\n      revert\n        /* \"#utility.yul\":11529:11762   */\n    tag_94:\n        /* \"#utility.yul\":11568:11571   */\n      0x00\n        /* \"#utility.yul\":11591:11615   */\n      tag_335\n        /* \"#utility.yul\":11609:11614   */\n      dup3\n        /* \"#utility.yul\":11591:11615   */\n      tag_168\n      jump\t// in\n    tag_335:\n        /* \"#utility.yul\":11582:11615   */\n      swap2\n      pop\n        /* \"#utility.yul\":11637:11703   */\n      0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff\n        /* \"#utility.yul\":11630:11635   */\n      dup3\n        /* \"#utility.yul\":11627:11704   */\n      sub\n        /* \"#utility.yul\":11624:11727   */\n      tag_336\n      jumpi\n        /* \"#utility.yul\":11707:11725   */\n      tag_337\n      tag_200\n      jump\t// in\n    tag_337:\n        /* \"#utility.yul\":11624:11727   */\n    tag_336:\n        /* \"#utility.yul\":11754:11755   */\n      0x01\n        /* \"#utility.yul\":11747:11752   */\n      dup3\n        /* \"#utility.yul\":11743:11756   */\n      add\n        /* \"#utility.yul\":11736:11756   */\n      swap1\n      pop\n        /* \"#utility.yul\":11529:11762   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":11768:12210   */\n    tag_96:\n        /* \"#utility.yul\":11917:11921   */\n      0x00\n        /* \"#utility.yul\":11955:11957   */\n      0x60\n        /* \"#utility.yul\":11944:11953   */\n      dup3\n        /* \"#utility.yul\":11940:11958   */\n      add\n        /* \"#utility.yul\":11932:11958   */\n      swap1\n      pop\n        /* \"#utility.yul\":11968:12039   */\n      tag_339\n        /* \"#utility.yul\":12036:12037   */\n      0x00\n        /* \"#utility.yul\":12025:12034   */\n      dup4\n        /* \"#utility.yul\":12021:12038   */\n      add\n        /* \"#utility.yul\":12012:12018   */\n      dup7\n        /* \"#utility.yul\":11968:12039   */\n      tag_169\n      jump\t// in\n    tag_339:\n        /* \"#utility.yul\":12049:12121   */\n      tag_340\n        /* \"#utility.yul\":12117:12119   */\n      0x20\n        /* \"#utility.yul\":12106:12115   */\n      dup4\n        /* \"#utility.yul\":12102:12120   */\n      add\n        /* \"#utility.yul\":12093:12099   */\n      dup6\n        /* \"#utility.yul\":12049:12121   */\n      tag_169\n      jump\t// in\n    tag_340:\n        /* \"#utility.yul\":12131:12203   */\n      tag_341\n        /* \"#utility.yul\":12199:12201   */\n      0x40\n        /* \"#utility.yul\":12188:12197   */\n      dup4\n        /* \"#utility.yul\":12184:12202   */\n      add\n        /* \"#utility.yul\":12175:12181   */\n      dup5\n        /* \"#utility.yul\":12131:12203   */\n      tag_169\n      jump\t// in\n    tag_341:\n        /* \"#utility.yul\":11768:12210   */\n      swap5\n      swap4\n      pop\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":12216:12410   */\n    tag_105:\n        /* \"#utility.yul\":12256:12260   */\n      0x00\n        /* \"#utility.yul\":12276:12296   */\n      tag_343\n        /* \"#utility.yul\":12294:12295   */\n      dup3\n        /* \"#utility.yul\":12276:12296   */\n      tag_168\n      jump\t// in\n    tag_343:\n        /* \"#utility.yul\":12271:12296   */\n      swap2\n      pop\n        /* \"#utility.yul\":12310:12330   */\n      tag_344\n        /* \"#utility.yul\":12328:12329   */\n      dup4\n        /* \"#utility.yul\":12310:12330   */\n      tag_168\n      jump\t// in\n    tag_344:\n        /* \"#utility.yul\":12305:12330   */\n      swap3\n      pop\n        /* \"#utility.yul\":12354:12355   */\n      dup3\n        /* \"#utility.yul\":12351:12352   */\n      dup3\n        /* \"#utility.yul\":12347:12356   */\n      sub\n        /* \"#utility.yul\":12339:12356   */\n      swap1\n      pop\n        /* \"#utility.yul\":12378:12379   */\n      dup2\n        /* \"#utility.yul\":12372:12376   */\n      dup2\n        /* \"#utility.yul\":12369:12380   */\n      gt\n        /* \"#utility.yul\":12366:12403   */\n      iszero\n      tag_345\n      jumpi\n        /* \"#utility.yul\":12383:12401   */\n      tag_346\n      tag_200\n      jump\t// in\n    tag_346:\n        /* \"#utility.yul\":12366:12403   */\n    tag_345:\n        /* \"#utility.yul\":12216:12410   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":12416:12596   */\n    tag_201:\n        /* \"#utility.yul\":12464:12541   */\n      0x4e487b7100000000000000000000000000000000000000000000000000000000\n        /* \"#utility.yul\":12461:12462   */\n      0x00\n        /* \"#utility.yul\":12454:12542   */\n      mstore\n        /* \"#utility.yul\":12561:12565   */\n      0x12\n        /* \"#utility.yul\":12558:12559   */\n      0x04\n        /* \"#utility.yul\":12551:12566   */\n      mstore\n        /* \"#utility.yul\":12585:12589   */\n      0x24\n        /* \"#utility.yul\":12582:12583   */\n      0x00\n        /* \"#utility.yul\":12575:12590   */\n      revert\n        /* \"#utility.yul\":12602:12787   */\n    tag_107:\n        /* \"#utility.yul\":12642:12643   */\n      0x00\n        /* \"#utility.yul\":12659:12679   */\n      tag_349\n        /* \"#utility.yul\":12677:12678   */\n      dup3\n        /* \"#utility.yul\":12659:12679   */\n      tag_168\n      jump\t// in\n    tag_349:\n        /* \"#utility.yul\":12654:12679   */\n      swap2\n      pop\n        /* \"#utility.yul\":12693:12713   */\n      tag_350\n        /* \"#utility.yul\":12711:12712   */\n      dup4\n        /* \"#utility.yul\":12693:12713   */\n      tag_168\n      jump\t// in\n    tag_350:\n        /* \"#utility.yul\":12688:12713   */\n      swap3\n      pop\n        /* \"#utility.yul\":12732:12733   */\n      dup3\n        /* \"#utility.yul\":12722:12757   */\n      tag_351\n      jumpi\n        /* \"#utility.yul\":12737:12755   */\n      tag_352\n      tag_201\n      jump\t// in\n    tag_352:\n        /* \"#utility.yul\":12722:12757   */\n    tag_351:\n        /* \"#utility.yul\":12779:12780   */\n      dup3\n        /* \"#utility.yul\":12776:12777   */\n      dup3\n        /* \"#utility.yul\":12772:12781   */\n      div\n        /* \"#utility.yul\":12767:12781   */\n      swap1\n      pop\n        /* \"#utility.yul\":12602:12787   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":12793:12973   */\n    tag_202:\n        /* \"#utility.yul\":12933:12965   */\n      0x5374616b696e6720706f6f6c206e6f7420656e64656420796574212121210000\n        /* \"#utility.yul\":12929:12930   */\n      0x00\n        /* \"#utility.yul\":12921:12927   */\n      dup3\n        /* \"#utility.yul\":12917:12931   */\n      add\n        /* \"#utility.yul\":12910:12966   */\n      mstore\n        /* \"#utility.yul\":12793:12973   */\n      pop\n      jump\t// out\n        /* \"#utility.yul\":12979:13345   */\n    tag_203:\n        /* \"#utility.yul\":13121:13124   */\n      0x00\n        /* \"#utility.yul\":13142:13209   */\n      tag_355\n        /* \"#utility.yul\":13206:13208   */\n      0x1e\n        /* \"#utility.yul\":13201:13204   */\n      dup4\n        /* \"#utility.yul\":13142:13209   */\n      tag_197\n      jump\t// in\n    tag_355:\n        /* \"#utility.yul\":13135:13209   */\n      swap2\n      pop\n        /* \"#utility.yul\":13218:13311   */\n      tag_356\n        /* \"#utility.yul\":13307:13310   */\n      dup3\n        /* \"#utility.yul\":13218:13311   */\n      tag_202\n      jump\t// in\n    tag_356:\n        /* \"#utility.yul\":13336:13338   */\n      0x20\n        /* \"#utility.yul\":13331:13334   */\n      dup3\n        /* \"#utility.yul\":13327:13339   */\n      add\n        /* \"#utility.yul\":13320:13339   */\n      swap1\n      pop\n        /* \"#utility.yul\":12979:13345   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":13351:13770   */\n    tag_112:\n        /* \"#utility.yul\":13517:13521   */\n      0x00\n        /* \"#utility.yul\":13555:13557   */\n      0x20\n        /* \"#utility.yul\":13544:13553   */\n      dup3\n        /* \"#utility.yul\":13540:13558   */\n      add\n        /* \"#utility.yul\":13532:13558   */\n      swap1\n      pop\n        /* \"#utility.yul\":13604:13613   */\n      dup2\n        /* \"#utility.yul\":13598:13602   */\n      dup2\n        /* \"#utility.yul\":13594:13614   */\n      sub\n        /* \"#utility.yul\":13590:13591   */\n      0x00\n        /* \"#utility.yul\":13579:13588   */\n      dup4\n        /* \"#utility.yul\":13575:13592   */\n      add\n        /* \"#utility.yul\":13568:13615   */\n      mstore\n        /* \"#utility.yul\":13632:13763   */\n      tag_358\n        /* \"#utility.yul\":13758:13762   */\n      dup2\n        /* \"#utility.yul\":13632:13763   */\n      tag_203\n      jump\t// in\n    tag_358:\n        /* \"#utility.yul\":13624:13763   */\n      swap1\n      pop\n        /* \"#utility.yul\":13351:13770   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":13776:14000   */\n    tag_204:\n        /* \"#utility.yul\":13916:13950   */\n      0x596f7520617265206e6f74206f776e6572206f662074686973204e4654207374\n        /* \"#utility.yul\":13912:13913   */\n      0x00\n        /* \"#utility.yul\":13904:13910   */\n      dup3\n        /* \"#utility.yul\":13900:13914   */\n      add\n        /* \"#utility.yul\":13893:13951   */\n      mstore\n        /* \"#utility.yul\":13985:13992   */\n      0x616b696e67000000000000000000000000000000000000000000000000000000\n        /* \"#utility.yul\":13980:13982   */\n      0x20\n        /* \"#utility.yul\":13972:13978   */\n      dup3\n        /* \"#utility.yul\":13968:13983   */\n      add\n        /* \"#utility.yul\":13961:13993   */\n      mstore\n        /* \"#utility.yul\":13776:14000   */\n      pop\n      jump\t// out\n        /* \"#utility.yul\":14006:14372   */\n    tag_205:\n        /* \"#utility.yul\":14148:14151   */\n      0x00\n        /* \"#utility.yul\":14169:14236   */\n      tag_361\n        /* \"#utility.yul\":14233:14235   */\n      0x25\n        /* \"#utility.yul\":14228:14231   */\n      dup4\n        /* \"#utility.yul\":14169:14236   */\n      tag_197\n      jump\t// in\n    tag_361:\n        /* \"#utility.yul\":14162:14236   */\n      swap2\n      pop\n        /* \"#utility.yul\":14245:14338   */\n      tag_362\n        /* \"#utility.yul\":14334:14337   */\n      dup3\n        /* \"#utility.yul\":14245:14338   */\n      tag_204\n      jump\t// in\n    tag_362:\n        /* \"#utility.yul\":14363:14365   */\n      0x40\n        /* \"#utility.yul\":14358:14361   */\n      dup3\n        /* \"#utility.yul\":14354:14366   */\n      add\n        /* \"#utility.yul\":14347:14366   */\n      swap1\n      pop\n        /* \"#utility.yul\":14006:14372   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":14378:14797   */\n    tag_115:\n        /* \"#utility.yul\":14544:14548   */\n      0x00\n        /* \"#utility.yul\":14582:14584   */\n      0x20\n        /* \"#utility.yul\":14571:14580   */\n      dup3\n        /* \"#utility.yul\":14567:14585   */\n      add\n        /* \"#utility.yul\":14559:14585   */\n      swap1\n      pop\n        /* \"#utility.yul\":14631:14640   */\n      dup2\n        /* \"#utility.yul\":14625:14629   */\n      dup2\n        /* \"#utility.yul\":14621:14641   */\n      sub\n        /* \"#utility.yul\":14617:14618   */\n      0x00\n        /* \"#utility.yul\":14606:14615   */\n      dup4\n        /* \"#utility.yul\":14602:14619   */\n      add\n        /* \"#utility.yul\":14595:14642   */\n      mstore\n        /* \"#utility.yul\":14659:14790   */\n      tag_364\n        /* \"#utility.yul\":14785:14789   */\n      dup2\n        /* \"#utility.yul\":14659:14790   */\n      tag_205\n      jump\t// in\n    tag_364:\n        /* \"#utility.yul\":14651:14790   */\n      swap1\n      pop\n        /* \"#utility.yul\":14378:14797   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":14803:15135   */\n    tag_124:\n        /* \"#utility.yul\":14924:14928   */\n      0x00\n        /* \"#utility.yul\":14962:14964   */\n      0x40\n        /* \"#utility.yul\":14951:14960   */\n      dup3\n        /* \"#utility.yul\":14947:14965   */\n      add\n        /* \"#utility.yul\":14939:14965   */\n      swap1\n      pop\n        /* \"#utility.yul\":14975:15046   */\n      tag_366\n        /* \"#utility.yul\":15043:15044   */\n      0x00\n        /* \"#utility.yul\":15032:15041   */\n      dup4\n        /* \"#utility.yul\":15028:15045   */\n      add\n        /* \"#utility.yul\":15019:15025   */\n      dup6\n        /* \"#utility.yul\":14975:15046   */\n      tag_191\n      jump\t// in\n    tag_366:\n        /* \"#utility.yul\":15056:15128   */\n      tag_367\n        /* \"#utility.yul\":15124:15126   */\n      0x20\n        /* \"#utility.yul\":15113:15122   */\n      dup4\n        /* \"#utility.yul\":15109:15127   */\n      add\n        /* \"#utility.yul\":15100:15106   */\n      dup5\n        /* \"#utility.yul\":15056:15128   */\n      tag_169\n      jump\t// in\n    tag_367:\n        /* \"#utility.yul\":14803:15135   */\n      swap4\n      swap3\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":15141:15257   */\n    tag_206:\n        /* \"#utility.yul\":15211:15232   */\n      tag_369\n        /* \"#utility.yul\":15226:15231   */\n      dup2\n        /* \"#utility.yul\":15211:15232   */\n      tag_194\n      jump\t// in\n    tag_369:\n        /* \"#utility.yul\":15204:15209   */\n      dup2\n        /* \"#utility.yul\":15201:15233   */\n      eq\n        /* \"#utility.yul\":15191:15251   */\n      tag_370\n      jumpi\n        /* \"#utility.yul\":15247:15248   */\n      0x00\n        /* \"#utility.yul\":15244:15245   */\n      dup1\n        /* \"#utility.yul\":15237:15249   */\n      revert\n        /* \"#utility.yul\":15191:15251   */\n    tag_370:\n        /* \"#utility.yul\":15141:15257   */\n      pop\n      jump\t// out\n        /* \"#utility.yul\":15263:15400   */\n    tag_207:\n        /* \"#utility.yul\":15317:15322   */\n      0x00\n        /* \"#utility.yul\":15348:15354   */\n      dup2\n        /* \"#utility.yul\":15342:15355   */\n      mload\n        /* \"#utility.yul\":15333:15355   */\n      swap1\n      pop\n        /* \"#utility.yul\":15364:15394   */\n      tag_372\n        /* \"#utility.yul\":15388:15393   */\n      dup2\n        /* \"#utility.yul\":15364:15394   */\n      tag_206\n      jump\t// in\n    tag_372:\n        /* \"#utility.yul\":15263:15400   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":15406:15751   */\n    tag_128:\n        /* \"#utility.yul\":15473:15479   */\n      0x00\n        /* \"#utility.yul\":15522:15524   */\n      0x20\n        /* \"#utility.yul\":15510:15519   */\n      dup3\n        /* \"#utility.yul\":15501:15508   */\n      dup5\n        /* \"#utility.yul\":15497:15520   */\n      sub\n        /* \"#utility.yul\":15493:15525   */\n      slt\n        /* \"#utility.yul\":15490:15609   */\n      iszero\n      tag_374\n      jumpi\n        /* \"#utility.yul\":15528:15607   */\n      tag_375\n      tag_171\n      jump\t// in\n    tag_375:\n        /* \"#utility.yul\":15490:15609   */\n    tag_374:\n        /* \"#utility.yul\":15648:15649   */\n      0x00\n        /* \"#utility.yul\":15673:15734   */\n      tag_376\n        /* \"#utility.yul\":15726:15733   */\n      dup5\n        /* \"#utility.yul\":15717:15723   */\n      dup3\n        /* \"#utility.yul\":15706:15715   */\n      dup6\n        /* \"#utility.yul\":15702:15724   */\n      add\n        /* \"#utility.yul\":15673:15734   */\n      tag_207\n      jump\t// in\n    tag_376:\n        /* \"#utility.yul\":15663:15734   */\n      swap2\n      pop\n        /* \"#utility.yul\":15619:15744   */\n      pop\n        /* \"#utility.yul\":15406:15751   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":15757:16310   */\n    tag_130:\n        /* \"#utility.yul\":15934:15938   */\n      0x00\n        /* \"#utility.yul\":15972:15975   */\n      0x80\n        /* \"#utility.yul\":15961:15970   */\n      dup3\n        /* \"#utility.yul\":15957:15976   */\n      add\n        /* \"#utility.yul\":15949:15976   */\n      swap1\n      pop\n        /* \"#utility.yul\":15986:16057   */\n      tag_378\n        /* \"#utility.yul\":16054:16055   */\n      0x00\n        /* \"#utility.yul\":16043:16052   */\n      dup4\n        /* \"#utility.yul\":16039:16056   */\n      add\n        /* \"#utility.yul\":16030:16036   */\n      dup8\n        /* \"#utility.yul\":15986:16057   */\n      tag_169\n      jump\t// in\n    tag_378:\n        /* \"#utility.yul\":16067:16139   */\n      tag_379\n        /* \"#utility.yul\":16135:16137   */\n      0x20\n        /* \"#utility.yul\":16124:16133   */\n      dup4\n        /* \"#utility.yul\":16120:16138   */\n      add\n        /* \"#utility.yul\":16111:16117   */\n      dup7\n        /* \"#utility.yul\":16067:16139   */\n      tag_169\n      jump\t// in\n    tag_379:\n        /* \"#utility.yul\":16149:16221   */\n      tag_380\n        /* \"#utility.yul\":16217:16219   */\n      0x40\n        /* \"#utility.yul\":16206:16215   */\n      dup4\n        /* \"#utility.yul\":16202:16220   */\n      add\n        /* \"#utility.yul\":16193:16199   */\n      dup6\n        /* \"#utility.yul\":16149:16221   */\n      tag_169\n      jump\t// in\n    tag_380:\n        /* \"#utility.yul\":16231:16303   */\n      tag_381\n        /* \"#utility.yul\":16299:16301   */\n      0x60\n        /* \"#utility.yul\":16288:16297   */\n      dup4\n        /* \"#utility.yul\":16284:16302   */\n      add\n        /* \"#utility.yul\":16275:16281   */\n      dup5\n        /* \"#utility.yul\":16231:16303   */\n      tag_169\n      jump\t// in\n    tag_381:\n        /* \"#utility.yul\":15757:16310   */\n      swap6\n      swap5\n      pop\n      pop\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":16316:16541   */\n    tag_208:\n        /* \"#utility.yul\":16456:16490   */\n      0x4f776e61626c653a206e6577206f776e657220697320746865207a65726f2061\n        /* \"#utility.yul\":16452:16453   */\n      0x00\n        /* \"#utility.yul\":16444:16450   */\n      dup3\n        /* \"#utility.yul\":16440:16454   */\n      add\n        /* \"#utility.yul\":16433:16491   */\n      mstore\n        /* \"#utility.yul\":16525:16533   */\n      0x6464726573730000000000000000000000000000000000000000000000000000\n        /* \"#utility.yul\":16520:16522   */\n      0x20\n        /* \"#utility.yul\":16512:16518   */\n      dup3\n        /* \"#utility.yul\":16508:16523   */\n      add\n        /* \"#utility.yul\":16501:16534   */\n      mstore\n        /* \"#utility.yul\":16316:16541   */\n      pop\n      jump\t// out\n        /* \"#utility.yul\":16547:16913   */\n    tag_209:\n        /* \"#utility.yul\":16689:16692   */\n      0x00\n        /* \"#utility.yul\":16710:16777   */\n      tag_384\n        /* \"#utility.yul\":16774:16776   */\n      0x26\n        /* \"#utility.yul\":16769:16772   */\n      dup4\n        /* \"#utility.yul\":16710:16777   */\n      tag_197\n      jump\t// in\n    tag_384:\n        /* \"#utility.yul\":16703:16777   */\n      swap2\n      pop\n        /* \"#utility.yul\":16786:16879   */\n      tag_385\n        /* \"#utility.yul\":16875:16878   */\n      dup3\n        /* \"#utility.yul\":16786:16879   */\n      tag_208\n      jump\t// in\n    tag_385:\n        /* \"#utility.yul\":16904:16906   */\n      0x40\n        /* \"#utility.yul\":16899:16902   */\n      dup3\n        /* \"#utility.yul\":16895:16907   */\n      add\n        /* \"#utility.yul\":16888:16907   */\n      swap1\n      pop\n        /* \"#utility.yul\":16547:16913   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":16919:17338   */\n    tag_140:\n        /* \"#utility.yul\":17085:17089   */\n      0x00\n        /* \"#utility.yul\":17123:17125   */\n      0x20\n        /* \"#utility.yul\":17112:17121   */\n      dup3\n        /* \"#utility.yul\":17108:17126   */\n      add\n        /* \"#utility.yul\":17100:17126   */\n      swap1\n      pop\n        /* \"#utility.yul\":17172:17181   */\n      dup2\n        /* \"#utility.yul\":17166:17170   */\n      dup2\n        /* \"#utility.yul\":17162:17182   */\n      sub\n        /* \"#utility.yul\":17158:17159   */\n      0x00\n        /* \"#utility.yul\":17147:17156   */\n      dup4\n        /* \"#utility.yul\":17143:17160   */\n      add\n        /* \"#utility.yul\":17136:17183   */\n      mstore\n        /* \"#utility.yul\":17200:17331   */\n      tag_387\n        /* \"#utility.yul\":17326:17330   */\n      dup2\n        /* \"#utility.yul\":17200:17331   */\n      tag_209\n      jump\t// in\n    tag_387:\n        /* \"#utility.yul\":17192:17331   */\n      swap1\n      pop\n        /* \"#utility.yul\":16919:17338   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":17344:17524   */\n    tag_148:\n        /* \"#utility.yul\":17392:17469   */\n      0x4e487b7100000000000000000000000000000000000000000000000000000000\n        /* \"#utility.yul\":17389:17390   */\n      0x00\n        /* \"#utility.yul\":17382:17470   */\n      mstore\n        /* \"#utility.yul\":17489:17493   */\n      0x32\n        /* \"#utility.yul\":17486:17487   */\n      0x04\n        /* \"#utility.yul\":17479:17494   */\n      mstore\n        /* \"#utility.yul\":17513:17517   */\n      0x24\n        /* \"#utility.yul\":17510:17511   */\n      0x00\n        /* \"#utility.yul\":17503:17518   */\n      revert\n        /* \"#utility.yul\":17530:17712   */\n    tag_210:\n        /* \"#utility.yul\":17670:17704   */\n      0x4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e6572\n        /* \"#utility.yul\":17666:17667   */\n      0x00\n        /* \"#utility.yul\":17658:17664   */\n      dup3\n        /* \"#utility.yul\":17654:17668   */\n      add\n        /* \"#utility.yul\":17647:17705   */\n      mstore\n        /* \"#utility.yul\":17530:17712   */\n      pop\n      jump\t// out\n        /* \"#utility.yul\":17718:18084   */\n    tag_211:\n        /* \"#utility.yul\":17860:17863   */\n      0x00\n        /* \"#utility.yul\":17881:17948   */\n      tag_391\n        /* \"#utility.yul\":17945:17947   */\n      0x20\n        /* \"#utility.yul\":17940:17943   */\n      dup4\n        /* \"#utility.yul\":17881:17948   */\n      tag_197\n      jump\t// in\n    tag_391:\n        /* \"#utility.yul\":17874:17948   */\n      swap2\n      pop\n        /* \"#utility.yul\":17957:18050   */\n      tag_392\n        /* \"#utility.yul\":18046:18049   */\n      dup3\n        /* \"#utility.yul\":17957:18050   */\n      tag_210\n      jump\t// in\n    tag_392:\n        /* \"#utility.yul\":18075:18077   */\n      0x20\n        /* \"#utility.yul\":18070:18073   */\n      dup3\n        /* \"#utility.yul\":18066:18078   */\n      add\n        /* \"#utility.yul\":18059:18078   */\n      swap1\n      pop\n        /* \"#utility.yul\":17718:18084   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":18090:18509   */\n    tag_158:\n        /* \"#utility.yul\":18256:18260   */\n      0x00\n        /* \"#utility.yul\":18294:18296   */\n      0x20\n        /* \"#utility.yul\":18283:18292   */\n      dup3\n        /* \"#utility.yul\":18279:18297   */\n      add\n        /* \"#utility.yul\":18271:18297   */\n      swap1\n      pop\n        /* \"#utility.yul\":18343:18352   */\n      dup2\n        /* \"#utility.yul\":18337:18341   */\n      dup2\n        /* \"#utility.yul\":18333:18353   */\n      sub\n        /* \"#utility.yul\":18329:18330   */\n      0x00\n        /* \"#utility.yul\":18318:18327   */\n      dup4\n        /* \"#utility.yul\":18314:18331   */\n      add\n        /* \"#utility.yul\":18307:18354   */\n      mstore\n        /* \"#utility.yul\":18371:18502   */\n      tag_394\n        /* \"#utility.yul\":18497:18501   */\n      dup2\n        /* \"#utility.yul\":18371:18502   */\n      tag_211\n      jump\t// in\n    tag_394:\n        /* \"#utility.yul\":18363:18502   */\n      swap1\n      pop\n        /* \"#utility.yul\":18090:18509   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n\n    auxdata: 0xa2646970667358221220f766f723a34992ff41025cc40b3104962bd119d7693a60f8aa526b3ba44c1cac64736f6c63430008120033\n}\n",
						"bytecode": {
							"functionDebugData": {
								"@_1113": {
									"entryPoint": null,
									"id": 1113,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"@_131": {
									"entryPoint": null,
									"id": 131,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@_23": {
									"entryPoint": null,
									"id": 23,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@_msgSender_1019": {
									"entryPoint": 237,
									"id": 1019,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"@_transferOwnership_111": {
									"entryPoint": 245,
									"id": 111,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"abi_decode_t_address_fromMemory": {
									"entryPoint": 524,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_tuple_t_addresst_address_fromMemory": {
									"entryPoint": 547,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 2
								},
								"allocate_unbounded": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"cleanup_t_address": {
									"entryPoint": 478,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"cleanup_t_uint160": {
									"entryPoint": 446,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b": {
									"entryPoint": 441,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"validator_revert_t_address": {
									"entryPoint": 498,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								}
							},
							"generatedSources": [
								{
									"ast": {
										"nodeType": "YulBlock",
										"src": "0:1355:10",
										"statements": [
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "47:35:10",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "57:19:10",
															"value": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "73:2:10",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nodeType": "YulIdentifier",
																	"src": "67:5:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "67:9:10"
															},
															"variableNames": [
																{
																	"name": "memPtr",
																	"nodeType": "YulIdentifier",
																	"src": "57:6:10"
																}
															]
														}
													]
												},
												"name": "allocate_unbounded",
												"nodeType": "YulFunctionDefinition",
												"returnVariables": [
													{
														"name": "memPtr",
														"nodeType": "YulTypedName",
														"src": "40:6:10",
														"type": ""
													}
												],
												"src": "7:75:10"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "177:28:10",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "194:1:10",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "197:1:10",
																		"type": "",
																		"value": "0"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nodeType": "YulIdentifier",
																	"src": "187:6:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "187:12:10"
															},
															"nodeType": "YulExpressionStatement",
															"src": "187:12:10"
														}
													]
												},
												"name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
												"nodeType": "YulFunctionDefinition",
												"src": "88:117:10"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "300:28:10",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "317:1:10",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "320:1:10",
																		"type": "",
																		"value": "0"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nodeType": "YulIdentifier",
																	"src": "310:6:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "310:12:10"
															},
															"nodeType": "YulExpressionStatement",
															"src": "310:12:10"
														}
													]
												},
												"name": "revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db",
												"nodeType": "YulFunctionDefinition",
												"src": "211:117:10"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "379:81:10",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "389:65:10",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nodeType": "YulIdentifier",
																		"src": "404:5:10"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "411:42:10",
																		"type": "",
																		"value": "0xffffffffffffffffffffffffffffffffffffffff"
																	}
																],
																"functionName": {
																	"name": "and",
																	"nodeType": "YulIdentifier",
																	"src": "400:3:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "400:54:10"
															},
															"variableNames": [
																{
																	"name": "cleaned",
																	"nodeType": "YulIdentifier",
																	"src": "389:7:10"
																}
															]
														}
													]
												},
												"name": "cleanup_t_uint160",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "361:5:10",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "cleaned",
														"nodeType": "YulTypedName",
														"src": "371:7:10",
														"type": ""
													}
												],
												"src": "334:126:10"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "511:51:10",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "521:35:10",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nodeType": "YulIdentifier",
																		"src": "550:5:10"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint160",
																	"nodeType": "YulIdentifier",
																	"src": "532:17:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "532:24:10"
															},
															"variableNames": [
																{
																	"name": "cleaned",
																	"nodeType": "YulIdentifier",
																	"src": "521:7:10"
																}
															]
														}
													]
												},
												"name": "cleanup_t_address",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "493:5:10",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "cleaned",
														"nodeType": "YulTypedName",
														"src": "503:7:10",
														"type": ""
													}
												],
												"src": "466:96:10"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "611:79:10",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "668:16:10",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "677:1:10",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "680:1:10",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "670:6:10"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "670:12:10"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "670:12:10"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nodeType": "YulIdentifier",
																				"src": "634:5:10"
																			},
																			{
																				"arguments": [
																					{
																						"name": "value",
																						"nodeType": "YulIdentifier",
																						"src": "659:5:10"
																					}
																				],
																				"functionName": {
																					"name": "cleanup_t_address",
																					"nodeType": "YulIdentifier",
																					"src": "641:17:10"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "641:24:10"
																			}
																		],
																		"functionName": {
																			"name": "eq",
																			"nodeType": "YulIdentifier",
																			"src": "631:2:10"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "631:35:10"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nodeType": "YulIdentifier",
																	"src": "624:6:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "624:43:10"
															},
															"nodeType": "YulIf",
															"src": "621:63:10"
														}
													]
												},
												"name": "validator_revert_t_address",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "604:5:10",
														"type": ""
													}
												],
												"src": "568:122:10"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "759:80:10",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "769:22:10",
															"value": {
																"arguments": [
																	{
																		"name": "offset",
																		"nodeType": "YulIdentifier",
																		"src": "784:6:10"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nodeType": "YulIdentifier",
																	"src": "778:5:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "778:13:10"
															},
															"variableNames": [
																{
																	"name": "value",
																	"nodeType": "YulIdentifier",
																	"src": "769:5:10"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value",
																		"nodeType": "YulIdentifier",
																		"src": "827:5:10"
																	}
																],
																"functionName": {
																	"name": "validator_revert_t_address",
																	"nodeType": "YulIdentifier",
																	"src": "800:26:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "800:33:10"
															},
															"nodeType": "YulExpressionStatement",
															"src": "800:33:10"
														}
													]
												},
												"name": "abi_decode_t_address_fromMemory",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "offset",
														"nodeType": "YulTypedName",
														"src": "737:6:10",
														"type": ""
													},
													{
														"name": "end",
														"nodeType": "YulTypedName",
														"src": "745:3:10",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "753:5:10",
														"type": ""
													}
												],
												"src": "696:143:10"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "939:413:10",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "985:83:10",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
																				"nodeType": "YulIdentifier",
																				"src": "987:77:10"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "987:79:10"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "987:79:10"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "960:7:10"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "969:9:10"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "956:3:10"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "956:23:10"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "981:2:10",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nodeType": "YulIdentifier",
																	"src": "952:3:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "952:32:10"
															},
															"nodeType": "YulIf",
															"src": "949:119:10"
														},
														{
															"nodeType": "YulBlock",
															"src": "1078:128:10",
															"statements": [
																{
																	"nodeType": "YulVariableDeclaration",
																	"src": "1093:15:10",
																	"value": {
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "1107:1:10",
																		"type": "",
																		"value": "0"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nodeType": "YulTypedName",
																			"src": "1097:6:10",
																			"type": ""
																		}
																	]
																},
																{
																	"nodeType": "YulAssignment",
																	"src": "1122:74:10",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nodeType": "YulIdentifier",
																						"src": "1168:9:10"
																					},
																					{
																						"name": "offset",
																						"nodeType": "YulIdentifier",
																						"src": "1179:6:10"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "1164:3:10"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "1164:22:10"
																			},
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "1188:7:10"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_address_fromMemory",
																			"nodeType": "YulIdentifier",
																			"src": "1132:31:10"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "1132:64:10"
																	},
																	"variableNames": [
																		{
																			"name": "value0",
																			"nodeType": "YulIdentifier",
																			"src": "1122:6:10"
																		}
																	]
																}
															]
														},
														{
															"nodeType": "YulBlock",
															"src": "1216:129:10",
															"statements": [
																{
																	"nodeType": "YulVariableDeclaration",
																	"src": "1231:16:10",
																	"value": {
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "1245:2:10",
																		"type": "",
																		"value": "32"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nodeType": "YulTypedName",
																			"src": "1235:6:10",
																			"type": ""
																		}
																	]
																},
																{
																	"nodeType": "YulAssignment",
																	"src": "1261:74:10",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nodeType": "YulIdentifier",
																						"src": "1307:9:10"
																					},
																					{
																						"name": "offset",
																						"nodeType": "YulIdentifier",
																						"src": "1318:6:10"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "1303:3:10"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "1303:22:10"
																			},
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "1327:7:10"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_address_fromMemory",
																			"nodeType": "YulIdentifier",
																			"src": "1271:31:10"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "1271:64:10"
																	},
																	"variableNames": [
																		{
																			"name": "value1",
																			"nodeType": "YulIdentifier",
																			"src": "1261:6:10"
																		}
																	]
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_addresst_address_fromMemory",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "901:9:10",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nodeType": "YulTypedName",
														"src": "912:7:10",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "924:6:10",
														"type": ""
													},
													{
														"name": "value1",
														"nodeType": "YulTypedName",
														"src": "932:6:10",
														"type": ""
													}
												],
												"src": "845:507:10"
											}
										]
									},
									"contents": "{\n\n    function allocate_unbounded() -> memPtr {\n        memPtr := mload(64)\n    }\n\n    function revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() {\n        revert(0, 0)\n    }\n\n    function revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db() {\n        revert(0, 0)\n    }\n\n    function cleanup_t_uint160(value) -> cleaned {\n        cleaned := and(value, 0xffffffffffffffffffffffffffffffffffffffff)\n    }\n\n    function cleanup_t_address(value) -> cleaned {\n        cleaned := cleanup_t_uint160(value)\n    }\n\n    function validator_revert_t_address(value) {\n        if iszero(eq(value, cleanup_t_address(value))) { revert(0, 0) }\n    }\n\n    function abi_decode_t_address_fromMemory(offset, end) -> value {\n        value := mload(offset)\n        validator_revert_t_address(value)\n    }\n\n    function abi_decode_tuple_t_addresst_address_fromMemory(headStart, dataEnd) -> value0, value1 {\n        if slt(sub(dataEnd, headStart), 64) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_address_fromMemory(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := 32\n\n            value1 := abi_decode_t_address_fromMemory(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n}\n",
									"id": 10,
									"language": "Yul",
									"name": "#utility.yul"
								}
							],
							"linkReferences": {},
							"object": "608060405260006004553480156200001657600080fd5b5060405162001a7f38038062001a7f83398181016040528101906200003c919062000223565b6200005c62000050620000ed60201b60201c565b620000f560201b60201c565b6001808190555081600360006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff16021790555080600260006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff16021790555050506200026a565b600033905090565b60008060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff169050816000806101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055508173ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff167f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e060405160405180910390a35050565b600080fd5b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b6000620001eb82620001be565b9050919050565b620001fd81620001de565b81146200020957600080fd5b50565b6000815190506200021d81620001f2565b92915050565b600080604083850312156200023d576200023c620001b9565b5b60006200024d858286016200020c565b925050602062000260858286016200020c565b9150509250929050565b611805806200027a6000396000f3fe608060405234801561001057600080fd5b50600436106100cf5760003560e01c806378dba5941161008c578063d5a44f8611610066578063d5a44f8614610200578063f2fde38b14610234578063f7c618c114610250578063fbaca0861461026e576100cf565b806378dba5941461019657806379e5f7d7146101b25780638da5cb5b146101e2576100cf565b80632986c0e5146100d45780633af416d1146100f25780633f1069291461012257806351cecc8014610152578063715018a61461016e57806378b2e3a914610178575b600080fd5b6100dc61029e565b6040516100e99190610e45565b60405180910390f35b61010c60048036038101906101079190610eef565b6102a4565b6040516101199190610e45565b60405180910390f35b61013c60048036038101906101379190610eef565b6102d5565b6040516101499190610e45565b60405180910390f35b61016c60048036038101906101679190610f2f565b610306565b005b61017661063c565b005b610180610650565b60405161018d9190610fce565b60405180910390f35b6101b060048036038101906101ab9190610fe9565b610676565b005b6101cc60048036038101906101c7919061103c565b6109fd565b6040516101d99190611127565b60405180910390f35b6101ea610a9a565b6040516101f79190611158565b60405180910390f35b61021a60048036038101906102159190611173565b610ac3565b60405161022b9594939291906111a0565b60405180910390f35b61024e6004803603810190610249919061103c565b610b19565b005b610258610b9c565b6040516102659190611214565b60405180910390f35b6102886004803603810190610283919061122f565b610bc2565b604051610295919061128a565b60405180910390f35b60045481565b600860205281600052604060002081815481106102c057600080fd5b90600052602060002001600091509150505481565b600760205281600052604060002081815481106102f157600080fd5b90600052602060002001600091509150505481565b3373ffffffffffffffffffffffffffffffffffffffff16600260009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16636352211e846040518263ffffffff1660e01b81526004016103789190610e45565b602060405180830381865afa158015610395573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906103b991906112ba565b73ffffffffffffffffffffffffffffffffffffffff161461040f576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161040690611344565b60405180910390fd5b6040518060a0016040528060045481526020013373ffffffffffffffffffffffffffffffffffffffff168152602001838152602001828152602001428152506006600060045481526020019081526020016000206000820151816000015560208201518160010160006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff160217905550604082015181600201556060820151816003015560808201518160040155905050600760003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000206004549080600181540180825580915050600190039060005260206000200160009091909190915055600260009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff166323b872dd3330856040518463ffffffff1660e01b815260040161059c93929190611364565b600060405180830381600087803b1580156105b657600080fd5b505af11580156105ca573d6000803e3d6000fd5b50505050600460008154809291906105e1906113ca565b91905055503373ffffffffffffffffffffffffffffffffffffffff167ff556991011e831bcfac4f406d547e5e32cdd98267efab83935230d5f8d02c44683834260405161063093929190611412565b60405180910390a25050565b610644610c9f565b61064e6000610d1d565b565b600260009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1681565b806018603c8060066000888152602001908152602001600020600401544261069e9190611449565b6106a891906114ac565b6106b291906114ac565b6106bc91906114ac565b10156106fd576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016106f490611529565b60405180910390fd5b3373ffffffffffffffffffffffffffffffffffffffff166006600085815260200190815260200160002060010160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16146107a1576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610798906115bb565b60405180910390fd5b600660008481526020019081526020016000206000808201600090556001820160006101000a81549073ffffffffffffffffffffffffffffffffffffffff02191690556002820160009055600382016000905560048201600090555050600860003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020839080600181540180825580915050600190039060005260206000200160009091909190915055600260009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff166323b872dd3033856040518463ffffffff1660e01b81526004016108c393929190611364565b600060405180830381600087803b1580156108dd57600080fd5b505af11580156108f1573d6000803e3d6000fd5b50505050600061090082610de1565b9050600360009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1663a9059cbb33836040518363ffffffff1660e01b815260040161095f9291906115db565b6020604051808303816000875af115801561097e573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906109a29190611630565b503373ffffffffffffffffffffffffffffffffffffffff167ff74c9f1985016ff6aa83c3fd81e31d0be3b194f205ae5e1b57f5bd74ad28e4cf848442856040516109ef949392919061165d565b60405180910390a250505050565b60606000600760008473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020805480602002602001604051908101604052809291908181526020018280548015610a8a57602002820191906000526020600020905b815481526020019060010190808311610a76575b5050505050905080915050919050565b60008060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff16905090565b60066020528060005260406000206000915090508060000154908060010160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff16908060020154908060030154908060040154905085565b610b21610c9f565b600073ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff1603610b90576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610b8790611714565b60405180910390fd5b610b9981610d1d565b50565b600360009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1681565b600080600090505b600860008473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002080549050811015610c935783600860008573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000208281548110610c6657610c65611734565b5b906000526020600020015403610c80576001915050610c99565b8080610c8b906113ca565b915050610bca565b50600090505b92915050565b610ca7610e24565b73ffffffffffffffffffffffffffffffffffffffff16610cc5610a9a565b73ffffffffffffffffffffffffffffffffffffffff1614610d1b576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610d12906117af565b60405180910390fd5b565b60008060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff169050816000806101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055508173ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff167f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e060405160405180910390a35050565b600060078203610df5576103e89050610e1f565b600e8203610e0757610bb89050610e1f565b601e8203610e19576113889050610e1f565b61271090505b919050565b600033905090565b6000819050919050565b610e3f81610e2c565b82525050565b6000602082019050610e5a6000830184610e36565b92915050565b600080fd5b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b6000610e9082610e65565b9050919050565b610ea081610e85565b8114610eab57600080fd5b50565b600081359050610ebd81610e97565b92915050565b610ecc81610e2c565b8114610ed757600080fd5b50565b600081359050610ee981610ec3565b92915050565b60008060408385031215610f0657610f05610e60565b5b6000610f1485828601610eae565b9250506020610f2585828601610eda565b9150509250929050565b60008060408385031215610f4657610f45610e60565b5b6000610f5485828601610eda565b9250506020610f6585828601610eda565b9150509250929050565b6000819050919050565b6000610f94610f8f610f8a84610e65565b610f6f565b610e65565b9050919050565b6000610fa682610f79565b9050919050565b6000610fb882610f9b565b9050919050565b610fc881610fad565b82525050565b6000602082019050610fe36000830184610fbf565b92915050565b60008060006060848603121561100257611001610e60565b5b600061101086828701610eda565b935050602061102186828701610eda565b925050604061103286828701610eda565b9150509250925092565b60006020828403121561105257611051610e60565b5b600061106084828501610eae565b91505092915050565b600081519050919050565b600082825260208201905092915050565b6000819050602082019050919050565b61109e81610e2c565b82525050565b60006110b08383611095565b60208301905092915050565b6000602082019050919050565b60006110d482611069565b6110de8185611074565b93506110e983611085565b8060005b8381101561111a57815161110188826110a4565b975061110c836110bc565b9250506001810190506110ed565b5085935050505092915050565b6000602082019050818103600083015261114181846110c9565b905092915050565b61115281610e85565b82525050565b600060208201905061116d6000830184611149565b92915050565b60006020828403121561118957611188610e60565b5b600061119784828501610eda565b91505092915050565b600060a0820190506111b56000830188610e36565b6111c26020830187611149565b6111cf6040830186610e36565b6111dc6060830185610e36565b6111e96080830184610e36565b9695505050505050565b60006111fe82610f9b565b9050919050565b61120e816111f3565b82525050565b60006020820190506112296000830184611205565b92915050565b6000806040838503121561124657611245610e60565b5b600061125485828601610eda565b925050602061126585828601610eae565b9150509250929050565b60008115159050919050565b6112848161126f565b82525050565b600060208201905061129f600083018461127b565b92915050565b6000815190506112b481610e97565b92915050565b6000602082840312156112d0576112cf610e60565b5b60006112de848285016112a5565b91505092915050565b600082825260208201905092915050565b7f43616e2774207374616b65206e667420796f7520646f6e2774206f776e210000600082015250565b600061132e601e836112e7565b9150611339826112f8565b602082019050919050565b6000602082019050818103600083015261135d81611321565b9050919050565b60006060820190506113796000830186611149565b6113866020830185611149565b6113936040830184610e36565b949350505050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601160045260246000fd5b60006113d582610e2c565b91507fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff82036114075761140661139b565b5b600182019050919050565b60006060820190506114276000830186610e36565b6114346020830185610e36565b6114416040830184610e36565b949350505050565b600061145482610e2c565b915061145f83610e2c565b92508282039050818111156114775761147661139b565b5b92915050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601260045260246000fd5b60006114b782610e2c565b91506114c283610e2c565b9250826114d2576114d161147d565b5b828204905092915050565b7f5374616b696e6720706f6f6c206e6f7420656e64656420796574212121210000600082015250565b6000611513601e836112e7565b915061151e826114dd565b602082019050919050565b6000602082019050818103600083015261154281611506565b9050919050565b7f596f7520617265206e6f74206f776e6572206f662074686973204e465420737460008201527f616b696e67000000000000000000000000000000000000000000000000000000602082015250565b60006115a56025836112e7565b91506115b082611549565b604082019050919050565b600060208201905081810360008301526115d481611598565b9050919050565b60006040820190506115f06000830185611149565b6115fd6020830184610e36565b9392505050565b61160d8161126f565b811461161857600080fd5b50565b60008151905061162a81611604565b92915050565b60006020828403121561164657611645610e60565b5b60006116548482850161161b565b91505092915050565b60006080820190506116726000830187610e36565b61167f6020830186610e36565b61168c6040830185610e36565b6116996060830184610e36565b95945050505050565b7f4f776e61626c653a206e6577206f776e657220697320746865207a65726f206160008201527f6464726573730000000000000000000000000000000000000000000000000000602082015250565b60006116fe6026836112e7565b9150611709826116a2565b604082019050919050565b6000602082019050818103600083015261172d816116f1565b9050919050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052603260045260246000fd5b7f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e6572600082015250565b60006117996020836112e7565b91506117a482611763565b602082019050919050565b600060208201905081810360008301526117c88161178c565b905091905056fea2646970667358221220f766f723a34992ff41025cc40b3104962bd119d7693a60f8aa526b3ba44c1cac64736f6c63430008120033",
							"opcodes": "PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x0 PUSH1 0x4 SSTORE CALLVALUE DUP1 ISZERO PUSH3 0x16 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x40 MLOAD PUSH3 0x1A7F CODESIZE SUB DUP1 PUSH3 0x1A7F DUP4 CODECOPY DUP2 DUP2 ADD PUSH1 0x40 MSTORE DUP2 ADD SWAP1 PUSH3 0x3C SWAP2 SWAP1 PUSH3 0x223 JUMP JUMPDEST PUSH3 0x5C PUSH3 0x50 PUSH3 0xED PUSH1 0x20 SHL PUSH1 0x20 SHR JUMP JUMPDEST PUSH3 0xF5 PUSH1 0x20 SHL PUSH1 0x20 SHR JUMP JUMPDEST PUSH1 0x1 DUP1 DUP2 SWAP1 SSTORE POP DUP2 PUSH1 0x3 PUSH1 0x0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP DUP1 PUSH1 0x2 PUSH1 0x0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP POP POP PUSH3 0x26A JUMP JUMPDEST PUSH1 0x0 CALLER SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 POP DUP2 PUSH1 0x0 DUP1 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0x8BE0079C531659141344CD1FD0A4F28419497F9722A3DAAFE3B4186F6B6457E0 PUSH1 0x40 MLOAD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP3 AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH3 0x1EB DUP3 PUSH3 0x1BE JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH3 0x1FD DUP2 PUSH3 0x1DE JUMP JUMPDEST DUP2 EQ PUSH3 0x209 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH1 0x0 DUP2 MLOAD SWAP1 POP PUSH3 0x21D DUP2 PUSH3 0x1F2 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH3 0x23D JUMPI PUSH3 0x23C PUSH3 0x1B9 JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH3 0x24D DUP6 DUP3 DUP7 ADD PUSH3 0x20C JUMP JUMPDEST SWAP3 POP POP PUSH1 0x20 PUSH3 0x260 DUP6 DUP3 DUP7 ADD PUSH3 0x20C JUMP JUMPDEST SWAP2 POP POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH2 0x1805 DUP1 PUSH3 0x27A PUSH1 0x0 CODECOPY PUSH1 0x0 RETURN INVALID PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH2 0x10 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x4 CALLDATASIZE LT PUSH2 0xCF JUMPI PUSH1 0x0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0x78DBA594 GT PUSH2 0x8C JUMPI DUP1 PUSH4 0xD5A44F86 GT PUSH2 0x66 JUMPI DUP1 PUSH4 0xD5A44F86 EQ PUSH2 0x200 JUMPI DUP1 PUSH4 0xF2FDE38B EQ PUSH2 0x234 JUMPI DUP1 PUSH4 0xF7C618C1 EQ PUSH2 0x250 JUMPI DUP1 PUSH4 0xFBACA086 EQ PUSH2 0x26E JUMPI PUSH2 0xCF JUMP JUMPDEST DUP1 PUSH4 0x78DBA594 EQ PUSH2 0x196 JUMPI DUP1 PUSH4 0x79E5F7D7 EQ PUSH2 0x1B2 JUMPI DUP1 PUSH4 0x8DA5CB5B EQ PUSH2 0x1E2 JUMPI PUSH2 0xCF JUMP JUMPDEST DUP1 PUSH4 0x2986C0E5 EQ PUSH2 0xD4 JUMPI DUP1 PUSH4 0x3AF416D1 EQ PUSH2 0xF2 JUMPI DUP1 PUSH4 0x3F106929 EQ PUSH2 0x122 JUMPI DUP1 PUSH4 0x51CECC80 EQ PUSH2 0x152 JUMPI DUP1 PUSH4 0x715018A6 EQ PUSH2 0x16E JUMPI DUP1 PUSH4 0x78B2E3A9 EQ PUSH2 0x178 JUMPI JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0xDC PUSH2 0x29E JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0xE9 SWAP2 SWAP1 PUSH2 0xE45 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x10C PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x107 SWAP2 SWAP1 PUSH2 0xEEF JUMP JUMPDEST PUSH2 0x2A4 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x119 SWAP2 SWAP1 PUSH2 0xE45 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x13C PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x137 SWAP2 SWAP1 PUSH2 0xEEF JUMP JUMPDEST PUSH2 0x2D5 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x149 SWAP2 SWAP1 PUSH2 0xE45 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x16C PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x167 SWAP2 SWAP1 PUSH2 0xF2F JUMP JUMPDEST PUSH2 0x306 JUMP JUMPDEST STOP JUMPDEST PUSH2 0x176 PUSH2 0x63C JUMP JUMPDEST STOP JUMPDEST PUSH2 0x180 PUSH2 0x650 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x18D SWAP2 SWAP1 PUSH2 0xFCE JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x1B0 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x1AB SWAP2 SWAP1 PUSH2 0xFE9 JUMP JUMPDEST PUSH2 0x676 JUMP JUMPDEST STOP JUMPDEST PUSH2 0x1CC PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x1C7 SWAP2 SWAP1 PUSH2 0x103C JUMP JUMPDEST PUSH2 0x9FD JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x1D9 SWAP2 SWAP1 PUSH2 0x1127 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x1EA PUSH2 0xA9A JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x1F7 SWAP2 SWAP1 PUSH2 0x1158 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x21A PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x215 SWAP2 SWAP1 PUSH2 0x1173 JUMP JUMPDEST PUSH2 0xAC3 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x22B SWAP6 SWAP5 SWAP4 SWAP3 SWAP2 SWAP1 PUSH2 0x11A0 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x24E PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x249 SWAP2 SWAP1 PUSH2 0x103C JUMP JUMPDEST PUSH2 0xB19 JUMP JUMPDEST STOP JUMPDEST PUSH2 0x258 PUSH2 0xB9C JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x265 SWAP2 SWAP1 PUSH2 0x1214 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x288 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x283 SWAP2 SWAP1 PUSH2 0x122F JUMP JUMPDEST PUSH2 0xBC2 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x295 SWAP2 SWAP1 PUSH2 0x128A JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH1 0x4 SLOAD DUP2 JUMP JUMPDEST PUSH1 0x8 PUSH1 0x20 MSTORE DUP2 PUSH1 0x0 MSTORE PUSH1 0x40 PUSH1 0x0 KECCAK256 DUP2 DUP2 SLOAD DUP2 LT PUSH2 0x2C0 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 ADD PUSH1 0x0 SWAP2 POP SWAP2 POP POP SLOAD DUP2 JUMP JUMPDEST PUSH1 0x7 PUSH1 0x20 MSTORE DUP2 PUSH1 0x0 MSTORE PUSH1 0x40 PUSH1 0x0 KECCAK256 DUP2 DUP2 SLOAD DUP2 LT PUSH2 0x2F1 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 ADD PUSH1 0x0 SWAP2 POP SWAP2 POP POP SLOAD DUP2 JUMP JUMPDEST CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH1 0x2 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH4 0x6352211E DUP5 PUSH1 0x40 MLOAD DUP3 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x378 SWAP2 SWAP1 PUSH2 0xE45 JUMP JUMPDEST PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0x395 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x3B9 SWAP2 SWAP1 PUSH2 0x12BA JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ PUSH2 0x40F JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x406 SWAP1 PUSH2 0x1344 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x40 MLOAD DUP1 PUSH1 0xA0 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0x4 SLOAD DUP2 MSTORE PUSH1 0x20 ADD CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD DUP4 DUP2 MSTORE PUSH1 0x20 ADD DUP3 DUP2 MSTORE PUSH1 0x20 ADD TIMESTAMP DUP2 MSTORE POP PUSH1 0x6 PUSH1 0x0 PUSH1 0x4 SLOAD DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 DUP3 ADD MLOAD DUP2 PUSH1 0x0 ADD SSTORE PUSH1 0x20 DUP3 ADD MLOAD DUP2 PUSH1 0x1 ADD PUSH1 0x0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP PUSH1 0x40 DUP3 ADD MLOAD DUP2 PUSH1 0x2 ADD SSTORE PUSH1 0x60 DUP3 ADD MLOAD DUP2 PUSH1 0x3 ADD SSTORE PUSH1 0x80 DUP3 ADD MLOAD DUP2 PUSH1 0x4 ADD SSTORE SWAP1 POP POP PUSH1 0x7 PUSH1 0x0 CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x4 SLOAD SWAP1 DUP1 PUSH1 0x1 DUP2 SLOAD ADD DUP1 DUP3 SSTORE DUP1 SWAP2 POP POP PUSH1 0x1 SWAP1 SUB SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 ADD PUSH1 0x0 SWAP1 SWAP2 SWAP1 SWAP2 SWAP1 SWAP2 POP SSTORE PUSH1 0x2 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH4 0x23B872DD CALLER ADDRESS DUP6 PUSH1 0x40 MLOAD DUP5 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x59C SWAP4 SWAP3 SWAP2 SWAP1 PUSH2 0x1364 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH1 0x0 DUP8 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0x5B6 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS CALL ISZERO DUP1 ISZERO PUSH2 0x5CA JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x4 PUSH1 0x0 DUP2 SLOAD DUP1 SWAP3 SWAP2 SWAP1 PUSH2 0x5E1 SWAP1 PUSH2 0x13CA JUMP JUMPDEST SWAP2 SWAP1 POP SSTORE POP CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0xF556991011E831BCFAC4F406D547E5E32CDD98267EFAB83935230D5F8D02C446 DUP4 DUP4 TIMESTAMP PUSH1 0x40 MLOAD PUSH2 0x630 SWAP4 SWAP3 SWAP2 SWAP1 PUSH2 0x1412 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG2 POP POP JUMP JUMPDEST PUSH2 0x644 PUSH2 0xC9F JUMP JUMPDEST PUSH2 0x64E PUSH1 0x0 PUSH2 0xD1D JUMP JUMPDEST JUMP JUMPDEST PUSH1 0x2 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 JUMP JUMPDEST DUP1 PUSH1 0x18 PUSH1 0x3C DUP1 PUSH1 0x6 PUSH1 0x0 DUP9 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x4 ADD SLOAD TIMESTAMP PUSH2 0x69E SWAP2 SWAP1 PUSH2 0x1449 JUMP JUMPDEST PUSH2 0x6A8 SWAP2 SWAP1 PUSH2 0x14AC JUMP JUMPDEST PUSH2 0x6B2 SWAP2 SWAP1 PUSH2 0x14AC JUMP JUMPDEST PUSH2 0x6BC SWAP2 SWAP1 PUSH2 0x14AC JUMP JUMPDEST LT ISZERO PUSH2 0x6FD JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x6F4 SWAP1 PUSH2 0x1529 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH1 0x6 PUSH1 0x0 DUP6 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x1 ADD PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ PUSH2 0x7A1 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x798 SWAP1 PUSH2 0x15BB JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x6 PUSH1 0x0 DUP5 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 DUP1 DUP3 ADD PUSH1 0x0 SWAP1 SSTORE PUSH1 0x1 DUP3 ADD PUSH1 0x0 PUSH2 0x100 EXP DUP2 SLOAD SWAP1 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 SSTORE PUSH1 0x2 DUP3 ADD PUSH1 0x0 SWAP1 SSTORE PUSH1 0x3 DUP3 ADD PUSH1 0x0 SWAP1 SSTORE PUSH1 0x4 DUP3 ADD PUSH1 0x0 SWAP1 SSTORE POP POP PUSH1 0x8 PUSH1 0x0 CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 DUP4 SWAP1 DUP1 PUSH1 0x1 DUP2 SLOAD ADD DUP1 DUP3 SSTORE DUP1 SWAP2 POP POP PUSH1 0x1 SWAP1 SUB SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 ADD PUSH1 0x0 SWAP1 SWAP2 SWAP1 SWAP2 SWAP1 SWAP2 POP SSTORE PUSH1 0x2 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH4 0x23B872DD ADDRESS CALLER DUP6 PUSH1 0x40 MLOAD DUP5 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x8C3 SWAP4 SWAP3 SWAP2 SWAP1 PUSH2 0x1364 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH1 0x0 DUP8 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0x8DD JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS CALL ISZERO DUP1 ISZERO PUSH2 0x8F1 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x0 PUSH2 0x900 DUP3 PUSH2 0xDE1 JUMP JUMPDEST SWAP1 POP PUSH1 0x3 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH4 0xA9059CBB CALLER DUP4 PUSH1 0x40 MLOAD DUP4 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x95F SWAP3 SWAP2 SWAP1 PUSH2 0x15DB JUMP JUMPDEST PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH1 0x0 DUP8 GAS CALL ISZERO DUP1 ISZERO PUSH2 0x97E JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x9A2 SWAP2 SWAP1 PUSH2 0x1630 JUMP JUMPDEST POP CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0xF74C9F1985016FF6AA83C3FD81E31D0BE3B194F205AE5E1B57F5BD74AD28E4CF DUP5 DUP5 TIMESTAMP DUP6 PUSH1 0x40 MLOAD PUSH2 0x9EF SWAP5 SWAP4 SWAP3 SWAP2 SWAP1 PUSH2 0x165D JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG2 POP POP POP POP JUMP JUMPDEST PUSH1 0x60 PUSH1 0x0 PUSH1 0x7 PUSH1 0x0 DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 DUP1 SLOAD DUP1 PUSH1 0x20 MUL PUSH1 0x20 ADD PUSH1 0x40 MLOAD SWAP1 DUP2 ADD PUSH1 0x40 MSTORE DUP1 SWAP3 SWAP2 SWAP1 DUP2 DUP2 MSTORE PUSH1 0x20 ADD DUP3 DUP1 SLOAD DUP1 ISZERO PUSH2 0xA8A JUMPI PUSH1 0x20 MUL DUP3 ADD SWAP2 SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 JUMPDEST DUP2 SLOAD DUP2 MSTORE PUSH1 0x20 ADD SWAP1 PUSH1 0x1 ADD SWAP1 DUP1 DUP4 GT PUSH2 0xA76 JUMPI JUMPDEST POP POP POP POP POP SWAP1 POP DUP1 SWAP2 POP POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x6 PUSH1 0x20 MSTORE DUP1 PUSH1 0x0 MSTORE PUSH1 0x40 PUSH1 0x0 KECCAK256 PUSH1 0x0 SWAP2 POP SWAP1 POP DUP1 PUSH1 0x0 ADD SLOAD SWAP1 DUP1 PUSH1 0x1 ADD PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 DUP1 PUSH1 0x2 ADD SLOAD SWAP1 DUP1 PUSH1 0x3 ADD SLOAD SWAP1 DUP1 PUSH1 0x4 ADD SLOAD SWAP1 POP DUP6 JUMP JUMPDEST PUSH2 0xB21 PUSH2 0xC9F JUMP JUMPDEST PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0xB90 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xB87 SWAP1 PUSH2 0x1714 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0xB99 DUP2 PUSH2 0xD1D JUMP JUMPDEST POP JUMP JUMPDEST PUSH1 0x3 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 SWAP1 POP JUMPDEST PUSH1 0x8 PUSH1 0x0 DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 DUP1 SLOAD SWAP1 POP DUP2 LT ISZERO PUSH2 0xC93 JUMPI DUP4 PUSH1 0x8 PUSH1 0x0 DUP6 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 DUP3 DUP2 SLOAD DUP2 LT PUSH2 0xC66 JUMPI PUSH2 0xC65 PUSH2 0x1734 JUMP JUMPDEST JUMPDEST SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 ADD SLOAD SUB PUSH2 0xC80 JUMPI PUSH1 0x1 SWAP2 POP POP PUSH2 0xC99 JUMP JUMPDEST DUP1 DUP1 PUSH2 0xC8B SWAP1 PUSH2 0x13CA JUMP JUMPDEST SWAP2 POP POP PUSH2 0xBCA JUMP JUMPDEST POP PUSH1 0x0 SWAP1 POP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH2 0xCA7 PUSH2 0xE24 JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH2 0xCC5 PUSH2 0xA9A JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ PUSH2 0xD1B JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xD12 SWAP1 PUSH2 0x17AF JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 POP DUP2 PUSH1 0x0 DUP1 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0x8BE0079C531659141344CD1FD0A4F28419497F9722A3DAAFE3B4186F6B6457E0 PUSH1 0x40 MLOAD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x7 DUP3 SUB PUSH2 0xDF5 JUMPI PUSH2 0x3E8 SWAP1 POP PUSH2 0xE1F JUMP JUMPDEST PUSH1 0xE DUP3 SUB PUSH2 0xE07 JUMPI PUSH2 0xBB8 SWAP1 POP PUSH2 0xE1F JUMP JUMPDEST PUSH1 0x1E DUP3 SUB PUSH2 0xE19 JUMPI PUSH2 0x1388 SWAP1 POP PUSH2 0xE1F JUMP JUMPDEST PUSH2 0x2710 SWAP1 POP JUMPDEST SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 CALLER SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x0 DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0xE3F DUP2 PUSH2 0xE2C JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0xE5A PUSH1 0x0 DUP4 ADD DUP5 PUSH2 0xE36 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP3 AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0xE90 DUP3 PUSH2 0xE65 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0xEA0 DUP2 PUSH2 0xE85 JUMP JUMPDEST DUP2 EQ PUSH2 0xEAB JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH1 0x0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0xEBD DUP2 PUSH2 0xE97 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH2 0xECC DUP2 PUSH2 0xE2C JUMP JUMPDEST DUP2 EQ PUSH2 0xED7 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH1 0x0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0xEE9 DUP2 PUSH2 0xEC3 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0xF06 JUMPI PUSH2 0xF05 PUSH2 0xE60 JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0xF14 DUP6 DUP3 DUP7 ADD PUSH2 0xEAE JUMP JUMPDEST SWAP3 POP POP PUSH1 0x20 PUSH2 0xF25 DUP6 DUP3 DUP7 ADD PUSH2 0xEDA JUMP JUMPDEST SWAP2 POP POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0xF46 JUMPI PUSH2 0xF45 PUSH2 0xE60 JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0xF54 DUP6 DUP3 DUP7 ADD PUSH2 0xEDA JUMP JUMPDEST SWAP3 POP POP PUSH1 0x20 PUSH2 0xF65 DUP6 DUP3 DUP7 ADD PUSH2 0xEDA JUMP JUMPDEST SWAP2 POP POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0xF94 PUSH2 0xF8F PUSH2 0xF8A DUP5 PUSH2 0xE65 JUMP JUMPDEST PUSH2 0xF6F JUMP JUMPDEST PUSH2 0xE65 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0xFA6 DUP3 PUSH2 0xF79 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0xFB8 DUP3 PUSH2 0xF9B JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0xFC8 DUP2 PUSH2 0xFAD JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0xFE3 PUSH1 0x0 DUP4 ADD DUP5 PUSH2 0xFBF JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 PUSH1 0x60 DUP5 DUP7 SUB SLT ISZERO PUSH2 0x1002 JUMPI PUSH2 0x1001 PUSH2 0xE60 JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0x1010 DUP7 DUP3 DUP8 ADD PUSH2 0xEDA JUMP JUMPDEST SWAP4 POP POP PUSH1 0x20 PUSH2 0x1021 DUP7 DUP3 DUP8 ADD PUSH2 0xEDA JUMP JUMPDEST SWAP3 POP POP PUSH1 0x40 PUSH2 0x1032 DUP7 DUP3 DUP8 ADD PUSH2 0xEDA JUMP JUMPDEST SWAP2 POP POP SWAP3 POP SWAP3 POP SWAP3 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x1052 JUMPI PUSH2 0x1051 PUSH2 0xE60 JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0x1060 DUP5 DUP3 DUP6 ADD PUSH2 0xEAE JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 MLOAD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP3 DUP3 MSTORE PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 SWAP1 POP PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x109E DUP2 PUSH2 0xE2C JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x10B0 DUP4 DUP4 PUSH2 0x1095 JUMP JUMPDEST PUSH1 0x20 DUP4 ADD SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x10D4 DUP3 PUSH2 0x1069 JUMP JUMPDEST PUSH2 0x10DE DUP2 DUP6 PUSH2 0x1074 JUMP JUMPDEST SWAP4 POP PUSH2 0x10E9 DUP4 PUSH2 0x1085 JUMP JUMPDEST DUP1 PUSH1 0x0 JUMPDEST DUP4 DUP2 LT ISZERO PUSH2 0x111A JUMPI DUP2 MLOAD PUSH2 0x1101 DUP9 DUP3 PUSH2 0x10A4 JUMP JUMPDEST SWAP8 POP PUSH2 0x110C DUP4 PUSH2 0x10BC JUMP JUMPDEST SWAP3 POP POP PUSH1 0x1 DUP2 ADD SWAP1 POP PUSH2 0x10ED JUMP JUMPDEST POP DUP6 SWAP4 POP POP POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x1141 DUP2 DUP5 PUSH2 0x10C9 JUMP JUMPDEST SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH2 0x1152 DUP2 PUSH2 0xE85 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x116D PUSH1 0x0 DUP4 ADD DUP5 PUSH2 0x1149 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x1189 JUMPI PUSH2 0x1188 PUSH2 0xE60 JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0x1197 DUP5 DUP3 DUP6 ADD PUSH2 0xEDA JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0xA0 DUP3 ADD SWAP1 POP PUSH2 0x11B5 PUSH1 0x0 DUP4 ADD DUP9 PUSH2 0xE36 JUMP JUMPDEST PUSH2 0x11C2 PUSH1 0x20 DUP4 ADD DUP8 PUSH2 0x1149 JUMP JUMPDEST PUSH2 0x11CF PUSH1 0x40 DUP4 ADD DUP7 PUSH2 0xE36 JUMP JUMPDEST PUSH2 0x11DC PUSH1 0x60 DUP4 ADD DUP6 PUSH2 0xE36 JUMP JUMPDEST PUSH2 0x11E9 PUSH1 0x80 DUP4 ADD DUP5 PUSH2 0xE36 JUMP JUMPDEST SWAP7 SWAP6 POP POP POP POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x11FE DUP3 PUSH2 0xF9B JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x120E DUP2 PUSH2 0x11F3 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x1229 PUSH1 0x0 DUP4 ADD DUP5 PUSH2 0x1205 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x1246 JUMPI PUSH2 0x1245 PUSH2 0xE60 JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0x1254 DUP6 DUP3 DUP7 ADD PUSH2 0xEDA JUMP JUMPDEST SWAP3 POP POP PUSH1 0x20 PUSH2 0x1265 DUP6 DUP3 DUP7 ADD PUSH2 0xEAE JUMP JUMPDEST SWAP2 POP POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP2 ISZERO ISZERO SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x1284 DUP2 PUSH2 0x126F JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x129F PUSH1 0x0 DUP4 ADD DUP5 PUSH2 0x127B JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 MLOAD SWAP1 POP PUSH2 0x12B4 DUP2 PUSH2 0xE97 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x12D0 JUMPI PUSH2 0x12CF PUSH2 0xE60 JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0x12DE DUP5 DUP3 DUP6 ADD PUSH2 0x12A5 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP3 DUP3 MSTORE PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH32 0x43616E2774207374616B65206E667420796F7520646F6E2774206F776E210000 PUSH1 0x0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x132E PUSH1 0x1E DUP4 PUSH2 0x12E7 JUMP JUMPDEST SWAP2 POP PUSH2 0x1339 DUP3 PUSH2 0x12F8 JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x135D DUP2 PUSH2 0x1321 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x60 DUP3 ADD SWAP1 POP PUSH2 0x1379 PUSH1 0x0 DUP4 ADD DUP7 PUSH2 0x1149 JUMP JUMPDEST PUSH2 0x1386 PUSH1 0x20 DUP4 ADD DUP6 PUSH2 0x1149 JUMP JUMPDEST PUSH2 0x1393 PUSH1 0x40 DUP4 ADD DUP5 PUSH2 0xE36 JUMP JUMPDEST SWAP5 SWAP4 POP POP POP POP JUMP JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x11 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x0 PUSH2 0x13D5 DUP3 PUSH2 0xE2C JUMP JUMPDEST SWAP2 POP PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP3 SUB PUSH2 0x1407 JUMPI PUSH2 0x1406 PUSH2 0x139B JUMP JUMPDEST JUMPDEST PUSH1 0x1 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x60 DUP3 ADD SWAP1 POP PUSH2 0x1427 PUSH1 0x0 DUP4 ADD DUP7 PUSH2 0xE36 JUMP JUMPDEST PUSH2 0x1434 PUSH1 0x20 DUP4 ADD DUP6 PUSH2 0xE36 JUMP JUMPDEST PUSH2 0x1441 PUSH1 0x40 DUP4 ADD DUP5 PUSH2 0xE36 JUMP JUMPDEST SWAP5 SWAP4 POP POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x1454 DUP3 PUSH2 0xE2C JUMP JUMPDEST SWAP2 POP PUSH2 0x145F DUP4 PUSH2 0xE2C JUMP JUMPDEST SWAP3 POP DUP3 DUP3 SUB SWAP1 POP DUP2 DUP2 GT ISZERO PUSH2 0x1477 JUMPI PUSH2 0x1476 PUSH2 0x139B JUMP JUMPDEST JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x12 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x0 PUSH2 0x14B7 DUP3 PUSH2 0xE2C JUMP JUMPDEST SWAP2 POP PUSH2 0x14C2 DUP4 PUSH2 0xE2C JUMP JUMPDEST SWAP3 POP DUP3 PUSH2 0x14D2 JUMPI PUSH2 0x14D1 PUSH2 0x147D JUMP JUMPDEST JUMPDEST DUP3 DUP3 DIV SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH32 0x5374616B696E6720706F6F6C206E6F7420656E64656420796574212121210000 PUSH1 0x0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x1513 PUSH1 0x1E DUP4 PUSH2 0x12E7 JUMP JUMPDEST SWAP2 POP PUSH2 0x151E DUP3 PUSH2 0x14DD JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x1542 DUP2 PUSH2 0x1506 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x596F7520617265206E6F74206F776E6572206F662074686973204E4654207374 PUSH1 0x0 DUP3 ADD MSTORE PUSH32 0x616B696E67000000000000000000000000000000000000000000000000000000 PUSH1 0x20 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x15A5 PUSH1 0x25 DUP4 PUSH2 0x12E7 JUMP JUMPDEST SWAP2 POP PUSH2 0x15B0 DUP3 PUSH2 0x1549 JUMP JUMPDEST PUSH1 0x40 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x15D4 DUP2 PUSH2 0x1598 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x40 DUP3 ADD SWAP1 POP PUSH2 0x15F0 PUSH1 0x0 DUP4 ADD DUP6 PUSH2 0x1149 JUMP JUMPDEST PUSH2 0x15FD PUSH1 0x20 DUP4 ADD DUP5 PUSH2 0xE36 JUMP JUMPDEST SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH2 0x160D DUP2 PUSH2 0x126F JUMP JUMPDEST DUP2 EQ PUSH2 0x1618 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH1 0x0 DUP2 MLOAD SWAP1 POP PUSH2 0x162A DUP2 PUSH2 0x1604 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x1646 JUMPI PUSH2 0x1645 PUSH2 0xE60 JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0x1654 DUP5 DUP3 DUP6 ADD PUSH2 0x161B JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x80 DUP3 ADD SWAP1 POP PUSH2 0x1672 PUSH1 0x0 DUP4 ADD DUP8 PUSH2 0xE36 JUMP JUMPDEST PUSH2 0x167F PUSH1 0x20 DUP4 ADD DUP7 PUSH2 0xE36 JUMP JUMPDEST PUSH2 0x168C PUSH1 0x40 DUP4 ADD DUP6 PUSH2 0xE36 JUMP JUMPDEST PUSH2 0x1699 PUSH1 0x60 DUP4 ADD DUP5 PUSH2 0xE36 JUMP JUMPDEST SWAP6 SWAP5 POP POP POP POP POP JUMP JUMPDEST PUSH32 0x4F776E61626C653A206E6577206F776E657220697320746865207A65726F2061 PUSH1 0x0 DUP3 ADD MSTORE PUSH32 0x6464726573730000000000000000000000000000000000000000000000000000 PUSH1 0x20 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x16FE PUSH1 0x26 DUP4 PUSH2 0x12E7 JUMP JUMPDEST SWAP2 POP PUSH2 0x1709 DUP3 PUSH2 0x16A2 JUMP JUMPDEST PUSH1 0x40 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x172D DUP2 PUSH2 0x16F1 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x32 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH32 0x4F776E61626C653A2063616C6C6572206973206E6F7420746865206F776E6572 PUSH1 0x0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x1799 PUSH1 0x20 DUP4 PUSH2 0x12E7 JUMP JUMPDEST SWAP2 POP PUSH2 0x17A4 DUP3 PUSH2 0x1763 JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x17C8 DUP2 PUSH2 0x178C JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 0xF7 PUSH7 0xF723A34992FF41 MUL 0x5C 0xC4 SIGNEXTEND BALANCE DIV SWAP7 0x2B 0xD1 NOT 0xD7 PUSH10 0x3A60F8AA526B3BA44C1C 0xAC PUSH5 0x736F6C6343 STOP ADDMOD SLT STOP CALLER ",
							"sourceMap": "502:3461:9:-:0;;;719:1;696:24;;1104:157;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;936:32:0;955:12;:10;;;:12;;:::i;:::-;936:18;;;:32;;:::i;:::-;1716:1:1;1821:7;:22;;;;1192:12:9;1171:11;;:34;;;;;;;;;;;;;;;;;;1239:14;1215:13;;:39;;;;;;;;;;;;;;;;;;1104:157;;502:3461;;640:96:7;693:7;719:10;712:17;;640:96;:::o;2433:187:0:-;2506:16;2525:6;;;;;;;;;;;2506:25;;2550:8;2541:6;;:17;;;;;;;;;;;;;;;;;;2604:8;2573:40;;2594:8;2573:40;;;;;;;;;;;;2496:124;2433:187;:::o;88:117:10:-;197:1;194;187:12;334:126;371:7;411:42;404:5;400:54;389:65;;334:126;;;:::o;466:96::-;503:7;532:24;550:5;532:24;:::i;:::-;521:35;;466:96;;;:::o;568:122::-;641:24;659:5;641:24;:::i;:::-;634:5;631:35;621:63;;680:1;677;670:12;621:63;568:122;:::o;696:143::-;753:5;784:6;778:13;769:22;;800:33;827:5;800:33;:::i;:::-;696:143;;;;:::o;845:507::-;924:6;932;981:2;969:9;960:7;956:23;952:32;949:119;;;987:79;;:::i;:::-;949:119;1107:1;1132:64;1188:7;1179:6;1168:9;1164:22;1132:64;:::i;:::-;1122:74;;1078:128;1245:2;1271:64;1327:7;1318:6;1307:9;1303:22;1271:64;:::i;:::-;1261:74;;1216:129;845:507;;;;;:::o;502:3461:9:-;;;;;;;"
						},
						"deployedBytecode": {
							"functionDebugData": {
								"@NFTCollection_1055": {
									"entryPoint": 1616,
									"id": 1055,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@_checkOwner_54": {
									"entryPoint": 3231,
									"id": 54,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@_msgSender_1019": {
									"entryPoint": 3620,
									"id": 1019,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"@_transferOwnership_111": {
									"entryPoint": 3357,
									"id": 111,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"@calculateRewardPool_1168": {
									"entryPoint": 3553,
									"id": 1168,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"@checkIfAlreadyUnstaked_1385": {
									"entryPoint": 3010,
									"id": 1385,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"@index_1061": {
									"entryPoint": 670,
									"id": 1061,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@owner_40": {
									"entryPoint": 2714,
									"id": 40,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"@renounceOwnership_68": {
									"entryPoint": 1596,
									"id": 68,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@rewardToken_1058": {
									"entryPoint": 2972,
									"id": 1058,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@stakeNFT_1234": {
									"entryPoint": 774,
									"id": 1234,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"@stakes_1083": {
									"entryPoint": 2755,
									"id": 1083,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@staking_details_1088": {
									"entryPoint": 725,
									"id": 1088,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@transferOwnership_91": {
									"entryPoint": 2841,
									"id": 91,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"@unStakeNFT_1325": {
									"entryPoint": 1654,
									"id": 1325,
									"parameterSlots": 3,
									"returnSlots": 0
								},
								"@unstaking_details_1093": {
									"entryPoint": 676,
									"id": 1093,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@userStakingList_1346": {
									"entryPoint": 2557,
									"id": 1346,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_decode_t_address": {
									"entryPoint": 3758,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_t_address_fromMemory": {
									"entryPoint": 4773,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_t_bool_fromMemory": {
									"entryPoint": 5659,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_t_uint256": {
									"entryPoint": 3802,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_tuple_t_address": {
									"entryPoint": 4156,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_tuple_t_address_fromMemory": {
									"entryPoint": 4794,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_tuple_t_addresst_uint256": {
									"entryPoint": 3823,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 2
								},
								"abi_decode_tuple_t_bool_fromMemory": {
									"entryPoint": 5680,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_tuple_t_uint256": {
									"entryPoint": 4467,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_tuple_t_uint256t_address": {
									"entryPoint": 4655,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 2
								},
								"abi_decode_tuple_t_uint256t_uint256": {
									"entryPoint": 3887,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 2
								},
								"abi_decode_tuple_t_uint256t_uint256t_uint256": {
									"entryPoint": 4073,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 3
								},
								"abi_encodeUpdatedPos_t_uint256_to_t_uint256": {
									"entryPoint": 4260,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_t_address_to_t_address_fromStack": {
									"entryPoint": 4425,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"abi_encode_t_array$_t_uint256_$dyn_memory_ptr_to_t_array$_t_uint256_$dyn_memory_ptr_fromStack": {
									"entryPoint": 4297,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_t_bool_to_t_bool_fromStack": {
									"entryPoint": 4731,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"abi_encode_t_contract$_IERC20_$244_to_t_address_fromStack": {
									"entryPoint": 4613,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"abi_encode_t_contract$_IERC721_$677_to_t_address_fromStack": {
									"entryPoint": 4031,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"abi_encode_t_stringliteral_1624d4f25969ee526147bd8655de287c38135e6ace26a92631ce497b2ca81bbe_to_t_string_memory_ptr_fromStack": {
									"entryPoint": 4897,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_t_stringliteral_245f15ff17f551913a7a18385165551503906a406f905ac1c2437281a7cd0cfe_to_t_string_memory_ptr_fromStack": {
									"entryPoint": 5873,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_t_stringliteral_2c264ac290bec70a05ed24874b7a508841480fcc00576c7986fac4268cbefe0e_to_t_string_memory_ptr_fromStack": {
									"entryPoint": 5382,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_t_stringliteral_9924ebdf1add33d25d4ef888e16131f0a5687b0580a36c21b5c301a6c462effe_to_t_string_memory_ptr_fromStack": {
									"entryPoint": 6028,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_t_stringliteral_e15a9850692d6708934a23063a6ddc95798c196bc7427dd1b63298ad85e9753c_to_t_string_memory_ptr_fromStack": {
									"entryPoint": 5528,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_t_uint256_to_t_uint256": {
									"entryPoint": 4245,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"abi_encode_t_uint256_to_t_uint256_fromStack": {
									"entryPoint": 3638,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"abi_encode_tuple_t_address__to_t_address__fromStack_reversed": {
									"entryPoint": 4440,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_address_t_address_t_uint256__to_t_address_t_address_t_uint256__fromStack_reversed": {
									"entryPoint": 4964,
									"id": null,
									"parameterSlots": 4,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_address_t_uint256__to_t_address_t_uint256__fromStack_reversed": {
									"entryPoint": 5595,
									"id": null,
									"parameterSlots": 3,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_array$_t_uint256_$dyn_memory_ptr__to_t_array$_t_uint256_$dyn_memory_ptr__fromStack_reversed": {
									"entryPoint": 4391,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_bool__to_t_bool__fromStack_reversed": {
									"entryPoint": 4746,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_contract$_IERC20_$244__to_t_address__fromStack_reversed": {
									"entryPoint": 4628,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_contract$_IERC721_$677__to_t_address__fromStack_reversed": {
									"entryPoint": 4046,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_1624d4f25969ee526147bd8655de287c38135e6ace26a92631ce497b2ca81bbe__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": 4932,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_245f15ff17f551913a7a18385165551503906a406f905ac1c2437281a7cd0cfe__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": 5908,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_2c264ac290bec70a05ed24874b7a508841480fcc00576c7986fac4268cbefe0e__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": 5417,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_9924ebdf1add33d25d4ef888e16131f0a5687b0580a36c21b5c301a6c462effe__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": 6063,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_e15a9850692d6708934a23063a6ddc95798c196bc7427dd1b63298ad85e9753c__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": 5563,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed": {
									"entryPoint": 3653,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_uint256_t_address_t_uint256_t_uint256_t_uint256__to_t_uint256_t_address_t_uint256_t_uint256_t_uint256__fromStack_reversed": {
									"entryPoint": 4512,
									"id": null,
									"parameterSlots": 6,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_uint256_t_uint256_t_uint256__to_t_uint256_t_uint256_t_uint256__fromStack_reversed": {
									"entryPoint": 5138,
									"id": null,
									"parameterSlots": 4,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_uint256_t_uint256_t_uint256_t_uint256__to_t_uint256_t_uint256_t_uint256_t_uint256__fromStack_reversed": {
									"entryPoint": 5725,
									"id": null,
									"parameterSlots": 5,
									"returnSlots": 1
								},
								"allocate_unbounded": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"array_dataslot_t_array$_t_uint256_$dyn_memory_ptr": {
									"entryPoint": 4229,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"array_length_t_array$_t_uint256_$dyn_memory_ptr": {
									"entryPoint": 4201,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"array_nextElement_t_array$_t_uint256_$dyn_memory_ptr": {
									"entryPoint": 4284,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"array_storeLengthForEncoding_t_array$_t_uint256_$dyn_memory_ptr_fromStack": {
									"entryPoint": 4212,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"array_storeLengthForEncoding_t_string_memory_ptr_fromStack": {
									"entryPoint": 4839,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"checked_div_t_uint256": {
									"entryPoint": 5292,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"checked_sub_t_uint256": {
									"entryPoint": 5193,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"cleanup_t_address": {
									"entryPoint": 3717,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"cleanup_t_bool": {
									"entryPoint": 4719,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"cleanup_t_uint160": {
									"entryPoint": 3685,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"cleanup_t_uint256": {
									"entryPoint": 3628,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"convert_t_contract$_IERC20_$244_to_t_address": {
									"entryPoint": 4595,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"convert_t_contract$_IERC721_$677_to_t_address": {
									"entryPoint": 4013,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"convert_t_uint160_to_t_address": {
									"entryPoint": 3995,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"convert_t_uint160_to_t_uint160": {
									"entryPoint": 3961,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"identity": {
									"entryPoint": 3951,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"increment_t_uint256": {
									"entryPoint": 5066,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"panic_error_0x11": {
									"entryPoint": 5019,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"panic_error_0x12": {
									"entryPoint": 5245,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"panic_error_0x32": {
									"entryPoint": 5940,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b": {
									"entryPoint": 3680,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"store_literal_in_memory_1624d4f25969ee526147bd8655de287c38135e6ace26a92631ce497b2ca81bbe": {
									"entryPoint": 4856,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"store_literal_in_memory_245f15ff17f551913a7a18385165551503906a406f905ac1c2437281a7cd0cfe": {
									"entryPoint": 5794,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"store_literal_in_memory_2c264ac290bec70a05ed24874b7a508841480fcc00576c7986fac4268cbefe0e": {
									"entryPoint": 5341,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"store_literal_in_memory_9924ebdf1add33d25d4ef888e16131f0a5687b0580a36c21b5c301a6c462effe": {
									"entryPoint": 5987,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"store_literal_in_memory_e15a9850692d6708934a23063a6ddc95798c196bc7427dd1b63298ad85e9753c": {
									"entryPoint": 5449,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"validator_revert_t_address": {
									"entryPoint": 3735,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"validator_revert_t_bool": {
									"entryPoint": 5636,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"validator_revert_t_uint256": {
									"entryPoint": 3779,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								}
							},
							"generatedSources": [
								{
									"ast": {
										"nodeType": "YulBlock",
										"src": "0:18512:10",
										"statements": [
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "52:32:10",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "62:16:10",
															"value": {
																"name": "value",
																"nodeType": "YulIdentifier",
																"src": "73:5:10"
															},
															"variableNames": [
																{
																	"name": "cleaned",
																	"nodeType": "YulIdentifier",
																	"src": "62:7:10"
																}
															]
														}
													]
												},
												"name": "cleanup_t_uint256",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "34:5:10",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "cleaned",
														"nodeType": "YulTypedName",
														"src": "44:7:10",
														"type": ""
													}
												],
												"src": "7:77:10"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "155:53:10",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "172:3:10"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nodeType": "YulIdentifier",
																				"src": "195:5:10"
																			}
																		],
																		"functionName": {
																			"name": "cleanup_t_uint256",
																			"nodeType": "YulIdentifier",
																			"src": "177:17:10"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "177:24:10"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "165:6:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "165:37:10"
															},
															"nodeType": "YulExpressionStatement",
															"src": "165:37:10"
														}
													]
												},
												"name": "abi_encode_t_uint256_to_t_uint256_fromStack",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "143:5:10",
														"type": ""
													},
													{
														"name": "pos",
														"nodeType": "YulTypedName",
														"src": "150:3:10",
														"type": ""
													}
												],
												"src": "90:118:10"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "312:124:10",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "322:26:10",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "334:9:10"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "345:2:10",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "330:3:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "330:18:10"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "322:4:10"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value0",
																		"nodeType": "YulIdentifier",
																		"src": "402:6:10"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "415:9:10"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "426:1:10",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "411:3:10"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "411:17:10"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_uint256_to_t_uint256_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "358:43:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "358:71:10"
															},
															"nodeType": "YulExpressionStatement",
															"src": "358:71:10"
														}
													]
												},
												"name": "abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "284:9:10",
														"type": ""
													},
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "296:6:10",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "307:4:10",
														"type": ""
													}
												],
												"src": "214:222:10"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "482:35:10",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "492:19:10",
															"value": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "508:2:10",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nodeType": "YulIdentifier",
																	"src": "502:5:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "502:9:10"
															},
															"variableNames": [
																{
																	"name": "memPtr",
																	"nodeType": "YulIdentifier",
																	"src": "492:6:10"
																}
															]
														}
													]
												},
												"name": "allocate_unbounded",
												"nodeType": "YulFunctionDefinition",
												"returnVariables": [
													{
														"name": "memPtr",
														"nodeType": "YulTypedName",
														"src": "475:6:10",
														"type": ""
													}
												],
												"src": "442:75:10"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "612:28:10",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "629:1:10",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "632:1:10",
																		"type": "",
																		"value": "0"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nodeType": "YulIdentifier",
																	"src": "622:6:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "622:12:10"
															},
															"nodeType": "YulExpressionStatement",
															"src": "622:12:10"
														}
													]
												},
												"name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
												"nodeType": "YulFunctionDefinition",
												"src": "523:117:10"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "735:28:10",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "752:1:10",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "755:1:10",
																		"type": "",
																		"value": "0"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nodeType": "YulIdentifier",
																	"src": "745:6:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "745:12:10"
															},
															"nodeType": "YulExpressionStatement",
															"src": "745:12:10"
														}
													]
												},
												"name": "revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db",
												"nodeType": "YulFunctionDefinition",
												"src": "646:117:10"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "814:81:10",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "824:65:10",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nodeType": "YulIdentifier",
																		"src": "839:5:10"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "846:42:10",
																		"type": "",
																		"value": "0xffffffffffffffffffffffffffffffffffffffff"
																	}
																],
																"functionName": {
																	"name": "and",
																	"nodeType": "YulIdentifier",
																	"src": "835:3:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "835:54:10"
															},
															"variableNames": [
																{
																	"name": "cleaned",
																	"nodeType": "YulIdentifier",
																	"src": "824:7:10"
																}
															]
														}
													]
												},
												"name": "cleanup_t_uint160",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "796:5:10",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "cleaned",
														"nodeType": "YulTypedName",
														"src": "806:7:10",
														"type": ""
													}
												],
												"src": "769:126:10"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "946:51:10",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "956:35:10",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nodeType": "YulIdentifier",
																		"src": "985:5:10"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint160",
																	"nodeType": "YulIdentifier",
																	"src": "967:17:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "967:24:10"
															},
															"variableNames": [
																{
																	"name": "cleaned",
																	"nodeType": "YulIdentifier",
																	"src": "956:7:10"
																}
															]
														}
													]
												},
												"name": "cleanup_t_address",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "928:5:10",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "cleaned",
														"nodeType": "YulTypedName",
														"src": "938:7:10",
														"type": ""
													}
												],
												"src": "901:96:10"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "1046:79:10",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "1103:16:10",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "1112:1:10",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "1115:1:10",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "1105:6:10"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "1105:12:10"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "1105:12:10"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nodeType": "YulIdentifier",
																				"src": "1069:5:10"
																			},
																			{
																				"arguments": [
																					{
																						"name": "value",
																						"nodeType": "YulIdentifier",
																						"src": "1094:5:10"
																					}
																				],
																				"functionName": {
																					"name": "cleanup_t_address",
																					"nodeType": "YulIdentifier",
																					"src": "1076:17:10"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "1076:24:10"
																			}
																		],
																		"functionName": {
																			"name": "eq",
																			"nodeType": "YulIdentifier",
																			"src": "1066:2:10"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "1066:35:10"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nodeType": "YulIdentifier",
																	"src": "1059:6:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "1059:43:10"
															},
															"nodeType": "YulIf",
															"src": "1056:63:10"
														}
													]
												},
												"name": "validator_revert_t_address",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "1039:5:10",
														"type": ""
													}
												],
												"src": "1003:122:10"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "1183:87:10",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "1193:29:10",
															"value": {
																"arguments": [
																	{
																		"name": "offset",
																		"nodeType": "YulIdentifier",
																		"src": "1215:6:10"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nodeType": "YulIdentifier",
																	"src": "1202:12:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "1202:20:10"
															},
															"variableNames": [
																{
																	"name": "value",
																	"nodeType": "YulIdentifier",
																	"src": "1193:5:10"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value",
																		"nodeType": "YulIdentifier",
																		"src": "1258:5:10"
																	}
																],
																"functionName": {
																	"name": "validator_revert_t_address",
																	"nodeType": "YulIdentifier",
																	"src": "1231:26:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "1231:33:10"
															},
															"nodeType": "YulExpressionStatement",
															"src": "1231:33:10"
														}
													]
												},
												"name": "abi_decode_t_address",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "offset",
														"nodeType": "YulTypedName",
														"src": "1161:6:10",
														"type": ""
													},
													{
														"name": "end",
														"nodeType": "YulTypedName",
														"src": "1169:3:10",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "1177:5:10",
														"type": ""
													}
												],
												"src": "1131:139:10"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "1319:79:10",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "1376:16:10",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "1385:1:10",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "1388:1:10",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "1378:6:10"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "1378:12:10"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "1378:12:10"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nodeType": "YulIdentifier",
																				"src": "1342:5:10"
																			},
																			{
																				"arguments": [
																					{
																						"name": "value",
																						"nodeType": "YulIdentifier",
																						"src": "1367:5:10"
																					}
																				],
																				"functionName": {
																					"name": "cleanup_t_uint256",
																					"nodeType": "YulIdentifier",
																					"src": "1349:17:10"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "1349:24:10"
																			}
																		],
																		"functionName": {
																			"name": "eq",
																			"nodeType": "YulIdentifier",
																			"src": "1339:2:10"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "1339:35:10"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nodeType": "YulIdentifier",
																	"src": "1332:6:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "1332:43:10"
															},
															"nodeType": "YulIf",
															"src": "1329:63:10"
														}
													]
												},
												"name": "validator_revert_t_uint256",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "1312:5:10",
														"type": ""
													}
												],
												"src": "1276:122:10"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "1456:87:10",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "1466:29:10",
															"value": {
																"arguments": [
																	{
																		"name": "offset",
																		"nodeType": "YulIdentifier",
																		"src": "1488:6:10"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nodeType": "YulIdentifier",
																	"src": "1475:12:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "1475:20:10"
															},
															"variableNames": [
																{
																	"name": "value",
																	"nodeType": "YulIdentifier",
																	"src": "1466:5:10"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value",
																		"nodeType": "YulIdentifier",
																		"src": "1531:5:10"
																	}
																],
																"functionName": {
																	"name": "validator_revert_t_uint256",
																	"nodeType": "YulIdentifier",
																	"src": "1504:26:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "1504:33:10"
															},
															"nodeType": "YulExpressionStatement",
															"src": "1504:33:10"
														}
													]
												},
												"name": "abi_decode_t_uint256",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "offset",
														"nodeType": "YulTypedName",
														"src": "1434:6:10",
														"type": ""
													},
													{
														"name": "end",
														"nodeType": "YulTypedName",
														"src": "1442:3:10",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "1450:5:10",
														"type": ""
													}
												],
												"src": "1404:139:10"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "1632:391:10",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "1678:83:10",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
																				"nodeType": "YulIdentifier",
																				"src": "1680:77:10"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "1680:79:10"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "1680:79:10"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "1653:7:10"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "1662:9:10"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "1649:3:10"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "1649:23:10"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "1674:2:10",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nodeType": "YulIdentifier",
																	"src": "1645:3:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "1645:32:10"
															},
															"nodeType": "YulIf",
															"src": "1642:119:10"
														},
														{
															"nodeType": "YulBlock",
															"src": "1771:117:10",
															"statements": [
																{
																	"nodeType": "YulVariableDeclaration",
																	"src": "1786:15:10",
																	"value": {
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "1800:1:10",
																		"type": "",
																		"value": "0"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nodeType": "YulTypedName",
																			"src": "1790:6:10",
																			"type": ""
																		}
																	]
																},
																{
																	"nodeType": "YulAssignment",
																	"src": "1815:63:10",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nodeType": "YulIdentifier",
																						"src": "1850:9:10"
																					},
																					{
																						"name": "offset",
																						"nodeType": "YulIdentifier",
																						"src": "1861:6:10"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "1846:3:10"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "1846:22:10"
																			},
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "1870:7:10"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_address",
																			"nodeType": "YulIdentifier",
																			"src": "1825:20:10"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "1825:53:10"
																	},
																	"variableNames": [
																		{
																			"name": "value0",
																			"nodeType": "YulIdentifier",
																			"src": "1815:6:10"
																		}
																	]
																}
															]
														},
														{
															"nodeType": "YulBlock",
															"src": "1898:118:10",
															"statements": [
																{
																	"nodeType": "YulVariableDeclaration",
																	"src": "1913:16:10",
																	"value": {
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "1927:2:10",
																		"type": "",
																		"value": "32"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nodeType": "YulTypedName",
																			"src": "1917:6:10",
																			"type": ""
																		}
																	]
																},
																{
																	"nodeType": "YulAssignment",
																	"src": "1943:63:10",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nodeType": "YulIdentifier",
																						"src": "1978:9:10"
																					},
																					{
																						"name": "offset",
																						"nodeType": "YulIdentifier",
																						"src": "1989:6:10"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "1974:3:10"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "1974:22:10"
																			},
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "1998:7:10"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_uint256",
																			"nodeType": "YulIdentifier",
																			"src": "1953:20:10"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "1953:53:10"
																	},
																	"variableNames": [
																		{
																			"name": "value1",
																			"nodeType": "YulIdentifier",
																			"src": "1943:6:10"
																		}
																	]
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_addresst_uint256",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "1594:9:10",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nodeType": "YulTypedName",
														"src": "1605:7:10",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "1617:6:10",
														"type": ""
													},
													{
														"name": "value1",
														"nodeType": "YulTypedName",
														"src": "1625:6:10",
														"type": ""
													}
												],
												"src": "1549:474:10"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "2112:391:10",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "2158:83:10",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
																				"nodeType": "YulIdentifier",
																				"src": "2160:77:10"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "2160:79:10"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "2160:79:10"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "2133:7:10"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "2142:9:10"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "2129:3:10"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "2129:23:10"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "2154:2:10",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nodeType": "YulIdentifier",
																	"src": "2125:3:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "2125:32:10"
															},
															"nodeType": "YulIf",
															"src": "2122:119:10"
														},
														{
															"nodeType": "YulBlock",
															"src": "2251:117:10",
															"statements": [
																{
																	"nodeType": "YulVariableDeclaration",
																	"src": "2266:15:10",
																	"value": {
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "2280:1:10",
																		"type": "",
																		"value": "0"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nodeType": "YulTypedName",
																			"src": "2270:6:10",
																			"type": ""
																		}
																	]
																},
																{
																	"nodeType": "YulAssignment",
																	"src": "2295:63:10",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nodeType": "YulIdentifier",
																						"src": "2330:9:10"
																					},
																					{
																						"name": "offset",
																						"nodeType": "YulIdentifier",
																						"src": "2341:6:10"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "2326:3:10"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "2326:22:10"
																			},
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "2350:7:10"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_uint256",
																			"nodeType": "YulIdentifier",
																			"src": "2305:20:10"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "2305:53:10"
																	},
																	"variableNames": [
																		{
																			"name": "value0",
																			"nodeType": "YulIdentifier",
																			"src": "2295:6:10"
																		}
																	]
																}
															]
														},
														{
															"nodeType": "YulBlock",
															"src": "2378:118:10",
															"statements": [
																{
																	"nodeType": "YulVariableDeclaration",
																	"src": "2393:16:10",
																	"value": {
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "2407:2:10",
																		"type": "",
																		"value": "32"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nodeType": "YulTypedName",
																			"src": "2397:6:10",
																			"type": ""
																		}
																	]
																},
																{
																	"nodeType": "YulAssignment",
																	"src": "2423:63:10",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nodeType": "YulIdentifier",
																						"src": "2458:9:10"
																					},
																					{
																						"name": "offset",
																						"nodeType": "YulIdentifier",
																						"src": "2469:6:10"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "2454:3:10"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "2454:22:10"
																			},
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "2478:7:10"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_uint256",
																			"nodeType": "YulIdentifier",
																			"src": "2433:20:10"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "2433:53:10"
																	},
																	"variableNames": [
																		{
																			"name": "value1",
																			"nodeType": "YulIdentifier",
																			"src": "2423:6:10"
																		}
																	]
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_uint256t_uint256",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "2074:9:10",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nodeType": "YulTypedName",
														"src": "2085:7:10",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "2097:6:10",
														"type": ""
													},
													{
														"name": "value1",
														"nodeType": "YulTypedName",
														"src": "2105:6:10",
														"type": ""
													}
												],
												"src": "2029:474:10"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "2541:28:10",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "2551:12:10",
															"value": {
																"name": "value",
																"nodeType": "YulIdentifier",
																"src": "2558:5:10"
															},
															"variableNames": [
																{
																	"name": "ret",
																	"nodeType": "YulIdentifier",
																	"src": "2551:3:10"
																}
															]
														}
													]
												},
												"name": "identity",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "2527:5:10",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "ret",
														"nodeType": "YulTypedName",
														"src": "2537:3:10",
														"type": ""
													}
												],
												"src": "2509:60:10"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "2635:82:10",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "2645:66:10",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "value",
																						"nodeType": "YulIdentifier",
																						"src": "2703:5:10"
																					}
																				],
																				"functionName": {
																					"name": "cleanup_t_uint160",
																					"nodeType": "YulIdentifier",
																					"src": "2685:17:10"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "2685:24:10"
																			}
																		],
																		"functionName": {
																			"name": "identity",
																			"nodeType": "YulIdentifier",
																			"src": "2676:8:10"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "2676:34:10"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint160",
																	"nodeType": "YulIdentifier",
																	"src": "2658:17:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "2658:53:10"
															},
															"variableNames": [
																{
																	"name": "converted",
																	"nodeType": "YulIdentifier",
																	"src": "2645:9:10"
																}
															]
														}
													]
												},
												"name": "convert_t_uint160_to_t_uint160",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "2615:5:10",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "converted",
														"nodeType": "YulTypedName",
														"src": "2625:9:10",
														"type": ""
													}
												],
												"src": "2575:142:10"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "2783:66:10",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "2793:50:10",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nodeType": "YulIdentifier",
																		"src": "2837:5:10"
																	}
																],
																"functionName": {
																	"name": "convert_t_uint160_to_t_uint160",
																	"nodeType": "YulIdentifier",
																	"src": "2806:30:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "2806:37:10"
															},
															"variableNames": [
																{
																	"name": "converted",
																	"nodeType": "YulIdentifier",
																	"src": "2793:9:10"
																}
															]
														}
													]
												},
												"name": "convert_t_uint160_to_t_address",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "2763:5:10",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "converted",
														"nodeType": "YulTypedName",
														"src": "2773:9:10",
														"type": ""
													}
												],
												"src": "2723:126:10"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "2930:66:10",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "2940:50:10",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nodeType": "YulIdentifier",
																		"src": "2984:5:10"
																	}
																],
																"functionName": {
																	"name": "convert_t_uint160_to_t_address",
																	"nodeType": "YulIdentifier",
																	"src": "2953:30:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "2953:37:10"
															},
															"variableNames": [
																{
																	"name": "converted",
																	"nodeType": "YulIdentifier",
																	"src": "2940:9:10"
																}
															]
														}
													]
												},
												"name": "convert_t_contract$_IERC721_$677_to_t_address",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "2910:5:10",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "converted",
														"nodeType": "YulTypedName",
														"src": "2920:9:10",
														"type": ""
													}
												],
												"src": "2855:141:10"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "3082:81:10",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "3099:3:10"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nodeType": "YulIdentifier",
																				"src": "3150:5:10"
																			}
																		],
																		"functionName": {
																			"name": "convert_t_contract$_IERC721_$677_to_t_address",
																			"nodeType": "YulIdentifier",
																			"src": "3104:45:10"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "3104:52:10"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "3092:6:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "3092:65:10"
															},
															"nodeType": "YulExpressionStatement",
															"src": "3092:65:10"
														}
													]
												},
												"name": "abi_encode_t_contract$_IERC721_$677_to_t_address_fromStack",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "3070:5:10",
														"type": ""
													},
													{
														"name": "pos",
														"nodeType": "YulTypedName",
														"src": "3077:3:10",
														"type": ""
													}
												],
												"src": "3002:161:10"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "3282:139:10",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "3292:26:10",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "3304:9:10"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "3315:2:10",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "3300:3:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "3300:18:10"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "3292:4:10"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value0",
																		"nodeType": "YulIdentifier",
																		"src": "3387:6:10"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "3400:9:10"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "3411:1:10",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "3396:3:10"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "3396:17:10"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_contract$_IERC721_$677_to_t_address_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "3328:58:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "3328:86:10"
															},
															"nodeType": "YulExpressionStatement",
															"src": "3328:86:10"
														}
													]
												},
												"name": "abi_encode_tuple_t_contract$_IERC721_$677__to_t_address__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "3254:9:10",
														"type": ""
													},
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "3266:6:10",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "3277:4:10",
														"type": ""
													}
												],
												"src": "3169:252:10"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "3527:519:10",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "3573:83:10",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
																				"nodeType": "YulIdentifier",
																				"src": "3575:77:10"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "3575:79:10"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "3575:79:10"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "3548:7:10"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "3557:9:10"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "3544:3:10"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "3544:23:10"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "3569:2:10",
																		"type": "",
																		"value": "96"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nodeType": "YulIdentifier",
																	"src": "3540:3:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "3540:32:10"
															},
															"nodeType": "YulIf",
															"src": "3537:119:10"
														},
														{
															"nodeType": "YulBlock",
															"src": "3666:117:10",
															"statements": [
																{
																	"nodeType": "YulVariableDeclaration",
																	"src": "3681:15:10",
																	"value": {
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "3695:1:10",
																		"type": "",
																		"value": "0"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nodeType": "YulTypedName",
																			"src": "3685:6:10",
																			"type": ""
																		}
																	]
																},
																{
																	"nodeType": "YulAssignment",
																	"src": "3710:63:10",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nodeType": "YulIdentifier",
																						"src": "3745:9:10"
																					},
																					{
																						"name": "offset",
																						"nodeType": "YulIdentifier",
																						"src": "3756:6:10"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "3741:3:10"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "3741:22:10"
																			},
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "3765:7:10"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_uint256",
																			"nodeType": "YulIdentifier",
																			"src": "3720:20:10"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "3720:53:10"
																	},
																	"variableNames": [
																		{
																			"name": "value0",
																			"nodeType": "YulIdentifier",
																			"src": "3710:6:10"
																		}
																	]
																}
															]
														},
														{
															"nodeType": "YulBlock",
															"src": "3793:118:10",
															"statements": [
																{
																	"nodeType": "YulVariableDeclaration",
																	"src": "3808:16:10",
																	"value": {
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "3822:2:10",
																		"type": "",
																		"value": "32"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nodeType": "YulTypedName",
																			"src": "3812:6:10",
																			"type": ""
																		}
																	]
																},
																{
																	"nodeType": "YulAssignment",
																	"src": "3838:63:10",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nodeType": "YulIdentifier",
																						"src": "3873:9:10"
																					},
																					{
																						"name": "offset",
																						"nodeType": "YulIdentifier",
																						"src": "3884:6:10"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "3869:3:10"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "3869:22:10"
																			},
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "3893:7:10"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_uint256",
																			"nodeType": "YulIdentifier",
																			"src": "3848:20:10"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "3848:53:10"
																	},
																	"variableNames": [
																		{
																			"name": "value1",
																			"nodeType": "YulIdentifier",
																			"src": "3838:6:10"
																		}
																	]
																}
															]
														},
														{
															"nodeType": "YulBlock",
															"src": "3921:118:10",
															"statements": [
																{
																	"nodeType": "YulVariableDeclaration",
																	"src": "3936:16:10",
																	"value": {
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "3950:2:10",
																		"type": "",
																		"value": "64"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nodeType": "YulTypedName",
																			"src": "3940:6:10",
																			"type": ""
																		}
																	]
																},
																{
																	"nodeType": "YulAssignment",
																	"src": "3966:63:10",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nodeType": "YulIdentifier",
																						"src": "4001:9:10"
																					},
																					{
																						"name": "offset",
																						"nodeType": "YulIdentifier",
																						"src": "4012:6:10"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "3997:3:10"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "3997:22:10"
																			},
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "4021:7:10"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_uint256",
																			"nodeType": "YulIdentifier",
																			"src": "3976:20:10"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "3976:53:10"
																	},
																	"variableNames": [
																		{
																			"name": "value2",
																			"nodeType": "YulIdentifier",
																			"src": "3966:6:10"
																		}
																	]
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_uint256t_uint256t_uint256",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "3481:9:10",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nodeType": "YulTypedName",
														"src": "3492:7:10",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "3504:6:10",
														"type": ""
													},
													{
														"name": "value1",
														"nodeType": "YulTypedName",
														"src": "3512:6:10",
														"type": ""
													},
													{
														"name": "value2",
														"nodeType": "YulTypedName",
														"src": "3520:6:10",
														"type": ""
													}
												],
												"src": "3427:619:10"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "4118:263:10",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "4164:83:10",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
																				"nodeType": "YulIdentifier",
																				"src": "4166:77:10"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "4166:79:10"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "4166:79:10"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "4139:7:10"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "4148:9:10"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "4135:3:10"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "4135:23:10"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "4160:2:10",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nodeType": "YulIdentifier",
																	"src": "4131:3:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "4131:32:10"
															},
															"nodeType": "YulIf",
															"src": "4128:119:10"
														},
														{
															"nodeType": "YulBlock",
															"src": "4257:117:10",
															"statements": [
																{
																	"nodeType": "YulVariableDeclaration",
																	"src": "4272:15:10",
																	"value": {
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "4286:1:10",
																		"type": "",
																		"value": "0"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nodeType": "YulTypedName",
																			"src": "4276:6:10",
																			"type": ""
																		}
																	]
																},
																{
																	"nodeType": "YulAssignment",
																	"src": "4301:63:10",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nodeType": "YulIdentifier",
																						"src": "4336:9:10"
																					},
																					{
																						"name": "offset",
																						"nodeType": "YulIdentifier",
																						"src": "4347:6:10"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "4332:3:10"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "4332:22:10"
																			},
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "4356:7:10"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_address",
																			"nodeType": "YulIdentifier",
																			"src": "4311:20:10"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "4311:53:10"
																	},
																	"variableNames": [
																		{
																			"name": "value0",
																			"nodeType": "YulIdentifier",
																			"src": "4301:6:10"
																		}
																	]
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_address",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "4088:9:10",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nodeType": "YulTypedName",
														"src": "4099:7:10",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "4111:6:10",
														"type": ""
													}
												],
												"src": "4052:329:10"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "4461:40:10",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "4472:22:10",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nodeType": "YulIdentifier",
																		"src": "4488:5:10"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nodeType": "YulIdentifier",
																	"src": "4482:5:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "4482:12:10"
															},
															"variableNames": [
																{
																	"name": "length",
																	"nodeType": "YulIdentifier",
																	"src": "4472:6:10"
																}
															]
														}
													]
												},
												"name": "array_length_t_array$_t_uint256_$dyn_memory_ptr",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "4444:5:10",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "length",
														"nodeType": "YulTypedName",
														"src": "4454:6:10",
														"type": ""
													}
												],
												"src": "4387:114:10"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "4618:73:10",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "4635:3:10"
																	},
																	{
																		"name": "length",
																		"nodeType": "YulIdentifier",
																		"src": "4640:6:10"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "4628:6:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "4628:19:10"
															},
															"nodeType": "YulExpressionStatement",
															"src": "4628:19:10"
														},
														{
															"nodeType": "YulAssignment",
															"src": "4656:29:10",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "4675:3:10"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "4680:4:10",
																		"type": "",
																		"value": "0x20"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "4671:3:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "4671:14:10"
															},
															"variableNames": [
																{
																	"name": "updated_pos",
																	"nodeType": "YulIdentifier",
																	"src": "4656:11:10"
																}
															]
														}
													]
												},
												"name": "array_storeLengthForEncoding_t_array$_t_uint256_$dyn_memory_ptr_fromStack",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "pos",
														"nodeType": "YulTypedName",
														"src": "4590:3:10",
														"type": ""
													},
													{
														"name": "length",
														"nodeType": "YulTypedName",
														"src": "4595:6:10",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "updated_pos",
														"nodeType": "YulTypedName",
														"src": "4606:11:10",
														"type": ""
													}
												],
												"src": "4507:184:10"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "4769:60:10",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "4779:11:10",
															"value": {
																"name": "ptr",
																"nodeType": "YulIdentifier",
																"src": "4787:3:10"
															},
															"variableNames": [
																{
																	"name": "data",
																	"nodeType": "YulIdentifier",
																	"src": "4779:4:10"
																}
															]
														},
														{
															"nodeType": "YulAssignment",
															"src": "4800:22:10",
															"value": {
																"arguments": [
																	{
																		"name": "ptr",
																		"nodeType": "YulIdentifier",
																		"src": "4812:3:10"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "4817:4:10",
																		"type": "",
																		"value": "0x20"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "4808:3:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "4808:14:10"
															},
															"variableNames": [
																{
																	"name": "data",
																	"nodeType": "YulIdentifier",
																	"src": "4800:4:10"
																}
															]
														}
													]
												},
												"name": "array_dataslot_t_array$_t_uint256_$dyn_memory_ptr",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "ptr",
														"nodeType": "YulTypedName",
														"src": "4756:3:10",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "data",
														"nodeType": "YulTypedName",
														"src": "4764:4:10",
														"type": ""
													}
												],
												"src": "4697:132:10"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "4890:53:10",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "4907:3:10"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nodeType": "YulIdentifier",
																				"src": "4930:5:10"
																			}
																		],
																		"functionName": {
																			"name": "cleanup_t_uint256",
																			"nodeType": "YulIdentifier",
																			"src": "4912:17:10"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "4912:24:10"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "4900:6:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "4900:37:10"
															},
															"nodeType": "YulExpressionStatement",
															"src": "4900:37:10"
														}
													]
												},
												"name": "abi_encode_t_uint256_to_t_uint256",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "4878:5:10",
														"type": ""
													},
													{
														"name": "pos",
														"nodeType": "YulTypedName",
														"src": "4885:3:10",
														"type": ""
													}
												],
												"src": "4835:108:10"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "5029:99:10",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value0",
																		"nodeType": "YulIdentifier",
																		"src": "5073:6:10"
																	},
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "5081:3:10"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_uint256_to_t_uint256",
																	"nodeType": "YulIdentifier",
																	"src": "5039:33:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "5039:46:10"
															},
															"nodeType": "YulExpressionStatement",
															"src": "5039:46:10"
														},
														{
															"nodeType": "YulAssignment",
															"src": "5094:28:10",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "5112:3:10"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "5117:4:10",
																		"type": "",
																		"value": "0x20"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "5108:3:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "5108:14:10"
															},
															"variableNames": [
																{
																	"name": "updatedPos",
																	"nodeType": "YulIdentifier",
																	"src": "5094:10:10"
																}
															]
														}
													]
												},
												"name": "abi_encodeUpdatedPos_t_uint256_to_t_uint256",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "5002:6:10",
														"type": ""
													},
													{
														"name": "pos",
														"nodeType": "YulTypedName",
														"src": "5010:3:10",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "updatedPos",
														"nodeType": "YulTypedName",
														"src": "5018:10:10",
														"type": ""
													}
												],
												"src": "4949:179:10"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "5209:38:10",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "5219:22:10",
															"value": {
																"arguments": [
																	{
																		"name": "ptr",
																		"nodeType": "YulIdentifier",
																		"src": "5231:3:10"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "5236:4:10",
																		"type": "",
																		"value": "0x20"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "5227:3:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "5227:14:10"
															},
															"variableNames": [
																{
																	"name": "next",
																	"nodeType": "YulIdentifier",
																	"src": "5219:4:10"
																}
															]
														}
													]
												},
												"name": "array_nextElement_t_array$_t_uint256_$dyn_memory_ptr",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "ptr",
														"nodeType": "YulTypedName",
														"src": "5196:3:10",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "next",
														"nodeType": "YulTypedName",
														"src": "5204:4:10",
														"type": ""
													}
												],
												"src": "5134:113:10"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "5407:608:10",
													"statements": [
														{
															"nodeType": "YulVariableDeclaration",
															"src": "5417:68:10",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nodeType": "YulIdentifier",
																		"src": "5479:5:10"
																	}
																],
																"functionName": {
																	"name": "array_length_t_array$_t_uint256_$dyn_memory_ptr",
																	"nodeType": "YulIdentifier",
																	"src": "5431:47:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "5431:54:10"
															},
															"variables": [
																{
																	"name": "length",
																	"nodeType": "YulTypedName",
																	"src": "5421:6:10",
																	"type": ""
																}
															]
														},
														{
															"nodeType": "YulAssignment",
															"src": "5494:93:10",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "5575:3:10"
																	},
																	{
																		"name": "length",
																		"nodeType": "YulIdentifier",
																		"src": "5580:6:10"
																	}
																],
																"functionName": {
																	"name": "array_storeLengthForEncoding_t_array$_t_uint256_$dyn_memory_ptr_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "5501:73:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "5501:86:10"
															},
															"variableNames": [
																{
																	"name": "pos",
																	"nodeType": "YulIdentifier",
																	"src": "5494:3:10"
																}
															]
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "5596:71:10",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nodeType": "YulIdentifier",
																		"src": "5661:5:10"
																	}
																],
																"functionName": {
																	"name": "array_dataslot_t_array$_t_uint256_$dyn_memory_ptr",
																	"nodeType": "YulIdentifier",
																	"src": "5611:49:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "5611:56:10"
															},
															"variables": [
																{
																	"name": "baseRef",
																	"nodeType": "YulTypedName",
																	"src": "5600:7:10",
																	"type": ""
																}
															]
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "5676:21:10",
															"value": {
																"name": "baseRef",
																"nodeType": "YulIdentifier",
																"src": "5690:7:10"
															},
															"variables": [
																{
																	"name": "srcPtr",
																	"nodeType": "YulTypedName",
																	"src": "5680:6:10",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "5766:224:10",
																"statements": [
																	{
																		"nodeType": "YulVariableDeclaration",
																		"src": "5780:34:10",
																		"value": {
																			"arguments": [
																				{
																					"name": "srcPtr",
																					"nodeType": "YulIdentifier",
																					"src": "5807:6:10"
																				}
																			],
																			"functionName": {
																				"name": "mload",
																				"nodeType": "YulIdentifier",
																				"src": "5801:5:10"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "5801:13:10"
																		},
																		"variables": [
																			{
																				"name": "elementValue0",
																				"nodeType": "YulTypedName",
																				"src": "5784:13:10",
																				"type": ""
																			}
																		]
																	},
																	{
																		"nodeType": "YulAssignment",
																		"src": "5827:70:10",
																		"value": {
																			"arguments": [
																				{
																					"name": "elementValue0",
																					"nodeType": "YulIdentifier",
																					"src": "5878:13:10"
																				},
																				{
																					"name": "pos",
																					"nodeType": "YulIdentifier",
																					"src": "5893:3:10"
																				}
																			],
																			"functionName": {
																				"name": "abi_encodeUpdatedPos_t_uint256_to_t_uint256",
																				"nodeType": "YulIdentifier",
																				"src": "5834:43:10"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "5834:63:10"
																		},
																		"variableNames": [
																			{
																				"name": "pos",
																				"nodeType": "YulIdentifier",
																				"src": "5827:3:10"
																			}
																		]
																	},
																	{
																		"nodeType": "YulAssignment",
																		"src": "5910:70:10",
																		"value": {
																			"arguments": [
																				{
																					"name": "srcPtr",
																					"nodeType": "YulIdentifier",
																					"src": "5973:6:10"
																				}
																			],
																			"functionName": {
																				"name": "array_nextElement_t_array$_t_uint256_$dyn_memory_ptr",
																				"nodeType": "YulIdentifier",
																				"src": "5920:52:10"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "5920:60:10"
																		},
																		"variableNames": [
																			{
																				"name": "srcPtr",
																				"nodeType": "YulIdentifier",
																				"src": "5910:6:10"
																			}
																		]
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "i",
																		"nodeType": "YulIdentifier",
																		"src": "5728:1:10"
																	},
																	{
																		"name": "length",
																		"nodeType": "YulIdentifier",
																		"src": "5731:6:10"
																	}
																],
																"functionName": {
																	"name": "lt",
																	"nodeType": "YulIdentifier",
																	"src": "5725:2:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "5725:13:10"
															},
															"nodeType": "YulForLoop",
															"post": {
																"nodeType": "YulBlock",
																"src": "5739:18:10",
																"statements": [
																	{
																		"nodeType": "YulAssignment",
																		"src": "5741:14:10",
																		"value": {
																			"arguments": [
																				{
																					"name": "i",
																					"nodeType": "YulIdentifier",
																					"src": "5750:1:10"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "5753:1:10",
																					"type": "",
																					"value": "1"
																				}
																			],
																			"functionName": {
																				"name": "add",
																				"nodeType": "YulIdentifier",
																				"src": "5746:3:10"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "5746:9:10"
																		},
																		"variableNames": [
																			{
																				"name": "i",
																				"nodeType": "YulIdentifier",
																				"src": "5741:1:10"
																			}
																		]
																	}
																]
															},
															"pre": {
																"nodeType": "YulBlock",
																"src": "5710:14:10",
																"statements": [
																	{
																		"nodeType": "YulVariableDeclaration",
																		"src": "5712:10:10",
																		"value": {
																			"kind": "number",
																			"nodeType": "YulLiteral",
																			"src": "5721:1:10",
																			"type": "",
																			"value": "0"
																		},
																		"variables": [
																			{
																				"name": "i",
																				"nodeType": "YulTypedName",
																				"src": "5716:1:10",
																				"type": ""
																			}
																		]
																	}
																]
															},
															"src": "5706:284:10"
														},
														{
															"nodeType": "YulAssignment",
															"src": "5999:10:10",
															"value": {
																"name": "pos",
																"nodeType": "YulIdentifier",
																"src": "6006:3:10"
															},
															"variableNames": [
																{
																	"name": "end",
																	"nodeType": "YulIdentifier",
																	"src": "5999:3:10"
																}
															]
														}
													]
												},
												"name": "abi_encode_t_array$_t_uint256_$dyn_memory_ptr_to_t_array$_t_uint256_$dyn_memory_ptr_fromStack",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "5386:5:10",
														"type": ""
													},
													{
														"name": "pos",
														"nodeType": "YulTypedName",
														"src": "5393:3:10",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "end",
														"nodeType": "YulTypedName",
														"src": "5402:3:10",
														"type": ""
													}
												],
												"src": "5283:732:10"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "6169:225:10",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "6179:26:10",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "6191:9:10"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "6202:2:10",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "6187:3:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "6187:18:10"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "6179:4:10"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "6226:9:10"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "6237:1:10",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "6222:3:10"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "6222:17:10"
																	},
																	{
																		"arguments": [
																			{
																				"name": "tail",
																				"nodeType": "YulIdentifier",
																				"src": "6245:4:10"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "6251:9:10"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "6241:3:10"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "6241:20:10"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "6215:6:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "6215:47:10"
															},
															"nodeType": "YulExpressionStatement",
															"src": "6215:47:10"
														},
														{
															"nodeType": "YulAssignment",
															"src": "6271:116:10",
															"value": {
																"arguments": [
																	{
																		"name": "value0",
																		"nodeType": "YulIdentifier",
																		"src": "6373:6:10"
																	},
																	{
																		"name": "tail",
																		"nodeType": "YulIdentifier",
																		"src": "6382:4:10"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_array$_t_uint256_$dyn_memory_ptr_to_t_array$_t_uint256_$dyn_memory_ptr_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "6279:93:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "6279:108:10"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "6271:4:10"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_array$_t_uint256_$dyn_memory_ptr__to_t_array$_t_uint256_$dyn_memory_ptr__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "6141:9:10",
														"type": ""
													},
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "6153:6:10",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "6164:4:10",
														"type": ""
													}
												],
												"src": "6021:373:10"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "6465:53:10",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "6482:3:10"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nodeType": "YulIdentifier",
																				"src": "6505:5:10"
																			}
																		],
																		"functionName": {
																			"name": "cleanup_t_address",
																			"nodeType": "YulIdentifier",
																			"src": "6487:17:10"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "6487:24:10"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "6475:6:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "6475:37:10"
															},
															"nodeType": "YulExpressionStatement",
															"src": "6475:37:10"
														}
													]
												},
												"name": "abi_encode_t_address_to_t_address_fromStack",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "6453:5:10",
														"type": ""
													},
													{
														"name": "pos",
														"nodeType": "YulTypedName",
														"src": "6460:3:10",
														"type": ""
													}
												],
												"src": "6400:118:10"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "6622:124:10",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "6632:26:10",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "6644:9:10"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "6655:2:10",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "6640:3:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "6640:18:10"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "6632:4:10"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value0",
																		"nodeType": "YulIdentifier",
																		"src": "6712:6:10"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "6725:9:10"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "6736:1:10",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "6721:3:10"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "6721:17:10"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_address_to_t_address_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "6668:43:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "6668:71:10"
															},
															"nodeType": "YulExpressionStatement",
															"src": "6668:71:10"
														}
													]
												},
												"name": "abi_encode_tuple_t_address__to_t_address__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "6594:9:10",
														"type": ""
													},
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "6606:6:10",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "6617:4:10",
														"type": ""
													}
												],
												"src": "6524:222:10"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "6818:263:10",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "6864:83:10",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
																				"nodeType": "YulIdentifier",
																				"src": "6866:77:10"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "6866:79:10"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "6866:79:10"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "6839:7:10"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "6848:9:10"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "6835:3:10"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "6835:23:10"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "6860:2:10",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nodeType": "YulIdentifier",
																	"src": "6831:3:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "6831:32:10"
															},
															"nodeType": "YulIf",
															"src": "6828:119:10"
														},
														{
															"nodeType": "YulBlock",
															"src": "6957:117:10",
															"statements": [
																{
																	"nodeType": "YulVariableDeclaration",
																	"src": "6972:15:10",
																	"value": {
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "6986:1:10",
																		"type": "",
																		"value": "0"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nodeType": "YulTypedName",
																			"src": "6976:6:10",
																			"type": ""
																		}
																	]
																},
																{
																	"nodeType": "YulAssignment",
																	"src": "7001:63:10",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nodeType": "YulIdentifier",
																						"src": "7036:9:10"
																					},
																					{
																						"name": "offset",
																						"nodeType": "YulIdentifier",
																						"src": "7047:6:10"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "7032:3:10"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "7032:22:10"
																			},
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "7056:7:10"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_uint256",
																			"nodeType": "YulIdentifier",
																			"src": "7011:20:10"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "7011:53:10"
																	},
																	"variableNames": [
																		{
																			"name": "value0",
																			"nodeType": "YulIdentifier",
																			"src": "7001:6:10"
																		}
																	]
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_uint256",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "6788:9:10",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nodeType": "YulTypedName",
														"src": "6799:7:10",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "6811:6:10",
														"type": ""
													}
												],
												"src": "6752:329:10"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "7297:454:10",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "7307:27:10",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "7319:9:10"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "7330:3:10",
																		"type": "",
																		"value": "160"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "7315:3:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "7315:19:10"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "7307:4:10"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value0",
																		"nodeType": "YulIdentifier",
																		"src": "7388:6:10"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "7401:9:10"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "7412:1:10",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "7397:3:10"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "7397:17:10"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_uint256_to_t_uint256_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "7344:43:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "7344:71:10"
															},
															"nodeType": "YulExpressionStatement",
															"src": "7344:71:10"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value1",
																		"nodeType": "YulIdentifier",
																		"src": "7469:6:10"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "7482:9:10"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "7493:2:10",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "7478:3:10"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "7478:18:10"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_address_to_t_address_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "7425:43:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "7425:72:10"
															},
															"nodeType": "YulExpressionStatement",
															"src": "7425:72:10"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value2",
																		"nodeType": "YulIdentifier",
																		"src": "7551:6:10"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "7564:9:10"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "7575:2:10",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "7560:3:10"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "7560:18:10"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_uint256_to_t_uint256_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "7507:43:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "7507:72:10"
															},
															"nodeType": "YulExpressionStatement",
															"src": "7507:72:10"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value3",
																		"nodeType": "YulIdentifier",
																		"src": "7633:6:10"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "7646:9:10"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "7657:2:10",
																				"type": "",
																				"value": "96"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "7642:3:10"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "7642:18:10"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_uint256_to_t_uint256_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "7589:43:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "7589:72:10"
															},
															"nodeType": "YulExpressionStatement",
															"src": "7589:72:10"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value4",
																		"nodeType": "YulIdentifier",
																		"src": "7715:6:10"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "7728:9:10"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "7739:3:10",
																				"type": "",
																				"value": "128"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "7724:3:10"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "7724:19:10"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_uint256_to_t_uint256_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "7671:43:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "7671:73:10"
															},
															"nodeType": "YulExpressionStatement",
															"src": "7671:73:10"
														}
													]
												},
												"name": "abi_encode_tuple_t_uint256_t_address_t_uint256_t_uint256_t_uint256__to_t_uint256_t_address_t_uint256_t_uint256_t_uint256__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "7237:9:10",
														"type": ""
													},
													{
														"name": "value4",
														"nodeType": "YulTypedName",
														"src": "7249:6:10",
														"type": ""
													},
													{
														"name": "value3",
														"nodeType": "YulTypedName",
														"src": "7257:6:10",
														"type": ""
													},
													{
														"name": "value2",
														"nodeType": "YulTypedName",
														"src": "7265:6:10",
														"type": ""
													},
													{
														"name": "value1",
														"nodeType": "YulTypedName",
														"src": "7273:6:10",
														"type": ""
													},
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "7281:6:10",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "7292:4:10",
														"type": ""
													}
												],
												"src": "7087:664:10"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "7831:66:10",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "7841:50:10",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nodeType": "YulIdentifier",
																		"src": "7885:5:10"
																	}
																],
																"functionName": {
																	"name": "convert_t_uint160_to_t_address",
																	"nodeType": "YulIdentifier",
																	"src": "7854:30:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "7854:37:10"
															},
															"variableNames": [
																{
																	"name": "converted",
																	"nodeType": "YulIdentifier",
																	"src": "7841:9:10"
																}
															]
														}
													]
												},
												"name": "convert_t_contract$_IERC20_$244_to_t_address",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "7811:5:10",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "converted",
														"nodeType": "YulTypedName",
														"src": "7821:9:10",
														"type": ""
													}
												],
												"src": "7757:140:10"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "7982:80:10",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "7999:3:10"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nodeType": "YulIdentifier",
																				"src": "8049:5:10"
																			}
																		],
																		"functionName": {
																			"name": "convert_t_contract$_IERC20_$244_to_t_address",
																			"nodeType": "YulIdentifier",
																			"src": "8004:44:10"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "8004:51:10"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "7992:6:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "7992:64:10"
															},
															"nodeType": "YulExpressionStatement",
															"src": "7992:64:10"
														}
													]
												},
												"name": "abi_encode_t_contract$_IERC20_$244_to_t_address_fromStack",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "7970:5:10",
														"type": ""
													},
													{
														"name": "pos",
														"nodeType": "YulTypedName",
														"src": "7977:3:10",
														"type": ""
													}
												],
												"src": "7903:159:10"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "8180:138:10",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "8190:26:10",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "8202:9:10"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "8213:2:10",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "8198:3:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "8198:18:10"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "8190:4:10"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value0",
																		"nodeType": "YulIdentifier",
																		"src": "8284:6:10"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "8297:9:10"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "8308:1:10",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "8293:3:10"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "8293:17:10"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_contract$_IERC20_$244_to_t_address_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "8226:57:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "8226:85:10"
															},
															"nodeType": "YulExpressionStatement",
															"src": "8226:85:10"
														}
													]
												},
												"name": "abi_encode_tuple_t_contract$_IERC20_$244__to_t_address__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "8152:9:10",
														"type": ""
													},
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "8164:6:10",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "8175:4:10",
														"type": ""
													}
												],
												"src": "8068:250:10"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "8407:391:10",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "8453:83:10",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
																				"nodeType": "YulIdentifier",
																				"src": "8455:77:10"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "8455:79:10"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "8455:79:10"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "8428:7:10"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "8437:9:10"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "8424:3:10"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "8424:23:10"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "8449:2:10",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nodeType": "YulIdentifier",
																	"src": "8420:3:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "8420:32:10"
															},
															"nodeType": "YulIf",
															"src": "8417:119:10"
														},
														{
															"nodeType": "YulBlock",
															"src": "8546:117:10",
															"statements": [
																{
																	"nodeType": "YulVariableDeclaration",
																	"src": "8561:15:10",
																	"value": {
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "8575:1:10",
																		"type": "",
																		"value": "0"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nodeType": "YulTypedName",
																			"src": "8565:6:10",
																			"type": ""
																		}
																	]
																},
																{
																	"nodeType": "YulAssignment",
																	"src": "8590:63:10",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nodeType": "YulIdentifier",
																						"src": "8625:9:10"
																					},
																					{
																						"name": "offset",
																						"nodeType": "YulIdentifier",
																						"src": "8636:6:10"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "8621:3:10"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "8621:22:10"
																			},
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "8645:7:10"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_uint256",
																			"nodeType": "YulIdentifier",
																			"src": "8600:20:10"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "8600:53:10"
																	},
																	"variableNames": [
																		{
																			"name": "value0",
																			"nodeType": "YulIdentifier",
																			"src": "8590:6:10"
																		}
																	]
																}
															]
														},
														{
															"nodeType": "YulBlock",
															"src": "8673:118:10",
															"statements": [
																{
																	"nodeType": "YulVariableDeclaration",
																	"src": "8688:16:10",
																	"value": {
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "8702:2:10",
																		"type": "",
																		"value": "32"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nodeType": "YulTypedName",
																			"src": "8692:6:10",
																			"type": ""
																		}
																	]
																},
																{
																	"nodeType": "YulAssignment",
																	"src": "8718:63:10",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nodeType": "YulIdentifier",
																						"src": "8753:9:10"
																					},
																					{
																						"name": "offset",
																						"nodeType": "YulIdentifier",
																						"src": "8764:6:10"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "8749:3:10"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "8749:22:10"
																			},
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "8773:7:10"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_address",
																			"nodeType": "YulIdentifier",
																			"src": "8728:20:10"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "8728:53:10"
																	},
																	"variableNames": [
																		{
																			"name": "value1",
																			"nodeType": "YulIdentifier",
																			"src": "8718:6:10"
																		}
																	]
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_uint256t_address",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "8369:9:10",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nodeType": "YulTypedName",
														"src": "8380:7:10",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "8392:6:10",
														"type": ""
													},
													{
														"name": "value1",
														"nodeType": "YulTypedName",
														"src": "8400:6:10",
														"type": ""
													}
												],
												"src": "8324:474:10"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "8846:48:10",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "8856:32:10",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nodeType": "YulIdentifier",
																				"src": "8881:5:10"
																			}
																		],
																		"functionName": {
																			"name": "iszero",
																			"nodeType": "YulIdentifier",
																			"src": "8874:6:10"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "8874:13:10"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nodeType": "YulIdentifier",
																	"src": "8867:6:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "8867:21:10"
															},
															"variableNames": [
																{
																	"name": "cleaned",
																	"nodeType": "YulIdentifier",
																	"src": "8856:7:10"
																}
															]
														}
													]
												},
												"name": "cleanup_t_bool",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "8828:5:10",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "cleaned",
														"nodeType": "YulTypedName",
														"src": "8838:7:10",
														"type": ""
													}
												],
												"src": "8804:90:10"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "8959:50:10",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "8976:3:10"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nodeType": "YulIdentifier",
																				"src": "8996:5:10"
																			}
																		],
																		"functionName": {
																			"name": "cleanup_t_bool",
																			"nodeType": "YulIdentifier",
																			"src": "8981:14:10"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "8981:21:10"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "8969:6:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "8969:34:10"
															},
															"nodeType": "YulExpressionStatement",
															"src": "8969:34:10"
														}
													]
												},
												"name": "abi_encode_t_bool_to_t_bool_fromStack",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "8947:5:10",
														"type": ""
													},
													{
														"name": "pos",
														"nodeType": "YulTypedName",
														"src": "8954:3:10",
														"type": ""
													}
												],
												"src": "8900:109:10"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "9107:118:10",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "9117:26:10",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "9129:9:10"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "9140:2:10",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "9125:3:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "9125:18:10"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "9117:4:10"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value0",
																		"nodeType": "YulIdentifier",
																		"src": "9191:6:10"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "9204:9:10"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "9215:1:10",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "9200:3:10"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "9200:17:10"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_bool_to_t_bool_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "9153:37:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "9153:65:10"
															},
															"nodeType": "YulExpressionStatement",
															"src": "9153:65:10"
														}
													]
												},
												"name": "abi_encode_tuple_t_bool__to_t_bool__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "9079:9:10",
														"type": ""
													},
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "9091:6:10",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "9102:4:10",
														"type": ""
													}
												],
												"src": "9015:210:10"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "9294:80:10",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "9304:22:10",
															"value": {
																"arguments": [
																	{
																		"name": "offset",
																		"nodeType": "YulIdentifier",
																		"src": "9319:6:10"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nodeType": "YulIdentifier",
																	"src": "9313:5:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "9313:13:10"
															},
															"variableNames": [
																{
																	"name": "value",
																	"nodeType": "YulIdentifier",
																	"src": "9304:5:10"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value",
																		"nodeType": "YulIdentifier",
																		"src": "9362:5:10"
																	}
																],
																"functionName": {
																	"name": "validator_revert_t_address",
																	"nodeType": "YulIdentifier",
																	"src": "9335:26:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "9335:33:10"
															},
															"nodeType": "YulExpressionStatement",
															"src": "9335:33:10"
														}
													]
												},
												"name": "abi_decode_t_address_fromMemory",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "offset",
														"nodeType": "YulTypedName",
														"src": "9272:6:10",
														"type": ""
													},
													{
														"name": "end",
														"nodeType": "YulTypedName",
														"src": "9280:3:10",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "9288:5:10",
														"type": ""
													}
												],
												"src": "9231:143:10"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "9457:274:10",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "9503:83:10",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
																				"nodeType": "YulIdentifier",
																				"src": "9505:77:10"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "9505:79:10"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "9505:79:10"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "9478:7:10"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "9487:9:10"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "9474:3:10"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "9474:23:10"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "9499:2:10",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nodeType": "YulIdentifier",
																	"src": "9470:3:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "9470:32:10"
															},
															"nodeType": "YulIf",
															"src": "9467:119:10"
														},
														{
															"nodeType": "YulBlock",
															"src": "9596:128:10",
															"statements": [
																{
																	"nodeType": "YulVariableDeclaration",
																	"src": "9611:15:10",
																	"value": {
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "9625:1:10",
																		"type": "",
																		"value": "0"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nodeType": "YulTypedName",
																			"src": "9615:6:10",
																			"type": ""
																		}
																	]
																},
																{
																	"nodeType": "YulAssignment",
																	"src": "9640:74:10",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nodeType": "YulIdentifier",
																						"src": "9686:9:10"
																					},
																					{
																						"name": "offset",
																						"nodeType": "YulIdentifier",
																						"src": "9697:6:10"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "9682:3:10"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "9682:22:10"
																			},
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "9706:7:10"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_address_fromMemory",
																			"nodeType": "YulIdentifier",
																			"src": "9650:31:10"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "9650:64:10"
																	},
																	"variableNames": [
																		{
																			"name": "value0",
																			"nodeType": "YulIdentifier",
																			"src": "9640:6:10"
																		}
																	]
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_address_fromMemory",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "9427:9:10",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nodeType": "YulTypedName",
														"src": "9438:7:10",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "9450:6:10",
														"type": ""
													}
												],
												"src": "9380:351:10"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "9833:73:10",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "9850:3:10"
																	},
																	{
																		"name": "length",
																		"nodeType": "YulIdentifier",
																		"src": "9855:6:10"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "9843:6:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "9843:19:10"
															},
															"nodeType": "YulExpressionStatement",
															"src": "9843:19:10"
														},
														{
															"nodeType": "YulAssignment",
															"src": "9871:29:10",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "9890:3:10"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "9895:4:10",
																		"type": "",
																		"value": "0x20"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "9886:3:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "9886:14:10"
															},
															"variableNames": [
																{
																	"name": "updated_pos",
																	"nodeType": "YulIdentifier",
																	"src": "9871:11:10"
																}
															]
														}
													]
												},
												"name": "array_storeLengthForEncoding_t_string_memory_ptr_fromStack",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "pos",
														"nodeType": "YulTypedName",
														"src": "9805:3:10",
														"type": ""
													},
													{
														"name": "length",
														"nodeType": "YulTypedName",
														"src": "9810:6:10",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "updated_pos",
														"nodeType": "YulTypedName",
														"src": "9821:11:10",
														"type": ""
													}
												],
												"src": "9737:169:10"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "10018:74:10",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "memPtr",
																				"nodeType": "YulIdentifier",
																				"src": "10040:6:10"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "10048:1:10",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "10036:3:10"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "10036:14:10"
																	},
																	{
																		"hexValue": "43616e2774207374616b65206e667420796f7520646f6e2774206f776e21",
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "10052:32:10",
																		"type": "",
																		"value": "Can't stake nft you don't own!"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "10029:6:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "10029:56:10"
															},
															"nodeType": "YulExpressionStatement",
															"src": "10029:56:10"
														}
													]
												},
												"name": "store_literal_in_memory_1624d4f25969ee526147bd8655de287c38135e6ace26a92631ce497b2ca81bbe",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "memPtr",
														"nodeType": "YulTypedName",
														"src": "10010:6:10",
														"type": ""
													}
												],
												"src": "9912:180:10"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "10244:220:10",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "10254:74:10",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "10320:3:10"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "10325:2:10",
																		"type": "",
																		"value": "30"
																	}
																],
																"functionName": {
																	"name": "array_storeLengthForEncoding_t_string_memory_ptr_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "10261:58:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "10261:67:10"
															},
															"variableNames": [
																{
																	"name": "pos",
																	"nodeType": "YulIdentifier",
																	"src": "10254:3:10"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "10426:3:10"
																	}
																],
																"functionName": {
																	"name": "store_literal_in_memory_1624d4f25969ee526147bd8655de287c38135e6ace26a92631ce497b2ca81bbe",
																	"nodeType": "YulIdentifier",
																	"src": "10337:88:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "10337:93:10"
															},
															"nodeType": "YulExpressionStatement",
															"src": "10337:93:10"
														},
														{
															"nodeType": "YulAssignment",
															"src": "10439:19:10",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "10450:3:10"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "10455:2:10",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "10446:3:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "10446:12:10"
															},
															"variableNames": [
																{
																	"name": "end",
																	"nodeType": "YulIdentifier",
																	"src": "10439:3:10"
																}
															]
														}
													]
												},
												"name": "abi_encode_t_stringliteral_1624d4f25969ee526147bd8655de287c38135e6ace26a92631ce497b2ca81bbe_to_t_string_memory_ptr_fromStack",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "pos",
														"nodeType": "YulTypedName",
														"src": "10232:3:10",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "end",
														"nodeType": "YulTypedName",
														"src": "10240:3:10",
														"type": ""
													}
												],
												"src": "10098:366:10"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "10641:248:10",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "10651:26:10",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "10663:9:10"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "10674:2:10",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "10659:3:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "10659:18:10"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "10651:4:10"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "10698:9:10"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "10709:1:10",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "10694:3:10"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "10694:17:10"
																	},
																	{
																		"arguments": [
																			{
																				"name": "tail",
																				"nodeType": "YulIdentifier",
																				"src": "10717:4:10"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "10723:9:10"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "10713:3:10"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "10713:20:10"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "10687:6:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "10687:47:10"
															},
															"nodeType": "YulExpressionStatement",
															"src": "10687:47:10"
														},
														{
															"nodeType": "YulAssignment",
															"src": "10743:139:10",
															"value": {
																"arguments": [
																	{
																		"name": "tail",
																		"nodeType": "YulIdentifier",
																		"src": "10877:4:10"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_stringliteral_1624d4f25969ee526147bd8655de287c38135e6ace26a92631ce497b2ca81bbe_to_t_string_memory_ptr_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "10751:124:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "10751:131:10"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "10743:4:10"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_1624d4f25969ee526147bd8655de287c38135e6ace26a92631ce497b2ca81bbe__to_t_string_memory_ptr__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "10621:9:10",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "10636:4:10",
														"type": ""
													}
												],
												"src": "10470:419:10"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "11049:288:10",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "11059:26:10",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "11071:9:10"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "11082:2:10",
																		"type": "",
																		"value": "96"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "11067:3:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "11067:18:10"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "11059:4:10"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value0",
																		"nodeType": "YulIdentifier",
																		"src": "11139:6:10"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "11152:9:10"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "11163:1:10",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "11148:3:10"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "11148:17:10"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_address_to_t_address_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "11095:43:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "11095:71:10"
															},
															"nodeType": "YulExpressionStatement",
															"src": "11095:71:10"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value1",
																		"nodeType": "YulIdentifier",
																		"src": "11220:6:10"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "11233:9:10"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "11244:2:10",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "11229:3:10"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "11229:18:10"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_address_to_t_address_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "11176:43:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "11176:72:10"
															},
															"nodeType": "YulExpressionStatement",
															"src": "11176:72:10"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value2",
																		"nodeType": "YulIdentifier",
																		"src": "11302:6:10"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "11315:9:10"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "11326:2:10",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "11311:3:10"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "11311:18:10"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_uint256_to_t_uint256_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "11258:43:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "11258:72:10"
															},
															"nodeType": "YulExpressionStatement",
															"src": "11258:72:10"
														}
													]
												},
												"name": "abi_encode_tuple_t_address_t_address_t_uint256__to_t_address_t_address_t_uint256__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "11005:9:10",
														"type": ""
													},
													{
														"name": "value2",
														"nodeType": "YulTypedName",
														"src": "11017:6:10",
														"type": ""
													},
													{
														"name": "value1",
														"nodeType": "YulTypedName",
														"src": "11025:6:10",
														"type": ""
													},
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "11033:6:10",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "11044:4:10",
														"type": ""
													}
												],
												"src": "10895:442:10"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "11371:152:10",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "11388:1:10",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "11391:77:10",
																		"type": "",
																		"value": "35408467139433450592217433187231851964531694900788300625387963629091585785856"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "11381:6:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "11381:88:10"
															},
															"nodeType": "YulExpressionStatement",
															"src": "11381:88:10"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "11485:1:10",
																		"type": "",
																		"value": "4"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "11488:4:10",
																		"type": "",
																		"value": "0x11"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "11478:6:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "11478:15:10"
															},
															"nodeType": "YulExpressionStatement",
															"src": "11478:15:10"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "11509:1:10",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "11512:4:10",
																		"type": "",
																		"value": "0x24"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nodeType": "YulIdentifier",
																	"src": "11502:6:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "11502:15:10"
															},
															"nodeType": "YulExpressionStatement",
															"src": "11502:15:10"
														}
													]
												},
												"name": "panic_error_0x11",
												"nodeType": "YulFunctionDefinition",
												"src": "11343:180:10"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "11572:190:10",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "11582:33:10",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nodeType": "YulIdentifier",
																		"src": "11609:5:10"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint256",
																	"nodeType": "YulIdentifier",
																	"src": "11591:17:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "11591:24:10"
															},
															"variableNames": [
																{
																	"name": "value",
																	"nodeType": "YulIdentifier",
																	"src": "11582:5:10"
																}
															]
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "11705:22:10",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "panic_error_0x11",
																				"nodeType": "YulIdentifier",
																				"src": "11707:16:10"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "11707:18:10"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "11707:18:10"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "value",
																		"nodeType": "YulIdentifier",
																		"src": "11630:5:10"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "11637:66:10",
																		"type": "",
																		"value": "0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff"
																	}
																],
																"functionName": {
																	"name": "eq",
																	"nodeType": "YulIdentifier",
																	"src": "11627:2:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "11627:77:10"
															},
															"nodeType": "YulIf",
															"src": "11624:103:10"
														},
														{
															"nodeType": "YulAssignment",
															"src": "11736:20:10",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nodeType": "YulIdentifier",
																		"src": "11747:5:10"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "11754:1:10",
																		"type": "",
																		"value": "1"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "11743:3:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "11743:13:10"
															},
															"variableNames": [
																{
																	"name": "ret",
																	"nodeType": "YulIdentifier",
																	"src": "11736:3:10"
																}
															]
														}
													]
												},
												"name": "increment_t_uint256",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "11558:5:10",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "ret",
														"nodeType": "YulTypedName",
														"src": "11568:3:10",
														"type": ""
													}
												],
												"src": "11529:233:10"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "11922:288:10",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "11932:26:10",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "11944:9:10"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "11955:2:10",
																		"type": "",
																		"value": "96"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "11940:3:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "11940:18:10"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "11932:4:10"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value0",
																		"nodeType": "YulIdentifier",
																		"src": "12012:6:10"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "12025:9:10"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "12036:1:10",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "12021:3:10"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "12021:17:10"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_uint256_to_t_uint256_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "11968:43:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "11968:71:10"
															},
															"nodeType": "YulExpressionStatement",
															"src": "11968:71:10"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value1",
																		"nodeType": "YulIdentifier",
																		"src": "12093:6:10"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "12106:9:10"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "12117:2:10",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "12102:3:10"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "12102:18:10"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_uint256_to_t_uint256_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "12049:43:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "12049:72:10"
															},
															"nodeType": "YulExpressionStatement",
															"src": "12049:72:10"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value2",
																		"nodeType": "YulIdentifier",
																		"src": "12175:6:10"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "12188:9:10"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "12199:2:10",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "12184:3:10"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "12184:18:10"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_uint256_to_t_uint256_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "12131:43:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "12131:72:10"
															},
															"nodeType": "YulExpressionStatement",
															"src": "12131:72:10"
														}
													]
												},
												"name": "abi_encode_tuple_t_uint256_t_uint256_t_uint256__to_t_uint256_t_uint256_t_uint256__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "11878:9:10",
														"type": ""
													},
													{
														"name": "value2",
														"nodeType": "YulTypedName",
														"src": "11890:6:10",
														"type": ""
													},
													{
														"name": "value1",
														"nodeType": "YulTypedName",
														"src": "11898:6:10",
														"type": ""
													},
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "11906:6:10",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "11917:4:10",
														"type": ""
													}
												],
												"src": "11768:442:10"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "12261:149:10",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "12271:25:10",
															"value": {
																"arguments": [
																	{
																		"name": "x",
																		"nodeType": "YulIdentifier",
																		"src": "12294:1:10"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint256",
																	"nodeType": "YulIdentifier",
																	"src": "12276:17:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "12276:20:10"
															},
															"variableNames": [
																{
																	"name": "x",
																	"nodeType": "YulIdentifier",
																	"src": "12271:1:10"
																}
															]
														},
														{
															"nodeType": "YulAssignment",
															"src": "12305:25:10",
															"value": {
																"arguments": [
																	{
																		"name": "y",
																		"nodeType": "YulIdentifier",
																		"src": "12328:1:10"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint256",
																	"nodeType": "YulIdentifier",
																	"src": "12310:17:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "12310:20:10"
															},
															"variableNames": [
																{
																	"name": "y",
																	"nodeType": "YulIdentifier",
																	"src": "12305:1:10"
																}
															]
														},
														{
															"nodeType": "YulAssignment",
															"src": "12339:17:10",
															"value": {
																"arguments": [
																	{
																		"name": "x",
																		"nodeType": "YulIdentifier",
																		"src": "12351:1:10"
																	},
																	{
																		"name": "y",
																		"nodeType": "YulIdentifier",
																		"src": "12354:1:10"
																	}
																],
																"functionName": {
																	"name": "sub",
																	"nodeType": "YulIdentifier",
																	"src": "12347:3:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "12347:9:10"
															},
															"variableNames": [
																{
																	"name": "diff",
																	"nodeType": "YulIdentifier",
																	"src": "12339:4:10"
																}
															]
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "12381:22:10",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "panic_error_0x11",
																				"nodeType": "YulIdentifier",
																				"src": "12383:16:10"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "12383:18:10"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "12383:18:10"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "diff",
																		"nodeType": "YulIdentifier",
																		"src": "12372:4:10"
																	},
																	{
																		"name": "x",
																		"nodeType": "YulIdentifier",
																		"src": "12378:1:10"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nodeType": "YulIdentifier",
																	"src": "12369:2:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "12369:11:10"
															},
															"nodeType": "YulIf",
															"src": "12366:37:10"
														}
													]
												},
												"name": "checked_sub_t_uint256",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "x",
														"nodeType": "YulTypedName",
														"src": "12247:1:10",
														"type": ""
													},
													{
														"name": "y",
														"nodeType": "YulTypedName",
														"src": "12250:1:10",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "diff",
														"nodeType": "YulTypedName",
														"src": "12256:4:10",
														"type": ""
													}
												],
												"src": "12216:194:10"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "12444:152:10",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "12461:1:10",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "12464:77:10",
																		"type": "",
																		"value": "35408467139433450592217433187231851964531694900788300625387963629091585785856"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "12454:6:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "12454:88:10"
															},
															"nodeType": "YulExpressionStatement",
															"src": "12454:88:10"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "12558:1:10",
																		"type": "",
																		"value": "4"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "12561:4:10",
																		"type": "",
																		"value": "0x12"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "12551:6:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "12551:15:10"
															},
															"nodeType": "YulExpressionStatement",
															"src": "12551:15:10"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "12582:1:10",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "12585:4:10",
																		"type": "",
																		"value": "0x24"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nodeType": "YulIdentifier",
																	"src": "12575:6:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "12575:15:10"
															},
															"nodeType": "YulExpressionStatement",
															"src": "12575:15:10"
														}
													]
												},
												"name": "panic_error_0x12",
												"nodeType": "YulFunctionDefinition",
												"src": "12416:180:10"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "12644:143:10",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "12654:25:10",
															"value": {
																"arguments": [
																	{
																		"name": "x",
																		"nodeType": "YulIdentifier",
																		"src": "12677:1:10"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint256",
																	"nodeType": "YulIdentifier",
																	"src": "12659:17:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "12659:20:10"
															},
															"variableNames": [
																{
																	"name": "x",
																	"nodeType": "YulIdentifier",
																	"src": "12654:1:10"
																}
															]
														},
														{
															"nodeType": "YulAssignment",
															"src": "12688:25:10",
															"value": {
																"arguments": [
																	{
																		"name": "y",
																		"nodeType": "YulIdentifier",
																		"src": "12711:1:10"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint256",
																	"nodeType": "YulIdentifier",
																	"src": "12693:17:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "12693:20:10"
															},
															"variableNames": [
																{
																	"name": "y",
																	"nodeType": "YulIdentifier",
																	"src": "12688:1:10"
																}
															]
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "12735:22:10",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "panic_error_0x12",
																				"nodeType": "YulIdentifier",
																				"src": "12737:16:10"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "12737:18:10"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "12737:18:10"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "y",
																		"nodeType": "YulIdentifier",
																		"src": "12732:1:10"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nodeType": "YulIdentifier",
																	"src": "12725:6:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "12725:9:10"
															},
															"nodeType": "YulIf",
															"src": "12722:35:10"
														},
														{
															"nodeType": "YulAssignment",
															"src": "12767:14:10",
															"value": {
																"arguments": [
																	{
																		"name": "x",
																		"nodeType": "YulIdentifier",
																		"src": "12776:1:10"
																	},
																	{
																		"name": "y",
																		"nodeType": "YulIdentifier",
																		"src": "12779:1:10"
																	}
																],
																"functionName": {
																	"name": "div",
																	"nodeType": "YulIdentifier",
																	"src": "12772:3:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "12772:9:10"
															},
															"variableNames": [
																{
																	"name": "r",
																	"nodeType": "YulIdentifier",
																	"src": "12767:1:10"
																}
															]
														}
													]
												},
												"name": "checked_div_t_uint256",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "x",
														"nodeType": "YulTypedName",
														"src": "12633:1:10",
														"type": ""
													},
													{
														"name": "y",
														"nodeType": "YulTypedName",
														"src": "12636:1:10",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "r",
														"nodeType": "YulTypedName",
														"src": "12642:1:10",
														"type": ""
													}
												],
												"src": "12602:185:10"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "12899:74:10",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "memPtr",
																				"nodeType": "YulIdentifier",
																				"src": "12921:6:10"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "12929:1:10",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "12917:3:10"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "12917:14:10"
																	},
																	{
																		"hexValue": "5374616b696e6720706f6f6c206e6f7420656e6465642079657421212121",
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "12933:32:10",
																		"type": "",
																		"value": "Staking pool not ended yet!!!!"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "12910:6:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "12910:56:10"
															},
															"nodeType": "YulExpressionStatement",
															"src": "12910:56:10"
														}
													]
												},
												"name": "store_literal_in_memory_2c264ac290bec70a05ed24874b7a508841480fcc00576c7986fac4268cbefe0e",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "memPtr",
														"nodeType": "YulTypedName",
														"src": "12891:6:10",
														"type": ""
													}
												],
												"src": "12793:180:10"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "13125:220:10",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "13135:74:10",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "13201:3:10"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "13206:2:10",
																		"type": "",
																		"value": "30"
																	}
																],
																"functionName": {
																	"name": "array_storeLengthForEncoding_t_string_memory_ptr_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "13142:58:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "13142:67:10"
															},
															"variableNames": [
																{
																	"name": "pos",
																	"nodeType": "YulIdentifier",
																	"src": "13135:3:10"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "13307:3:10"
																	}
																],
																"functionName": {
																	"name": "store_literal_in_memory_2c264ac290bec70a05ed24874b7a508841480fcc00576c7986fac4268cbefe0e",
																	"nodeType": "YulIdentifier",
																	"src": "13218:88:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "13218:93:10"
															},
															"nodeType": "YulExpressionStatement",
															"src": "13218:93:10"
														},
														{
															"nodeType": "YulAssignment",
															"src": "13320:19:10",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "13331:3:10"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "13336:2:10",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "13327:3:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "13327:12:10"
															},
															"variableNames": [
																{
																	"name": "end",
																	"nodeType": "YulIdentifier",
																	"src": "13320:3:10"
																}
															]
														}
													]
												},
												"name": "abi_encode_t_stringliteral_2c264ac290bec70a05ed24874b7a508841480fcc00576c7986fac4268cbefe0e_to_t_string_memory_ptr_fromStack",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "pos",
														"nodeType": "YulTypedName",
														"src": "13113:3:10",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "end",
														"nodeType": "YulTypedName",
														"src": "13121:3:10",
														"type": ""
													}
												],
												"src": "12979:366:10"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "13522:248:10",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "13532:26:10",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "13544:9:10"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "13555:2:10",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "13540:3:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "13540:18:10"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "13532:4:10"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "13579:9:10"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "13590:1:10",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "13575:3:10"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "13575:17:10"
																	},
																	{
																		"arguments": [
																			{
																				"name": "tail",
																				"nodeType": "YulIdentifier",
																				"src": "13598:4:10"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "13604:9:10"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "13594:3:10"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "13594:20:10"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "13568:6:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "13568:47:10"
															},
															"nodeType": "YulExpressionStatement",
															"src": "13568:47:10"
														},
														{
															"nodeType": "YulAssignment",
															"src": "13624:139:10",
															"value": {
																"arguments": [
																	{
																		"name": "tail",
																		"nodeType": "YulIdentifier",
																		"src": "13758:4:10"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_stringliteral_2c264ac290bec70a05ed24874b7a508841480fcc00576c7986fac4268cbefe0e_to_t_string_memory_ptr_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "13632:124:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "13632:131:10"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "13624:4:10"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_2c264ac290bec70a05ed24874b7a508841480fcc00576c7986fac4268cbefe0e__to_t_string_memory_ptr__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "13502:9:10",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "13517:4:10",
														"type": ""
													}
												],
												"src": "13351:419:10"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "13882:118:10",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "memPtr",
																				"nodeType": "YulIdentifier",
																				"src": "13904:6:10"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "13912:1:10",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "13900:3:10"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "13900:14:10"
																	},
																	{
																		"hexValue": "596f7520617265206e6f74206f776e6572206f662074686973204e4654207374",
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "13916:34:10",
																		"type": "",
																		"value": "You are not owner of this NFT st"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "13893:6:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "13893:58:10"
															},
															"nodeType": "YulExpressionStatement",
															"src": "13893:58:10"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "memPtr",
																				"nodeType": "YulIdentifier",
																				"src": "13972:6:10"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "13980:2:10",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "13968:3:10"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "13968:15:10"
																	},
																	{
																		"hexValue": "616b696e67",
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "13985:7:10",
																		"type": "",
																		"value": "aking"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "13961:6:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "13961:32:10"
															},
															"nodeType": "YulExpressionStatement",
															"src": "13961:32:10"
														}
													]
												},
												"name": "store_literal_in_memory_e15a9850692d6708934a23063a6ddc95798c196bc7427dd1b63298ad85e9753c",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "memPtr",
														"nodeType": "YulTypedName",
														"src": "13874:6:10",
														"type": ""
													}
												],
												"src": "13776:224:10"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "14152:220:10",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "14162:74:10",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "14228:3:10"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "14233:2:10",
																		"type": "",
																		"value": "37"
																	}
																],
																"functionName": {
																	"name": "array_storeLengthForEncoding_t_string_memory_ptr_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "14169:58:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "14169:67:10"
															},
															"variableNames": [
																{
																	"name": "pos",
																	"nodeType": "YulIdentifier",
																	"src": "14162:3:10"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "14334:3:10"
																	}
																],
																"functionName": {
																	"name": "store_literal_in_memory_e15a9850692d6708934a23063a6ddc95798c196bc7427dd1b63298ad85e9753c",
																	"nodeType": "YulIdentifier",
																	"src": "14245:88:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "14245:93:10"
															},
															"nodeType": "YulExpressionStatement",
															"src": "14245:93:10"
														},
														{
															"nodeType": "YulAssignment",
															"src": "14347:19:10",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "14358:3:10"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "14363:2:10",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "14354:3:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "14354:12:10"
															},
															"variableNames": [
																{
																	"name": "end",
																	"nodeType": "YulIdentifier",
																	"src": "14347:3:10"
																}
															]
														}
													]
												},
												"name": "abi_encode_t_stringliteral_e15a9850692d6708934a23063a6ddc95798c196bc7427dd1b63298ad85e9753c_to_t_string_memory_ptr_fromStack",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "pos",
														"nodeType": "YulTypedName",
														"src": "14140:3:10",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "end",
														"nodeType": "YulTypedName",
														"src": "14148:3:10",
														"type": ""
													}
												],
												"src": "14006:366:10"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "14549:248:10",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "14559:26:10",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "14571:9:10"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "14582:2:10",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "14567:3:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "14567:18:10"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "14559:4:10"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "14606:9:10"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "14617:1:10",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "14602:3:10"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "14602:17:10"
																	},
																	{
																		"arguments": [
																			{
																				"name": "tail",
																				"nodeType": "YulIdentifier",
																				"src": "14625:4:10"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "14631:9:10"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "14621:3:10"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "14621:20:10"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "14595:6:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "14595:47:10"
															},
															"nodeType": "YulExpressionStatement",
															"src": "14595:47:10"
														},
														{
															"nodeType": "YulAssignment",
															"src": "14651:139:10",
															"value": {
																"arguments": [
																	{
																		"name": "tail",
																		"nodeType": "YulIdentifier",
																		"src": "14785:4:10"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_stringliteral_e15a9850692d6708934a23063a6ddc95798c196bc7427dd1b63298ad85e9753c_to_t_string_memory_ptr_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "14659:124:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "14659:131:10"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "14651:4:10"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_e15a9850692d6708934a23063a6ddc95798c196bc7427dd1b63298ad85e9753c__to_t_string_memory_ptr__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "14529:9:10",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "14544:4:10",
														"type": ""
													}
												],
												"src": "14378:419:10"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "14929:206:10",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "14939:26:10",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "14951:9:10"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "14962:2:10",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "14947:3:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "14947:18:10"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "14939:4:10"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value0",
																		"nodeType": "YulIdentifier",
																		"src": "15019:6:10"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "15032:9:10"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "15043:1:10",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "15028:3:10"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "15028:17:10"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_address_to_t_address_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "14975:43:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "14975:71:10"
															},
															"nodeType": "YulExpressionStatement",
															"src": "14975:71:10"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value1",
																		"nodeType": "YulIdentifier",
																		"src": "15100:6:10"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "15113:9:10"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "15124:2:10",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "15109:3:10"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "15109:18:10"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_uint256_to_t_uint256_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "15056:43:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "15056:72:10"
															},
															"nodeType": "YulExpressionStatement",
															"src": "15056:72:10"
														}
													]
												},
												"name": "abi_encode_tuple_t_address_t_uint256__to_t_address_t_uint256__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "14893:9:10",
														"type": ""
													},
													{
														"name": "value1",
														"nodeType": "YulTypedName",
														"src": "14905:6:10",
														"type": ""
													},
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "14913:6:10",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "14924:4:10",
														"type": ""
													}
												],
												"src": "14803:332:10"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "15181:76:10",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "15235:16:10",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "15244:1:10",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "15247:1:10",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "15237:6:10"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "15237:12:10"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "15237:12:10"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nodeType": "YulIdentifier",
																				"src": "15204:5:10"
																			},
																			{
																				"arguments": [
																					{
																						"name": "value",
																						"nodeType": "YulIdentifier",
																						"src": "15226:5:10"
																					}
																				],
																				"functionName": {
																					"name": "cleanup_t_bool",
																					"nodeType": "YulIdentifier",
																					"src": "15211:14:10"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "15211:21:10"
																			}
																		],
																		"functionName": {
																			"name": "eq",
																			"nodeType": "YulIdentifier",
																			"src": "15201:2:10"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "15201:32:10"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nodeType": "YulIdentifier",
																	"src": "15194:6:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "15194:40:10"
															},
															"nodeType": "YulIf",
															"src": "15191:60:10"
														}
													]
												},
												"name": "validator_revert_t_bool",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "15174:5:10",
														"type": ""
													}
												],
												"src": "15141:116:10"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "15323:77:10",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "15333:22:10",
															"value": {
																"arguments": [
																	{
																		"name": "offset",
																		"nodeType": "YulIdentifier",
																		"src": "15348:6:10"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nodeType": "YulIdentifier",
																	"src": "15342:5:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "15342:13:10"
															},
															"variableNames": [
																{
																	"name": "value",
																	"nodeType": "YulIdentifier",
																	"src": "15333:5:10"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value",
																		"nodeType": "YulIdentifier",
																		"src": "15388:5:10"
																	}
																],
																"functionName": {
																	"name": "validator_revert_t_bool",
																	"nodeType": "YulIdentifier",
																	"src": "15364:23:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "15364:30:10"
															},
															"nodeType": "YulExpressionStatement",
															"src": "15364:30:10"
														}
													]
												},
												"name": "abi_decode_t_bool_fromMemory",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "offset",
														"nodeType": "YulTypedName",
														"src": "15301:6:10",
														"type": ""
													},
													{
														"name": "end",
														"nodeType": "YulTypedName",
														"src": "15309:3:10",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "15317:5:10",
														"type": ""
													}
												],
												"src": "15263:137:10"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "15480:271:10",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "15526:83:10",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
																				"nodeType": "YulIdentifier",
																				"src": "15528:77:10"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "15528:79:10"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "15528:79:10"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "15501:7:10"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "15510:9:10"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "15497:3:10"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "15497:23:10"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "15522:2:10",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nodeType": "YulIdentifier",
																	"src": "15493:3:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "15493:32:10"
															},
															"nodeType": "YulIf",
															"src": "15490:119:10"
														},
														{
															"nodeType": "YulBlock",
															"src": "15619:125:10",
															"statements": [
																{
																	"nodeType": "YulVariableDeclaration",
																	"src": "15634:15:10",
																	"value": {
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "15648:1:10",
																		"type": "",
																		"value": "0"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nodeType": "YulTypedName",
																			"src": "15638:6:10",
																			"type": ""
																		}
																	]
																},
																{
																	"nodeType": "YulAssignment",
																	"src": "15663:71:10",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nodeType": "YulIdentifier",
																						"src": "15706:9:10"
																					},
																					{
																						"name": "offset",
																						"nodeType": "YulIdentifier",
																						"src": "15717:6:10"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "15702:3:10"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "15702:22:10"
																			},
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "15726:7:10"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_bool_fromMemory",
																			"nodeType": "YulIdentifier",
																			"src": "15673:28:10"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "15673:61:10"
																	},
																	"variableNames": [
																		{
																			"name": "value0",
																			"nodeType": "YulIdentifier",
																			"src": "15663:6:10"
																		}
																	]
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_bool_fromMemory",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "15450:9:10",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nodeType": "YulTypedName",
														"src": "15461:7:10",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "15473:6:10",
														"type": ""
													}
												],
												"src": "15406:345:10"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "15939:371:10",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "15949:27:10",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "15961:9:10"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "15972:3:10",
																		"type": "",
																		"value": "128"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "15957:3:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "15957:19:10"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "15949:4:10"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value0",
																		"nodeType": "YulIdentifier",
																		"src": "16030:6:10"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "16043:9:10"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "16054:1:10",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "16039:3:10"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "16039:17:10"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_uint256_to_t_uint256_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "15986:43:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "15986:71:10"
															},
															"nodeType": "YulExpressionStatement",
															"src": "15986:71:10"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value1",
																		"nodeType": "YulIdentifier",
																		"src": "16111:6:10"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "16124:9:10"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "16135:2:10",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "16120:3:10"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "16120:18:10"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_uint256_to_t_uint256_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "16067:43:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "16067:72:10"
															},
															"nodeType": "YulExpressionStatement",
															"src": "16067:72:10"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value2",
																		"nodeType": "YulIdentifier",
																		"src": "16193:6:10"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "16206:9:10"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "16217:2:10",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "16202:3:10"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "16202:18:10"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_uint256_to_t_uint256_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "16149:43:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "16149:72:10"
															},
															"nodeType": "YulExpressionStatement",
															"src": "16149:72:10"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value3",
																		"nodeType": "YulIdentifier",
																		"src": "16275:6:10"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "16288:9:10"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "16299:2:10",
																				"type": "",
																				"value": "96"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "16284:3:10"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "16284:18:10"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_uint256_to_t_uint256_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "16231:43:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "16231:72:10"
															},
															"nodeType": "YulExpressionStatement",
															"src": "16231:72:10"
														}
													]
												},
												"name": "abi_encode_tuple_t_uint256_t_uint256_t_uint256_t_uint256__to_t_uint256_t_uint256_t_uint256_t_uint256__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "15887:9:10",
														"type": ""
													},
													{
														"name": "value3",
														"nodeType": "YulTypedName",
														"src": "15899:6:10",
														"type": ""
													},
													{
														"name": "value2",
														"nodeType": "YulTypedName",
														"src": "15907:6:10",
														"type": ""
													},
													{
														"name": "value1",
														"nodeType": "YulTypedName",
														"src": "15915:6:10",
														"type": ""
													},
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "15923:6:10",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "15934:4:10",
														"type": ""
													}
												],
												"src": "15757:553:10"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "16422:119:10",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "memPtr",
																				"nodeType": "YulIdentifier",
																				"src": "16444:6:10"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "16452:1:10",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "16440:3:10"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "16440:14:10"
																	},
																	{
																		"hexValue": "4f776e61626c653a206e6577206f776e657220697320746865207a65726f2061",
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "16456:34:10",
																		"type": "",
																		"value": "Ownable: new owner is the zero a"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "16433:6:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "16433:58:10"
															},
															"nodeType": "YulExpressionStatement",
															"src": "16433:58:10"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "memPtr",
																				"nodeType": "YulIdentifier",
																				"src": "16512:6:10"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "16520:2:10",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "16508:3:10"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "16508:15:10"
																	},
																	{
																		"hexValue": "646472657373",
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "16525:8:10",
																		"type": "",
																		"value": "ddress"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "16501:6:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "16501:33:10"
															},
															"nodeType": "YulExpressionStatement",
															"src": "16501:33:10"
														}
													]
												},
												"name": "store_literal_in_memory_245f15ff17f551913a7a18385165551503906a406f905ac1c2437281a7cd0cfe",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "memPtr",
														"nodeType": "YulTypedName",
														"src": "16414:6:10",
														"type": ""
													}
												],
												"src": "16316:225:10"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "16693:220:10",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "16703:74:10",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "16769:3:10"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "16774:2:10",
																		"type": "",
																		"value": "38"
																	}
																],
																"functionName": {
																	"name": "array_storeLengthForEncoding_t_string_memory_ptr_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "16710:58:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "16710:67:10"
															},
															"variableNames": [
																{
																	"name": "pos",
																	"nodeType": "YulIdentifier",
																	"src": "16703:3:10"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "16875:3:10"
																	}
																],
																"functionName": {
																	"name": "store_literal_in_memory_245f15ff17f551913a7a18385165551503906a406f905ac1c2437281a7cd0cfe",
																	"nodeType": "YulIdentifier",
																	"src": "16786:88:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "16786:93:10"
															},
															"nodeType": "YulExpressionStatement",
															"src": "16786:93:10"
														},
														{
															"nodeType": "YulAssignment",
															"src": "16888:19:10",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "16899:3:10"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "16904:2:10",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "16895:3:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "16895:12:10"
															},
															"variableNames": [
																{
																	"name": "end",
																	"nodeType": "YulIdentifier",
																	"src": "16888:3:10"
																}
															]
														}
													]
												},
												"name": "abi_encode_t_stringliteral_245f15ff17f551913a7a18385165551503906a406f905ac1c2437281a7cd0cfe_to_t_string_memory_ptr_fromStack",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "pos",
														"nodeType": "YulTypedName",
														"src": "16681:3:10",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "end",
														"nodeType": "YulTypedName",
														"src": "16689:3:10",
														"type": ""
													}
												],
												"src": "16547:366:10"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "17090:248:10",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "17100:26:10",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "17112:9:10"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "17123:2:10",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "17108:3:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "17108:18:10"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "17100:4:10"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "17147:9:10"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "17158:1:10",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "17143:3:10"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "17143:17:10"
																	},
																	{
																		"arguments": [
																			{
																				"name": "tail",
																				"nodeType": "YulIdentifier",
																				"src": "17166:4:10"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "17172:9:10"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "17162:3:10"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "17162:20:10"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "17136:6:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "17136:47:10"
															},
															"nodeType": "YulExpressionStatement",
															"src": "17136:47:10"
														},
														{
															"nodeType": "YulAssignment",
															"src": "17192:139:10",
															"value": {
																"arguments": [
																	{
																		"name": "tail",
																		"nodeType": "YulIdentifier",
																		"src": "17326:4:10"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_stringliteral_245f15ff17f551913a7a18385165551503906a406f905ac1c2437281a7cd0cfe_to_t_string_memory_ptr_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "17200:124:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "17200:131:10"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "17192:4:10"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_245f15ff17f551913a7a18385165551503906a406f905ac1c2437281a7cd0cfe__to_t_string_memory_ptr__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "17070:9:10",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "17085:4:10",
														"type": ""
													}
												],
												"src": "16919:419:10"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "17372:152:10",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "17389:1:10",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "17392:77:10",
																		"type": "",
																		"value": "35408467139433450592217433187231851964531694900788300625387963629091585785856"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "17382:6:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "17382:88:10"
															},
															"nodeType": "YulExpressionStatement",
															"src": "17382:88:10"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "17486:1:10",
																		"type": "",
																		"value": "4"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "17489:4:10",
																		"type": "",
																		"value": "0x32"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "17479:6:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "17479:15:10"
															},
															"nodeType": "YulExpressionStatement",
															"src": "17479:15:10"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "17510:1:10",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "17513:4:10",
																		"type": "",
																		"value": "0x24"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nodeType": "YulIdentifier",
																	"src": "17503:6:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "17503:15:10"
															},
															"nodeType": "YulExpressionStatement",
															"src": "17503:15:10"
														}
													]
												},
												"name": "panic_error_0x32",
												"nodeType": "YulFunctionDefinition",
												"src": "17344:180:10"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "17636:76:10",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "memPtr",
																				"nodeType": "YulIdentifier",
																				"src": "17658:6:10"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "17666:1:10",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "17654:3:10"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "17654:14:10"
																	},
																	{
																		"hexValue": "4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e6572",
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "17670:34:10",
																		"type": "",
																		"value": "Ownable: caller is not the owner"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "17647:6:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "17647:58:10"
															},
															"nodeType": "YulExpressionStatement",
															"src": "17647:58:10"
														}
													]
												},
												"name": "store_literal_in_memory_9924ebdf1add33d25d4ef888e16131f0a5687b0580a36c21b5c301a6c462effe",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "memPtr",
														"nodeType": "YulTypedName",
														"src": "17628:6:10",
														"type": ""
													}
												],
												"src": "17530:182:10"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "17864:220:10",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "17874:74:10",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "17940:3:10"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "17945:2:10",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "array_storeLengthForEncoding_t_string_memory_ptr_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "17881:58:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "17881:67:10"
															},
															"variableNames": [
																{
																	"name": "pos",
																	"nodeType": "YulIdentifier",
																	"src": "17874:3:10"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "18046:3:10"
																	}
																],
																"functionName": {
																	"name": "store_literal_in_memory_9924ebdf1add33d25d4ef888e16131f0a5687b0580a36c21b5c301a6c462effe",
																	"nodeType": "YulIdentifier",
																	"src": "17957:88:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "17957:93:10"
															},
															"nodeType": "YulExpressionStatement",
															"src": "17957:93:10"
														},
														{
															"nodeType": "YulAssignment",
															"src": "18059:19:10",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "18070:3:10"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "18075:2:10",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "18066:3:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "18066:12:10"
															},
															"variableNames": [
																{
																	"name": "end",
																	"nodeType": "YulIdentifier",
																	"src": "18059:3:10"
																}
															]
														}
													]
												},
												"name": "abi_encode_t_stringliteral_9924ebdf1add33d25d4ef888e16131f0a5687b0580a36c21b5c301a6c462effe_to_t_string_memory_ptr_fromStack",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "pos",
														"nodeType": "YulTypedName",
														"src": "17852:3:10",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "end",
														"nodeType": "YulTypedName",
														"src": "17860:3:10",
														"type": ""
													}
												],
												"src": "17718:366:10"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "18261:248:10",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "18271:26:10",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "18283:9:10"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "18294:2:10",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "18279:3:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "18279:18:10"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "18271:4:10"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "18318:9:10"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "18329:1:10",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "18314:3:10"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "18314:17:10"
																	},
																	{
																		"arguments": [
																			{
																				"name": "tail",
																				"nodeType": "YulIdentifier",
																				"src": "18337:4:10"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "18343:9:10"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "18333:3:10"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "18333:20:10"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "18307:6:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "18307:47:10"
															},
															"nodeType": "YulExpressionStatement",
															"src": "18307:47:10"
														},
														{
															"nodeType": "YulAssignment",
															"src": "18363:139:10",
															"value": {
																"arguments": [
																	{
																		"name": "tail",
																		"nodeType": "YulIdentifier",
																		"src": "18497:4:10"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_stringliteral_9924ebdf1add33d25d4ef888e16131f0a5687b0580a36c21b5c301a6c462effe_to_t_string_memory_ptr_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "18371:124:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "18371:131:10"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "18363:4:10"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_9924ebdf1add33d25d4ef888e16131f0a5687b0580a36c21b5c301a6c462effe__to_t_string_memory_ptr__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "18241:9:10",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "18256:4:10",
														"type": ""
													}
												],
												"src": "18090:419:10"
											}
										]
									},
									"contents": "{\n\n    function cleanup_t_uint256(value) -> cleaned {\n        cleaned := value\n    }\n\n    function abi_encode_t_uint256_to_t_uint256_fromStack(value, pos) {\n        mstore(pos, cleanup_t_uint256(value))\n    }\n\n    function abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed(headStart , value0) -> tail {\n        tail := add(headStart, 32)\n\n        abi_encode_t_uint256_to_t_uint256_fromStack(value0,  add(headStart, 0))\n\n    }\n\n    function allocate_unbounded() -> memPtr {\n        memPtr := mload(64)\n    }\n\n    function revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() {\n        revert(0, 0)\n    }\n\n    function revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db() {\n        revert(0, 0)\n    }\n\n    function cleanup_t_uint160(value) -> cleaned {\n        cleaned := and(value, 0xffffffffffffffffffffffffffffffffffffffff)\n    }\n\n    function cleanup_t_address(value) -> cleaned {\n        cleaned := cleanup_t_uint160(value)\n    }\n\n    function validator_revert_t_address(value) {\n        if iszero(eq(value, cleanup_t_address(value))) { revert(0, 0) }\n    }\n\n    function abi_decode_t_address(offset, end) -> value {\n        value := calldataload(offset)\n        validator_revert_t_address(value)\n    }\n\n    function validator_revert_t_uint256(value) {\n        if iszero(eq(value, cleanup_t_uint256(value))) { revert(0, 0) }\n    }\n\n    function abi_decode_t_uint256(offset, end) -> value {\n        value := calldataload(offset)\n        validator_revert_t_uint256(value)\n    }\n\n    function abi_decode_tuple_t_addresst_uint256(headStart, dataEnd) -> value0, value1 {\n        if slt(sub(dataEnd, headStart), 64) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_address(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := 32\n\n            value1 := abi_decode_t_uint256(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function abi_decode_tuple_t_uint256t_uint256(headStart, dataEnd) -> value0, value1 {\n        if slt(sub(dataEnd, headStart), 64) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_uint256(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := 32\n\n            value1 := abi_decode_t_uint256(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function identity(value) -> ret {\n        ret := value\n    }\n\n    function convert_t_uint160_to_t_uint160(value) -> converted {\n        converted := cleanup_t_uint160(identity(cleanup_t_uint160(value)))\n    }\n\n    function convert_t_uint160_to_t_address(value) -> converted {\n        converted := convert_t_uint160_to_t_uint160(value)\n    }\n\n    function convert_t_contract$_IERC721_$677_to_t_address(value) -> converted {\n        converted := convert_t_uint160_to_t_address(value)\n    }\n\n    function abi_encode_t_contract$_IERC721_$677_to_t_address_fromStack(value, pos) {\n        mstore(pos, convert_t_contract$_IERC721_$677_to_t_address(value))\n    }\n\n    function abi_encode_tuple_t_contract$_IERC721_$677__to_t_address__fromStack_reversed(headStart , value0) -> tail {\n        tail := add(headStart, 32)\n\n        abi_encode_t_contract$_IERC721_$677_to_t_address_fromStack(value0,  add(headStart, 0))\n\n    }\n\n    function abi_decode_tuple_t_uint256t_uint256t_uint256(headStart, dataEnd) -> value0, value1, value2 {\n        if slt(sub(dataEnd, headStart), 96) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_uint256(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := 32\n\n            value1 := abi_decode_t_uint256(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := 64\n\n            value2 := abi_decode_t_uint256(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function abi_decode_tuple_t_address(headStart, dataEnd) -> value0 {\n        if slt(sub(dataEnd, headStart), 32) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_address(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function array_length_t_array$_t_uint256_$dyn_memory_ptr(value) -> length {\n\n        length := mload(value)\n\n    }\n\n    function array_storeLengthForEncoding_t_array$_t_uint256_$dyn_memory_ptr_fromStack(pos, length) -> updated_pos {\n        mstore(pos, length)\n        updated_pos := add(pos, 0x20)\n    }\n\n    function array_dataslot_t_array$_t_uint256_$dyn_memory_ptr(ptr) -> data {\n        data := ptr\n\n        data := add(ptr, 0x20)\n\n    }\n\n    function abi_encode_t_uint256_to_t_uint256(value, pos) {\n        mstore(pos, cleanup_t_uint256(value))\n    }\n\n    function abi_encodeUpdatedPos_t_uint256_to_t_uint256(value0, pos) -> updatedPos {\n        abi_encode_t_uint256_to_t_uint256(value0, pos)\n        updatedPos := add(pos, 0x20)\n    }\n\n    function array_nextElement_t_array$_t_uint256_$dyn_memory_ptr(ptr) -> next {\n        next := add(ptr, 0x20)\n    }\n\n    // uint256[] -> uint256[]\n    function abi_encode_t_array$_t_uint256_$dyn_memory_ptr_to_t_array$_t_uint256_$dyn_memory_ptr_fromStack(value, pos)  -> end  {\n        let length := array_length_t_array$_t_uint256_$dyn_memory_ptr(value)\n        pos := array_storeLengthForEncoding_t_array$_t_uint256_$dyn_memory_ptr_fromStack(pos, length)\n        let baseRef := array_dataslot_t_array$_t_uint256_$dyn_memory_ptr(value)\n        let srcPtr := baseRef\n        for { let i := 0 } lt(i, length) { i := add(i, 1) }\n        {\n            let elementValue0 := mload(srcPtr)\n            pos := abi_encodeUpdatedPos_t_uint256_to_t_uint256(elementValue0, pos)\n            srcPtr := array_nextElement_t_array$_t_uint256_$dyn_memory_ptr(srcPtr)\n        }\n        end := pos\n    }\n\n    function abi_encode_tuple_t_array$_t_uint256_$dyn_memory_ptr__to_t_array$_t_uint256_$dyn_memory_ptr__fromStack_reversed(headStart , value0) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_array$_t_uint256_$dyn_memory_ptr_to_t_array$_t_uint256_$dyn_memory_ptr_fromStack(value0,  tail)\n\n    }\n\n    function abi_encode_t_address_to_t_address_fromStack(value, pos) {\n        mstore(pos, cleanup_t_address(value))\n    }\n\n    function abi_encode_tuple_t_address__to_t_address__fromStack_reversed(headStart , value0) -> tail {\n        tail := add(headStart, 32)\n\n        abi_encode_t_address_to_t_address_fromStack(value0,  add(headStart, 0))\n\n    }\n\n    function abi_decode_tuple_t_uint256(headStart, dataEnd) -> value0 {\n        if slt(sub(dataEnd, headStart), 32) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_uint256(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function abi_encode_tuple_t_uint256_t_address_t_uint256_t_uint256_t_uint256__to_t_uint256_t_address_t_uint256_t_uint256_t_uint256__fromStack_reversed(headStart , value4, value3, value2, value1, value0) -> tail {\n        tail := add(headStart, 160)\n\n        abi_encode_t_uint256_to_t_uint256_fromStack(value0,  add(headStart, 0))\n\n        abi_encode_t_address_to_t_address_fromStack(value1,  add(headStart, 32))\n\n        abi_encode_t_uint256_to_t_uint256_fromStack(value2,  add(headStart, 64))\n\n        abi_encode_t_uint256_to_t_uint256_fromStack(value3,  add(headStart, 96))\n\n        abi_encode_t_uint256_to_t_uint256_fromStack(value4,  add(headStart, 128))\n\n    }\n\n    function convert_t_contract$_IERC20_$244_to_t_address(value) -> converted {\n        converted := convert_t_uint160_to_t_address(value)\n    }\n\n    function abi_encode_t_contract$_IERC20_$244_to_t_address_fromStack(value, pos) {\n        mstore(pos, convert_t_contract$_IERC20_$244_to_t_address(value))\n    }\n\n    function abi_encode_tuple_t_contract$_IERC20_$244__to_t_address__fromStack_reversed(headStart , value0) -> tail {\n        tail := add(headStart, 32)\n\n        abi_encode_t_contract$_IERC20_$244_to_t_address_fromStack(value0,  add(headStart, 0))\n\n    }\n\n    function abi_decode_tuple_t_uint256t_address(headStart, dataEnd) -> value0, value1 {\n        if slt(sub(dataEnd, headStart), 64) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_uint256(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := 32\n\n            value1 := abi_decode_t_address(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function cleanup_t_bool(value) -> cleaned {\n        cleaned := iszero(iszero(value))\n    }\n\n    function abi_encode_t_bool_to_t_bool_fromStack(value, pos) {\n        mstore(pos, cleanup_t_bool(value))\n    }\n\n    function abi_encode_tuple_t_bool__to_t_bool__fromStack_reversed(headStart , value0) -> tail {\n        tail := add(headStart, 32)\n\n        abi_encode_t_bool_to_t_bool_fromStack(value0,  add(headStart, 0))\n\n    }\n\n    function abi_decode_t_address_fromMemory(offset, end) -> value {\n        value := mload(offset)\n        validator_revert_t_address(value)\n    }\n\n    function abi_decode_tuple_t_address_fromMemory(headStart, dataEnd) -> value0 {\n        if slt(sub(dataEnd, headStart), 32) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_address_fromMemory(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, length) -> updated_pos {\n        mstore(pos, length)\n        updated_pos := add(pos, 0x20)\n    }\n\n    function store_literal_in_memory_1624d4f25969ee526147bd8655de287c38135e6ace26a92631ce497b2ca81bbe(memPtr) {\n\n        mstore(add(memPtr, 0), \"Can't stake nft you don't own!\")\n\n    }\n\n    function abi_encode_t_stringliteral_1624d4f25969ee526147bd8655de287c38135e6ace26a92631ce497b2ca81bbe_to_t_string_memory_ptr_fromStack(pos) -> end {\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, 30)\n        store_literal_in_memory_1624d4f25969ee526147bd8655de287c38135e6ace26a92631ce497b2ca81bbe(pos)\n        end := add(pos, 32)\n    }\n\n    function abi_encode_tuple_t_stringliteral_1624d4f25969ee526147bd8655de287c38135e6ace26a92631ce497b2ca81bbe__to_t_string_memory_ptr__fromStack_reversed(headStart ) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_stringliteral_1624d4f25969ee526147bd8655de287c38135e6ace26a92631ce497b2ca81bbe_to_t_string_memory_ptr_fromStack( tail)\n\n    }\n\n    function abi_encode_tuple_t_address_t_address_t_uint256__to_t_address_t_address_t_uint256__fromStack_reversed(headStart , value2, value1, value0) -> tail {\n        tail := add(headStart, 96)\n\n        abi_encode_t_address_to_t_address_fromStack(value0,  add(headStart, 0))\n\n        abi_encode_t_address_to_t_address_fromStack(value1,  add(headStart, 32))\n\n        abi_encode_t_uint256_to_t_uint256_fromStack(value2,  add(headStart, 64))\n\n    }\n\n    function panic_error_0x11() {\n        mstore(0, 35408467139433450592217433187231851964531694900788300625387963629091585785856)\n        mstore(4, 0x11)\n        revert(0, 0x24)\n    }\n\n    function increment_t_uint256(value) -> ret {\n        value := cleanup_t_uint256(value)\n        if eq(value, 0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff) { panic_error_0x11() }\n        ret := add(value, 1)\n    }\n\n    function abi_encode_tuple_t_uint256_t_uint256_t_uint256__to_t_uint256_t_uint256_t_uint256__fromStack_reversed(headStart , value2, value1, value0) -> tail {\n        tail := add(headStart, 96)\n\n        abi_encode_t_uint256_to_t_uint256_fromStack(value0,  add(headStart, 0))\n\n        abi_encode_t_uint256_to_t_uint256_fromStack(value1,  add(headStart, 32))\n\n        abi_encode_t_uint256_to_t_uint256_fromStack(value2,  add(headStart, 64))\n\n    }\n\n    function checked_sub_t_uint256(x, y) -> diff {\n        x := cleanup_t_uint256(x)\n        y := cleanup_t_uint256(y)\n        diff := sub(x, y)\n\n        if gt(diff, x) { panic_error_0x11() }\n\n    }\n\n    function panic_error_0x12() {\n        mstore(0, 35408467139433450592217433187231851964531694900788300625387963629091585785856)\n        mstore(4, 0x12)\n        revert(0, 0x24)\n    }\n\n    function checked_div_t_uint256(x, y) -> r {\n        x := cleanup_t_uint256(x)\n        y := cleanup_t_uint256(y)\n        if iszero(y) { panic_error_0x12() }\n\n        r := div(x, y)\n    }\n\n    function store_literal_in_memory_2c264ac290bec70a05ed24874b7a508841480fcc00576c7986fac4268cbefe0e(memPtr) {\n\n        mstore(add(memPtr, 0), \"Staking pool not ended yet!!!!\")\n\n    }\n\n    function abi_encode_t_stringliteral_2c264ac290bec70a05ed24874b7a508841480fcc00576c7986fac4268cbefe0e_to_t_string_memory_ptr_fromStack(pos) -> end {\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, 30)\n        store_literal_in_memory_2c264ac290bec70a05ed24874b7a508841480fcc00576c7986fac4268cbefe0e(pos)\n        end := add(pos, 32)\n    }\n\n    function abi_encode_tuple_t_stringliteral_2c264ac290bec70a05ed24874b7a508841480fcc00576c7986fac4268cbefe0e__to_t_string_memory_ptr__fromStack_reversed(headStart ) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_stringliteral_2c264ac290bec70a05ed24874b7a508841480fcc00576c7986fac4268cbefe0e_to_t_string_memory_ptr_fromStack( tail)\n\n    }\n\n    function store_literal_in_memory_e15a9850692d6708934a23063a6ddc95798c196bc7427dd1b63298ad85e9753c(memPtr) {\n\n        mstore(add(memPtr, 0), \"You are not owner of this NFT st\")\n\n        mstore(add(memPtr, 32), \"aking\")\n\n    }\n\n    function abi_encode_t_stringliteral_e15a9850692d6708934a23063a6ddc95798c196bc7427dd1b63298ad85e9753c_to_t_string_memory_ptr_fromStack(pos) -> end {\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, 37)\n        store_literal_in_memory_e15a9850692d6708934a23063a6ddc95798c196bc7427dd1b63298ad85e9753c(pos)\n        end := add(pos, 64)\n    }\n\n    function abi_encode_tuple_t_stringliteral_e15a9850692d6708934a23063a6ddc95798c196bc7427dd1b63298ad85e9753c__to_t_string_memory_ptr__fromStack_reversed(headStart ) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_stringliteral_e15a9850692d6708934a23063a6ddc95798c196bc7427dd1b63298ad85e9753c_to_t_string_memory_ptr_fromStack( tail)\n\n    }\n\n    function abi_encode_tuple_t_address_t_uint256__to_t_address_t_uint256__fromStack_reversed(headStart , value1, value0) -> tail {\n        tail := add(headStart, 64)\n\n        abi_encode_t_address_to_t_address_fromStack(value0,  add(headStart, 0))\n\n        abi_encode_t_uint256_to_t_uint256_fromStack(value1,  add(headStart, 32))\n\n    }\n\n    function validator_revert_t_bool(value) {\n        if iszero(eq(value, cleanup_t_bool(value))) { revert(0, 0) }\n    }\n\n    function abi_decode_t_bool_fromMemory(offset, end) -> value {\n        value := mload(offset)\n        validator_revert_t_bool(value)\n    }\n\n    function abi_decode_tuple_t_bool_fromMemory(headStart, dataEnd) -> value0 {\n        if slt(sub(dataEnd, headStart), 32) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_bool_fromMemory(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function abi_encode_tuple_t_uint256_t_uint256_t_uint256_t_uint256__to_t_uint256_t_uint256_t_uint256_t_uint256__fromStack_reversed(headStart , value3, value2, value1, value0) -> tail {\n        tail := add(headStart, 128)\n\n        abi_encode_t_uint256_to_t_uint256_fromStack(value0,  add(headStart, 0))\n\n        abi_encode_t_uint256_to_t_uint256_fromStack(value1,  add(headStart, 32))\n\n        abi_encode_t_uint256_to_t_uint256_fromStack(value2,  add(headStart, 64))\n\n        abi_encode_t_uint256_to_t_uint256_fromStack(value3,  add(headStart, 96))\n\n    }\n\n    function store_literal_in_memory_245f15ff17f551913a7a18385165551503906a406f905ac1c2437281a7cd0cfe(memPtr) {\n\n        mstore(add(memPtr, 0), \"Ownable: new owner is the zero a\")\n\n        mstore(add(memPtr, 32), \"ddress\")\n\n    }\n\n    function abi_encode_t_stringliteral_245f15ff17f551913a7a18385165551503906a406f905ac1c2437281a7cd0cfe_to_t_string_memory_ptr_fromStack(pos) -> end {\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, 38)\n        store_literal_in_memory_245f15ff17f551913a7a18385165551503906a406f905ac1c2437281a7cd0cfe(pos)\n        end := add(pos, 64)\n    }\n\n    function abi_encode_tuple_t_stringliteral_245f15ff17f551913a7a18385165551503906a406f905ac1c2437281a7cd0cfe__to_t_string_memory_ptr__fromStack_reversed(headStart ) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_stringliteral_245f15ff17f551913a7a18385165551503906a406f905ac1c2437281a7cd0cfe_to_t_string_memory_ptr_fromStack( tail)\n\n    }\n\n    function panic_error_0x32() {\n        mstore(0, 35408467139433450592217433187231851964531694900788300625387963629091585785856)\n        mstore(4, 0x32)\n        revert(0, 0x24)\n    }\n\n    function store_literal_in_memory_9924ebdf1add33d25d4ef888e16131f0a5687b0580a36c21b5c301a6c462effe(memPtr) {\n\n        mstore(add(memPtr, 0), \"Ownable: caller is not the owner\")\n\n    }\n\n    function abi_encode_t_stringliteral_9924ebdf1add33d25d4ef888e16131f0a5687b0580a36c21b5c301a6c462effe_to_t_string_memory_ptr_fromStack(pos) -> end {\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, 32)\n        store_literal_in_memory_9924ebdf1add33d25d4ef888e16131f0a5687b0580a36c21b5c301a6c462effe(pos)\n        end := add(pos, 32)\n    }\n\n    function abi_encode_tuple_t_stringliteral_9924ebdf1add33d25d4ef888e16131f0a5687b0580a36c21b5c301a6c462effe__to_t_string_memory_ptr__fromStack_reversed(headStart ) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_stringliteral_9924ebdf1add33d25d4ef888e16131f0a5687b0580a36c21b5c301a6c462effe_to_t_string_memory_ptr_fromStack( tail)\n\n    }\n\n}\n",
									"id": 10,
									"language": "Yul",
									"name": "#utility.yul"
								}
							],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "608060405234801561001057600080fd5b50600436106100cf5760003560e01c806378dba5941161008c578063d5a44f8611610066578063d5a44f8614610200578063f2fde38b14610234578063f7c618c114610250578063fbaca0861461026e576100cf565b806378dba5941461019657806379e5f7d7146101b25780638da5cb5b146101e2576100cf565b80632986c0e5146100d45780633af416d1146100f25780633f1069291461012257806351cecc8014610152578063715018a61461016e57806378b2e3a914610178575b600080fd5b6100dc61029e565b6040516100e99190610e45565b60405180910390f35b61010c60048036038101906101079190610eef565b6102a4565b6040516101199190610e45565b60405180910390f35b61013c60048036038101906101379190610eef565b6102d5565b6040516101499190610e45565b60405180910390f35b61016c60048036038101906101679190610f2f565b610306565b005b61017661063c565b005b610180610650565b60405161018d9190610fce565b60405180910390f35b6101b060048036038101906101ab9190610fe9565b610676565b005b6101cc60048036038101906101c7919061103c565b6109fd565b6040516101d99190611127565b60405180910390f35b6101ea610a9a565b6040516101f79190611158565b60405180910390f35b61021a60048036038101906102159190611173565b610ac3565b60405161022b9594939291906111a0565b60405180910390f35b61024e6004803603810190610249919061103c565b610b19565b005b610258610b9c565b6040516102659190611214565b60405180910390f35b6102886004803603810190610283919061122f565b610bc2565b604051610295919061128a565b60405180910390f35b60045481565b600860205281600052604060002081815481106102c057600080fd5b90600052602060002001600091509150505481565b600760205281600052604060002081815481106102f157600080fd5b90600052602060002001600091509150505481565b3373ffffffffffffffffffffffffffffffffffffffff16600260009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16636352211e846040518263ffffffff1660e01b81526004016103789190610e45565b602060405180830381865afa158015610395573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906103b991906112ba565b73ffffffffffffffffffffffffffffffffffffffff161461040f576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161040690611344565b60405180910390fd5b6040518060a0016040528060045481526020013373ffffffffffffffffffffffffffffffffffffffff168152602001838152602001828152602001428152506006600060045481526020019081526020016000206000820151816000015560208201518160010160006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff160217905550604082015181600201556060820151816003015560808201518160040155905050600760003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000206004549080600181540180825580915050600190039060005260206000200160009091909190915055600260009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff166323b872dd3330856040518463ffffffff1660e01b815260040161059c93929190611364565b600060405180830381600087803b1580156105b657600080fd5b505af11580156105ca573d6000803e3d6000fd5b50505050600460008154809291906105e1906113ca565b91905055503373ffffffffffffffffffffffffffffffffffffffff167ff556991011e831bcfac4f406d547e5e32cdd98267efab83935230d5f8d02c44683834260405161063093929190611412565b60405180910390a25050565b610644610c9f565b61064e6000610d1d565b565b600260009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1681565b806018603c8060066000888152602001908152602001600020600401544261069e9190611449565b6106a891906114ac565b6106b291906114ac565b6106bc91906114ac565b10156106fd576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016106f490611529565b60405180910390fd5b3373ffffffffffffffffffffffffffffffffffffffff166006600085815260200190815260200160002060010160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16146107a1576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610798906115bb565b60405180910390fd5b600660008481526020019081526020016000206000808201600090556001820160006101000a81549073ffffffffffffffffffffffffffffffffffffffff02191690556002820160009055600382016000905560048201600090555050600860003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020839080600181540180825580915050600190039060005260206000200160009091909190915055600260009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff166323b872dd3033856040518463ffffffff1660e01b81526004016108c393929190611364565b600060405180830381600087803b1580156108dd57600080fd5b505af11580156108f1573d6000803e3d6000fd5b50505050600061090082610de1565b9050600360009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1663a9059cbb33836040518363ffffffff1660e01b815260040161095f9291906115db565b6020604051808303816000875af115801561097e573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906109a29190611630565b503373ffffffffffffffffffffffffffffffffffffffff167ff74c9f1985016ff6aa83c3fd81e31d0be3b194f205ae5e1b57f5bd74ad28e4cf848442856040516109ef949392919061165d565b60405180910390a250505050565b60606000600760008473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020805480602002602001604051908101604052809291908181526020018280548015610a8a57602002820191906000526020600020905b815481526020019060010190808311610a76575b5050505050905080915050919050565b60008060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff16905090565b60066020528060005260406000206000915090508060000154908060010160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff16908060020154908060030154908060040154905085565b610b21610c9f565b600073ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff1603610b90576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610b8790611714565b60405180910390fd5b610b9981610d1d565b50565b600360009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1681565b600080600090505b600860008473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002080549050811015610c935783600860008573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000208281548110610c6657610c65611734565b5b906000526020600020015403610c80576001915050610c99565b8080610c8b906113ca565b915050610bca565b50600090505b92915050565b610ca7610e24565b73ffffffffffffffffffffffffffffffffffffffff16610cc5610a9a565b73ffffffffffffffffffffffffffffffffffffffff1614610d1b576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610d12906117af565b60405180910390fd5b565b60008060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff169050816000806101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055508173ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff167f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e060405160405180910390a35050565b600060078203610df5576103e89050610e1f565b600e8203610e0757610bb89050610e1f565b601e8203610e19576113889050610e1f565b61271090505b919050565b600033905090565b6000819050919050565b610e3f81610e2c565b82525050565b6000602082019050610e5a6000830184610e36565b92915050565b600080fd5b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b6000610e9082610e65565b9050919050565b610ea081610e85565b8114610eab57600080fd5b50565b600081359050610ebd81610e97565b92915050565b610ecc81610e2c565b8114610ed757600080fd5b50565b600081359050610ee981610ec3565b92915050565b60008060408385031215610f0657610f05610e60565b5b6000610f1485828601610eae565b9250506020610f2585828601610eda565b9150509250929050565b60008060408385031215610f4657610f45610e60565b5b6000610f5485828601610eda565b9250506020610f6585828601610eda565b9150509250929050565b6000819050919050565b6000610f94610f8f610f8a84610e65565b610f6f565b610e65565b9050919050565b6000610fa682610f79565b9050919050565b6000610fb882610f9b565b9050919050565b610fc881610fad565b82525050565b6000602082019050610fe36000830184610fbf565b92915050565b60008060006060848603121561100257611001610e60565b5b600061101086828701610eda565b935050602061102186828701610eda565b925050604061103286828701610eda565b9150509250925092565b60006020828403121561105257611051610e60565b5b600061106084828501610eae565b91505092915050565b600081519050919050565b600082825260208201905092915050565b6000819050602082019050919050565b61109e81610e2c565b82525050565b60006110b08383611095565b60208301905092915050565b6000602082019050919050565b60006110d482611069565b6110de8185611074565b93506110e983611085565b8060005b8381101561111a57815161110188826110a4565b975061110c836110bc565b9250506001810190506110ed565b5085935050505092915050565b6000602082019050818103600083015261114181846110c9565b905092915050565b61115281610e85565b82525050565b600060208201905061116d6000830184611149565b92915050565b60006020828403121561118957611188610e60565b5b600061119784828501610eda565b91505092915050565b600060a0820190506111b56000830188610e36565b6111c26020830187611149565b6111cf6040830186610e36565b6111dc6060830185610e36565b6111e96080830184610e36565b9695505050505050565b60006111fe82610f9b565b9050919050565b61120e816111f3565b82525050565b60006020820190506112296000830184611205565b92915050565b6000806040838503121561124657611245610e60565b5b600061125485828601610eda565b925050602061126585828601610eae565b9150509250929050565b60008115159050919050565b6112848161126f565b82525050565b600060208201905061129f600083018461127b565b92915050565b6000815190506112b481610e97565b92915050565b6000602082840312156112d0576112cf610e60565b5b60006112de848285016112a5565b91505092915050565b600082825260208201905092915050565b7f43616e2774207374616b65206e667420796f7520646f6e2774206f776e210000600082015250565b600061132e601e836112e7565b9150611339826112f8565b602082019050919050565b6000602082019050818103600083015261135d81611321565b9050919050565b60006060820190506113796000830186611149565b6113866020830185611149565b6113936040830184610e36565b949350505050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601160045260246000fd5b60006113d582610e2c565b91507fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff82036114075761140661139b565b5b600182019050919050565b60006060820190506114276000830186610e36565b6114346020830185610e36565b6114416040830184610e36565b949350505050565b600061145482610e2c565b915061145f83610e2c565b92508282039050818111156114775761147661139b565b5b92915050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601260045260246000fd5b60006114b782610e2c565b91506114c283610e2c565b9250826114d2576114d161147d565b5b828204905092915050565b7f5374616b696e6720706f6f6c206e6f7420656e64656420796574212121210000600082015250565b6000611513601e836112e7565b915061151e826114dd565b602082019050919050565b6000602082019050818103600083015261154281611506565b9050919050565b7f596f7520617265206e6f74206f776e6572206f662074686973204e465420737460008201527f616b696e67000000000000000000000000000000000000000000000000000000602082015250565b60006115a56025836112e7565b91506115b082611549565b604082019050919050565b600060208201905081810360008301526115d481611598565b9050919050565b60006040820190506115f06000830185611149565b6115fd6020830184610e36565b9392505050565b61160d8161126f565b811461161857600080fd5b50565b60008151905061162a81611604565b92915050565b60006020828403121561164657611645610e60565b5b60006116548482850161161b565b91505092915050565b60006080820190506116726000830187610e36565b61167f6020830186610e36565b61168c6040830185610e36565b6116996060830184610e36565b95945050505050565b7f4f776e61626c653a206e6577206f776e657220697320746865207a65726f206160008201527f6464726573730000000000000000000000000000000000000000000000000000602082015250565b60006116fe6026836112e7565b9150611709826116a2565b604082019050919050565b6000602082019050818103600083015261172d816116f1565b9050919050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052603260045260246000fd5b7f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e6572600082015250565b60006117996020836112e7565b91506117a482611763565b602082019050919050565b600060208201905081810360008301526117c88161178c565b905091905056fea2646970667358221220f766f723a34992ff41025cc40b3104962bd119d7693a60f8aa526b3ba44c1cac64736f6c63430008120033",
							"opcodes": "PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH2 0x10 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x4 CALLDATASIZE LT PUSH2 0xCF JUMPI PUSH1 0x0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0x78DBA594 GT PUSH2 0x8C JUMPI DUP1 PUSH4 0xD5A44F86 GT PUSH2 0x66 JUMPI DUP1 PUSH4 0xD5A44F86 EQ PUSH2 0x200 JUMPI DUP1 PUSH4 0xF2FDE38B EQ PUSH2 0x234 JUMPI DUP1 PUSH4 0xF7C618C1 EQ PUSH2 0x250 JUMPI DUP1 PUSH4 0xFBACA086 EQ PUSH2 0x26E JUMPI PUSH2 0xCF JUMP JUMPDEST DUP1 PUSH4 0x78DBA594 EQ PUSH2 0x196 JUMPI DUP1 PUSH4 0x79E5F7D7 EQ PUSH2 0x1B2 JUMPI DUP1 PUSH4 0x8DA5CB5B EQ PUSH2 0x1E2 JUMPI PUSH2 0xCF JUMP JUMPDEST DUP1 PUSH4 0x2986C0E5 EQ PUSH2 0xD4 JUMPI DUP1 PUSH4 0x3AF416D1 EQ PUSH2 0xF2 JUMPI DUP1 PUSH4 0x3F106929 EQ PUSH2 0x122 JUMPI DUP1 PUSH4 0x51CECC80 EQ PUSH2 0x152 JUMPI DUP1 PUSH4 0x715018A6 EQ PUSH2 0x16E JUMPI DUP1 PUSH4 0x78B2E3A9 EQ PUSH2 0x178 JUMPI JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0xDC PUSH2 0x29E JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0xE9 SWAP2 SWAP1 PUSH2 0xE45 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x10C PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x107 SWAP2 SWAP1 PUSH2 0xEEF JUMP JUMPDEST PUSH2 0x2A4 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x119 SWAP2 SWAP1 PUSH2 0xE45 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x13C PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x137 SWAP2 SWAP1 PUSH2 0xEEF JUMP JUMPDEST PUSH2 0x2D5 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x149 SWAP2 SWAP1 PUSH2 0xE45 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x16C PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x167 SWAP2 SWAP1 PUSH2 0xF2F JUMP JUMPDEST PUSH2 0x306 JUMP JUMPDEST STOP JUMPDEST PUSH2 0x176 PUSH2 0x63C JUMP JUMPDEST STOP JUMPDEST PUSH2 0x180 PUSH2 0x650 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x18D SWAP2 SWAP1 PUSH2 0xFCE JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x1B0 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x1AB SWAP2 SWAP1 PUSH2 0xFE9 JUMP JUMPDEST PUSH2 0x676 JUMP JUMPDEST STOP JUMPDEST PUSH2 0x1CC PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x1C7 SWAP2 SWAP1 PUSH2 0x103C JUMP JUMPDEST PUSH2 0x9FD JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x1D9 SWAP2 SWAP1 PUSH2 0x1127 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x1EA PUSH2 0xA9A JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x1F7 SWAP2 SWAP1 PUSH2 0x1158 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x21A PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x215 SWAP2 SWAP1 PUSH2 0x1173 JUMP JUMPDEST PUSH2 0xAC3 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x22B SWAP6 SWAP5 SWAP4 SWAP3 SWAP2 SWAP1 PUSH2 0x11A0 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x24E PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x249 SWAP2 SWAP1 PUSH2 0x103C JUMP JUMPDEST PUSH2 0xB19 JUMP JUMPDEST STOP JUMPDEST PUSH2 0x258 PUSH2 0xB9C JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x265 SWAP2 SWAP1 PUSH2 0x1214 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x288 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x283 SWAP2 SWAP1 PUSH2 0x122F JUMP JUMPDEST PUSH2 0xBC2 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x295 SWAP2 SWAP1 PUSH2 0x128A JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH1 0x4 SLOAD DUP2 JUMP JUMPDEST PUSH1 0x8 PUSH1 0x20 MSTORE DUP2 PUSH1 0x0 MSTORE PUSH1 0x40 PUSH1 0x0 KECCAK256 DUP2 DUP2 SLOAD DUP2 LT PUSH2 0x2C0 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 ADD PUSH1 0x0 SWAP2 POP SWAP2 POP POP SLOAD DUP2 JUMP JUMPDEST PUSH1 0x7 PUSH1 0x20 MSTORE DUP2 PUSH1 0x0 MSTORE PUSH1 0x40 PUSH1 0x0 KECCAK256 DUP2 DUP2 SLOAD DUP2 LT PUSH2 0x2F1 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 ADD PUSH1 0x0 SWAP2 POP SWAP2 POP POP SLOAD DUP2 JUMP JUMPDEST CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH1 0x2 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH4 0x6352211E DUP5 PUSH1 0x40 MLOAD DUP3 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x378 SWAP2 SWAP1 PUSH2 0xE45 JUMP JUMPDEST PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0x395 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x3B9 SWAP2 SWAP1 PUSH2 0x12BA JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ PUSH2 0x40F JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x406 SWAP1 PUSH2 0x1344 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x40 MLOAD DUP1 PUSH1 0xA0 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0x4 SLOAD DUP2 MSTORE PUSH1 0x20 ADD CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD DUP4 DUP2 MSTORE PUSH1 0x20 ADD DUP3 DUP2 MSTORE PUSH1 0x20 ADD TIMESTAMP DUP2 MSTORE POP PUSH1 0x6 PUSH1 0x0 PUSH1 0x4 SLOAD DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 DUP3 ADD MLOAD DUP2 PUSH1 0x0 ADD SSTORE PUSH1 0x20 DUP3 ADD MLOAD DUP2 PUSH1 0x1 ADD PUSH1 0x0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP PUSH1 0x40 DUP3 ADD MLOAD DUP2 PUSH1 0x2 ADD SSTORE PUSH1 0x60 DUP3 ADD MLOAD DUP2 PUSH1 0x3 ADD SSTORE PUSH1 0x80 DUP3 ADD MLOAD DUP2 PUSH1 0x4 ADD SSTORE SWAP1 POP POP PUSH1 0x7 PUSH1 0x0 CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x4 SLOAD SWAP1 DUP1 PUSH1 0x1 DUP2 SLOAD ADD DUP1 DUP3 SSTORE DUP1 SWAP2 POP POP PUSH1 0x1 SWAP1 SUB SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 ADD PUSH1 0x0 SWAP1 SWAP2 SWAP1 SWAP2 SWAP1 SWAP2 POP SSTORE PUSH1 0x2 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH4 0x23B872DD CALLER ADDRESS DUP6 PUSH1 0x40 MLOAD DUP5 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x59C SWAP4 SWAP3 SWAP2 SWAP1 PUSH2 0x1364 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH1 0x0 DUP8 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0x5B6 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS CALL ISZERO DUP1 ISZERO PUSH2 0x5CA JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x4 PUSH1 0x0 DUP2 SLOAD DUP1 SWAP3 SWAP2 SWAP1 PUSH2 0x5E1 SWAP1 PUSH2 0x13CA JUMP JUMPDEST SWAP2 SWAP1 POP SSTORE POP CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0xF556991011E831BCFAC4F406D547E5E32CDD98267EFAB83935230D5F8D02C446 DUP4 DUP4 TIMESTAMP PUSH1 0x40 MLOAD PUSH2 0x630 SWAP4 SWAP3 SWAP2 SWAP1 PUSH2 0x1412 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG2 POP POP JUMP JUMPDEST PUSH2 0x644 PUSH2 0xC9F JUMP JUMPDEST PUSH2 0x64E PUSH1 0x0 PUSH2 0xD1D JUMP JUMPDEST JUMP JUMPDEST PUSH1 0x2 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 JUMP JUMPDEST DUP1 PUSH1 0x18 PUSH1 0x3C DUP1 PUSH1 0x6 PUSH1 0x0 DUP9 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x4 ADD SLOAD TIMESTAMP PUSH2 0x69E SWAP2 SWAP1 PUSH2 0x1449 JUMP JUMPDEST PUSH2 0x6A8 SWAP2 SWAP1 PUSH2 0x14AC JUMP JUMPDEST PUSH2 0x6B2 SWAP2 SWAP1 PUSH2 0x14AC JUMP JUMPDEST PUSH2 0x6BC SWAP2 SWAP1 PUSH2 0x14AC JUMP JUMPDEST LT ISZERO PUSH2 0x6FD JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x6F4 SWAP1 PUSH2 0x1529 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH1 0x6 PUSH1 0x0 DUP6 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x1 ADD PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ PUSH2 0x7A1 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x798 SWAP1 PUSH2 0x15BB JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x6 PUSH1 0x0 DUP5 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 DUP1 DUP3 ADD PUSH1 0x0 SWAP1 SSTORE PUSH1 0x1 DUP3 ADD PUSH1 0x0 PUSH2 0x100 EXP DUP2 SLOAD SWAP1 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 SSTORE PUSH1 0x2 DUP3 ADD PUSH1 0x0 SWAP1 SSTORE PUSH1 0x3 DUP3 ADD PUSH1 0x0 SWAP1 SSTORE PUSH1 0x4 DUP3 ADD PUSH1 0x0 SWAP1 SSTORE POP POP PUSH1 0x8 PUSH1 0x0 CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 DUP4 SWAP1 DUP1 PUSH1 0x1 DUP2 SLOAD ADD DUP1 DUP3 SSTORE DUP1 SWAP2 POP POP PUSH1 0x1 SWAP1 SUB SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 ADD PUSH1 0x0 SWAP1 SWAP2 SWAP1 SWAP2 SWAP1 SWAP2 POP SSTORE PUSH1 0x2 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH4 0x23B872DD ADDRESS CALLER DUP6 PUSH1 0x40 MLOAD DUP5 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x8C3 SWAP4 SWAP3 SWAP2 SWAP1 PUSH2 0x1364 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH1 0x0 DUP8 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0x8DD JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS CALL ISZERO DUP1 ISZERO PUSH2 0x8F1 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x0 PUSH2 0x900 DUP3 PUSH2 0xDE1 JUMP JUMPDEST SWAP1 POP PUSH1 0x3 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH4 0xA9059CBB CALLER DUP4 PUSH1 0x40 MLOAD DUP4 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x95F SWAP3 SWAP2 SWAP1 PUSH2 0x15DB JUMP JUMPDEST PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH1 0x0 DUP8 GAS CALL ISZERO DUP1 ISZERO PUSH2 0x97E JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x9A2 SWAP2 SWAP1 PUSH2 0x1630 JUMP JUMPDEST POP CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0xF74C9F1985016FF6AA83C3FD81E31D0BE3B194F205AE5E1B57F5BD74AD28E4CF DUP5 DUP5 TIMESTAMP DUP6 PUSH1 0x40 MLOAD PUSH2 0x9EF SWAP5 SWAP4 SWAP3 SWAP2 SWAP1 PUSH2 0x165D JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG2 POP POP POP POP JUMP JUMPDEST PUSH1 0x60 PUSH1 0x0 PUSH1 0x7 PUSH1 0x0 DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 DUP1 SLOAD DUP1 PUSH1 0x20 MUL PUSH1 0x20 ADD PUSH1 0x40 MLOAD SWAP1 DUP2 ADD PUSH1 0x40 MSTORE DUP1 SWAP3 SWAP2 SWAP1 DUP2 DUP2 MSTORE PUSH1 0x20 ADD DUP3 DUP1 SLOAD DUP1 ISZERO PUSH2 0xA8A JUMPI PUSH1 0x20 MUL DUP3 ADD SWAP2 SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 JUMPDEST DUP2 SLOAD DUP2 MSTORE PUSH1 0x20 ADD SWAP1 PUSH1 0x1 ADD SWAP1 DUP1 DUP4 GT PUSH2 0xA76 JUMPI JUMPDEST POP POP POP POP POP SWAP1 POP DUP1 SWAP2 POP POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x6 PUSH1 0x20 MSTORE DUP1 PUSH1 0x0 MSTORE PUSH1 0x40 PUSH1 0x0 KECCAK256 PUSH1 0x0 SWAP2 POP SWAP1 POP DUP1 PUSH1 0x0 ADD SLOAD SWAP1 DUP1 PUSH1 0x1 ADD PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 DUP1 PUSH1 0x2 ADD SLOAD SWAP1 DUP1 PUSH1 0x3 ADD SLOAD SWAP1 DUP1 PUSH1 0x4 ADD SLOAD SWAP1 POP DUP6 JUMP JUMPDEST PUSH2 0xB21 PUSH2 0xC9F JUMP JUMPDEST PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0xB90 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xB87 SWAP1 PUSH2 0x1714 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0xB99 DUP2 PUSH2 0xD1D JUMP JUMPDEST POP JUMP JUMPDEST PUSH1 0x3 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 SWAP1 POP JUMPDEST PUSH1 0x8 PUSH1 0x0 DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 DUP1 SLOAD SWAP1 POP DUP2 LT ISZERO PUSH2 0xC93 JUMPI DUP4 PUSH1 0x8 PUSH1 0x0 DUP6 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 DUP3 DUP2 SLOAD DUP2 LT PUSH2 0xC66 JUMPI PUSH2 0xC65 PUSH2 0x1734 JUMP JUMPDEST JUMPDEST SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 ADD SLOAD SUB PUSH2 0xC80 JUMPI PUSH1 0x1 SWAP2 POP POP PUSH2 0xC99 JUMP JUMPDEST DUP1 DUP1 PUSH2 0xC8B SWAP1 PUSH2 0x13CA JUMP JUMPDEST SWAP2 POP POP PUSH2 0xBCA JUMP JUMPDEST POP PUSH1 0x0 SWAP1 POP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH2 0xCA7 PUSH2 0xE24 JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH2 0xCC5 PUSH2 0xA9A JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ PUSH2 0xD1B JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xD12 SWAP1 PUSH2 0x17AF JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 POP DUP2 PUSH1 0x0 DUP1 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0x8BE0079C531659141344CD1FD0A4F28419497F9722A3DAAFE3B4186F6B6457E0 PUSH1 0x40 MLOAD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x7 DUP3 SUB PUSH2 0xDF5 JUMPI PUSH2 0x3E8 SWAP1 POP PUSH2 0xE1F JUMP JUMPDEST PUSH1 0xE DUP3 SUB PUSH2 0xE07 JUMPI PUSH2 0xBB8 SWAP1 POP PUSH2 0xE1F JUMP JUMPDEST PUSH1 0x1E DUP3 SUB PUSH2 0xE19 JUMPI PUSH2 0x1388 SWAP1 POP PUSH2 0xE1F JUMP JUMPDEST PUSH2 0x2710 SWAP1 POP JUMPDEST SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 CALLER SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x0 DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0xE3F DUP2 PUSH2 0xE2C JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0xE5A PUSH1 0x0 DUP4 ADD DUP5 PUSH2 0xE36 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP3 AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0xE90 DUP3 PUSH2 0xE65 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0xEA0 DUP2 PUSH2 0xE85 JUMP JUMPDEST DUP2 EQ PUSH2 0xEAB JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH1 0x0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0xEBD DUP2 PUSH2 0xE97 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH2 0xECC DUP2 PUSH2 0xE2C JUMP JUMPDEST DUP2 EQ PUSH2 0xED7 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH1 0x0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0xEE9 DUP2 PUSH2 0xEC3 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0xF06 JUMPI PUSH2 0xF05 PUSH2 0xE60 JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0xF14 DUP6 DUP3 DUP7 ADD PUSH2 0xEAE JUMP JUMPDEST SWAP3 POP POP PUSH1 0x20 PUSH2 0xF25 DUP6 DUP3 DUP7 ADD PUSH2 0xEDA JUMP JUMPDEST SWAP2 POP POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0xF46 JUMPI PUSH2 0xF45 PUSH2 0xE60 JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0xF54 DUP6 DUP3 DUP7 ADD PUSH2 0xEDA JUMP JUMPDEST SWAP3 POP POP PUSH1 0x20 PUSH2 0xF65 DUP6 DUP3 DUP7 ADD PUSH2 0xEDA JUMP JUMPDEST SWAP2 POP POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0xF94 PUSH2 0xF8F PUSH2 0xF8A DUP5 PUSH2 0xE65 JUMP JUMPDEST PUSH2 0xF6F JUMP JUMPDEST PUSH2 0xE65 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0xFA6 DUP3 PUSH2 0xF79 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0xFB8 DUP3 PUSH2 0xF9B JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0xFC8 DUP2 PUSH2 0xFAD JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0xFE3 PUSH1 0x0 DUP4 ADD DUP5 PUSH2 0xFBF JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 PUSH1 0x60 DUP5 DUP7 SUB SLT ISZERO PUSH2 0x1002 JUMPI PUSH2 0x1001 PUSH2 0xE60 JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0x1010 DUP7 DUP3 DUP8 ADD PUSH2 0xEDA JUMP JUMPDEST SWAP4 POP POP PUSH1 0x20 PUSH2 0x1021 DUP7 DUP3 DUP8 ADD PUSH2 0xEDA JUMP JUMPDEST SWAP3 POP POP PUSH1 0x40 PUSH2 0x1032 DUP7 DUP3 DUP8 ADD PUSH2 0xEDA JUMP JUMPDEST SWAP2 POP POP SWAP3 POP SWAP3 POP SWAP3 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x1052 JUMPI PUSH2 0x1051 PUSH2 0xE60 JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0x1060 DUP5 DUP3 DUP6 ADD PUSH2 0xEAE JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 MLOAD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP3 DUP3 MSTORE PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 SWAP1 POP PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x109E DUP2 PUSH2 0xE2C JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x10B0 DUP4 DUP4 PUSH2 0x1095 JUMP JUMPDEST PUSH1 0x20 DUP4 ADD SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x10D4 DUP3 PUSH2 0x1069 JUMP JUMPDEST PUSH2 0x10DE DUP2 DUP6 PUSH2 0x1074 JUMP JUMPDEST SWAP4 POP PUSH2 0x10E9 DUP4 PUSH2 0x1085 JUMP JUMPDEST DUP1 PUSH1 0x0 JUMPDEST DUP4 DUP2 LT ISZERO PUSH2 0x111A JUMPI DUP2 MLOAD PUSH2 0x1101 DUP9 DUP3 PUSH2 0x10A4 JUMP JUMPDEST SWAP8 POP PUSH2 0x110C DUP4 PUSH2 0x10BC JUMP JUMPDEST SWAP3 POP POP PUSH1 0x1 DUP2 ADD SWAP1 POP PUSH2 0x10ED JUMP JUMPDEST POP DUP6 SWAP4 POP POP POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x1141 DUP2 DUP5 PUSH2 0x10C9 JUMP JUMPDEST SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH2 0x1152 DUP2 PUSH2 0xE85 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x116D PUSH1 0x0 DUP4 ADD DUP5 PUSH2 0x1149 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x1189 JUMPI PUSH2 0x1188 PUSH2 0xE60 JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0x1197 DUP5 DUP3 DUP6 ADD PUSH2 0xEDA JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0xA0 DUP3 ADD SWAP1 POP PUSH2 0x11B5 PUSH1 0x0 DUP4 ADD DUP9 PUSH2 0xE36 JUMP JUMPDEST PUSH2 0x11C2 PUSH1 0x20 DUP4 ADD DUP8 PUSH2 0x1149 JUMP JUMPDEST PUSH2 0x11CF PUSH1 0x40 DUP4 ADD DUP7 PUSH2 0xE36 JUMP JUMPDEST PUSH2 0x11DC PUSH1 0x60 DUP4 ADD DUP6 PUSH2 0xE36 JUMP JUMPDEST PUSH2 0x11E9 PUSH1 0x80 DUP4 ADD DUP5 PUSH2 0xE36 JUMP JUMPDEST SWAP7 SWAP6 POP POP POP POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x11FE DUP3 PUSH2 0xF9B JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x120E DUP2 PUSH2 0x11F3 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x1229 PUSH1 0x0 DUP4 ADD DUP5 PUSH2 0x1205 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x1246 JUMPI PUSH2 0x1245 PUSH2 0xE60 JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0x1254 DUP6 DUP3 DUP7 ADD PUSH2 0xEDA JUMP JUMPDEST SWAP3 POP POP PUSH1 0x20 PUSH2 0x1265 DUP6 DUP3 DUP7 ADD PUSH2 0xEAE JUMP JUMPDEST SWAP2 POP POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP2 ISZERO ISZERO SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x1284 DUP2 PUSH2 0x126F JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x129F PUSH1 0x0 DUP4 ADD DUP5 PUSH2 0x127B JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 MLOAD SWAP1 POP PUSH2 0x12B4 DUP2 PUSH2 0xE97 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x12D0 JUMPI PUSH2 0x12CF PUSH2 0xE60 JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0x12DE DUP5 DUP3 DUP6 ADD PUSH2 0x12A5 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP3 DUP3 MSTORE PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH32 0x43616E2774207374616B65206E667420796F7520646F6E2774206F776E210000 PUSH1 0x0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x132E PUSH1 0x1E DUP4 PUSH2 0x12E7 JUMP JUMPDEST SWAP2 POP PUSH2 0x1339 DUP3 PUSH2 0x12F8 JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x135D DUP2 PUSH2 0x1321 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x60 DUP3 ADD SWAP1 POP PUSH2 0x1379 PUSH1 0x0 DUP4 ADD DUP7 PUSH2 0x1149 JUMP JUMPDEST PUSH2 0x1386 PUSH1 0x20 DUP4 ADD DUP6 PUSH2 0x1149 JUMP JUMPDEST PUSH2 0x1393 PUSH1 0x40 DUP4 ADD DUP5 PUSH2 0xE36 JUMP JUMPDEST SWAP5 SWAP4 POP POP POP POP JUMP JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x11 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x0 PUSH2 0x13D5 DUP3 PUSH2 0xE2C JUMP JUMPDEST SWAP2 POP PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP3 SUB PUSH2 0x1407 JUMPI PUSH2 0x1406 PUSH2 0x139B JUMP JUMPDEST JUMPDEST PUSH1 0x1 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x60 DUP3 ADD SWAP1 POP PUSH2 0x1427 PUSH1 0x0 DUP4 ADD DUP7 PUSH2 0xE36 JUMP JUMPDEST PUSH2 0x1434 PUSH1 0x20 DUP4 ADD DUP6 PUSH2 0xE36 JUMP JUMPDEST PUSH2 0x1441 PUSH1 0x40 DUP4 ADD DUP5 PUSH2 0xE36 JUMP JUMPDEST SWAP5 SWAP4 POP POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x1454 DUP3 PUSH2 0xE2C JUMP JUMPDEST SWAP2 POP PUSH2 0x145F DUP4 PUSH2 0xE2C JUMP JUMPDEST SWAP3 POP DUP3 DUP3 SUB SWAP1 POP DUP2 DUP2 GT ISZERO PUSH2 0x1477 JUMPI PUSH2 0x1476 PUSH2 0x139B JUMP JUMPDEST JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x12 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x0 PUSH2 0x14B7 DUP3 PUSH2 0xE2C JUMP JUMPDEST SWAP2 POP PUSH2 0x14C2 DUP4 PUSH2 0xE2C JUMP JUMPDEST SWAP3 POP DUP3 PUSH2 0x14D2 JUMPI PUSH2 0x14D1 PUSH2 0x147D JUMP JUMPDEST JUMPDEST DUP3 DUP3 DIV SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH32 0x5374616B696E6720706F6F6C206E6F7420656E64656420796574212121210000 PUSH1 0x0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x1513 PUSH1 0x1E DUP4 PUSH2 0x12E7 JUMP JUMPDEST SWAP2 POP PUSH2 0x151E DUP3 PUSH2 0x14DD JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x1542 DUP2 PUSH2 0x1506 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x596F7520617265206E6F74206F776E6572206F662074686973204E4654207374 PUSH1 0x0 DUP3 ADD MSTORE PUSH32 0x616B696E67000000000000000000000000000000000000000000000000000000 PUSH1 0x20 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x15A5 PUSH1 0x25 DUP4 PUSH2 0x12E7 JUMP JUMPDEST SWAP2 POP PUSH2 0x15B0 DUP3 PUSH2 0x1549 JUMP JUMPDEST PUSH1 0x40 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x15D4 DUP2 PUSH2 0x1598 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x40 DUP3 ADD SWAP1 POP PUSH2 0x15F0 PUSH1 0x0 DUP4 ADD DUP6 PUSH2 0x1149 JUMP JUMPDEST PUSH2 0x15FD PUSH1 0x20 DUP4 ADD DUP5 PUSH2 0xE36 JUMP JUMPDEST SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH2 0x160D DUP2 PUSH2 0x126F JUMP JUMPDEST DUP2 EQ PUSH2 0x1618 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH1 0x0 DUP2 MLOAD SWAP1 POP PUSH2 0x162A DUP2 PUSH2 0x1604 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x1646 JUMPI PUSH2 0x1645 PUSH2 0xE60 JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0x1654 DUP5 DUP3 DUP6 ADD PUSH2 0x161B JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x80 DUP3 ADD SWAP1 POP PUSH2 0x1672 PUSH1 0x0 DUP4 ADD DUP8 PUSH2 0xE36 JUMP JUMPDEST PUSH2 0x167F PUSH1 0x20 DUP4 ADD DUP7 PUSH2 0xE36 JUMP JUMPDEST PUSH2 0x168C PUSH1 0x40 DUP4 ADD DUP6 PUSH2 0xE36 JUMP JUMPDEST PUSH2 0x1699 PUSH1 0x60 DUP4 ADD DUP5 PUSH2 0xE36 JUMP JUMPDEST SWAP6 SWAP5 POP POP POP POP POP JUMP JUMPDEST PUSH32 0x4F776E61626C653A206E6577206F776E657220697320746865207A65726F2061 PUSH1 0x0 DUP3 ADD MSTORE PUSH32 0x6464726573730000000000000000000000000000000000000000000000000000 PUSH1 0x20 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x16FE PUSH1 0x26 DUP4 PUSH2 0x12E7 JUMP JUMPDEST SWAP2 POP PUSH2 0x1709 DUP3 PUSH2 0x16A2 JUMP JUMPDEST PUSH1 0x40 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x172D DUP2 PUSH2 0x16F1 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x32 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH32 0x4F776E61626C653A2063616C6C6572206973206E6F7420746865206F776E6572 PUSH1 0x0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x1799 PUSH1 0x20 DUP4 PUSH2 0x12E7 JUMP JUMPDEST SWAP2 POP PUSH2 0x17A4 DUP3 PUSH2 0x1763 JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x17C8 DUP2 PUSH2 0x178C JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 0xF7 PUSH7 0xF723A34992FF41 MUL 0x5C 0xC4 SIGNEXTEND BALANCE DIV SWAP7 0x2B 0xD1 NOT 0xD7 PUSH10 0x3A60F8AA526B3BA44C1C 0xAC PUSH5 0x736F6C6343 STOP ADDMOD SLT STOP CALLER ",
							"sourceMap": "502:3461:9:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;696:24;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;1043:54;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;985:52;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;1989:450;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;1831:101:0;;;:::i;:::-;;584:28:9;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;2602:633;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;3328:191;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;1201:85:0;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;939:40:9;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;;;;;;;;;;:::i;:::-;;;;;;;;2081:198:0;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;640:25:9;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;3657:304;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;696:24;;;;:::o;1043:54::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::o;985:52::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::o;1989:450::-;2100:10;2065:45;;:13;;;;;;;;;;;:21;;;2087:8;2065:31;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;:45;;;2057:87;;;;;;;;;;;;:::i;:::-;;;;;;;;;2170:57;;;;;;;;2177:5;;2170:57;;;;2183:10;2170:57;;;;;;2194:8;2170:57;;;;2204:5;2170:57;;;;2211:15;2170:57;;;2154:6;:13;2161:5;;2154:13;;;;;;;;;;;:73;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;2237:15;:27;2253:10;2237:27;;;;;;;;;;;;;;;2270:5;;2237:39;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;2286:13;;;;;;;;;;;:26;;;2313:10;2333:4;2340:8;2286:63;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;2359:5;;:7;;;;;;;;;:::i;:::-;;;;;;2387:10;2381:51;;;2399:8;2409:5;2416:15;2381:51;;;;;;;;:::i;:::-;;;;;;;;1989:450;;:::o;1831:101:0:-;1094:13;:11;:13::i;:::-;1895:30:::1;1922:1;1895:18;:30::i;:::-;1831:101::o:0;584:28:9:-;;;;;;;;;;;;;:::o;2602:633::-;2758:5;2752:2;2747;2742;2714:6;:14;2721:6;2714:14;;;;;;;;;;;:24;;;2696:15;:42;;;;:::i;:::-;2695:49;;;;:::i;:::-;:54;;;;:::i;:::-;:59;;;;:::i;:::-;:68;;2687:110;;;;;;;;;;;;:::i;:::-;;;;;;;;;2838:10;2815:33;;:6;:14;2822:6;2815:14;;;;;;;;;;;:19;;;;;;;;;;;;:33;;;2807:82;;;;;;;;;;;;:::i;:::-;;;;;;;;;2906:6;:14;2913:6;2906:14;;;;;;;;;;;;2899:21;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;2930:17;:29;2948:10;2930:29;;;;;;;;;;;;;;;2965:6;2930:42;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;2982:13;;;;;;;;;;;:26;;;3018:4;3025:10;3037:8;2982:64;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;3056:14;3074:26;3094:5;3074:19;:26::i;:::-;3056:44;;3110:11;;;;;;;;;;;:20;;;3132:10;3144:6;3110:41;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;3174:10;3166:62;;;3186:8;3196:5;3204:15;3221:6;3166:62;;;;;;;;;:::i;:::-;;;;;;;;2677:558;2602:633;;;:::o;3328:191::-;3413:16;3445:21;3469:15;:22;3485:5;3469:22;;;;;;;;;;;;;;;3445:46;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;3508:4;3501:11;;;3328:191;;;:::o;1201:85:0:-;1247:7;1273:6;;;;;;;;;;;1266:13;;1201:85;:::o;939:40:9:-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::o;2081:198:0:-;1094:13;:11;:13::i;:::-;2189:1:::1;2169:22;;:8;:22;;::::0;2161:73:::1;;;;;;;;;;;;:::i;:::-;;;;;;;;;2244:28;2263:8;2244:18;:28::i;:::-;2081:198:::0;:::o;640:25:9:-;;;;;;;;;;;;;:::o;3657:304::-;3743:4;3764:6;3771:1;3764:8;;3759:172;3778:17;:24;3796:5;3778:24;;;;;;;;;;;;;;;:31;;;;3774:1;:35;3759:172;;;3862:10;3833:17;:24;3851:5;3833:24;;;;;;;;;;;;;;;3858:1;3833:27;;;;;;;;:::i;:::-;;;;;;;;;;:39;3830:91;;3902:4;3895:11;;;;;3830:91;3811:3;;;;;:::i;:::-;;;;3759:172;;;;3949:5;3942:12;;3657:304;;;;;:::o;1359:130:0:-;1433:12;:10;:12::i;:::-;1422:23;;:7;:5;:7::i;:::-;:23;;;1414:68;;;;;;;;;;;;:::i;:::-;;;;;;;;;1359:130::o;2433:187::-;2506:16;2525:6;;;;;;;;;;;2506:25;;2550:8;2541:6;;:17;;;;;;;;;;;;;;;;;;2604:8;2573:40;;2594:8;2573:40;;;;;;;;;;;;2496:124;2433:187;:::o;1544:295:9:-;1609:7;1639:1;1632:5;:8;1629:204;;1663:4;1656:11;;;;1629:204;1694:2;1687:5;:9;1684:149;;1719:4;1712:11;;;;1684:149;1750:2;1743:5;:9;1740:93;;1775:4;1768:11;;;;1740:93;1817:5;1810:12;;1544:295;;;;:::o;640:96:7:-;693:7;719:10;712:17;;640:96;:::o;7:77:10:-;44:7;73:5;62:16;;7:77;;;:::o;90:118::-;177:24;195:5;177:24;:::i;:::-;172:3;165:37;90:118;;:::o;214:222::-;307:4;345:2;334:9;330:18;322:26;;358:71;426:1;415:9;411:17;402:6;358:71;:::i;:::-;214:222;;;;:::o;523:117::-;632:1;629;622:12;769:126;806:7;846:42;839:5;835:54;824:65;;769:126;;;:::o;901:96::-;938:7;967:24;985:5;967:24;:::i;:::-;956:35;;901:96;;;:::o;1003:122::-;1076:24;1094:5;1076:24;:::i;:::-;1069:5;1066:35;1056:63;;1115:1;1112;1105:12;1056:63;1003:122;:::o;1131:139::-;1177:5;1215:6;1202:20;1193:29;;1231:33;1258:5;1231:33;:::i;:::-;1131:139;;;;:::o;1276:122::-;1349:24;1367:5;1349:24;:::i;:::-;1342:5;1339:35;1329:63;;1388:1;1385;1378:12;1329:63;1276:122;:::o;1404:139::-;1450:5;1488:6;1475:20;1466:29;;1504:33;1531:5;1504:33;:::i;:::-;1404:139;;;;:::o;1549:474::-;1617:6;1625;1674:2;1662:9;1653:7;1649:23;1645:32;1642:119;;;1680:79;;:::i;:::-;1642:119;1800:1;1825:53;1870:7;1861:6;1850:9;1846:22;1825:53;:::i;:::-;1815:63;;1771:117;1927:2;1953:53;1998:7;1989:6;1978:9;1974:22;1953:53;:::i;:::-;1943:63;;1898:118;1549:474;;;;;:::o;2029:::-;2097:6;2105;2154:2;2142:9;2133:7;2129:23;2125:32;2122:119;;;2160:79;;:::i;:::-;2122:119;2280:1;2305:53;2350:7;2341:6;2330:9;2326:22;2305:53;:::i;:::-;2295:63;;2251:117;2407:2;2433:53;2478:7;2469:6;2458:9;2454:22;2433:53;:::i;:::-;2423:63;;2378:118;2029:474;;;;;:::o;2509:60::-;2537:3;2558:5;2551:12;;2509:60;;;:::o;2575:142::-;2625:9;2658:53;2676:34;2685:24;2703:5;2685:24;:::i;:::-;2676:34;:::i;:::-;2658:53;:::i;:::-;2645:66;;2575:142;;;:::o;2723:126::-;2773:9;2806:37;2837:5;2806:37;:::i;:::-;2793:50;;2723:126;;;:::o;2855:141::-;2920:9;2953:37;2984:5;2953:37;:::i;:::-;2940:50;;2855:141;;;:::o;3002:161::-;3104:52;3150:5;3104:52;:::i;:::-;3099:3;3092:65;3002:161;;:::o;3169:252::-;3277:4;3315:2;3304:9;3300:18;3292:26;;3328:86;3411:1;3400:9;3396:17;3387:6;3328:86;:::i;:::-;3169:252;;;;:::o;3427:619::-;3504:6;3512;3520;3569:2;3557:9;3548:7;3544:23;3540:32;3537:119;;;3575:79;;:::i;:::-;3537:119;3695:1;3720:53;3765:7;3756:6;3745:9;3741:22;3720:53;:::i;:::-;3710:63;;3666:117;3822:2;3848:53;3893:7;3884:6;3873:9;3869:22;3848:53;:::i;:::-;3838:63;;3793:118;3950:2;3976:53;4021:7;4012:6;4001:9;3997:22;3976:53;:::i;:::-;3966:63;;3921:118;3427:619;;;;;:::o;4052:329::-;4111:6;4160:2;4148:9;4139:7;4135:23;4131:32;4128:119;;;4166:79;;:::i;:::-;4128:119;4286:1;4311:53;4356:7;4347:6;4336:9;4332:22;4311:53;:::i;:::-;4301:63;;4257:117;4052:329;;;;:::o;4387:114::-;4454:6;4488:5;4482:12;4472:22;;4387:114;;;:::o;4507:184::-;4606:11;4640:6;4635:3;4628:19;4680:4;4675:3;4671:14;4656:29;;4507:184;;;;:::o;4697:132::-;4764:4;4787:3;4779:11;;4817:4;4812:3;4808:14;4800:22;;4697:132;;;:::o;4835:108::-;4912:24;4930:5;4912:24;:::i;:::-;4907:3;4900:37;4835:108;;:::o;4949:179::-;5018:10;5039:46;5081:3;5073:6;5039:46;:::i;:::-;5117:4;5112:3;5108:14;5094:28;;4949:179;;;;:::o;5134:113::-;5204:4;5236;5231:3;5227:14;5219:22;;5134:113;;;:::o;5283:732::-;5402:3;5431:54;5479:5;5431:54;:::i;:::-;5501:86;5580:6;5575:3;5501:86;:::i;:::-;5494:93;;5611:56;5661:5;5611:56;:::i;:::-;5690:7;5721:1;5706:284;5731:6;5728:1;5725:13;5706:284;;;5807:6;5801:13;5834:63;5893:3;5878:13;5834:63;:::i;:::-;5827:70;;5920:60;5973:6;5920:60;:::i;:::-;5910:70;;5766:224;5753:1;5750;5746:9;5741:14;;5706:284;;;5710:14;6006:3;5999:10;;5407:608;;;5283:732;;;;:::o;6021:373::-;6164:4;6202:2;6191:9;6187:18;6179:26;;6251:9;6245:4;6241:20;6237:1;6226:9;6222:17;6215:47;6279:108;6382:4;6373:6;6279:108;:::i;:::-;6271:116;;6021:373;;;;:::o;6400:118::-;6487:24;6505:5;6487:24;:::i;:::-;6482:3;6475:37;6400:118;;:::o;6524:222::-;6617:4;6655:2;6644:9;6640:18;6632:26;;6668:71;6736:1;6725:9;6721:17;6712:6;6668:71;:::i;:::-;6524:222;;;;:::o;6752:329::-;6811:6;6860:2;6848:9;6839:7;6835:23;6831:32;6828:119;;;6866:79;;:::i;:::-;6828:119;6986:1;7011:53;7056:7;7047:6;7036:9;7032:22;7011:53;:::i;:::-;7001:63;;6957:117;6752:329;;;;:::o;7087:664::-;7292:4;7330:3;7319:9;7315:19;7307:27;;7344:71;7412:1;7401:9;7397:17;7388:6;7344:71;:::i;:::-;7425:72;7493:2;7482:9;7478:18;7469:6;7425:72;:::i;:::-;7507;7575:2;7564:9;7560:18;7551:6;7507:72;:::i;:::-;7589;7657:2;7646:9;7642:18;7633:6;7589:72;:::i;:::-;7671:73;7739:3;7728:9;7724:19;7715:6;7671:73;:::i;:::-;7087:664;;;;;;;;:::o;7757:140::-;7821:9;7854:37;7885:5;7854:37;:::i;:::-;7841:50;;7757:140;;;:::o;7903:159::-;8004:51;8049:5;8004:51;:::i;:::-;7999:3;7992:64;7903:159;;:::o;8068:250::-;8175:4;8213:2;8202:9;8198:18;8190:26;;8226:85;8308:1;8297:9;8293:17;8284:6;8226:85;:::i;:::-;8068:250;;;;:::o;8324:474::-;8392:6;8400;8449:2;8437:9;8428:7;8424:23;8420:32;8417:119;;;8455:79;;:::i;:::-;8417:119;8575:1;8600:53;8645:7;8636:6;8625:9;8621:22;8600:53;:::i;:::-;8590:63;;8546:117;8702:2;8728:53;8773:7;8764:6;8753:9;8749:22;8728:53;:::i;:::-;8718:63;;8673:118;8324:474;;;;;:::o;8804:90::-;8838:7;8881:5;8874:13;8867:21;8856:32;;8804:90;;;:::o;8900:109::-;8981:21;8996:5;8981:21;:::i;:::-;8976:3;8969:34;8900:109;;:::o;9015:210::-;9102:4;9140:2;9129:9;9125:18;9117:26;;9153:65;9215:1;9204:9;9200:17;9191:6;9153:65;:::i;:::-;9015:210;;;;:::o;9231:143::-;9288:5;9319:6;9313:13;9304:22;;9335:33;9362:5;9335:33;:::i;:::-;9231:143;;;;:::o;9380:351::-;9450:6;9499:2;9487:9;9478:7;9474:23;9470:32;9467:119;;;9505:79;;:::i;:::-;9467:119;9625:1;9650:64;9706:7;9697:6;9686:9;9682:22;9650:64;:::i;:::-;9640:74;;9596:128;9380:351;;;;:::o;9737:169::-;9821:11;9855:6;9850:3;9843:19;9895:4;9890:3;9886:14;9871:29;;9737:169;;;;:::o;9912:180::-;10052:32;10048:1;10040:6;10036:14;10029:56;9912:180;:::o;10098:366::-;10240:3;10261:67;10325:2;10320:3;10261:67;:::i;:::-;10254:74;;10337:93;10426:3;10337:93;:::i;:::-;10455:2;10450:3;10446:12;10439:19;;10098:366;;;:::o;10470:419::-;10636:4;10674:2;10663:9;10659:18;10651:26;;10723:9;10717:4;10713:20;10709:1;10698:9;10694:17;10687:47;10751:131;10877:4;10751:131;:::i;:::-;10743:139;;10470:419;;;:::o;10895:442::-;11044:4;11082:2;11071:9;11067:18;11059:26;;11095:71;11163:1;11152:9;11148:17;11139:6;11095:71;:::i;:::-;11176:72;11244:2;11233:9;11229:18;11220:6;11176:72;:::i;:::-;11258;11326:2;11315:9;11311:18;11302:6;11258:72;:::i;:::-;10895:442;;;;;;:::o;11343:180::-;11391:77;11388:1;11381:88;11488:4;11485:1;11478:15;11512:4;11509:1;11502:15;11529:233;11568:3;11591:24;11609:5;11591:24;:::i;:::-;11582:33;;11637:66;11630:5;11627:77;11624:103;;11707:18;;:::i;:::-;11624:103;11754:1;11747:5;11743:13;11736:20;;11529:233;;;:::o;11768:442::-;11917:4;11955:2;11944:9;11940:18;11932:26;;11968:71;12036:1;12025:9;12021:17;12012:6;11968:71;:::i;:::-;12049:72;12117:2;12106:9;12102:18;12093:6;12049:72;:::i;:::-;12131;12199:2;12188:9;12184:18;12175:6;12131:72;:::i;:::-;11768:442;;;;;;:::o;12216:194::-;12256:4;12276:20;12294:1;12276:20;:::i;:::-;12271:25;;12310:20;12328:1;12310:20;:::i;:::-;12305:25;;12354:1;12351;12347:9;12339:17;;12378:1;12372:4;12369:11;12366:37;;;12383:18;;:::i;:::-;12366:37;12216:194;;;;:::o;12416:180::-;12464:77;12461:1;12454:88;12561:4;12558:1;12551:15;12585:4;12582:1;12575:15;12602:185;12642:1;12659:20;12677:1;12659:20;:::i;:::-;12654:25;;12693:20;12711:1;12693:20;:::i;:::-;12688:25;;12732:1;12722:35;;12737:18;;:::i;:::-;12722:35;12779:1;12776;12772:9;12767:14;;12602:185;;;;:::o;12793:180::-;12933:32;12929:1;12921:6;12917:14;12910:56;12793:180;:::o;12979:366::-;13121:3;13142:67;13206:2;13201:3;13142:67;:::i;:::-;13135:74;;13218:93;13307:3;13218:93;:::i;:::-;13336:2;13331:3;13327:12;13320:19;;12979:366;;;:::o;13351:419::-;13517:4;13555:2;13544:9;13540:18;13532:26;;13604:9;13598:4;13594:20;13590:1;13579:9;13575:17;13568:47;13632:131;13758:4;13632:131;:::i;:::-;13624:139;;13351:419;;;:::o;13776:224::-;13916:34;13912:1;13904:6;13900:14;13893:58;13985:7;13980:2;13972:6;13968:15;13961:32;13776:224;:::o;14006:366::-;14148:3;14169:67;14233:2;14228:3;14169:67;:::i;:::-;14162:74;;14245:93;14334:3;14245:93;:::i;:::-;14363:2;14358:3;14354:12;14347:19;;14006:366;;;:::o;14378:419::-;14544:4;14582:2;14571:9;14567:18;14559:26;;14631:9;14625:4;14621:20;14617:1;14606:9;14602:17;14595:47;14659:131;14785:4;14659:131;:::i;:::-;14651:139;;14378:419;;;:::o;14803:332::-;14924:4;14962:2;14951:9;14947:18;14939:26;;14975:71;15043:1;15032:9;15028:17;15019:6;14975:71;:::i;:::-;15056:72;15124:2;15113:9;15109:18;15100:6;15056:72;:::i;:::-;14803:332;;;;;:::o;15141:116::-;15211:21;15226:5;15211:21;:::i;:::-;15204:5;15201:32;15191:60;;15247:1;15244;15237:12;15191:60;15141:116;:::o;15263:137::-;15317:5;15348:6;15342:13;15333:22;;15364:30;15388:5;15364:30;:::i;:::-;15263:137;;;;:::o;15406:345::-;15473:6;15522:2;15510:9;15501:7;15497:23;15493:32;15490:119;;;15528:79;;:::i;:::-;15490:119;15648:1;15673:61;15726:7;15717:6;15706:9;15702:22;15673:61;:::i;:::-;15663:71;;15619:125;15406:345;;;;:::o;15757:553::-;15934:4;15972:3;15961:9;15957:19;15949:27;;15986:71;16054:1;16043:9;16039:17;16030:6;15986:71;:::i;:::-;16067:72;16135:2;16124:9;16120:18;16111:6;16067:72;:::i;:::-;16149;16217:2;16206:9;16202:18;16193:6;16149:72;:::i;:::-;16231;16299:2;16288:9;16284:18;16275:6;16231:72;:::i;:::-;15757:553;;;;;;;:::o;16316:225::-;16456:34;16452:1;16444:6;16440:14;16433:58;16525:8;16520:2;16512:6;16508:15;16501:33;16316:225;:::o;16547:366::-;16689:3;16710:67;16774:2;16769:3;16710:67;:::i;:::-;16703:74;;16786:93;16875:3;16786:93;:::i;:::-;16904:2;16899:3;16895:12;16888:19;;16547:366;;;:::o;16919:419::-;17085:4;17123:2;17112:9;17108:18;17100:26;;17172:9;17166:4;17162:20;17158:1;17147:9;17143:17;17136:47;17200:131;17326:4;17200:131;:::i;:::-;17192:139;;16919:419;;;:::o;17344:180::-;17392:77;17389:1;17382:88;17489:4;17486:1;17479:15;17513:4;17510:1;17503:15;17530:182;17670:34;17666:1;17658:6;17654:14;17647:58;17530:182;:::o;17718:366::-;17860:3;17881:67;17945:2;17940:3;17881:67;:::i;:::-;17874:74;;17957:93;18046:3;17957:93;:::i;:::-;18075:2;18070:3;18066:12;18059:19;;17718:366;;;:::o;18090:419::-;18256:4;18294:2;18283:9;18279:18;18271:26;;18343:9;18337:4;18333:20;18329:1;18318:9;18314:17;18307:47;18371:131;18497:4;18371:131;:::i;:::-;18363:139;;18090:419;;;:::o"
						},
						"gasEstimates": {
							"creation": {
								"codeDepositCost": "1229800",
								"executionCost": "infinite",
								"totalCost": "infinite"
							},
							"external": {
								"NFTCollection()": "infinite",
								"checkIfAlreadyUnstaked(uint256,address)": "infinite",
								"index()": "2430",
								"owner()": "2589",
								"renounceOwnership()": "30487",
								"rewardToken()": "infinite",
								"stakeNFT(uint256,uint256)": "infinite",
								"stakes(uint256)": "infinite",
								"staking_details(address,uint256)": "infinite",
								"transferOwnership(address)": "30788",
								"unStakeNFT(uint256,uint256,uint256)": "infinite",
								"unstaking_details(address,uint256)": "infinite",
								"userStakingList(address)": "infinite"
							},
							"internal": {
								"calculateRewardPool(uint256)": "108"
							}
						},
						"legacyAssembly": {
							".code": [
								{
									"begin": 502,
									"end": 3963,
									"name": "PUSH",
									"source": 9,
									"value": "80"
								},
								{
									"begin": 502,
									"end": 3963,
									"name": "PUSH",
									"source": 9,
									"value": "40"
								},
								{
									"begin": 502,
									"end": 3963,
									"name": "MSTORE",
									"source": 9
								},
								{
									"begin": 719,
									"end": 720,
									"name": "PUSH",
									"source": 9,
									"value": "0"
								},
								{
									"begin": 696,
									"end": 720,
									"name": "PUSH",
									"source": 9,
									"value": "4"
								},
								{
									"begin": 696,
									"end": 720,
									"name": "SSTORE",
									"source": 9
								},
								{
									"begin": 1104,
									"end": 1261,
									"name": "CALLVALUE",
									"source": 9
								},
								{
									"begin": 1104,
									"end": 1261,
									"name": "DUP1",
									"source": 9
								},
								{
									"begin": 1104,
									"end": 1261,
									"name": "ISZERO",
									"source": 9
								},
								{
									"begin": 1104,
									"end": 1261,
									"name": "PUSH [tag]",
									"source": 9,
									"value": "1"
								},
								{
									"begin": 1104,
									"end": 1261,
									"name": "JUMPI",
									"source": 9
								},
								{
									"begin": 1104,
									"end": 1261,
									"name": "PUSH",
									"source": 9,
									"value": "0"
								},
								{
									"begin": 1104,
									"end": 1261,
									"name": "DUP1",
									"source": 9
								},
								{
									"begin": 1104,
									"end": 1261,
									"name": "REVERT",
									"source": 9
								},
								{
									"begin": 1104,
									"end": 1261,
									"name": "tag",
									"source": 9,
									"value": "1"
								},
								{
									"begin": 1104,
									"end": 1261,
									"name": "JUMPDEST",
									"source": 9
								},
								{
									"begin": 1104,
									"end": 1261,
									"name": "POP",
									"source": 9
								},
								{
									"begin": 1104,
									"end": 1261,
									"name": "PUSH",
									"source": 9,
									"value": "40"
								},
								{
									"begin": 1104,
									"end": 1261,
									"name": "MLOAD",
									"source": 9
								},
								{
									"begin": 1104,
									"end": 1261,
									"name": "PUSHSIZE",
									"source": 9
								},
								{
									"begin": 1104,
									"end": 1261,
									"name": "CODESIZE",
									"source": 9
								},
								{
									"begin": 1104,
									"end": 1261,
									"name": "SUB",
									"source": 9
								},
								{
									"begin": 1104,
									"end": 1261,
									"name": "DUP1",
									"source": 9
								},
								{
									"begin": 1104,
									"end": 1261,
									"name": "PUSHSIZE",
									"source": 9
								},
								{
									"begin": 1104,
									"end": 1261,
									"name": "DUP4",
									"source": 9
								},
								{
									"begin": 1104,
									"end": 1261,
									"name": "CODECOPY",
									"source": 9
								},
								{
									"begin": 1104,
									"end": 1261,
									"name": "DUP2",
									"source": 9
								},
								{
									"begin": 1104,
									"end": 1261,
									"name": "DUP2",
									"source": 9
								},
								{
									"begin": 1104,
									"end": 1261,
									"name": "ADD",
									"source": 9
								},
								{
									"begin": 1104,
									"end": 1261,
									"name": "PUSH",
									"source": 9,
									"value": "40"
								},
								{
									"begin": 1104,
									"end": 1261,
									"name": "MSTORE",
									"source": 9
								},
								{
									"begin": 1104,
									"end": 1261,
									"name": "DUP2",
									"source": 9
								},
								{
									"begin": 1104,
									"end": 1261,
									"name": "ADD",
									"source": 9
								},
								{
									"begin": 1104,
									"end": 1261,
									"name": "SWAP1",
									"source": 9
								},
								{
									"begin": 1104,
									"end": 1261,
									"name": "PUSH [tag]",
									"source": 9,
									"value": "2"
								},
								{
									"begin": 1104,
									"end": 1261,
									"name": "SWAP2",
									"source": 9
								},
								{
									"begin": 1104,
									"end": 1261,
									"name": "SWAP1",
									"source": 9
								},
								{
									"begin": 1104,
									"end": 1261,
									"name": "PUSH [tag]",
									"source": 9,
									"value": "3"
								},
								{
									"begin": 1104,
									"end": 1261,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 9
								},
								{
									"begin": 1104,
									"end": 1261,
									"name": "tag",
									"source": 9,
									"value": "2"
								},
								{
									"begin": 1104,
									"end": 1261,
									"name": "JUMPDEST",
									"source": 9
								},
								{
									"begin": 936,
									"end": 968,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "8"
								},
								{
									"begin": 955,
									"end": 967,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "9"
								},
								{
									"begin": 955,
									"end": 965,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "10"
								},
								{
									"begin": 955,
									"end": 965,
									"name": "PUSH",
									"source": 0,
									"value": "20"
								},
								{
									"begin": 955,
									"end": 965,
									"name": "SHL",
									"source": 0
								},
								{
									"begin": 955,
									"end": 967,
									"name": "PUSH",
									"source": 0,
									"value": "20"
								},
								{
									"begin": 955,
									"end": 967,
									"name": "SHR",
									"source": 0
								},
								{
									"begin": 955,
									"end": 967,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 0
								},
								{
									"begin": 955,
									"end": 967,
									"name": "tag",
									"source": 0,
									"value": "9"
								},
								{
									"begin": 955,
									"end": 967,
									"name": "JUMPDEST",
									"source": 0
								},
								{
									"begin": 936,
									"end": 954,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "11"
								},
								{
									"begin": 936,
									"end": 954,
									"name": "PUSH",
									"source": 0,
									"value": "20"
								},
								{
									"begin": 936,
									"end": 954,
									"name": "SHL",
									"source": 0
								},
								{
									"begin": 936,
									"end": 968,
									"name": "PUSH",
									"source": 0,
									"value": "20"
								},
								{
									"begin": 936,
									"end": 968,
									"name": "SHR",
									"source": 0
								},
								{
									"begin": 936,
									"end": 968,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 0
								},
								{
									"begin": 936,
									"end": 968,
									"name": "tag",
									"source": 0,
									"value": "8"
								},
								{
									"begin": 936,
									"end": 968,
									"name": "JUMPDEST",
									"source": 0
								},
								{
									"begin": 1716,
									"end": 1717,
									"name": "PUSH",
									"source": 1,
									"value": "1"
								},
								{
									"begin": 1821,
									"end": 1828,
									"name": "DUP1",
									"source": 1
								},
								{
									"begin": 1821,
									"end": 1843,
									"name": "DUP2",
									"source": 1
								},
								{
									"begin": 1821,
									"end": 1843,
									"name": "SWAP1",
									"source": 1
								},
								{
									"begin": 1821,
									"end": 1843,
									"name": "SSTORE",
									"source": 1
								},
								{
									"begin": 1821,
									"end": 1843,
									"name": "POP",
									"source": 1
								},
								{
									"begin": 1192,
									"end": 1204,
									"name": "DUP2",
									"source": 9
								},
								{
									"begin": 1171,
									"end": 1182,
									"name": "PUSH",
									"source": 9,
									"value": "3"
								},
								{
									"begin": 1171,
									"end": 1182,
									"name": "PUSH",
									"source": 9,
									"value": "0"
								},
								{
									"begin": 1171,
									"end": 1205,
									"name": "PUSH",
									"source": 9,
									"value": "100"
								},
								{
									"begin": 1171,
									"end": 1205,
									"name": "EXP",
									"source": 9
								},
								{
									"begin": 1171,
									"end": 1205,
									"name": "DUP2",
									"source": 9
								},
								{
									"begin": 1171,
									"end": 1205,
									"name": "SLOAD",
									"source": 9
								},
								{
									"begin": 1171,
									"end": 1205,
									"name": "DUP2",
									"source": 9
								},
								{
									"begin": 1171,
									"end": 1205,
									"name": "PUSH",
									"source": 9,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 1171,
									"end": 1205,
									"name": "MUL",
									"source": 9
								},
								{
									"begin": 1171,
									"end": 1205,
									"name": "NOT",
									"source": 9
								},
								{
									"begin": 1171,
									"end": 1205,
									"name": "AND",
									"source": 9
								},
								{
									"begin": 1171,
									"end": 1205,
									"name": "SWAP1",
									"source": 9
								},
								{
									"begin": 1171,
									"end": 1205,
									"name": "DUP4",
									"source": 9
								},
								{
									"begin": 1171,
									"end": 1205,
									"name": "PUSH",
									"source": 9,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 1171,
									"end": 1205,
									"name": "AND",
									"source": 9
								},
								{
									"begin": 1171,
									"end": 1205,
									"name": "MUL",
									"source": 9
								},
								{
									"begin": 1171,
									"end": 1205,
									"name": "OR",
									"source": 9
								},
								{
									"begin": 1171,
									"end": 1205,
									"name": "SWAP1",
									"source": 9
								},
								{
									"begin": 1171,
									"end": 1205,
									"name": "SSTORE",
									"source": 9
								},
								{
									"begin": 1171,
									"end": 1205,
									"name": "POP",
									"source": 9
								},
								{
									"begin": 1239,
									"end": 1253,
									"name": "DUP1",
									"source": 9
								},
								{
									"begin": 1215,
									"end": 1228,
									"name": "PUSH",
									"source": 9,
									"value": "2"
								},
								{
									"begin": 1215,
									"end": 1228,
									"name": "PUSH",
									"source": 9,
									"value": "0"
								},
								{
									"begin": 1215,
									"end": 1254,
									"name": "PUSH",
									"source": 9,
									"value": "100"
								},
								{
									"begin": 1215,
									"end": 1254,
									"name": "EXP",
									"source": 9
								},
								{
									"begin": 1215,
									"end": 1254,
									"name": "DUP2",
									"source": 9
								},
								{
									"begin": 1215,
									"end": 1254,
									"name": "SLOAD",
									"source": 9
								},
								{
									"begin": 1215,
									"end": 1254,
									"name": "DUP2",
									"source": 9
								},
								{
									"begin": 1215,
									"end": 1254,
									"name": "PUSH",
									"source": 9,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 1215,
									"end": 1254,
									"name": "MUL",
									"source": 9
								},
								{
									"begin": 1215,
									"end": 1254,
									"name": "NOT",
									"source": 9
								},
								{
									"begin": 1215,
									"end": 1254,
									"name": "AND",
									"source": 9
								},
								{
									"begin": 1215,
									"end": 1254,
									"name": "SWAP1",
									"source": 9
								},
								{
									"begin": 1215,
									"end": 1254,
									"name": "DUP4",
									"source": 9
								},
								{
									"begin": 1215,
									"end": 1254,
									"name": "PUSH",
									"source": 9,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 1215,
									"end": 1254,
									"name": "AND",
									"source": 9
								},
								{
									"begin": 1215,
									"end": 1254,
									"name": "MUL",
									"source": 9
								},
								{
									"begin": 1215,
									"end": 1254,
									"name": "OR",
									"source": 9
								},
								{
									"begin": 1215,
									"end": 1254,
									"name": "SWAP1",
									"source": 9
								},
								{
									"begin": 1215,
									"end": 1254,
									"name": "SSTORE",
									"source": 9
								},
								{
									"begin": 1215,
									"end": 1254,
									"name": "POP",
									"source": 9
								},
								{
									"begin": 1104,
									"end": 1261,
									"name": "POP",
									"source": 9
								},
								{
									"begin": 1104,
									"end": 1261,
									"name": "POP",
									"source": 9
								},
								{
									"begin": 502,
									"end": 3963,
									"name": "PUSH [tag]",
									"source": 9,
									"value": "14"
								},
								{
									"begin": 502,
									"end": 3963,
									"name": "JUMP",
									"source": 9
								},
								{
									"begin": 640,
									"end": 736,
									"name": "tag",
									"source": 7,
									"value": "10"
								},
								{
									"begin": 640,
									"end": 736,
									"name": "JUMPDEST",
									"source": 7
								},
								{
									"begin": 693,
									"end": 700,
									"name": "PUSH",
									"source": 7,
									"value": "0"
								},
								{
									"begin": 719,
									"end": 729,
									"name": "CALLER",
									"source": 7
								},
								{
									"begin": 712,
									"end": 729,
									"name": "SWAP1",
									"source": 7
								},
								{
									"begin": 712,
									"end": 729,
									"name": "POP",
									"source": 7
								},
								{
									"begin": 640,
									"end": 736,
									"name": "SWAP1",
									"source": 7
								},
								{
									"begin": 640,
									"end": 736,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 7
								},
								{
									"begin": 2433,
									"end": 2620,
									"name": "tag",
									"source": 0,
									"value": "11"
								},
								{
									"begin": 2433,
									"end": 2620,
									"name": "JUMPDEST",
									"source": 0
								},
								{
									"begin": 2506,
									"end": 2522,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 2525,
									"end": 2531,
									"name": "DUP1",
									"source": 0
								},
								{
									"begin": 2525,
									"end": 2531,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 2525,
									"end": 2531,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 2525,
									"end": 2531,
									"name": "SLOAD",
									"source": 0
								},
								{
									"begin": 2525,
									"end": 2531,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 2525,
									"end": 2531,
									"name": "PUSH",
									"source": 0,
									"value": "100"
								},
								{
									"begin": 2525,
									"end": 2531,
									"name": "EXP",
									"source": 0
								},
								{
									"begin": 2525,
									"end": 2531,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 2525,
									"end": 2531,
									"name": "DIV",
									"source": 0
								},
								{
									"begin": 2525,
									"end": 2531,
									"name": "PUSH",
									"source": 0,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 2525,
									"end": 2531,
									"name": "AND",
									"source": 0
								},
								{
									"begin": 2506,
									"end": 2531,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 2506,
									"end": 2531,
									"name": "POP",
									"source": 0
								},
								{
									"begin": 2550,
									"end": 2558,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 2541,
									"end": 2547,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 2541,
									"end": 2547,
									"name": "DUP1",
									"source": 0
								},
								{
									"begin": 2541,
									"end": 2558,
									"name": "PUSH",
									"source": 0,
									"value": "100"
								},
								{
									"begin": 2541,
									"end": 2558,
									"name": "EXP",
									"source": 0
								},
								{
									"begin": 2541,
									"end": 2558,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 2541,
									"end": 2558,
									"name": "SLOAD",
									"source": 0
								},
								{
									"begin": 2541,
									"end": 2558,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 2541,
									"end": 2558,
									"name": "PUSH",
									"source": 0,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 2541,
									"end": 2558,
									"name": "MUL",
									"source": 0
								},
								{
									"begin": 2541,
									"end": 2558,
									"name": "NOT",
									"source": 0
								},
								{
									"begin": 2541,
									"end": 2558,
									"name": "AND",
									"source": 0
								},
								{
									"begin": 2541,
									"end": 2558,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 2541,
									"end": 2558,
									"name": "DUP4",
									"source": 0
								},
								{
									"begin": 2541,
									"end": 2558,
									"name": "PUSH",
									"source": 0,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 2541,
									"end": 2558,
									"name": "AND",
									"source": 0
								},
								{
									"begin": 2541,
									"end": 2558,
									"name": "MUL",
									"source": 0
								},
								{
									"begin": 2541,
									"end": 2558,
									"name": "OR",
									"source": 0
								},
								{
									"begin": 2541,
									"end": 2558,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 2541,
									"end": 2558,
									"name": "SSTORE",
									"source": 0
								},
								{
									"begin": 2541,
									"end": 2558,
									"name": "POP",
									"source": 0
								},
								{
									"begin": 2604,
									"end": 2612,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 2573,
									"end": 2613,
									"name": "PUSH",
									"source": 0,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 2573,
									"end": 2613,
									"name": "AND",
									"source": 0
								},
								{
									"begin": 2594,
									"end": 2602,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 2573,
									"end": 2613,
									"name": "PUSH",
									"source": 0,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 2573,
									"end": 2613,
									"name": "AND",
									"source": 0
								},
								{
									"begin": 2573,
									"end": 2613,
									"name": "PUSH",
									"source": 0,
									"value": "8BE0079C531659141344CD1FD0A4F28419497F9722A3DAAFE3B4186F6B6457E0"
								},
								{
									"begin": 2573,
									"end": 2613,
									"name": "PUSH",
									"source": 0,
									"value": "40"
								},
								{
									"begin": 2573,
									"end": 2613,
									"name": "MLOAD",
									"source": 0
								},
								{
									"begin": 2573,
									"end": 2613,
									"name": "PUSH",
									"source": 0,
									"value": "40"
								},
								{
									"begin": 2573,
									"end": 2613,
									"name": "MLOAD",
									"source": 0
								},
								{
									"begin": 2573,
									"end": 2613,
									"name": "DUP1",
									"source": 0
								},
								{
									"begin": 2573,
									"end": 2613,
									"name": "SWAP2",
									"source": 0
								},
								{
									"begin": 2573,
									"end": 2613,
									"name": "SUB",
									"source": 0
								},
								{
									"begin": 2573,
									"end": 2613,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 2573,
									"end": 2613,
									"name": "LOG3",
									"source": 0
								},
								{
									"begin": 2496,
									"end": 2620,
									"name": "POP",
									"source": 0
								},
								{
									"begin": 2433,
									"end": 2620,
									"name": "POP",
									"source": 0
								},
								{
									"begin": 2433,
									"end": 2620,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 0
								},
								{
									"begin": 88,
									"end": 205,
									"name": "tag",
									"source": 10,
									"value": "18"
								},
								{
									"begin": 88,
									"end": 205,
									"name": "JUMPDEST",
									"source": 10
								},
								{
									"begin": 197,
									"end": 198,
									"name": "PUSH",
									"source": 10,
									"value": "0"
								},
								{
									"begin": 194,
									"end": 195,
									"name": "DUP1",
									"source": 10
								},
								{
									"begin": 187,
									"end": 199,
									"name": "REVERT",
									"source": 10
								},
								{
									"begin": 334,
									"end": 460,
									"name": "tag",
									"source": 10,
									"value": "20"
								},
								{
									"begin": 334,
									"end": 460,
									"name": "JUMPDEST",
									"source": 10
								},
								{
									"begin": 371,
									"end": 378,
									"name": "PUSH",
									"source": 10,
									"value": "0"
								},
								{
									"begin": 411,
									"end": 453,
									"name": "PUSH",
									"source": 10,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 404,
									"end": 409,
									"name": "DUP3",
									"source": 10
								},
								{
									"begin": 400,
									"end": 454,
									"name": "AND",
									"source": 10
								},
								{
									"begin": 389,
									"end": 454,
									"name": "SWAP1",
									"source": 10
								},
								{
									"begin": 389,
									"end": 454,
									"name": "POP",
									"source": 10
								},
								{
									"begin": 334,
									"end": 460,
									"name": "SWAP2",
									"source": 10
								},
								{
									"begin": 334,
									"end": 460,
									"name": "SWAP1",
									"source": 10
								},
								{
									"begin": 334,
									"end": 460,
									"name": "POP",
									"source": 10
								},
								{
									"begin": 334,
									"end": 460,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 10
								},
								{
									"begin": 466,
									"end": 562,
									"name": "tag",
									"source": 10,
									"value": "21"
								},
								{
									"begin": 466,
									"end": 562,
									"name": "JUMPDEST",
									"source": 10
								},
								{
									"begin": 503,
									"end": 510,
									"name": "PUSH",
									"source": 10,
									"value": "0"
								},
								{
									"begin": 532,
									"end": 556,
									"name": "PUSH [tag]",
									"source": 10,
									"value": "30"
								},
								{
									"begin": 550,
									"end": 555,
									"name": "DUP3",
									"source": 10
								},
								{
									"begin": 532,
									"end": 556,
									"name": "PUSH [tag]",
									"source": 10,
									"value": "20"
								},
								{
									"begin": 532,
									"end": 556,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 10
								},
								{
									"begin": 532,
									"end": 556,
									"name": "tag",
									"source": 10,
									"value": "30"
								},
								{
									"begin": 532,
									"end": 556,
									"name": "JUMPDEST",
									"source": 10
								},
								{
									"begin": 521,
									"end": 556,
									"name": "SWAP1",
									"source": 10
								},
								{
									"begin": 521,
									"end": 556,
									"name": "POP",
									"source": 10
								},
								{
									"begin": 466,
									"end": 562,
									"name": "SWAP2",
									"source": 10
								},
								{
									"begin": 466,
									"end": 562,
									"name": "SWAP1",
									"source": 10
								},
								{
									"begin": 466,
									"end": 562,
									"name": "POP",
									"source": 10
								},
								{
									"begin": 466,
									"end": 562,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 10
								},
								{
									"begin": 568,
									"end": 690,
									"name": "tag",
									"source": 10,
									"value": "22"
								},
								{
									"begin": 568,
									"end": 690,
									"name": "JUMPDEST",
									"source": 10
								},
								{
									"begin": 641,
									"end": 665,
									"name": "PUSH [tag]",
									"source": 10,
									"value": "32"
								},
								{
									"begin": 659,
									"end": 664,
									"name": "DUP2",
									"source": 10
								},
								{
									"begin": 641,
									"end": 665,
									"name": "PUSH [tag]",
									"source": 10,
									"value": "21"
								},
								{
									"begin": 641,
									"end": 665,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 10
								},
								{
									"begin": 641,
									"end": 665,
									"name": "tag",
									"source": 10,
									"value": "32"
								},
								{
									"begin": 641,
									"end": 665,
									"name": "JUMPDEST",
									"source": 10
								},
								{
									"begin": 634,
									"end": 639,
									"name": "DUP2",
									"source": 10
								},
								{
									"begin": 631,
									"end": 666,
									"name": "EQ",
									"source": 10
								},
								{
									"begin": 621,
									"end": 684,
									"name": "PUSH [tag]",
									"source": 10,
									"value": "33"
								},
								{
									"begin": 621,
									"end": 684,
									"name": "JUMPI",
									"source": 10
								},
								{
									"begin": 680,
									"end": 681,
									"name": "PUSH",
									"source": 10,
									"value": "0"
								},
								{
									"begin": 677,
									"end": 678,
									"name": "DUP1",
									"source": 10
								},
								{
									"begin": 670,
									"end": 682,
									"name": "REVERT",
									"source": 10
								},
								{
									"begin": 621,
									"end": 684,
									"name": "tag",
									"source": 10,
									"value": "33"
								},
								{
									"begin": 621,
									"end": 684,
									"name": "JUMPDEST",
									"source": 10
								},
								{
									"begin": 568,
									"end": 690,
									"name": "POP",
									"source": 10
								},
								{
									"begin": 568,
									"end": 690,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 10
								},
								{
									"begin": 696,
									"end": 839,
									"name": "tag",
									"source": 10,
									"value": "23"
								},
								{
									"begin": 696,
									"end": 839,
									"name": "JUMPDEST",
									"source": 10
								},
								{
									"begin": 753,
									"end": 758,
									"name": "PUSH",
									"source": 10,
									"value": "0"
								},
								{
									"begin": 784,
									"end": 790,
									"name": "DUP2",
									"source": 10
								},
								{
									"begin": 778,
									"end": 791,
									"name": "MLOAD",
									"source": 10
								},
								{
									"begin": 769,
									"end": 791,
									"name": "SWAP1",
									"source": 10
								},
								{
									"begin": 769,
									"end": 791,
									"name": "POP",
									"source": 10
								},
								{
									"begin": 800,
									"end": 833,
									"name": "PUSH [tag]",
									"source": 10,
									"value": "35"
								},
								{
									"begin": 827,
									"end": 832,
									"name": "DUP2",
									"source": 10
								},
								{
									"begin": 800,
									"end": 833,
									"name": "PUSH [tag]",
									"source": 10,
									"value": "22"
								},
								{
									"begin": 800,
									"end": 833,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 10
								},
								{
									"begin": 800,
									"end": 833,
									"name": "tag",
									"source": 10,
									"value": "35"
								},
								{
									"begin": 800,
									"end": 833,
									"name": "JUMPDEST",
									"source": 10
								},
								{
									"begin": 696,
									"end": 839,
									"name": "SWAP3",
									"source": 10
								},
								{
									"begin": 696,
									"end": 839,
									"name": "SWAP2",
									"source": 10
								},
								{
									"begin": 696,
									"end": 839,
									"name": "POP",
									"source": 10
								},
								{
									"begin": 696,
									"end": 839,
									"name": "POP",
									"source": 10
								},
								{
									"begin": 696,
									"end": 839,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 10
								},
								{
									"begin": 845,
									"end": 1352,
									"name": "tag",
									"source": 10,
									"value": "3"
								},
								{
									"begin": 845,
									"end": 1352,
									"name": "JUMPDEST",
									"source": 10
								},
								{
									"begin": 924,
									"end": 930,
									"name": "PUSH",
									"source": 10,
									"value": "0"
								},
								{
									"begin": 932,
									"end": 938,
									"name": "DUP1",
									"source": 10
								},
								{
									"begin": 981,
									"end": 983,
									"name": "PUSH",
									"source": 10,
									"value": "40"
								},
								{
									"begin": 969,
									"end": 978,
									"name": "DUP4",
									"source": 10
								},
								{
									"begin": 960,
									"end": 967,
									"name": "DUP6",
									"source": 10
								},
								{
									"begin": 956,
									"end": 979,
									"name": "SUB",
									"source": 10
								},
								{
									"begin": 952,
									"end": 984,
									"name": "SLT",
									"source": 10
								},
								{
									"begin": 949,
									"end": 1068,
									"name": "ISZERO",
									"source": 10
								},
								{
									"begin": 949,
									"end": 1068,
									"name": "PUSH [tag]",
									"source": 10,
									"value": "37"
								},
								{
									"begin": 949,
									"end": 1068,
									"name": "JUMPI",
									"source": 10
								},
								{
									"begin": 987,
									"end": 1066,
									"name": "PUSH [tag]",
									"source": 10,
									"value": "38"
								},
								{
									"begin": 987,
									"end": 1066,
									"name": "PUSH [tag]",
									"source": 10,
									"value": "18"
								},
								{
									"begin": 987,
									"end": 1066,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 10
								},
								{
									"begin": 987,
									"end": 1066,
									"name": "tag",
									"source": 10,
									"value": "38"
								},
								{
									"begin": 987,
									"end": 1066,
									"name": "JUMPDEST",
									"source": 10
								},
								{
									"begin": 949,
									"end": 1068,
									"name": "tag",
									"source": 10,
									"value": "37"
								},
								{
									"begin": 949,
									"end": 1068,
									"name": "JUMPDEST",
									"source": 10
								},
								{
									"begin": 1107,
									"end": 1108,
									"name": "PUSH",
									"source": 10,
									"value": "0"
								},
								{
									"begin": 1132,
									"end": 1196,
									"name": "PUSH [tag]",
									"source": 10,
									"value": "39"
								},
								{
									"begin": 1188,
									"end": 1195,
									"name": "DUP6",
									"source": 10
								},
								{
									"begin": 1179,
									"end": 1185,
									"name": "DUP3",
									"source": 10
								},
								{
									"begin": 1168,
									"end": 1177,
									"name": "DUP7",
									"source": 10
								},
								{
									"begin": 1164,
									"end": 1186,
									"name": "ADD",
									"source": 10
								},
								{
									"begin": 1132,
									"end": 1196,
									"name": "PUSH [tag]",
									"source": 10,
									"value": "23"
								},
								{
									"begin": 1132,
									"end": 1196,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 10
								},
								{
									"begin": 1132,
									"end": 1196,
									"name": "tag",
									"source": 10,
									"value": "39"
								},
								{
									"begin": 1132,
									"end": 1196,
									"name": "JUMPDEST",
									"source": 10
								},
								{
									"begin": 1122,
									"end": 1196,
									"name": "SWAP3",
									"source": 10
								},
								{
									"begin": 1122,
									"end": 1196,
									"name": "POP",
									"source": 10
								},
								{
									"begin": 1078,
									"end": 1206,
									"name": "POP",
									"source": 10
								},
								{
									"begin": 1245,
									"end": 1247,
									"name": "PUSH",
									"source": 10,
									"value": "20"
								},
								{
									"begin": 1271,
									"end": 1335,
									"name": "PUSH [tag]",
									"source": 10,
									"value": "40"
								},
								{
									"begin": 1327,
									"end": 1334,
									"name": "DUP6",
									"source": 10
								},
								{
									"begin": 1318,
									"end": 1324,
									"name": "DUP3",
									"source": 10
								},
								{
									"begin": 1307,
									"end": 1316,
									"name": "DUP7",
									"source": 10
								},
								{
									"begin": 1303,
									"end": 1325,
									"name": "ADD",
									"source": 10
								},
								{
									"begin": 1271,
									"end": 1335,
									"name": "PUSH [tag]",
									"source": 10,
									"value": "23"
								},
								{
									"begin": 1271,
									"end": 1335,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 10
								},
								{
									"begin": 1271,
									"end": 1335,
									"name": "tag",
									"source": 10,
									"value": "40"
								},
								{
									"begin": 1271,
									"end": 1335,
									"name": "JUMPDEST",
									"source": 10
								},
								{
									"begin": 1261,
									"end": 1335,
									"name": "SWAP2",
									"source": 10
								},
								{
									"begin": 1261,
									"end": 1335,
									"name": "POP",
									"source": 10
								},
								{
									"begin": 1216,
									"end": 1345,
									"name": "POP",
									"source": 10
								},
								{
									"begin": 845,
									"end": 1352,
									"name": "SWAP3",
									"source": 10
								},
								{
									"begin": 845,
									"end": 1352,
									"name": "POP",
									"source": 10
								},
								{
									"begin": 845,
									"end": 1352,
									"name": "SWAP3",
									"source": 10
								},
								{
									"begin": 845,
									"end": 1352,
									"name": "SWAP1",
									"source": 10
								},
								{
									"begin": 845,
									"end": 1352,
									"name": "POP",
									"source": 10
								},
								{
									"begin": 845,
									"end": 1352,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 10
								},
								{
									"begin": 502,
									"end": 3963,
									"name": "tag",
									"source": 9,
									"value": "14"
								},
								{
									"begin": 502,
									"end": 3963,
									"name": "JUMPDEST",
									"source": 9
								},
								{
									"begin": 502,
									"end": 3963,
									"name": "PUSH #[$]",
									"source": 9,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 502,
									"end": 3963,
									"name": "DUP1",
									"source": 9
								},
								{
									"begin": 502,
									"end": 3963,
									"name": "PUSH [$]",
									"source": 9,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 502,
									"end": 3963,
									"name": "PUSH",
									"source": 9,
									"value": "0"
								},
								{
									"begin": 502,
									"end": 3963,
									"name": "CODECOPY",
									"source": 9
								},
								{
									"begin": 502,
									"end": 3963,
									"name": "PUSH",
									"source": 9,
									"value": "0"
								},
								{
									"begin": 502,
									"end": 3963,
									"name": "RETURN",
									"source": 9
								}
							],
							".data": {
								"0": {
									".auxdata": "a2646970667358221220f766f723a34992ff41025cc40b3104962bd119d7693a60f8aa526b3ba44c1cac64736f6c63430008120033",
									".code": [
										{
											"begin": 502,
											"end": 3963,
											"name": "PUSH",
											"source": 9,
											"value": "80"
										},
										{
											"begin": 502,
											"end": 3963,
											"name": "PUSH",
											"source": 9,
											"value": "40"
										},
										{
											"begin": 502,
											"end": 3963,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 502,
											"end": 3963,
											"name": "CALLVALUE",
											"source": 9
										},
										{
											"begin": 502,
											"end": 3963,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 502,
											"end": 3963,
											"name": "ISZERO",
											"source": 9
										},
										{
											"begin": 502,
											"end": 3963,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "1"
										},
										{
											"begin": 502,
											"end": 3963,
											"name": "JUMPI",
											"source": 9
										},
										{
											"begin": 502,
											"end": 3963,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 502,
											"end": 3963,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 502,
											"end": 3963,
											"name": "REVERT",
											"source": 9
										},
										{
											"begin": 502,
											"end": 3963,
											"name": "tag",
											"source": 9,
											"value": "1"
										},
										{
											"begin": 502,
											"end": 3963,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 502,
											"end": 3963,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 502,
											"end": 3963,
											"name": "PUSH",
											"source": 9,
											"value": "4"
										},
										{
											"begin": 502,
											"end": 3963,
											"name": "CALLDATASIZE",
											"source": 9
										},
										{
											"begin": 502,
											"end": 3963,
											"name": "LT",
											"source": 9
										},
										{
											"begin": 502,
											"end": 3963,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "2"
										},
										{
											"begin": 502,
											"end": 3963,
											"name": "JUMPI",
											"source": 9
										},
										{
											"begin": 502,
											"end": 3963,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 502,
											"end": 3963,
											"name": "CALLDATALOAD",
											"source": 9
										},
										{
											"begin": 502,
											"end": 3963,
											"name": "PUSH",
											"source": 9,
											"value": "E0"
										},
										{
											"begin": 502,
											"end": 3963,
											"name": "SHR",
											"source": 9
										},
										{
											"begin": 502,
											"end": 3963,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 502,
											"end": 3963,
											"name": "PUSH",
											"source": 9,
											"value": "78DBA594"
										},
										{
											"begin": 502,
											"end": 3963,
											"name": "GT",
											"source": 9
										},
										{
											"begin": 502,
											"end": 3963,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "16"
										},
										{
											"begin": 502,
											"end": 3963,
											"name": "JUMPI",
											"source": 9
										},
										{
											"begin": 502,
											"end": 3963,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 502,
											"end": 3963,
											"name": "PUSH",
											"source": 9,
											"value": "D5A44F86"
										},
										{
											"begin": 502,
											"end": 3963,
											"name": "GT",
											"source": 9
										},
										{
											"begin": 502,
											"end": 3963,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "17"
										},
										{
											"begin": 502,
											"end": 3963,
											"name": "JUMPI",
											"source": 9
										},
										{
											"begin": 502,
											"end": 3963,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 502,
											"end": 3963,
											"name": "PUSH",
											"source": 9,
											"value": "D5A44F86"
										},
										{
											"begin": 502,
											"end": 3963,
											"name": "EQ",
											"source": 9
										},
										{
											"begin": 502,
											"end": 3963,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "12"
										},
										{
											"begin": 502,
											"end": 3963,
											"name": "JUMPI",
											"source": 9
										},
										{
											"begin": 502,
											"end": 3963,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 502,
											"end": 3963,
											"name": "PUSH",
											"source": 9,
											"value": "F2FDE38B"
										},
										{
											"begin": 502,
											"end": 3963,
											"name": "EQ",
											"source": 9
										},
										{
											"begin": 502,
											"end": 3963,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "13"
										},
										{
											"begin": 502,
											"end": 3963,
											"name": "JUMPI",
											"source": 9
										},
										{
											"begin": 502,
											"end": 3963,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 502,
											"end": 3963,
											"name": "PUSH",
											"source": 9,
											"value": "F7C618C1"
										},
										{
											"begin": 502,
											"end": 3963,
											"name": "EQ",
											"source": 9
										},
										{
											"begin": 502,
											"end": 3963,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "14"
										},
										{
											"begin": 502,
											"end": 3963,
											"name": "JUMPI",
											"source": 9
										},
										{
											"begin": 502,
											"end": 3963,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 502,
											"end": 3963,
											"name": "PUSH",
											"source": 9,
											"value": "FBACA086"
										},
										{
											"begin": 502,
											"end": 3963,
											"name": "EQ",
											"source": 9
										},
										{
											"begin": 502,
											"end": 3963,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "15"
										},
										{
											"begin": 502,
											"end": 3963,
											"name": "JUMPI",
											"source": 9
										},
										{
											"begin": 502,
											"end": 3963,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "2"
										},
										{
											"begin": 502,
											"end": 3963,
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 502,
											"end": 3963,
											"name": "tag",
											"source": 9,
											"value": "17"
										},
										{
											"begin": 502,
											"end": 3963,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 502,
											"end": 3963,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 502,
											"end": 3963,
											"name": "PUSH",
											"source": 9,
											"value": "78DBA594"
										},
										{
											"begin": 502,
											"end": 3963,
											"name": "EQ",
											"source": 9
										},
										{
											"begin": 502,
											"end": 3963,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "9"
										},
										{
											"begin": 502,
											"end": 3963,
											"name": "JUMPI",
											"source": 9
										},
										{
											"begin": 502,
											"end": 3963,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 502,
											"end": 3963,
											"name": "PUSH",
											"source": 9,
											"value": "79E5F7D7"
										},
										{
											"begin": 502,
											"end": 3963,
											"name": "EQ",
											"source": 9
										},
										{
											"begin": 502,
											"end": 3963,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "10"
										},
										{
											"begin": 502,
											"end": 3963,
											"name": "JUMPI",
											"source": 9
										},
										{
											"begin": 502,
											"end": 3963,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 502,
											"end": 3963,
											"name": "PUSH",
											"source": 9,
											"value": "8DA5CB5B"
										},
										{
											"begin": 502,
											"end": 3963,
											"name": "EQ",
											"source": 9
										},
										{
											"begin": 502,
											"end": 3963,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "11"
										},
										{
											"begin": 502,
											"end": 3963,
											"name": "JUMPI",
											"source": 9
										},
										{
											"begin": 502,
											"end": 3963,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "2"
										},
										{
											"begin": 502,
											"end": 3963,
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 502,
											"end": 3963,
											"name": "tag",
											"source": 9,
											"value": "16"
										},
										{
											"begin": 502,
											"end": 3963,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 502,
											"end": 3963,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 502,
											"end": 3963,
											"name": "PUSH",
											"source": 9,
											"value": "2986C0E5"
										},
										{
											"begin": 502,
											"end": 3963,
											"name": "EQ",
											"source": 9
										},
										{
											"begin": 502,
											"end": 3963,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "3"
										},
										{
											"begin": 502,
											"end": 3963,
											"name": "JUMPI",
											"source": 9
										},
										{
											"begin": 502,
											"end": 3963,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 502,
											"end": 3963,
											"name": "PUSH",
											"source": 9,
											"value": "3AF416D1"
										},
										{
											"begin": 502,
											"end": 3963,
											"name": "EQ",
											"source": 9
										},
										{
											"begin": 502,
											"end": 3963,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "4"
										},
										{
											"begin": 502,
											"end": 3963,
											"name": "JUMPI",
											"source": 9
										},
										{
											"begin": 502,
											"end": 3963,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 502,
											"end": 3963,
											"name": "PUSH",
											"source": 9,
											"value": "3F106929"
										},
										{
											"begin": 502,
											"end": 3963,
											"name": "EQ",
											"source": 9
										},
										{
											"begin": 502,
											"end": 3963,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "5"
										},
										{
											"begin": 502,
											"end": 3963,
											"name": "JUMPI",
											"source": 9
										},
										{
											"begin": 502,
											"end": 3963,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 502,
											"end": 3963,
											"name": "PUSH",
											"source": 9,
											"value": "51CECC80"
										},
										{
											"begin": 502,
											"end": 3963,
											"name": "EQ",
											"source": 9
										},
										{
											"begin": 502,
											"end": 3963,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "6"
										},
										{
											"begin": 502,
											"end": 3963,
											"name": "JUMPI",
											"source": 9
										},
										{
											"begin": 502,
											"end": 3963,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 502,
											"end": 3963,
											"name": "PUSH",
											"source": 9,
											"value": "715018A6"
										},
										{
											"begin": 502,
											"end": 3963,
											"name": "EQ",
											"source": 9
										},
										{
											"begin": 502,
											"end": 3963,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "7"
										},
										{
											"begin": 502,
											"end": 3963,
											"name": "JUMPI",
											"source": 9
										},
										{
											"begin": 502,
											"end": 3963,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 502,
											"end": 3963,
											"name": "PUSH",
											"source": 9,
											"value": "78B2E3A9"
										},
										{
											"begin": 502,
											"end": 3963,
											"name": "EQ",
											"source": 9
										},
										{
											"begin": 502,
											"end": 3963,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "8"
										},
										{
											"begin": 502,
											"end": 3963,
											"name": "JUMPI",
											"source": 9
										},
										{
											"begin": 502,
											"end": 3963,
											"name": "tag",
											"source": 9,
											"value": "2"
										},
										{
											"begin": 502,
											"end": 3963,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 502,
											"end": 3963,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 502,
											"end": 3963,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 502,
											"end": 3963,
											"name": "REVERT",
											"source": 9
										},
										{
											"begin": 696,
											"end": 720,
											"name": "tag",
											"source": 9,
											"value": "3"
										},
										{
											"begin": 696,
											"end": 720,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 696,
											"end": 720,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "18"
										},
										{
											"begin": 696,
											"end": 720,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "19"
										},
										{
											"begin": 696,
											"end": 720,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 696,
											"end": 720,
											"name": "tag",
											"source": 9,
											"value": "18"
										},
										{
											"begin": 696,
											"end": 720,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 696,
											"end": 720,
											"name": "PUSH",
											"source": 9,
											"value": "40"
										},
										{
											"begin": 696,
											"end": 720,
											"name": "MLOAD",
											"source": 9
										},
										{
											"begin": 696,
											"end": 720,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "20"
										},
										{
											"begin": 696,
											"end": 720,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 696,
											"end": 720,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 696,
											"end": 720,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "21"
										},
										{
											"begin": 696,
											"end": 720,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 696,
											"end": 720,
											"name": "tag",
											"source": 9,
											"value": "20"
										},
										{
											"begin": 696,
											"end": 720,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 696,
											"end": 720,
											"name": "PUSH",
											"source": 9,
											"value": "40"
										},
										{
											"begin": 696,
											"end": 720,
											"name": "MLOAD",
											"source": 9
										},
										{
											"begin": 696,
											"end": 720,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 696,
											"end": 720,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 696,
											"end": 720,
											"name": "SUB",
											"source": 9
										},
										{
											"begin": 696,
											"end": 720,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 696,
											"end": 720,
											"name": "RETURN",
											"source": 9
										},
										{
											"begin": 1043,
											"end": 1097,
											"name": "tag",
											"source": 9,
											"value": "4"
										},
										{
											"begin": 1043,
											"end": 1097,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 1043,
											"end": 1097,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "22"
										},
										{
											"begin": 1043,
											"end": 1097,
											"name": "PUSH",
											"source": 9,
											"value": "4"
										},
										{
											"begin": 1043,
											"end": 1097,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 1043,
											"end": 1097,
											"name": "CALLDATASIZE",
											"source": 9
										},
										{
											"begin": 1043,
											"end": 1097,
											"name": "SUB",
											"source": 9
										},
										{
											"begin": 1043,
											"end": 1097,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 1043,
											"end": 1097,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 1043,
											"end": 1097,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 1043,
											"end": 1097,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "23"
										},
										{
											"begin": 1043,
											"end": 1097,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 1043,
											"end": 1097,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 1043,
											"end": 1097,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "24"
										},
										{
											"begin": 1043,
											"end": 1097,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 1043,
											"end": 1097,
											"name": "tag",
											"source": 9,
											"value": "23"
										},
										{
											"begin": 1043,
											"end": 1097,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 1043,
											"end": 1097,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "25"
										},
										{
											"begin": 1043,
											"end": 1097,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 1043,
											"end": 1097,
											"name": "tag",
											"source": 9,
											"value": "22"
										},
										{
											"begin": 1043,
											"end": 1097,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 1043,
											"end": 1097,
											"name": "PUSH",
											"source": 9,
											"value": "40"
										},
										{
											"begin": 1043,
											"end": 1097,
											"name": "MLOAD",
											"source": 9
										},
										{
											"begin": 1043,
											"end": 1097,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "26"
										},
										{
											"begin": 1043,
											"end": 1097,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 1043,
											"end": 1097,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 1043,
											"end": 1097,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "21"
										},
										{
											"begin": 1043,
											"end": 1097,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 1043,
											"end": 1097,
											"name": "tag",
											"source": 9,
											"value": "26"
										},
										{
											"begin": 1043,
											"end": 1097,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 1043,
											"end": 1097,
											"name": "PUSH",
											"source": 9,
											"value": "40"
										},
										{
											"begin": 1043,
											"end": 1097,
											"name": "MLOAD",
											"source": 9
										},
										{
											"begin": 1043,
											"end": 1097,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 1043,
											"end": 1097,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 1043,
											"end": 1097,
											"name": "SUB",
											"source": 9
										},
										{
											"begin": 1043,
											"end": 1097,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 1043,
											"end": 1097,
											"name": "RETURN",
											"source": 9
										},
										{
											"begin": 985,
											"end": 1037,
											"name": "tag",
											"source": 9,
											"value": "5"
										},
										{
											"begin": 985,
											"end": 1037,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 985,
											"end": 1037,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "27"
										},
										{
											"begin": 985,
											"end": 1037,
											"name": "PUSH",
											"source": 9,
											"value": "4"
										},
										{
											"begin": 985,
											"end": 1037,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 985,
											"end": 1037,
											"name": "CALLDATASIZE",
											"source": 9
										},
										{
											"begin": 985,
											"end": 1037,
											"name": "SUB",
											"source": 9
										},
										{
											"begin": 985,
											"end": 1037,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 985,
											"end": 1037,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 985,
											"end": 1037,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 985,
											"end": 1037,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "28"
										},
										{
											"begin": 985,
											"end": 1037,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 985,
											"end": 1037,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 985,
											"end": 1037,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "24"
										},
										{
											"begin": 985,
											"end": 1037,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 985,
											"end": 1037,
											"name": "tag",
											"source": 9,
											"value": "28"
										},
										{
											"begin": 985,
											"end": 1037,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 985,
											"end": 1037,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "29"
										},
										{
											"begin": 985,
											"end": 1037,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 985,
											"end": 1037,
											"name": "tag",
											"source": 9,
											"value": "27"
										},
										{
											"begin": 985,
											"end": 1037,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 985,
											"end": 1037,
											"name": "PUSH",
											"source": 9,
											"value": "40"
										},
										{
											"begin": 985,
											"end": 1037,
											"name": "MLOAD",
											"source": 9
										},
										{
											"begin": 985,
											"end": 1037,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "30"
										},
										{
											"begin": 985,
											"end": 1037,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 985,
											"end": 1037,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 985,
											"end": 1037,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "21"
										},
										{
											"begin": 985,
											"end": 1037,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 985,
											"end": 1037,
											"name": "tag",
											"source": 9,
											"value": "30"
										},
										{
											"begin": 985,
											"end": 1037,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 985,
											"end": 1037,
											"name": "PUSH",
											"source": 9,
											"value": "40"
										},
										{
											"begin": 985,
											"end": 1037,
											"name": "MLOAD",
											"source": 9
										},
										{
											"begin": 985,
											"end": 1037,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 985,
											"end": 1037,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 985,
											"end": 1037,
											"name": "SUB",
											"source": 9
										},
										{
											"begin": 985,
											"end": 1037,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 985,
											"end": 1037,
											"name": "RETURN",
											"source": 9
										},
										{
											"begin": 1989,
											"end": 2439,
											"name": "tag",
											"source": 9,
											"value": "6"
										},
										{
											"begin": 1989,
											"end": 2439,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 1989,
											"end": 2439,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "31"
										},
										{
											"begin": 1989,
											"end": 2439,
											"name": "PUSH",
											"source": 9,
											"value": "4"
										},
										{
											"begin": 1989,
											"end": 2439,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 1989,
											"end": 2439,
											"name": "CALLDATASIZE",
											"source": 9
										},
										{
											"begin": 1989,
											"end": 2439,
											"name": "SUB",
											"source": 9
										},
										{
											"begin": 1989,
											"end": 2439,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 1989,
											"end": 2439,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 1989,
											"end": 2439,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 1989,
											"end": 2439,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "32"
										},
										{
											"begin": 1989,
											"end": 2439,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 1989,
											"end": 2439,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 1989,
											"end": 2439,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "33"
										},
										{
											"begin": 1989,
											"end": 2439,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 1989,
											"end": 2439,
											"name": "tag",
											"source": 9,
											"value": "32"
										},
										{
											"begin": 1989,
											"end": 2439,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 1989,
											"end": 2439,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "34"
										},
										{
											"begin": 1989,
											"end": 2439,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 1989,
											"end": 2439,
											"name": "tag",
											"source": 9,
											"value": "31"
										},
										{
											"begin": 1989,
											"end": 2439,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 1989,
											"end": 2439,
											"name": "STOP",
											"source": 9
										},
										{
											"begin": 1831,
											"end": 1932,
											"name": "tag",
											"source": 0,
											"value": "7"
										},
										{
											"begin": 1831,
											"end": 1932,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1831,
											"end": 1932,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "35"
										},
										{
											"begin": 1831,
											"end": 1932,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "36"
										},
										{
											"begin": 1831,
											"end": 1932,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 1831,
											"end": 1932,
											"name": "tag",
											"source": 0,
											"value": "35"
										},
										{
											"begin": 1831,
											"end": 1932,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1831,
											"end": 1932,
											"name": "STOP",
											"source": 0
										},
										{
											"begin": 584,
											"end": 612,
											"name": "tag",
											"source": 9,
											"value": "8"
										},
										{
											"begin": 584,
											"end": 612,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 584,
											"end": 612,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "37"
										},
										{
											"begin": 584,
											"end": 612,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "38"
										},
										{
											"begin": 584,
											"end": 612,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 584,
											"end": 612,
											"name": "tag",
											"source": 9,
											"value": "37"
										},
										{
											"begin": 584,
											"end": 612,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 584,
											"end": 612,
											"name": "PUSH",
											"source": 9,
											"value": "40"
										},
										{
											"begin": 584,
											"end": 612,
											"name": "MLOAD",
											"source": 9
										},
										{
											"begin": 584,
											"end": 612,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "39"
										},
										{
											"begin": 584,
											"end": 612,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 584,
											"end": 612,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 584,
											"end": 612,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "40"
										},
										{
											"begin": 584,
											"end": 612,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 584,
											"end": 612,
											"name": "tag",
											"source": 9,
											"value": "39"
										},
										{
											"begin": 584,
											"end": 612,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 584,
											"end": 612,
											"name": "PUSH",
											"source": 9,
											"value": "40"
										},
										{
											"begin": 584,
											"end": 612,
											"name": "MLOAD",
											"source": 9
										},
										{
											"begin": 584,
											"end": 612,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 584,
											"end": 612,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 584,
											"end": 612,
											"name": "SUB",
											"source": 9
										},
										{
											"begin": 584,
											"end": 612,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 584,
											"end": 612,
											"name": "RETURN",
											"source": 9
										},
										{
											"begin": 2602,
											"end": 3235,
											"name": "tag",
											"source": 9,
											"value": "9"
										},
										{
											"begin": 2602,
											"end": 3235,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 2602,
											"end": 3235,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "41"
										},
										{
											"begin": 2602,
											"end": 3235,
											"name": "PUSH",
											"source": 9,
											"value": "4"
										},
										{
											"begin": 2602,
											"end": 3235,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 2602,
											"end": 3235,
											"name": "CALLDATASIZE",
											"source": 9
										},
										{
											"begin": 2602,
											"end": 3235,
											"name": "SUB",
											"source": 9
										},
										{
											"begin": 2602,
											"end": 3235,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 2602,
											"end": 3235,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 2602,
											"end": 3235,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 2602,
											"end": 3235,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "42"
										},
										{
											"begin": 2602,
											"end": 3235,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 2602,
											"end": 3235,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 2602,
											"end": 3235,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "43"
										},
										{
											"begin": 2602,
											"end": 3235,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 2602,
											"end": 3235,
											"name": "tag",
											"source": 9,
											"value": "42"
										},
										{
											"begin": 2602,
											"end": 3235,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 2602,
											"end": 3235,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "44"
										},
										{
											"begin": 2602,
											"end": 3235,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 2602,
											"end": 3235,
											"name": "tag",
											"source": 9,
											"value": "41"
										},
										{
											"begin": 2602,
											"end": 3235,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 2602,
											"end": 3235,
											"name": "STOP",
											"source": 9
										},
										{
											"begin": 3328,
											"end": 3519,
											"name": "tag",
											"source": 9,
											"value": "10"
										},
										{
											"begin": 3328,
											"end": 3519,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 3328,
											"end": 3519,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "45"
										},
										{
											"begin": 3328,
											"end": 3519,
											"name": "PUSH",
											"source": 9,
											"value": "4"
										},
										{
											"begin": 3328,
											"end": 3519,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 3328,
											"end": 3519,
											"name": "CALLDATASIZE",
											"source": 9
										},
										{
											"begin": 3328,
											"end": 3519,
											"name": "SUB",
											"source": 9
										},
										{
											"begin": 3328,
											"end": 3519,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 3328,
											"end": 3519,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 3328,
											"end": 3519,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 3328,
											"end": 3519,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "46"
										},
										{
											"begin": 3328,
											"end": 3519,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 3328,
											"end": 3519,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 3328,
											"end": 3519,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "47"
										},
										{
											"begin": 3328,
											"end": 3519,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 3328,
											"end": 3519,
											"name": "tag",
											"source": 9,
											"value": "46"
										},
										{
											"begin": 3328,
											"end": 3519,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 3328,
											"end": 3519,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "48"
										},
										{
											"begin": 3328,
											"end": 3519,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 3328,
											"end": 3519,
											"name": "tag",
											"source": 9,
											"value": "45"
										},
										{
											"begin": 3328,
											"end": 3519,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 3328,
											"end": 3519,
											"name": "PUSH",
											"source": 9,
											"value": "40"
										},
										{
											"begin": 3328,
											"end": 3519,
											"name": "MLOAD",
											"source": 9
										},
										{
											"begin": 3328,
											"end": 3519,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "49"
										},
										{
											"begin": 3328,
											"end": 3519,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 3328,
											"end": 3519,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 3328,
											"end": 3519,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "50"
										},
										{
											"begin": 3328,
											"end": 3519,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 3328,
											"end": 3519,
											"name": "tag",
											"source": 9,
											"value": "49"
										},
										{
											"begin": 3328,
											"end": 3519,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 3328,
											"end": 3519,
											"name": "PUSH",
											"source": 9,
											"value": "40"
										},
										{
											"begin": 3328,
											"end": 3519,
											"name": "MLOAD",
											"source": 9
										},
										{
											"begin": 3328,
											"end": 3519,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 3328,
											"end": 3519,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 3328,
											"end": 3519,
											"name": "SUB",
											"source": 9
										},
										{
											"begin": 3328,
											"end": 3519,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 3328,
											"end": 3519,
											"name": "RETURN",
											"source": 9
										},
										{
											"begin": 1201,
											"end": 1286,
											"name": "tag",
											"source": 0,
											"value": "11"
										},
										{
											"begin": 1201,
											"end": 1286,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1201,
											"end": 1286,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "51"
										},
										{
											"begin": 1201,
											"end": 1286,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "52"
										},
										{
											"begin": 1201,
											"end": 1286,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 1201,
											"end": 1286,
											"name": "tag",
											"source": 0,
											"value": "51"
										},
										{
											"begin": 1201,
											"end": 1286,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1201,
											"end": 1286,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 1201,
											"end": 1286,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 1201,
											"end": 1286,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "53"
										},
										{
											"begin": 1201,
											"end": 1286,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 1201,
											"end": 1286,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 1201,
											"end": 1286,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "54"
										},
										{
											"begin": 1201,
											"end": 1286,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 1201,
											"end": 1286,
											"name": "tag",
											"source": 0,
											"value": "53"
										},
										{
											"begin": 1201,
											"end": 1286,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1201,
											"end": 1286,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 1201,
											"end": 1286,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 1201,
											"end": 1286,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 1201,
											"end": 1286,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 1201,
											"end": 1286,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 1201,
											"end": 1286,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 1201,
											"end": 1286,
											"name": "RETURN",
											"source": 0
										},
										{
											"begin": 939,
											"end": 979,
											"name": "tag",
											"source": 9,
											"value": "12"
										},
										{
											"begin": 939,
											"end": 979,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 939,
											"end": 979,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "55"
										},
										{
											"begin": 939,
											"end": 979,
											"name": "PUSH",
											"source": 9,
											"value": "4"
										},
										{
											"begin": 939,
											"end": 979,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 939,
											"end": 979,
											"name": "CALLDATASIZE",
											"source": 9
										},
										{
											"begin": 939,
											"end": 979,
											"name": "SUB",
											"source": 9
										},
										{
											"begin": 939,
											"end": 979,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 939,
											"end": 979,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 939,
											"end": 979,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 939,
											"end": 979,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "56"
										},
										{
											"begin": 939,
											"end": 979,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 939,
											"end": 979,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 939,
											"end": 979,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "57"
										},
										{
											"begin": 939,
											"end": 979,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 939,
											"end": 979,
											"name": "tag",
											"source": 9,
											"value": "56"
										},
										{
											"begin": 939,
											"end": 979,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 939,
											"end": 979,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "58"
										},
										{
											"begin": 939,
											"end": 979,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 939,
											"end": 979,
											"name": "tag",
											"source": 9,
											"value": "55"
										},
										{
											"begin": 939,
											"end": 979,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 939,
											"end": 979,
											"name": "PUSH",
											"source": 9,
											"value": "40"
										},
										{
											"begin": 939,
											"end": 979,
											"name": "MLOAD",
											"source": 9
										},
										{
											"begin": 939,
											"end": 979,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "59"
										},
										{
											"begin": 939,
											"end": 979,
											"name": "SWAP6",
											"source": 9
										},
										{
											"begin": 939,
											"end": 979,
											"name": "SWAP5",
											"source": 9
										},
										{
											"begin": 939,
											"end": 979,
											"name": "SWAP4",
											"source": 9
										},
										{
											"begin": 939,
											"end": 979,
											"name": "SWAP3",
											"source": 9
										},
										{
											"begin": 939,
											"end": 979,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 939,
											"end": 979,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 939,
											"end": 979,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "60"
										},
										{
											"begin": 939,
											"end": 979,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 939,
											"end": 979,
											"name": "tag",
											"source": 9,
											"value": "59"
										},
										{
											"begin": 939,
											"end": 979,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 939,
											"end": 979,
											"name": "PUSH",
											"source": 9,
											"value": "40"
										},
										{
											"begin": 939,
											"end": 979,
											"name": "MLOAD",
											"source": 9
										},
										{
											"begin": 939,
											"end": 979,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 939,
											"end": 979,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 939,
											"end": 979,
											"name": "SUB",
											"source": 9
										},
										{
											"begin": 939,
											"end": 979,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 939,
											"end": 979,
											"name": "RETURN",
											"source": 9
										},
										{
											"begin": 2081,
											"end": 2279,
											"name": "tag",
											"source": 0,
											"value": "13"
										},
										{
											"begin": 2081,
											"end": 2279,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2081,
											"end": 2279,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "61"
										},
										{
											"begin": 2081,
											"end": 2279,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 2081,
											"end": 2279,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 2081,
											"end": 2279,
											"name": "CALLDATASIZE",
											"source": 0
										},
										{
											"begin": 2081,
											"end": 2279,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 2081,
											"end": 2279,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 2081,
											"end": 2279,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 2081,
											"end": 2279,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 2081,
											"end": 2279,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "62"
										},
										{
											"begin": 2081,
											"end": 2279,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 2081,
											"end": 2279,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 2081,
											"end": 2279,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "47"
										},
										{
											"begin": 2081,
											"end": 2279,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 2081,
											"end": 2279,
											"name": "tag",
											"source": 0,
											"value": "62"
										},
										{
											"begin": 2081,
											"end": 2279,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2081,
											"end": 2279,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "63"
										},
										{
											"begin": 2081,
											"end": 2279,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 2081,
											"end": 2279,
											"name": "tag",
											"source": 0,
											"value": "61"
										},
										{
											"begin": 2081,
											"end": 2279,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2081,
											"end": 2279,
											"name": "STOP",
											"source": 0
										},
										{
											"begin": 640,
											"end": 665,
											"name": "tag",
											"source": 9,
											"value": "14"
										},
										{
											"begin": 640,
											"end": 665,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 640,
											"end": 665,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "64"
										},
										{
											"begin": 640,
											"end": 665,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "65"
										},
										{
											"begin": 640,
											"end": 665,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 640,
											"end": 665,
											"name": "tag",
											"source": 9,
											"value": "64"
										},
										{
											"begin": 640,
											"end": 665,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 640,
											"end": 665,
											"name": "PUSH",
											"source": 9,
											"value": "40"
										},
										{
											"begin": 640,
											"end": 665,
											"name": "MLOAD",
											"source": 9
										},
										{
											"begin": 640,
											"end": 665,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "66"
										},
										{
											"begin": 640,
											"end": 665,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 640,
											"end": 665,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 640,
											"end": 665,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "67"
										},
										{
											"begin": 640,
											"end": 665,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 640,
											"end": 665,
											"name": "tag",
											"source": 9,
											"value": "66"
										},
										{
											"begin": 640,
											"end": 665,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 640,
											"end": 665,
											"name": "PUSH",
											"source": 9,
											"value": "40"
										},
										{
											"begin": 640,
											"end": 665,
											"name": "MLOAD",
											"source": 9
										},
										{
											"begin": 640,
											"end": 665,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 640,
											"end": 665,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 640,
											"end": 665,
											"name": "SUB",
											"source": 9
										},
										{
											"begin": 640,
											"end": 665,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 640,
											"end": 665,
											"name": "RETURN",
											"source": 9
										},
										{
											"begin": 3657,
											"end": 3961,
											"name": "tag",
											"source": 9,
											"value": "15"
										},
										{
											"begin": 3657,
											"end": 3961,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 3657,
											"end": 3961,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "68"
										},
										{
											"begin": 3657,
											"end": 3961,
											"name": "PUSH",
											"source": 9,
											"value": "4"
										},
										{
											"begin": 3657,
											"end": 3961,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 3657,
											"end": 3961,
											"name": "CALLDATASIZE",
											"source": 9
										},
										{
											"begin": 3657,
											"end": 3961,
											"name": "SUB",
											"source": 9
										},
										{
											"begin": 3657,
											"end": 3961,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 3657,
											"end": 3961,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 3657,
											"end": 3961,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 3657,
											"end": 3961,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "69"
										},
										{
											"begin": 3657,
											"end": 3961,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 3657,
											"end": 3961,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 3657,
											"end": 3961,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "70"
										},
										{
											"begin": 3657,
											"end": 3961,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 3657,
											"end": 3961,
											"name": "tag",
											"source": 9,
											"value": "69"
										},
										{
											"begin": 3657,
											"end": 3961,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 3657,
											"end": 3961,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "71"
										},
										{
											"begin": 3657,
											"end": 3961,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 3657,
											"end": 3961,
											"name": "tag",
											"source": 9,
											"value": "68"
										},
										{
											"begin": 3657,
											"end": 3961,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 3657,
											"end": 3961,
											"name": "PUSH",
											"source": 9,
											"value": "40"
										},
										{
											"begin": 3657,
											"end": 3961,
											"name": "MLOAD",
											"source": 9
										},
										{
											"begin": 3657,
											"end": 3961,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "72"
										},
										{
											"begin": 3657,
											"end": 3961,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 3657,
											"end": 3961,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 3657,
											"end": 3961,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "73"
										},
										{
											"begin": 3657,
											"end": 3961,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 3657,
											"end": 3961,
											"name": "tag",
											"source": 9,
											"value": "72"
										},
										{
											"begin": 3657,
											"end": 3961,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 3657,
											"end": 3961,
											"name": "PUSH",
											"source": 9,
											"value": "40"
										},
										{
											"begin": 3657,
											"end": 3961,
											"name": "MLOAD",
											"source": 9
										},
										{
											"begin": 3657,
											"end": 3961,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 3657,
											"end": 3961,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 3657,
											"end": 3961,
											"name": "SUB",
											"source": 9
										},
										{
											"begin": 3657,
											"end": 3961,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 3657,
											"end": 3961,
											"name": "RETURN",
											"source": 9
										},
										{
											"begin": 696,
											"end": 720,
											"name": "tag",
											"source": 9,
											"value": "19"
										},
										{
											"begin": 696,
											"end": 720,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 696,
											"end": 720,
											"name": "PUSH",
											"source": 9,
											"value": "4"
										},
										{
											"begin": 696,
											"end": 720,
											"name": "SLOAD",
											"source": 9
										},
										{
											"begin": 696,
											"end": 720,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 696,
											"end": 720,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 1043,
											"end": 1097,
											"name": "tag",
											"source": 9,
											"value": "25"
										},
										{
											"begin": 1043,
											"end": 1097,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 1043,
											"end": 1097,
											"name": "PUSH",
											"source": 9,
											"value": "8"
										},
										{
											"begin": 1043,
											"end": 1097,
											"name": "PUSH",
											"source": 9,
											"value": "20"
										},
										{
											"begin": 1043,
											"end": 1097,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 1043,
											"end": 1097,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 1043,
											"end": 1097,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 1043,
											"end": 1097,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 1043,
											"end": 1097,
											"name": "PUSH",
											"source": 9,
											"value": "40"
										},
										{
											"begin": 1043,
											"end": 1097,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 1043,
											"end": 1097,
											"name": "KECCAK256",
											"source": 9
										},
										{
											"begin": 1043,
											"end": 1097,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 1043,
											"end": 1097,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 1043,
											"end": 1097,
											"name": "SLOAD",
											"source": 9
										},
										{
											"begin": 1043,
											"end": 1097,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 1043,
											"end": 1097,
											"name": "LT",
											"source": 9
										},
										{
											"begin": 1043,
											"end": 1097,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "74"
										},
										{
											"begin": 1043,
											"end": 1097,
											"name": "JUMPI",
											"source": 9
										},
										{
											"begin": 1043,
											"end": 1097,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 1043,
											"end": 1097,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 1043,
											"end": 1097,
											"name": "REVERT",
											"source": 9
										},
										{
											"begin": 1043,
											"end": 1097,
											"name": "tag",
											"source": 9,
											"value": "74"
										},
										{
											"begin": 1043,
											"end": 1097,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 1043,
											"end": 1097,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 1043,
											"end": 1097,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 1043,
											"end": 1097,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 1043,
											"end": 1097,
											"name": "PUSH",
											"source": 9,
											"value": "20"
										},
										{
											"begin": 1043,
											"end": 1097,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 1043,
											"end": 1097,
											"name": "KECCAK256",
											"source": 9
										},
										{
											"begin": 1043,
											"end": 1097,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 1043,
											"end": 1097,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 1043,
											"end": 1097,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 1043,
											"end": 1097,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 1043,
											"end": 1097,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 1043,
											"end": 1097,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 1043,
											"end": 1097,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 1043,
											"end": 1097,
											"name": "SLOAD",
											"source": 9
										},
										{
											"begin": 1043,
											"end": 1097,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 1043,
											"end": 1097,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 985,
											"end": 1037,
											"name": "tag",
											"source": 9,
											"value": "29"
										},
										{
											"begin": 985,
											"end": 1037,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 985,
											"end": 1037,
											"name": "PUSH",
											"source": 9,
											"value": "7"
										},
										{
											"begin": 985,
											"end": 1037,
											"name": "PUSH",
											"source": 9,
											"value": "20"
										},
										{
											"begin": 985,
											"end": 1037,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 985,
											"end": 1037,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 985,
											"end": 1037,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 985,
											"end": 1037,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 985,
											"end": 1037,
											"name": "PUSH",
											"source": 9,
											"value": "40"
										},
										{
											"begin": 985,
											"end": 1037,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 985,
											"end": 1037,
											"name": "KECCAK256",
											"source": 9
										},
										{
											"begin": 985,
											"end": 1037,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 985,
											"end": 1037,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 985,
											"end": 1037,
											"name": "SLOAD",
											"source": 9
										},
										{
											"begin": 985,
											"end": 1037,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 985,
											"end": 1037,
											"name": "LT",
											"source": 9
										},
										{
											"begin": 985,
											"end": 1037,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "76"
										},
										{
											"begin": 985,
											"end": 1037,
											"name": "JUMPI",
											"source": 9
										},
										{
											"begin": 985,
											"end": 1037,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 985,
											"end": 1037,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 985,
											"end": 1037,
											"name": "REVERT",
											"source": 9
										},
										{
											"begin": 985,
											"end": 1037,
											"name": "tag",
											"source": 9,
											"value": "76"
										},
										{
											"begin": 985,
											"end": 1037,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 985,
											"end": 1037,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 985,
											"end": 1037,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 985,
											"end": 1037,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 985,
											"end": 1037,
											"name": "PUSH",
											"source": 9,
											"value": "20"
										},
										{
											"begin": 985,
											"end": 1037,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 985,
											"end": 1037,
											"name": "KECCAK256",
											"source": 9
										},
										{
											"begin": 985,
											"end": 1037,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 985,
											"end": 1037,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 985,
											"end": 1037,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 985,
											"end": 1037,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 985,
											"end": 1037,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 985,
											"end": 1037,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 985,
											"end": 1037,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 985,
											"end": 1037,
											"name": "SLOAD",
											"source": 9
										},
										{
											"begin": 985,
											"end": 1037,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 985,
											"end": 1037,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 1989,
											"end": 2439,
											"name": "tag",
											"source": 9,
											"value": "34"
										},
										{
											"begin": 1989,
											"end": 2439,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 2100,
											"end": 2110,
											"name": "CALLER",
											"source": 9
										},
										{
											"begin": 2065,
											"end": 2110,
											"name": "PUSH",
											"source": 9,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 2065,
											"end": 2110,
											"name": "AND",
											"source": 9
										},
										{
											"begin": 2065,
											"end": 2078,
											"name": "PUSH",
											"source": 9,
											"value": "2"
										},
										{
											"begin": 2065,
											"end": 2078,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 2065,
											"end": 2078,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 2065,
											"end": 2078,
											"name": "SLOAD",
											"source": 9
										},
										{
											"begin": 2065,
											"end": 2078,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 2065,
											"end": 2078,
											"name": "PUSH",
											"source": 9,
											"value": "100"
										},
										{
											"begin": 2065,
											"end": 2078,
											"name": "EXP",
											"source": 9
										},
										{
											"begin": 2065,
											"end": 2078,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 2065,
											"end": 2078,
											"name": "DIV",
											"source": 9
										},
										{
											"begin": 2065,
											"end": 2078,
											"name": "PUSH",
											"source": 9,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 2065,
											"end": 2078,
											"name": "AND",
											"source": 9
										},
										{
											"begin": 2065,
											"end": 2086,
											"name": "PUSH",
											"source": 9,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 2065,
											"end": 2086,
											"name": "AND",
											"source": 9
										},
										{
											"begin": 2065,
											"end": 2086,
											"name": "PUSH",
											"source": 9,
											"value": "6352211E"
										},
										{
											"begin": 2087,
											"end": 2095,
											"name": "DUP5",
											"source": 9
										},
										{
											"begin": 2065,
											"end": 2096,
											"name": "PUSH",
											"source": 9,
											"value": "40"
										},
										{
											"begin": 2065,
											"end": 2096,
											"name": "MLOAD",
											"source": 9
										},
										{
											"begin": 2065,
											"end": 2096,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 2065,
											"end": 2096,
											"name": "PUSH",
											"source": 9,
											"value": "FFFFFFFF"
										},
										{
											"begin": 2065,
											"end": 2096,
											"name": "AND",
											"source": 9
										},
										{
											"begin": 2065,
											"end": 2096,
											"name": "PUSH",
											"source": 9,
											"value": "E0"
										},
										{
											"begin": 2065,
											"end": 2096,
											"name": "SHL",
											"source": 9
										},
										{
											"begin": 2065,
											"end": 2096,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 2065,
											"end": 2096,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 2065,
											"end": 2096,
											"name": "PUSH",
											"source": 9,
											"value": "4"
										},
										{
											"begin": 2065,
											"end": 2096,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 2065,
											"end": 2096,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "79"
										},
										{
											"begin": 2065,
											"end": 2096,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 2065,
											"end": 2096,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 2065,
											"end": 2096,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "21"
										},
										{
											"begin": 2065,
											"end": 2096,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 2065,
											"end": 2096,
											"name": "tag",
											"source": 9,
											"value": "79"
										},
										{
											"begin": 2065,
											"end": 2096,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 2065,
											"end": 2096,
											"name": "PUSH",
											"source": 9,
											"value": "20"
										},
										{
											"begin": 2065,
											"end": 2096,
											"name": "PUSH",
											"source": 9,
											"value": "40"
										},
										{
											"begin": 2065,
											"end": 2096,
											"name": "MLOAD",
											"source": 9
										},
										{
											"begin": 2065,
											"end": 2096,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 2065,
											"end": 2096,
											"name": "DUP4",
											"source": 9
										},
										{
											"begin": 2065,
											"end": 2096,
											"name": "SUB",
											"source": 9
										},
										{
											"begin": 2065,
											"end": 2096,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 2065,
											"end": 2096,
											"name": "DUP7",
											"source": 9
										},
										{
											"begin": 2065,
											"end": 2096,
											"name": "GAS",
											"source": 9
										},
										{
											"begin": 2065,
											"end": 2096,
											"name": "STATICCALL",
											"source": 9
										},
										{
											"begin": 2065,
											"end": 2096,
											"name": "ISZERO",
											"source": 9
										},
										{
											"begin": 2065,
											"end": 2096,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 2065,
											"end": 2096,
											"name": "ISZERO",
											"source": 9
										},
										{
											"begin": 2065,
											"end": 2096,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "81"
										},
										{
											"begin": 2065,
											"end": 2096,
											"name": "JUMPI",
											"source": 9
										},
										{
											"begin": 2065,
											"end": 2096,
											"name": "RETURNDATASIZE",
											"source": 9
										},
										{
											"begin": 2065,
											"end": 2096,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 2065,
											"end": 2096,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 2065,
											"end": 2096,
											"name": "RETURNDATACOPY",
											"source": 9
										},
										{
											"begin": 2065,
											"end": 2096,
											"name": "RETURNDATASIZE",
											"source": 9
										},
										{
											"begin": 2065,
											"end": 2096,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 2065,
											"end": 2096,
											"name": "REVERT",
											"source": 9
										},
										{
											"begin": 2065,
											"end": 2096,
											"name": "tag",
											"source": 9,
											"value": "81"
										},
										{
											"begin": 2065,
											"end": 2096,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 2065,
											"end": 2096,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 2065,
											"end": 2096,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 2065,
											"end": 2096,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 2065,
											"end": 2096,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 2065,
											"end": 2096,
											"name": "PUSH",
											"source": 9,
											"value": "40"
										},
										{
											"begin": 2065,
											"end": 2096,
											"name": "MLOAD",
											"source": 9
										},
										{
											"begin": 2065,
											"end": 2096,
											"name": "RETURNDATASIZE",
											"source": 9
										},
										{
											"begin": 2065,
											"end": 2096,
											"name": "PUSH",
											"source": 9,
											"value": "1F"
										},
										{
											"begin": 2065,
											"end": 2096,
											"name": "NOT",
											"source": 9
										},
										{
											"begin": 2065,
											"end": 2096,
											"name": "PUSH",
											"source": 9,
											"value": "1F"
										},
										{
											"begin": 2065,
											"end": 2096,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 2065,
											"end": 2096,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 2065,
											"end": 2096,
											"name": "AND",
											"source": 9
										},
										{
											"begin": 2065,
											"end": 2096,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 2065,
											"end": 2096,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 2065,
											"end": 2096,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 2065,
											"end": 2096,
											"name": "PUSH",
											"source": 9,
											"value": "40"
										},
										{
											"begin": 2065,
											"end": 2096,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 2065,
											"end": 2096,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 2065,
											"end": 2096,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 2065,
											"end": 2096,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 2065,
											"end": 2096,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 2065,
											"end": 2096,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "82"
										},
										{
											"begin": 2065,
											"end": 2096,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 2065,
											"end": 2096,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 2065,
											"end": 2096,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "83"
										},
										{
											"begin": 2065,
											"end": 2096,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 2065,
											"end": 2096,
											"name": "tag",
											"source": 9,
											"value": "82"
										},
										{
											"begin": 2065,
											"end": 2096,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 2065,
											"end": 2110,
											"name": "PUSH",
											"source": 9,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 2065,
											"end": 2110,
											"name": "AND",
											"source": 9
										},
										{
											"begin": 2065,
											"end": 2110,
											"name": "EQ",
											"source": 9
										},
										{
											"begin": 2057,
											"end": 2144,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "84"
										},
										{
											"begin": 2057,
											"end": 2144,
											"name": "JUMPI",
											"source": 9
										},
										{
											"begin": 2057,
											"end": 2144,
											"name": "PUSH",
											"source": 9,
											"value": "40"
										},
										{
											"begin": 2057,
											"end": 2144,
											"name": "MLOAD",
											"source": 9
										},
										{
											"begin": 2057,
											"end": 2144,
											"name": "PUSH",
											"source": 9,
											"value": "8C379A000000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 2057,
											"end": 2144,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 2057,
											"end": 2144,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 2057,
											"end": 2144,
											"name": "PUSH",
											"source": 9,
											"value": "4"
										},
										{
											"begin": 2057,
											"end": 2144,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 2057,
											"end": 2144,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "85"
										},
										{
											"begin": 2057,
											"end": 2144,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 2057,
											"end": 2144,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "86"
										},
										{
											"begin": 2057,
											"end": 2144,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 2057,
											"end": 2144,
											"name": "tag",
											"source": 9,
											"value": "85"
										},
										{
											"begin": 2057,
											"end": 2144,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 2057,
											"end": 2144,
											"name": "PUSH",
											"source": 9,
											"value": "40"
										},
										{
											"begin": 2057,
											"end": 2144,
											"name": "MLOAD",
											"source": 9
										},
										{
											"begin": 2057,
											"end": 2144,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 2057,
											"end": 2144,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 2057,
											"end": 2144,
											"name": "SUB",
											"source": 9
										},
										{
											"begin": 2057,
											"end": 2144,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 2057,
											"end": 2144,
											"name": "REVERT",
											"source": 9
										},
										{
											"begin": 2057,
											"end": 2144,
											"name": "tag",
											"source": 9,
											"value": "84"
										},
										{
											"begin": 2057,
											"end": 2144,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 2170,
											"end": 2227,
											"name": "PUSH",
											"source": 9,
											"value": "40"
										},
										{
											"begin": 2170,
											"end": 2227,
											"name": "MLOAD",
											"source": 9
										},
										{
											"begin": 2170,
											"end": 2227,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 2170,
											"end": 2227,
											"name": "PUSH",
											"source": 9,
											"value": "A0"
										},
										{
											"begin": 2170,
											"end": 2227,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 2170,
											"end": 2227,
											"name": "PUSH",
											"source": 9,
											"value": "40"
										},
										{
											"begin": 2170,
											"end": 2227,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 2170,
											"end": 2227,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 2177,
											"end": 2182,
											"name": "PUSH",
											"source": 9,
											"value": "4"
										},
										{
											"begin": 2177,
											"end": 2182,
											"name": "SLOAD",
											"source": 9
										},
										{
											"begin": 2170,
											"end": 2227,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 2170,
											"end": 2227,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 2170,
											"end": 2227,
											"name": "PUSH",
											"source": 9,
											"value": "20"
										},
										{
											"begin": 2170,
											"end": 2227,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 2183,
											"end": 2193,
											"name": "CALLER",
											"source": 9
										},
										{
											"begin": 2170,
											"end": 2227,
											"name": "PUSH",
											"source": 9,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 2170,
											"end": 2227,
											"name": "AND",
											"source": 9
										},
										{
											"begin": 2170,
											"end": 2227,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 2170,
											"end": 2227,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 2170,
											"end": 2227,
											"name": "PUSH",
											"source": 9,
											"value": "20"
										},
										{
											"begin": 2170,
											"end": 2227,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 2194,
											"end": 2202,
											"name": "DUP4",
											"source": 9
										},
										{
											"begin": 2170,
											"end": 2227,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 2170,
											"end": 2227,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 2170,
											"end": 2227,
											"name": "PUSH",
											"source": 9,
											"value": "20"
										},
										{
											"begin": 2170,
											"end": 2227,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 2204,
											"end": 2209,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 2170,
											"end": 2227,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 2170,
											"end": 2227,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 2170,
											"end": 2227,
											"name": "PUSH",
											"source": 9,
											"value": "20"
										},
										{
											"begin": 2170,
											"end": 2227,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 2211,
											"end": 2226,
											"name": "TIMESTAMP",
											"source": 9
										},
										{
											"begin": 2170,
											"end": 2227,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 2170,
											"end": 2227,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 2170,
											"end": 2227,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 2154,
											"end": 2160,
											"name": "PUSH",
											"source": 9,
											"value": "6"
										},
										{
											"begin": 2154,
											"end": 2167,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 2161,
											"end": 2166,
											"name": "PUSH",
											"source": 9,
											"value": "4"
										},
										{
											"begin": 2161,
											"end": 2166,
											"name": "SLOAD",
											"source": 9
										},
										{
											"begin": 2154,
											"end": 2167,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 2154,
											"end": 2167,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 2154,
											"end": 2167,
											"name": "PUSH",
											"source": 9,
											"value": "20"
										},
										{
											"begin": 2154,
											"end": 2167,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 2154,
											"end": 2167,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 2154,
											"end": 2167,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 2154,
											"end": 2167,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 2154,
											"end": 2167,
											"name": "PUSH",
											"source": 9,
											"value": "20"
										},
										{
											"begin": 2154,
											"end": 2167,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 2154,
											"end": 2167,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 2154,
											"end": 2167,
											"name": "KECCAK256",
											"source": 9
										},
										{
											"begin": 2154,
											"end": 2227,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 2154,
											"end": 2227,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 2154,
											"end": 2227,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 2154,
											"end": 2227,
											"name": "MLOAD",
											"source": 9
										},
										{
											"begin": 2154,
											"end": 2227,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 2154,
											"end": 2227,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 2154,
											"end": 2227,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 2154,
											"end": 2227,
											"name": "SSTORE",
											"source": 9
										},
										{
											"begin": 2154,
											"end": 2227,
											"name": "PUSH",
											"source": 9,
											"value": "20"
										},
										{
											"begin": 2154,
											"end": 2227,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 2154,
											"end": 2227,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 2154,
											"end": 2227,
											"name": "MLOAD",
											"source": 9
										},
										{
											"begin": 2154,
											"end": 2227,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 2154,
											"end": 2227,
											"name": "PUSH",
											"source": 9,
											"value": "1"
										},
										{
											"begin": 2154,
											"end": 2227,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 2154,
											"end": 2227,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 2154,
											"end": 2227,
											"name": "PUSH",
											"source": 9,
											"value": "100"
										},
										{
											"begin": 2154,
											"end": 2227,
											"name": "EXP",
											"source": 9
										},
										{
											"begin": 2154,
											"end": 2227,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 2154,
											"end": 2227,
											"name": "SLOAD",
											"source": 9
										},
										{
											"begin": 2154,
											"end": 2227,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 2154,
											"end": 2227,
											"name": "PUSH",
											"source": 9,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 2154,
											"end": 2227,
											"name": "MUL",
											"source": 9
										},
										{
											"begin": 2154,
											"end": 2227,
											"name": "NOT",
											"source": 9
										},
										{
											"begin": 2154,
											"end": 2227,
											"name": "AND",
											"source": 9
										},
										{
											"begin": 2154,
											"end": 2227,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 2154,
											"end": 2227,
											"name": "DUP4",
											"source": 9
										},
										{
											"begin": 2154,
											"end": 2227,
											"name": "PUSH",
											"source": 9,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 2154,
											"end": 2227,
											"name": "AND",
											"source": 9
										},
										{
											"begin": 2154,
											"end": 2227,
											"name": "MUL",
											"source": 9
										},
										{
											"begin": 2154,
											"end": 2227,
											"name": "OR",
											"source": 9
										},
										{
											"begin": 2154,
											"end": 2227,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 2154,
											"end": 2227,
											"name": "SSTORE",
											"source": 9
										},
										{
											"begin": 2154,
											"end": 2227,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 2154,
											"end": 2227,
											"name": "PUSH",
											"source": 9,
											"value": "40"
										},
										{
											"begin": 2154,
											"end": 2227,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 2154,
											"end": 2227,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 2154,
											"end": 2227,
											"name": "MLOAD",
											"source": 9
										},
										{
											"begin": 2154,
											"end": 2227,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 2154,
											"end": 2227,
											"name": "PUSH",
											"source": 9,
											"value": "2"
										},
										{
											"begin": 2154,
											"end": 2227,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 2154,
											"end": 2227,
											"name": "SSTORE",
											"source": 9
										},
										{
											"begin": 2154,
											"end": 2227,
											"name": "PUSH",
											"source": 9,
											"value": "60"
										},
										{
											"begin": 2154,
											"end": 2227,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 2154,
											"end": 2227,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 2154,
											"end": 2227,
											"name": "MLOAD",
											"source": 9
										},
										{
											"begin": 2154,
											"end": 2227,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 2154,
											"end": 2227,
											"name": "PUSH",
											"source": 9,
											"value": "3"
										},
										{
											"begin": 2154,
											"end": 2227,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 2154,
											"end": 2227,
											"name": "SSTORE",
											"source": 9
										},
										{
											"begin": 2154,
											"end": 2227,
											"name": "PUSH",
											"source": 9,
											"value": "80"
										},
										{
											"begin": 2154,
											"end": 2227,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 2154,
											"end": 2227,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 2154,
											"end": 2227,
											"name": "MLOAD",
											"source": 9
										},
										{
											"begin": 2154,
											"end": 2227,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 2154,
											"end": 2227,
											"name": "PUSH",
											"source": 9,
											"value": "4"
										},
										{
											"begin": 2154,
											"end": 2227,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 2154,
											"end": 2227,
											"name": "SSTORE",
											"source": 9
										},
										{
											"begin": 2154,
											"end": 2227,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 2154,
											"end": 2227,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 2154,
											"end": 2227,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 2237,
											"end": 2252,
											"name": "PUSH",
											"source": 9,
											"value": "7"
										},
										{
											"begin": 2237,
											"end": 2264,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 2253,
											"end": 2263,
											"name": "CALLER",
											"source": 9
										},
										{
											"begin": 2237,
											"end": 2264,
											"name": "PUSH",
											"source": 9,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 2237,
											"end": 2264,
											"name": "AND",
											"source": 9
										},
										{
											"begin": 2237,
											"end": 2264,
											"name": "PUSH",
											"source": 9,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 2237,
											"end": 2264,
											"name": "AND",
											"source": 9
										},
										{
											"begin": 2237,
											"end": 2264,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 2237,
											"end": 2264,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 2237,
											"end": 2264,
											"name": "PUSH",
											"source": 9,
											"value": "20"
										},
										{
											"begin": 2237,
											"end": 2264,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 2237,
											"end": 2264,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 2237,
											"end": 2264,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 2237,
											"end": 2264,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 2237,
											"end": 2264,
											"name": "PUSH",
											"source": 9,
											"value": "20"
										},
										{
											"begin": 2237,
											"end": 2264,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 2237,
											"end": 2264,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 2237,
											"end": 2264,
											"name": "KECCAK256",
											"source": 9
										},
										{
											"begin": 2270,
											"end": 2275,
											"name": "PUSH",
											"source": 9,
											"value": "4"
										},
										{
											"begin": 2270,
											"end": 2275,
											"name": "SLOAD",
											"source": 9
										},
										{
											"begin": 2237,
											"end": 2276,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 2237,
											"end": 2276,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 2237,
											"end": 2276,
											"name": "PUSH",
											"source": 9,
											"value": "1"
										},
										{
											"begin": 2237,
											"end": 2276,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 2237,
											"end": 2276,
											"name": "SLOAD",
											"source": 9
										},
										{
											"begin": 2237,
											"end": 2276,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 2237,
											"end": 2276,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 2237,
											"end": 2276,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 2237,
											"end": 2276,
											"name": "SSTORE",
											"source": 9
										},
										{
											"begin": 2237,
											"end": 2276,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 2237,
											"end": 2276,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 2237,
											"end": 2276,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 2237,
											"end": 2276,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 2237,
											"end": 2276,
											"name": "PUSH",
											"source": 9,
											"value": "1"
										},
										{
											"begin": 2237,
											"end": 2276,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 2237,
											"end": 2276,
											"name": "SUB",
											"source": 9
										},
										{
											"begin": 2237,
											"end": 2276,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 2237,
											"end": 2276,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 2237,
											"end": 2276,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 2237,
											"end": 2276,
											"name": "PUSH",
											"source": 9,
											"value": "20"
										},
										{
											"begin": 2237,
											"end": 2276,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 2237,
											"end": 2276,
											"name": "KECCAK256",
											"source": 9
										},
										{
											"begin": 2237,
											"end": 2276,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 2237,
											"end": 2276,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 2237,
											"end": 2276,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 2237,
											"end": 2276,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 2237,
											"end": 2276,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 2237,
											"end": 2276,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 2237,
											"end": 2276,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 2237,
											"end": 2276,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 2237,
											"end": 2276,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 2237,
											"end": 2276,
											"name": "SSTORE",
											"source": 9
										},
										{
											"begin": 2286,
											"end": 2299,
											"name": "PUSH",
											"source": 9,
											"value": "2"
										},
										{
											"begin": 2286,
											"end": 2299,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 2286,
											"end": 2299,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 2286,
											"end": 2299,
											"name": "SLOAD",
											"source": 9
										},
										{
											"begin": 2286,
											"end": 2299,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 2286,
											"end": 2299,
											"name": "PUSH",
											"source": 9,
											"value": "100"
										},
										{
											"begin": 2286,
											"end": 2299,
											"name": "EXP",
											"source": 9
										},
										{
											"begin": 2286,
											"end": 2299,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 2286,
											"end": 2299,
											"name": "DIV",
											"source": 9
										},
										{
											"begin": 2286,
											"end": 2299,
											"name": "PUSH",
											"source": 9,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 2286,
											"end": 2299,
											"name": "AND",
											"source": 9
										},
										{
											"begin": 2286,
											"end": 2312,
											"name": "PUSH",
											"source": 9,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 2286,
											"end": 2312,
											"name": "AND",
											"source": 9
										},
										{
											"begin": 2286,
											"end": 2312,
											"name": "PUSH",
											"source": 9,
											"value": "23B872DD"
										},
										{
											"begin": 2313,
											"end": 2323,
											"name": "CALLER",
											"source": 9
										},
										{
											"begin": 2333,
											"end": 2337,
											"name": "ADDRESS",
											"source": 9
										},
										{
											"begin": 2340,
											"end": 2348,
											"name": "DUP6",
											"source": 9
										},
										{
											"begin": 2286,
											"end": 2349,
											"name": "PUSH",
											"source": 9,
											"value": "40"
										},
										{
											"begin": 2286,
											"end": 2349,
											"name": "MLOAD",
											"source": 9
										},
										{
											"begin": 2286,
											"end": 2349,
											"name": "DUP5",
											"source": 9
										},
										{
											"begin": 2286,
											"end": 2349,
											"name": "PUSH",
											"source": 9,
											"value": "FFFFFFFF"
										},
										{
											"begin": 2286,
											"end": 2349,
											"name": "AND",
											"source": 9
										},
										{
											"begin": 2286,
											"end": 2349,
											"name": "PUSH",
											"source": 9,
											"value": "E0"
										},
										{
											"begin": 2286,
											"end": 2349,
											"name": "SHL",
											"source": 9
										},
										{
											"begin": 2286,
											"end": 2349,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 2286,
											"end": 2349,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 2286,
											"end": 2349,
											"name": "PUSH",
											"source": 9,
											"value": "4"
										},
										{
											"begin": 2286,
											"end": 2349,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 2286,
											"end": 2349,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "88"
										},
										{
											"begin": 2286,
											"end": 2349,
											"name": "SWAP4",
											"source": 9
										},
										{
											"begin": 2286,
											"end": 2349,
											"name": "SWAP3",
											"source": 9
										},
										{
											"begin": 2286,
											"end": 2349,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 2286,
											"end": 2349,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 2286,
											"end": 2349,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "89"
										},
										{
											"begin": 2286,
											"end": 2349,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 2286,
											"end": 2349,
											"name": "tag",
											"source": 9,
											"value": "88"
										},
										{
											"begin": 2286,
											"end": 2349,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 2286,
											"end": 2349,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 2286,
											"end": 2349,
											"name": "PUSH",
											"source": 9,
											"value": "40"
										},
										{
											"begin": 2286,
											"end": 2349,
											"name": "MLOAD",
											"source": 9
										},
										{
											"begin": 2286,
											"end": 2349,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 2286,
											"end": 2349,
											"name": "DUP4",
											"source": 9
										},
										{
											"begin": 2286,
											"end": 2349,
											"name": "SUB",
											"source": 9
										},
										{
											"begin": 2286,
											"end": 2349,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 2286,
											"end": 2349,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 2286,
											"end": 2349,
											"name": "DUP8",
											"source": 9
										},
										{
											"begin": 2286,
											"end": 2349,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 2286,
											"end": 2349,
											"name": "EXTCODESIZE",
											"source": 9
										},
										{
											"begin": 2286,
											"end": 2349,
											"name": "ISZERO",
											"source": 9
										},
										{
											"begin": 2286,
											"end": 2349,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 2286,
											"end": 2349,
											"name": "ISZERO",
											"source": 9
										},
										{
											"begin": 2286,
											"end": 2349,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "90"
										},
										{
											"begin": 2286,
											"end": 2349,
											"name": "JUMPI",
											"source": 9
										},
										{
											"begin": 2286,
											"end": 2349,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 2286,
											"end": 2349,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 2286,
											"end": 2349,
											"name": "REVERT",
											"source": 9
										},
										{
											"begin": 2286,
											"end": 2349,
											"name": "tag",
											"source": 9,
											"value": "90"
										},
										{
											"begin": 2286,
											"end": 2349,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 2286,
											"end": 2349,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 2286,
											"end": 2349,
											"name": "GAS",
											"source": 9
										},
										{
											"begin": 2286,
											"end": 2349,
											"name": "CALL",
											"source": 9
										},
										{
											"begin": 2286,
											"end": 2349,
											"name": "ISZERO",
											"source": 9
										},
										{
											"begin": 2286,
											"end": 2349,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 2286,
											"end": 2349,
											"name": "ISZERO",
											"source": 9
										},
										{
											"begin": 2286,
											"end": 2349,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "92"
										},
										{
											"begin": 2286,
											"end": 2349,
											"name": "JUMPI",
											"source": 9
										},
										{
											"begin": 2286,
											"end": 2349,
											"name": "RETURNDATASIZE",
											"source": 9
										},
										{
											"begin": 2286,
											"end": 2349,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 2286,
											"end": 2349,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 2286,
											"end": 2349,
											"name": "RETURNDATACOPY",
											"source": 9
										},
										{
											"begin": 2286,
											"end": 2349,
											"name": "RETURNDATASIZE",
											"source": 9
										},
										{
											"begin": 2286,
											"end": 2349,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 2286,
											"end": 2349,
											"name": "REVERT",
											"source": 9
										},
										{
											"begin": 2286,
											"end": 2349,
											"name": "tag",
											"source": 9,
											"value": "92"
										},
										{
											"begin": 2286,
											"end": 2349,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 2286,
											"end": 2349,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 2286,
											"end": 2349,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 2286,
											"end": 2349,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 2286,
											"end": 2349,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 2359,
											"end": 2364,
											"name": "PUSH",
											"source": 9,
											"value": "4"
										},
										{
											"begin": 2359,
											"end": 2364,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 2359,
											"end": 2366,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 2359,
											"end": 2366,
											"name": "SLOAD",
											"source": 9
										},
										{
											"begin": 2359,
											"end": 2366,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 2359,
											"end": 2366,
											"name": "SWAP3",
											"source": 9
										},
										{
											"begin": 2359,
											"end": 2366,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 2359,
											"end": 2366,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 2359,
											"end": 2366,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "93"
										},
										{
											"begin": 2359,
											"end": 2366,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 2359,
											"end": 2366,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "94"
										},
										{
											"begin": 2359,
											"end": 2366,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 2359,
											"end": 2366,
											"name": "tag",
											"source": 9,
											"value": "93"
										},
										{
											"begin": 2359,
											"end": 2366,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 2359,
											"end": 2366,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 2359,
											"end": 2366,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 2359,
											"end": 2366,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 2359,
											"end": 2366,
											"name": "SSTORE",
											"source": 9
										},
										{
											"begin": 2359,
											"end": 2366,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 2387,
											"end": 2397,
											"name": "CALLER",
											"source": 9
										},
										{
											"begin": 2381,
											"end": 2432,
											"name": "PUSH",
											"source": 9,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 2381,
											"end": 2432,
											"name": "AND",
											"source": 9
										},
										{
											"begin": 2381,
											"end": 2432,
											"name": "PUSH",
											"source": 9,
											"value": "F556991011E831BCFAC4F406D547E5E32CDD98267EFAB83935230D5F8D02C446"
										},
										{
											"begin": 2399,
											"end": 2407,
											"name": "DUP4",
											"source": 9
										},
										{
											"begin": 2409,
											"end": 2414,
											"name": "DUP4",
											"source": 9
										},
										{
											"begin": 2416,
											"end": 2431,
											"name": "TIMESTAMP",
											"source": 9
										},
										{
											"begin": 2381,
											"end": 2432,
											"name": "PUSH",
											"source": 9,
											"value": "40"
										},
										{
											"begin": 2381,
											"end": 2432,
											"name": "MLOAD",
											"source": 9
										},
										{
											"begin": 2381,
											"end": 2432,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "95"
										},
										{
											"begin": 2381,
											"end": 2432,
											"name": "SWAP4",
											"source": 9
										},
										{
											"begin": 2381,
											"end": 2432,
											"name": "SWAP3",
											"source": 9
										},
										{
											"begin": 2381,
											"end": 2432,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 2381,
											"end": 2432,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 2381,
											"end": 2432,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "96"
										},
										{
											"begin": 2381,
											"end": 2432,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 2381,
											"end": 2432,
											"name": "tag",
											"source": 9,
											"value": "95"
										},
										{
											"begin": 2381,
											"end": 2432,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 2381,
											"end": 2432,
											"name": "PUSH",
											"source": 9,
											"value": "40"
										},
										{
											"begin": 2381,
											"end": 2432,
											"name": "MLOAD",
											"source": 9
										},
										{
											"begin": 2381,
											"end": 2432,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 2381,
											"end": 2432,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 2381,
											"end": 2432,
											"name": "SUB",
											"source": 9
										},
										{
											"begin": 2381,
											"end": 2432,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 2381,
											"end": 2432,
											"name": "LOG2",
											"source": 9
										},
										{
											"begin": 1989,
											"end": 2439,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 1989,
											"end": 2439,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 1989,
											"end": 2439,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 1831,
											"end": 1932,
											"name": "tag",
											"source": 0,
											"value": "36"
										},
										{
											"begin": 1831,
											"end": 1932,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1094,
											"end": 1107,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "98"
										},
										{
											"begin": 1094,
											"end": 1105,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "99"
										},
										{
											"begin": 1094,
											"end": 1107,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 1094,
											"end": 1107,
											"name": "tag",
											"source": 0,
											"value": "98"
										},
										{
											"begin": 1094,
											"end": 1107,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1895,
											"end": 1925,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "101"
										},
										{
											"begin": 1922,
											"end": 1923,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 1895,
											"end": 1913,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "102"
										},
										{
											"begin": 1895,
											"end": 1925,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 1895,
											"end": 1925,
											"modifierDepth": 1,
											"name": "tag",
											"source": 0,
											"value": "101"
										},
										{
											"begin": 1895,
											"end": 1925,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1831,
											"end": 1932,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 584,
											"end": 612,
											"name": "tag",
											"source": 9,
											"value": "38"
										},
										{
											"begin": 584,
											"end": 612,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 584,
											"end": 612,
											"name": "PUSH",
											"source": 9,
											"value": "2"
										},
										{
											"begin": 584,
											"end": 612,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 584,
											"end": 612,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 584,
											"end": 612,
											"name": "SLOAD",
											"source": 9
										},
										{
											"begin": 584,
											"end": 612,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 584,
											"end": 612,
											"name": "PUSH",
											"source": 9,
											"value": "100"
										},
										{
											"begin": 584,
											"end": 612,
											"name": "EXP",
											"source": 9
										},
										{
											"begin": 584,
											"end": 612,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 584,
											"end": 612,
											"name": "DIV",
											"source": 9
										},
										{
											"begin": 584,
											"end": 612,
											"name": "PUSH",
											"source": 9,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 584,
											"end": 612,
											"name": "AND",
											"source": 9
										},
										{
											"begin": 584,
											"end": 612,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 584,
											"end": 612,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 2602,
											"end": 3235,
											"name": "tag",
											"source": 9,
											"value": "44"
										},
										{
											"begin": 2602,
											"end": 3235,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 2758,
											"end": 2763,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 2752,
											"end": 2754,
											"name": "PUSH",
											"source": 9,
											"value": "18"
										},
										{
											"begin": 2747,
											"end": 2749,
											"name": "PUSH",
											"source": 9,
											"value": "3C"
										},
										{
											"begin": 2742,
											"end": 2744,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 2714,
											"end": 2720,
											"name": "PUSH",
											"source": 9,
											"value": "6"
										},
										{
											"begin": 2714,
											"end": 2728,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 2721,
											"end": 2727,
											"name": "DUP9",
											"source": 9
										},
										{
											"begin": 2714,
											"end": 2728,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 2714,
											"end": 2728,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 2714,
											"end": 2728,
											"name": "PUSH",
											"source": 9,
											"value": "20"
										},
										{
											"begin": 2714,
											"end": 2728,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 2714,
											"end": 2728,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 2714,
											"end": 2728,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 2714,
											"end": 2728,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 2714,
											"end": 2728,
											"name": "PUSH",
											"source": 9,
											"value": "20"
										},
										{
											"begin": 2714,
											"end": 2728,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 2714,
											"end": 2728,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 2714,
											"end": 2728,
											"name": "KECCAK256",
											"source": 9
										},
										{
											"begin": 2714,
											"end": 2738,
											"name": "PUSH",
											"source": 9,
											"value": "4"
										},
										{
											"begin": 2714,
											"end": 2738,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 2714,
											"end": 2738,
											"name": "SLOAD",
											"source": 9
										},
										{
											"begin": 2696,
											"end": 2711,
											"name": "TIMESTAMP",
											"source": 9
										},
										{
											"begin": 2696,
											"end": 2738,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "104"
										},
										{
											"begin": 2696,
											"end": 2738,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 2696,
											"end": 2738,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 2696,
											"end": 2738,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "105"
										},
										{
											"begin": 2696,
											"end": 2738,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 2696,
											"end": 2738,
											"name": "tag",
											"source": 9,
											"value": "104"
										},
										{
											"begin": 2696,
											"end": 2738,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 2695,
											"end": 2744,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "106"
										},
										{
											"begin": 2695,
											"end": 2744,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 2695,
											"end": 2744,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 2695,
											"end": 2744,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "107"
										},
										{
											"begin": 2695,
											"end": 2744,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 2695,
											"end": 2744,
											"name": "tag",
											"source": 9,
											"value": "106"
										},
										{
											"begin": 2695,
											"end": 2744,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 2695,
											"end": 2749,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "108"
										},
										{
											"begin": 2695,
											"end": 2749,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 2695,
											"end": 2749,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 2695,
											"end": 2749,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "107"
										},
										{
											"begin": 2695,
											"end": 2749,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 2695,
											"end": 2749,
											"name": "tag",
											"source": 9,
											"value": "108"
										},
										{
											"begin": 2695,
											"end": 2749,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 2695,
											"end": 2754,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "109"
										},
										{
											"begin": 2695,
											"end": 2754,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 2695,
											"end": 2754,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 2695,
											"end": 2754,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "107"
										},
										{
											"begin": 2695,
											"end": 2754,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 2695,
											"end": 2754,
											"name": "tag",
											"source": 9,
											"value": "109"
										},
										{
											"begin": 2695,
											"end": 2754,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 2695,
											"end": 2763,
											"name": "LT",
											"source": 9
										},
										{
											"begin": 2695,
											"end": 2763,
											"name": "ISZERO",
											"source": 9
										},
										{
											"begin": 2687,
											"end": 2797,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "110"
										},
										{
											"begin": 2687,
											"end": 2797,
											"name": "JUMPI",
											"source": 9
										},
										{
											"begin": 2687,
											"end": 2797,
											"name": "PUSH",
											"source": 9,
											"value": "40"
										},
										{
											"begin": 2687,
											"end": 2797,
											"name": "MLOAD",
											"source": 9
										},
										{
											"begin": 2687,
											"end": 2797,
											"name": "PUSH",
											"source": 9,
											"value": "8C379A000000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 2687,
											"end": 2797,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 2687,
											"end": 2797,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 2687,
											"end": 2797,
											"name": "PUSH",
											"source": 9,
											"value": "4"
										},
										{
											"begin": 2687,
											"end": 2797,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 2687,
											"end": 2797,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "111"
										},
										{
											"begin": 2687,
											"end": 2797,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 2687,
											"end": 2797,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "112"
										},
										{
											"begin": 2687,
											"end": 2797,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 2687,
											"end": 2797,
											"name": "tag",
											"source": 9,
											"value": "111"
										},
										{
											"begin": 2687,
											"end": 2797,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 2687,
											"end": 2797,
											"name": "PUSH",
											"source": 9,
											"value": "40"
										},
										{
											"begin": 2687,
											"end": 2797,
											"name": "MLOAD",
											"source": 9
										},
										{
											"begin": 2687,
											"end": 2797,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 2687,
											"end": 2797,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 2687,
											"end": 2797,
											"name": "SUB",
											"source": 9
										},
										{
											"begin": 2687,
											"end": 2797,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 2687,
											"end": 2797,
											"name": "REVERT",
											"source": 9
										},
										{
											"begin": 2687,
											"end": 2797,
											"name": "tag",
											"source": 9,
											"value": "110"
										},
										{
											"begin": 2687,
											"end": 2797,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 2838,
											"end": 2848,
											"name": "CALLER",
											"source": 9
										},
										{
											"begin": 2815,
											"end": 2848,
											"name": "PUSH",
											"source": 9,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 2815,
											"end": 2848,
											"name": "AND",
											"source": 9
										},
										{
											"begin": 2815,
											"end": 2821,
											"name": "PUSH",
											"source": 9,
											"value": "6"
										},
										{
											"begin": 2815,
											"end": 2829,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 2822,
											"end": 2828,
											"name": "DUP6",
											"source": 9
										},
										{
											"begin": 2815,
											"end": 2829,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 2815,
											"end": 2829,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 2815,
											"end": 2829,
											"name": "PUSH",
											"source": 9,
											"value": "20"
										},
										{
											"begin": 2815,
											"end": 2829,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 2815,
											"end": 2829,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 2815,
											"end": 2829,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 2815,
											"end": 2829,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 2815,
											"end": 2829,
											"name": "PUSH",
											"source": 9,
											"value": "20"
										},
										{
											"begin": 2815,
											"end": 2829,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 2815,
											"end": 2829,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 2815,
											"end": 2829,
											"name": "KECCAK256",
											"source": 9
										},
										{
											"begin": 2815,
											"end": 2834,
											"name": "PUSH",
											"source": 9,
											"value": "1"
										},
										{
											"begin": 2815,
											"end": 2834,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 2815,
											"end": 2834,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 2815,
											"end": 2834,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 2815,
											"end": 2834,
											"name": "SLOAD",
											"source": 9
										},
										{
											"begin": 2815,
											"end": 2834,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 2815,
											"end": 2834,
											"name": "PUSH",
											"source": 9,
											"value": "100"
										},
										{
											"begin": 2815,
											"end": 2834,
											"name": "EXP",
											"source": 9
										},
										{
											"begin": 2815,
											"end": 2834,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 2815,
											"end": 2834,
											"name": "DIV",
											"source": 9
										},
										{
											"begin": 2815,
											"end": 2834,
											"name": "PUSH",
											"source": 9,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 2815,
											"end": 2834,
											"name": "AND",
											"source": 9
										},
										{
											"begin": 2815,
											"end": 2848,
											"name": "PUSH",
											"source": 9,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 2815,
											"end": 2848,
											"name": "AND",
											"source": 9
										},
										{
											"begin": 2815,
											"end": 2848,
											"name": "EQ",
											"source": 9
										},
										{
											"begin": 2807,
											"end": 2889,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "113"
										},
										{
											"begin": 2807,
											"end": 2889,
											"name": "JUMPI",
											"source": 9
										},
										{
											"begin": 2807,
											"end": 2889,
											"name": "PUSH",
											"source": 9,
											"value": "40"
										},
										{
											"begin": 2807,
											"end": 2889,
											"name": "MLOAD",
											"source": 9
										},
										{
											"begin": 2807,
											"end": 2889,
											"name": "PUSH",
											"source": 9,
											"value": "8C379A000000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 2807,
											"end": 2889,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 2807,
											"end": 2889,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 2807,
											"end": 2889,
											"name": "PUSH",
											"source": 9,
											"value": "4"
										},
										{
											"begin": 2807,
											"end": 2889,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 2807,
											"end": 2889,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "114"
										},
										{
											"begin": 2807,
											"end": 2889,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 2807,
											"end": 2889,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "115"
										},
										{
											"begin": 2807,
											"end": 2889,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 2807,
											"end": 2889,
											"name": "tag",
											"source": 9,
											"value": "114"
										},
										{
											"begin": 2807,
											"end": 2889,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 2807,
											"end": 2889,
											"name": "PUSH",
											"source": 9,
											"value": "40"
										},
										{
											"begin": 2807,
											"end": 2889,
											"name": "MLOAD",
											"source": 9
										},
										{
											"begin": 2807,
											"end": 2889,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 2807,
											"end": 2889,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 2807,
											"end": 2889,
											"name": "SUB",
											"source": 9
										},
										{
											"begin": 2807,
											"end": 2889,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 2807,
											"end": 2889,
											"name": "REVERT",
											"source": 9
										},
										{
											"begin": 2807,
											"end": 2889,
											"name": "tag",
											"source": 9,
											"value": "113"
										},
										{
											"begin": 2807,
											"end": 2889,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 2906,
											"end": 2912,
											"name": "PUSH",
											"source": 9,
											"value": "6"
										},
										{
											"begin": 2906,
											"end": 2920,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 2913,
											"end": 2919,
											"name": "DUP5",
											"source": 9
										},
										{
											"begin": 2906,
											"end": 2920,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 2906,
											"end": 2920,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 2906,
											"end": 2920,
											"name": "PUSH",
											"source": 9,
											"value": "20"
										},
										{
											"begin": 2906,
											"end": 2920,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 2906,
											"end": 2920,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 2906,
											"end": 2920,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 2906,
											"end": 2920,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 2906,
											"end": 2920,
											"name": "PUSH",
											"source": 9,
											"value": "20"
										},
										{
											"begin": 2906,
											"end": 2920,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 2906,
											"end": 2920,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 2906,
											"end": 2920,
											"name": "KECCAK256",
											"source": 9
										},
										{
											"begin": 2906,
											"end": 2920,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 2899,
											"end": 2920,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 2899,
											"end": 2920,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 2899,
											"end": 2920,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 2899,
											"end": 2920,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 2899,
											"end": 2920,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 2899,
											"end": 2920,
											"name": "SSTORE",
											"source": 9
										},
										{
											"begin": 2899,
											"end": 2920,
											"name": "PUSH",
											"source": 9,
											"value": "1"
										},
										{
											"begin": 2899,
											"end": 2920,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 2899,
											"end": 2920,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 2899,
											"end": 2920,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 2899,
											"end": 2920,
											"name": "PUSH",
											"source": 9,
											"value": "100"
										},
										{
											"begin": 2899,
											"end": 2920,
											"name": "EXP",
											"source": 9
										},
										{
											"begin": 2899,
											"end": 2920,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 2899,
											"end": 2920,
											"name": "SLOAD",
											"source": 9
										},
										{
											"begin": 2899,
											"end": 2920,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 2899,
											"end": 2920,
											"name": "PUSH",
											"source": 9,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 2899,
											"end": 2920,
											"name": "MUL",
											"source": 9
										},
										{
											"begin": 2899,
											"end": 2920,
											"name": "NOT",
											"source": 9
										},
										{
											"begin": 2899,
											"end": 2920,
											"name": "AND",
											"source": 9
										},
										{
											"begin": 2899,
											"end": 2920,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 2899,
											"end": 2920,
											"name": "SSTORE",
											"source": 9
										},
										{
											"begin": 2899,
											"end": 2920,
											"name": "PUSH",
											"source": 9,
											"value": "2"
										},
										{
											"begin": 2899,
											"end": 2920,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 2899,
											"end": 2920,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 2899,
											"end": 2920,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 2899,
											"end": 2920,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 2899,
											"end": 2920,
											"name": "SSTORE",
											"source": 9
										},
										{
											"begin": 2899,
											"end": 2920,
											"name": "PUSH",
											"source": 9,
											"value": "3"
										},
										{
											"begin": 2899,
											"end": 2920,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 2899,
											"end": 2920,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 2899,
											"end": 2920,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 2899,
											"end": 2920,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 2899,
											"end": 2920,
											"name": "SSTORE",
											"source": 9
										},
										{
											"begin": 2899,
											"end": 2920,
											"name": "PUSH",
											"source": 9,
											"value": "4"
										},
										{
											"begin": 2899,
											"end": 2920,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 2899,
											"end": 2920,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 2899,
											"end": 2920,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 2899,
											"end": 2920,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 2899,
											"end": 2920,
											"name": "SSTORE",
											"source": 9
										},
										{
											"begin": 2899,
											"end": 2920,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 2899,
											"end": 2920,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 2930,
											"end": 2947,
											"name": "PUSH",
											"source": 9,
											"value": "8"
										},
										{
											"begin": 2930,
											"end": 2959,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 2948,
											"end": 2958,
											"name": "CALLER",
											"source": 9
										},
										{
											"begin": 2930,
											"end": 2959,
											"name": "PUSH",
											"source": 9,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 2930,
											"end": 2959,
											"name": "AND",
											"source": 9
										},
										{
											"begin": 2930,
											"end": 2959,
											"name": "PUSH",
											"source": 9,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 2930,
											"end": 2959,
											"name": "AND",
											"source": 9
										},
										{
											"begin": 2930,
											"end": 2959,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 2930,
											"end": 2959,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 2930,
											"end": 2959,
											"name": "PUSH",
											"source": 9,
											"value": "20"
										},
										{
											"begin": 2930,
											"end": 2959,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 2930,
											"end": 2959,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 2930,
											"end": 2959,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 2930,
											"end": 2959,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 2930,
											"end": 2959,
											"name": "PUSH",
											"source": 9,
											"value": "20"
										},
										{
											"begin": 2930,
											"end": 2959,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 2930,
											"end": 2959,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 2930,
											"end": 2959,
											"name": "KECCAK256",
											"source": 9
										},
										{
											"begin": 2965,
											"end": 2971,
											"name": "DUP4",
											"source": 9
										},
										{
											"begin": 2930,
											"end": 2972,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 2930,
											"end": 2972,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 2930,
											"end": 2972,
											"name": "PUSH",
											"source": 9,
											"value": "1"
										},
										{
											"begin": 2930,
											"end": 2972,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 2930,
											"end": 2972,
											"name": "SLOAD",
											"source": 9
										},
										{
											"begin": 2930,
											"end": 2972,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 2930,
											"end": 2972,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 2930,
											"end": 2972,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 2930,
											"end": 2972,
											"name": "SSTORE",
											"source": 9
										},
										{
											"begin": 2930,
											"end": 2972,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 2930,
											"end": 2972,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 2930,
											"end": 2972,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 2930,
											"end": 2972,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 2930,
											"end": 2972,
											"name": "PUSH",
											"source": 9,
											"value": "1"
										},
										{
											"begin": 2930,
											"end": 2972,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 2930,
											"end": 2972,
											"name": "SUB",
											"source": 9
										},
										{
											"begin": 2930,
											"end": 2972,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 2930,
											"end": 2972,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 2930,
											"end": 2972,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 2930,
											"end": 2972,
											"name": "PUSH",
											"source": 9,
											"value": "20"
										},
										{
											"begin": 2930,
											"end": 2972,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 2930,
											"end": 2972,
											"name": "KECCAK256",
											"source": 9
										},
										{
											"begin": 2930,
											"end": 2972,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 2930,
											"end": 2972,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 2930,
											"end": 2972,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 2930,
											"end": 2972,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 2930,
											"end": 2972,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 2930,
											"end": 2972,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 2930,
											"end": 2972,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 2930,
											"end": 2972,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 2930,
											"end": 2972,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 2930,
											"end": 2972,
											"name": "SSTORE",
											"source": 9
										},
										{
											"begin": 2982,
											"end": 2995,
											"name": "PUSH",
											"source": 9,
											"value": "2"
										},
										{
											"begin": 2982,
											"end": 2995,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 2982,
											"end": 2995,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 2982,
											"end": 2995,
											"name": "SLOAD",
											"source": 9
										},
										{
											"begin": 2982,
											"end": 2995,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 2982,
											"end": 2995,
											"name": "PUSH",
											"source": 9,
											"value": "100"
										},
										{
											"begin": 2982,
											"end": 2995,
											"name": "EXP",
											"source": 9
										},
										{
											"begin": 2982,
											"end": 2995,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 2982,
											"end": 2995,
											"name": "DIV",
											"source": 9
										},
										{
											"begin": 2982,
											"end": 2995,
											"name": "PUSH",
											"source": 9,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 2982,
											"end": 2995,
											"name": "AND",
											"source": 9
										},
										{
											"begin": 2982,
											"end": 3008,
											"name": "PUSH",
											"source": 9,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 2982,
											"end": 3008,
											"name": "AND",
											"source": 9
										},
										{
											"begin": 2982,
											"end": 3008,
											"name": "PUSH",
											"source": 9,
											"value": "23B872DD"
										},
										{
											"begin": 3018,
											"end": 3022,
											"name": "ADDRESS",
											"source": 9
										},
										{
											"begin": 3025,
											"end": 3035,
											"name": "CALLER",
											"source": 9
										},
										{
											"begin": 3037,
											"end": 3045,
											"name": "DUP6",
											"source": 9
										},
										{
											"begin": 2982,
											"end": 3046,
											"name": "PUSH",
											"source": 9,
											"value": "40"
										},
										{
											"begin": 2982,
											"end": 3046,
											"name": "MLOAD",
											"source": 9
										},
										{
											"begin": 2982,
											"end": 3046,
											"name": "DUP5",
											"source": 9
										},
										{
											"begin": 2982,
											"end": 3046,
											"name": "PUSH",
											"source": 9,
											"value": "FFFFFFFF"
										},
										{
											"begin": 2982,
											"end": 3046,
											"name": "AND",
											"source": 9
										},
										{
											"begin": 2982,
											"end": 3046,
											"name": "PUSH",
											"source": 9,
											"value": "E0"
										},
										{
											"begin": 2982,
											"end": 3046,
											"name": "SHL",
											"source": 9
										},
										{
											"begin": 2982,
											"end": 3046,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 2982,
											"end": 3046,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 2982,
											"end": 3046,
											"name": "PUSH",
											"source": 9,
											"value": "4"
										},
										{
											"begin": 2982,
											"end": 3046,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 2982,
											"end": 3046,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "117"
										},
										{
											"begin": 2982,
											"end": 3046,
											"name": "SWAP4",
											"source": 9
										},
										{
											"begin": 2982,
											"end": 3046,
											"name": "SWAP3",
											"source": 9
										},
										{
											"begin": 2982,
											"end": 3046,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 2982,
											"end": 3046,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 2982,
											"end": 3046,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "89"
										},
										{
											"begin": 2982,
											"end": 3046,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 2982,
											"end": 3046,
											"name": "tag",
											"source": 9,
											"value": "117"
										},
										{
											"begin": 2982,
											"end": 3046,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 2982,
											"end": 3046,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 2982,
											"end": 3046,
											"name": "PUSH",
											"source": 9,
											"value": "40"
										},
										{
											"begin": 2982,
											"end": 3046,
											"name": "MLOAD",
											"source": 9
										},
										{
											"begin": 2982,
											"end": 3046,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 2982,
											"end": 3046,
											"name": "DUP4",
											"source": 9
										},
										{
											"begin": 2982,
											"end": 3046,
											"name": "SUB",
											"source": 9
										},
										{
											"begin": 2982,
											"end": 3046,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 2982,
											"end": 3046,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 2982,
											"end": 3046,
											"name": "DUP8",
											"source": 9
										},
										{
											"begin": 2982,
											"end": 3046,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 2982,
											"end": 3046,
											"name": "EXTCODESIZE",
											"source": 9
										},
										{
											"begin": 2982,
											"end": 3046,
											"name": "ISZERO",
											"source": 9
										},
										{
											"begin": 2982,
											"end": 3046,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 2982,
											"end": 3046,
											"name": "ISZERO",
											"source": 9
										},
										{
											"begin": 2982,
											"end": 3046,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "118"
										},
										{
											"begin": 2982,
											"end": 3046,
											"name": "JUMPI",
											"source": 9
										},
										{
											"begin": 2982,
											"end": 3046,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 2982,
											"end": 3046,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 2982,
											"end": 3046,
											"name": "REVERT",
											"source": 9
										},
										{
											"begin": 2982,
											"end": 3046,
											"name": "tag",
											"source": 9,
											"value": "118"
										},
										{
											"begin": 2982,
											"end": 3046,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 2982,
											"end": 3046,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 2982,
											"end": 3046,
											"name": "GAS",
											"source": 9
										},
										{
											"begin": 2982,
											"end": 3046,
											"name": "CALL",
											"source": 9
										},
										{
											"begin": 2982,
											"end": 3046,
											"name": "ISZERO",
											"source": 9
										},
										{
											"begin": 2982,
											"end": 3046,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 2982,
											"end": 3046,
											"name": "ISZERO",
											"source": 9
										},
										{
											"begin": 2982,
											"end": 3046,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "120"
										},
										{
											"begin": 2982,
											"end": 3046,
											"name": "JUMPI",
											"source": 9
										},
										{
											"begin": 2982,
											"end": 3046,
											"name": "RETURNDATASIZE",
											"source": 9
										},
										{
											"begin": 2982,
											"end": 3046,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 2982,
											"end": 3046,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 2982,
											"end": 3046,
											"name": "RETURNDATACOPY",
											"source": 9
										},
										{
											"begin": 2982,
											"end": 3046,
											"name": "RETURNDATASIZE",
											"source": 9
										},
										{
											"begin": 2982,
											"end": 3046,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 2982,
											"end": 3046,
											"name": "REVERT",
											"source": 9
										},
										{
											"begin": 2982,
											"end": 3046,
											"name": "tag",
											"source": 9,
											"value": "120"
										},
										{
											"begin": 2982,
											"end": 3046,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 2982,
											"end": 3046,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 2982,
											"end": 3046,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 2982,
											"end": 3046,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 2982,
											"end": 3046,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 3056,
											"end": 3070,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 3074,
											"end": 3100,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "121"
										},
										{
											"begin": 3094,
											"end": 3099,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 3074,
											"end": 3093,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "122"
										},
										{
											"begin": 3074,
											"end": 3100,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 3074,
											"end": 3100,
											"name": "tag",
											"source": 9,
											"value": "121"
										},
										{
											"begin": 3074,
											"end": 3100,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 3056,
											"end": 3100,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 3056,
											"end": 3100,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 3110,
											"end": 3121,
											"name": "PUSH",
											"source": 9,
											"value": "3"
										},
										{
											"begin": 3110,
											"end": 3121,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 3110,
											"end": 3121,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 3110,
											"end": 3121,
											"name": "SLOAD",
											"source": 9
										},
										{
											"begin": 3110,
											"end": 3121,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 3110,
											"end": 3121,
											"name": "PUSH",
											"source": 9,
											"value": "100"
										},
										{
											"begin": 3110,
											"end": 3121,
											"name": "EXP",
											"source": 9
										},
										{
											"begin": 3110,
											"end": 3121,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 3110,
											"end": 3121,
											"name": "DIV",
											"source": 9
										},
										{
											"begin": 3110,
											"end": 3121,
											"name": "PUSH",
											"source": 9,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 3110,
											"end": 3121,
											"name": "AND",
											"source": 9
										},
										{
											"begin": 3110,
											"end": 3130,
											"name": "PUSH",
											"source": 9,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 3110,
											"end": 3130,
											"name": "AND",
											"source": 9
										},
										{
											"begin": 3110,
											"end": 3130,
											"name": "PUSH",
											"source": 9,
											"value": "A9059CBB"
										},
										{
											"begin": 3132,
											"end": 3142,
											"name": "CALLER",
											"source": 9
										},
										{
											"begin": 3144,
											"end": 3150,
											"name": "DUP4",
											"source": 9
										},
										{
											"begin": 3110,
											"end": 3151,
											"name": "PUSH",
											"source": 9,
											"value": "40"
										},
										{
											"begin": 3110,
											"end": 3151,
											"name": "MLOAD",
											"source": 9
										},
										{
											"begin": 3110,
											"end": 3151,
											"name": "DUP4",
											"source": 9
										},
										{
											"begin": 3110,
											"end": 3151,
											"name": "PUSH",
											"source": 9,
											"value": "FFFFFFFF"
										},
										{
											"begin": 3110,
											"end": 3151,
											"name": "AND",
											"source": 9
										},
										{
											"begin": 3110,
											"end": 3151,
											"name": "PUSH",
											"source": 9,
											"value": "E0"
										},
										{
											"begin": 3110,
											"end": 3151,
											"name": "SHL",
											"source": 9
										},
										{
											"begin": 3110,
											"end": 3151,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 3110,
											"end": 3151,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 3110,
											"end": 3151,
											"name": "PUSH",
											"source": 9,
											"value": "4"
										},
										{
											"begin": 3110,
											"end": 3151,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 3110,
											"end": 3151,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "123"
										},
										{
											"begin": 3110,
											"end": 3151,
											"name": "SWAP3",
											"source": 9
										},
										{
											"begin": 3110,
											"end": 3151,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 3110,
											"end": 3151,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 3110,
											"end": 3151,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "124"
										},
										{
											"begin": 3110,
											"end": 3151,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 3110,
											"end": 3151,
											"name": "tag",
											"source": 9,
											"value": "123"
										},
										{
											"begin": 3110,
											"end": 3151,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 3110,
											"end": 3151,
											"name": "PUSH",
											"source": 9,
											"value": "20"
										},
										{
											"begin": 3110,
											"end": 3151,
											"name": "PUSH",
											"source": 9,
											"value": "40"
										},
										{
											"begin": 3110,
											"end": 3151,
											"name": "MLOAD",
											"source": 9
										},
										{
											"begin": 3110,
											"end": 3151,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 3110,
											"end": 3151,
											"name": "DUP4",
											"source": 9
										},
										{
											"begin": 3110,
											"end": 3151,
											"name": "SUB",
											"source": 9
										},
										{
											"begin": 3110,
											"end": 3151,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 3110,
											"end": 3151,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 3110,
											"end": 3151,
											"name": "DUP8",
											"source": 9
										},
										{
											"begin": 3110,
											"end": 3151,
											"name": "GAS",
											"source": 9
										},
										{
											"begin": 3110,
											"end": 3151,
											"name": "CALL",
											"source": 9
										},
										{
											"begin": 3110,
											"end": 3151,
											"name": "ISZERO",
											"source": 9
										},
										{
											"begin": 3110,
											"end": 3151,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 3110,
											"end": 3151,
											"name": "ISZERO",
											"source": 9
										},
										{
											"begin": 3110,
											"end": 3151,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "126"
										},
										{
											"begin": 3110,
											"end": 3151,
											"name": "JUMPI",
											"source": 9
										},
										{
											"begin": 3110,
											"end": 3151,
											"name": "RETURNDATASIZE",
											"source": 9
										},
										{
											"begin": 3110,
											"end": 3151,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 3110,
											"end": 3151,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 3110,
											"end": 3151,
											"name": "RETURNDATACOPY",
											"source": 9
										},
										{
											"begin": 3110,
											"end": 3151,
											"name": "RETURNDATASIZE",
											"source": 9
										},
										{
											"begin": 3110,
											"end": 3151,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 3110,
											"end": 3151,
											"name": "REVERT",
											"source": 9
										},
										{
											"begin": 3110,
											"end": 3151,
											"name": "tag",
											"source": 9,
											"value": "126"
										},
										{
											"begin": 3110,
											"end": 3151,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 3110,
											"end": 3151,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 3110,
											"end": 3151,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 3110,
											"end": 3151,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 3110,
											"end": 3151,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 3110,
											"end": 3151,
											"name": "PUSH",
											"source": 9,
											"value": "40"
										},
										{
											"begin": 3110,
											"end": 3151,
											"name": "MLOAD",
											"source": 9
										},
										{
											"begin": 3110,
											"end": 3151,
											"name": "RETURNDATASIZE",
											"source": 9
										},
										{
											"begin": 3110,
											"end": 3151,
											"name": "PUSH",
											"source": 9,
											"value": "1F"
										},
										{
											"begin": 3110,
											"end": 3151,
											"name": "NOT",
											"source": 9
										},
										{
											"begin": 3110,
											"end": 3151,
											"name": "PUSH",
											"source": 9,
											"value": "1F"
										},
										{
											"begin": 3110,
											"end": 3151,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 3110,
											"end": 3151,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 3110,
											"end": 3151,
											"name": "AND",
											"source": 9
										},
										{
											"begin": 3110,
											"end": 3151,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 3110,
											"end": 3151,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 3110,
											"end": 3151,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 3110,
											"end": 3151,
											"name": "PUSH",
											"source": 9,
											"value": "40"
										},
										{
											"begin": 3110,
											"end": 3151,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 3110,
											"end": 3151,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 3110,
											"end": 3151,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 3110,
											"end": 3151,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 3110,
											"end": 3151,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 3110,
											"end": 3151,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "127"
										},
										{
											"begin": 3110,
											"end": 3151,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 3110,
											"end": 3151,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 3110,
											"end": 3151,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "128"
										},
										{
											"begin": 3110,
											"end": 3151,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 3110,
											"end": 3151,
											"name": "tag",
											"source": 9,
											"value": "127"
										},
										{
											"begin": 3110,
											"end": 3151,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 3110,
											"end": 3151,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 3174,
											"end": 3184,
											"name": "CALLER",
											"source": 9
										},
										{
											"begin": 3166,
											"end": 3228,
											"name": "PUSH",
											"source": 9,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 3166,
											"end": 3228,
											"name": "AND",
											"source": 9
										},
										{
											"begin": 3166,
											"end": 3228,
											"name": "PUSH",
											"source": 9,
											"value": "F74C9F1985016FF6AA83C3FD81E31D0BE3B194F205AE5E1B57F5BD74AD28E4CF"
										},
										{
											"begin": 3186,
											"end": 3194,
											"name": "DUP5",
											"source": 9
										},
										{
											"begin": 3196,
											"end": 3201,
											"name": "DUP5",
											"source": 9
										},
										{
											"begin": 3204,
											"end": 3219,
											"name": "TIMESTAMP",
											"source": 9
										},
										{
											"begin": 3221,
											"end": 3227,
											"name": "DUP6",
											"source": 9
										},
										{
											"begin": 3166,
											"end": 3228,
											"name": "PUSH",
											"source": 9,
											"value": "40"
										},
										{
											"begin": 3166,
											"end": 3228,
											"name": "MLOAD",
											"source": 9
										},
										{
											"begin": 3166,
											"end": 3228,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "129"
										},
										{
											"begin": 3166,
											"end": 3228,
											"name": "SWAP5",
											"source": 9
										},
										{
											"begin": 3166,
											"end": 3228,
											"name": "SWAP4",
											"source": 9
										},
										{
											"begin": 3166,
											"end": 3228,
											"name": "SWAP3",
											"source": 9
										},
										{
											"begin": 3166,
											"end": 3228,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 3166,
											"end": 3228,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 3166,
											"end": 3228,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "130"
										},
										{
											"begin": 3166,
											"end": 3228,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 3166,
											"end": 3228,
											"name": "tag",
											"source": 9,
											"value": "129"
										},
										{
											"begin": 3166,
											"end": 3228,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 3166,
											"end": 3228,
											"name": "PUSH",
											"source": 9,
											"value": "40"
										},
										{
											"begin": 3166,
											"end": 3228,
											"name": "MLOAD",
											"source": 9
										},
										{
											"begin": 3166,
											"end": 3228,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 3166,
											"end": 3228,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 3166,
											"end": 3228,
											"name": "SUB",
											"source": 9
										},
										{
											"begin": 3166,
											"end": 3228,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 3166,
											"end": 3228,
											"name": "LOG2",
											"source": 9
										},
										{
											"begin": 2677,
											"end": 3235,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 2602,
											"end": 3235,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 2602,
											"end": 3235,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 2602,
											"end": 3235,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 2602,
											"end": 3235,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 3328,
											"end": 3519,
											"name": "tag",
											"source": 9,
											"value": "48"
										},
										{
											"begin": 3328,
											"end": 3519,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 3413,
											"end": 3429,
											"name": "PUSH",
											"source": 9,
											"value": "60"
										},
										{
											"begin": 3445,
											"end": 3466,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 3469,
											"end": 3484,
											"name": "PUSH",
											"source": 9,
											"value": "7"
										},
										{
											"begin": 3469,
											"end": 3491,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 3485,
											"end": 3490,
											"name": "DUP5",
											"source": 9
										},
										{
											"begin": 3469,
											"end": 3491,
											"name": "PUSH",
											"source": 9,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 3469,
											"end": 3491,
											"name": "AND",
											"source": 9
										},
										{
											"begin": 3469,
											"end": 3491,
											"name": "PUSH",
											"source": 9,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 3469,
											"end": 3491,
											"name": "AND",
											"source": 9
										},
										{
											"begin": 3469,
											"end": 3491,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 3469,
											"end": 3491,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 3469,
											"end": 3491,
											"name": "PUSH",
											"source": 9,
											"value": "20"
										},
										{
											"begin": 3469,
											"end": 3491,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 3469,
											"end": 3491,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 3469,
											"end": 3491,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 3469,
											"end": 3491,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 3469,
											"end": 3491,
											"name": "PUSH",
											"source": 9,
											"value": "20"
										},
										{
											"begin": 3469,
											"end": 3491,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 3469,
											"end": 3491,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 3469,
											"end": 3491,
											"name": "KECCAK256",
											"source": 9
										},
										{
											"begin": 3445,
											"end": 3491,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 3445,
											"end": 3491,
											"name": "SLOAD",
											"source": 9
										},
										{
											"begin": 3445,
											"end": 3491,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 3445,
											"end": 3491,
											"name": "PUSH",
											"source": 9,
											"value": "20"
										},
										{
											"begin": 3445,
											"end": 3491,
											"name": "MUL",
											"source": 9
										},
										{
											"begin": 3445,
											"end": 3491,
											"name": "PUSH",
											"source": 9,
											"value": "20"
										},
										{
											"begin": 3445,
											"end": 3491,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 3445,
											"end": 3491,
											"name": "PUSH",
											"source": 9,
											"value": "40"
										},
										{
											"begin": 3445,
											"end": 3491,
											"name": "MLOAD",
											"source": 9
										},
										{
											"begin": 3445,
											"end": 3491,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 3445,
											"end": 3491,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 3445,
											"end": 3491,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 3445,
											"end": 3491,
											"name": "PUSH",
											"source": 9,
											"value": "40"
										},
										{
											"begin": 3445,
											"end": 3491,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 3445,
											"end": 3491,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 3445,
											"end": 3491,
											"name": "SWAP3",
											"source": 9
										},
										{
											"begin": 3445,
											"end": 3491,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 3445,
											"end": 3491,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 3445,
											"end": 3491,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 3445,
											"end": 3491,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 3445,
											"end": 3491,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 3445,
											"end": 3491,
											"name": "PUSH",
											"source": 9,
											"value": "20"
										},
										{
											"begin": 3445,
											"end": 3491,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 3445,
											"end": 3491,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 3445,
											"end": 3491,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 3445,
											"end": 3491,
											"name": "SLOAD",
											"source": 9
										},
										{
											"begin": 3445,
											"end": 3491,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 3445,
											"end": 3491,
											"name": "ISZERO",
											"source": 9
										},
										{
											"begin": 3445,
											"end": 3491,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "132"
										},
										{
											"begin": 3445,
											"end": 3491,
											"name": "JUMPI",
											"source": 9
										},
										{
											"begin": 3445,
											"end": 3491,
											"name": "PUSH",
											"source": 9,
											"value": "20"
										},
										{
											"begin": 3445,
											"end": 3491,
											"name": "MUL",
											"source": 9
										},
										{
											"begin": 3445,
											"end": 3491,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 3445,
											"end": 3491,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 3445,
											"end": 3491,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 3445,
											"end": 3491,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 3445,
											"end": 3491,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 3445,
											"end": 3491,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 3445,
											"end": 3491,
											"name": "PUSH",
											"source": 9,
											"value": "20"
										},
										{
											"begin": 3445,
											"end": 3491,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 3445,
											"end": 3491,
											"name": "KECCAK256",
											"source": 9
										},
										{
											"begin": 3445,
											"end": 3491,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 3445,
											"end": 3491,
											"name": "tag",
											"source": 9,
											"value": "133"
										},
										{
											"begin": 3445,
											"end": 3491,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 3445,
											"end": 3491,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 3445,
											"end": 3491,
											"name": "SLOAD",
											"source": 9
										},
										{
											"begin": 3445,
											"end": 3491,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 3445,
											"end": 3491,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 3445,
											"end": 3491,
											"name": "PUSH",
											"source": 9,
											"value": "20"
										},
										{
											"begin": 3445,
											"end": 3491,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 3445,
											"end": 3491,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 3445,
											"end": 3491,
											"name": "PUSH",
											"source": 9,
											"value": "1"
										},
										{
											"begin": 3445,
											"end": 3491,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 3445,
											"end": 3491,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 3445,
											"end": 3491,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 3445,
											"end": 3491,
											"name": "DUP4",
											"source": 9
										},
										{
											"begin": 3445,
											"end": 3491,
											"name": "GT",
											"source": 9
										},
										{
											"begin": 3445,
											"end": 3491,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "133"
										},
										{
											"begin": 3445,
											"end": 3491,
											"name": "JUMPI",
											"source": 9
										},
										{
											"begin": 3445,
											"end": 3491,
											"name": "tag",
											"source": 9,
											"value": "132"
										},
										{
											"begin": 3445,
											"end": 3491,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 3445,
											"end": 3491,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 3445,
											"end": 3491,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 3445,
											"end": 3491,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 3445,
											"end": 3491,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 3445,
											"end": 3491,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 3445,
											"end": 3491,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 3445,
											"end": 3491,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 3508,
											"end": 3512,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 3501,
											"end": 3512,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 3501,
											"end": 3512,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 3501,
											"end": 3512,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 3328,
											"end": 3519,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 3328,
											"end": 3519,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 3328,
											"end": 3519,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 3328,
											"end": 3519,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 1201,
											"end": 1286,
											"name": "tag",
											"source": 0,
											"value": "52"
										},
										{
											"begin": 1201,
											"end": 1286,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1247,
											"end": 1254,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 1273,
											"end": 1279,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 1273,
											"end": 1279,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 1273,
											"end": 1279,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 1273,
											"end": 1279,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 1273,
											"end": 1279,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 1273,
											"end": 1279,
											"name": "PUSH",
											"source": 0,
											"value": "100"
										},
										{
											"begin": 1273,
											"end": 1279,
											"name": "EXP",
											"source": 0
										},
										{
											"begin": 1273,
											"end": 1279,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 1273,
											"end": 1279,
											"name": "DIV",
											"source": 0
										},
										{
											"begin": 1273,
											"end": 1279,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1273,
											"end": 1279,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 1266,
											"end": 1279,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 1266,
											"end": 1279,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 1201,
											"end": 1286,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 1201,
											"end": 1286,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 939,
											"end": 979,
											"name": "tag",
											"source": 9,
											"value": "58"
										},
										{
											"begin": 939,
											"end": 979,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 939,
											"end": 979,
											"name": "PUSH",
											"source": 9,
											"value": "6"
										},
										{
											"begin": 939,
											"end": 979,
											"name": "PUSH",
											"source": 9,
											"value": "20"
										},
										{
											"begin": 939,
											"end": 979,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 939,
											"end": 979,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 939,
											"end": 979,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 939,
											"end": 979,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 939,
											"end": 979,
											"name": "PUSH",
											"source": 9,
											"value": "40"
										},
										{
											"begin": 939,
											"end": 979,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 939,
											"end": 979,
											"name": "KECCAK256",
											"source": 9
										},
										{
											"begin": 939,
											"end": 979,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 939,
											"end": 979,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 939,
											"end": 979,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 939,
											"end": 979,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 939,
											"end": 979,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 939,
											"end": 979,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 939,
											"end": 979,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 939,
											"end": 979,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 939,
											"end": 979,
											"name": "SLOAD",
											"source": 9
										},
										{
											"begin": 939,
											"end": 979,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 939,
											"end": 979,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 939,
											"end": 979,
											"name": "PUSH",
											"source": 9,
											"value": "1"
										},
										{
											"begin": 939,
											"end": 979,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 939,
											"end": 979,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 939,
											"end": 979,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 939,
											"end": 979,
											"name": "SLOAD",
											"source": 9
										},
										{
											"begin": 939,
											"end": 979,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 939,
											"end": 979,
											"name": "PUSH",
											"source": 9,
											"value": "100"
										},
										{
											"begin": 939,
											"end": 979,
											"name": "EXP",
											"source": 9
										},
										{
											"begin": 939,
											"end": 979,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 939,
											"end": 979,
											"name": "DIV",
											"source": 9
										},
										{
											"begin": 939,
											"end": 979,
											"name": "PUSH",
											"source": 9,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 939,
											"end": 979,
											"name": "AND",
											"source": 9
										},
										{
											"begin": 939,
											"end": 979,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 939,
											"end": 979,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 939,
											"end": 979,
											"name": "PUSH",
											"source": 9,
											"value": "2"
										},
										{
											"begin": 939,
											"end": 979,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 939,
											"end": 979,
											"name": "SLOAD",
											"source": 9
										},
										{
											"begin": 939,
											"end": 979,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 939,
											"end": 979,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 939,
											"end": 979,
											"name": "PUSH",
											"source": 9,
											"value": "3"
										},
										{
											"begin": 939,
											"end": 979,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 939,
											"end": 979,
											"name": "SLOAD",
											"source": 9
										},
										{
											"begin": 939,
											"end": 979,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 939,
											"end": 979,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 939,
											"end": 979,
											"name": "PUSH",
											"source": 9,
											"value": "4"
										},
										{
											"begin": 939,
											"end": 979,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 939,
											"end": 979,
											"name": "SLOAD",
											"source": 9
										},
										{
											"begin": 939,
											"end": 979,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 939,
											"end": 979,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 939,
											"end": 979,
											"name": "DUP6",
											"source": 9
										},
										{
											"begin": 939,
											"end": 979,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 2081,
											"end": 2279,
											"name": "tag",
											"source": 0,
											"value": "63"
										},
										{
											"begin": 2081,
											"end": 2279,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1094,
											"end": 1107,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "136"
										},
										{
											"begin": 1094,
											"end": 1105,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "99"
										},
										{
											"begin": 1094,
											"end": 1107,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 1094,
											"end": 1107,
											"name": "tag",
											"source": 0,
											"value": "136"
										},
										{
											"begin": 1094,
											"end": 1107,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2189,
											"end": 2190,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 2169,
											"end": 2191,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 2169,
											"end": 2191,
											"modifierDepth": 1,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 2169,
											"end": 2177,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 2169,
											"end": 2191,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 2169,
											"end": 2191,
											"modifierDepth": 1,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 2169,
											"end": 2191,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 2161,
											"end": 2234,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "138"
										},
										{
											"begin": 2161,
											"end": 2234,
											"modifierDepth": 1,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 2161,
											"end": 2234,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 2161,
											"end": 2234,
											"modifierDepth": 1,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 2161,
											"end": 2234,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 0,
											"value": "8C379A000000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 2161,
											"end": 2234,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 2161,
											"end": 2234,
											"modifierDepth": 1,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 2161,
											"end": 2234,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 2161,
											"end": 2234,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 2161,
											"end": 2234,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "139"
										},
										{
											"begin": 2161,
											"end": 2234,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 2161,
											"end": 2234,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "140"
										},
										{
											"begin": 2161,
											"end": 2234,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 2161,
											"end": 2234,
											"modifierDepth": 1,
											"name": "tag",
											"source": 0,
											"value": "139"
										},
										{
											"begin": 2161,
											"end": 2234,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2161,
											"end": 2234,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 2161,
											"end": 2234,
											"modifierDepth": 1,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 2161,
											"end": 2234,
											"modifierDepth": 1,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 2161,
											"end": 2234,
											"modifierDepth": 1,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 2161,
											"end": 2234,
											"modifierDepth": 1,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 2161,
											"end": 2234,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 2161,
											"end": 2234,
											"modifierDepth": 1,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 2161,
											"end": 2234,
											"modifierDepth": 1,
											"name": "tag",
											"source": 0,
											"value": "138"
										},
										{
											"begin": 2161,
											"end": 2234,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2244,
											"end": 2272,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "141"
										},
										{
											"begin": 2263,
											"end": 2271,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 2244,
											"end": 2262,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "102"
										},
										{
											"begin": 2244,
											"end": 2272,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 2244,
											"end": 2272,
											"modifierDepth": 1,
											"name": "tag",
											"source": 0,
											"value": "141"
										},
										{
											"begin": 2244,
											"end": 2272,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2081,
											"end": 2279,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 2081,
											"end": 2279,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 640,
											"end": 665,
											"name": "tag",
											"source": 9,
											"value": "65"
										},
										{
											"begin": 640,
											"end": 665,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 640,
											"end": 665,
											"name": "PUSH",
											"source": 9,
											"value": "3"
										},
										{
											"begin": 640,
											"end": 665,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 640,
											"end": 665,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 640,
											"end": 665,
											"name": "SLOAD",
											"source": 9
										},
										{
											"begin": 640,
											"end": 665,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 640,
											"end": 665,
											"name": "PUSH",
											"source": 9,
											"value": "100"
										},
										{
											"begin": 640,
											"end": 665,
											"name": "EXP",
											"source": 9
										},
										{
											"begin": 640,
											"end": 665,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 640,
											"end": 665,
											"name": "DIV",
											"source": 9
										},
										{
											"begin": 640,
											"end": 665,
											"name": "PUSH",
											"source": 9,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 640,
											"end": 665,
											"name": "AND",
											"source": 9
										},
										{
											"begin": 640,
											"end": 665,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 640,
											"end": 665,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 3657,
											"end": 3961,
											"name": "tag",
											"source": 9,
											"value": "71"
										},
										{
											"begin": 3657,
											"end": 3961,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 3743,
											"end": 3747,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 3764,
											"end": 3770,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 3771,
											"end": 3772,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 3764,
											"end": 3772,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 3764,
											"end": 3772,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 3759,
											"end": 3931,
											"name": "tag",
											"source": 9,
											"value": "143"
										},
										{
											"begin": 3759,
											"end": 3931,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 3778,
											"end": 3795,
											"name": "PUSH",
											"source": 9,
											"value": "8"
										},
										{
											"begin": 3778,
											"end": 3802,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 3796,
											"end": 3801,
											"name": "DUP5",
											"source": 9
										},
										{
											"begin": 3778,
											"end": 3802,
											"name": "PUSH",
											"source": 9,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 3778,
											"end": 3802,
											"name": "AND",
											"source": 9
										},
										{
											"begin": 3778,
											"end": 3802,
											"name": "PUSH",
											"source": 9,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 3778,
											"end": 3802,
											"name": "AND",
											"source": 9
										},
										{
											"begin": 3778,
											"end": 3802,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 3778,
											"end": 3802,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 3778,
											"end": 3802,
											"name": "PUSH",
											"source": 9,
											"value": "20"
										},
										{
											"begin": 3778,
											"end": 3802,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 3778,
											"end": 3802,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 3778,
											"end": 3802,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 3778,
											"end": 3802,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 3778,
											"end": 3802,
											"name": "PUSH",
											"source": 9,
											"value": "20"
										},
										{
											"begin": 3778,
											"end": 3802,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 3778,
											"end": 3802,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 3778,
											"end": 3802,
											"name": "KECCAK256",
											"source": 9
										},
										{
											"begin": 3778,
											"end": 3809,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 3778,
											"end": 3809,
											"name": "SLOAD",
											"source": 9
										},
										{
											"begin": 3778,
											"end": 3809,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 3778,
											"end": 3809,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 3774,
											"end": 3775,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 3774,
											"end": 3809,
											"name": "LT",
											"source": 9
										},
										{
											"begin": 3759,
											"end": 3931,
											"name": "ISZERO",
											"source": 9
										},
										{
											"begin": 3759,
											"end": 3931,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "144"
										},
										{
											"begin": 3759,
											"end": 3931,
											"name": "JUMPI",
											"source": 9
										},
										{
											"begin": 3862,
											"end": 3872,
											"name": "DUP4",
											"source": 9
										},
										{
											"begin": 3833,
											"end": 3850,
											"name": "PUSH",
											"source": 9,
											"value": "8"
										},
										{
											"begin": 3833,
											"end": 3857,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 3851,
											"end": 3856,
											"name": "DUP6",
											"source": 9
										},
										{
											"begin": 3833,
											"end": 3857,
											"name": "PUSH",
											"source": 9,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 3833,
											"end": 3857,
											"name": "AND",
											"source": 9
										},
										{
											"begin": 3833,
											"end": 3857,
											"name": "PUSH",
											"source": 9,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 3833,
											"end": 3857,
											"name": "AND",
											"source": 9
										},
										{
											"begin": 3833,
											"end": 3857,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 3833,
											"end": 3857,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 3833,
											"end": 3857,
											"name": "PUSH",
											"source": 9,
											"value": "20"
										},
										{
											"begin": 3833,
											"end": 3857,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 3833,
											"end": 3857,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 3833,
											"end": 3857,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 3833,
											"end": 3857,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 3833,
											"end": 3857,
											"name": "PUSH",
											"source": 9,
											"value": "20"
										},
										{
											"begin": 3833,
											"end": 3857,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 3833,
											"end": 3857,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 3833,
											"end": 3857,
											"name": "KECCAK256",
											"source": 9
										},
										{
											"begin": 3858,
											"end": 3859,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 3833,
											"end": 3860,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 3833,
											"end": 3860,
											"name": "SLOAD",
											"source": 9
										},
										{
											"begin": 3833,
											"end": 3860,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 3833,
											"end": 3860,
											"name": "LT",
											"source": 9
										},
										{
											"begin": 3833,
											"end": 3860,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "146"
										},
										{
											"begin": 3833,
											"end": 3860,
											"name": "JUMPI",
											"source": 9
										},
										{
											"begin": 3833,
											"end": 3860,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "147"
										},
										{
											"begin": 3833,
											"end": 3860,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "148"
										},
										{
											"begin": 3833,
											"end": 3860,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 3833,
											"end": 3860,
											"name": "tag",
											"source": 9,
											"value": "147"
										},
										{
											"begin": 3833,
											"end": 3860,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 3833,
											"end": 3860,
											"name": "tag",
											"source": 9,
											"value": "146"
										},
										{
											"begin": 3833,
											"end": 3860,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 3833,
											"end": 3860,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 3833,
											"end": 3860,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 3833,
											"end": 3860,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 3833,
											"end": 3860,
											"name": "PUSH",
											"source": 9,
											"value": "20"
										},
										{
											"begin": 3833,
											"end": 3860,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 3833,
											"end": 3860,
											"name": "KECCAK256",
											"source": 9
										},
										{
											"begin": 3833,
											"end": 3860,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 3833,
											"end": 3860,
											"name": "SLOAD",
											"source": 9
										},
										{
											"begin": 3833,
											"end": 3872,
											"name": "SUB",
											"source": 9
										},
										{
											"begin": 3830,
											"end": 3921,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "150"
										},
										{
											"begin": 3830,
											"end": 3921,
											"name": "JUMPI",
											"source": 9
										},
										{
											"begin": 3902,
											"end": 3906,
											"name": "PUSH",
											"source": 9,
											"value": "1"
										},
										{
											"begin": 3895,
											"end": 3906,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 3895,
											"end": 3906,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 3895,
											"end": 3906,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 3895,
											"end": 3906,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "142"
										},
										{
											"begin": 3895,
											"end": 3906,
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 3830,
											"end": 3921,
											"name": "tag",
											"source": 9,
											"value": "150"
										},
										{
											"begin": 3830,
											"end": 3921,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 3811,
											"end": 3814,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 3811,
											"end": 3814,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 3811,
											"end": 3814,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "151"
										},
										{
											"begin": 3811,
											"end": 3814,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 3811,
											"end": 3814,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "94"
										},
										{
											"begin": 3811,
											"end": 3814,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 3811,
											"end": 3814,
											"name": "tag",
											"source": 9,
											"value": "151"
										},
										{
											"begin": 3811,
											"end": 3814,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 3811,
											"end": 3814,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 3811,
											"end": 3814,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 3811,
											"end": 3814,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 3759,
											"end": 3931,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "143"
										},
										{
											"begin": 3759,
											"end": 3931,
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 3759,
											"end": 3931,
											"name": "tag",
											"source": 9,
											"value": "144"
										},
										{
											"begin": 3759,
											"end": 3931,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 3759,
											"end": 3931,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 3949,
											"end": 3954,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 3942,
											"end": 3954,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 3942,
											"end": 3954,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 3657,
											"end": 3961,
											"name": "tag",
											"source": 9,
											"value": "142"
										},
										{
											"begin": 3657,
											"end": 3961,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 3657,
											"end": 3961,
											"name": "SWAP3",
											"source": 9
										},
										{
											"begin": 3657,
											"end": 3961,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 3657,
											"end": 3961,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 3657,
											"end": 3961,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 3657,
											"end": 3961,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 1359,
											"end": 1489,
											"name": "tag",
											"source": 0,
											"value": "99"
										},
										{
											"begin": 1359,
											"end": 1489,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1433,
											"end": 1445,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "153"
										},
										{
											"begin": 1433,
											"end": 1443,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "154"
										},
										{
											"begin": 1433,
											"end": 1445,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 1433,
											"end": 1445,
											"name": "tag",
											"source": 0,
											"value": "153"
										},
										{
											"begin": 1433,
											"end": 1445,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1422,
											"end": 1445,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1422,
											"end": 1445,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 1422,
											"end": 1429,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "155"
										},
										{
											"begin": 1422,
											"end": 1427,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "52"
										},
										{
											"begin": 1422,
											"end": 1429,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 1422,
											"end": 1429,
											"name": "tag",
											"source": 0,
											"value": "155"
										},
										{
											"begin": 1422,
											"end": 1429,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1422,
											"end": 1445,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1422,
											"end": 1445,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 1422,
											"end": 1445,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 1414,
											"end": 1482,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "156"
										},
										{
											"begin": 1414,
											"end": 1482,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 1414,
											"end": 1482,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 1414,
											"end": 1482,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 1414,
											"end": 1482,
											"name": "PUSH",
											"source": 0,
											"value": "8C379A000000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 1414,
											"end": 1482,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 1414,
											"end": 1482,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 1414,
											"end": 1482,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 1414,
											"end": 1482,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 1414,
											"end": 1482,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "157"
										},
										{
											"begin": 1414,
											"end": 1482,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 1414,
											"end": 1482,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "158"
										},
										{
											"begin": 1414,
											"end": 1482,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 1414,
											"end": 1482,
											"name": "tag",
											"source": 0,
											"value": "157"
										},
										{
											"begin": 1414,
											"end": 1482,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1414,
											"end": 1482,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 1414,
											"end": 1482,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 1414,
											"end": 1482,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 1414,
											"end": 1482,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 1414,
											"end": 1482,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 1414,
											"end": 1482,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 1414,
											"end": 1482,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 1414,
											"end": 1482,
											"name": "tag",
											"source": 0,
											"value": "156"
										},
										{
											"begin": 1414,
											"end": 1482,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1359,
											"end": 1489,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 2433,
											"end": 2620,
											"name": "tag",
											"source": 0,
											"value": "102"
										},
										{
											"begin": 2433,
											"end": 2620,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2506,
											"end": 2522,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 2525,
											"end": 2531,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 2525,
											"end": 2531,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 2525,
											"end": 2531,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 2525,
											"end": 2531,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 2525,
											"end": 2531,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 2525,
											"end": 2531,
											"name": "PUSH",
											"source": 0,
											"value": "100"
										},
										{
											"begin": 2525,
											"end": 2531,
											"name": "EXP",
											"source": 0
										},
										{
											"begin": 2525,
											"end": 2531,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 2525,
											"end": 2531,
											"name": "DIV",
											"source": 0
										},
										{
											"begin": 2525,
											"end": 2531,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 2525,
											"end": 2531,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 2506,
											"end": 2531,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 2506,
											"end": 2531,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 2550,
											"end": 2558,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 2541,
											"end": 2547,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 2541,
											"end": 2547,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 2541,
											"end": 2558,
											"name": "PUSH",
											"source": 0,
											"value": "100"
										},
										{
											"begin": 2541,
											"end": 2558,
											"name": "EXP",
											"source": 0
										},
										{
											"begin": 2541,
											"end": 2558,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 2541,
											"end": 2558,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 2541,
											"end": 2558,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 2541,
											"end": 2558,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 2541,
											"end": 2558,
											"name": "MUL",
											"source": 0
										},
										{
											"begin": 2541,
											"end": 2558,
											"name": "NOT",
											"source": 0
										},
										{
											"begin": 2541,
											"end": 2558,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 2541,
											"end": 2558,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 2541,
											"end": 2558,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 2541,
											"end": 2558,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 2541,
											"end": 2558,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 2541,
											"end": 2558,
											"name": "MUL",
											"source": 0
										},
										{
											"begin": 2541,
											"end": 2558,
											"name": "OR",
											"source": 0
										},
										{
											"begin": 2541,
											"end": 2558,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 2541,
											"end": 2558,
											"name": "SSTORE",
											"source": 0
										},
										{
											"begin": 2541,
											"end": 2558,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 2604,
											"end": 2612,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 2573,
											"end": 2613,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 2573,
											"end": 2613,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 2594,
											"end": 2602,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 2573,
											"end": 2613,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 2573,
											"end": 2613,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 2573,
											"end": 2613,
											"name": "PUSH",
											"source": 0,
											"value": "8BE0079C531659141344CD1FD0A4F28419497F9722A3DAAFE3B4186F6B6457E0"
										},
										{
											"begin": 2573,
											"end": 2613,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 2573,
											"end": 2613,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 2573,
											"end": 2613,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 2573,
											"end": 2613,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 2573,
											"end": 2613,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 2573,
											"end": 2613,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 2573,
											"end": 2613,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 2573,
											"end": 2613,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 2573,
											"end": 2613,
											"name": "LOG3",
											"source": 0
										},
										{
											"begin": 2496,
											"end": 2620,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 2433,
											"end": 2620,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 2433,
											"end": 2620,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 1544,
											"end": 1839,
											"name": "tag",
											"source": 9,
											"value": "122"
										},
										{
											"begin": 1544,
											"end": 1839,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 1609,
											"end": 1616,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 1639,
											"end": 1640,
											"name": "PUSH",
											"source": 9,
											"value": "7"
										},
										{
											"begin": 1632,
											"end": 1637,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 1632,
											"end": 1640,
											"name": "SUB",
											"source": 9
										},
										{
											"begin": 1629,
											"end": 1833,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "161"
										},
										{
											"begin": 1629,
											"end": 1833,
											"name": "JUMPI",
											"source": 9
										},
										{
											"begin": 1663,
											"end": 1667,
											"name": "PUSH",
											"source": 9,
											"value": "3E8"
										},
										{
											"begin": 1656,
											"end": 1667,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 1656,
											"end": 1667,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 1656,
											"end": 1667,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "160"
										},
										{
											"begin": 1656,
											"end": 1667,
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 1629,
											"end": 1833,
											"name": "tag",
											"source": 9,
											"value": "161"
										},
										{
											"begin": 1629,
											"end": 1833,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 1694,
											"end": 1696,
											"name": "PUSH",
											"source": 9,
											"value": "E"
										},
										{
											"begin": 1687,
											"end": 1692,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 1687,
											"end": 1696,
											"name": "SUB",
											"source": 9
										},
										{
											"begin": 1684,
											"end": 1833,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "163"
										},
										{
											"begin": 1684,
											"end": 1833,
											"name": "JUMPI",
											"source": 9
										},
										{
											"begin": 1719,
											"end": 1723,
											"name": "PUSH",
											"source": 9,
											"value": "BB8"
										},
										{
											"begin": 1712,
											"end": 1723,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 1712,
											"end": 1723,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 1712,
											"end": 1723,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "160"
										},
										{
											"begin": 1712,
											"end": 1723,
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 1684,
											"end": 1833,
											"name": "tag",
											"source": 9,
											"value": "163"
										},
										{
											"begin": 1684,
											"end": 1833,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 1750,
											"end": 1752,
											"name": "PUSH",
											"source": 9,
											"value": "1E"
										},
										{
											"begin": 1743,
											"end": 1748,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 1743,
											"end": 1752,
											"name": "SUB",
											"source": 9
										},
										{
											"begin": 1740,
											"end": 1833,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "165"
										},
										{
											"begin": 1740,
											"end": 1833,
											"name": "JUMPI",
											"source": 9
										},
										{
											"begin": 1775,
											"end": 1779,
											"name": "PUSH",
											"source": 9,
											"value": "1388"
										},
										{
											"begin": 1768,
											"end": 1779,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 1768,
											"end": 1779,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 1768,
											"end": 1779,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "160"
										},
										{
											"begin": 1768,
											"end": 1779,
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 1740,
											"end": 1833,
											"name": "tag",
											"source": 9,
											"value": "165"
										},
										{
											"begin": 1740,
											"end": 1833,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 1817,
											"end": 1822,
											"name": "PUSH",
											"source": 9,
											"value": "2710"
										},
										{
											"begin": 1810,
											"end": 1822,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 1810,
											"end": 1822,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 1544,
											"end": 1839,
											"name": "tag",
											"source": 9,
											"value": "160"
										},
										{
											"begin": 1544,
											"end": 1839,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 1544,
											"end": 1839,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 1544,
											"end": 1839,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 1544,
											"end": 1839,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 1544,
											"end": 1839,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 640,
											"end": 736,
											"name": "tag",
											"source": 7,
											"value": "154"
										},
										{
											"begin": 640,
											"end": 736,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 693,
											"end": 700,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 719,
											"end": 729,
											"name": "CALLER",
											"source": 7
										},
										{
											"begin": 712,
											"end": 729,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 712,
											"end": 729,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 640,
											"end": 736,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 640,
											"end": 736,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 7,
											"end": 84,
											"name": "tag",
											"source": 10,
											"value": "168"
										},
										{
											"begin": 7,
											"end": 84,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 44,
											"end": 51,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 73,
											"end": 78,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 62,
											"end": 78,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 62,
											"end": 78,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 7,
											"end": 84,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 7,
											"end": 84,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 7,
											"end": 84,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 7,
											"end": 84,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 90,
											"end": 208,
											"name": "tag",
											"source": 10,
											"value": "169"
										},
										{
											"begin": 90,
											"end": 208,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 177,
											"end": 201,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "215"
										},
										{
											"begin": 195,
											"end": 200,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 177,
											"end": 201,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "168"
										},
										{
											"begin": 177,
											"end": 201,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 177,
											"end": 201,
											"name": "tag",
											"source": 10,
											"value": "215"
										},
										{
											"begin": 177,
											"end": 201,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 172,
											"end": 175,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 165,
											"end": 202,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": 90,
											"end": 208,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 90,
											"end": 208,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 90,
											"end": 208,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 214,
											"end": 436,
											"name": "tag",
											"source": 10,
											"value": "21"
										},
										{
											"begin": 214,
											"end": 436,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 307,
											"end": 311,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 345,
											"end": 347,
											"name": "PUSH",
											"source": 10,
											"value": "20"
										},
										{
											"begin": 334,
											"end": 343,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 330,
											"end": 348,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 322,
											"end": 348,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 322,
											"end": 348,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 358,
											"end": 429,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "217"
										},
										{
											"begin": 426,
											"end": 427,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 415,
											"end": 424,
											"name": "DUP4",
											"source": 10
										},
										{
											"begin": 411,
											"end": 428,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 402,
											"end": 408,
											"name": "DUP5",
											"source": 10
										},
										{
											"begin": 358,
											"end": 429,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "169"
										},
										{
											"begin": 358,
											"end": 429,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 358,
											"end": 429,
											"name": "tag",
											"source": 10,
											"value": "217"
										},
										{
											"begin": 358,
											"end": 429,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 214,
											"end": 436,
											"name": "SWAP3",
											"source": 10
										},
										{
											"begin": 214,
											"end": 436,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 214,
											"end": 436,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 214,
											"end": 436,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 214,
											"end": 436,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 523,
											"end": 640,
											"name": "tag",
											"source": 10,
											"value": "171"
										},
										{
											"begin": 523,
											"end": 640,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 632,
											"end": 633,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 629,
											"end": 630,
											"name": "DUP1",
											"source": 10
										},
										{
											"begin": 622,
											"end": 634,
											"name": "REVERT",
											"source": 10
										},
										{
											"begin": 769,
											"end": 895,
											"name": "tag",
											"source": 10,
											"value": "173"
										},
										{
											"begin": 769,
											"end": 895,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 806,
											"end": 813,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 846,
											"end": 888,
											"name": "PUSH",
											"source": 10,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 839,
											"end": 844,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 835,
											"end": 889,
											"name": "AND",
											"source": 10
										},
										{
											"begin": 824,
											"end": 889,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 824,
											"end": 889,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 769,
											"end": 895,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 769,
											"end": 895,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 769,
											"end": 895,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 769,
											"end": 895,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 901,
											"end": 997,
											"name": "tag",
											"source": 10,
											"value": "174"
										},
										{
											"begin": 901,
											"end": 997,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 938,
											"end": 945,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 967,
											"end": 991,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "223"
										},
										{
											"begin": 985,
											"end": 990,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 967,
											"end": 991,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "173"
										},
										{
											"begin": 967,
											"end": 991,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 967,
											"end": 991,
											"name": "tag",
											"source": 10,
											"value": "223"
										},
										{
											"begin": 967,
											"end": 991,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 956,
											"end": 991,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 956,
											"end": 991,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 901,
											"end": 997,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 901,
											"end": 997,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 901,
											"end": 997,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 901,
											"end": 997,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 1003,
											"end": 1125,
											"name": "tag",
											"source": 10,
											"value": "175"
										},
										{
											"begin": 1003,
											"end": 1125,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 1076,
											"end": 1100,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "225"
										},
										{
											"begin": 1094,
											"end": 1099,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 1076,
											"end": 1100,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "174"
										},
										{
											"begin": 1076,
											"end": 1100,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 1076,
											"end": 1100,
											"name": "tag",
											"source": 10,
											"value": "225"
										},
										{
											"begin": 1076,
											"end": 1100,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 1069,
											"end": 1074,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 1066,
											"end": 1101,
											"name": "EQ",
											"source": 10
										},
										{
											"begin": 1056,
											"end": 1119,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "226"
										},
										{
											"begin": 1056,
											"end": 1119,
											"name": "JUMPI",
											"source": 10
										},
										{
											"begin": 1115,
											"end": 1116,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 1112,
											"end": 1113,
											"name": "DUP1",
											"source": 10
										},
										{
											"begin": 1105,
											"end": 1117,
											"name": "REVERT",
											"source": 10
										},
										{
											"begin": 1056,
											"end": 1119,
											"name": "tag",
											"source": 10,
											"value": "226"
										},
										{
											"begin": 1056,
											"end": 1119,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 1003,
											"end": 1125,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 1003,
											"end": 1125,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 1131,
											"end": 1270,
											"name": "tag",
											"source": 10,
											"value": "176"
										},
										{
											"begin": 1131,
											"end": 1270,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 1177,
											"end": 1182,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 1215,
											"end": 1221,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 1202,
											"end": 1222,
											"name": "CALLDATALOAD",
											"source": 10
										},
										{
											"begin": 1193,
											"end": 1222,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 1193,
											"end": 1222,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 1231,
											"end": 1264,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "228"
										},
										{
											"begin": 1258,
											"end": 1263,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 1231,
											"end": 1264,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "175"
										},
										{
											"begin": 1231,
											"end": 1264,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 1231,
											"end": 1264,
											"name": "tag",
											"source": 10,
											"value": "228"
										},
										{
											"begin": 1231,
											"end": 1264,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 1131,
											"end": 1270,
											"name": "SWAP3",
											"source": 10
										},
										{
											"begin": 1131,
											"end": 1270,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 1131,
											"end": 1270,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 1131,
											"end": 1270,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 1131,
											"end": 1270,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 1276,
											"end": 1398,
											"name": "tag",
											"source": 10,
											"value": "177"
										},
										{
											"begin": 1276,
											"end": 1398,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 1349,
											"end": 1373,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "230"
										},
										{
											"begin": 1367,
											"end": 1372,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 1349,
											"end": 1373,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "168"
										},
										{
											"begin": 1349,
											"end": 1373,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 1349,
											"end": 1373,
											"name": "tag",
											"source": 10,
											"value": "230"
										},
										{
											"begin": 1349,
											"end": 1373,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 1342,
											"end": 1347,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 1339,
											"end": 1374,
											"name": "EQ",
											"source": 10
										},
										{
											"begin": 1329,
											"end": 1392,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "231"
										},
										{
											"begin": 1329,
											"end": 1392,
											"name": "JUMPI",
											"source": 10
										},
										{
											"begin": 1388,
											"end": 1389,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 1385,
											"end": 1386,
											"name": "DUP1",
											"source": 10
										},
										{
											"begin": 1378,
											"end": 1390,
											"name": "REVERT",
											"source": 10
										},
										{
											"begin": 1329,
											"end": 1392,
											"name": "tag",
											"source": 10,
											"value": "231"
										},
										{
											"begin": 1329,
											"end": 1392,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 1276,
											"end": 1398,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 1276,
											"end": 1398,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 1404,
											"end": 1543,
											"name": "tag",
											"source": 10,
											"value": "178"
										},
										{
											"begin": 1404,
											"end": 1543,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 1450,
											"end": 1455,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 1488,
											"end": 1494,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 1475,
											"end": 1495,
											"name": "CALLDATALOAD",
											"source": 10
										},
										{
											"begin": 1466,
											"end": 1495,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 1466,
											"end": 1495,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 1504,
											"end": 1537,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "233"
										},
										{
											"begin": 1531,
											"end": 1536,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 1504,
											"end": 1537,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "177"
										},
										{
											"begin": 1504,
											"end": 1537,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 1504,
											"end": 1537,
											"name": "tag",
											"source": 10,
											"value": "233"
										},
										{
											"begin": 1504,
											"end": 1537,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 1404,
											"end": 1543,
											"name": "SWAP3",
											"source": 10
										},
										{
											"begin": 1404,
											"end": 1543,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 1404,
											"end": 1543,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 1404,
											"end": 1543,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 1404,
											"end": 1543,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 1549,
											"end": 2023,
											"name": "tag",
											"source": 10,
											"value": "24"
										},
										{
											"begin": 1549,
											"end": 2023,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 1617,
											"end": 1623,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 1625,
											"end": 1631,
											"name": "DUP1",
											"source": 10
										},
										{
											"begin": 1674,
											"end": 1676,
											"name": "PUSH",
											"source": 10,
											"value": "40"
										},
										{
											"begin": 1662,
											"end": 1671,
											"name": "DUP4",
											"source": 10
										},
										{
											"begin": 1653,
											"end": 1660,
											"name": "DUP6",
											"source": 10
										},
										{
											"begin": 1649,
											"end": 1672,
											"name": "SUB",
											"source": 10
										},
										{
											"begin": 1645,
											"end": 1677,
											"name": "SLT",
											"source": 10
										},
										{
											"begin": 1642,
											"end": 1761,
											"name": "ISZERO",
											"source": 10
										},
										{
											"begin": 1642,
											"end": 1761,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "235"
										},
										{
											"begin": 1642,
											"end": 1761,
											"name": "JUMPI",
											"source": 10
										},
										{
											"begin": 1680,
											"end": 1759,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "236"
										},
										{
											"begin": 1680,
											"end": 1759,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "171"
										},
										{
											"begin": 1680,
											"end": 1759,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 1680,
											"end": 1759,
											"name": "tag",
											"source": 10,
											"value": "236"
										},
										{
											"begin": 1680,
											"end": 1759,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 1642,
											"end": 1761,
											"name": "tag",
											"source": 10,
											"value": "235"
										},
										{
											"begin": 1642,
											"end": 1761,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 1800,
											"end": 1801,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 1825,
											"end": 1878,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "237"
										},
										{
											"begin": 1870,
											"end": 1877,
											"name": "DUP6",
											"source": 10
										},
										{
											"begin": 1861,
											"end": 1867,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 1850,
											"end": 1859,
											"name": "DUP7",
											"source": 10
										},
										{
											"begin": 1846,
											"end": 1868,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 1825,
											"end": 1878,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "176"
										},
										{
											"begin": 1825,
											"end": 1878,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 1825,
											"end": 1878,
											"name": "tag",
											"source": 10,
											"value": "237"
										},
										{
											"begin": 1825,
											"end": 1878,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 1815,
											"end": 1878,
											"name": "SWAP3",
											"source": 10
										},
										{
											"begin": 1815,
											"end": 1878,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 1771,
											"end": 1888,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 1927,
											"end": 1929,
											"name": "PUSH",
											"source": 10,
											"value": "20"
										},
										{
											"begin": 1953,
											"end": 2006,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "238"
										},
										{
											"begin": 1998,
											"end": 2005,
											"name": "DUP6",
											"source": 10
										},
										{
											"begin": 1989,
											"end": 1995,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 1978,
											"end": 1987,
											"name": "DUP7",
											"source": 10
										},
										{
											"begin": 1974,
											"end": 1996,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 1953,
											"end": 2006,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "178"
										},
										{
											"begin": 1953,
											"end": 2006,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 1953,
											"end": 2006,
											"name": "tag",
											"source": 10,
											"value": "238"
										},
										{
											"begin": 1953,
											"end": 2006,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 1943,
											"end": 2006,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 1943,
											"end": 2006,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 1898,
											"end": 2016,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 1549,
											"end": 2023,
											"name": "SWAP3",
											"source": 10
										},
										{
											"begin": 1549,
											"end": 2023,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 1549,
											"end": 2023,
											"name": "SWAP3",
											"source": 10
										},
										{
											"begin": 1549,
											"end": 2023,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 1549,
											"end": 2023,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 1549,
											"end": 2023,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 2029,
											"end": 2503,
											"name": "tag",
											"source": 10,
											"value": "33"
										},
										{
											"begin": 2029,
											"end": 2503,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 2097,
											"end": 2103,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 2105,
											"end": 2111,
											"name": "DUP1",
											"source": 10
										},
										{
											"begin": 2154,
											"end": 2156,
											"name": "PUSH",
											"source": 10,
											"value": "40"
										},
										{
											"begin": 2142,
											"end": 2151,
											"name": "DUP4",
											"source": 10
										},
										{
											"begin": 2133,
											"end": 2140,
											"name": "DUP6",
											"source": 10
										},
										{
											"begin": 2129,
											"end": 2152,
											"name": "SUB",
											"source": 10
										},
										{
											"begin": 2125,
											"end": 2157,
											"name": "SLT",
											"source": 10
										},
										{
											"begin": 2122,
											"end": 2241,
											"name": "ISZERO",
											"source": 10
										},
										{
											"begin": 2122,
											"end": 2241,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "240"
										},
										{
											"begin": 2122,
											"end": 2241,
											"name": "JUMPI",
											"source": 10
										},
										{
											"begin": 2160,
											"end": 2239,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "241"
										},
										{
											"begin": 2160,
											"end": 2239,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "171"
										},
										{
											"begin": 2160,
											"end": 2239,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 2160,
											"end": 2239,
											"name": "tag",
											"source": 10,
											"value": "241"
										},
										{
											"begin": 2160,
											"end": 2239,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 2122,
											"end": 2241,
											"name": "tag",
											"source": 10,
											"value": "240"
										},
										{
											"begin": 2122,
											"end": 2241,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 2280,
											"end": 2281,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 2305,
											"end": 2358,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "242"
										},
										{
											"begin": 2350,
											"end": 2357,
											"name": "DUP6",
											"source": 10
										},
										{
											"begin": 2341,
											"end": 2347,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 2330,
											"end": 2339,
											"name": "DUP7",
											"source": 10
										},
										{
											"begin": 2326,
											"end": 2348,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 2305,
											"end": 2358,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "178"
										},
										{
											"begin": 2305,
											"end": 2358,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 2305,
											"end": 2358,
											"name": "tag",
											"source": 10,
											"value": "242"
										},
										{
											"begin": 2305,
											"end": 2358,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 2295,
											"end": 2358,
											"name": "SWAP3",
											"source": 10
										},
										{
											"begin": 2295,
											"end": 2358,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 2251,
											"end": 2368,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 2407,
											"end": 2409,
											"name": "PUSH",
											"source": 10,
											"value": "20"
										},
										{
											"begin": 2433,
											"end": 2486,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "243"
										},
										{
											"begin": 2478,
											"end": 2485,
											"name": "DUP6",
											"source": 10
										},
										{
											"begin": 2469,
											"end": 2475,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 2458,
											"end": 2467,
											"name": "DUP7",
											"source": 10
										},
										{
											"begin": 2454,
											"end": 2476,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 2433,
											"end": 2486,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "178"
										},
										{
											"begin": 2433,
											"end": 2486,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 2433,
											"end": 2486,
											"name": "tag",
											"source": 10,
											"value": "243"
										},
										{
											"begin": 2433,
											"end": 2486,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 2423,
											"end": 2486,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 2423,
											"end": 2486,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 2378,
											"end": 2496,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 2029,
											"end": 2503,
											"name": "SWAP3",
											"source": 10
										},
										{
											"begin": 2029,
											"end": 2503,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 2029,
											"end": 2503,
											"name": "SWAP3",
											"source": 10
										},
										{
											"begin": 2029,
											"end": 2503,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 2029,
											"end": 2503,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 2029,
											"end": 2503,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 2509,
											"end": 2569,
											"name": "tag",
											"source": 10,
											"value": "179"
										},
										{
											"begin": 2509,
											"end": 2569,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 2537,
											"end": 2540,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 2558,
											"end": 2563,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 2551,
											"end": 2563,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 2551,
											"end": 2563,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 2509,
											"end": 2569,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 2509,
											"end": 2569,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 2509,
											"end": 2569,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 2509,
											"end": 2569,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 2575,
											"end": 2717,
											"name": "tag",
											"source": 10,
											"value": "180"
										},
										{
											"begin": 2575,
											"end": 2717,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 2625,
											"end": 2634,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 2658,
											"end": 2711,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "246"
										},
										{
											"begin": 2676,
											"end": 2710,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "247"
										},
										{
											"begin": 2685,
											"end": 2709,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "248"
										},
										{
											"begin": 2703,
											"end": 2708,
											"name": "DUP5",
											"source": 10
										},
										{
											"begin": 2685,
											"end": 2709,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "173"
										},
										{
											"begin": 2685,
											"end": 2709,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 2685,
											"end": 2709,
											"name": "tag",
											"source": 10,
											"value": "248"
										},
										{
											"begin": 2685,
											"end": 2709,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 2676,
											"end": 2710,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "179"
										},
										{
											"begin": 2676,
											"end": 2710,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 2676,
											"end": 2710,
											"name": "tag",
											"source": 10,
											"value": "247"
										},
										{
											"begin": 2676,
											"end": 2710,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 2658,
											"end": 2711,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "173"
										},
										{
											"begin": 2658,
											"end": 2711,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 2658,
											"end": 2711,
											"name": "tag",
											"source": 10,
											"value": "246"
										},
										{
											"begin": 2658,
											"end": 2711,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 2645,
											"end": 2711,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 2645,
											"end": 2711,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 2575,
											"end": 2717,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 2575,
											"end": 2717,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 2575,
											"end": 2717,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 2575,
											"end": 2717,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 2723,
											"end": 2849,
											"name": "tag",
											"source": 10,
											"value": "181"
										},
										{
											"begin": 2723,
											"end": 2849,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 2773,
											"end": 2782,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 2806,
											"end": 2843,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "250"
										},
										{
											"begin": 2837,
											"end": 2842,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 2806,
											"end": 2843,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "180"
										},
										{
											"begin": 2806,
											"end": 2843,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 2806,
											"end": 2843,
											"name": "tag",
											"source": 10,
											"value": "250"
										},
										{
											"begin": 2806,
											"end": 2843,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 2793,
											"end": 2843,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 2793,
											"end": 2843,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 2723,
											"end": 2849,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 2723,
											"end": 2849,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 2723,
											"end": 2849,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 2723,
											"end": 2849,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 2855,
											"end": 2996,
											"name": "tag",
											"source": 10,
											"value": "182"
										},
										{
											"begin": 2855,
											"end": 2996,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 2920,
											"end": 2929,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 2953,
											"end": 2990,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "252"
										},
										{
											"begin": 2984,
											"end": 2989,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 2953,
											"end": 2990,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "181"
										},
										{
											"begin": 2953,
											"end": 2990,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 2953,
											"end": 2990,
											"name": "tag",
											"source": 10,
											"value": "252"
										},
										{
											"begin": 2953,
											"end": 2990,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 2940,
											"end": 2990,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 2940,
											"end": 2990,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 2855,
											"end": 2996,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 2855,
											"end": 2996,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 2855,
											"end": 2996,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 2855,
											"end": 2996,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 3002,
											"end": 3163,
											"name": "tag",
											"source": 10,
											"value": "183"
										},
										{
											"begin": 3002,
											"end": 3163,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 3104,
											"end": 3156,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "254"
										},
										{
											"begin": 3150,
											"end": 3155,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 3104,
											"end": 3156,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "182"
										},
										{
											"begin": 3104,
											"end": 3156,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 3104,
											"end": 3156,
											"name": "tag",
											"source": 10,
											"value": "254"
										},
										{
											"begin": 3104,
											"end": 3156,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 3099,
											"end": 3102,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 3092,
											"end": 3157,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": 3002,
											"end": 3163,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 3002,
											"end": 3163,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 3002,
											"end": 3163,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 3169,
											"end": 3421,
											"name": "tag",
											"source": 10,
											"value": "40"
										},
										{
											"begin": 3169,
											"end": 3421,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 3277,
											"end": 3281,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 3315,
											"end": 3317,
											"name": "PUSH",
											"source": 10,
											"value": "20"
										},
										{
											"begin": 3304,
											"end": 3313,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 3300,
											"end": 3318,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 3292,
											"end": 3318,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 3292,
											"end": 3318,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 3328,
											"end": 3414,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "256"
										},
										{
											"begin": 3411,
											"end": 3412,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 3400,
											"end": 3409,
											"name": "DUP4",
											"source": 10
										},
										{
											"begin": 3396,
											"end": 3413,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 3387,
											"end": 3393,
											"name": "DUP5",
											"source": 10
										},
										{
											"begin": 3328,
											"end": 3414,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "183"
										},
										{
											"begin": 3328,
											"end": 3414,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 3328,
											"end": 3414,
											"name": "tag",
											"source": 10,
											"value": "256"
										},
										{
											"begin": 3328,
											"end": 3414,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 3169,
											"end": 3421,
											"name": "SWAP3",
											"source": 10
										},
										{
											"begin": 3169,
											"end": 3421,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 3169,
											"end": 3421,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 3169,
											"end": 3421,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 3169,
											"end": 3421,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 3427,
											"end": 4046,
											"name": "tag",
											"source": 10,
											"value": "43"
										},
										{
											"begin": 3427,
											"end": 4046,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 3504,
											"end": 3510,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 3512,
											"end": 3518,
											"name": "DUP1",
											"source": 10
										},
										{
											"begin": 3520,
											"end": 3526,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 3569,
											"end": 3571,
											"name": "PUSH",
											"source": 10,
											"value": "60"
										},
										{
											"begin": 3557,
											"end": 3566,
											"name": "DUP5",
											"source": 10
										},
										{
											"begin": 3548,
											"end": 3555,
											"name": "DUP7",
											"source": 10
										},
										{
											"begin": 3544,
											"end": 3567,
											"name": "SUB",
											"source": 10
										},
										{
											"begin": 3540,
											"end": 3572,
											"name": "SLT",
											"source": 10
										},
										{
											"begin": 3537,
											"end": 3656,
											"name": "ISZERO",
											"source": 10
										},
										{
											"begin": 3537,
											"end": 3656,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "258"
										},
										{
											"begin": 3537,
											"end": 3656,
											"name": "JUMPI",
											"source": 10
										},
										{
											"begin": 3575,
											"end": 3654,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "259"
										},
										{
											"begin": 3575,
											"end": 3654,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "171"
										},
										{
											"begin": 3575,
											"end": 3654,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 3575,
											"end": 3654,
											"name": "tag",
											"source": 10,
											"value": "259"
										},
										{
											"begin": 3575,
											"end": 3654,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 3537,
											"end": 3656,
											"name": "tag",
											"source": 10,
											"value": "258"
										},
										{
											"begin": 3537,
											"end": 3656,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 3695,
											"end": 3696,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 3720,
											"end": 3773,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "260"
										},
										{
											"begin": 3765,
											"end": 3772,
											"name": "DUP7",
											"source": 10
										},
										{
											"begin": 3756,
											"end": 3762,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 3745,
											"end": 3754,
											"name": "DUP8",
											"source": 10
										},
										{
											"begin": 3741,
											"end": 3763,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 3720,
											"end": 3773,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "178"
										},
										{
											"begin": 3720,
											"end": 3773,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 3720,
											"end": 3773,
											"name": "tag",
											"source": 10,
											"value": "260"
										},
										{
											"begin": 3720,
											"end": 3773,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 3710,
											"end": 3773,
											"name": "SWAP4",
											"source": 10
										},
										{
											"begin": 3710,
											"end": 3773,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 3666,
											"end": 3783,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 3822,
											"end": 3824,
											"name": "PUSH",
											"source": 10,
											"value": "20"
										},
										{
											"begin": 3848,
											"end": 3901,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "261"
										},
										{
											"begin": 3893,
											"end": 3900,
											"name": "DUP7",
											"source": 10
										},
										{
											"begin": 3884,
											"end": 3890,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 3873,
											"end": 3882,
											"name": "DUP8",
											"source": 10
										},
										{
											"begin": 3869,
											"end": 3891,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 3848,
											"end": 3901,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "178"
										},
										{
											"begin": 3848,
											"end": 3901,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 3848,
											"end": 3901,
											"name": "tag",
											"source": 10,
											"value": "261"
										},
										{
											"begin": 3848,
											"end": 3901,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 3838,
											"end": 3901,
											"name": "SWAP3",
											"source": 10
										},
										{
											"begin": 3838,
											"end": 3901,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 3793,
											"end": 3911,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 3950,
											"end": 3952,
											"name": "PUSH",
											"source": 10,
											"value": "40"
										},
										{
											"begin": 3976,
											"end": 4029,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "262"
										},
										{
											"begin": 4021,
											"end": 4028,
											"name": "DUP7",
											"source": 10
										},
										{
											"begin": 4012,
											"end": 4018,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 4001,
											"end": 4010,
											"name": "DUP8",
											"source": 10
										},
										{
											"begin": 3997,
											"end": 4019,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 3976,
											"end": 4029,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "178"
										},
										{
											"begin": 3976,
											"end": 4029,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 3976,
											"end": 4029,
											"name": "tag",
											"source": 10,
											"value": "262"
										},
										{
											"begin": 3976,
											"end": 4029,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 3966,
											"end": 4029,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 3966,
											"end": 4029,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 3921,
											"end": 4039,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 3427,
											"end": 4046,
											"name": "SWAP3",
											"source": 10
										},
										{
											"begin": 3427,
											"end": 4046,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 3427,
											"end": 4046,
											"name": "SWAP3",
											"source": 10
										},
										{
											"begin": 3427,
											"end": 4046,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 3427,
											"end": 4046,
											"name": "SWAP3",
											"source": 10
										},
										{
											"begin": 3427,
											"end": 4046,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 4052,
											"end": 4381,
											"name": "tag",
											"source": 10,
											"value": "47"
										},
										{
											"begin": 4052,
											"end": 4381,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 4111,
											"end": 4117,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 4160,
											"end": 4162,
											"name": "PUSH",
											"source": 10,
											"value": "20"
										},
										{
											"begin": 4148,
											"end": 4157,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 4139,
											"end": 4146,
											"name": "DUP5",
											"source": 10
										},
										{
											"begin": 4135,
											"end": 4158,
											"name": "SUB",
											"source": 10
										},
										{
											"begin": 4131,
											"end": 4163,
											"name": "SLT",
											"source": 10
										},
										{
											"begin": 4128,
											"end": 4247,
											"name": "ISZERO",
											"source": 10
										},
										{
											"begin": 4128,
											"end": 4247,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "264"
										},
										{
											"begin": 4128,
											"end": 4247,
											"name": "JUMPI",
											"source": 10
										},
										{
											"begin": 4166,
											"end": 4245,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "265"
										},
										{
											"begin": 4166,
											"end": 4245,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "171"
										},
										{
											"begin": 4166,
											"end": 4245,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 4166,
											"end": 4245,
											"name": "tag",
											"source": 10,
											"value": "265"
										},
										{
											"begin": 4166,
											"end": 4245,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 4128,
											"end": 4247,
											"name": "tag",
											"source": 10,
											"value": "264"
										},
										{
											"begin": 4128,
											"end": 4247,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 4286,
											"end": 4287,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 4311,
											"end": 4364,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "266"
										},
										{
											"begin": 4356,
											"end": 4363,
											"name": "DUP5",
											"source": 10
										},
										{
											"begin": 4347,
											"end": 4353,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 4336,
											"end": 4345,
											"name": "DUP6",
											"source": 10
										},
										{
											"begin": 4332,
											"end": 4354,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 4311,
											"end": 4364,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "176"
										},
										{
											"begin": 4311,
											"end": 4364,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 4311,
											"end": 4364,
											"name": "tag",
											"source": 10,
											"value": "266"
										},
										{
											"begin": 4311,
											"end": 4364,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 4301,
											"end": 4364,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 4301,
											"end": 4364,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 4257,
											"end": 4374,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 4052,
											"end": 4381,
											"name": "SWAP3",
											"source": 10
										},
										{
											"begin": 4052,
											"end": 4381,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 4052,
											"end": 4381,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 4052,
											"end": 4381,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 4052,
											"end": 4381,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 4387,
											"end": 4501,
											"name": "tag",
											"source": 10,
											"value": "184"
										},
										{
											"begin": 4387,
											"end": 4501,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 4454,
											"end": 4460,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 4488,
											"end": 4493,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 4482,
											"end": 4494,
											"name": "MLOAD",
											"source": 10
										},
										{
											"begin": 4472,
											"end": 4494,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 4472,
											"end": 4494,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 4387,
											"end": 4501,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 4387,
											"end": 4501,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 4387,
											"end": 4501,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 4387,
											"end": 4501,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 4507,
											"end": 4691,
											"name": "tag",
											"source": 10,
											"value": "185"
										},
										{
											"begin": 4507,
											"end": 4691,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 4606,
											"end": 4617,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 4640,
											"end": 4646,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 4635,
											"end": 4638,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 4628,
											"end": 4647,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": 4680,
											"end": 4684,
											"name": "PUSH",
											"source": 10,
											"value": "20"
										},
										{
											"begin": 4675,
											"end": 4678,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 4671,
											"end": 4685,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 4656,
											"end": 4685,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 4656,
											"end": 4685,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 4507,
											"end": 4691,
											"name": "SWAP3",
											"source": 10
										},
										{
											"begin": 4507,
											"end": 4691,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 4507,
											"end": 4691,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 4507,
											"end": 4691,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 4507,
											"end": 4691,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 4697,
											"end": 4829,
											"name": "tag",
											"source": 10,
											"value": "186"
										},
										{
											"begin": 4697,
											"end": 4829,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 4764,
											"end": 4768,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 4787,
											"end": 4790,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 4779,
											"end": 4790,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 4779,
											"end": 4790,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 4817,
											"end": 4821,
											"name": "PUSH",
											"source": 10,
											"value": "20"
										},
										{
											"begin": 4812,
											"end": 4815,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 4808,
											"end": 4822,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 4800,
											"end": 4822,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 4800,
											"end": 4822,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 4697,
											"end": 4829,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 4697,
											"end": 4829,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 4697,
											"end": 4829,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 4697,
											"end": 4829,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 4835,
											"end": 4943,
											"name": "tag",
											"source": 10,
											"value": "187"
										},
										{
											"begin": 4835,
											"end": 4943,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 4912,
											"end": 4936,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "271"
										},
										{
											"begin": 4930,
											"end": 4935,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 4912,
											"end": 4936,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "168"
										},
										{
											"begin": 4912,
											"end": 4936,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 4912,
											"end": 4936,
											"name": "tag",
											"source": 10,
											"value": "271"
										},
										{
											"begin": 4912,
											"end": 4936,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 4907,
											"end": 4910,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 4900,
											"end": 4937,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": 4835,
											"end": 4943,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 4835,
											"end": 4943,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 4835,
											"end": 4943,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 4949,
											"end": 5128,
											"name": "tag",
											"source": 10,
											"value": "188"
										},
										{
											"begin": 4949,
											"end": 5128,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 5018,
											"end": 5028,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 5039,
											"end": 5085,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "273"
										},
										{
											"begin": 5081,
											"end": 5084,
											"name": "DUP4",
											"source": 10
										},
										{
											"begin": 5073,
											"end": 5079,
											"name": "DUP4",
											"source": 10
										},
										{
											"begin": 5039,
											"end": 5085,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "187"
										},
										{
											"begin": 5039,
											"end": 5085,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 5039,
											"end": 5085,
											"name": "tag",
											"source": 10,
											"value": "273"
										},
										{
											"begin": 5039,
											"end": 5085,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 5117,
											"end": 5121,
											"name": "PUSH",
											"source": 10,
											"value": "20"
										},
										{
											"begin": 5112,
											"end": 5115,
											"name": "DUP4",
											"source": 10
										},
										{
											"begin": 5108,
											"end": 5122,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 5094,
											"end": 5122,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 5094,
											"end": 5122,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 4949,
											"end": 5128,
											"name": "SWAP3",
											"source": 10
										},
										{
											"begin": 4949,
											"end": 5128,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 4949,
											"end": 5128,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 4949,
											"end": 5128,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 4949,
											"end": 5128,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 5134,
											"end": 5247,
											"name": "tag",
											"source": 10,
											"value": "189"
										},
										{
											"begin": 5134,
											"end": 5247,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 5204,
											"end": 5208,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 5236,
											"end": 5240,
											"name": "PUSH",
											"source": 10,
											"value": "20"
										},
										{
											"begin": 5231,
											"end": 5234,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 5227,
											"end": 5241,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 5219,
											"end": 5241,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 5219,
											"end": 5241,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 5134,
											"end": 5247,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 5134,
											"end": 5247,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 5134,
											"end": 5247,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 5134,
											"end": 5247,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 5283,
											"end": 6015,
											"name": "tag",
											"source": 10,
											"value": "190"
										},
										{
											"begin": 5283,
											"end": 6015,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 5402,
											"end": 5405,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 5431,
											"end": 5485,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "276"
										},
										{
											"begin": 5479,
											"end": 5484,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 5431,
											"end": 5485,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "184"
										},
										{
											"begin": 5431,
											"end": 5485,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 5431,
											"end": 5485,
											"name": "tag",
											"source": 10,
											"value": "276"
										},
										{
											"begin": 5431,
											"end": 5485,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 5501,
											"end": 5587,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "277"
										},
										{
											"begin": 5580,
											"end": 5586,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 5575,
											"end": 5578,
											"name": "DUP6",
											"source": 10
										},
										{
											"begin": 5501,
											"end": 5587,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "185"
										},
										{
											"begin": 5501,
											"end": 5587,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 5501,
											"end": 5587,
											"name": "tag",
											"source": 10,
											"value": "277"
										},
										{
											"begin": 5501,
											"end": 5587,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 5494,
											"end": 5587,
											"name": "SWAP4",
											"source": 10
										},
										{
											"begin": 5494,
											"end": 5587,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 5611,
											"end": 5667,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "278"
										},
										{
											"begin": 5661,
											"end": 5666,
											"name": "DUP4",
											"source": 10
										},
										{
											"begin": 5611,
											"end": 5667,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "186"
										},
										{
											"begin": 5611,
											"end": 5667,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 5611,
											"end": 5667,
											"name": "tag",
											"source": 10,
											"value": "278"
										},
										{
											"begin": 5611,
											"end": 5667,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 5690,
											"end": 5697,
											"name": "DUP1",
											"source": 10
										},
										{
											"begin": 5721,
											"end": 5722,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 5706,
											"end": 5990,
											"name": "tag",
											"source": 10,
											"value": "279"
										},
										{
											"begin": 5706,
											"end": 5990,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 5731,
											"end": 5737,
											"name": "DUP4",
											"source": 10
										},
										{
											"begin": 5728,
											"end": 5729,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 5725,
											"end": 5738,
											"name": "LT",
											"source": 10
										},
										{
											"begin": 5706,
											"end": 5990,
											"name": "ISZERO",
											"source": 10
										},
										{
											"begin": 5706,
											"end": 5990,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "281"
										},
										{
											"begin": 5706,
											"end": 5990,
											"name": "JUMPI",
											"source": 10
										},
										{
											"begin": 5807,
											"end": 5813,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 5801,
											"end": 5814,
											"name": "MLOAD",
											"source": 10
										},
										{
											"begin": 5834,
											"end": 5897,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "282"
										},
										{
											"begin": 5893,
											"end": 5896,
											"name": "DUP9",
											"source": 10
										},
										{
											"begin": 5878,
											"end": 5891,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 5834,
											"end": 5897,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "188"
										},
										{
											"begin": 5834,
											"end": 5897,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 5834,
											"end": 5897,
											"name": "tag",
											"source": 10,
											"value": "282"
										},
										{
											"begin": 5834,
											"end": 5897,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 5827,
											"end": 5897,
											"name": "SWAP8",
											"source": 10
										},
										{
											"begin": 5827,
											"end": 5897,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 5920,
											"end": 5980,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "283"
										},
										{
											"begin": 5973,
											"end": 5979,
											"name": "DUP4",
											"source": 10
										},
										{
											"begin": 5920,
											"end": 5980,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "189"
										},
										{
											"begin": 5920,
											"end": 5980,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 5920,
											"end": 5980,
											"name": "tag",
											"source": 10,
											"value": "283"
										},
										{
											"begin": 5920,
											"end": 5980,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 5910,
											"end": 5980,
											"name": "SWAP3",
											"source": 10
										},
										{
											"begin": 5910,
											"end": 5980,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 5766,
											"end": 5990,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 5753,
											"end": 5754,
											"name": "PUSH",
											"source": 10,
											"value": "1"
										},
										{
											"begin": 5750,
											"end": 5751,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 5746,
											"end": 5755,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 5741,
											"end": 5755,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 5741,
											"end": 5755,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 5706,
											"end": 5990,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "279"
										},
										{
											"begin": 5706,
											"end": 5990,
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 5706,
											"end": 5990,
											"name": "tag",
											"source": 10,
											"value": "281"
										},
										{
											"begin": 5706,
											"end": 5990,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 5710,
											"end": 5724,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 6006,
											"end": 6009,
											"name": "DUP6",
											"source": 10
										},
										{
											"begin": 5999,
											"end": 6009,
											"name": "SWAP4",
											"source": 10
										},
										{
											"begin": 5999,
											"end": 6009,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 5407,
											"end": 6015,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 5407,
											"end": 6015,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 5407,
											"end": 6015,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 5283,
											"end": 6015,
											"name": "SWAP3",
											"source": 10
										},
										{
											"begin": 5283,
											"end": 6015,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 5283,
											"end": 6015,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 5283,
											"end": 6015,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 5283,
											"end": 6015,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 6021,
											"end": 6394,
											"name": "tag",
											"source": 10,
											"value": "50"
										},
										{
											"begin": 6021,
											"end": 6394,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 6164,
											"end": 6168,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 6202,
											"end": 6204,
											"name": "PUSH",
											"source": 10,
											"value": "20"
										},
										{
											"begin": 6191,
											"end": 6200,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 6187,
											"end": 6205,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 6179,
											"end": 6205,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 6179,
											"end": 6205,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 6251,
											"end": 6260,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 6245,
											"end": 6249,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 6241,
											"end": 6261,
											"name": "SUB",
											"source": 10
										},
										{
											"begin": 6237,
											"end": 6238,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 6226,
											"end": 6235,
											"name": "DUP4",
											"source": 10
										},
										{
											"begin": 6222,
											"end": 6239,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 6215,
											"end": 6262,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": 6279,
											"end": 6387,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "285"
										},
										{
											"begin": 6382,
											"end": 6386,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 6373,
											"end": 6379,
											"name": "DUP5",
											"source": 10
										},
										{
											"begin": 6279,
											"end": 6387,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "190"
										},
										{
											"begin": 6279,
											"end": 6387,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 6279,
											"end": 6387,
											"name": "tag",
											"source": 10,
											"value": "285"
										},
										{
											"begin": 6279,
											"end": 6387,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 6271,
											"end": 6387,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 6271,
											"end": 6387,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 6021,
											"end": 6394,
											"name": "SWAP3",
											"source": 10
										},
										{
											"begin": 6021,
											"end": 6394,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 6021,
											"end": 6394,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 6021,
											"end": 6394,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 6021,
											"end": 6394,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 6400,
											"end": 6518,
											"name": "tag",
											"source": 10,
											"value": "191"
										},
										{
											"begin": 6400,
											"end": 6518,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 6487,
											"end": 6511,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "287"
										},
										{
											"begin": 6505,
											"end": 6510,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 6487,
											"end": 6511,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "174"
										},
										{
											"begin": 6487,
											"end": 6511,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 6487,
											"end": 6511,
											"name": "tag",
											"source": 10,
											"value": "287"
										},
										{
											"begin": 6487,
											"end": 6511,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 6482,
											"end": 6485,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 6475,
											"end": 6512,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": 6400,
											"end": 6518,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 6400,
											"end": 6518,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 6400,
											"end": 6518,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 6524,
											"end": 6746,
											"name": "tag",
											"source": 10,
											"value": "54"
										},
										{
											"begin": 6524,
											"end": 6746,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 6617,
											"end": 6621,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 6655,
											"end": 6657,
											"name": "PUSH",
											"source": 10,
											"value": "20"
										},
										{
											"begin": 6644,
											"end": 6653,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 6640,
											"end": 6658,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 6632,
											"end": 6658,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 6632,
											"end": 6658,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 6668,
											"end": 6739,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "289"
										},
										{
											"begin": 6736,
											"end": 6737,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 6725,
											"end": 6734,
											"name": "DUP4",
											"source": 10
										},
										{
											"begin": 6721,
											"end": 6738,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 6712,
											"end": 6718,
											"name": "DUP5",
											"source": 10
										},
										{
											"begin": 6668,
											"end": 6739,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "191"
										},
										{
											"begin": 6668,
											"end": 6739,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 6668,
											"end": 6739,
											"name": "tag",
											"source": 10,
											"value": "289"
										},
										{
											"begin": 6668,
											"end": 6739,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 6524,
											"end": 6746,
											"name": "SWAP3",
											"source": 10
										},
										{
											"begin": 6524,
											"end": 6746,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 6524,
											"end": 6746,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 6524,
											"end": 6746,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 6524,
											"end": 6746,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 6752,
											"end": 7081,
											"name": "tag",
											"source": 10,
											"value": "57"
										},
										{
											"begin": 6752,
											"end": 7081,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 6811,
											"end": 6817,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 6860,
											"end": 6862,
											"name": "PUSH",
											"source": 10,
											"value": "20"
										},
										{
											"begin": 6848,
											"end": 6857,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 6839,
											"end": 6846,
											"name": "DUP5",
											"source": 10
										},
										{
											"begin": 6835,
											"end": 6858,
											"name": "SUB",
											"source": 10
										},
										{
											"begin": 6831,
											"end": 6863,
											"name": "SLT",
											"source": 10
										},
										{
											"begin": 6828,
											"end": 6947,
											"name": "ISZERO",
											"source": 10
										},
										{
											"begin": 6828,
											"end": 6947,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "291"
										},
										{
											"begin": 6828,
											"end": 6947,
											"name": "JUMPI",
											"source": 10
										},
										{
											"begin": 6866,
											"end": 6945,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "292"
										},
										{
											"begin": 6866,
											"end": 6945,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "171"
										},
										{
											"begin": 6866,
											"end": 6945,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 6866,
											"end": 6945,
											"name": "tag",
											"source": 10,
											"value": "292"
										},
										{
											"begin": 6866,
											"end": 6945,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 6828,
											"end": 6947,
											"name": "tag",
											"source": 10,
											"value": "291"
										},
										{
											"begin": 6828,
											"end": 6947,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 6986,
											"end": 6987,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 7011,
											"end": 7064,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "293"
										},
										{
											"begin": 7056,
											"end": 7063,
											"name": "DUP5",
											"source": 10
										},
										{
											"begin": 7047,
											"end": 7053,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 7036,
											"end": 7045,
											"name": "DUP6",
											"source": 10
										},
										{
											"begin": 7032,
											"end": 7054,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 7011,
											"end": 7064,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "178"
										},
										{
											"begin": 7011,
											"end": 7064,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 7011,
											"end": 7064,
											"name": "tag",
											"source": 10,
											"value": "293"
										},
										{
											"begin": 7011,
											"end": 7064,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 7001,
											"end": 7064,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 7001,
											"end": 7064,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 6957,
											"end": 7074,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 6752,
											"end": 7081,
											"name": "SWAP3",
											"source": 10
										},
										{
											"begin": 6752,
											"end": 7081,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 6752,
											"end": 7081,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 6752,
											"end": 7081,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 6752,
											"end": 7081,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 7087,
											"end": 7751,
											"name": "tag",
											"source": 10,
											"value": "60"
										},
										{
											"begin": 7087,
											"end": 7751,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 7292,
											"end": 7296,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 7330,
											"end": 7333,
											"name": "PUSH",
											"source": 10,
											"value": "A0"
										},
										{
											"begin": 7319,
											"end": 7328,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 7315,
											"end": 7334,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 7307,
											"end": 7334,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 7307,
											"end": 7334,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 7344,
											"end": 7415,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "295"
										},
										{
											"begin": 7412,
											"end": 7413,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 7401,
											"end": 7410,
											"name": "DUP4",
											"source": 10
										},
										{
											"begin": 7397,
											"end": 7414,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 7388,
											"end": 7394,
											"name": "DUP9",
											"source": 10
										},
										{
											"begin": 7344,
											"end": 7415,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "169"
										},
										{
											"begin": 7344,
											"end": 7415,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 7344,
											"end": 7415,
											"name": "tag",
											"source": 10,
											"value": "295"
										},
										{
											"begin": 7344,
											"end": 7415,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 7425,
											"end": 7497,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "296"
										},
										{
											"begin": 7493,
											"end": 7495,
											"name": "PUSH",
											"source": 10,
											"value": "20"
										},
										{
											"begin": 7482,
											"end": 7491,
											"name": "DUP4",
											"source": 10
										},
										{
											"begin": 7478,
											"end": 7496,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 7469,
											"end": 7475,
											"name": "DUP8",
											"source": 10
										},
										{
											"begin": 7425,
											"end": 7497,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "191"
										},
										{
											"begin": 7425,
											"end": 7497,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 7425,
											"end": 7497,
											"name": "tag",
											"source": 10,
											"value": "296"
										},
										{
											"begin": 7425,
											"end": 7497,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 7507,
											"end": 7579,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "297"
										},
										{
											"begin": 7575,
											"end": 7577,
											"name": "PUSH",
											"source": 10,
											"value": "40"
										},
										{
											"begin": 7564,
											"end": 7573,
											"name": "DUP4",
											"source": 10
										},
										{
											"begin": 7560,
											"end": 7578,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 7551,
											"end": 7557,
											"name": "DUP7",
											"source": 10
										},
										{
											"begin": 7507,
											"end": 7579,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "169"
										},
										{
											"begin": 7507,
											"end": 7579,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 7507,
											"end": 7579,
											"name": "tag",
											"source": 10,
											"value": "297"
										},
										{
											"begin": 7507,
											"end": 7579,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 7589,
											"end": 7661,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "298"
										},
										{
											"begin": 7657,
											"end": 7659,
											"name": "PUSH",
											"source": 10,
											"value": "60"
										},
										{
											"begin": 7646,
											"end": 7655,
											"name": "DUP4",
											"source": 10
										},
										{
											"begin": 7642,
											"end": 7660,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 7633,
											"end": 7639,
											"name": "DUP6",
											"source": 10
										},
										{
											"begin": 7589,
											"end": 7661,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "169"
										},
										{
											"begin": 7589,
											"end": 7661,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 7589,
											"end": 7661,
											"name": "tag",
											"source": 10,
											"value": "298"
										},
										{
											"begin": 7589,
											"end": 7661,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 7671,
											"end": 7744,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "299"
										},
										{
											"begin": 7739,
											"end": 7742,
											"name": "PUSH",
											"source": 10,
											"value": "80"
										},
										{
											"begin": 7728,
											"end": 7737,
											"name": "DUP4",
											"source": 10
										},
										{
											"begin": 7724,
											"end": 7743,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 7715,
											"end": 7721,
											"name": "DUP5",
											"source": 10
										},
										{
											"begin": 7671,
											"end": 7744,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "169"
										},
										{
											"begin": 7671,
											"end": 7744,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 7671,
											"end": 7744,
											"name": "tag",
											"source": 10,
											"value": "299"
										},
										{
											"begin": 7671,
											"end": 7744,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 7087,
											"end": 7751,
											"name": "SWAP7",
											"source": 10
										},
										{
											"begin": 7087,
											"end": 7751,
											"name": "SWAP6",
											"source": 10
										},
										{
											"begin": 7087,
											"end": 7751,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 7087,
											"end": 7751,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 7087,
											"end": 7751,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 7087,
											"end": 7751,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 7087,
											"end": 7751,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 7087,
											"end": 7751,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 7087,
											"end": 7751,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 7757,
											"end": 7897,
											"name": "tag",
											"source": 10,
											"value": "192"
										},
										{
											"begin": 7757,
											"end": 7897,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 7821,
											"end": 7830,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 7854,
											"end": 7891,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "301"
										},
										{
											"begin": 7885,
											"end": 7890,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 7854,
											"end": 7891,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "181"
										},
										{
											"begin": 7854,
											"end": 7891,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 7854,
											"end": 7891,
											"name": "tag",
											"source": 10,
											"value": "301"
										},
										{
											"begin": 7854,
											"end": 7891,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 7841,
											"end": 7891,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 7841,
											"end": 7891,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 7757,
											"end": 7897,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 7757,
											"end": 7897,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 7757,
											"end": 7897,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 7757,
											"end": 7897,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 7903,
											"end": 8062,
											"name": "tag",
											"source": 10,
											"value": "193"
										},
										{
											"begin": 7903,
											"end": 8062,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 8004,
											"end": 8055,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "303"
										},
										{
											"begin": 8049,
											"end": 8054,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 8004,
											"end": 8055,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "192"
										},
										{
											"begin": 8004,
											"end": 8055,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 8004,
											"end": 8055,
											"name": "tag",
											"source": 10,
											"value": "303"
										},
										{
											"begin": 8004,
											"end": 8055,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 7999,
											"end": 8002,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 7992,
											"end": 8056,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": 7903,
											"end": 8062,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 7903,
											"end": 8062,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 7903,
											"end": 8062,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 8068,
											"end": 8318,
											"name": "tag",
											"source": 10,
											"value": "67"
										},
										{
											"begin": 8068,
											"end": 8318,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 8175,
											"end": 8179,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 8213,
											"end": 8215,
											"name": "PUSH",
											"source": 10,
											"value": "20"
										},
										{
											"begin": 8202,
											"end": 8211,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 8198,
											"end": 8216,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 8190,
											"end": 8216,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 8190,
											"end": 8216,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 8226,
											"end": 8311,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "305"
										},
										{
											"begin": 8308,
											"end": 8309,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 8297,
											"end": 8306,
											"name": "DUP4",
											"source": 10
										},
										{
											"begin": 8293,
											"end": 8310,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 8284,
											"end": 8290,
											"name": "DUP5",
											"source": 10
										},
										{
											"begin": 8226,
											"end": 8311,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "193"
										},
										{
											"begin": 8226,
											"end": 8311,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 8226,
											"end": 8311,
											"name": "tag",
											"source": 10,
											"value": "305"
										},
										{
											"begin": 8226,
											"end": 8311,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 8068,
											"end": 8318,
											"name": "SWAP3",
											"source": 10
										},
										{
											"begin": 8068,
											"end": 8318,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 8068,
											"end": 8318,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 8068,
											"end": 8318,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 8068,
											"end": 8318,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 8324,
											"end": 8798,
											"name": "tag",
											"source": 10,
											"value": "70"
										},
										{
											"begin": 8324,
											"end": 8798,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 8392,
											"end": 8398,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 8400,
											"end": 8406,
											"name": "DUP1",
											"source": 10
										},
										{
											"begin": 8449,
											"end": 8451,
											"name": "PUSH",
											"source": 10,
											"value": "40"
										},
										{
											"begin": 8437,
											"end": 8446,
											"name": "DUP4",
											"source": 10
										},
										{
											"begin": 8428,
											"end": 8435,
											"name": "DUP6",
											"source": 10
										},
										{
											"begin": 8424,
											"end": 8447,
											"name": "SUB",
											"source": 10
										},
										{
											"begin": 8420,
											"end": 8452,
											"name": "SLT",
											"source": 10
										},
										{
											"begin": 8417,
											"end": 8536,
											"name": "ISZERO",
											"source": 10
										},
										{
											"begin": 8417,
											"end": 8536,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "307"
										},
										{
											"begin": 8417,
											"end": 8536,
											"name": "JUMPI",
											"source": 10
										},
										{
											"begin": 8455,
											"end": 8534,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "308"
										},
										{
											"begin": 8455,
											"end": 8534,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "171"
										},
										{
											"begin": 8455,
											"end": 8534,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 8455,
											"end": 8534,
											"name": "tag",
											"source": 10,
											"value": "308"
										},
										{
											"begin": 8455,
											"end": 8534,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 8417,
											"end": 8536,
											"name": "tag",
											"source": 10,
											"value": "307"
										},
										{
											"begin": 8417,
											"end": 8536,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 8575,
											"end": 8576,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 8600,
											"end": 8653,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "309"
										},
										{
											"begin": 8645,
											"end": 8652,
											"name": "DUP6",
											"source": 10
										},
										{
											"begin": 8636,
											"end": 8642,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 8625,
											"end": 8634,
											"name": "DUP7",
											"source": 10
										},
										{
											"begin": 8621,
											"end": 8643,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 8600,
											"end": 8653,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "178"
										},
										{
											"begin": 8600,
											"end": 8653,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 8600,
											"end": 8653,
											"name": "tag",
											"source": 10,
											"value": "309"
										},
										{
											"begin": 8600,
											"end": 8653,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 8590,
											"end": 8653,
											"name": "SWAP3",
											"source": 10
										},
										{
											"begin": 8590,
											"end": 8653,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 8546,
											"end": 8663,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 8702,
											"end": 8704,
											"name": "PUSH",
											"source": 10,
											"value": "20"
										},
										{
											"begin": 8728,
											"end": 8781,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "310"
										},
										{
											"begin": 8773,
											"end": 8780,
											"name": "DUP6",
											"source": 10
										},
										{
											"begin": 8764,
											"end": 8770,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 8753,
											"end": 8762,
											"name": "DUP7",
											"source": 10
										},
										{
											"begin": 8749,
											"end": 8771,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 8728,
											"end": 8781,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "176"
										},
										{
											"begin": 8728,
											"end": 8781,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 8728,
											"end": 8781,
											"name": "tag",
											"source": 10,
											"value": "310"
										},
										{
											"begin": 8728,
											"end": 8781,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 8718,
											"end": 8781,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 8718,
											"end": 8781,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 8673,
											"end": 8791,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 8324,
											"end": 8798,
											"name": "SWAP3",
											"source": 10
										},
										{
											"begin": 8324,
											"end": 8798,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 8324,
											"end": 8798,
											"name": "SWAP3",
											"source": 10
										},
										{
											"begin": 8324,
											"end": 8798,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 8324,
											"end": 8798,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 8324,
											"end": 8798,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 8804,
											"end": 8894,
											"name": "tag",
											"source": 10,
											"value": "194"
										},
										{
											"begin": 8804,
											"end": 8894,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 8838,
											"end": 8845,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 8881,
											"end": 8886,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 8874,
											"end": 8887,
											"name": "ISZERO",
											"source": 10
										},
										{
											"begin": 8867,
											"end": 8888,
											"name": "ISZERO",
											"source": 10
										},
										{
											"begin": 8856,
											"end": 8888,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 8856,
											"end": 8888,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 8804,
											"end": 8894,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 8804,
											"end": 8894,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 8804,
											"end": 8894,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 8804,
											"end": 8894,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 8900,
											"end": 9009,
											"name": "tag",
											"source": 10,
											"value": "195"
										},
										{
											"begin": 8900,
											"end": 9009,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 8981,
											"end": 9002,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "313"
										},
										{
											"begin": 8996,
											"end": 9001,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 8981,
											"end": 9002,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "194"
										},
										{
											"begin": 8981,
											"end": 9002,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 8981,
											"end": 9002,
											"name": "tag",
											"source": 10,
											"value": "313"
										},
										{
											"begin": 8981,
											"end": 9002,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 8976,
											"end": 8979,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 8969,
											"end": 9003,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": 8900,
											"end": 9009,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 8900,
											"end": 9009,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 8900,
											"end": 9009,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 9015,
											"end": 9225,
											"name": "tag",
											"source": 10,
											"value": "73"
										},
										{
											"begin": 9015,
											"end": 9225,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 9102,
											"end": 9106,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 9140,
											"end": 9142,
											"name": "PUSH",
											"source": 10,
											"value": "20"
										},
										{
											"begin": 9129,
											"end": 9138,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 9125,
											"end": 9143,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 9117,
											"end": 9143,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 9117,
											"end": 9143,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 9153,
											"end": 9218,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "315"
										},
										{
											"begin": 9215,
											"end": 9216,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 9204,
											"end": 9213,
											"name": "DUP4",
											"source": 10
										},
										{
											"begin": 9200,
											"end": 9217,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 9191,
											"end": 9197,
											"name": "DUP5",
											"source": 10
										},
										{
											"begin": 9153,
											"end": 9218,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "195"
										},
										{
											"begin": 9153,
											"end": 9218,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 9153,
											"end": 9218,
											"name": "tag",
											"source": 10,
											"value": "315"
										},
										{
											"begin": 9153,
											"end": 9218,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 9015,
											"end": 9225,
											"name": "SWAP3",
											"source": 10
										},
										{
											"begin": 9015,
											"end": 9225,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 9015,
											"end": 9225,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 9015,
											"end": 9225,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 9015,
											"end": 9225,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 9231,
											"end": 9374,
											"name": "tag",
											"source": 10,
											"value": "196"
										},
										{
											"begin": 9231,
											"end": 9374,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 9288,
											"end": 9293,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 9319,
											"end": 9325,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 9313,
											"end": 9326,
											"name": "MLOAD",
											"source": 10
										},
										{
											"begin": 9304,
											"end": 9326,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 9304,
											"end": 9326,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 9335,
											"end": 9368,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "317"
										},
										{
											"begin": 9362,
											"end": 9367,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 9335,
											"end": 9368,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "175"
										},
										{
											"begin": 9335,
											"end": 9368,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 9335,
											"end": 9368,
											"name": "tag",
											"source": 10,
											"value": "317"
										},
										{
											"begin": 9335,
											"end": 9368,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 9231,
											"end": 9374,
											"name": "SWAP3",
											"source": 10
										},
										{
											"begin": 9231,
											"end": 9374,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 9231,
											"end": 9374,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 9231,
											"end": 9374,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 9231,
											"end": 9374,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 9380,
											"end": 9731,
											"name": "tag",
											"source": 10,
											"value": "83"
										},
										{
											"begin": 9380,
											"end": 9731,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 9450,
											"end": 9456,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 9499,
											"end": 9501,
											"name": "PUSH",
											"source": 10,
											"value": "20"
										},
										{
											"begin": 9487,
											"end": 9496,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 9478,
											"end": 9485,
											"name": "DUP5",
											"source": 10
										},
										{
											"begin": 9474,
											"end": 9497,
											"name": "SUB",
											"source": 10
										},
										{
											"begin": 9470,
											"end": 9502,
											"name": "SLT",
											"source": 10
										},
										{
											"begin": 9467,
											"end": 9586,
											"name": "ISZERO",
											"source": 10
										},
										{
											"begin": 9467,
											"end": 9586,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "319"
										},
										{
											"begin": 9467,
											"end": 9586,
											"name": "JUMPI",
											"source": 10
										},
										{
											"begin": 9505,
											"end": 9584,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "320"
										},
										{
											"begin": 9505,
											"end": 9584,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "171"
										},
										{
											"begin": 9505,
											"end": 9584,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 9505,
											"end": 9584,
											"name": "tag",
											"source": 10,
											"value": "320"
										},
										{
											"begin": 9505,
											"end": 9584,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 9467,
											"end": 9586,
											"name": "tag",
											"source": 10,
											"value": "319"
										},
										{
											"begin": 9467,
											"end": 9586,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 9625,
											"end": 9626,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 9650,
											"end": 9714,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "321"
										},
										{
											"begin": 9706,
											"end": 9713,
											"name": "DUP5",
											"source": 10
										},
										{
											"begin": 9697,
											"end": 9703,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 9686,
											"end": 9695,
											"name": "DUP6",
											"source": 10
										},
										{
											"begin": 9682,
											"end": 9704,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 9650,
											"end": 9714,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "196"
										},
										{
											"begin": 9650,
											"end": 9714,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 9650,
											"end": 9714,
											"name": "tag",
											"source": 10,
											"value": "321"
										},
										{
											"begin": 9650,
											"end": 9714,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 9640,
											"end": 9714,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 9640,
											"end": 9714,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 9596,
											"end": 9724,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 9380,
											"end": 9731,
											"name": "SWAP3",
											"source": 10
										},
										{
											"begin": 9380,
											"end": 9731,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 9380,
											"end": 9731,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 9380,
											"end": 9731,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 9380,
											"end": 9731,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 9737,
											"end": 9906,
											"name": "tag",
											"source": 10,
											"value": "197"
										},
										{
											"begin": 9737,
											"end": 9906,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 9821,
											"end": 9832,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 9855,
											"end": 9861,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 9850,
											"end": 9853,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 9843,
											"end": 9862,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": 9895,
											"end": 9899,
											"name": "PUSH",
											"source": 10,
											"value": "20"
										},
										{
											"begin": 9890,
											"end": 9893,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 9886,
											"end": 9900,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 9871,
											"end": 9900,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 9871,
											"end": 9900,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 9737,
											"end": 9906,
											"name": "SWAP3",
											"source": 10
										},
										{
											"begin": 9737,
											"end": 9906,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 9737,
											"end": 9906,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 9737,
											"end": 9906,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 9737,
											"end": 9906,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 9912,
											"end": 10092,
											"name": "tag",
											"source": 10,
											"value": "198"
										},
										{
											"begin": 9912,
											"end": 10092,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 10052,
											"end": 10084,
											"name": "PUSH",
											"source": 10,
											"value": "43616E2774207374616B65206E667420796F7520646F6E2774206F776E210000"
										},
										{
											"begin": 10048,
											"end": 10049,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 10040,
											"end": 10046,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 10036,
											"end": 10050,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 10029,
											"end": 10085,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": 9912,
											"end": 10092,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 9912,
											"end": 10092,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 10098,
											"end": 10464,
											"name": "tag",
											"source": 10,
											"value": "199"
										},
										{
											"begin": 10098,
											"end": 10464,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 10240,
											"end": 10243,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 10261,
											"end": 10328,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "325"
										},
										{
											"begin": 10325,
											"end": 10327,
											"name": "PUSH",
											"source": 10,
											"value": "1E"
										},
										{
											"begin": 10320,
											"end": 10323,
											"name": "DUP4",
											"source": 10
										},
										{
											"begin": 10261,
											"end": 10328,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "197"
										},
										{
											"begin": 10261,
											"end": 10328,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 10261,
											"end": 10328,
											"name": "tag",
											"source": 10,
											"value": "325"
										},
										{
											"begin": 10261,
											"end": 10328,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 10254,
											"end": 10328,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 10254,
											"end": 10328,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 10337,
											"end": 10430,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "326"
										},
										{
											"begin": 10426,
											"end": 10429,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 10337,
											"end": 10430,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "198"
										},
										{
											"begin": 10337,
											"end": 10430,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 10337,
											"end": 10430,
											"name": "tag",
											"source": 10,
											"value": "326"
										},
										{
											"begin": 10337,
											"end": 10430,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 10455,
											"end": 10457,
											"name": "PUSH",
											"source": 10,
											"value": "20"
										},
										{
											"begin": 10450,
											"end": 10453,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 10446,
											"end": 10458,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 10439,
											"end": 10458,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 10439,
											"end": 10458,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 10098,
											"end": 10464,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 10098,
											"end": 10464,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 10098,
											"end": 10464,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 10098,
											"end": 10464,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 10470,
											"end": 10889,
											"name": "tag",
											"source": 10,
											"value": "86"
										},
										{
											"begin": 10470,
											"end": 10889,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 10636,
											"end": 10640,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 10674,
											"end": 10676,
											"name": "PUSH",
											"source": 10,
											"value": "20"
										},
										{
											"begin": 10663,
											"end": 10672,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 10659,
											"end": 10677,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 10651,
											"end": 10677,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 10651,
											"end": 10677,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 10723,
											"end": 10732,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 10717,
											"end": 10721,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 10713,
											"end": 10733,
											"name": "SUB",
											"source": 10
										},
										{
											"begin": 10709,
											"end": 10710,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 10698,
											"end": 10707,
											"name": "DUP4",
											"source": 10
										},
										{
											"begin": 10694,
											"end": 10711,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 10687,
											"end": 10734,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": 10751,
											"end": 10882,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "328"
										},
										{
											"begin": 10877,
											"end": 10881,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 10751,
											"end": 10882,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "199"
										},
										{
											"begin": 10751,
											"end": 10882,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 10751,
											"end": 10882,
											"name": "tag",
											"source": 10,
											"value": "328"
										},
										{
											"begin": 10751,
											"end": 10882,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 10743,
											"end": 10882,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 10743,
											"end": 10882,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 10470,
											"end": 10889,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 10470,
											"end": 10889,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 10470,
											"end": 10889,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 10470,
											"end": 10889,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 10895,
											"end": 11337,
											"name": "tag",
											"source": 10,
											"value": "89"
										},
										{
											"begin": 10895,
											"end": 11337,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 11044,
											"end": 11048,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 11082,
											"end": 11084,
											"name": "PUSH",
											"source": 10,
											"value": "60"
										},
										{
											"begin": 11071,
											"end": 11080,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 11067,
											"end": 11085,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 11059,
											"end": 11085,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 11059,
											"end": 11085,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 11095,
											"end": 11166,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "330"
										},
										{
											"begin": 11163,
											"end": 11164,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 11152,
											"end": 11161,
											"name": "DUP4",
											"source": 10
										},
										{
											"begin": 11148,
											"end": 11165,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 11139,
											"end": 11145,
											"name": "DUP7",
											"source": 10
										},
										{
											"begin": 11095,
											"end": 11166,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "191"
										},
										{
											"begin": 11095,
											"end": 11166,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 11095,
											"end": 11166,
											"name": "tag",
											"source": 10,
											"value": "330"
										},
										{
											"begin": 11095,
											"end": 11166,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 11176,
											"end": 11248,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "331"
										},
										{
											"begin": 11244,
											"end": 11246,
											"name": "PUSH",
											"source": 10,
											"value": "20"
										},
										{
											"begin": 11233,
											"end": 11242,
											"name": "DUP4",
											"source": 10
										},
										{
											"begin": 11229,
											"end": 11247,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 11220,
											"end": 11226,
											"name": "DUP6",
											"source": 10
										},
										{
											"begin": 11176,
											"end": 11248,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "191"
										},
										{
											"begin": 11176,
											"end": 11248,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 11176,
											"end": 11248,
											"name": "tag",
											"source": 10,
											"value": "331"
										},
										{
											"begin": 11176,
											"end": 11248,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 11258,
											"end": 11330,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "332"
										},
										{
											"begin": 11326,
											"end": 11328,
											"name": "PUSH",
											"source": 10,
											"value": "40"
										},
										{
											"begin": 11315,
											"end": 11324,
											"name": "DUP4",
											"source": 10
										},
										{
											"begin": 11311,
											"end": 11329,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 11302,
											"end": 11308,
											"name": "DUP5",
											"source": 10
										},
										{
											"begin": 11258,
											"end": 11330,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "169"
										},
										{
											"begin": 11258,
											"end": 11330,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 11258,
											"end": 11330,
											"name": "tag",
											"source": 10,
											"value": "332"
										},
										{
											"begin": 11258,
											"end": 11330,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 10895,
											"end": 11337,
											"name": "SWAP5",
											"source": 10
										},
										{
											"begin": 10895,
											"end": 11337,
											"name": "SWAP4",
											"source": 10
										},
										{
											"begin": 10895,
											"end": 11337,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 10895,
											"end": 11337,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 10895,
											"end": 11337,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 10895,
											"end": 11337,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 10895,
											"end": 11337,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 11343,
											"end": 11523,
											"name": "tag",
											"source": 10,
											"value": "200"
										},
										{
											"begin": 11343,
											"end": 11523,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 11391,
											"end": 11468,
											"name": "PUSH",
											"source": 10,
											"value": "4E487B7100000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 11388,
											"end": 11389,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 11381,
											"end": 11469,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": 11488,
											"end": 11492,
											"name": "PUSH",
											"source": 10,
											"value": "11"
										},
										{
											"begin": 11485,
											"end": 11486,
											"name": "PUSH",
											"source": 10,
											"value": "4"
										},
										{
											"begin": 11478,
											"end": 11493,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": 11512,
											"end": 11516,
											"name": "PUSH",
											"source": 10,
											"value": "24"
										},
										{
											"begin": 11509,
											"end": 11510,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 11502,
											"end": 11517,
											"name": "REVERT",
											"source": 10
										},
										{
											"begin": 11529,
											"end": 11762,
											"name": "tag",
											"source": 10,
											"value": "94"
										},
										{
											"begin": 11529,
											"end": 11762,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 11568,
											"end": 11571,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 11591,
											"end": 11615,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "335"
										},
										{
											"begin": 11609,
											"end": 11614,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 11591,
											"end": 11615,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "168"
										},
										{
											"begin": 11591,
											"end": 11615,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 11591,
											"end": 11615,
											"name": "tag",
											"source": 10,
											"value": "335"
										},
										{
											"begin": 11591,
											"end": 11615,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 11582,
											"end": 11615,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 11582,
											"end": 11615,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 11637,
											"end": 11703,
											"name": "PUSH",
											"source": 10,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 11630,
											"end": 11635,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 11627,
											"end": 11704,
											"name": "SUB",
											"source": 10
										},
										{
											"begin": 11624,
											"end": 11727,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "336"
										},
										{
											"begin": 11624,
											"end": 11727,
											"name": "JUMPI",
											"source": 10
										},
										{
											"begin": 11707,
											"end": 11725,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "337"
										},
										{
											"begin": 11707,
											"end": 11725,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "200"
										},
										{
											"begin": 11707,
											"end": 11725,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 11707,
											"end": 11725,
											"name": "tag",
											"source": 10,
											"value": "337"
										},
										{
											"begin": 11707,
											"end": 11725,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 11624,
											"end": 11727,
											"name": "tag",
											"source": 10,
											"value": "336"
										},
										{
											"begin": 11624,
											"end": 11727,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 11754,
											"end": 11755,
											"name": "PUSH",
											"source": 10,
											"value": "1"
										},
										{
											"begin": 11747,
											"end": 11752,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 11743,
											"end": 11756,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 11736,
											"end": 11756,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 11736,
											"end": 11756,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 11529,
											"end": 11762,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 11529,
											"end": 11762,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 11529,
											"end": 11762,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 11529,
											"end": 11762,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 11768,
											"end": 12210,
											"name": "tag",
											"source": 10,
											"value": "96"
										},
										{
											"begin": 11768,
											"end": 12210,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 11917,
											"end": 11921,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 11955,
											"end": 11957,
											"name": "PUSH",
											"source": 10,
											"value": "60"
										},
										{
											"begin": 11944,
											"end": 11953,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 11940,
											"end": 11958,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 11932,
											"end": 11958,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 11932,
											"end": 11958,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 11968,
											"end": 12039,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "339"
										},
										{
											"begin": 12036,
											"end": 12037,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 12025,
											"end": 12034,
											"name": "DUP4",
											"source": 10
										},
										{
											"begin": 12021,
											"end": 12038,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 12012,
											"end": 12018,
											"name": "DUP7",
											"source": 10
										},
										{
											"begin": 11968,
											"end": 12039,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "169"
										},
										{
											"begin": 11968,
											"end": 12039,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 11968,
											"end": 12039,
											"name": "tag",
											"source": 10,
											"value": "339"
										},
										{
											"begin": 11968,
											"end": 12039,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 12049,
											"end": 12121,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "340"
										},
										{
											"begin": 12117,
											"end": 12119,
											"name": "PUSH",
											"source": 10,
											"value": "20"
										},
										{
											"begin": 12106,
											"end": 12115,
											"name": "DUP4",
											"source": 10
										},
										{
											"begin": 12102,
											"end": 12120,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 12093,
											"end": 12099,
											"name": "DUP6",
											"source": 10
										},
										{
											"begin": 12049,
											"end": 12121,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "169"
										},
										{
											"begin": 12049,
											"end": 12121,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 12049,
											"end": 12121,
											"name": "tag",
											"source": 10,
											"value": "340"
										},
										{
											"begin": 12049,
											"end": 12121,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 12131,
											"end": 12203,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "341"
										},
										{
											"begin": 12199,
											"end": 12201,
											"name": "PUSH",
											"source": 10,
											"value": "40"
										},
										{
											"begin": 12188,
											"end": 12197,
											"name": "DUP4",
											"source": 10
										},
										{
											"begin": 12184,
											"end": 12202,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 12175,
											"end": 12181,
											"name": "DUP5",
											"source": 10
										},
										{
											"begin": 12131,
											"end": 12203,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "169"
										},
										{
											"begin": 12131,
											"end": 12203,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 12131,
											"end": 12203,
											"name": "tag",
											"source": 10,
											"value": "341"
										},
										{
											"begin": 12131,
											"end": 12203,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 11768,
											"end": 12210,
											"name": "SWAP5",
											"source": 10
										},
										{
											"begin": 11768,
											"end": 12210,
											"name": "SWAP4",
											"source": 10
										},
										{
											"begin": 11768,
											"end": 12210,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 11768,
											"end": 12210,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 11768,
											"end": 12210,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 11768,
											"end": 12210,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 11768,
											"end": 12210,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 12216,
											"end": 12410,
											"name": "tag",
											"source": 10,
											"value": "105"
										},
										{
											"begin": 12216,
											"end": 12410,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 12256,
											"end": 12260,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 12276,
											"end": 12296,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "343"
										},
										{
											"begin": 12294,
											"end": 12295,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 12276,
											"end": 12296,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "168"
										},
										{
											"begin": 12276,
											"end": 12296,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 12276,
											"end": 12296,
											"name": "tag",
											"source": 10,
											"value": "343"
										},
										{
											"begin": 12276,
											"end": 12296,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 12271,
											"end": 12296,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 12271,
											"end": 12296,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 12310,
											"end": 12330,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "344"
										},
										{
											"begin": 12328,
											"end": 12329,
											"name": "DUP4",
											"source": 10
										},
										{
											"begin": 12310,
											"end": 12330,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "168"
										},
										{
											"begin": 12310,
											"end": 12330,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 12310,
											"end": 12330,
											"name": "tag",
											"source": 10,
											"value": "344"
										},
										{
											"begin": 12310,
											"end": 12330,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 12305,
											"end": 12330,
											"name": "SWAP3",
											"source": 10
										},
										{
											"begin": 12305,
											"end": 12330,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 12354,
											"end": 12355,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 12351,
											"end": 12352,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 12347,
											"end": 12356,
											"name": "SUB",
											"source": 10
										},
										{
											"begin": 12339,
											"end": 12356,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 12339,
											"end": 12356,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 12378,
											"end": 12379,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 12372,
											"end": 12376,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 12369,
											"end": 12380,
											"name": "GT",
											"source": 10
										},
										{
											"begin": 12366,
											"end": 12403,
											"name": "ISZERO",
											"source": 10
										},
										{
											"begin": 12366,
											"end": 12403,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "345"
										},
										{
											"begin": 12366,
											"end": 12403,
											"name": "JUMPI",
											"source": 10
										},
										{
											"begin": 12383,
											"end": 12401,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "346"
										},
										{
											"begin": 12383,
											"end": 12401,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "200"
										},
										{
											"begin": 12383,
											"end": 12401,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 12383,
											"end": 12401,
											"name": "tag",
											"source": 10,
											"value": "346"
										},
										{
											"begin": 12383,
											"end": 12401,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 12366,
											"end": 12403,
											"name": "tag",
											"source": 10,
											"value": "345"
										},
										{
											"begin": 12366,
											"end": 12403,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 12216,
											"end": 12410,
											"name": "SWAP3",
											"source": 10
										},
										{
											"begin": 12216,
											"end": 12410,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 12216,
											"end": 12410,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 12216,
											"end": 12410,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 12216,
											"end": 12410,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 12416,
											"end": 12596,
											"name": "tag",
											"source": 10,
											"value": "201"
										},
										{
											"begin": 12416,
											"end": 12596,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 12464,
											"end": 12541,
											"name": "PUSH",
											"source": 10,
											"value": "4E487B7100000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 12461,
											"end": 12462,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 12454,
											"end": 12542,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": 12561,
											"end": 12565,
											"name": "PUSH",
											"source": 10,
											"value": "12"
										},
										{
											"begin": 12558,
											"end": 12559,
											"name": "PUSH",
											"source": 10,
											"value": "4"
										},
										{
											"begin": 12551,
											"end": 12566,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": 12585,
											"end": 12589,
											"name": "PUSH",
											"source": 10,
											"value": "24"
										},
										{
											"begin": 12582,
											"end": 12583,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 12575,
											"end": 12590,
											"name": "REVERT",
											"source": 10
										},
										{
											"begin": 12602,
											"end": 12787,
											"name": "tag",
											"source": 10,
											"value": "107"
										},
										{
											"begin": 12602,
											"end": 12787,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 12642,
											"end": 12643,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 12659,
											"end": 12679,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "349"
										},
										{
											"begin": 12677,
											"end": 12678,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 12659,
											"end": 12679,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "168"
										},
										{
											"begin": 12659,
											"end": 12679,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 12659,
											"end": 12679,
											"name": "tag",
											"source": 10,
											"value": "349"
										},
										{
											"begin": 12659,
											"end": 12679,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 12654,
											"end": 12679,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 12654,
											"end": 12679,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 12693,
											"end": 12713,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "350"
										},
										{
											"begin": 12711,
											"end": 12712,
											"name": "DUP4",
											"source": 10
										},
										{
											"begin": 12693,
											"end": 12713,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "168"
										},
										{
											"begin": 12693,
											"end": 12713,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 12693,
											"end": 12713,
											"name": "tag",
											"source": 10,
											"value": "350"
										},
										{
											"begin": 12693,
											"end": 12713,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 12688,
											"end": 12713,
											"name": "SWAP3",
											"source": 10
										},
										{
											"begin": 12688,
											"end": 12713,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 12732,
											"end": 12733,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 12722,
											"end": 12757,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "351"
										},
										{
											"begin": 12722,
											"end": 12757,
											"name": "JUMPI",
											"source": 10
										},
										{
											"begin": 12737,
											"end": 12755,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "352"
										},
										{
											"begin": 12737,
											"end": 12755,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "201"
										},
										{
											"begin": 12737,
											"end": 12755,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 12737,
											"end": 12755,
											"name": "tag",
											"source": 10,
											"value": "352"
										},
										{
											"begin": 12737,
											"end": 12755,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 12722,
											"end": 12757,
											"name": "tag",
											"source": 10,
											"value": "351"
										},
										{
											"begin": 12722,
											"end": 12757,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 12779,
											"end": 12780,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 12776,
											"end": 12777,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 12772,
											"end": 12781,
											"name": "DIV",
											"source": 10
										},
										{
											"begin": 12767,
											"end": 12781,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 12767,
											"end": 12781,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 12602,
											"end": 12787,
											"name": "SWAP3",
											"source": 10
										},
										{
											"begin": 12602,
											"end": 12787,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 12602,
											"end": 12787,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 12602,
											"end": 12787,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 12602,
											"end": 12787,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 12793,
											"end": 12973,
											"name": "tag",
											"source": 10,
											"value": "202"
										},
										{
											"begin": 12793,
											"end": 12973,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 12933,
											"end": 12965,
											"name": "PUSH",
											"source": 10,
											"value": "5374616B696E6720706F6F6C206E6F7420656E64656420796574212121210000"
										},
										{
											"begin": 12929,
											"end": 12930,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 12921,
											"end": 12927,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 12917,
											"end": 12931,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 12910,
											"end": 12966,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": 12793,
											"end": 12973,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 12793,
											"end": 12973,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 12979,
											"end": 13345,
											"name": "tag",
											"source": 10,
											"value": "203"
										},
										{
											"begin": 12979,
											"end": 13345,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 13121,
											"end": 13124,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 13142,
											"end": 13209,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "355"
										},
										{
											"begin": 13206,
											"end": 13208,
											"name": "PUSH",
											"source": 10,
											"value": "1E"
										},
										{
											"begin": 13201,
											"end": 13204,
											"name": "DUP4",
											"source": 10
										},
										{
											"begin": 13142,
											"end": 13209,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "197"
										},
										{
											"begin": 13142,
											"end": 13209,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 13142,
											"end": 13209,
											"name": "tag",
											"source": 10,
											"value": "355"
										},
										{
											"begin": 13142,
											"end": 13209,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 13135,
											"end": 13209,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 13135,
											"end": 13209,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 13218,
											"end": 13311,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "356"
										},
										{
											"begin": 13307,
											"end": 13310,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 13218,
											"end": 13311,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "202"
										},
										{
											"begin": 13218,
											"end": 13311,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 13218,
											"end": 13311,
											"name": "tag",
											"source": 10,
											"value": "356"
										},
										{
											"begin": 13218,
											"end": 13311,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 13336,
											"end": 13338,
											"name": "PUSH",
											"source": 10,
											"value": "20"
										},
										{
											"begin": 13331,
											"end": 13334,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 13327,
											"end": 13339,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 13320,
											"end": 13339,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 13320,
											"end": 13339,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 12979,
											"end": 13345,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 12979,
											"end": 13345,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 12979,
											"end": 13345,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 12979,
											"end": 13345,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 13351,
											"end": 13770,
											"name": "tag",
											"source": 10,
											"value": "112"
										},
										{
											"begin": 13351,
											"end": 13770,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 13517,
											"end": 13521,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 13555,
											"end": 13557,
											"name": "PUSH",
											"source": 10,
											"value": "20"
										},
										{
											"begin": 13544,
											"end": 13553,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 13540,
											"end": 13558,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 13532,
											"end": 13558,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 13532,
											"end": 13558,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 13604,
											"end": 13613,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 13598,
											"end": 13602,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 13594,
											"end": 13614,
											"name": "SUB",
											"source": 10
										},
										{
											"begin": 13590,
											"end": 13591,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 13579,
											"end": 13588,
											"name": "DUP4",
											"source": 10
										},
										{
											"begin": 13575,
											"end": 13592,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 13568,
											"end": 13615,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": 13632,
											"end": 13763,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "358"
										},
										{
											"begin": 13758,
											"end": 13762,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 13632,
											"end": 13763,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "203"
										},
										{
											"begin": 13632,
											"end": 13763,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 13632,
											"end": 13763,
											"name": "tag",
											"source": 10,
											"value": "358"
										},
										{
											"begin": 13632,
											"end": 13763,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 13624,
											"end": 13763,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 13624,
											"end": 13763,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 13351,
											"end": 13770,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 13351,
											"end": 13770,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 13351,
											"end": 13770,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 13351,
											"end": 13770,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 13776,
											"end": 14000,
											"name": "tag",
											"source": 10,
											"value": "204"
										},
										{
											"begin": 13776,
											"end": 14000,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 13916,
											"end": 13950,
											"name": "PUSH",
											"source": 10,
											"value": "596F7520617265206E6F74206F776E6572206F662074686973204E4654207374"
										},
										{
											"begin": 13912,
											"end": 13913,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 13904,
											"end": 13910,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 13900,
											"end": 13914,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 13893,
											"end": 13951,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": 13985,
											"end": 13992,
											"name": "PUSH",
											"source": 10,
											"value": "616B696E67000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 13980,
											"end": 13982,
											"name": "PUSH",
											"source": 10,
											"value": "20"
										},
										{
											"begin": 13972,
											"end": 13978,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 13968,
											"end": 13983,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 13961,
											"end": 13993,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": 13776,
											"end": 14000,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 13776,
											"end": 14000,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 14006,
											"end": 14372,
											"name": "tag",
											"source": 10,
											"value": "205"
										},
										{
											"begin": 14006,
											"end": 14372,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 14148,
											"end": 14151,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 14169,
											"end": 14236,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "361"
										},
										{
											"begin": 14233,
											"end": 14235,
											"name": "PUSH",
											"source": 10,
											"value": "25"
										},
										{
											"begin": 14228,
											"end": 14231,
											"name": "DUP4",
											"source": 10
										},
										{
											"begin": 14169,
											"end": 14236,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "197"
										},
										{
											"begin": 14169,
											"end": 14236,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 14169,
											"end": 14236,
											"name": "tag",
											"source": 10,
											"value": "361"
										},
										{
											"begin": 14169,
											"end": 14236,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 14162,
											"end": 14236,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 14162,
											"end": 14236,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 14245,
											"end": 14338,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "362"
										},
										{
											"begin": 14334,
											"end": 14337,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 14245,
											"end": 14338,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "204"
										},
										{
											"begin": 14245,
											"end": 14338,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 14245,
											"end": 14338,
											"name": "tag",
											"source": 10,
											"value": "362"
										},
										{
											"begin": 14245,
											"end": 14338,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 14363,
											"end": 14365,
											"name": "PUSH",
											"source": 10,
											"value": "40"
										},
										{
											"begin": 14358,
											"end": 14361,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 14354,
											"end": 14366,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 14347,
											"end": 14366,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 14347,
											"end": 14366,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 14006,
											"end": 14372,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 14006,
											"end": 14372,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 14006,
											"end": 14372,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 14006,
											"end": 14372,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 14378,
											"end": 14797,
											"name": "tag",
											"source": 10,
											"value": "115"
										},
										{
											"begin": 14378,
											"end": 14797,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 14544,
											"end": 14548,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 14582,
											"end": 14584,
											"name": "PUSH",
											"source": 10,
											"value": "20"
										},
										{
											"begin": 14571,
											"end": 14580,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 14567,
											"end": 14585,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 14559,
											"end": 14585,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 14559,
											"end": 14585,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 14631,
											"end": 14640,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 14625,
											"end": 14629,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 14621,
											"end": 14641,
											"name": "SUB",
											"source": 10
										},
										{
											"begin": 14617,
											"end": 14618,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 14606,
											"end": 14615,
											"name": "DUP4",
											"source": 10
										},
										{
											"begin": 14602,
											"end": 14619,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 14595,
											"end": 14642,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": 14659,
											"end": 14790,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "364"
										},
										{
											"begin": 14785,
											"end": 14789,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 14659,
											"end": 14790,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "205"
										},
										{
											"begin": 14659,
											"end": 14790,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 14659,
											"end": 14790,
											"name": "tag",
											"source": 10,
											"value": "364"
										},
										{
											"begin": 14659,
											"end": 14790,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 14651,
											"end": 14790,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 14651,
											"end": 14790,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 14378,
											"end": 14797,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 14378,
											"end": 14797,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 14378,
											"end": 14797,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 14378,
											"end": 14797,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 14803,
											"end": 15135,
											"name": "tag",
											"source": 10,
											"value": "124"
										},
										{
											"begin": 14803,
											"end": 15135,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 14924,
											"end": 14928,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 14962,
											"end": 14964,
											"name": "PUSH",
											"source": 10,
											"value": "40"
										},
										{
											"begin": 14951,
											"end": 14960,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 14947,
											"end": 14965,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 14939,
											"end": 14965,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 14939,
											"end": 14965,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 14975,
											"end": 15046,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "366"
										},
										{
											"begin": 15043,
											"end": 15044,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 15032,
											"end": 15041,
											"name": "DUP4",
											"source": 10
										},
										{
											"begin": 15028,
											"end": 15045,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 15019,
											"end": 15025,
											"name": "DUP6",
											"source": 10
										},
										{
											"begin": 14975,
											"end": 15046,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "191"
										},
										{
											"begin": 14975,
											"end": 15046,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 14975,
											"end": 15046,
											"name": "tag",
											"source": 10,
											"value": "366"
										},
										{
											"begin": 14975,
											"end": 15046,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 15056,
											"end": 15128,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "367"
										},
										{
											"begin": 15124,
											"end": 15126,
											"name": "PUSH",
											"source": 10,
											"value": "20"
										},
										{
											"begin": 15113,
											"end": 15122,
											"name": "DUP4",
											"source": 10
										},
										{
											"begin": 15109,
											"end": 15127,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 15100,
											"end": 15106,
											"name": "DUP5",
											"source": 10
										},
										{
											"begin": 15056,
											"end": 15128,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "169"
										},
										{
											"begin": 15056,
											"end": 15128,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 15056,
											"end": 15128,
											"name": "tag",
											"source": 10,
											"value": "367"
										},
										{
											"begin": 15056,
											"end": 15128,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 14803,
											"end": 15135,
											"name": "SWAP4",
											"source": 10
										},
										{
											"begin": 14803,
											"end": 15135,
											"name": "SWAP3",
											"source": 10
										},
										{
											"begin": 14803,
											"end": 15135,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 14803,
											"end": 15135,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 14803,
											"end": 15135,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 14803,
											"end": 15135,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 15141,
											"end": 15257,
											"name": "tag",
											"source": 10,
											"value": "206"
										},
										{
											"begin": 15141,
											"end": 15257,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 15211,
											"end": 15232,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "369"
										},
										{
											"begin": 15226,
											"end": 15231,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 15211,
											"end": 15232,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "194"
										},
										{
											"begin": 15211,
											"end": 15232,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 15211,
											"end": 15232,
											"name": "tag",
											"source": 10,
											"value": "369"
										},
										{
											"begin": 15211,
											"end": 15232,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 15204,
											"end": 15209,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 15201,
											"end": 15233,
											"name": "EQ",
											"source": 10
										},
										{
											"begin": 15191,
											"end": 15251,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "370"
										},
										{
											"begin": 15191,
											"end": 15251,
											"name": "JUMPI",
											"source": 10
										},
										{
											"begin": 15247,
											"end": 15248,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 15244,
											"end": 15245,
											"name": "DUP1",
											"source": 10
										},
										{
											"begin": 15237,
											"end": 15249,
											"name": "REVERT",
											"source": 10
										},
										{
											"begin": 15191,
											"end": 15251,
											"name": "tag",
											"source": 10,
											"value": "370"
										},
										{
											"begin": 15191,
											"end": 15251,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 15141,
											"end": 15257,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 15141,
											"end": 15257,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 15263,
											"end": 15400,
											"name": "tag",
											"source": 10,
											"value": "207"
										},
										{
											"begin": 15263,
											"end": 15400,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 15317,
											"end": 15322,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 15348,
											"end": 15354,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 15342,
											"end": 15355,
											"name": "MLOAD",
											"source": 10
										},
										{
											"begin": 15333,
											"end": 15355,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 15333,
											"end": 15355,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 15364,
											"end": 15394,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "372"
										},
										{
											"begin": 15388,
											"end": 15393,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 15364,
											"end": 15394,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "206"
										},
										{
											"begin": 15364,
											"end": 15394,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 15364,
											"end": 15394,
											"name": "tag",
											"source": 10,
											"value": "372"
										},
										{
											"begin": 15364,
											"end": 15394,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 15263,
											"end": 15400,
											"name": "SWAP3",
											"source": 10
										},
										{
											"begin": 15263,
											"end": 15400,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 15263,
											"end": 15400,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 15263,
											"end": 15400,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 15263,
											"end": 15400,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 15406,
											"end": 15751,
											"name": "tag",
											"source": 10,
											"value": "128"
										},
										{
											"begin": 15406,
											"end": 15751,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 15473,
											"end": 15479,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 15522,
											"end": 15524,
											"name": "PUSH",
											"source": 10,
											"value": "20"
										},
										{
											"begin": 15510,
											"end": 15519,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 15501,
											"end": 15508,
											"name": "DUP5",
											"source": 10
										},
										{
											"begin": 15497,
											"end": 15520,
											"name": "SUB",
											"source": 10
										},
										{
											"begin": 15493,
											"end": 15525,
											"name": "SLT",
											"source": 10
										},
										{
											"begin": 15490,
											"end": 15609,
											"name": "ISZERO",
											"source": 10
										},
										{
											"begin": 15490,
											"end": 15609,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "374"
										},
										{
											"begin": 15490,
											"end": 15609,
											"name": "JUMPI",
											"source": 10
										},
										{
											"begin": 15528,
											"end": 15607,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "375"
										},
										{
											"begin": 15528,
											"end": 15607,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "171"
										},
										{
											"begin": 15528,
											"end": 15607,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 15528,
											"end": 15607,
											"name": "tag",
											"source": 10,
											"value": "375"
										},
										{
											"begin": 15528,
											"end": 15607,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 15490,
											"end": 15609,
											"name": "tag",
											"source": 10,
											"value": "374"
										},
										{
											"begin": 15490,
											"end": 15609,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 15648,
											"end": 15649,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 15673,
											"end": 15734,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "376"
										},
										{
											"begin": 15726,
											"end": 15733,
											"name": "DUP5",
											"source": 10
										},
										{
											"begin": 15717,
											"end": 15723,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 15706,
											"end": 15715,
											"name": "DUP6",
											"source": 10
										},
										{
											"begin": 15702,
											"end": 15724,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 15673,
											"end": 15734,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "207"
										},
										{
											"begin": 15673,
											"end": 15734,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 15673,
											"end": 15734,
											"name": "tag",
											"source": 10,
											"value": "376"
										},
										{
											"begin": 15673,
											"end": 15734,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 15663,
											"end": 15734,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 15663,
											"end": 15734,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 15619,
											"end": 15744,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 15406,
											"end": 15751,
											"name": "SWAP3",
											"source": 10
										},
										{
											"begin": 15406,
											"end": 15751,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 15406,
											"end": 15751,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 15406,
											"end": 15751,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 15406,
											"end": 15751,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 15757,
											"end": 16310,
											"name": "tag",
											"source": 10,
											"value": "130"
										},
										{
											"begin": 15757,
											"end": 16310,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 15934,
											"end": 15938,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 15972,
											"end": 15975,
											"name": "PUSH",
											"source": 10,
											"value": "80"
										},
										{
											"begin": 15961,
											"end": 15970,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 15957,
											"end": 15976,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 15949,
											"end": 15976,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 15949,
											"end": 15976,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 15986,
											"end": 16057,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "378"
										},
										{
											"begin": 16054,
											"end": 16055,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 16043,
											"end": 16052,
											"name": "DUP4",
											"source": 10
										},
										{
											"begin": 16039,
											"end": 16056,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 16030,
											"end": 16036,
											"name": "DUP8",
											"source": 10
										},
										{
											"begin": 15986,
											"end": 16057,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "169"
										},
										{
											"begin": 15986,
											"end": 16057,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 15986,
											"end": 16057,
											"name": "tag",
											"source": 10,
											"value": "378"
										},
										{
											"begin": 15986,
											"end": 16057,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 16067,
											"end": 16139,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "379"
										},
										{
											"begin": 16135,
											"end": 16137,
											"name": "PUSH",
											"source": 10,
											"value": "20"
										},
										{
											"begin": 16124,
											"end": 16133,
											"name": "DUP4",
											"source": 10
										},
										{
											"begin": 16120,
											"end": 16138,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 16111,
											"end": 16117,
											"name": "DUP7",
											"source": 10
										},
										{
											"begin": 16067,
											"end": 16139,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "169"
										},
										{
											"begin": 16067,
											"end": 16139,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 16067,
											"end": 16139,
											"name": "tag",
											"source": 10,
											"value": "379"
										},
										{
											"begin": 16067,
											"end": 16139,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 16149,
											"end": 16221,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "380"
										},
										{
											"begin": 16217,
											"end": 16219,
											"name": "PUSH",
											"source": 10,
											"value": "40"
										},
										{
											"begin": 16206,
											"end": 16215,
											"name": "DUP4",
											"source": 10
										},
										{
											"begin": 16202,
											"end": 16220,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 16193,
											"end": 16199,
											"name": "DUP6",
											"source": 10
										},
										{
											"begin": 16149,
											"end": 16221,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "169"
										},
										{
											"begin": 16149,
											"end": 16221,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 16149,
											"end": 16221,
											"name": "tag",
											"source": 10,
											"value": "380"
										},
										{
											"begin": 16149,
											"end": 16221,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 16231,
											"end": 16303,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "381"
										},
										{
											"begin": 16299,
											"end": 16301,
											"name": "PUSH",
											"source": 10,
											"value": "60"
										},
										{
											"begin": 16288,
											"end": 16297,
											"name": "DUP4",
											"source": 10
										},
										{
											"begin": 16284,
											"end": 16302,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 16275,
											"end": 16281,
											"name": "DUP5",
											"source": 10
										},
										{
											"begin": 16231,
											"end": 16303,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "169"
										},
										{
											"begin": 16231,
											"end": 16303,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 16231,
											"end": 16303,
											"name": "tag",
											"source": 10,
											"value": "381"
										},
										{
											"begin": 16231,
											"end": 16303,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 15757,
											"end": 16310,
											"name": "SWAP6",
											"source": 10
										},
										{
											"begin": 15757,
											"end": 16310,
											"name": "SWAP5",
											"source": 10
										},
										{
											"begin": 15757,
											"end": 16310,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 15757,
											"end": 16310,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 15757,
											"end": 16310,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 15757,
											"end": 16310,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 15757,
											"end": 16310,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 15757,
											"end": 16310,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 16316,
											"end": 16541,
											"name": "tag",
											"source": 10,
											"value": "208"
										},
										{
											"begin": 16316,
											"end": 16541,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 16456,
											"end": 16490,
											"name": "PUSH",
											"source": 10,
											"value": "4F776E61626C653A206E6577206F776E657220697320746865207A65726F2061"
										},
										{
											"begin": 16452,
											"end": 16453,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 16444,
											"end": 16450,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 16440,
											"end": 16454,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 16433,
											"end": 16491,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": 16525,
											"end": 16533,
											"name": "PUSH",
											"source": 10,
											"value": "6464726573730000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 16520,
											"end": 16522,
											"name": "PUSH",
											"source": 10,
											"value": "20"
										},
										{
											"begin": 16512,
											"end": 16518,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 16508,
											"end": 16523,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 16501,
											"end": 16534,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": 16316,
											"end": 16541,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 16316,
											"end": 16541,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 16547,
											"end": 16913,
											"name": "tag",
											"source": 10,
											"value": "209"
										},
										{
											"begin": 16547,
											"end": 16913,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 16689,
											"end": 16692,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 16710,
											"end": 16777,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "384"
										},
										{
											"begin": 16774,
											"end": 16776,
											"name": "PUSH",
											"source": 10,
											"value": "26"
										},
										{
											"begin": 16769,
											"end": 16772,
											"name": "DUP4",
											"source": 10
										},
										{
											"begin": 16710,
											"end": 16777,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "197"
										},
										{
											"begin": 16710,
											"end": 16777,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 16710,
											"end": 16777,
											"name": "tag",
											"source": 10,
											"value": "384"
										},
										{
											"begin": 16710,
											"end": 16777,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 16703,
											"end": 16777,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 16703,
											"end": 16777,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 16786,
											"end": 16879,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "385"
										},
										{
											"begin": 16875,
											"end": 16878,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 16786,
											"end": 16879,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "208"
										},
										{
											"begin": 16786,
											"end": 16879,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 16786,
											"end": 16879,
											"name": "tag",
											"source": 10,
											"value": "385"
										},
										{
											"begin": 16786,
											"end": 16879,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 16904,
											"end": 16906,
											"name": "PUSH",
											"source": 10,
											"value": "40"
										},
										{
											"begin": 16899,
											"end": 16902,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 16895,
											"end": 16907,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 16888,
											"end": 16907,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 16888,
											"end": 16907,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 16547,
											"end": 16913,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 16547,
											"end": 16913,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 16547,
											"end": 16913,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 16547,
											"end": 16913,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 16919,
											"end": 17338,
											"name": "tag",
											"source": 10,
											"value": "140"
										},
										{
											"begin": 16919,
											"end": 17338,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 17085,
											"end": 17089,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 17123,
											"end": 17125,
											"name": "PUSH",
											"source": 10,
											"value": "20"
										},
										{
											"begin": 17112,
											"end": 17121,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 17108,
											"end": 17126,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 17100,
											"end": 17126,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 17100,
											"end": 17126,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 17172,
											"end": 17181,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 17166,
											"end": 17170,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 17162,
											"end": 17182,
											"name": "SUB",
											"source": 10
										},
										{
											"begin": 17158,
											"end": 17159,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 17147,
											"end": 17156,
											"name": "DUP4",
											"source": 10
										},
										{
											"begin": 17143,
											"end": 17160,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 17136,
											"end": 17183,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": 17200,
											"end": 17331,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "387"
										},
										{
											"begin": 17326,
											"end": 17330,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 17200,
											"end": 17331,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "209"
										},
										{
											"begin": 17200,
											"end": 17331,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 17200,
											"end": 17331,
											"name": "tag",
											"source": 10,
											"value": "387"
										},
										{
											"begin": 17200,
											"end": 17331,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 17192,
											"end": 17331,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 17192,
											"end": 17331,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 16919,
											"end": 17338,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 16919,
											"end": 17338,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 16919,
											"end": 17338,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 16919,
											"end": 17338,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 17344,
											"end": 17524,
											"name": "tag",
											"source": 10,
											"value": "148"
										},
										{
											"begin": 17344,
											"end": 17524,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 17392,
											"end": 17469,
											"name": "PUSH",
											"source": 10,
											"value": "4E487B7100000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 17389,
											"end": 17390,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 17382,
											"end": 17470,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": 17489,
											"end": 17493,
											"name": "PUSH",
											"source": 10,
											"value": "32"
										},
										{
											"begin": 17486,
											"end": 17487,
											"name": "PUSH",
											"source": 10,
											"value": "4"
										},
										{
											"begin": 17479,
											"end": 17494,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": 17513,
											"end": 17517,
											"name": "PUSH",
											"source": 10,
											"value": "24"
										},
										{
											"begin": 17510,
											"end": 17511,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 17503,
											"end": 17518,
											"name": "REVERT",
											"source": 10
										},
										{
											"begin": 17530,
											"end": 17712,
											"name": "tag",
											"source": 10,
											"value": "210"
										},
										{
											"begin": 17530,
											"end": 17712,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 17670,
											"end": 17704,
											"name": "PUSH",
											"source": 10,
											"value": "4F776E61626C653A2063616C6C6572206973206E6F7420746865206F776E6572"
										},
										{
											"begin": 17666,
											"end": 17667,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 17658,
											"end": 17664,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 17654,
											"end": 17668,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 17647,
											"end": 17705,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": 17530,
											"end": 17712,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 17530,
											"end": 17712,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 17718,
											"end": 18084,
											"name": "tag",
											"source": 10,
											"value": "211"
										},
										{
											"begin": 17718,
											"end": 18084,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 17860,
											"end": 17863,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 17881,
											"end": 17948,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "391"
										},
										{
											"begin": 17945,
											"end": 17947,
											"name": "PUSH",
											"source": 10,
											"value": "20"
										},
										{
											"begin": 17940,
											"end": 17943,
											"name": "DUP4",
											"source": 10
										},
										{
											"begin": 17881,
											"end": 17948,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "197"
										},
										{
											"begin": 17881,
											"end": 17948,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 17881,
											"end": 17948,
											"name": "tag",
											"source": 10,
											"value": "391"
										},
										{
											"begin": 17881,
											"end": 17948,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 17874,
											"end": 17948,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 17874,
											"end": 17948,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 17957,
											"end": 18050,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "392"
										},
										{
											"begin": 18046,
											"end": 18049,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 17957,
											"end": 18050,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "210"
										},
										{
											"begin": 17957,
											"end": 18050,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 17957,
											"end": 18050,
											"name": "tag",
											"source": 10,
											"value": "392"
										},
										{
											"begin": 17957,
											"end": 18050,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 18075,
											"end": 18077,
											"name": "PUSH",
											"source": 10,
											"value": "20"
										},
										{
											"begin": 18070,
											"end": 18073,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 18066,
											"end": 18078,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 18059,
											"end": 18078,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 18059,
											"end": 18078,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 17718,
											"end": 18084,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 17718,
											"end": 18084,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 17718,
											"end": 18084,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 17718,
											"end": 18084,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 18090,
											"end": 18509,
											"name": "tag",
											"source": 10,
											"value": "158"
										},
										{
											"begin": 18090,
											"end": 18509,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 18256,
											"end": 18260,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 18294,
											"end": 18296,
											"name": "PUSH",
											"source": 10,
											"value": "20"
										},
										{
											"begin": 18283,
											"end": 18292,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 18279,
											"end": 18297,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 18271,
											"end": 18297,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 18271,
											"end": 18297,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 18343,
											"end": 18352,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 18337,
											"end": 18341,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 18333,
											"end": 18353,
											"name": "SUB",
											"source": 10
										},
										{
											"begin": 18329,
											"end": 18330,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 18318,
											"end": 18327,
											"name": "DUP4",
											"source": 10
										},
										{
											"begin": 18314,
											"end": 18331,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 18307,
											"end": 18354,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": 18371,
											"end": 18502,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "394"
										},
										{
											"begin": 18497,
											"end": 18501,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 18371,
											"end": 18502,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "211"
										},
										{
											"begin": 18371,
											"end": 18502,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 18371,
											"end": 18502,
											"name": "tag",
											"source": 10,
											"value": "394"
										},
										{
											"begin": 18371,
											"end": 18502,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 18363,
											"end": 18502,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 18363,
											"end": 18502,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 18090,
											"end": 18509,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 18090,
											"end": 18509,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 18090,
											"end": 18509,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 18090,
											"end": 18509,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 10
										}
									]
								}
							},
							"sourceList": [
								"@openzeppelin/contracts/access/Ownable.sol",
								"@openzeppelin/contracts/security/ReentrancyGuard.sol",
								"@openzeppelin/contracts/token/ERC20/IERC20.sol",
								"@openzeppelin/contracts/token/ERC20/extensions/draft-IERC20Permit.sol",
								"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol",
								"@openzeppelin/contracts/token/ERC721/IERC721.sol",
								"@openzeppelin/contracts/utils/Address.sol",
								"@openzeppelin/contracts/utils/Context.sol",
								"@openzeppelin/contracts/utils/introspection/IERC165.sol",
								"contracts/NFTStaking.sol",
								"#utility.yul"
							]
						},
						"methodIdentifiers": {
							"NFTCollection()": "78b2e3a9",
							"checkIfAlreadyUnstaked(uint256,address)": "fbaca086",
							"index()": "2986c0e5",
							"owner()": "8da5cb5b",
							"renounceOwnership()": "715018a6",
							"rewardToken()": "f7c618c1",
							"stakeNFT(uint256,uint256)": "51cecc80",
							"stakes(uint256)": "d5a44f86",
							"staking_details(address,uint256)": "3f106929",
							"transferOwnership(address)": "f2fde38b",
							"unStakeNFT(uint256,uint256,uint256)": "78dba594",
							"unstaking_details(address,uint256)": "3af416d1",
							"userStakingList(address)": "79e5f7d7"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.18+commit.87f61d96\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_RewardToken\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"_NFTCollection\",\"type\":\"address\"}],\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"previousOwner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"OwnershipTransferred\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"id\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"pool\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"time\",\"type\":\"uint256\"}],\"name\":\"Stake\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"id\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"pool\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"time\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"rewardTokens\",\"type\":\"uint256\"}],\"name\":\"UnStake\",\"type\":\"event\"},{\"inputs\":[],\"name\":\"NFTCollection\",\"outputs\":[{\"internalType\":\"contract IERC721\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"_tempIndex\",\"type\":\"uint256\"},{\"internalType\":\"address\",\"name\":\"_user\",\"type\":\"address\"}],\"name\":\"checkIfAlreadyUnstaked\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"index\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"owner\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"renounceOwnership\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"rewardToken\",\"outputs\":[{\"internalType\":\"contract IERC20\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"_tokenId\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"_pool\",\"type\":\"uint256\"}],\"name\":\"stakeNFT\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"name\":\"stakes\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"index\",\"type\":\"uint256\"},{\"internalType\":\"address\",\"name\":\"user\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"pool\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"timestamp\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"name\":\"staking_details\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"transferOwnership\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"_index\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"_tokenId\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"_pool\",\"type\":\"uint256\"}],\"name\":\"unStakeNFT\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"name\":\"unstaking_details\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_user\",\"type\":\"address\"}],\"name\":\"userStakingList\",\"outputs\":[{\"internalType\":\"uint256[]\",\"name\":\"\",\"type\":\"uint256[]\"}],\"stateMutability\":\"view\",\"type\":\"function\"}],\"devdoc\":{\"kind\":\"dev\",\"methods\":{\"checkIfAlreadyUnstaked(uint256,address)\":{\"params\":{\"_tempIndex\":\"of the nft\",\"_user\":\"of the user\"}},\"owner()\":{\"details\":\"Returns the address of the current owner.\"},\"renounceOwnership()\":{\"details\":\"Leaves the contract without owner. It will not be possible to call `onlyOwner` functions anymore. Can only be called by the current owner. NOTE: Renouncing ownership will leave the contract without an owner, thereby removing any functionality that is only available to the owner.\"},\"stakeNFT(uint256,uint256)\":{\"params\":{\"_pool\":\"Pool of NFT\",\"_tokenId\":\"Token Id of NFT to stake\"}},\"transferOwnership(address)\":{\"details\":\"Transfers ownership of the contract to a new account (`newOwner`). Can only be called by the current owner.\"},\"unStakeNFT(uint256,uint256,uint256)\":{\"params\":{\"_pool\":\"Pool of NFT\",\"_tokenId\":\"Token Id of NFT to stake\"}},\"userStakingList(address)\":{\"params\":{\"_user\":\"Address of the user\"}}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{\"checkIfAlreadyUnstaked(uint256,address)\":{\"notice\":\"Check if nft index is already unstaked\"},\"stakeNFT(uint256,uint256)\":{\"notice\":\"Create a new staking for a specific user\"},\"unStakeNFT(uint256,uint256,uint256)\":{\"notice\":\"Unstake the NFT and rewards user if pool is completed\"},\"userStakingList(address)\":{\"notice\":\"Get user's staking list\"}},\"version\":1}},\"settings\":{\"compilationTarget\":{\"contracts/NFTStaking.sol\":\"MoonRabbitsStaking\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/access/Ownable.sol\":{\"keccak256\":\"0xa94b34880e3c1b0b931662cb1c09e5dfa6662f31cba80e07c5ee71cd135c9673\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://40fb1b5102468f783961d0af743f91b9980cf66b50d1d12009f6bb1869cea4d2\",\"dweb:/ipfs/QmYqEbJML4jB1GHbzD4cUZDtJg5wVwNm3vDJq1GbyDus8y\"]},\"@openzeppelin/contracts/security/ReentrancyGuard.sol\":{\"keccak256\":\"0x190dd6f8d592b7e4e930feb7f4313aeb8e1c4ad3154c27ce1cf6a512fc30d8cc\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://4ce8dfb62d0c4fa260d6eec8f1cd47f5f2a044e11bde5b31d18072fa6e7d9010\",\"dweb:/ipfs/QmTyFztU3tLEcEDnqqiaW4UJetqsU77LXc6pjc9oTXCK5u\"]},\"@openzeppelin/contracts/token/ERC20/IERC20.sol\":{\"keccak256\":\"0x9750c6b834f7b43000631af5cc30001c5f547b3ceb3635488f140f60e897ea6b\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://5a7d5b1ef5d8d5889ad2ed89d8619c09383b80b72ab226e0fe7bde1636481e34\",\"dweb:/ipfs/QmebXWgtEfumQGBdVeM6c71McLixYXQP5Bk6kKXuoY4Bmr\"]},\"@openzeppelin/contracts/token/ERC20/extensions/draft-IERC20Permit.sol\":{\"keccak256\":\"0xf41ca991f30855bf80ffd11e9347856a517b977f0a6c2d52e6421a99b7840329\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://b2717fd2bdac99daa960a6de500754ea1b932093c946388c381da48658234b95\",\"dweb:/ipfs/QmP6QVMn6UeA3ByahyJbYQr5M6coHKBKsf3ySZSfbyA8R7\"]},\"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":{\"keccak256\":\"0x9b72f93be69ca894d8492c244259615c4a742afc8d63720dbc8bb81087d9b238\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://f5a7b96e511be78d5cdf635c784e6ab8cdd38625bb8cafb8a80914a1c89cf0f6\",\"dweb:/ipfs/QmVzTCwJxQAkjRQHboT5QrvsVJGWQHgfEjeTbvyxoKBrds\"]},\"@openzeppelin/contracts/token/ERC721/IERC721.sol\":{\"keccak256\":\"0xab28a56179c1db258c9bf5235b382698cb650debecb51b23d12be9e241374b68\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://daae589a9d6fa7e55f99f86c0a16796ca490f243fb3693632c3711c0646c1d56\",\"dweb:/ipfs/QmR3zpd7wNw3rcUdekwiv6FYHJqksuTCXLVioTxu6Fbxk3\"]},\"@openzeppelin/contracts/utils/Address.sol\":{\"keccak256\":\"0xf96f969e24029d43d0df89e59d365f277021dac62b48e1c1e3ebe0acdd7f1ca1\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://ec772b45a624be516f1c81970caa8a2e144301e9d0921cbc1a2789fef39a1269\",\"dweb:/ipfs/QmNyjwxCrGhQMyzLD93oUobJXVe9ceJvRvfXwbEtuxPiEj\"]},\"@openzeppelin/contracts/utils/Context.sol\":{\"keccak256\":\"0xe2e337e6dde9ef6b680e07338c493ebea1b5fd09b43424112868e9cc1706bca7\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://6df0ddf21ce9f58271bdfaa85cde98b200ef242a05a3f85c2bc10a8294800a92\",\"dweb:/ipfs/QmRK2Y5Yc6BK7tGKkgsgn3aJEQGi5aakeSPZvS65PV8Xp3\"]},\"@openzeppelin/contracts/utils/introspection/IERC165.sol\":{\"keccak256\":\"0x447a5f3ddc18419d41ff92b3773fb86471b1db25773e07f877f548918a185bf1\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://be161e54f24e5c6fae81a12db1a8ae87bc5ae1b0ddc805d82a1440a68455088f\",\"dweb:/ipfs/QmP7C3CHdY9urF4dEMb9wmsp1wMxHF6nhA2yQE5SKiPAdy\"]},\"contracts/NFTStaking.sol\":{\"keccak256\":\"0x79ef65ef98b755466d13942a3ef243cf333e41fa6cb5e4b2ab274b050bc712c4\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://5f972e736ff1a0252a384c640763aec89602a70806539904ab04051ebbcc0a0b\",\"dweb:/ipfs/QmV39wk9VHt4K8v7qKftVA1LkEf1vFnDojCALiKmUtQByj\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [
							{
								"astId": 7,
								"contract": "contracts/NFTStaking.sol:MoonRabbitsStaking",
								"label": "_owner",
								"offset": 0,
								"slot": "0",
								"type": "t_address"
							},
							{
								"astId": 123,
								"contract": "contracts/NFTStaking.sol:MoonRabbitsStaking",
								"label": "_status",
								"offset": 0,
								"slot": "1",
								"type": "t_uint256"
							},
							{
								"astId": 1055,
								"contract": "contracts/NFTStaking.sol:MoonRabbitsStaking",
								"label": "NFTCollection",
								"offset": 0,
								"slot": "2",
								"type": "t_contract(IERC721)677"
							},
							{
								"astId": 1058,
								"contract": "contracts/NFTStaking.sol:MoonRabbitsStaking",
								"label": "rewardToken",
								"offset": 0,
								"slot": "3",
								"type": "t_contract(IERC20)244"
							},
							{
								"astId": 1061,
								"contract": "contracts/NFTStaking.sol:MoonRabbitsStaking",
								"label": "index",
								"offset": 0,
								"slot": "4",
								"type": "t_uint256"
							},
							{
								"astId": 1067,
								"contract": "contracts/NFTStaking.sol:MoonRabbitsStaking",
								"label": "totalTokens",
								"offset": 0,
								"slot": "5",
								"type": "t_uint256"
							},
							{
								"astId": 1083,
								"contract": "contracts/NFTStaking.sol:MoonRabbitsStaking",
								"label": "stakes",
								"offset": 0,
								"slot": "6",
								"type": "t_mapping(t_uint256,t_struct(Staker)1078_storage)"
							},
							{
								"astId": 1088,
								"contract": "contracts/NFTStaking.sol:MoonRabbitsStaking",
								"label": "staking_details",
								"offset": 0,
								"slot": "7",
								"type": "t_mapping(t_address,t_array(t_uint256)dyn_storage)"
							},
							{
								"astId": 1093,
								"contract": "contracts/NFTStaking.sol:MoonRabbitsStaking",
								"label": "unstaking_details",
								"offset": 0,
								"slot": "8",
								"type": "t_mapping(t_address,t_array(t_uint256)dyn_storage)"
							}
						],
						"types": {
							"t_address": {
								"encoding": "inplace",
								"label": "address",
								"numberOfBytes": "20"
							},
							"t_array(t_uint256)dyn_storage": {
								"base": "t_uint256",
								"encoding": "dynamic_array",
								"label": "uint256[]",
								"numberOfBytes": "32"
							},
							"t_contract(IERC20)244": {
								"encoding": "inplace",
								"label": "contract IERC20",
								"numberOfBytes": "20"
							},
							"t_contract(IERC721)677": {
								"encoding": "inplace",
								"label": "contract IERC721",
								"numberOfBytes": "20"
							},
							"t_mapping(t_address,t_array(t_uint256)dyn_storage)": {
								"encoding": "mapping",
								"key": "t_address",
								"label": "mapping(address => uint256[])",
								"numberOfBytes": "32",
								"value": "t_array(t_uint256)dyn_storage"
							},
							"t_mapping(t_uint256,t_struct(Staker)1078_storage)": {
								"encoding": "mapping",
								"key": "t_uint256",
								"label": "mapping(uint256 => struct MoonRabbitsStaking.Staker)",
								"numberOfBytes": "32",
								"value": "t_struct(Staker)1078_storage"
							},
							"t_struct(Staker)1078_storage": {
								"encoding": "inplace",
								"label": "struct MoonRabbitsStaking.Staker",
								"members": [
									{
										"astId": 1069,
										"contract": "contracts/NFTStaking.sol:MoonRabbitsStaking",
										"label": "index",
										"offset": 0,
										"slot": "0",
										"type": "t_uint256"
									},
									{
										"astId": 1071,
										"contract": "contracts/NFTStaking.sol:MoonRabbitsStaking",
										"label": "user",
										"offset": 0,
										"slot": "1",
										"type": "t_address"
									},
									{
										"astId": 1073,
										"contract": "contracts/NFTStaking.sol:MoonRabbitsStaking",
										"label": "tokenId",
										"offset": 0,
										"slot": "2",
										"type": "t_uint256"
									},
									{
										"astId": 1075,
										"contract": "contracts/NFTStaking.sol:MoonRabbitsStaking",
										"label": "pool",
										"offset": 0,
										"slot": "3",
										"type": "t_uint256"
									},
									{
										"astId": 1077,
										"contract": "contracts/NFTStaking.sol:MoonRabbitsStaking",
										"label": "timestamp",
										"offset": 0,
										"slot": "4",
										"type": "t_uint256"
									}
								],
								"numberOfBytes": "160"
							},
							"t_uint256": {
								"encoding": "inplace",
								"label": "uint256",
								"numberOfBytes": "32"
							}
						}
					},
					"userdoc": {
						"kind": "user",
						"methods": {
							"checkIfAlreadyUnstaked(uint256,address)": {
								"notice": "Check if nft index is already unstaked"
							},
							"stakeNFT(uint256,uint256)": {
								"notice": "Create a new staking for a specific user"
							},
							"unStakeNFT(uint256,uint256,uint256)": {
								"notice": "Unstake the NFT and rewards user if pool is completed"
							},
							"userStakingList(address)": {
								"notice": "Get user's staking list"
							}
						},
						"version": 1
					}
				}
			}
		},
		"sources": {
			"@openzeppelin/contracts/access/Ownable.sol": {
				"ast": {
					"absolutePath": "@openzeppelin/contracts/access/Ownable.sol",
					"exportedSymbols": {
						"Context": [
							1029
						],
						"Ownable": [
							112
						]
					},
					"id": 113,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 1,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".0"
							],
							"nodeType": "PragmaDirective",
							"src": "102:23:0"
						},
						{
							"absolutePath": "@openzeppelin/contracts/utils/Context.sol",
							"file": "../utils/Context.sol",
							"id": 2,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 113,
							"sourceUnit": 1030,
							"src": "127:30:0",
							"symbolAliases": [],
							"unitAlias": ""
						},
						{
							"abstract": true,
							"baseContracts": [
								{
									"baseName": {
										"id": 4,
										"name": "Context",
										"nameLocations": [
											"683:7:0"
										],
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 1029,
										"src": "683:7:0"
									},
									"id": 5,
									"nodeType": "InheritanceSpecifier",
									"src": "683:7:0"
								}
							],
							"canonicalName": "Ownable",
							"contractDependencies": [],
							"contractKind": "contract",
							"documentation": {
								"id": 3,
								"nodeType": "StructuredDocumentation",
								"src": "159:494:0",
								"text": " @dev Contract module which provides a basic access control mechanism, where\n there is an account (an owner) that can be granted exclusive access to\n specific functions.\n By default, the owner account will be the one that deploys the contract. This\n can later be changed with {transferOwnership}.\n This module is used through inheritance. It will make available the modifier\n `onlyOwner`, which can be applied to your functions to restrict their use to\n the owner."
							},
							"fullyImplemented": true,
							"id": 112,
							"linearizedBaseContracts": [
								112,
								1029
							],
							"name": "Ownable",
							"nameLocation": "672:7:0",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"constant": false,
									"id": 7,
									"mutability": "mutable",
									"name": "_owner",
									"nameLocation": "713:6:0",
									"nodeType": "VariableDeclaration",
									"scope": 112,
									"src": "697:22:0",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_address",
										"typeString": "address"
									},
									"typeName": {
										"id": 6,
										"name": "address",
										"nodeType": "ElementaryTypeName",
										"src": "697:7:0",
										"stateMutability": "nonpayable",
										"typeDescriptions": {
											"typeIdentifier": "t_address",
											"typeString": "address"
										}
									},
									"visibility": "private"
								},
								{
									"anonymous": false,
									"eventSelector": "8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e0",
									"id": 13,
									"name": "OwnershipTransferred",
									"nameLocation": "732:20:0",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 12,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 9,
												"indexed": true,
												"mutability": "mutable",
												"name": "previousOwner",
												"nameLocation": "769:13:0",
												"nodeType": "VariableDeclaration",
												"scope": 13,
												"src": "753:29:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 8,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "753:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 11,
												"indexed": true,
												"mutability": "mutable",
												"name": "newOwner",
												"nameLocation": "800:8:0",
												"nodeType": "VariableDeclaration",
												"scope": 13,
												"src": "784:24:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 10,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "784:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "752:57:0"
									},
									"src": "726:84:0"
								},
								{
									"body": {
										"id": 22,
										"nodeType": "Block",
										"src": "926:49:0",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"arguments": [],
															"expression": {
																"argumentTypes": [],
																"id": 18,
																"name": "_msgSender",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1019,
																"src": "955:10:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
																	"typeString": "function () view returns (address)"
																}
															},
															"id": 19,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "955:12:0",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"id": 17,
														"name": "_transferOwnership",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 111,
														"src": "936:18:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$returns$__$",
															"typeString": "function (address)"
														}
													},
													"id": 20,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "936:32:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 21,
												"nodeType": "ExpressionStatement",
												"src": "936:32:0"
											}
										]
									},
									"documentation": {
										"id": 14,
										"nodeType": "StructuredDocumentation",
										"src": "816:91:0",
										"text": " @dev Initializes the contract setting the deployer as the initial owner."
									},
									"id": 23,
									"implemented": true,
									"kind": "constructor",
									"modifiers": [],
									"name": "",
									"nameLocation": "-1:-1:-1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 15,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "923:2:0"
									},
									"returnParameters": {
										"id": 16,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "926:0:0"
									},
									"scope": 112,
									"src": "912:63:0",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 30,
										"nodeType": "Block",
										"src": "1084:41:0",
										"statements": [
											{
												"expression": {
													"arguments": [],
													"expression": {
														"argumentTypes": [],
														"id": 26,
														"name": "_checkOwner",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 54,
														"src": "1094:11:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_view$__$returns$__$",
															"typeString": "function () view"
														}
													},
													"id": 27,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1094:13:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 28,
												"nodeType": "ExpressionStatement",
												"src": "1094:13:0"
											},
											{
												"id": 29,
												"nodeType": "PlaceholderStatement",
												"src": "1117:1:0"
											}
										]
									},
									"documentation": {
										"id": 24,
										"nodeType": "StructuredDocumentation",
										"src": "981:77:0",
										"text": " @dev Throws if called by any account other than the owner."
									},
									"id": 31,
									"name": "onlyOwner",
									"nameLocation": "1072:9:0",
									"nodeType": "ModifierDefinition",
									"parameters": {
										"id": 25,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1081:2:0"
									},
									"src": "1063:62:0",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 39,
										"nodeType": "Block",
										"src": "1256:30:0",
										"statements": [
											{
												"expression": {
													"id": 37,
													"name": "_owner",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 7,
													"src": "1273:6:0",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"functionReturnParameters": 36,
												"id": 38,
												"nodeType": "Return",
												"src": "1266:13:0"
											}
										]
									},
									"documentation": {
										"id": 32,
										"nodeType": "StructuredDocumentation",
										"src": "1131:65:0",
										"text": " @dev Returns the address of the current owner."
									},
									"functionSelector": "8da5cb5b",
									"id": 40,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "owner",
									"nameLocation": "1210:5:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 33,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1215:2:0"
									},
									"returnParameters": {
										"id": 36,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 35,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 40,
												"src": "1247:7:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 34,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1247:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1246:9:0"
									},
									"scope": 112,
									"src": "1201:85:0",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "public"
								},
								{
									"body": {
										"id": 53,
										"nodeType": "Block",
										"src": "1404:85:0",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															"id": 49,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"arguments": [],
																"expression": {
																	"argumentTypes": [],
																	"id": 45,
																	"name": "owner",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 40,
																	"src": "1422:5:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
																		"typeString": "function () view returns (address)"
																	}
																},
																"id": 46,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "1422:7:0",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "==",
															"rightExpression": {
																"arguments": [],
																"expression": {
																	"argumentTypes": [],
																	"id": 47,
																	"name": "_msgSender",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1019,
																	"src": "1433:10:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
																		"typeString": "function () view returns (address)"
																	}
																},
																"id": 48,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "1433:12:0",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"src": "1422:23:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e6572",
															"id": 50,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "1447:34:0",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_9924ebdf1add33d25d4ef888e16131f0a5687b0580a36c21b5c301a6c462effe",
																"typeString": "literal_string \"Ownable: caller is not the owner\""
															},
															"value": "Ownable: caller is not the owner"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_9924ebdf1add33d25d4ef888e16131f0a5687b0580a36c21b5c301a6c462effe",
																"typeString": "literal_string \"Ownable: caller is not the owner\""
															}
														],
														"id": 44,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "1414:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 51,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1414:68:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 52,
												"nodeType": "ExpressionStatement",
												"src": "1414:68:0"
											}
										]
									},
									"documentation": {
										"id": 41,
										"nodeType": "StructuredDocumentation",
										"src": "1292:62:0",
										"text": " @dev Throws if the sender is not the owner."
									},
									"id": 54,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_checkOwner",
									"nameLocation": "1368:11:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 42,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1379:2:0"
									},
									"returnParameters": {
										"id": 43,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1404:0:0"
									},
									"scope": 112,
									"src": "1359:130:0",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 67,
										"nodeType": "Block",
										"src": "1885:47:0",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"arguments": [
																{
																	"hexValue": "30",
																	"id": 63,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "1922:1:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	},
																	"value": "0"
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	}
																],
																"id": 62,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "1914:7:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_address_$",
																	"typeString": "type(address)"
																},
																"typeName": {
																	"id": 61,
																	"name": "address",
																	"nodeType": "ElementaryTypeName",
																	"src": "1914:7:0",
																	"typeDescriptions": {}
																}
															},
															"id": 64,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "typeConversion",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "1914:10:0",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"id": 60,
														"name": "_transferOwnership",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 111,
														"src": "1895:18:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$returns$__$",
															"typeString": "function (address)"
														}
													},
													"id": 65,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1895:30:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 66,
												"nodeType": "ExpressionStatement",
												"src": "1895:30:0"
											}
										]
									},
									"documentation": {
										"id": 55,
										"nodeType": "StructuredDocumentation",
										"src": "1495:331:0",
										"text": " @dev Leaves the contract without owner. It will not be possible to call\n `onlyOwner` functions anymore. Can only be called by the current owner.\n NOTE: Renouncing ownership will leave the contract without an owner,\n thereby removing any functionality that is only available to the owner."
									},
									"functionSelector": "715018a6",
									"id": 68,
									"implemented": true,
									"kind": "function",
									"modifiers": [
										{
											"id": 58,
											"kind": "modifierInvocation",
											"modifierName": {
												"id": 57,
												"name": "onlyOwner",
												"nameLocations": [
													"1875:9:0"
												],
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 31,
												"src": "1875:9:0"
											},
											"nodeType": "ModifierInvocation",
											"src": "1875:9:0"
										}
									],
									"name": "renounceOwnership",
									"nameLocation": "1840:17:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 56,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1857:2:0"
									},
									"returnParameters": {
										"id": 59,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1885:0:0"
									},
									"scope": 112,
									"src": "1831:101:0",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "public"
								},
								{
									"body": {
										"id": 90,
										"nodeType": "Block",
										"src": "2151:128:0",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															"id": 82,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 77,
																"name": "newOwner",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 71,
																"src": "2169:8:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "!=",
															"rightExpression": {
																"arguments": [
																	{
																		"hexValue": "30",
																		"id": 80,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "2189:1:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		},
																		"value": "0"
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		}
																	],
																	"id": 79,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"lValueRequested": false,
																	"nodeType": "ElementaryTypeNameExpression",
																	"src": "2181:7:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_type$_t_address_$",
																		"typeString": "type(address)"
																	},
																	"typeName": {
																		"id": 78,
																		"name": "address",
																		"nodeType": "ElementaryTypeName",
																		"src": "2181:7:0",
																		"typeDescriptions": {}
																	}
																},
																"id": 81,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "typeConversion",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "2181:10:0",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"src": "2169:22:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "4f776e61626c653a206e6577206f776e657220697320746865207a65726f2061646472657373",
															"id": 83,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "2193:40:0",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_245f15ff17f551913a7a18385165551503906a406f905ac1c2437281a7cd0cfe",
																"typeString": "literal_string \"Ownable: new owner is the zero address\""
															},
															"value": "Ownable: new owner is the zero address"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_245f15ff17f551913a7a18385165551503906a406f905ac1c2437281a7cd0cfe",
																"typeString": "literal_string \"Ownable: new owner is the zero address\""
															}
														],
														"id": 76,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "2161:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 84,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2161:73:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 85,
												"nodeType": "ExpressionStatement",
												"src": "2161:73:0"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 87,
															"name": "newOwner",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 71,
															"src": "2263:8:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"id": 86,
														"name": "_transferOwnership",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 111,
														"src": "2244:18:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$returns$__$",
															"typeString": "function (address)"
														}
													},
													"id": 88,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2244:28:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 89,
												"nodeType": "ExpressionStatement",
												"src": "2244:28:0"
											}
										]
									},
									"documentation": {
										"id": 69,
										"nodeType": "StructuredDocumentation",
										"src": "1938:138:0",
										"text": " @dev Transfers ownership of the contract to a new account (`newOwner`).\n Can only be called by the current owner."
									},
									"functionSelector": "f2fde38b",
									"id": 91,
									"implemented": true,
									"kind": "function",
									"modifiers": [
										{
											"id": 74,
											"kind": "modifierInvocation",
											"modifierName": {
												"id": 73,
												"name": "onlyOwner",
												"nameLocations": [
													"2141:9:0"
												],
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 31,
												"src": "2141:9:0"
											},
											"nodeType": "ModifierInvocation",
											"src": "2141:9:0"
										}
									],
									"name": "transferOwnership",
									"nameLocation": "2090:17:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 72,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 71,
												"mutability": "mutable",
												"name": "newOwner",
												"nameLocation": "2116:8:0",
												"nodeType": "VariableDeclaration",
												"scope": 91,
												"src": "2108:16:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 70,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2108:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2107:18:0"
									},
									"returnParameters": {
										"id": 75,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2151:0:0"
									},
									"scope": 112,
									"src": "2081:198:0",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "public"
								},
								{
									"body": {
										"id": 110,
										"nodeType": "Block",
										"src": "2496:124:0",
										"statements": [
											{
												"assignments": [
													98
												],
												"declarations": [
													{
														"constant": false,
														"id": 98,
														"mutability": "mutable",
														"name": "oldOwner",
														"nameLocation": "2514:8:0",
														"nodeType": "VariableDeclaration",
														"scope": 110,
														"src": "2506:16:0",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														},
														"typeName": {
															"id": 97,
															"name": "address",
															"nodeType": "ElementaryTypeName",
															"src": "2506:7:0",
															"stateMutability": "nonpayable",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 100,
												"initialValue": {
													"id": 99,
													"name": "_owner",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 7,
													"src": "2525:6:0",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "2506:25:0"
											},
											{
												"expression": {
													"id": 103,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 101,
														"name": "_owner",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 7,
														"src": "2541:6:0",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"id": 102,
														"name": "newOwner",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 94,
														"src": "2550:8:0",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "2541:17:0",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"id": 104,
												"nodeType": "ExpressionStatement",
												"src": "2541:17:0"
											},
											{
												"eventCall": {
													"arguments": [
														{
															"id": 106,
															"name": "oldOwner",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 98,
															"src": "2594:8:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 107,
															"name": "newOwner",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 94,
															"src": "2604:8:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"id": 105,
														"name": "OwnershipTransferred",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 13,
														"src": "2573:20:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_address_$returns$__$",
															"typeString": "function (address,address)"
														}
													},
													"id": 108,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2573:40:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 109,
												"nodeType": "EmitStatement",
												"src": "2568:45:0"
											}
										]
									},
									"documentation": {
										"id": 92,
										"nodeType": "StructuredDocumentation",
										"src": "2285:143:0",
										"text": " @dev Transfers ownership of the contract to a new account (`newOwner`).\n Internal function without access restriction."
									},
									"id": 111,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_transferOwnership",
									"nameLocation": "2442:18:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 95,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 94,
												"mutability": "mutable",
												"name": "newOwner",
												"nameLocation": "2469:8:0",
												"nodeType": "VariableDeclaration",
												"scope": 111,
												"src": "2461:16:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 93,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2461:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2460:18:0"
									},
									"returnParameters": {
										"id": 96,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2496:0:0"
									},
									"scope": 112,
									"src": "2433:187:0",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "internal"
								}
							],
							"scope": 113,
							"src": "654:1968:0",
							"usedErrors": []
						}
					],
					"src": "102:2521:0"
				},
				"id": 0
			},
			"@openzeppelin/contracts/security/ReentrancyGuard.sol": {
				"ast": {
					"absolutePath": "@openzeppelin/contracts/security/ReentrancyGuard.sol",
					"exportedSymbols": {
						"ReentrancyGuard": [
							166
						]
					},
					"id": 167,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 114,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".0"
							],
							"nodeType": "PragmaDirective",
							"src": "112:23:1"
						},
						{
							"abstract": true,
							"baseContracts": [],
							"canonicalName": "ReentrancyGuard",
							"contractDependencies": [],
							"contractKind": "contract",
							"documentation": {
								"id": 115,
								"nodeType": "StructuredDocumentation",
								"src": "137:750:1",
								"text": " @dev Contract module that helps prevent reentrant calls to a function.\n Inheriting from `ReentrancyGuard` will make the {nonReentrant} modifier\n available, which can be applied to functions to make sure there are no nested\n (reentrant) calls to them.\n Note that because there is a single `nonReentrant` guard, functions marked as\n `nonReentrant` may not call one another. This can be worked around by making\n those functions `private`, and then adding `external` `nonReentrant` entry\n points to them.\n TIP: If you would like to learn more about reentrancy and alternative ways\n to protect against it, check out our blog post\n https://blog.openzeppelin.com/reentrancy-after-istanbul/[Reentrancy After Istanbul]."
							},
							"fullyImplemented": true,
							"id": 166,
							"linearizedBaseContracts": [
								166
							],
							"name": "ReentrancyGuard",
							"nameLocation": "906:15:1",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"constant": true,
									"id": 118,
									"mutability": "constant",
									"name": "_NOT_ENTERED",
									"nameLocation": "1701:12:1",
									"nodeType": "VariableDeclaration",
									"scope": 166,
									"src": "1676:41:1",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_uint256",
										"typeString": "uint256"
									},
									"typeName": {
										"id": 116,
										"name": "uint256",
										"nodeType": "ElementaryTypeName",
										"src": "1676:7:1",
										"typeDescriptions": {
											"typeIdentifier": "t_uint256",
											"typeString": "uint256"
										}
									},
									"value": {
										"hexValue": "31",
										"id": 117,
										"isConstant": false,
										"isLValue": false,
										"isPure": true,
										"kind": "number",
										"lValueRequested": false,
										"nodeType": "Literal",
										"src": "1716:1:1",
										"typeDescriptions": {
											"typeIdentifier": "t_rational_1_by_1",
											"typeString": "int_const 1"
										},
										"value": "1"
									},
									"visibility": "private"
								},
								{
									"constant": true,
									"id": 121,
									"mutability": "constant",
									"name": "_ENTERED",
									"nameLocation": "1748:8:1",
									"nodeType": "VariableDeclaration",
									"scope": 166,
									"src": "1723:37:1",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_uint256",
										"typeString": "uint256"
									},
									"typeName": {
										"id": 119,
										"name": "uint256",
										"nodeType": "ElementaryTypeName",
										"src": "1723:7:1",
										"typeDescriptions": {
											"typeIdentifier": "t_uint256",
											"typeString": "uint256"
										}
									},
									"value": {
										"hexValue": "32",
										"id": 120,
										"isConstant": false,
										"isLValue": false,
										"isPure": true,
										"kind": "number",
										"lValueRequested": false,
										"nodeType": "Literal",
										"src": "1759:1:1",
										"typeDescriptions": {
											"typeIdentifier": "t_rational_2_by_1",
											"typeString": "int_const 2"
										},
										"value": "2"
									},
									"visibility": "private"
								},
								{
									"constant": false,
									"id": 123,
									"mutability": "mutable",
									"name": "_status",
									"nameLocation": "1783:7:1",
									"nodeType": "VariableDeclaration",
									"scope": 166,
									"src": "1767:23:1",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_uint256",
										"typeString": "uint256"
									},
									"typeName": {
										"id": 122,
										"name": "uint256",
										"nodeType": "ElementaryTypeName",
										"src": "1767:7:1",
										"typeDescriptions": {
											"typeIdentifier": "t_uint256",
											"typeString": "uint256"
										}
									},
									"visibility": "private"
								},
								{
									"body": {
										"id": 130,
										"nodeType": "Block",
										"src": "1811:39:1",
										"statements": [
											{
												"expression": {
													"id": 128,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 126,
														"name": "_status",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 123,
														"src": "1821:7:1",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"id": 127,
														"name": "_NOT_ENTERED",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 118,
														"src": "1831:12:1",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "1821:22:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 129,
												"nodeType": "ExpressionStatement",
												"src": "1821:22:1"
											}
										]
									},
									"id": 131,
									"implemented": true,
									"kind": "constructor",
									"modifiers": [],
									"name": "",
									"nameLocation": "-1:-1:-1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 124,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1808:2:1"
									},
									"returnParameters": {
										"id": 125,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1811:0:1"
									},
									"scope": 166,
									"src": "1797:53:1",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 141,
										"nodeType": "Block",
										"src": "2251:79:1",
										"statements": [
											{
												"expression": {
													"arguments": [],
													"expression": {
														"argumentTypes": [],
														"id": 134,
														"name": "_nonReentrantBefore",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 157,
														"src": "2261:19:1",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$__$returns$__$",
															"typeString": "function ()"
														}
													},
													"id": 135,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2261:21:1",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 136,
												"nodeType": "ExpressionStatement",
												"src": "2261:21:1"
											},
											{
												"id": 137,
												"nodeType": "PlaceholderStatement",
												"src": "2292:1:1"
											},
											{
												"expression": {
													"arguments": [],
													"expression": {
														"argumentTypes": [],
														"id": 138,
														"name": "_nonReentrantAfter",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 165,
														"src": "2303:18:1",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$__$returns$__$",
															"typeString": "function ()"
														}
													},
													"id": 139,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2303:20:1",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 140,
												"nodeType": "ExpressionStatement",
												"src": "2303:20:1"
											}
										]
									},
									"documentation": {
										"id": 132,
										"nodeType": "StructuredDocumentation",
										"src": "1856:366:1",
										"text": " @dev Prevents a contract from calling itself, directly or indirectly.\n Calling a `nonReentrant` function from another `nonReentrant`\n function is not supported. It is possible to prevent this from happening\n by making the `nonReentrant` function external, and making it call a\n `private` function that does the actual work."
									},
									"id": 142,
									"name": "nonReentrant",
									"nameLocation": "2236:12:1",
									"nodeType": "ModifierDefinition",
									"parameters": {
										"id": 133,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2248:2:1"
									},
									"src": "2227:103:1",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 156,
										"nodeType": "Block",
										"src": "2375:248:1",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 148,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 146,
																"name": "_status",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 123,
																"src": "2468:7:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "!=",
															"rightExpression": {
																"id": 147,
																"name": "_ENTERED",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 121,
																"src": "2479:8:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "2468:19:1",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "5265656e7472616e637947756172643a207265656e7472616e742063616c6c",
															"id": 149,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "2489:33:1",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_ebf73bba305590e4764d5cb53b69bffd6d4d092d1a67551cb346f8cfcdab8619",
																"typeString": "literal_string \"ReentrancyGuard: reentrant call\""
															},
															"value": "ReentrancyGuard: reentrant call"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_ebf73bba305590e4764d5cb53b69bffd6d4d092d1a67551cb346f8cfcdab8619",
																"typeString": "literal_string \"ReentrancyGuard: reentrant call\""
															}
														],
														"id": 145,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "2460:7:1",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 150,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2460:63:1",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 151,
												"nodeType": "ExpressionStatement",
												"src": "2460:63:1"
											},
											{
												"expression": {
													"id": 154,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 152,
														"name": "_status",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 123,
														"src": "2598:7:1",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"id": 153,
														"name": "_ENTERED",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 121,
														"src": "2608:8:1",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "2598:18:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 155,
												"nodeType": "ExpressionStatement",
												"src": "2598:18:1"
											}
										]
									},
									"id": 157,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_nonReentrantBefore",
									"nameLocation": "2345:19:1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 143,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2364:2:1"
									},
									"returnParameters": {
										"id": 144,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2375:0:1"
									},
									"scope": 166,
									"src": "2336:287:1",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "private"
								},
								{
									"body": {
										"id": 164,
										"nodeType": "Block",
										"src": "2667:171:1",
										"statements": [
											{
												"expression": {
													"id": 162,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 160,
														"name": "_status",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 123,
														"src": "2809:7:1",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"id": 161,
														"name": "_NOT_ENTERED",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 118,
														"src": "2819:12:1",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "2809:22:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 163,
												"nodeType": "ExpressionStatement",
												"src": "2809:22:1"
											}
										]
									},
									"id": 165,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_nonReentrantAfter",
									"nameLocation": "2638:18:1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 158,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2656:2:1"
									},
									"returnParameters": {
										"id": 159,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2667:0:1"
									},
									"scope": 166,
									"src": "2629:209:1",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "private"
								}
							],
							"scope": 167,
							"src": "888:1952:1",
							"usedErrors": []
						}
					],
					"src": "112:2729:1"
				},
				"id": 1
			},
			"@openzeppelin/contracts/token/ERC20/IERC20.sol": {
				"ast": {
					"absolutePath": "@openzeppelin/contracts/token/ERC20/IERC20.sol",
					"exportedSymbols": {
						"IERC20": [
							244
						]
					},
					"id": 245,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 168,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".0"
							],
							"nodeType": "PragmaDirective",
							"src": "106:23:2"
						},
						{
							"abstract": false,
							"baseContracts": [],
							"canonicalName": "IERC20",
							"contractDependencies": [],
							"contractKind": "interface",
							"documentation": {
								"id": 169,
								"nodeType": "StructuredDocumentation",
								"src": "131:70:2",
								"text": " @dev Interface of the ERC20 standard as defined in the EIP."
							},
							"fullyImplemented": false,
							"id": 244,
							"linearizedBaseContracts": [
								244
							],
							"name": "IERC20",
							"nameLocation": "212:6:2",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"anonymous": false,
									"documentation": {
										"id": 170,
										"nodeType": "StructuredDocumentation",
										"src": "225:158:2",
										"text": " @dev Emitted when `value` tokens are moved from one account (`from`) to\n another (`to`).\n Note that `value` may be zero."
									},
									"eventSelector": "ddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef",
									"id": 178,
									"name": "Transfer",
									"nameLocation": "394:8:2",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 177,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 172,
												"indexed": true,
												"mutability": "mutable",
												"name": "from",
												"nameLocation": "419:4:2",
												"nodeType": "VariableDeclaration",
												"scope": 178,
												"src": "403:20:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 171,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "403:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 174,
												"indexed": true,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "441:2:2",
												"nodeType": "VariableDeclaration",
												"scope": 178,
												"src": "425:18:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 173,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "425:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 176,
												"indexed": false,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "453:5:2",
												"nodeType": "VariableDeclaration",
												"scope": 178,
												"src": "445:13:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 175,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "445:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "402:57:2"
									},
									"src": "388:72:2"
								},
								{
									"anonymous": false,
									"documentation": {
										"id": 179,
										"nodeType": "StructuredDocumentation",
										"src": "466:148:2",
										"text": " @dev Emitted when the allowance of a `spender` for an `owner` is set by\n a call to {approve}. `value` is the new allowance."
									},
									"eventSelector": "8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b925",
									"id": 187,
									"name": "Approval",
									"nameLocation": "625:8:2",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 186,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 181,
												"indexed": true,
												"mutability": "mutable",
												"name": "owner",
												"nameLocation": "650:5:2",
												"nodeType": "VariableDeclaration",
												"scope": 187,
												"src": "634:21:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 180,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "634:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 183,
												"indexed": true,
												"mutability": "mutable",
												"name": "spender",
												"nameLocation": "673:7:2",
												"nodeType": "VariableDeclaration",
												"scope": 187,
												"src": "657:23:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 182,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "657:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 185,
												"indexed": false,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "690:5:2",
												"nodeType": "VariableDeclaration",
												"scope": 187,
												"src": "682:13:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 184,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "682:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "633:63:2"
									},
									"src": "619:78:2"
								},
								{
									"documentation": {
										"id": 188,
										"nodeType": "StructuredDocumentation",
										"src": "703:66:2",
										"text": " @dev Returns the amount of tokens in existence."
									},
									"functionSelector": "18160ddd",
									"id": 193,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "totalSupply",
									"nameLocation": "783:11:2",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 189,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "794:2:2"
									},
									"returnParameters": {
										"id": 192,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 191,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 193,
												"src": "820:7:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 190,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "820:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "819:9:2"
									},
									"scope": 244,
									"src": "774:55:2",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 194,
										"nodeType": "StructuredDocumentation",
										"src": "835:72:2",
										"text": " @dev Returns the amount of tokens owned by `account`."
									},
									"functionSelector": "70a08231",
									"id": 201,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "balanceOf",
									"nameLocation": "921:9:2",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 197,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 196,
												"mutability": "mutable",
												"name": "account",
												"nameLocation": "939:7:2",
												"nodeType": "VariableDeclaration",
												"scope": 201,
												"src": "931:15:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 195,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "931:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "930:17:2"
									},
									"returnParameters": {
										"id": 200,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 199,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 201,
												"src": "971:7:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 198,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "971:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "970:9:2"
									},
									"scope": 244,
									"src": "912:68:2",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 202,
										"nodeType": "StructuredDocumentation",
										"src": "986:202:2",
										"text": " @dev Moves `amount` tokens from the caller's account to `to`.\n Returns a boolean value indicating whether the operation succeeded.\n Emits a {Transfer} event."
									},
									"functionSelector": "a9059cbb",
									"id": 211,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "transfer",
									"nameLocation": "1202:8:2",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 207,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 204,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "1219:2:2",
												"nodeType": "VariableDeclaration",
												"scope": 211,
												"src": "1211:10:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 203,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1211:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 206,
												"mutability": "mutable",
												"name": "amount",
												"nameLocation": "1231:6:2",
												"nodeType": "VariableDeclaration",
												"scope": 211,
												"src": "1223:14:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 205,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1223:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1210:28:2"
									},
									"returnParameters": {
										"id": 210,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 209,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 211,
												"src": "1257:4:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 208,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "1257:4:2",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1256:6:2"
									},
									"scope": 244,
									"src": "1193:70:2",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 212,
										"nodeType": "StructuredDocumentation",
										"src": "1269:264:2",
										"text": " @dev Returns the remaining number of tokens that `spender` will be\n allowed to spend on behalf of `owner` through {transferFrom}. This is\n zero by default.\n This value changes when {approve} or {transferFrom} are called."
									},
									"functionSelector": "dd62ed3e",
									"id": 221,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "allowance",
									"nameLocation": "1547:9:2",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 217,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 214,
												"mutability": "mutable",
												"name": "owner",
												"nameLocation": "1565:5:2",
												"nodeType": "VariableDeclaration",
												"scope": 221,
												"src": "1557:13:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 213,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1557:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 216,
												"mutability": "mutable",
												"name": "spender",
												"nameLocation": "1580:7:2",
												"nodeType": "VariableDeclaration",
												"scope": 221,
												"src": "1572:15:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 215,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1572:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1556:32:2"
									},
									"returnParameters": {
										"id": 220,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 219,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 221,
												"src": "1612:7:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 218,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1612:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1611:9:2"
									},
									"scope": 244,
									"src": "1538:83:2",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 222,
										"nodeType": "StructuredDocumentation",
										"src": "1627:642:2",
										"text": " @dev Sets `amount` as the allowance of `spender` over the caller's tokens.\n Returns a boolean value indicating whether the operation succeeded.\n IMPORTANT: Beware that changing an allowance with this method brings the risk\n that someone may use both the old and the new allowance by unfortunate\n transaction ordering. One possible solution to mitigate this race\n condition is to first reduce the spender's allowance to 0 and set the\n desired value afterwards:\n https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729\n Emits an {Approval} event."
									},
									"functionSelector": "095ea7b3",
									"id": 231,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "approve",
									"nameLocation": "2283:7:2",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 227,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 224,
												"mutability": "mutable",
												"name": "spender",
												"nameLocation": "2299:7:2",
												"nodeType": "VariableDeclaration",
												"scope": 231,
												"src": "2291:15:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 223,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2291:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 226,
												"mutability": "mutable",
												"name": "amount",
												"nameLocation": "2316:6:2",
												"nodeType": "VariableDeclaration",
												"scope": 231,
												"src": "2308:14:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 225,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2308:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2290:33:2"
									},
									"returnParameters": {
										"id": 230,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 229,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 231,
												"src": "2342:4:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 228,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "2342:4:2",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2341:6:2"
									},
									"scope": 244,
									"src": "2274:74:2",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 232,
										"nodeType": "StructuredDocumentation",
										"src": "2354:287:2",
										"text": " @dev Moves `amount` tokens from `from` to `to` using the\n allowance mechanism. `amount` is then deducted from the caller's\n allowance.\n Returns a boolean value indicating whether the operation succeeded.\n Emits a {Transfer} event."
									},
									"functionSelector": "23b872dd",
									"id": 243,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "transferFrom",
									"nameLocation": "2655:12:2",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 239,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 234,
												"mutability": "mutable",
												"name": "from",
												"nameLocation": "2685:4:2",
												"nodeType": "VariableDeclaration",
												"scope": 243,
												"src": "2677:12:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 233,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2677:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 236,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "2707:2:2",
												"nodeType": "VariableDeclaration",
												"scope": 243,
												"src": "2699:10:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 235,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2699:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 238,
												"mutability": "mutable",
												"name": "amount",
												"nameLocation": "2727:6:2",
												"nodeType": "VariableDeclaration",
												"scope": 243,
												"src": "2719:14:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 237,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2719:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2667:72:2"
									},
									"returnParameters": {
										"id": 242,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 241,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 243,
												"src": "2758:4:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 240,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "2758:4:2",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2757:6:2"
									},
									"scope": 244,
									"src": "2646:118:2",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								}
							],
							"scope": 245,
							"src": "202:2564:2",
							"usedErrors": []
						}
					],
					"src": "106:2661:2"
				},
				"id": 2
			},
			"@openzeppelin/contracts/token/ERC20/extensions/draft-IERC20Permit.sol": {
				"ast": {
					"absolutePath": "@openzeppelin/contracts/token/ERC20/extensions/draft-IERC20Permit.sol",
					"exportedSymbols": {
						"IERC20Permit": [
							280
						]
					},
					"id": 281,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 246,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".0"
							],
							"nodeType": "PragmaDirective",
							"src": "114:23:3"
						},
						{
							"abstract": false,
							"baseContracts": [],
							"canonicalName": "IERC20Permit",
							"contractDependencies": [],
							"contractKind": "interface",
							"documentation": {
								"id": 247,
								"nodeType": "StructuredDocumentation",
								"src": "139:480:3",
								"text": " @dev Interface of the ERC20 Permit extension allowing approvals to be made via signatures, as defined in\n https://eips.ethereum.org/EIPS/eip-2612[EIP-2612].\n Adds the {permit} method, which can be used to change an account's ERC20 allowance (see {IERC20-allowance}) by\n presenting a message signed by the account. By not relying on {IERC20-approve}, the token holder account doesn't\n need to send a transaction, and thus is not required to hold Ether at all."
							},
							"fullyImplemented": false,
							"id": 280,
							"linearizedBaseContracts": [
								280
							],
							"name": "IERC20Permit",
							"nameLocation": "630:12:3",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"documentation": {
										"id": 248,
										"nodeType": "StructuredDocumentation",
										"src": "649:792:3",
										"text": " @dev Sets `value` as the allowance of `spender` over ``owner``'s tokens,\n given ``owner``'s signed approval.\n IMPORTANT: The same issues {IERC20-approve} has related to transaction\n ordering also apply here.\n Emits an {Approval} event.\n Requirements:\n - `spender` cannot be the zero address.\n - `deadline` must be a timestamp in the future.\n - `v`, `r` and `s` must be a valid `secp256k1` signature from `owner`\n over the EIP712-formatted function arguments.\n - the signature must use ``owner``'s current nonce (see {nonces}).\n For more information on the signature format, see the\n https://eips.ethereum.org/EIPS/eip-2612#specification[relevant EIP\n section]."
									},
									"functionSelector": "d505accf",
									"id": 265,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "permit",
									"nameLocation": "1455:6:3",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 263,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 250,
												"mutability": "mutable",
												"name": "owner",
												"nameLocation": "1479:5:3",
												"nodeType": "VariableDeclaration",
												"scope": 265,
												"src": "1471:13:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 249,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1471:7:3",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 252,
												"mutability": "mutable",
												"name": "spender",
												"nameLocation": "1502:7:3",
												"nodeType": "VariableDeclaration",
												"scope": 265,
												"src": "1494:15:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 251,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1494:7:3",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 254,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "1527:5:3",
												"nodeType": "VariableDeclaration",
												"scope": 265,
												"src": "1519:13:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 253,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1519:7:3",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 256,
												"mutability": "mutable",
												"name": "deadline",
												"nameLocation": "1550:8:3",
												"nodeType": "VariableDeclaration",
												"scope": 265,
												"src": "1542:16:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 255,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1542:7:3",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 258,
												"mutability": "mutable",
												"name": "v",
												"nameLocation": "1574:1:3",
												"nodeType": "VariableDeclaration",
												"scope": 265,
												"src": "1568:7:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint8",
													"typeString": "uint8"
												},
												"typeName": {
													"id": 257,
													"name": "uint8",
													"nodeType": "ElementaryTypeName",
													"src": "1568:5:3",
													"typeDescriptions": {
														"typeIdentifier": "t_uint8",
														"typeString": "uint8"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 260,
												"mutability": "mutable",
												"name": "r",
												"nameLocation": "1593:1:3",
												"nodeType": "VariableDeclaration",
												"scope": 265,
												"src": "1585:9:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												},
												"typeName": {
													"id": 259,
													"name": "bytes32",
													"nodeType": "ElementaryTypeName",
													"src": "1585:7:3",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 262,
												"mutability": "mutable",
												"name": "s",
												"nameLocation": "1612:1:3",
												"nodeType": "VariableDeclaration",
												"scope": 265,
												"src": "1604:9:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												},
												"typeName": {
													"id": 261,
													"name": "bytes32",
													"nodeType": "ElementaryTypeName",
													"src": "1604:7:3",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1461:158:3"
									},
									"returnParameters": {
										"id": 264,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1628:0:3"
									},
									"scope": 280,
									"src": "1446:183:3",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 266,
										"nodeType": "StructuredDocumentation",
										"src": "1635:294:3",
										"text": " @dev Returns the current nonce for `owner`. This value must be\n included whenever a signature is generated for {permit}.\n Every successful call to {permit} increases ``owner``'s nonce by one. This\n prevents a signature from being used multiple times."
									},
									"functionSelector": "7ecebe00",
									"id": 273,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "nonces",
									"nameLocation": "1943:6:3",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 269,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 268,
												"mutability": "mutable",
												"name": "owner",
												"nameLocation": "1958:5:3",
												"nodeType": "VariableDeclaration",
												"scope": 273,
												"src": "1950:13:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 267,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1950:7:3",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1949:15:3"
									},
									"returnParameters": {
										"id": 272,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 271,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 273,
												"src": "1988:7:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 270,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1988:7:3",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1987:9:3"
									},
									"scope": 280,
									"src": "1934:63:3",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 274,
										"nodeType": "StructuredDocumentation",
										"src": "2003:128:3",
										"text": " @dev Returns the domain separator used in the encoding of the signature for {permit}, as defined by {EIP712}."
									},
									"functionSelector": "3644e515",
									"id": 279,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "DOMAIN_SEPARATOR",
									"nameLocation": "2198:16:3",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 275,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2214:2:3"
									},
									"returnParameters": {
										"id": 278,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 277,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 279,
												"src": "2240:7:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												},
												"typeName": {
													"id": 276,
													"name": "bytes32",
													"nodeType": "ElementaryTypeName",
													"src": "2240:7:3",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2239:9:3"
									},
									"scope": 280,
									"src": "2189:60:3",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								}
							],
							"scope": 281,
							"src": "620:1631:3",
							"usedErrors": []
						}
					],
					"src": "114:2138:3"
				},
				"id": 3
			},
			"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol": {
				"ast": {
					"absolutePath": "@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol",
					"exportedSymbols": {
						"Address": [
							1007
						],
						"IERC20": [
							244
						],
						"IERC20Permit": [
							280
						],
						"SafeERC20": [
							561
						]
					},
					"id": 562,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 282,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".0"
							],
							"nodeType": "PragmaDirective",
							"src": "115:23:4"
						},
						{
							"absolutePath": "@openzeppelin/contracts/token/ERC20/IERC20.sol",
							"file": "../IERC20.sol",
							"id": 283,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 562,
							"sourceUnit": 245,
							"src": "140:23:4",
							"symbolAliases": [],
							"unitAlias": ""
						},
						{
							"absolutePath": "@openzeppelin/contracts/token/ERC20/extensions/draft-IERC20Permit.sol",
							"file": "../extensions/draft-IERC20Permit.sol",
							"id": 284,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 562,
							"sourceUnit": 281,
							"src": "164:46:4",
							"symbolAliases": [],
							"unitAlias": ""
						},
						{
							"absolutePath": "@openzeppelin/contracts/utils/Address.sol",
							"file": "../../../utils/Address.sol",
							"id": 285,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 562,
							"sourceUnit": 1008,
							"src": "211:36:4",
							"symbolAliases": [],
							"unitAlias": ""
						},
						{
							"abstract": false,
							"baseContracts": [],
							"canonicalName": "SafeERC20",
							"contractDependencies": [],
							"contractKind": "library",
							"documentation": {
								"id": 286,
								"nodeType": "StructuredDocumentation",
								"src": "249:457:4",
								"text": " @title SafeERC20\n @dev Wrappers around ERC20 operations that throw on failure (when the token\n contract returns false). Tokens that return no value (and instead revert or\n throw on failure) are also supported, non-reverting calls are assumed to be\n successful.\n To use this library you can add a `using SafeERC20 for IERC20;` statement to your contract,\n which allows you to call the safe operations as `token.safeTransfer(...)`, etc."
							},
							"fullyImplemented": true,
							"id": 561,
							"linearizedBaseContracts": [
								561
							],
							"name": "SafeERC20",
							"nameLocation": "715:9:4",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"global": false,
									"id": 289,
									"libraryName": {
										"id": 287,
										"name": "Address",
										"nameLocations": [
											"737:7:4"
										],
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 1007,
										"src": "737:7:4"
									},
									"nodeType": "UsingForDirective",
									"src": "731:26:4",
									"typeName": {
										"id": 288,
										"name": "address",
										"nodeType": "ElementaryTypeName",
										"src": "749:7:4",
										"stateMutability": "nonpayable",
										"typeDescriptions": {
											"typeIdentifier": "t_address",
											"typeString": "address"
										}
									}
								},
								{
									"body": {
										"id": 311,
										"nodeType": "Block",
										"src": "865:103:4",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"id": 300,
															"name": "token",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 292,
															"src": "895:5:4",
															"typeDescriptions": {
																"typeIdentifier": "t_contract$_IERC20_$244",
																"typeString": "contract IERC20"
															}
														},
														{
															"arguments": [
																{
																	"expression": {
																		"expression": {
																			"id": 303,
																			"name": "token",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 292,
																			"src": "925:5:4",
																			"typeDescriptions": {
																				"typeIdentifier": "t_contract$_IERC20_$244",
																				"typeString": "contract IERC20"
																			}
																		},
																		"id": 304,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"memberLocation": "931:8:4",
																		"memberName": "transfer",
																		"nodeType": "MemberAccess",
																		"referencedDeclaration": 211,
																		"src": "925:14:4",
																		"typeDescriptions": {
																			"typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_uint256_$returns$_t_bool_$",
																			"typeString": "function (address,uint256) external returns (bool)"
																		}
																	},
																	"id": 305,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"memberLocation": "940:8:4",
																	"memberName": "selector",
																	"nodeType": "MemberAccess",
																	"src": "925:23:4",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bytes4",
																		"typeString": "bytes4"
																	}
																},
																{
																	"id": 306,
																	"name": "to",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 294,
																	"src": "950:2:4",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																{
																	"id": 307,
																	"name": "value",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 296,
																	"src": "954:5:4",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_bytes4",
																		"typeString": "bytes4"
																	},
																	{
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	},
																	{
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																],
																"expression": {
																	"id": 301,
																	"name": "abi",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 4294967295,
																	"src": "902:3:4",
																	"typeDescriptions": {
																		"typeIdentifier": "t_magic_abi",
																		"typeString": "abi"
																	}
																},
																"id": 302,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"memberLocation": "906:18:4",
																"memberName": "encodeWithSelector",
																"nodeType": "MemberAccess",
																"src": "902:22:4",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_abiencodewithselector_pure$_t_bytes4_$returns$_t_bytes_memory_ptr_$",
																	"typeString": "function (bytes4) pure returns (bytes memory)"
																}
															},
															"id": 308,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "902:58:4",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_contract$_IERC20_$244",
																"typeString": "contract IERC20"
															},
															{
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														],
														"id": 299,
														"name": "_callOptionalReturn",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 560,
														"src": "875:19:4",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_contract$_IERC20_$244_$_t_bytes_memory_ptr_$returns$__$",
															"typeString": "function (contract IERC20,bytes memory)"
														}
													},
													"id": 309,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "875:86:4",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 310,
												"nodeType": "ExpressionStatement",
												"src": "875:86:4"
											}
										]
									},
									"id": 312,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "safeTransfer",
									"nameLocation": "772:12:4",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 297,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 292,
												"mutability": "mutable",
												"name": "token",
												"nameLocation": "801:5:4",
												"nodeType": "VariableDeclaration",
												"scope": 312,
												"src": "794:12:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_contract$_IERC20_$244",
													"typeString": "contract IERC20"
												},
												"typeName": {
													"id": 291,
													"nodeType": "UserDefinedTypeName",
													"pathNode": {
														"id": 290,
														"name": "IERC20",
														"nameLocations": [
															"794:6:4"
														],
														"nodeType": "IdentifierPath",
														"referencedDeclaration": 244,
														"src": "794:6:4"
													},
													"referencedDeclaration": 244,
													"src": "794:6:4",
													"typeDescriptions": {
														"typeIdentifier": "t_contract$_IERC20_$244",
														"typeString": "contract IERC20"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 294,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "824:2:4",
												"nodeType": "VariableDeclaration",
												"scope": 312,
												"src": "816:10:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 293,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "816:7:4",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 296,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "844:5:4",
												"nodeType": "VariableDeclaration",
												"scope": 312,
												"src": "836:13:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 295,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "836:7:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "784:71:4"
									},
									"returnParameters": {
										"id": 298,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "865:0:4"
									},
									"scope": 561,
									"src": "763:205:4",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 337,
										"nodeType": "Block",
										"src": "1102:113:4",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"id": 325,
															"name": "token",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 315,
															"src": "1132:5:4",
															"typeDescriptions": {
																"typeIdentifier": "t_contract$_IERC20_$244",
																"typeString": "contract IERC20"
															}
														},
														{
															"arguments": [
																{
																	"expression": {
																		"expression": {
																			"id": 328,
																			"name": "token",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 315,
																			"src": "1162:5:4",
																			"typeDescriptions": {
																				"typeIdentifier": "t_contract$_IERC20_$244",
																				"typeString": "contract IERC20"
																			}
																		},
																		"id": 329,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"memberLocation": "1168:12:4",
																		"memberName": "transferFrom",
																		"nodeType": "MemberAccess",
																		"referencedDeclaration": 243,
																		"src": "1162:18:4",
																		"typeDescriptions": {
																			"typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$_t_bool_$",
																			"typeString": "function (address,address,uint256) external returns (bool)"
																		}
																	},
																	"id": 330,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"memberLocation": "1181:8:4",
																	"memberName": "selector",
																	"nodeType": "MemberAccess",
																	"src": "1162:27:4",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bytes4",
																		"typeString": "bytes4"
																	}
																},
																{
																	"id": 331,
																	"name": "from",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 317,
																	"src": "1191:4:4",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																{
																	"id": 332,
																	"name": "to",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 319,
																	"src": "1197:2:4",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																{
																	"id": 333,
																	"name": "value",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 321,
																	"src": "1201:5:4",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_bytes4",
																		"typeString": "bytes4"
																	},
																	{
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	},
																	{
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	},
																	{
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																],
																"expression": {
																	"id": 326,
																	"name": "abi",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 4294967295,
																	"src": "1139:3:4",
																	"typeDescriptions": {
																		"typeIdentifier": "t_magic_abi",
																		"typeString": "abi"
																	}
																},
																"id": 327,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"memberLocation": "1143:18:4",
																"memberName": "encodeWithSelector",
																"nodeType": "MemberAccess",
																"src": "1139:22:4",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_abiencodewithselector_pure$_t_bytes4_$returns$_t_bytes_memory_ptr_$",
																	"typeString": "function (bytes4) pure returns (bytes memory)"
																}
															},
															"id": 334,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "1139:68:4",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_contract$_IERC20_$244",
																"typeString": "contract IERC20"
															},
															{
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														],
														"id": 324,
														"name": "_callOptionalReturn",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 560,
														"src": "1112:19:4",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_contract$_IERC20_$244_$_t_bytes_memory_ptr_$returns$__$",
															"typeString": "function (contract IERC20,bytes memory)"
														}
													},
													"id": 335,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1112:96:4",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 336,
												"nodeType": "ExpressionStatement",
												"src": "1112:96:4"
											}
										]
									},
									"id": 338,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "safeTransferFrom",
									"nameLocation": "983:16:4",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 322,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 315,
												"mutability": "mutable",
												"name": "token",
												"nameLocation": "1016:5:4",
												"nodeType": "VariableDeclaration",
												"scope": 338,
												"src": "1009:12:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_contract$_IERC20_$244",
													"typeString": "contract IERC20"
												},
												"typeName": {
													"id": 314,
													"nodeType": "UserDefinedTypeName",
													"pathNode": {
														"id": 313,
														"name": "IERC20",
														"nameLocations": [
															"1009:6:4"
														],
														"nodeType": "IdentifierPath",
														"referencedDeclaration": 244,
														"src": "1009:6:4"
													},
													"referencedDeclaration": 244,
													"src": "1009:6:4",
													"typeDescriptions": {
														"typeIdentifier": "t_contract$_IERC20_$244",
														"typeString": "contract IERC20"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 317,
												"mutability": "mutable",
												"name": "from",
												"nameLocation": "1039:4:4",
												"nodeType": "VariableDeclaration",
												"scope": 338,
												"src": "1031:12:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 316,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1031:7:4",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 319,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "1061:2:4",
												"nodeType": "VariableDeclaration",
												"scope": 338,
												"src": "1053:10:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 318,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1053:7:4",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 321,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "1081:5:4",
												"nodeType": "VariableDeclaration",
												"scope": 338,
												"src": "1073:13:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 320,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1073:7:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "999:93:4"
									},
									"returnParameters": {
										"id": 323,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1102:0:4"
									},
									"scope": 561,
									"src": "974:241:4",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 381,
										"nodeType": "Block",
										"src": "1581:497:4",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															"id": 365,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"components": [
																	{
																		"commonType": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		},
																		"id": 352,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftExpression": {
																			"id": 350,
																			"name": "value",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 346,
																			"src": "1830:5:4",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "BinaryOperation",
																		"operator": "==",
																		"rightExpression": {
																			"hexValue": "30",
																			"id": 351,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "1839:1:4",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_0_by_1",
																				"typeString": "int_const 0"
																			},
																			"value": "0"
																		},
																		"src": "1830:10:4",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bool",
																			"typeString": "bool"
																		}
																	}
																],
																"id": 353,
																"isConstant": false,
																"isInlineArray": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"nodeType": "TupleExpression",
																"src": "1829:12:4",
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "||",
															"rightExpression": {
																"components": [
																	{
																		"commonType": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		},
																		"id": 363,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftExpression": {
																			"arguments": [
																				{
																					"arguments": [
																						{
																							"id": 358,
																							"name": "this",
																							"nodeType": "Identifier",
																							"overloadedDeclarations": [],
																							"referencedDeclaration": 4294967268,
																							"src": "1870:4:4",
																							"typeDescriptions": {
																								"typeIdentifier": "t_contract$_SafeERC20_$561",
																								"typeString": "library SafeERC20"
																							}
																						}
																					],
																					"expression": {
																						"argumentTypes": [
																							{
																								"typeIdentifier": "t_contract$_SafeERC20_$561",
																								"typeString": "library SafeERC20"
																							}
																						],
																						"id": 357,
																						"isConstant": false,
																						"isLValue": false,
																						"isPure": true,
																						"lValueRequested": false,
																						"nodeType": "ElementaryTypeNameExpression",
																						"src": "1862:7:4",
																						"typeDescriptions": {
																							"typeIdentifier": "t_type$_t_address_$",
																							"typeString": "type(address)"
																						},
																						"typeName": {
																							"id": 356,
																							"name": "address",
																							"nodeType": "ElementaryTypeName",
																							"src": "1862:7:4",
																							"typeDescriptions": {}
																						}
																					},
																					"id": 359,
																					"isConstant": false,
																					"isLValue": false,
																					"isPure": false,
																					"kind": "typeConversion",
																					"lValueRequested": false,
																					"nameLocations": [],
																					"names": [],
																					"nodeType": "FunctionCall",
																					"src": "1862:13:4",
																					"tryCall": false,
																					"typeDescriptions": {
																						"typeIdentifier": "t_address",
																						"typeString": "address"
																					}
																				},
																				{
																					"id": 360,
																					"name": "spender",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 344,
																					"src": "1877:7:4",
																					"typeDescriptions": {
																						"typeIdentifier": "t_address",
																						"typeString": "address"
																					}
																				}
																			],
																			"expression": {
																				"argumentTypes": [
																					{
																						"typeIdentifier": "t_address",
																						"typeString": "address"
																					},
																					{
																						"typeIdentifier": "t_address",
																						"typeString": "address"
																					}
																				],
																				"expression": {
																					"id": 354,
																					"name": "token",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 342,
																					"src": "1846:5:4",
																					"typeDescriptions": {
																						"typeIdentifier": "t_contract$_IERC20_$244",
																						"typeString": "contract IERC20"
																					}
																				},
																				"id": 355,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": false,
																				"lValueRequested": false,
																				"memberLocation": "1852:9:4",
																				"memberName": "allowance",
																				"nodeType": "MemberAccess",
																				"referencedDeclaration": 221,
																				"src": "1846:15:4",
																				"typeDescriptions": {
																					"typeIdentifier": "t_function_external_view$_t_address_$_t_address_$returns$_t_uint256_$",
																					"typeString": "function (address,address) view external returns (uint256)"
																				}
																			},
																			"id": 361,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"kind": "functionCall",
																			"lValueRequested": false,
																			"nameLocations": [],
																			"names": [],
																			"nodeType": "FunctionCall",
																			"src": "1846:39:4",
																			"tryCall": false,
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "BinaryOperation",
																		"operator": "==",
																		"rightExpression": {
																			"hexValue": "30",
																			"id": 362,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "1889:1:4",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_0_by_1",
																				"typeString": "int_const 0"
																			},
																			"value": "0"
																		},
																		"src": "1846:44:4",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bool",
																			"typeString": "bool"
																		}
																	}
																],
																"id": 364,
																"isConstant": false,
																"isInlineArray": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"nodeType": "TupleExpression",
																"src": "1845:46:4",
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																}
															},
															"src": "1829:62:4",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "5361666545524332303a20617070726f76652066726f6d206e6f6e2d7a65726f20746f206e6f6e2d7a65726f20616c6c6f77616e6365",
															"id": 366,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "1905:56:4",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_ef945ddb1bfdc0da870feb4560d868b047642b4ac7f2fb7f8b7c51cb4a411e25",
																"typeString": "literal_string \"SafeERC20: approve from non-zero to non-zero allowance\""
															},
															"value": "SafeERC20: approve from non-zero to non-zero allowance"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_ef945ddb1bfdc0da870feb4560d868b047642b4ac7f2fb7f8b7c51cb4a411e25",
																"typeString": "literal_string \"SafeERC20: approve from non-zero to non-zero allowance\""
															}
														],
														"id": 349,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "1808:7:4",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 367,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1808:163:4",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 368,
												"nodeType": "ExpressionStatement",
												"src": "1808:163:4"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 370,
															"name": "token",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 342,
															"src": "2001:5:4",
															"typeDescriptions": {
																"typeIdentifier": "t_contract$_IERC20_$244",
																"typeString": "contract IERC20"
															}
														},
														{
															"arguments": [
																{
																	"expression": {
																		"expression": {
																			"id": 373,
																			"name": "token",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 342,
																			"src": "2031:5:4",
																			"typeDescriptions": {
																				"typeIdentifier": "t_contract$_IERC20_$244",
																				"typeString": "contract IERC20"
																			}
																		},
																		"id": 374,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"memberLocation": "2037:7:4",
																		"memberName": "approve",
																		"nodeType": "MemberAccess",
																		"referencedDeclaration": 231,
																		"src": "2031:13:4",
																		"typeDescriptions": {
																			"typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_uint256_$returns$_t_bool_$",
																			"typeString": "function (address,uint256) external returns (bool)"
																		}
																	},
																	"id": 375,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"memberLocation": "2045:8:4",
																	"memberName": "selector",
																	"nodeType": "MemberAccess",
																	"src": "2031:22:4",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bytes4",
																		"typeString": "bytes4"
																	}
																},
																{
																	"id": 376,
																	"name": "spender",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 344,
																	"src": "2055:7:4",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																{
																	"id": 377,
																	"name": "value",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 346,
																	"src": "2064:5:4",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_bytes4",
																		"typeString": "bytes4"
																	},
																	{
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	},
																	{
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																],
																"expression": {
																	"id": 371,
																	"name": "abi",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 4294967295,
																	"src": "2008:3:4",
																	"typeDescriptions": {
																		"typeIdentifier": "t_magic_abi",
																		"typeString": "abi"
																	}
																},
																"id": 372,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"memberLocation": "2012:18:4",
																"memberName": "encodeWithSelector",
																"nodeType": "MemberAccess",
																"src": "2008:22:4",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_abiencodewithselector_pure$_t_bytes4_$returns$_t_bytes_memory_ptr_$",
																	"typeString": "function (bytes4) pure returns (bytes memory)"
																}
															},
															"id": 378,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "2008:62:4",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_contract$_IERC20_$244",
																"typeString": "contract IERC20"
															},
															{
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														],
														"id": 369,
														"name": "_callOptionalReturn",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 560,
														"src": "1981:19:4",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_contract$_IERC20_$244_$_t_bytes_memory_ptr_$returns$__$",
															"typeString": "function (contract IERC20,bytes memory)"
														}
													},
													"id": 379,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1981:90:4",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 380,
												"nodeType": "ExpressionStatement",
												"src": "1981:90:4"
											}
										]
									},
									"documentation": {
										"id": 339,
										"nodeType": "StructuredDocumentation",
										"src": "1221:249:4",
										"text": " @dev Deprecated. This function has issues similar to the ones found in\n {IERC20-approve}, and its usage is discouraged.\n Whenever possible, use {safeIncreaseAllowance} and\n {safeDecreaseAllowance} instead."
									},
									"id": 382,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "safeApprove",
									"nameLocation": "1484:11:4",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 347,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 342,
												"mutability": "mutable",
												"name": "token",
												"nameLocation": "1512:5:4",
												"nodeType": "VariableDeclaration",
												"scope": 382,
												"src": "1505:12:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_contract$_IERC20_$244",
													"typeString": "contract IERC20"
												},
												"typeName": {
													"id": 341,
													"nodeType": "UserDefinedTypeName",
													"pathNode": {
														"id": 340,
														"name": "IERC20",
														"nameLocations": [
															"1505:6:4"
														],
														"nodeType": "IdentifierPath",
														"referencedDeclaration": 244,
														"src": "1505:6:4"
													},
													"referencedDeclaration": 244,
													"src": "1505:6:4",
													"typeDescriptions": {
														"typeIdentifier": "t_contract$_IERC20_$244",
														"typeString": "contract IERC20"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 344,
												"mutability": "mutable",
												"name": "spender",
												"nameLocation": "1535:7:4",
												"nodeType": "VariableDeclaration",
												"scope": 382,
												"src": "1527:15:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 343,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1527:7:4",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 346,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "1560:5:4",
												"nodeType": "VariableDeclaration",
												"scope": 382,
												"src": "1552:13:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 345,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1552:7:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1495:76:4"
									},
									"returnParameters": {
										"id": 348,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1581:0:4"
									},
									"scope": 561,
									"src": "1475:603:4",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 417,
										"nodeType": "Block",
										"src": "2200:194:4",
										"statements": [
											{
												"assignments": [
													393
												],
												"declarations": [
													{
														"constant": false,
														"id": 393,
														"mutability": "mutable",
														"name": "newAllowance",
														"nameLocation": "2218:12:4",
														"nodeType": "VariableDeclaration",
														"scope": 417,
														"src": "2210:20:4",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 392,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "2210:7:4",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 404,
												"initialValue": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 403,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"arguments": [
															{
																"arguments": [
																	{
																		"id": 398,
																		"name": "this",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 4294967268,
																		"src": "2257:4:4",
																		"typeDescriptions": {
																			"typeIdentifier": "t_contract$_SafeERC20_$561",
																			"typeString": "library SafeERC20"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_contract$_SafeERC20_$561",
																			"typeString": "library SafeERC20"
																		}
																	],
																	"id": 397,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"lValueRequested": false,
																	"nodeType": "ElementaryTypeNameExpression",
																	"src": "2249:7:4",
																	"typeDescriptions": {
																		"typeIdentifier": "t_type$_t_address_$",
																		"typeString": "type(address)"
																	},
																	"typeName": {
																		"id": 396,
																		"name": "address",
																		"nodeType": "ElementaryTypeName",
																		"src": "2249:7:4",
																		"typeDescriptions": {}
																	}
																},
																"id": 399,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "typeConversion",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "2249:13:4",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															{
																"id": 400,
																"name": "spender",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 387,
																"src": "2264:7:4",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																},
																{
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															],
															"expression": {
																"id": 394,
																"name": "token",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 385,
																"src": "2233:5:4",
																"typeDescriptions": {
																	"typeIdentifier": "t_contract$_IERC20_$244",
																	"typeString": "contract IERC20"
																}
															},
															"id": 395,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "2239:9:4",
															"memberName": "allowance",
															"nodeType": "MemberAccess",
															"referencedDeclaration": 221,
															"src": "2233:15:4",
															"typeDescriptions": {
																"typeIdentifier": "t_function_external_view$_t_address_$_t_address_$returns$_t_uint256_$",
																"typeString": "function (address,address) view external returns (uint256)"
															}
														},
														"id": 401,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "functionCall",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "2233:39:4",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "+",
													"rightExpression": {
														"id": 402,
														"name": "value",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 389,
														"src": "2275:5:4",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "2233:47:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "2210:70:4"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 406,
															"name": "token",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 385,
															"src": "2310:5:4",
															"typeDescriptions": {
																"typeIdentifier": "t_contract$_IERC20_$244",
																"typeString": "contract IERC20"
															}
														},
														{
															"arguments": [
																{
																	"expression": {
																		"expression": {
																			"id": 409,
																			"name": "token",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 385,
																			"src": "2340:5:4",
																			"typeDescriptions": {
																				"typeIdentifier": "t_contract$_IERC20_$244",
																				"typeString": "contract IERC20"
																			}
																		},
																		"id": 410,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"memberLocation": "2346:7:4",
																		"memberName": "approve",
																		"nodeType": "MemberAccess",
																		"referencedDeclaration": 231,
																		"src": "2340:13:4",
																		"typeDescriptions": {
																			"typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_uint256_$returns$_t_bool_$",
																			"typeString": "function (address,uint256) external returns (bool)"
																		}
																	},
																	"id": 411,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"memberLocation": "2354:8:4",
																	"memberName": "selector",
																	"nodeType": "MemberAccess",
																	"src": "2340:22:4",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bytes4",
																		"typeString": "bytes4"
																	}
																},
																{
																	"id": 412,
																	"name": "spender",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 387,
																	"src": "2364:7:4",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																{
																	"id": 413,
																	"name": "newAllowance",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 393,
																	"src": "2373:12:4",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_bytes4",
																		"typeString": "bytes4"
																	},
																	{
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	},
																	{
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																],
																"expression": {
																	"id": 407,
																	"name": "abi",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 4294967295,
																	"src": "2317:3:4",
																	"typeDescriptions": {
																		"typeIdentifier": "t_magic_abi",
																		"typeString": "abi"
																	}
																},
																"id": 408,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"memberLocation": "2321:18:4",
																"memberName": "encodeWithSelector",
																"nodeType": "MemberAccess",
																"src": "2317:22:4",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_abiencodewithselector_pure$_t_bytes4_$returns$_t_bytes_memory_ptr_$",
																	"typeString": "function (bytes4) pure returns (bytes memory)"
																}
															},
															"id": 414,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "2317:69:4",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_contract$_IERC20_$244",
																"typeString": "contract IERC20"
															},
															{
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														],
														"id": 405,
														"name": "_callOptionalReturn",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 560,
														"src": "2290:19:4",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_contract$_IERC20_$244_$_t_bytes_memory_ptr_$returns$__$",
															"typeString": "function (contract IERC20,bytes memory)"
														}
													},
													"id": 415,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2290:97:4",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 416,
												"nodeType": "ExpressionStatement",
												"src": "2290:97:4"
											}
										]
									},
									"id": 418,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "safeIncreaseAllowance",
									"nameLocation": "2093:21:4",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 390,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 385,
												"mutability": "mutable",
												"name": "token",
												"nameLocation": "2131:5:4",
												"nodeType": "VariableDeclaration",
												"scope": 418,
												"src": "2124:12:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_contract$_IERC20_$244",
													"typeString": "contract IERC20"
												},
												"typeName": {
													"id": 384,
													"nodeType": "UserDefinedTypeName",
													"pathNode": {
														"id": 383,
														"name": "IERC20",
														"nameLocations": [
															"2124:6:4"
														],
														"nodeType": "IdentifierPath",
														"referencedDeclaration": 244,
														"src": "2124:6:4"
													},
													"referencedDeclaration": 244,
													"src": "2124:6:4",
													"typeDescriptions": {
														"typeIdentifier": "t_contract$_IERC20_$244",
														"typeString": "contract IERC20"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 387,
												"mutability": "mutable",
												"name": "spender",
												"nameLocation": "2154:7:4",
												"nodeType": "VariableDeclaration",
												"scope": 418,
												"src": "2146:15:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 386,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2146:7:4",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 389,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "2179:5:4",
												"nodeType": "VariableDeclaration",
												"scope": 418,
												"src": "2171:13:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 388,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2171:7:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2114:76:4"
									},
									"returnParameters": {
										"id": 391,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2200:0:4"
									},
									"scope": 561,
									"src": "2084:310:4",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 465,
										"nodeType": "Block",
										"src": "2516:370:4",
										"statements": [
											{
												"id": 464,
												"nodeType": "UncheckedBlock",
												"src": "2526:354:4",
												"statements": [
													{
														"assignments": [
															429
														],
														"declarations": [
															{
																"constant": false,
																"id": 429,
																"mutability": "mutable",
																"name": "oldAllowance",
																"nameLocation": "2558:12:4",
																"nodeType": "VariableDeclaration",
																"scope": 464,
																"src": "2550:20:4",
																"stateVariable": false,
																"storageLocation": "default",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"typeName": {
																	"id": 428,
																	"name": "uint256",
																	"nodeType": "ElementaryTypeName",
																	"src": "2550:7:4",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"visibility": "internal"
															}
														],
														"id": 438,
														"initialValue": {
															"arguments": [
																{
																	"arguments": [
																		{
																			"id": 434,
																			"name": "this",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 4294967268,
																			"src": "2597:4:4",
																			"typeDescriptions": {
																				"typeIdentifier": "t_contract$_SafeERC20_$561",
																				"typeString": "library SafeERC20"
																			}
																		}
																	],
																	"expression": {
																		"argumentTypes": [
																			{
																				"typeIdentifier": "t_contract$_SafeERC20_$561",
																				"typeString": "library SafeERC20"
																			}
																		],
																		"id": 433,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"lValueRequested": false,
																		"nodeType": "ElementaryTypeNameExpression",
																		"src": "2589:7:4",
																		"typeDescriptions": {
																			"typeIdentifier": "t_type$_t_address_$",
																			"typeString": "type(address)"
																		},
																		"typeName": {
																			"id": 432,
																			"name": "address",
																			"nodeType": "ElementaryTypeName",
																			"src": "2589:7:4",
																			"typeDescriptions": {}
																		}
																	},
																	"id": 435,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"kind": "typeConversion",
																	"lValueRequested": false,
																	"nameLocations": [],
																	"names": [],
																	"nodeType": "FunctionCall",
																	"src": "2589:13:4",
																	"tryCall": false,
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																{
																	"id": 436,
																	"name": "spender",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 423,
																	"src": "2604:7:4",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	},
																	{
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																],
																"expression": {
																	"id": 430,
																	"name": "token",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 421,
																	"src": "2573:5:4",
																	"typeDescriptions": {
																		"typeIdentifier": "t_contract$_IERC20_$244",
																		"typeString": "contract IERC20"
																	}
																},
																"id": 431,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"memberLocation": "2579:9:4",
																"memberName": "allowance",
																"nodeType": "MemberAccess",
																"referencedDeclaration": 221,
																"src": "2573:15:4",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_external_view$_t_address_$_t_address_$returns$_t_uint256_$",
																	"typeString": "function (address,address) view external returns (uint256)"
																}
															},
															"id": 437,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "2573:39:4",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"nodeType": "VariableDeclarationStatement",
														"src": "2550:62:4"
													},
													{
														"expression": {
															"arguments": [
																{
																	"commonType": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	"id": 442,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"leftExpression": {
																		"id": 440,
																		"name": "oldAllowance",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 429,
																		"src": "2634:12:4",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"nodeType": "BinaryOperation",
																	"operator": ">=",
																	"rightExpression": {
																		"id": 441,
																		"name": "value",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 425,
																		"src": "2650:5:4",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"src": "2634:21:4",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bool",
																		"typeString": "bool"
																	}
																},
																{
																	"hexValue": "5361666545524332303a2064656372656173656420616c6c6f77616e63652062656c6f77207a65726f",
																	"id": 443,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "string",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "2657:43:4",
																	"typeDescriptions": {
																		"typeIdentifier": "t_stringliteral_2c3af60974a758b7e72e108c9bf0943ecc9e4f2e8af4695da5f52fbf57a63d3a",
																		"typeString": "literal_string \"SafeERC20: decreased allowance below zero\""
																	},
																	"value": "SafeERC20: decreased allowance below zero"
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_bool",
																		"typeString": "bool"
																	},
																	{
																		"typeIdentifier": "t_stringliteral_2c3af60974a758b7e72e108c9bf0943ecc9e4f2e8af4695da5f52fbf57a63d3a",
																		"typeString": "literal_string \"SafeERC20: decreased allowance below zero\""
																	}
																],
																"id": 439,
																"name": "require",
																"nodeType": "Identifier",
																"overloadedDeclarations": [
																	4294967278,
																	4294967278
																],
																"referencedDeclaration": 4294967278,
																"src": "2626:7:4",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
																	"typeString": "function (bool,string memory) pure"
																}
															},
															"id": 444,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "2626:75:4",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_tuple$__$",
																"typeString": "tuple()"
															}
														},
														"id": 445,
														"nodeType": "ExpressionStatement",
														"src": "2626:75:4"
													},
													{
														"assignments": [
															447
														],
														"declarations": [
															{
																"constant": false,
																"id": 447,
																"mutability": "mutable",
																"name": "newAllowance",
																"nameLocation": "2723:12:4",
																"nodeType": "VariableDeclaration",
																"scope": 464,
																"src": "2715:20:4",
																"stateVariable": false,
																"storageLocation": "default",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"typeName": {
																	"id": 446,
																	"name": "uint256",
																	"nodeType": "ElementaryTypeName",
																	"src": "2715:7:4",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"visibility": "internal"
															}
														],
														"id": 451,
														"initialValue": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 450,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 448,
																"name": "oldAllowance",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 429,
																"src": "2738:12:4",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "-",
															"rightExpression": {
																"id": 449,
																"name": "value",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 425,
																"src": "2753:5:4",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "2738:20:4",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"nodeType": "VariableDeclarationStatement",
														"src": "2715:43:4"
													},
													{
														"expression": {
															"arguments": [
																{
																	"id": 453,
																	"name": "token",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 421,
																	"src": "2792:5:4",
																	"typeDescriptions": {
																		"typeIdentifier": "t_contract$_IERC20_$244",
																		"typeString": "contract IERC20"
																	}
																},
																{
																	"arguments": [
																		{
																			"expression": {
																				"expression": {
																					"id": 456,
																					"name": "token",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 421,
																					"src": "2822:5:4",
																					"typeDescriptions": {
																						"typeIdentifier": "t_contract$_IERC20_$244",
																						"typeString": "contract IERC20"
																					}
																				},
																				"id": 457,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": false,
																				"lValueRequested": false,
																				"memberLocation": "2828:7:4",
																				"memberName": "approve",
																				"nodeType": "MemberAccess",
																				"referencedDeclaration": 231,
																				"src": "2822:13:4",
																				"typeDescriptions": {
																					"typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_uint256_$returns$_t_bool_$",
																					"typeString": "function (address,uint256) external returns (bool)"
																				}
																			},
																			"id": 458,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"memberLocation": "2836:8:4",
																			"memberName": "selector",
																			"nodeType": "MemberAccess",
																			"src": "2822:22:4",
																			"typeDescriptions": {
																				"typeIdentifier": "t_bytes4",
																				"typeString": "bytes4"
																			}
																		},
																		{
																			"id": 459,
																			"name": "spender",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 423,
																			"src": "2846:7:4",
																			"typeDescriptions": {
																				"typeIdentifier": "t_address",
																				"typeString": "address"
																			}
																		},
																		{
																			"id": 460,
																			"name": "newAllowance",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 447,
																			"src": "2855:12:4",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		}
																	],
																	"expression": {
																		"argumentTypes": [
																			{
																				"typeIdentifier": "t_bytes4",
																				"typeString": "bytes4"
																			},
																			{
																				"typeIdentifier": "t_address",
																				"typeString": "address"
																			},
																			{
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		],
																		"expression": {
																			"id": 454,
																			"name": "abi",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 4294967295,
																			"src": "2799:3:4",
																			"typeDescriptions": {
																				"typeIdentifier": "t_magic_abi",
																				"typeString": "abi"
																			}
																		},
																		"id": 455,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"lValueRequested": false,
																		"memberLocation": "2803:18:4",
																		"memberName": "encodeWithSelector",
																		"nodeType": "MemberAccess",
																		"src": "2799:22:4",
																		"typeDescriptions": {
																			"typeIdentifier": "t_function_abiencodewithselector_pure$_t_bytes4_$returns$_t_bytes_memory_ptr_$",
																			"typeString": "function (bytes4) pure returns (bytes memory)"
																		}
																	},
																	"id": 461,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"kind": "functionCall",
																	"lValueRequested": false,
																	"nameLocations": [],
																	"names": [],
																	"nodeType": "FunctionCall",
																	"src": "2799:69:4",
																	"tryCall": false,
																	"typeDescriptions": {
																		"typeIdentifier": "t_bytes_memory_ptr",
																		"typeString": "bytes memory"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_contract$_IERC20_$244",
																		"typeString": "contract IERC20"
																	},
																	{
																		"typeIdentifier": "t_bytes_memory_ptr",
																		"typeString": "bytes memory"
																	}
																],
																"id": 452,
																"name": "_callOptionalReturn",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 560,
																"src": "2772:19:4",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_internal_nonpayable$_t_contract$_IERC20_$244_$_t_bytes_memory_ptr_$returns$__$",
																	"typeString": "function (contract IERC20,bytes memory)"
																}
															},
															"id": 462,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "2772:97:4",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_tuple$__$",
																"typeString": "tuple()"
															}
														},
														"id": 463,
														"nodeType": "ExpressionStatement",
														"src": "2772:97:4"
													}
												]
											}
										]
									},
									"id": 466,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "safeDecreaseAllowance",
									"nameLocation": "2409:21:4",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 426,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 421,
												"mutability": "mutable",
												"name": "token",
												"nameLocation": "2447:5:4",
												"nodeType": "VariableDeclaration",
												"scope": 466,
												"src": "2440:12:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_contract$_IERC20_$244",
													"typeString": "contract IERC20"
												},
												"typeName": {
													"id": 420,
													"nodeType": "UserDefinedTypeName",
													"pathNode": {
														"id": 419,
														"name": "IERC20",
														"nameLocations": [
															"2440:6:4"
														],
														"nodeType": "IdentifierPath",
														"referencedDeclaration": 244,
														"src": "2440:6:4"
													},
													"referencedDeclaration": 244,
													"src": "2440:6:4",
													"typeDescriptions": {
														"typeIdentifier": "t_contract$_IERC20_$244",
														"typeString": "contract IERC20"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 423,
												"mutability": "mutable",
												"name": "spender",
												"nameLocation": "2470:7:4",
												"nodeType": "VariableDeclaration",
												"scope": 466,
												"src": "2462:15:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 422,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2462:7:4",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 425,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "2495:5:4",
												"nodeType": "VariableDeclaration",
												"scope": 466,
												"src": "2487:13:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 424,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2487:7:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2430:76:4"
									},
									"returnParameters": {
										"id": 427,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2516:0:4"
									},
									"scope": 561,
									"src": "2400:486:4",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 521,
										"nodeType": "Block",
										"src": "3107:257:4",
										"statements": [
											{
												"assignments": [
													487
												],
												"declarations": [
													{
														"constant": false,
														"id": 487,
														"mutability": "mutable",
														"name": "nonceBefore",
														"nameLocation": "3125:11:4",
														"nodeType": "VariableDeclaration",
														"scope": 521,
														"src": "3117:19:4",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 486,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "3117:7:4",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 492,
												"initialValue": {
													"arguments": [
														{
															"id": 490,
															"name": "owner",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 471,
															"src": "3152:5:4",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"expression": {
															"id": 488,
															"name": "token",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 469,
															"src": "3139:5:4",
															"typeDescriptions": {
																"typeIdentifier": "t_contract$_IERC20Permit_$280",
																"typeString": "contract IERC20Permit"
															}
														},
														"id": 489,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "3145:6:4",
														"memberName": "nonces",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 273,
														"src": "3139:12:4",
														"typeDescriptions": {
															"typeIdentifier": "t_function_external_view$_t_address_$returns$_t_uint256_$",
															"typeString": "function (address) view external returns (uint256)"
														}
													},
													"id": 491,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "3139:19:4",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "3117:41:4"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 496,
															"name": "owner",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 471,
															"src": "3181:5:4",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 497,
															"name": "spender",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 473,
															"src": "3188:7:4",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 498,
															"name": "value",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 475,
															"src": "3197:5:4",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														{
															"id": 499,
															"name": "deadline",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 477,
															"src": "3204:8:4",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														{
															"id": 500,
															"name": "v",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 479,
															"src": "3214:1:4",
															"typeDescriptions": {
																"typeIdentifier": "t_uint8",
																"typeString": "uint8"
															}
														},
														{
															"id": 501,
															"name": "r",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 481,
															"src": "3217:1:4",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															}
														},
														{
															"id": 502,
															"name": "s",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 483,
															"src": "3220:1:4",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															{
																"typeIdentifier": "t_uint8",
																"typeString": "uint8"
															},
															{
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															},
															{
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															}
														],
														"expression": {
															"id": 493,
															"name": "token",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 469,
															"src": "3168:5:4",
															"typeDescriptions": {
																"typeIdentifier": "t_contract$_IERC20Permit_$280",
																"typeString": "contract IERC20Permit"
															}
														},
														"id": 495,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "3174:6:4",
														"memberName": "permit",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 265,
														"src": "3168:12:4",
														"typeDescriptions": {
															"typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_address_$_t_uint256_$_t_uint256_$_t_uint8_$_t_bytes32_$_t_bytes32_$returns$__$",
															"typeString": "function (address,address,uint256,uint256,uint8,bytes32,bytes32) external"
														}
													},
													"id": 503,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "3168:54:4",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 504,
												"nodeType": "ExpressionStatement",
												"src": "3168:54:4"
											},
											{
												"assignments": [
													506
												],
												"declarations": [
													{
														"constant": false,
														"id": 506,
														"mutability": "mutable",
														"name": "nonceAfter",
														"nameLocation": "3240:10:4",
														"nodeType": "VariableDeclaration",
														"scope": 521,
														"src": "3232:18:4",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 505,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "3232:7:4",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 511,
												"initialValue": {
													"arguments": [
														{
															"id": 509,
															"name": "owner",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 471,
															"src": "3266:5:4",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"expression": {
															"id": 507,
															"name": "token",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 469,
															"src": "3253:5:4",
															"typeDescriptions": {
																"typeIdentifier": "t_contract$_IERC20Permit_$280",
																"typeString": "contract IERC20Permit"
															}
														},
														"id": 508,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "3259:6:4",
														"memberName": "nonces",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 273,
														"src": "3253:12:4",
														"typeDescriptions": {
															"typeIdentifier": "t_function_external_view$_t_address_$returns$_t_uint256_$",
															"typeString": "function (address) view external returns (uint256)"
														}
													},
													"id": 510,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "3253:19:4",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "3232:40:4"
											},
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 517,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 513,
																"name": "nonceAfter",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 506,
																"src": "3290:10:4",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "==",
															"rightExpression": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 516,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"id": 514,
																	"name": "nonceBefore",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 487,
																	"src": "3304:11:4",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": "+",
																"rightExpression": {
																	"hexValue": "31",
																	"id": 515,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "3318:1:4",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_1_by_1",
																		"typeString": "int_const 1"
																	},
																	"value": "1"
																},
																"src": "3304:15:4",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "3290:29:4",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "5361666545524332303a207065726d697420646964206e6f742073756363656564",
															"id": 518,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "3321:35:4",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_cde8e927812a7a656f8f04e89ac4f4113d47940dd2125d11fcb8e0bd36bfc59d",
																"typeString": "literal_string \"SafeERC20: permit did not succeed\""
															},
															"value": "SafeERC20: permit did not succeed"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_cde8e927812a7a656f8f04e89ac4f4113d47940dd2125d11fcb8e0bd36bfc59d",
																"typeString": "literal_string \"SafeERC20: permit did not succeed\""
															}
														],
														"id": 512,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "3282:7:4",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 519,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "3282:75:4",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 520,
												"nodeType": "ExpressionStatement",
												"src": "3282:75:4"
											}
										]
									},
									"id": 522,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "safePermit",
									"nameLocation": "2901:10:4",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 484,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 469,
												"mutability": "mutable",
												"name": "token",
												"nameLocation": "2934:5:4",
												"nodeType": "VariableDeclaration",
												"scope": 522,
												"src": "2921:18:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_contract$_IERC20Permit_$280",
													"typeString": "contract IERC20Permit"
												},
												"typeName": {
													"id": 468,
													"nodeType": "UserDefinedTypeName",
													"pathNode": {
														"id": 467,
														"name": "IERC20Permit",
														"nameLocations": [
															"2921:12:4"
														],
														"nodeType": "IdentifierPath",
														"referencedDeclaration": 280,
														"src": "2921:12:4"
													},
													"referencedDeclaration": 280,
													"src": "2921:12:4",
													"typeDescriptions": {
														"typeIdentifier": "t_contract$_IERC20Permit_$280",
														"typeString": "contract IERC20Permit"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 471,
												"mutability": "mutable",
												"name": "owner",
												"nameLocation": "2957:5:4",
												"nodeType": "VariableDeclaration",
												"scope": 522,
												"src": "2949:13:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 470,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2949:7:4",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 473,
												"mutability": "mutable",
												"name": "spender",
												"nameLocation": "2980:7:4",
												"nodeType": "VariableDeclaration",
												"scope": 522,
												"src": "2972:15:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 472,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2972:7:4",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 475,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "3005:5:4",
												"nodeType": "VariableDeclaration",
												"scope": 522,
												"src": "2997:13:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 474,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2997:7:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 477,
												"mutability": "mutable",
												"name": "deadline",
												"nameLocation": "3028:8:4",
												"nodeType": "VariableDeclaration",
												"scope": 522,
												"src": "3020:16:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 476,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3020:7:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 479,
												"mutability": "mutable",
												"name": "v",
												"nameLocation": "3052:1:4",
												"nodeType": "VariableDeclaration",
												"scope": 522,
												"src": "3046:7:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint8",
													"typeString": "uint8"
												},
												"typeName": {
													"id": 478,
													"name": "uint8",
													"nodeType": "ElementaryTypeName",
													"src": "3046:5:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint8",
														"typeString": "uint8"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 481,
												"mutability": "mutable",
												"name": "r",
												"nameLocation": "3071:1:4",
												"nodeType": "VariableDeclaration",
												"scope": 522,
												"src": "3063:9:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												},
												"typeName": {
													"id": 480,
													"name": "bytes32",
													"nodeType": "ElementaryTypeName",
													"src": "3063:7:4",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 483,
												"mutability": "mutable",
												"name": "s",
												"nameLocation": "3090:1:4",
												"nodeType": "VariableDeclaration",
												"scope": 522,
												"src": "3082:9:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												},
												"typeName": {
													"id": 482,
													"name": "bytes32",
													"nodeType": "ElementaryTypeName",
													"src": "3082:7:4",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2911:186:4"
									},
									"returnParameters": {
										"id": 485,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "3107:0:4"
									},
									"scope": 561,
									"src": "2892:472:4",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 559,
										"nodeType": "Block",
										"src": "3817:636:4",
										"statements": [
											{
												"assignments": [
													532
												],
												"declarations": [
													{
														"constant": false,
														"id": 532,
														"mutability": "mutable",
														"name": "returndata",
														"nameLocation": "4179:10:4",
														"nodeType": "VariableDeclaration",
														"scope": 559,
														"src": "4166:23:4",
														"stateVariable": false,
														"storageLocation": "memory",
														"typeDescriptions": {
															"typeIdentifier": "t_bytes_memory_ptr",
															"typeString": "bytes"
														},
														"typeName": {
															"id": 531,
															"name": "bytes",
															"nodeType": "ElementaryTypeName",
															"src": "4166:5:4",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_storage_ptr",
																"typeString": "bytes"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 541,
												"initialValue": {
													"arguments": [
														{
															"id": 538,
															"name": "data",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 528,
															"src": "4220:4:4",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														},
														{
															"hexValue": "5361666545524332303a206c6f772d6c6576656c2063616c6c206661696c6564",
															"id": 539,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "4226:34:4",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_47fb62c2c272651d2f0f342bac006756b8ba07f21cc5cb87e0fbb9d50c0c585b",
																"typeString": "literal_string \"SafeERC20: low-level call failed\""
															},
															"value": "SafeERC20: low-level call failed"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															},
															{
																"typeIdentifier": "t_stringliteral_47fb62c2c272651d2f0f342bac006756b8ba07f21cc5cb87e0fbb9d50c0c585b",
																"typeString": "literal_string \"SafeERC20: low-level call failed\""
															}
														],
														"expression": {
															"arguments": [
																{
																	"id": 535,
																	"name": "token",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 526,
																	"src": "4200:5:4",
																	"typeDescriptions": {
																		"typeIdentifier": "t_contract$_IERC20_$244",
																		"typeString": "contract IERC20"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_contract$_IERC20_$244",
																		"typeString": "contract IERC20"
																	}
																],
																"id": 534,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "4192:7:4",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_address_$",
																	"typeString": "type(address)"
																},
																"typeName": {
																	"id": 533,
																	"name": "address",
																	"nodeType": "ElementaryTypeName",
																	"src": "4192:7:4",
																	"typeDescriptions": {}
																}
															},
															"id": 536,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "typeConversion",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "4192:14:4",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"id": 537,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "4207:12:4",
														"memberName": "functionCall",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 767,
														"src": "4192:27:4",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_bytes_memory_ptr_$_t_string_memory_ptr_$returns$_t_bytes_memory_ptr_$attached_to$_t_address_$",
															"typeString": "function (address,bytes memory,string memory) returns (bytes memory)"
														}
													},
													"id": 540,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "4192:69:4",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_memory_ptr",
														"typeString": "bytes memory"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "4166:95:4"
											},
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 545,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"expression": {
															"id": 542,
															"name": "returndata",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 532,
															"src": "4275:10:4",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														},
														"id": 543,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "4286:6:4",
														"memberName": "length",
														"nodeType": "MemberAccess",
														"src": "4275:17:4",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": ">",
													"rightExpression": {
														"hexValue": "30",
														"id": 544,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "4295:1:4",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_0_by_1",
															"typeString": "int_const 0"
														},
														"value": "0"
													},
													"src": "4275:21:4",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 558,
												"nodeType": "IfStatement",
												"src": "4271:176:4",
												"trueBody": {
													"id": 557,
													"nodeType": "Block",
													"src": "4298:149:4",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"id": 549,
																				"name": "returndata",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 532,
																				"src": "4370:10:4",
																				"typeDescriptions": {
																					"typeIdentifier": "t_bytes_memory_ptr",
																					"typeString": "bytes memory"
																				}
																			},
																			{
																				"components": [
																					{
																						"id": 551,
																						"isConstant": false,
																						"isLValue": false,
																						"isPure": true,
																						"lValueRequested": false,
																						"nodeType": "ElementaryTypeNameExpression",
																						"src": "4383:4:4",
																						"typeDescriptions": {
																							"typeIdentifier": "t_type$_t_bool_$",
																							"typeString": "type(bool)"
																						},
																						"typeName": {
																							"id": 550,
																							"name": "bool",
																							"nodeType": "ElementaryTypeName",
																							"src": "4383:4:4",
																							"typeDescriptions": {}
																						}
																					}
																				],
																				"id": 552,
																				"isConstant": false,
																				"isInlineArray": false,
																				"isLValue": false,
																				"isPure": true,
																				"lValueRequested": false,
																				"nodeType": "TupleExpression",
																				"src": "4382:6:4",
																				"typeDescriptions": {
																					"typeIdentifier": "t_type$_t_bool_$",
																					"typeString": "type(bool)"
																				}
																			}
																		],
																		"expression": {
																			"argumentTypes": [
																				{
																					"typeIdentifier": "t_bytes_memory_ptr",
																					"typeString": "bytes memory"
																				},
																				{
																					"typeIdentifier": "t_type$_t_bool_$",
																					"typeString": "type(bool)"
																				}
																			],
																			"expression": {
																				"id": 547,
																				"name": "abi",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 4294967295,
																				"src": "4359:3:4",
																				"typeDescriptions": {
																					"typeIdentifier": "t_magic_abi",
																					"typeString": "abi"
																				}
																			},
																			"id": 548,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"lValueRequested": false,
																			"memberLocation": "4363:6:4",
																			"memberName": "decode",
																			"nodeType": "MemberAccess",
																			"src": "4359:10:4",
																			"typeDescriptions": {
																				"typeIdentifier": "t_function_abidecode_pure$__$returns$__$",
																				"typeString": "function () pure"
																			}
																		},
																		"id": 553,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"kind": "functionCall",
																		"lValueRequested": false,
																		"nameLocations": [],
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "4359:30:4",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_bool",
																			"typeString": "bool"
																		}
																	},
																	{
																		"hexValue": "5361666545524332303a204552433230206f7065726174696f6e20646964206e6f742073756363656564",
																		"id": 554,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "string",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "4391:44:4",
																		"typeDescriptions": {
																			"typeIdentifier": "t_stringliteral_e11ad79d1e4a7f2e5f376964cb99e8e8f7904e3fc16a109f7a7ecb9aa7956dcd",
																			"typeString": "literal_string \"SafeERC20: ERC20 operation did not succeed\""
																		},
																		"value": "SafeERC20: ERC20 operation did not succeed"
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_bool",
																			"typeString": "bool"
																		},
																		{
																			"typeIdentifier": "t_stringliteral_e11ad79d1e4a7f2e5f376964cb99e8e8f7904e3fc16a109f7a7ecb9aa7956dcd",
																			"typeString": "literal_string \"SafeERC20: ERC20 operation did not succeed\""
																		}
																	],
																	"id": 546,
																	"name": "require",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [
																		4294967278,
																		4294967278
																	],
																	"referencedDeclaration": 4294967278,
																	"src": "4351:7:4",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
																		"typeString": "function (bool,string memory) pure"
																	}
																},
																"id": 555,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "4351:85:4",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$__$",
																	"typeString": "tuple()"
																}
															},
															"id": 556,
															"nodeType": "ExpressionStatement",
															"src": "4351:85:4"
														}
													]
												}
											}
										]
									},
									"documentation": {
										"id": 523,
										"nodeType": "StructuredDocumentation",
										"src": "3370:372:4",
										"text": " @dev Imitates a Solidity high-level call (i.e. a regular function call to a contract), relaxing the requirement\n on the return value: the return value is optional (but if data is returned, it must not be false).\n @param token The token targeted by the call.\n @param data The call data (encoded using abi.encode or one of its variants)."
									},
									"id": 560,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_callOptionalReturn",
									"nameLocation": "3756:19:4",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 529,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 526,
												"mutability": "mutable",
												"name": "token",
												"nameLocation": "3783:5:4",
												"nodeType": "VariableDeclaration",
												"scope": 560,
												"src": "3776:12:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_contract$_IERC20_$244",
													"typeString": "contract IERC20"
												},
												"typeName": {
													"id": 525,
													"nodeType": "UserDefinedTypeName",
													"pathNode": {
														"id": 524,
														"name": "IERC20",
														"nameLocations": [
															"3776:6:4"
														],
														"nodeType": "IdentifierPath",
														"referencedDeclaration": 244,
														"src": "3776:6:4"
													},
													"referencedDeclaration": 244,
													"src": "3776:6:4",
													"typeDescriptions": {
														"typeIdentifier": "t_contract$_IERC20_$244",
														"typeString": "contract IERC20"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 528,
												"mutability": "mutable",
												"name": "data",
												"nameLocation": "3803:4:4",
												"nodeType": "VariableDeclaration",
												"scope": 560,
												"src": "3790:17:4",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 527,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "3790:5:4",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3775:33:4"
									},
									"returnParameters": {
										"id": 530,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "3817:0:4"
									},
									"scope": 561,
									"src": "3747:706:4",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "private"
								}
							],
							"scope": 562,
							"src": "707:3748:4",
							"usedErrors": []
						}
					],
					"src": "115:4341:4"
				},
				"id": 4
			},
			"@openzeppelin/contracts/token/ERC721/IERC721.sol": {
				"ast": {
					"absolutePath": "@openzeppelin/contracts/token/ERC721/IERC721.sol",
					"exportedSymbols": {
						"IERC165": [
							1041
						],
						"IERC721": [
							677
						]
					},
					"id": 678,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 563,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".0"
							],
							"nodeType": "PragmaDirective",
							"src": "108:23:5"
						},
						{
							"absolutePath": "@openzeppelin/contracts/utils/introspection/IERC165.sol",
							"file": "../../utils/introspection/IERC165.sol",
							"id": 564,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 678,
							"sourceUnit": 1042,
							"src": "133:47:5",
							"symbolAliases": [],
							"unitAlias": ""
						},
						{
							"abstract": false,
							"baseContracts": [
								{
									"baseName": {
										"id": 566,
										"name": "IERC165",
										"nameLocations": [
											"271:7:5"
										],
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 1041,
										"src": "271:7:5"
									},
									"id": 567,
									"nodeType": "InheritanceSpecifier",
									"src": "271:7:5"
								}
							],
							"canonicalName": "IERC721",
							"contractDependencies": [],
							"contractKind": "interface",
							"documentation": {
								"id": 565,
								"nodeType": "StructuredDocumentation",
								"src": "182:67:5",
								"text": " @dev Required interface of an ERC721 compliant contract."
							},
							"fullyImplemented": false,
							"id": 677,
							"linearizedBaseContracts": [
								677,
								1041
							],
							"name": "IERC721",
							"nameLocation": "260:7:5",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"anonymous": false,
									"documentation": {
										"id": 568,
										"nodeType": "StructuredDocumentation",
										"src": "285:88:5",
										"text": " @dev Emitted when `tokenId` token is transferred from `from` to `to`."
									},
									"eventSelector": "ddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef",
									"id": 576,
									"name": "Transfer",
									"nameLocation": "384:8:5",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 575,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 570,
												"indexed": true,
												"mutability": "mutable",
												"name": "from",
												"nameLocation": "409:4:5",
												"nodeType": "VariableDeclaration",
												"scope": 576,
												"src": "393:20:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 569,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "393:7:5",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 572,
												"indexed": true,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "431:2:5",
												"nodeType": "VariableDeclaration",
												"scope": 576,
												"src": "415:18:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 571,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "415:7:5",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 574,
												"indexed": true,
												"mutability": "mutable",
												"name": "tokenId",
												"nameLocation": "451:7:5",
												"nodeType": "VariableDeclaration",
												"scope": 576,
												"src": "435:23:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 573,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "435:7:5",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "392:67:5"
									},
									"src": "378:82:5"
								},
								{
									"anonymous": false,
									"documentation": {
										"id": 577,
										"nodeType": "StructuredDocumentation",
										"src": "466:94:5",
										"text": " @dev Emitted when `owner` enables `approved` to manage the `tokenId` token."
									},
									"eventSelector": "8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b925",
									"id": 585,
									"name": "Approval",
									"nameLocation": "571:8:5",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 584,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 579,
												"indexed": true,
												"mutability": "mutable",
												"name": "owner",
												"nameLocation": "596:5:5",
												"nodeType": "VariableDeclaration",
												"scope": 585,
												"src": "580:21:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 578,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "580:7:5",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 581,
												"indexed": true,
												"mutability": "mutable",
												"name": "approved",
												"nameLocation": "619:8:5",
												"nodeType": "VariableDeclaration",
												"scope": 585,
												"src": "603:24:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 580,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "603:7:5",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 583,
												"indexed": true,
												"mutability": "mutable",
												"name": "tokenId",
												"nameLocation": "645:7:5",
												"nodeType": "VariableDeclaration",
												"scope": 585,
												"src": "629:23:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 582,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "629:7:5",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "579:74:5"
									},
									"src": "565:89:5"
								},
								{
									"anonymous": false,
									"documentation": {
										"id": 586,
										"nodeType": "StructuredDocumentation",
										"src": "660:117:5",
										"text": " @dev Emitted when `owner` enables or disables (`approved`) `operator` to manage all of its assets."
									},
									"eventSelector": "17307eab39ab6107e8899845ad3d59bd9653f200f220920489ca2b5937696c31",
									"id": 594,
									"name": "ApprovalForAll",
									"nameLocation": "788:14:5",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 593,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 588,
												"indexed": true,
												"mutability": "mutable",
												"name": "owner",
												"nameLocation": "819:5:5",
												"nodeType": "VariableDeclaration",
												"scope": 594,
												"src": "803:21:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 587,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "803:7:5",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 590,
												"indexed": true,
												"mutability": "mutable",
												"name": "operator",
												"nameLocation": "842:8:5",
												"nodeType": "VariableDeclaration",
												"scope": 594,
												"src": "826:24:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 589,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "826:7:5",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 592,
												"indexed": false,
												"mutability": "mutable",
												"name": "approved",
												"nameLocation": "857:8:5",
												"nodeType": "VariableDeclaration",
												"scope": 594,
												"src": "852:13:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 591,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "852:4:5",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "802:64:5"
									},
									"src": "782:85:5"
								},
								{
									"documentation": {
										"id": 595,
										"nodeType": "StructuredDocumentation",
										"src": "873:76:5",
										"text": " @dev Returns the number of tokens in ``owner``'s account."
									},
									"functionSelector": "70a08231",
									"id": 602,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "balanceOf",
									"nameLocation": "963:9:5",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 598,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 597,
												"mutability": "mutable",
												"name": "owner",
												"nameLocation": "981:5:5",
												"nodeType": "VariableDeclaration",
												"scope": 602,
												"src": "973:13:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 596,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "973:7:5",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "972:15:5"
									},
									"returnParameters": {
										"id": 601,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 600,
												"mutability": "mutable",
												"name": "balance",
												"nameLocation": "1019:7:5",
												"nodeType": "VariableDeclaration",
												"scope": 602,
												"src": "1011:15:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 599,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1011:7:5",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1010:17:5"
									},
									"scope": 677,
									"src": "954:74:5",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 603,
										"nodeType": "StructuredDocumentation",
										"src": "1034:131:5",
										"text": " @dev Returns the owner of the `tokenId` token.\n Requirements:\n - `tokenId` must exist."
									},
									"functionSelector": "6352211e",
									"id": 610,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "ownerOf",
									"nameLocation": "1179:7:5",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 606,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 605,
												"mutability": "mutable",
												"name": "tokenId",
												"nameLocation": "1195:7:5",
												"nodeType": "VariableDeclaration",
												"scope": 610,
												"src": "1187:15:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 604,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1187:7:5",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1186:17:5"
									},
									"returnParameters": {
										"id": 609,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 608,
												"mutability": "mutable",
												"name": "owner",
												"nameLocation": "1235:5:5",
												"nodeType": "VariableDeclaration",
												"scope": 610,
												"src": "1227:13:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 607,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1227:7:5",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1226:15:5"
									},
									"scope": 677,
									"src": "1170:72:5",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 611,
										"nodeType": "StructuredDocumentation",
										"src": "1248:556:5",
										"text": " @dev Safely transfers `tokenId` token from `from` to `to`.\n Requirements:\n - `from` cannot be the zero address.\n - `to` cannot be the zero address.\n - `tokenId` token must exist and be owned by `from`.\n - If the caller is not `from`, it must be approved to move this token by either {approve} or {setApprovalForAll}.\n - If `to` refers to a smart contract, it must implement {IERC721Receiver-onERC721Received}, which is called upon a safe transfer.\n Emits a {Transfer} event."
									},
									"functionSelector": "b88d4fde",
									"id": 622,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "safeTransferFrom",
									"nameLocation": "1818:16:5",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 620,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 613,
												"mutability": "mutable",
												"name": "from",
												"nameLocation": "1852:4:5",
												"nodeType": "VariableDeclaration",
												"scope": 622,
												"src": "1844:12:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 612,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1844:7:5",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 615,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "1874:2:5",
												"nodeType": "VariableDeclaration",
												"scope": 622,
												"src": "1866:10:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 614,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1866:7:5",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 617,
												"mutability": "mutable",
												"name": "tokenId",
												"nameLocation": "1894:7:5",
												"nodeType": "VariableDeclaration",
												"scope": 622,
												"src": "1886:15:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 616,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1886:7:5",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 619,
												"mutability": "mutable",
												"name": "data",
												"nameLocation": "1926:4:5",
												"nodeType": "VariableDeclaration",
												"scope": 622,
												"src": "1911:19:5",
												"stateVariable": false,
												"storageLocation": "calldata",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_calldata_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 618,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "1911:5:5",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1834:102:5"
									},
									"returnParameters": {
										"id": 621,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1945:0:5"
									},
									"scope": 677,
									"src": "1809:137:5",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 623,
										"nodeType": "StructuredDocumentation",
										"src": "1952:687:5",
										"text": " @dev Safely transfers `tokenId` token from `from` to `to`, checking first that contract recipients\n are aware of the ERC721 protocol to prevent tokens from being forever locked.\n Requirements:\n - `from` cannot be the zero address.\n - `to` cannot be the zero address.\n - `tokenId` token must exist and be owned by `from`.\n - If the caller is not `from`, it must have been allowed to move this token by either {approve} or {setApprovalForAll}.\n - If `to` refers to a smart contract, it must implement {IERC721Receiver-onERC721Received}, which is called upon a safe transfer.\n Emits a {Transfer} event."
									},
									"functionSelector": "42842e0e",
									"id": 632,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "safeTransferFrom",
									"nameLocation": "2653:16:5",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 630,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 625,
												"mutability": "mutable",
												"name": "from",
												"nameLocation": "2687:4:5",
												"nodeType": "VariableDeclaration",
												"scope": 632,
												"src": "2679:12:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 624,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2679:7:5",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 627,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "2709:2:5",
												"nodeType": "VariableDeclaration",
												"scope": 632,
												"src": "2701:10:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 626,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2701:7:5",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 629,
												"mutability": "mutable",
												"name": "tokenId",
												"nameLocation": "2729:7:5",
												"nodeType": "VariableDeclaration",
												"scope": 632,
												"src": "2721:15:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 628,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2721:7:5",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2669:73:5"
									},
									"returnParameters": {
										"id": 631,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2751:0:5"
									},
									"scope": 677,
									"src": "2644:108:5",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 633,
										"nodeType": "StructuredDocumentation",
										"src": "2758:732:5",
										"text": " @dev Transfers `tokenId` token from `from` to `to`.\n WARNING: Note that the caller is responsible to confirm that the recipient is capable of receiving ERC721\n or else they may be permanently lost. Usage of {safeTransferFrom} prevents loss, though the caller must\n understand this adds an external call which potentially creates a reentrancy vulnerability.\n Requirements:\n - `from` cannot be the zero address.\n - `to` cannot be the zero address.\n - `tokenId` token must be owned by `from`.\n - If the caller is not `from`, it must be approved to move this token by either {approve} or {setApprovalForAll}.\n Emits a {Transfer} event."
									},
									"functionSelector": "23b872dd",
									"id": 642,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "transferFrom",
									"nameLocation": "3504:12:5",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 640,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 635,
												"mutability": "mutable",
												"name": "from",
												"nameLocation": "3534:4:5",
												"nodeType": "VariableDeclaration",
												"scope": 642,
												"src": "3526:12:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 634,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "3526:7:5",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 637,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "3556:2:5",
												"nodeType": "VariableDeclaration",
												"scope": 642,
												"src": "3548:10:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 636,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "3548:7:5",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 639,
												"mutability": "mutable",
												"name": "tokenId",
												"nameLocation": "3576:7:5",
												"nodeType": "VariableDeclaration",
												"scope": 642,
												"src": "3568:15:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 638,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3568:7:5",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3516:73:5"
									},
									"returnParameters": {
										"id": 641,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "3598:0:5"
									},
									"scope": 677,
									"src": "3495:104:5",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 643,
										"nodeType": "StructuredDocumentation",
										"src": "3605:452:5",
										"text": " @dev Gives permission to `to` to transfer `tokenId` token to another account.\n The approval is cleared when the token is transferred.\n Only a single account can be approved at a time, so approving the zero address clears previous approvals.\n Requirements:\n - The caller must own the token or be an approved operator.\n - `tokenId` must exist.\n Emits an {Approval} event."
									},
									"functionSelector": "095ea7b3",
									"id": 650,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "approve",
									"nameLocation": "4071:7:5",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 648,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 645,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "4087:2:5",
												"nodeType": "VariableDeclaration",
												"scope": 650,
												"src": "4079:10:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 644,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "4079:7:5",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 647,
												"mutability": "mutable",
												"name": "tokenId",
												"nameLocation": "4099:7:5",
												"nodeType": "VariableDeclaration",
												"scope": 650,
												"src": "4091:15:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 646,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "4091:7:5",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4078:29:5"
									},
									"returnParameters": {
										"id": 649,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "4116:0:5"
									},
									"scope": 677,
									"src": "4062:55:5",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 651,
										"nodeType": "StructuredDocumentation",
										"src": "4123:309:5",
										"text": " @dev Approve or remove `operator` as an operator for the caller.\n Operators can call {transferFrom} or {safeTransferFrom} for any token owned by the caller.\n Requirements:\n - The `operator` cannot be the caller.\n Emits an {ApprovalForAll} event."
									},
									"functionSelector": "a22cb465",
									"id": 658,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "setApprovalForAll",
									"nameLocation": "4446:17:5",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 656,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 653,
												"mutability": "mutable",
												"name": "operator",
												"nameLocation": "4472:8:5",
												"nodeType": "VariableDeclaration",
												"scope": 658,
												"src": "4464:16:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 652,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "4464:7:5",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 655,
												"mutability": "mutable",
												"name": "_approved",
												"nameLocation": "4487:9:5",
												"nodeType": "VariableDeclaration",
												"scope": 658,
												"src": "4482:14:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 654,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "4482:4:5",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4463:34:5"
									},
									"returnParameters": {
										"id": 657,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "4506:0:5"
									},
									"scope": 677,
									"src": "4437:70:5",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 659,
										"nodeType": "StructuredDocumentation",
										"src": "4513:139:5",
										"text": " @dev Returns the account approved for `tokenId` token.\n Requirements:\n - `tokenId` must exist."
									},
									"functionSelector": "081812fc",
									"id": 666,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "getApproved",
									"nameLocation": "4666:11:5",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 662,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 661,
												"mutability": "mutable",
												"name": "tokenId",
												"nameLocation": "4686:7:5",
												"nodeType": "VariableDeclaration",
												"scope": 666,
												"src": "4678:15:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 660,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "4678:7:5",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4677:17:5"
									},
									"returnParameters": {
										"id": 665,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 664,
												"mutability": "mutable",
												"name": "operator",
												"nameLocation": "4726:8:5",
												"nodeType": "VariableDeclaration",
												"scope": 666,
												"src": "4718:16:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 663,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "4718:7:5",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4717:18:5"
									},
									"scope": 677,
									"src": "4657:79:5",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 667,
										"nodeType": "StructuredDocumentation",
										"src": "4742:138:5",
										"text": " @dev Returns if the `operator` is allowed to manage all of the assets of `owner`.\n See {setApprovalForAll}"
									},
									"functionSelector": "e985e9c5",
									"id": 676,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "isApprovedForAll",
									"nameLocation": "4894:16:5",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 672,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 669,
												"mutability": "mutable",
												"name": "owner",
												"nameLocation": "4919:5:5",
												"nodeType": "VariableDeclaration",
												"scope": 676,
												"src": "4911:13:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 668,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "4911:7:5",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 671,
												"mutability": "mutable",
												"name": "operator",
												"nameLocation": "4934:8:5",
												"nodeType": "VariableDeclaration",
												"scope": 676,
												"src": "4926:16:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 670,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "4926:7:5",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4910:33:5"
									},
									"returnParameters": {
										"id": 675,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 674,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 676,
												"src": "4967:4:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 673,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "4967:4:5",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4966:6:5"
									},
									"scope": 677,
									"src": "4885:88:5",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								}
							],
							"scope": 678,
							"src": "250:4725:5",
							"usedErrors": []
						}
					],
					"src": "108:4868:5"
				},
				"id": 5
			},
			"@openzeppelin/contracts/utils/Address.sol": {
				"ast": {
					"absolutePath": "@openzeppelin/contracts/utils/Address.sol",
					"exportedSymbols": {
						"Address": [
							1007
						]
					},
					"id": 1008,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 679,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".1"
							],
							"nodeType": "PragmaDirective",
							"src": "101:23:6"
						},
						{
							"abstract": false,
							"baseContracts": [],
							"canonicalName": "Address",
							"contractDependencies": [],
							"contractKind": "library",
							"documentation": {
								"id": 680,
								"nodeType": "StructuredDocumentation",
								"src": "126:67:6",
								"text": " @dev Collection of functions related to the address type"
							},
							"fullyImplemented": true,
							"id": 1007,
							"linearizedBaseContracts": [
								1007
							],
							"name": "Address",
							"nameLocation": "202:7:6",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"body": {
										"id": 694,
										"nodeType": "Block",
										"src": "1241:254:6",
										"statements": [
											{
												"expression": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 692,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"expression": {
															"expression": {
																"id": 688,
																"name": "account",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 683,
																"src": "1465:7:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"id": 689,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "1473:4:6",
															"memberName": "code",
															"nodeType": "MemberAccess",
															"src": "1465:12:6",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														},
														"id": 690,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "1478:6:6",
														"memberName": "length",
														"nodeType": "MemberAccess",
														"src": "1465:19:6",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": ">",
													"rightExpression": {
														"hexValue": "30",
														"id": 691,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "1487:1:6",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_0_by_1",
															"typeString": "int_const 0"
														},
														"value": "0"
													},
													"src": "1465:23:6",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"functionReturnParameters": 687,
												"id": 693,
												"nodeType": "Return",
												"src": "1458:30:6"
											}
										]
									},
									"documentation": {
										"id": 681,
										"nodeType": "StructuredDocumentation",
										"src": "216:954:6",
										"text": " @dev Returns true if `account` is a contract.\n [IMPORTANT]\n ====\n It is unsafe to assume that an address for which this function returns\n false is an externally-owned account (EOA) and not a contract.\n Among others, `isContract` will return false for the following\n types of addresses:\n  - an externally-owned account\n  - a contract in construction\n  - an address where a contract will be created\n  - an address where a contract lived, but was destroyed\n ====\n [IMPORTANT]\n ====\n You shouldn't rely on `isContract` to protect against flash loan attacks!\n Preventing calls from contracts is highly discouraged. It breaks composability, breaks support for smart wallets\n like Gnosis Safe, and does not provide security since it can be circumvented by calling from a contract\n constructor.\n ===="
									},
									"id": 695,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "isContract",
									"nameLocation": "1184:10:6",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 684,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 683,
												"mutability": "mutable",
												"name": "account",
												"nameLocation": "1203:7:6",
												"nodeType": "VariableDeclaration",
												"scope": 695,
												"src": "1195:15:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 682,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1195:7:6",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1194:17:6"
									},
									"returnParameters": {
										"id": 687,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 686,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 695,
												"src": "1235:4:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 685,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "1235:4:6",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1234:6:6"
									},
									"scope": 1007,
									"src": "1175:320:6",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 728,
										"nodeType": "Block",
										"src": "2483:241:6",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 710,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"expression": {
																	"arguments": [
																		{
																			"id": 706,
																			"name": "this",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 4294967268,
																			"src": "2509:4:6",
																			"typeDescriptions": {
																				"typeIdentifier": "t_contract$_Address_$1007",
																				"typeString": "library Address"
																			}
																		}
																	],
																	"expression": {
																		"argumentTypes": [
																			{
																				"typeIdentifier": "t_contract$_Address_$1007",
																				"typeString": "library Address"
																			}
																		],
																		"id": 705,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"lValueRequested": false,
																		"nodeType": "ElementaryTypeNameExpression",
																		"src": "2501:7:6",
																		"typeDescriptions": {
																			"typeIdentifier": "t_type$_t_address_$",
																			"typeString": "type(address)"
																		},
																		"typeName": {
																			"id": 704,
																			"name": "address",
																			"nodeType": "ElementaryTypeName",
																			"src": "2501:7:6",
																			"typeDescriptions": {}
																		}
																	},
																	"id": 707,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"kind": "typeConversion",
																	"lValueRequested": false,
																	"nameLocations": [],
																	"names": [],
																	"nodeType": "FunctionCall",
																	"src": "2501:13:6",
																	"tryCall": false,
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																"id": 708,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"memberLocation": "2515:7:6",
																"memberName": "balance",
																"nodeType": "MemberAccess",
																"src": "2501:21:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">=",
															"rightExpression": {
																"id": 709,
																"name": "amount",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 700,
																"src": "2526:6:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "2501:31:6",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "416464726573733a20696e73756666696369656e742062616c616e6365",
															"id": 711,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "2534:31:6",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_5597a22abd0ef5332f8053862eb236db7590f17e2b93a53f63a103becfb561f9",
																"typeString": "literal_string \"Address: insufficient balance\""
															},
															"value": "Address: insufficient balance"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_5597a22abd0ef5332f8053862eb236db7590f17e2b93a53f63a103becfb561f9",
																"typeString": "literal_string \"Address: insufficient balance\""
															}
														],
														"id": 703,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "2493:7:6",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 712,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2493:73:6",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 713,
												"nodeType": "ExpressionStatement",
												"src": "2493:73:6"
											},
											{
												"assignments": [
													715,
													null
												],
												"declarations": [
													{
														"constant": false,
														"id": 715,
														"mutability": "mutable",
														"name": "success",
														"nameLocation": "2583:7:6",
														"nodeType": "VariableDeclaration",
														"scope": 728,
														"src": "2578:12:6",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														},
														"typeName": {
															"id": 714,
															"name": "bool",
															"nodeType": "ElementaryTypeName",
															"src": "2578:4:6",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"visibility": "internal"
													},
													null
												],
												"id": 722,
												"initialValue": {
													"arguments": [
														{
															"hexValue": "",
															"id": 720,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "2626:2:6",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470",
																"typeString": "literal_string \"\""
															},
															"value": ""
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470",
																"typeString": "literal_string \"\""
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470",
																	"typeString": "literal_string \"\""
																}
															],
															"expression": {
																"id": 716,
																"name": "recipient",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 698,
																"src": "2596:9:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_address_payable",
																	"typeString": "address payable"
																}
															},
															"id": 717,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "2606:4:6",
															"memberName": "call",
															"nodeType": "MemberAccess",
															"src": "2596:14:6",
															"typeDescriptions": {
																"typeIdentifier": "t_function_barecall_payable$_t_bytes_memory_ptr_$returns$_t_bool_$_t_bytes_memory_ptr_$",
																"typeString": "function (bytes memory) payable returns (bool,bytes memory)"
															}
														},
														"id": 719,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"names": [
															"value"
														],
														"nodeType": "FunctionCallOptions",
														"options": [
															{
																"id": 718,
																"name": "amount",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 700,
																"src": "2618:6:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															}
														],
														"src": "2596:29:6",
														"typeDescriptions": {
															"typeIdentifier": "t_function_barecall_payable$_t_bytes_memory_ptr_$returns$_t_bool_$_t_bytes_memory_ptr_$value",
															"typeString": "function (bytes memory) payable returns (bool,bytes memory)"
														}
													},
													"id": 721,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2596:33:6",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$_t_bool_$_t_bytes_memory_ptr_$",
														"typeString": "tuple(bool,bytes memory)"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "2577:52:6"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 724,
															"name": "success",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 715,
															"src": "2647:7:6",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "416464726573733a20756e61626c6520746f2073656e642076616c75652c20726563697069656e74206d61792068617665207265766572746564",
															"id": 725,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "2656:60:6",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_51ddaa38748c0a1144620fb5bfe8edab31ea437571ad591a7734bbfd0429aeae",
																"typeString": "literal_string \"Address: unable to send value, recipient may have reverted\""
															},
															"value": "Address: unable to send value, recipient may have reverted"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_51ddaa38748c0a1144620fb5bfe8edab31ea437571ad591a7734bbfd0429aeae",
																"typeString": "literal_string \"Address: unable to send value, recipient may have reverted\""
															}
														],
														"id": 723,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "2639:7:6",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 726,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2639:78:6",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 727,
												"nodeType": "ExpressionStatement",
												"src": "2639:78:6"
											}
										]
									},
									"documentation": {
										"id": 696,
										"nodeType": "StructuredDocumentation",
										"src": "1501:906:6",
										"text": " @dev Replacement for Solidity's `transfer`: sends `amount` wei to\n `recipient`, forwarding all available gas and reverting on errors.\n https://eips.ethereum.org/EIPS/eip-1884[EIP1884] increases the gas cost\n of certain opcodes, possibly making contracts go over the 2300 gas limit\n imposed by `transfer`, making them unable to receive funds via\n `transfer`. {sendValue} removes this limitation.\n https://diligence.consensys.net/posts/2019/09/stop-using-soliditys-transfer-now/[Learn more].\n IMPORTANT: because control is transferred to `recipient`, care must be\n taken to not create reentrancy vulnerabilities. Consider using\n {ReentrancyGuard} or the\n https://solidity.readthedocs.io/en/v0.5.11/security-considerations.html#use-the-checks-effects-interactions-pattern[checks-effects-interactions pattern]."
									},
									"id": 729,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "sendValue",
									"nameLocation": "2421:9:6",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 701,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 698,
												"mutability": "mutable",
												"name": "recipient",
												"nameLocation": "2447:9:6",
												"nodeType": "VariableDeclaration",
												"scope": 729,
												"src": "2431:25:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address_payable",
													"typeString": "address payable"
												},
												"typeName": {
													"id": 697,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2431:15:6",
													"stateMutability": "payable",
													"typeDescriptions": {
														"typeIdentifier": "t_address_payable",
														"typeString": "address payable"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 700,
												"mutability": "mutable",
												"name": "amount",
												"nameLocation": "2466:6:6",
												"nodeType": "VariableDeclaration",
												"scope": 729,
												"src": "2458:14:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 699,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2458:7:6",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2430:43:6"
									},
									"returnParameters": {
										"id": 702,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2483:0:6"
									},
									"scope": 1007,
									"src": "2412:312:6",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 746,
										"nodeType": "Block",
										"src": "3555:96:6",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"id": 740,
															"name": "target",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 732,
															"src": "3594:6:6",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 741,
															"name": "data",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 734,
															"src": "3602:4:6",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														},
														{
															"hexValue": "30",
															"id": 742,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "number",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "3608:1:6",
															"typeDescriptions": {
																"typeIdentifier": "t_rational_0_by_1",
																"typeString": "int_const 0"
															},
															"value": "0"
														},
														{
															"hexValue": "416464726573733a206c6f772d6c6576656c2063616c6c206661696c6564",
															"id": 743,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "3611:32:6",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_24d7ab5d382116e64324f19950ca9340b8af1ddeb09a8d026e0a3c6a01dcc9df",
																"typeString": "literal_string \"Address: low-level call failed\""
															},
															"value": "Address: low-level call failed"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															},
															{
																"typeIdentifier": "t_rational_0_by_1",
																"typeString": "int_const 0"
															},
															{
																"typeIdentifier": "t_stringliteral_24d7ab5d382116e64324f19950ca9340b8af1ddeb09a8d026e0a3c6a01dcc9df",
																"typeString": "literal_string \"Address: low-level call failed\""
															}
														],
														"id": 739,
														"name": "functionCallWithValue",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															787,
															831
														],
														"referencedDeclaration": 831,
														"src": "3572:21:6",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_bytes_memory_ptr_$_t_uint256_$_t_string_memory_ptr_$returns$_t_bytes_memory_ptr_$",
															"typeString": "function (address,bytes memory,uint256,string memory) returns (bytes memory)"
														}
													},
													"id": 744,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "3572:72:6",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_memory_ptr",
														"typeString": "bytes memory"
													}
												},
												"functionReturnParameters": 738,
												"id": 745,
												"nodeType": "Return",
												"src": "3565:79:6"
											}
										]
									},
									"documentation": {
										"id": 730,
										"nodeType": "StructuredDocumentation",
										"src": "2730:731:6",
										"text": " @dev Performs a Solidity function call using a low level `call`. A\n plain `call` is an unsafe replacement for a function call: use this\n function instead.\n If `target` reverts with a revert reason, it is bubbled up by this\n function (like regular Solidity function calls).\n Returns the raw returned data. To convert to the expected return value,\n use https://solidity.readthedocs.io/en/latest/units-and-global-variables.html?highlight=abi.decode#abi-encoding-and-decoding-functions[`abi.decode`].\n Requirements:\n - `target` must be a contract.\n - calling `target` with `data` must not revert.\n _Available since v3.1._"
									},
									"id": 747,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "functionCall",
									"nameLocation": "3475:12:6",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 735,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 732,
												"mutability": "mutable",
												"name": "target",
												"nameLocation": "3496:6:6",
												"nodeType": "VariableDeclaration",
												"scope": 747,
												"src": "3488:14:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 731,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "3488:7:6",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 734,
												"mutability": "mutable",
												"name": "data",
												"nameLocation": "3517:4:6",
												"nodeType": "VariableDeclaration",
												"scope": 747,
												"src": "3504:17:6",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 733,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "3504:5:6",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3487:35:6"
									},
									"returnParameters": {
										"id": 738,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 737,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 747,
												"src": "3541:12:6",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 736,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "3541:5:6",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3540:14:6"
									},
									"scope": 1007,
									"src": "3466:185:6",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 766,
										"nodeType": "Block",
										"src": "4020:76:6",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"id": 760,
															"name": "target",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 750,
															"src": "4059:6:6",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 761,
															"name": "data",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 752,
															"src": "4067:4:6",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														},
														{
															"hexValue": "30",
															"id": 762,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "number",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "4073:1:6",
															"typeDescriptions": {
																"typeIdentifier": "t_rational_0_by_1",
																"typeString": "int_const 0"
															},
															"value": "0"
														},
														{
															"id": 763,
															"name": "errorMessage",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 754,
															"src": "4076:12:6",
															"typeDescriptions": {
																"typeIdentifier": "t_string_memory_ptr",
																"typeString": "string memory"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															},
															{
																"typeIdentifier": "t_rational_0_by_1",
																"typeString": "int_const 0"
															},
															{
																"typeIdentifier": "t_string_memory_ptr",
																"typeString": "string memory"
															}
														],
														"id": 759,
														"name": "functionCallWithValue",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															787,
															831
														],
														"referencedDeclaration": 831,
														"src": "4037:21:6",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_bytes_memory_ptr_$_t_uint256_$_t_string_memory_ptr_$returns$_t_bytes_memory_ptr_$",
															"typeString": "function (address,bytes memory,uint256,string memory) returns (bytes memory)"
														}
													},
													"id": 764,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "4037:52:6",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_memory_ptr",
														"typeString": "bytes memory"
													}
												},
												"functionReturnParameters": 758,
												"id": 765,
												"nodeType": "Return",
												"src": "4030:59:6"
											}
										]
									},
									"documentation": {
										"id": 748,
										"nodeType": "StructuredDocumentation",
										"src": "3657:211:6",
										"text": " @dev Same as {xref-Address-functionCall-address-bytes-}[`functionCall`], but with\n `errorMessage` as a fallback revert reason when `target` reverts.\n _Available since v3.1._"
									},
									"id": 767,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "functionCall",
									"nameLocation": "3882:12:6",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 755,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 750,
												"mutability": "mutable",
												"name": "target",
												"nameLocation": "3912:6:6",
												"nodeType": "VariableDeclaration",
												"scope": 767,
												"src": "3904:14:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 749,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "3904:7:6",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 752,
												"mutability": "mutable",
												"name": "data",
												"nameLocation": "3941:4:6",
												"nodeType": "VariableDeclaration",
												"scope": 767,
												"src": "3928:17:6",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 751,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "3928:5:6",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 754,
												"mutability": "mutable",
												"name": "errorMessage",
												"nameLocation": "3969:12:6",
												"nodeType": "VariableDeclaration",
												"scope": 767,
												"src": "3955:26:6",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 753,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "3955:6:6",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3894:93:6"
									},
									"returnParameters": {
										"id": 758,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 757,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 767,
												"src": "4006:12:6",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 756,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "4006:5:6",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4005:14:6"
									},
									"scope": 1007,
									"src": "3873:223:6",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 786,
										"nodeType": "Block",
										"src": "4601:111:6",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"id": 780,
															"name": "target",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 770,
															"src": "4640:6:6",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 781,
															"name": "data",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 772,
															"src": "4648:4:6",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														},
														{
															"id": 782,
															"name": "value",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 774,
															"src": "4654:5:6",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														{
															"hexValue": "416464726573733a206c6f772d6c6576656c2063616c6c20776974682076616c7565206661696c6564",
															"id": 783,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "4661:43:6",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_88a4a0b5e975840320a0475d4027005235904fdb5ece94df156f3d717cb2dbfc",
																"typeString": "literal_string \"Address: low-level call with value failed\""
															},
															"value": "Address: low-level call with value failed"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															{
																"typeIdentifier": "t_stringliteral_88a4a0b5e975840320a0475d4027005235904fdb5ece94df156f3d717cb2dbfc",
																"typeString": "literal_string \"Address: low-level call with value failed\""
															}
														],
														"id": 779,
														"name": "functionCallWithValue",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															787,
															831
														],
														"referencedDeclaration": 831,
														"src": "4618:21:6",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_bytes_memory_ptr_$_t_uint256_$_t_string_memory_ptr_$returns$_t_bytes_memory_ptr_$",
															"typeString": "function (address,bytes memory,uint256,string memory) returns (bytes memory)"
														}
													},
													"id": 784,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "4618:87:6",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_memory_ptr",
														"typeString": "bytes memory"
													}
												},
												"functionReturnParameters": 778,
												"id": 785,
												"nodeType": "Return",
												"src": "4611:94:6"
											}
										]
									},
									"documentation": {
										"id": 768,
										"nodeType": "StructuredDocumentation",
										"src": "4102:351:6",
										"text": " @dev Same as {xref-Address-functionCall-address-bytes-}[`functionCall`],\n but also transferring `value` wei to `target`.\n Requirements:\n - the calling contract must have an ETH balance of at least `value`.\n - the called Solidity function must be `payable`.\n _Available since v3.1._"
									},
									"id": 787,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "functionCallWithValue",
									"nameLocation": "4467:21:6",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 775,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 770,
												"mutability": "mutable",
												"name": "target",
												"nameLocation": "4506:6:6",
												"nodeType": "VariableDeclaration",
												"scope": 787,
												"src": "4498:14:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 769,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "4498:7:6",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 772,
												"mutability": "mutable",
												"name": "data",
												"nameLocation": "4535:4:6",
												"nodeType": "VariableDeclaration",
												"scope": 787,
												"src": "4522:17:6",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 771,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "4522:5:6",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 774,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "4557:5:6",
												"nodeType": "VariableDeclaration",
												"scope": 787,
												"src": "4549:13:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 773,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "4549:7:6",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4488:80:6"
									},
									"returnParameters": {
										"id": 778,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 777,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 787,
												"src": "4587:12:6",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 776,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "4587:5:6",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4586:14:6"
									},
									"scope": 1007,
									"src": "4458:254:6",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 830,
										"nodeType": "Block",
										"src": "5139:267:6",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 808,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"expression": {
																	"arguments": [
																		{
																			"id": 804,
																			"name": "this",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 4294967268,
																			"src": "5165:4:6",
																			"typeDescriptions": {
																				"typeIdentifier": "t_contract$_Address_$1007",
																				"typeString": "library Address"
																			}
																		}
																	],
																	"expression": {
																		"argumentTypes": [
																			{
																				"typeIdentifier": "t_contract$_Address_$1007",
																				"typeString": "library Address"
																			}
																		],
																		"id": 803,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"lValueRequested": false,
																		"nodeType": "ElementaryTypeNameExpression",
																		"src": "5157:7:6",
																		"typeDescriptions": {
																			"typeIdentifier": "t_type$_t_address_$",
																			"typeString": "type(address)"
																		},
																		"typeName": {
																			"id": 802,
																			"name": "address",
																			"nodeType": "ElementaryTypeName",
																			"src": "5157:7:6",
																			"typeDescriptions": {}
																		}
																	},
																	"id": 805,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"kind": "typeConversion",
																	"lValueRequested": false,
																	"nameLocations": [],
																	"names": [],
																	"nodeType": "FunctionCall",
																	"src": "5157:13:6",
																	"tryCall": false,
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																"id": 806,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"memberLocation": "5171:7:6",
																"memberName": "balance",
																"nodeType": "MemberAccess",
																"src": "5157:21:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">=",
															"rightExpression": {
																"id": 807,
																"name": "value",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 794,
																"src": "5182:5:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "5157:30:6",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "416464726573733a20696e73756666696369656e742062616c616e636520666f722063616c6c",
															"id": 809,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "5189:40:6",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_565f1a77334fc4792800921178c71e4521acffab18ff9e7885b49377ee80ab4c",
																"typeString": "literal_string \"Address: insufficient balance for call\""
															},
															"value": "Address: insufficient balance for call"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_565f1a77334fc4792800921178c71e4521acffab18ff9e7885b49377ee80ab4c",
																"typeString": "literal_string \"Address: insufficient balance for call\""
															}
														],
														"id": 801,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "5149:7:6",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 810,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "5149:81:6",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 811,
												"nodeType": "ExpressionStatement",
												"src": "5149:81:6"
											},
											{
												"assignments": [
													813,
													815
												],
												"declarations": [
													{
														"constant": false,
														"id": 813,
														"mutability": "mutable",
														"name": "success",
														"nameLocation": "5246:7:6",
														"nodeType": "VariableDeclaration",
														"scope": 830,
														"src": "5241:12:6",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														},
														"typeName": {
															"id": 812,
															"name": "bool",
															"nodeType": "ElementaryTypeName",
															"src": "5241:4:6",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"visibility": "internal"
													},
													{
														"constant": false,
														"id": 815,
														"mutability": "mutable",
														"name": "returndata",
														"nameLocation": "5268:10:6",
														"nodeType": "VariableDeclaration",
														"scope": 830,
														"src": "5255:23:6",
														"stateVariable": false,
														"storageLocation": "memory",
														"typeDescriptions": {
															"typeIdentifier": "t_bytes_memory_ptr",
															"typeString": "bytes"
														},
														"typeName": {
															"id": 814,
															"name": "bytes",
															"nodeType": "ElementaryTypeName",
															"src": "5255:5:6",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_storage_ptr",
																"typeString": "bytes"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 822,
												"initialValue": {
													"arguments": [
														{
															"id": 820,
															"name": "data",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 792,
															"src": "5308:4:6",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_bytes_memory_ptr",
																	"typeString": "bytes memory"
																}
															],
															"expression": {
																"id": 816,
																"name": "target",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 790,
																"src": "5282:6:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"id": 817,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "5289:4:6",
															"memberName": "call",
															"nodeType": "MemberAccess",
															"src": "5282:11:6",
															"typeDescriptions": {
																"typeIdentifier": "t_function_barecall_payable$_t_bytes_memory_ptr_$returns$_t_bool_$_t_bytes_memory_ptr_$",
																"typeString": "function (bytes memory) payable returns (bool,bytes memory)"
															}
														},
														"id": 819,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"names": [
															"value"
														],
														"nodeType": "FunctionCallOptions",
														"options": [
															{
																"id": 818,
																"name": "value",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 794,
																"src": "5301:5:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															}
														],
														"src": "5282:25:6",
														"typeDescriptions": {
															"typeIdentifier": "t_function_barecall_payable$_t_bytes_memory_ptr_$returns$_t_bool_$_t_bytes_memory_ptr_$value",
															"typeString": "function (bytes memory) payable returns (bool,bytes memory)"
														}
													},
													"id": 821,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "5282:31:6",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$_t_bool_$_t_bytes_memory_ptr_$",
														"typeString": "tuple(bool,bytes memory)"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "5240:73:6"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 824,
															"name": "target",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 790,
															"src": "5357:6:6",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 825,
															"name": "success",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 813,
															"src": "5365:7:6",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"id": 826,
															"name": "returndata",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 815,
															"src": "5374:10:6",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														},
														{
															"id": 827,
															"name": "errorMessage",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 796,
															"src": "5386:12:6",
															"typeDescriptions": {
																"typeIdentifier": "t_string_memory_ptr",
																"typeString": "string memory"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															},
															{
																"typeIdentifier": "t_string_memory_ptr",
																"typeString": "string memory"
															}
														],
														"id": 823,
														"name": "verifyCallResultFromTarget",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 962,
														"src": "5330:26:6",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_view$_t_address_$_t_bool_$_t_bytes_memory_ptr_$_t_string_memory_ptr_$returns$_t_bytes_memory_ptr_$",
															"typeString": "function (address,bool,bytes memory,string memory) view returns (bytes memory)"
														}
													},
													"id": 828,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "5330:69:6",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_memory_ptr",
														"typeString": "bytes memory"
													}
												},
												"functionReturnParameters": 800,
												"id": 829,
												"nodeType": "Return",
												"src": "5323:76:6"
											}
										]
									},
									"documentation": {
										"id": 788,
										"nodeType": "StructuredDocumentation",
										"src": "4718:237:6",
										"text": " @dev Same as {xref-Address-functionCallWithValue-address-bytes-uint256-}[`functionCallWithValue`], but\n with `errorMessage` as a fallback revert reason when `target` reverts.\n _Available since v3.1._"
									},
									"id": 831,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "functionCallWithValue",
									"nameLocation": "4969:21:6",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 797,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 790,
												"mutability": "mutable",
												"name": "target",
												"nameLocation": "5008:6:6",
												"nodeType": "VariableDeclaration",
												"scope": 831,
												"src": "5000:14:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 789,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "5000:7:6",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 792,
												"mutability": "mutable",
												"name": "data",
												"nameLocation": "5037:4:6",
												"nodeType": "VariableDeclaration",
												"scope": 831,
												"src": "5024:17:6",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 791,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "5024:5:6",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 794,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "5059:5:6",
												"nodeType": "VariableDeclaration",
												"scope": 831,
												"src": "5051:13:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 793,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "5051:7:6",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 796,
												"mutability": "mutable",
												"name": "errorMessage",
												"nameLocation": "5088:12:6",
												"nodeType": "VariableDeclaration",
												"scope": 831,
												"src": "5074:26:6",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 795,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "5074:6:6",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4990:116:6"
									},
									"returnParameters": {
										"id": 800,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 799,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 831,
												"src": "5125:12:6",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 798,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "5125:5:6",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "5124:14:6"
									},
									"scope": 1007,
									"src": "4960:446:6",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 847,
										"nodeType": "Block",
										"src": "5683:97:6",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"id": 842,
															"name": "target",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 834,
															"src": "5719:6:6",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 843,
															"name": "data",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 836,
															"src": "5727:4:6",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														},
														{
															"hexValue": "416464726573733a206c6f772d6c6576656c207374617469632063616c6c206661696c6564",
															"id": 844,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "5733:39:6",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_90ec82aa826a536a4cbfae44ecfa384680faa9a4b77344bce96aa761ad904df0",
																"typeString": "literal_string \"Address: low-level static call failed\""
															},
															"value": "Address: low-level static call failed"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															},
															{
																"typeIdentifier": "t_stringliteral_90ec82aa826a536a4cbfae44ecfa384680faa9a4b77344bce96aa761ad904df0",
																"typeString": "literal_string \"Address: low-level static call failed\""
															}
														],
														"id": 841,
														"name": "functionStaticCall",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															848,
															877
														],
														"referencedDeclaration": 877,
														"src": "5700:18:6",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_view$_t_address_$_t_bytes_memory_ptr_$_t_string_memory_ptr_$returns$_t_bytes_memory_ptr_$",
															"typeString": "function (address,bytes memory,string memory) view returns (bytes memory)"
														}
													},
													"id": 845,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "5700:73:6",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_memory_ptr",
														"typeString": "bytes memory"
													}
												},
												"functionReturnParameters": 840,
												"id": 846,
												"nodeType": "Return",
												"src": "5693:80:6"
											}
										]
									},
									"documentation": {
										"id": 832,
										"nodeType": "StructuredDocumentation",
										"src": "5412:166:6",
										"text": " @dev Same as {xref-Address-functionCall-address-bytes-}[`functionCall`],\n but performing a static call.\n _Available since v3.3._"
									},
									"id": 848,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "functionStaticCall",
									"nameLocation": "5592:18:6",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 837,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 834,
												"mutability": "mutable",
												"name": "target",
												"nameLocation": "5619:6:6",
												"nodeType": "VariableDeclaration",
												"scope": 848,
												"src": "5611:14:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 833,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "5611:7:6",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 836,
												"mutability": "mutable",
												"name": "data",
												"nameLocation": "5640:4:6",
												"nodeType": "VariableDeclaration",
												"scope": 848,
												"src": "5627:17:6",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 835,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "5627:5:6",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "5610:35:6"
									},
									"returnParameters": {
										"id": 840,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 839,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 848,
												"src": "5669:12:6",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 838,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "5669:5:6",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "5668:14:6"
									},
									"scope": 1007,
									"src": "5583:197:6",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 876,
										"nodeType": "Block",
										"src": "6122:168:6",
										"statements": [
											{
												"assignments": [
													861,
													863
												],
												"declarations": [
													{
														"constant": false,
														"id": 861,
														"mutability": "mutable",
														"name": "success",
														"nameLocation": "6138:7:6",
														"nodeType": "VariableDeclaration",
														"scope": 876,
														"src": "6133:12:6",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														},
														"typeName": {
															"id": 860,
															"name": "bool",
															"nodeType": "ElementaryTypeName",
															"src": "6133:4:6",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"visibility": "internal"
													},
													{
														"constant": false,
														"id": 863,
														"mutability": "mutable",
														"name": "returndata",
														"nameLocation": "6160:10:6",
														"nodeType": "VariableDeclaration",
														"scope": 876,
														"src": "6147:23:6",
														"stateVariable": false,
														"storageLocation": "memory",
														"typeDescriptions": {
															"typeIdentifier": "t_bytes_memory_ptr",
															"typeString": "bytes"
														},
														"typeName": {
															"id": 862,
															"name": "bytes",
															"nodeType": "ElementaryTypeName",
															"src": "6147:5:6",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_storage_ptr",
																"typeString": "bytes"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 868,
												"initialValue": {
													"arguments": [
														{
															"id": 866,
															"name": "data",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 853,
															"src": "6192:4:6",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														],
														"expression": {
															"id": 864,
															"name": "target",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 851,
															"src": "6174:6:6",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"id": 865,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "6181:10:6",
														"memberName": "staticcall",
														"nodeType": "MemberAccess",
														"src": "6174:17:6",
														"typeDescriptions": {
															"typeIdentifier": "t_function_barestaticcall_view$_t_bytes_memory_ptr_$returns$_t_bool_$_t_bytes_memory_ptr_$",
															"typeString": "function (bytes memory) view returns (bool,bytes memory)"
														}
													},
													"id": 867,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "6174:23:6",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$_t_bool_$_t_bytes_memory_ptr_$",
														"typeString": "tuple(bool,bytes memory)"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "6132:65:6"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 870,
															"name": "target",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 851,
															"src": "6241:6:6",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 871,
															"name": "success",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 861,
															"src": "6249:7:6",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"id": 872,
															"name": "returndata",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 863,
															"src": "6258:10:6",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														},
														{
															"id": 873,
															"name": "errorMessage",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 855,
															"src": "6270:12:6",
															"typeDescriptions": {
																"typeIdentifier": "t_string_memory_ptr",
																"typeString": "string memory"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															},
															{
																"typeIdentifier": "t_string_memory_ptr",
																"typeString": "string memory"
															}
														],
														"id": 869,
														"name": "verifyCallResultFromTarget",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 962,
														"src": "6214:26:6",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_view$_t_address_$_t_bool_$_t_bytes_memory_ptr_$_t_string_memory_ptr_$returns$_t_bytes_memory_ptr_$",
															"typeString": "function (address,bool,bytes memory,string memory) view returns (bytes memory)"
														}
													},
													"id": 874,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "6214:69:6",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_memory_ptr",
														"typeString": "bytes memory"
													}
												},
												"functionReturnParameters": 859,
												"id": 875,
												"nodeType": "Return",
												"src": "6207:76:6"
											}
										]
									},
									"documentation": {
										"id": 849,
										"nodeType": "StructuredDocumentation",
										"src": "5786:173:6",
										"text": " @dev Same as {xref-Address-functionCall-address-bytes-string-}[`functionCall`],\n but performing a static call.\n _Available since v3.3._"
									},
									"id": 877,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "functionStaticCall",
									"nameLocation": "5973:18:6",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 856,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 851,
												"mutability": "mutable",
												"name": "target",
												"nameLocation": "6009:6:6",
												"nodeType": "VariableDeclaration",
												"scope": 877,
												"src": "6001:14:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 850,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "6001:7:6",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 853,
												"mutability": "mutable",
												"name": "data",
												"nameLocation": "6038:4:6",
												"nodeType": "VariableDeclaration",
												"scope": 877,
												"src": "6025:17:6",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 852,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "6025:5:6",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 855,
												"mutability": "mutable",
												"name": "errorMessage",
												"nameLocation": "6066:12:6",
												"nodeType": "VariableDeclaration",
												"scope": 877,
												"src": "6052:26:6",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 854,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "6052:6:6",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "5991:93:6"
									},
									"returnParameters": {
										"id": 859,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 858,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 877,
												"src": "6108:12:6",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 857,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "6108:5:6",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "6107:14:6"
									},
									"scope": 1007,
									"src": "5964:326:6",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 893,
										"nodeType": "Block",
										"src": "6566:101:6",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"id": 888,
															"name": "target",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 880,
															"src": "6604:6:6",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 889,
															"name": "data",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 882,
															"src": "6612:4:6",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														},
														{
															"hexValue": "416464726573733a206c6f772d6c6576656c2064656c65676174652063616c6c206661696c6564",
															"id": 890,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "6618:41:6",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_9fdcd12e4b726339b32a442b0a448365d5d85c96b2d2cff917b4f66c63110398",
																"typeString": "literal_string \"Address: low-level delegate call failed\""
															},
															"value": "Address: low-level delegate call failed"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															},
															{
																"typeIdentifier": "t_stringliteral_9fdcd12e4b726339b32a442b0a448365d5d85c96b2d2cff917b4f66c63110398",
																"typeString": "literal_string \"Address: low-level delegate call failed\""
															}
														],
														"id": 887,
														"name": "functionDelegateCall",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															894,
															923
														],
														"referencedDeclaration": 923,
														"src": "6583:20:6",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_bytes_memory_ptr_$_t_string_memory_ptr_$returns$_t_bytes_memory_ptr_$",
															"typeString": "function (address,bytes memory,string memory) returns (bytes memory)"
														}
													},
													"id": 891,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "6583:77:6",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_memory_ptr",
														"typeString": "bytes memory"
													}
												},
												"functionReturnParameters": 886,
												"id": 892,
												"nodeType": "Return",
												"src": "6576:84:6"
											}
										]
									},
									"documentation": {
										"id": 878,
										"nodeType": "StructuredDocumentation",
										"src": "6296:168:6",
										"text": " @dev Same as {xref-Address-functionCall-address-bytes-}[`functionCall`],\n but performing a delegate call.\n _Available since v3.4._"
									},
									"id": 894,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "functionDelegateCall",
									"nameLocation": "6478:20:6",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 883,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 880,
												"mutability": "mutable",
												"name": "target",
												"nameLocation": "6507:6:6",
												"nodeType": "VariableDeclaration",
												"scope": 894,
												"src": "6499:14:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 879,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "6499:7:6",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 882,
												"mutability": "mutable",
												"name": "data",
												"nameLocation": "6528:4:6",
												"nodeType": "VariableDeclaration",
												"scope": 894,
												"src": "6515:17:6",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 881,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "6515:5:6",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "6498:35:6"
									},
									"returnParameters": {
										"id": 886,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 885,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 894,
												"src": "6552:12:6",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 884,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "6552:5:6",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "6551:14:6"
									},
									"scope": 1007,
									"src": "6469:198:6",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 922,
										"nodeType": "Block",
										"src": "7008:170:6",
										"statements": [
											{
												"assignments": [
													907,
													909
												],
												"declarations": [
													{
														"constant": false,
														"id": 907,
														"mutability": "mutable",
														"name": "success",
														"nameLocation": "7024:7:6",
														"nodeType": "VariableDeclaration",
														"scope": 922,
														"src": "7019:12:6",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														},
														"typeName": {
															"id": 906,
															"name": "bool",
															"nodeType": "ElementaryTypeName",
															"src": "7019:4:6",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"visibility": "internal"
													},
													{
														"constant": false,
														"id": 909,
														"mutability": "mutable",
														"name": "returndata",
														"nameLocation": "7046:10:6",
														"nodeType": "VariableDeclaration",
														"scope": 922,
														"src": "7033:23:6",
														"stateVariable": false,
														"storageLocation": "memory",
														"typeDescriptions": {
															"typeIdentifier": "t_bytes_memory_ptr",
															"typeString": "bytes"
														},
														"typeName": {
															"id": 908,
															"name": "bytes",
															"nodeType": "ElementaryTypeName",
															"src": "7033:5:6",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_storage_ptr",
																"typeString": "bytes"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 914,
												"initialValue": {
													"arguments": [
														{
															"id": 912,
															"name": "data",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 899,
															"src": "7080:4:6",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														],
														"expression": {
															"id": 910,
															"name": "target",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 897,
															"src": "7060:6:6",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"id": 911,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "7067:12:6",
														"memberName": "delegatecall",
														"nodeType": "MemberAccess",
														"src": "7060:19:6",
														"typeDescriptions": {
															"typeIdentifier": "t_function_baredelegatecall_nonpayable$_t_bytes_memory_ptr_$returns$_t_bool_$_t_bytes_memory_ptr_$",
															"typeString": "function (bytes memory) returns (bool,bytes memory)"
														}
													},
													"id": 913,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "7060:25:6",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$_t_bool_$_t_bytes_memory_ptr_$",
														"typeString": "tuple(bool,bytes memory)"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "7018:67:6"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 916,
															"name": "target",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 897,
															"src": "7129:6:6",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 917,
															"name": "success",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 907,
															"src": "7137:7:6",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"id": 918,
															"name": "returndata",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 909,
															"src": "7146:10:6",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														},
														{
															"id": 919,
															"name": "errorMessage",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 901,
															"src": "7158:12:6",
															"typeDescriptions": {
																"typeIdentifier": "t_string_memory_ptr",
																"typeString": "string memory"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															},
															{
																"typeIdentifier": "t_string_memory_ptr",
																"typeString": "string memory"
															}
														],
														"id": 915,
														"name": "verifyCallResultFromTarget",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 962,
														"src": "7102:26:6",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_view$_t_address_$_t_bool_$_t_bytes_memory_ptr_$_t_string_memory_ptr_$returns$_t_bytes_memory_ptr_$",
															"typeString": "function (address,bool,bytes memory,string memory) view returns (bytes memory)"
														}
													},
													"id": 920,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "7102:69:6",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_memory_ptr",
														"typeString": "bytes memory"
													}
												},
												"functionReturnParameters": 905,
												"id": 921,
												"nodeType": "Return",
												"src": "7095:76:6"
											}
										]
									},
									"documentation": {
										"id": 895,
										"nodeType": "StructuredDocumentation",
										"src": "6673:175:6",
										"text": " @dev Same as {xref-Address-functionCall-address-bytes-string-}[`functionCall`],\n but performing a delegate call.\n _Available since v3.4._"
									},
									"id": 923,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "functionDelegateCall",
									"nameLocation": "6862:20:6",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 902,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 897,
												"mutability": "mutable",
												"name": "target",
												"nameLocation": "6900:6:6",
												"nodeType": "VariableDeclaration",
												"scope": 923,
												"src": "6892:14:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 896,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "6892:7:6",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 899,
												"mutability": "mutable",
												"name": "data",
												"nameLocation": "6929:4:6",
												"nodeType": "VariableDeclaration",
												"scope": 923,
												"src": "6916:17:6",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 898,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "6916:5:6",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 901,
												"mutability": "mutable",
												"name": "errorMessage",
												"nameLocation": "6957:12:6",
												"nodeType": "VariableDeclaration",
												"scope": 923,
												"src": "6943:26:6",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 900,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "6943:6:6",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "6882:93:6"
									},
									"returnParameters": {
										"id": 905,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 904,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 923,
												"src": "6994:12:6",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 903,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "6994:5:6",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "6993:14:6"
									},
									"scope": 1007,
									"src": "6853:325:6",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 961,
										"nodeType": "Block",
										"src": "7660:434:6",
										"statements": [
											{
												"condition": {
													"id": 937,
													"name": "success",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 928,
													"src": "7674:7:6",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"falseBody": {
													"id": 959,
													"nodeType": "Block",
													"src": "8030:58:6",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"id": 955,
																		"name": "returndata",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 930,
																		"src": "8052:10:6",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bytes_memory_ptr",
																			"typeString": "bytes memory"
																		}
																	},
																	{
																		"id": 956,
																		"name": "errorMessage",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 932,
																		"src": "8064:12:6",
																		"typeDescriptions": {
																			"typeIdentifier": "t_string_memory_ptr",
																			"typeString": "string memory"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_bytes_memory_ptr",
																			"typeString": "bytes memory"
																		},
																		{
																			"typeIdentifier": "t_string_memory_ptr",
																			"typeString": "string memory"
																		}
																	],
																	"id": 954,
																	"name": "_revert",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1006,
																	"src": "8044:7:6",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_internal_pure$_t_bytes_memory_ptr_$_t_string_memory_ptr_$returns$__$",
																		"typeString": "function (bytes memory,string memory) pure"
																	}
																},
																"id": 957,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "8044:33:6",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$__$",
																	"typeString": "tuple()"
																}
															},
															"id": 958,
															"nodeType": "ExpressionStatement",
															"src": "8044:33:6"
														}
													]
												},
												"id": 960,
												"nodeType": "IfStatement",
												"src": "7670:418:6",
												"trueBody": {
													"id": 953,
													"nodeType": "Block",
													"src": "7683:341:6",
													"statements": [
														{
															"condition": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 941,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"expression": {
																		"id": 938,
																		"name": "returndata",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 930,
																		"src": "7701:10:6",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bytes_memory_ptr",
																			"typeString": "bytes memory"
																		}
																	},
																	"id": 939,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"memberLocation": "7712:6:6",
																	"memberName": "length",
																	"nodeType": "MemberAccess",
																	"src": "7701:17:6",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": "==",
																"rightExpression": {
																	"hexValue": "30",
																	"id": 940,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "7722:1:6",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	},
																	"value": "0"
																},
																"src": "7701:22:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																}
															},
															"id": 950,
															"nodeType": "IfStatement",
															"src": "7697:286:6",
															"trueBody": {
																"id": 949,
																"nodeType": "Block",
																"src": "7725:258:6",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"arguments": [
																						{
																							"id": 944,
																							"name": "target",
																							"nodeType": "Identifier",
																							"overloadedDeclarations": [],
																							"referencedDeclaration": 926,
																							"src": "7927:6:6",
																							"typeDescriptions": {
																								"typeIdentifier": "t_address",
																								"typeString": "address"
																							}
																						}
																					],
																					"expression": {
																						"argumentTypes": [
																							{
																								"typeIdentifier": "t_address",
																								"typeString": "address"
																							}
																						],
																						"id": 943,
																						"name": "isContract",
																						"nodeType": "Identifier",
																						"overloadedDeclarations": [],
																						"referencedDeclaration": 695,
																						"src": "7916:10:6",
																						"typeDescriptions": {
																							"typeIdentifier": "t_function_internal_view$_t_address_$returns$_t_bool_$",
																							"typeString": "function (address) view returns (bool)"
																						}
																					},
																					"id": 945,
																					"isConstant": false,
																					"isLValue": false,
																					"isPure": false,
																					"kind": "functionCall",
																					"lValueRequested": false,
																					"nameLocations": [],
																					"names": [],
																					"nodeType": "FunctionCall",
																					"src": "7916:18:6",
																					"tryCall": false,
																					"typeDescriptions": {
																						"typeIdentifier": "t_bool",
																						"typeString": "bool"
																					}
																				},
																				{
																					"hexValue": "416464726573733a2063616c6c20746f206e6f6e2d636f6e7472616374",
																					"id": 946,
																					"isConstant": false,
																					"isLValue": false,
																					"isPure": true,
																					"kind": "string",
																					"lValueRequested": false,
																					"nodeType": "Literal",
																					"src": "7936:31:6",
																					"typeDescriptions": {
																						"typeIdentifier": "t_stringliteral_cc2e4e38850b7c0a3e942cfed89b71c77302df25bcb2ec297a0c4ff9ff6b90ad",
																						"typeString": "literal_string \"Address: call to non-contract\""
																					},
																					"value": "Address: call to non-contract"
																				}
																			],
																			"expression": {
																				"argumentTypes": [
																					{
																						"typeIdentifier": "t_bool",
																						"typeString": "bool"
																					},
																					{
																						"typeIdentifier": "t_stringliteral_cc2e4e38850b7c0a3e942cfed89b71c77302df25bcb2ec297a0c4ff9ff6b90ad",
																						"typeString": "literal_string \"Address: call to non-contract\""
																					}
																				],
																				"id": 942,
																				"name": "require",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [
																					4294967278,
																					4294967278
																				],
																				"referencedDeclaration": 4294967278,
																				"src": "7908:7:6",
																				"typeDescriptions": {
																					"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
																					"typeString": "function (bool,string memory) pure"
																				}
																			},
																			"id": 947,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"kind": "functionCall",
																			"lValueRequested": false,
																			"nameLocations": [],
																			"names": [],
																			"nodeType": "FunctionCall",
																			"src": "7908:60:6",
																			"tryCall": false,
																			"typeDescriptions": {
																				"typeIdentifier": "t_tuple$__$",
																				"typeString": "tuple()"
																			}
																		},
																		"id": 948,
																		"nodeType": "ExpressionStatement",
																		"src": "7908:60:6"
																	}
																]
															}
														},
														{
															"expression": {
																"id": 951,
																"name": "returndata",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 930,
																"src": "8003:10:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_bytes_memory_ptr",
																	"typeString": "bytes memory"
																}
															},
															"functionReturnParameters": 936,
															"id": 952,
															"nodeType": "Return",
															"src": "7996:17:6"
														}
													]
												}
											}
										]
									},
									"documentation": {
										"id": 924,
										"nodeType": "StructuredDocumentation",
										"src": "7184:277:6",
										"text": " @dev Tool to verify that a low level call to smart-contract was successful, and revert (either by bubbling\n the revert reason or using the provided one) in case of unsuccessful call or if target was not a contract.\n _Available since v4.8._"
									},
									"id": 962,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "verifyCallResultFromTarget",
									"nameLocation": "7475:26:6",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 933,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 926,
												"mutability": "mutable",
												"name": "target",
												"nameLocation": "7519:6:6",
												"nodeType": "VariableDeclaration",
												"scope": 962,
												"src": "7511:14:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 925,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "7511:7:6",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 928,
												"mutability": "mutable",
												"name": "success",
												"nameLocation": "7540:7:6",
												"nodeType": "VariableDeclaration",
												"scope": 962,
												"src": "7535:12:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 927,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "7535:4:6",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 930,
												"mutability": "mutable",
												"name": "returndata",
												"nameLocation": "7570:10:6",
												"nodeType": "VariableDeclaration",
												"scope": 962,
												"src": "7557:23:6",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 929,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "7557:5:6",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 932,
												"mutability": "mutable",
												"name": "errorMessage",
												"nameLocation": "7604:12:6",
												"nodeType": "VariableDeclaration",
												"scope": 962,
												"src": "7590:26:6",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 931,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "7590:6:6",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "7501:121:6"
									},
									"returnParameters": {
										"id": 936,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 935,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 962,
												"src": "7646:12:6",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 934,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "7646:5:6",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "7645:14:6"
									},
									"scope": 1007,
									"src": "7466:628:6",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 985,
										"nodeType": "Block",
										"src": "8475:135:6",
										"statements": [
											{
												"condition": {
													"id": 974,
													"name": "success",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 965,
													"src": "8489:7:6",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"falseBody": {
													"id": 983,
													"nodeType": "Block",
													"src": "8546:58:6",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"id": 979,
																		"name": "returndata",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 967,
																		"src": "8568:10:6",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bytes_memory_ptr",
																			"typeString": "bytes memory"
																		}
																	},
																	{
																		"id": 980,
																		"name": "errorMessage",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 969,
																		"src": "8580:12:6",
																		"typeDescriptions": {
																			"typeIdentifier": "t_string_memory_ptr",
																			"typeString": "string memory"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_bytes_memory_ptr",
																			"typeString": "bytes memory"
																		},
																		{
																			"typeIdentifier": "t_string_memory_ptr",
																			"typeString": "string memory"
																		}
																	],
																	"id": 978,
																	"name": "_revert",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1006,
																	"src": "8560:7:6",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_internal_pure$_t_bytes_memory_ptr_$_t_string_memory_ptr_$returns$__$",
																		"typeString": "function (bytes memory,string memory) pure"
																	}
																},
																"id": 981,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "8560:33:6",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$__$",
																	"typeString": "tuple()"
																}
															},
															"id": 982,
															"nodeType": "ExpressionStatement",
															"src": "8560:33:6"
														}
													]
												},
												"id": 984,
												"nodeType": "IfStatement",
												"src": "8485:119:6",
												"trueBody": {
													"id": 977,
													"nodeType": "Block",
													"src": "8498:42:6",
													"statements": [
														{
															"expression": {
																"id": 975,
																"name": "returndata",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 967,
																"src": "8519:10:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_bytes_memory_ptr",
																	"typeString": "bytes memory"
																}
															},
															"functionReturnParameters": 973,
															"id": 976,
															"nodeType": "Return",
															"src": "8512:17:6"
														}
													]
												}
											}
										]
									},
									"documentation": {
										"id": 963,
										"nodeType": "StructuredDocumentation",
										"src": "8100:210:6",
										"text": " @dev Tool to verify that a low level call was successful, and revert if it wasn't, either by bubbling the\n revert reason or using the provided one.\n _Available since v4.3._"
									},
									"id": 986,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "verifyCallResult",
									"nameLocation": "8324:16:6",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 970,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 965,
												"mutability": "mutable",
												"name": "success",
												"nameLocation": "8355:7:6",
												"nodeType": "VariableDeclaration",
												"scope": 986,
												"src": "8350:12:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 964,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "8350:4:6",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 967,
												"mutability": "mutable",
												"name": "returndata",
												"nameLocation": "8385:10:6",
												"nodeType": "VariableDeclaration",
												"scope": 986,
												"src": "8372:23:6",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 966,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "8372:5:6",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 969,
												"mutability": "mutable",
												"name": "errorMessage",
												"nameLocation": "8419:12:6",
												"nodeType": "VariableDeclaration",
												"scope": 986,
												"src": "8405:26:6",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 968,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "8405:6:6",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "8340:97:6"
									},
									"returnParameters": {
										"id": 973,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 972,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 986,
												"src": "8461:12:6",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 971,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "8461:5:6",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "8460:14:6"
									},
									"scope": 1007,
									"src": "8315:295:6",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1005,
										"nodeType": "Block",
										"src": "8699:457:6",
										"statements": [
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 996,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"expression": {
															"id": 993,
															"name": "returndata",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 988,
															"src": "8775:10:6",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														},
														"id": 994,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "8786:6:6",
														"memberName": "length",
														"nodeType": "MemberAccess",
														"src": "8775:17:6",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": ">",
													"rightExpression": {
														"hexValue": "30",
														"id": 995,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "8795:1:6",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_0_by_1",
															"typeString": "int_const 0"
														},
														"value": "0"
													},
													"src": "8775:21:6",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"falseBody": {
													"id": 1003,
													"nodeType": "Block",
													"src": "9105:45:6",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"id": 1000,
																		"name": "errorMessage",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 990,
																		"src": "9126:12:6",
																		"typeDescriptions": {
																			"typeIdentifier": "t_string_memory_ptr",
																			"typeString": "string memory"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_string_memory_ptr",
																			"typeString": "string memory"
																		}
																	],
																	"id": 999,
																	"name": "revert",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [
																		4294967277,
																		4294967277
																	],
																	"referencedDeclaration": 4294967277,
																	"src": "9119:6:6",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_revert_pure$_t_string_memory_ptr_$returns$__$",
																		"typeString": "function (string memory) pure"
																	}
																},
																"id": 1001,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "9119:20:6",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$__$",
																	"typeString": "tuple()"
																}
															},
															"id": 1002,
															"nodeType": "ExpressionStatement",
															"src": "9119:20:6"
														}
													]
												},
												"id": 1004,
												"nodeType": "IfStatement",
												"src": "8771:379:6",
												"trueBody": {
													"id": 998,
													"nodeType": "Block",
													"src": "8798:301:6",
													"statements": [
														{
															"AST": {
																"nodeType": "YulBlock",
																"src": "8956:133:6",
																"statements": [
																	{
																		"nodeType": "YulVariableDeclaration",
																		"src": "8974:40:6",
																		"value": {
																			"arguments": [
																				{
																					"name": "returndata",
																					"nodeType": "YulIdentifier",
																					"src": "9003:10:6"
																				}
																			],
																			"functionName": {
																				"name": "mload",
																				"nodeType": "YulIdentifier",
																				"src": "8997:5:6"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "8997:17:6"
																		},
																		"variables": [
																			{
																				"name": "returndata_size",
																				"nodeType": "YulTypedName",
																				"src": "8978:15:6",
																				"type": ""
																			}
																		]
																	},
																	{
																		"expression": {
																			"arguments": [
																				{
																					"arguments": [
																						{
																							"kind": "number",
																							"nodeType": "YulLiteral",
																							"src": "9042:2:6",
																							"type": "",
																							"value": "32"
																						},
																						{
																							"name": "returndata",
																							"nodeType": "YulIdentifier",
																							"src": "9046:10:6"
																						}
																					],
																					"functionName": {
																						"name": "add",
																						"nodeType": "YulIdentifier",
																						"src": "9038:3:6"
																					},
																					"nodeType": "YulFunctionCall",
																					"src": "9038:19:6"
																				},
																				{
																					"name": "returndata_size",
																					"nodeType": "YulIdentifier",
																					"src": "9059:15:6"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "9031:6:6"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "9031:44:6"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "9031:44:6"
																	}
																]
															},
															"documentation": "@solidity memory-safe-assembly",
															"evmVersion": "paris",
															"externalReferences": [
																{
																	"declaration": 988,
																	"isOffset": false,
																	"isSlot": false,
																	"src": "9003:10:6",
																	"valueSize": 1
																},
																{
																	"declaration": 988,
																	"isOffset": false,
																	"isSlot": false,
																	"src": "9046:10:6",
																	"valueSize": 1
																}
															],
															"id": 997,
															"nodeType": "InlineAssembly",
															"src": "8947:142:6"
														}
													]
												}
											}
										]
									},
									"id": 1006,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_revert",
									"nameLocation": "8625:7:6",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 991,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 988,
												"mutability": "mutable",
												"name": "returndata",
												"nameLocation": "8646:10:6",
												"nodeType": "VariableDeclaration",
												"scope": 1006,
												"src": "8633:23:6",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 987,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "8633:5:6",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 990,
												"mutability": "mutable",
												"name": "errorMessage",
												"nameLocation": "8672:12:6",
												"nodeType": "VariableDeclaration",
												"scope": 1006,
												"src": "8658:26:6",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 989,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "8658:6:6",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "8632:53:6"
									},
									"returnParameters": {
										"id": 992,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "8699:0:6"
									},
									"scope": 1007,
									"src": "8616:540:6",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "private"
								}
							],
							"scope": 1008,
							"src": "194:8964:6",
							"usedErrors": []
						}
					],
					"src": "101:9058:6"
				},
				"id": 6
			},
			"@openzeppelin/contracts/utils/Context.sol": {
				"ast": {
					"absolutePath": "@openzeppelin/contracts/utils/Context.sol",
					"exportedSymbols": {
						"Context": [
							1029
						]
					},
					"id": 1030,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 1009,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".0"
							],
							"nodeType": "PragmaDirective",
							"src": "86:23:7"
						},
						{
							"abstract": true,
							"baseContracts": [],
							"canonicalName": "Context",
							"contractDependencies": [],
							"contractKind": "contract",
							"documentation": {
								"id": 1010,
								"nodeType": "StructuredDocumentation",
								"src": "111:496:7",
								"text": " @dev Provides information about the current execution context, including the\n sender of the transaction and its data. While these are generally available\n via msg.sender and msg.data, they should not be accessed in such a direct\n manner, since when dealing with meta-transactions the account sending and\n paying for execution may not be the actual sender (as far as an application\n is concerned).\n This contract is only required for intermediate, library-like contracts."
							},
							"fullyImplemented": true,
							"id": 1029,
							"linearizedBaseContracts": [
								1029
							],
							"name": "Context",
							"nameLocation": "626:7:7",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"body": {
										"id": 1018,
										"nodeType": "Block",
										"src": "702:34:7",
										"statements": [
											{
												"expression": {
													"expression": {
														"id": 1015,
														"name": "msg",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 4294967281,
														"src": "719:3:7",
														"typeDescriptions": {
															"typeIdentifier": "t_magic_message",
															"typeString": "msg"
														}
													},
													"id": 1016,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"memberLocation": "723:6:7",
													"memberName": "sender",
													"nodeType": "MemberAccess",
													"src": "719:10:7",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"functionReturnParameters": 1014,
												"id": 1017,
												"nodeType": "Return",
												"src": "712:17:7"
											}
										]
									},
									"id": 1019,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_msgSender",
									"nameLocation": "649:10:7",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1011,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "659:2:7"
									},
									"returnParameters": {
										"id": 1014,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1013,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1019,
												"src": "693:7:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1012,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "693:7:7",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "692:9:7"
									},
									"scope": 1029,
									"src": "640:96:7",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1027,
										"nodeType": "Block",
										"src": "809:32:7",
										"statements": [
											{
												"expression": {
													"expression": {
														"id": 1024,
														"name": "msg",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 4294967281,
														"src": "826:3:7",
														"typeDescriptions": {
															"typeIdentifier": "t_magic_message",
															"typeString": "msg"
														}
													},
													"id": 1025,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"memberLocation": "830:4:7",
													"memberName": "data",
													"nodeType": "MemberAccess",
													"src": "826:8:7",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_calldata_ptr",
														"typeString": "bytes calldata"
													}
												},
												"functionReturnParameters": 1023,
												"id": 1026,
												"nodeType": "Return",
												"src": "819:15:7"
											}
										]
									},
									"id": 1028,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_msgData",
									"nameLocation": "751:8:7",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1020,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "759:2:7"
									},
									"returnParameters": {
										"id": 1023,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1022,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1028,
												"src": "793:14:7",
												"stateVariable": false,
												"storageLocation": "calldata",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_calldata_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 1021,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "793:5:7",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "792:16:7"
									},
									"scope": 1029,
									"src": "742:99:7",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "internal"
								}
							],
							"scope": 1030,
							"src": "608:235:7",
							"usedErrors": []
						}
					],
					"src": "86:758:7"
				},
				"id": 7
			},
			"@openzeppelin/contracts/utils/introspection/IERC165.sol": {
				"ast": {
					"absolutePath": "@openzeppelin/contracts/utils/introspection/IERC165.sol",
					"exportedSymbols": {
						"IERC165": [
							1041
						]
					},
					"id": 1042,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 1031,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".0"
							],
							"nodeType": "PragmaDirective",
							"src": "100:23:8"
						},
						{
							"abstract": false,
							"baseContracts": [],
							"canonicalName": "IERC165",
							"contractDependencies": [],
							"contractKind": "interface",
							"documentation": {
								"id": 1032,
								"nodeType": "StructuredDocumentation",
								"src": "125:279:8",
								"text": " @dev Interface of the ERC165 standard, as defined in the\n https://eips.ethereum.org/EIPS/eip-165[EIP].\n Implementers can declare support of contract interfaces, which can then be\n queried by others ({ERC165Checker}).\n For an implementation, see {ERC165}."
							},
							"fullyImplemented": false,
							"id": 1041,
							"linearizedBaseContracts": [
								1041
							],
							"name": "IERC165",
							"nameLocation": "415:7:8",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"documentation": {
										"id": 1033,
										"nodeType": "StructuredDocumentation",
										"src": "429:340:8",
										"text": " @dev Returns true if this contract implements the interface defined by\n `interfaceId`. See the corresponding\n https://eips.ethereum.org/EIPS/eip-165#how-interfaces-are-identified[EIP section]\n to learn more about how these ids are created.\n This function call must use less than 30 000 gas."
									},
									"functionSelector": "01ffc9a7",
									"id": 1040,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "supportsInterface",
									"nameLocation": "783:17:8",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1036,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1035,
												"mutability": "mutable",
												"name": "interfaceId",
												"nameLocation": "808:11:8",
												"nodeType": "VariableDeclaration",
												"scope": 1040,
												"src": "801:18:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes4",
													"typeString": "bytes4"
												},
												"typeName": {
													"id": 1034,
													"name": "bytes4",
													"nodeType": "ElementaryTypeName",
													"src": "801:6:8",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes4",
														"typeString": "bytes4"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "800:20:8"
									},
									"returnParameters": {
										"id": 1039,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1038,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1040,
												"src": "844:4:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 1037,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "844:4:8",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "843:6:8"
									},
									"scope": 1041,
									"src": "774:76:8",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								}
							],
							"scope": 1042,
							"src": "405:447:8",
							"usedErrors": []
						}
					],
					"src": "100:753:8"
				},
				"id": 8
			},
			"contracts/NFTStaking.sol": {
				"ast": {
					"absolutePath": "contracts/NFTStaking.sol",
					"exportedSymbols": {
						"Address": [
							1007
						],
						"Context": [
							1029
						],
						"IERC165": [
							1041
						],
						"IERC20": [
							244
						],
						"IERC20Permit": [
							280
						],
						"IERC721": [
							677
						],
						"MoonRabbitsStaking": [
							1386
						],
						"Ownable": [
							112
						],
						"ReentrancyGuard": [
							166
						],
						"SafeERC20": [
							561
						]
					},
					"id": 1387,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 1043,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".4"
							],
							"nodeType": "PragmaDirective",
							"src": "33:23:9"
						},
						{
							"absolutePath": "@openzeppelin/contracts/token/ERC20/IERC20.sol",
							"file": "@openzeppelin/contracts/token/ERC20/IERC20.sol",
							"id": 1044,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 1387,
							"sourceUnit": 245,
							"src": "58:56:9",
							"symbolAliases": [],
							"unitAlias": ""
						},
						{
							"absolutePath": "@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol",
							"file": "@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol",
							"id": 1045,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 1387,
							"sourceUnit": 562,
							"src": "115:65:9",
							"symbolAliases": [],
							"unitAlias": ""
						},
						{
							"absolutePath": "@openzeppelin/contracts/token/ERC721/IERC721.sol",
							"file": "@openzeppelin/contracts/token/ERC721/IERC721.sol",
							"id": 1046,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 1387,
							"sourceUnit": 678,
							"src": "181:58:9",
							"symbolAliases": [],
							"unitAlias": ""
						},
						{
							"absolutePath": "@openzeppelin/contracts/access/Ownable.sol",
							"file": "@openzeppelin/contracts/access/Ownable.sol",
							"id": 1047,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 1387,
							"sourceUnit": 113,
							"src": "240:52:9",
							"symbolAliases": [],
							"unitAlias": ""
						},
						{
							"absolutePath": "@openzeppelin/contracts/security/ReentrancyGuard.sol",
							"file": "@openzeppelin/contracts/security/ReentrancyGuard.sol",
							"id": 1048,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 1387,
							"sourceUnit": 167,
							"src": "293:62:9",
							"symbolAliases": [],
							"unitAlias": ""
						},
						{
							"abstract": false,
							"baseContracts": [
								{
									"baseName": {
										"id": 1049,
										"name": "Ownable",
										"nameLocations": [
											"533:7:9"
										],
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 112,
										"src": "533:7:9"
									},
									"id": 1050,
									"nodeType": "InheritanceSpecifier",
									"src": "533:7:9"
								},
								{
									"baseName": {
										"id": 1051,
										"name": "ReentrancyGuard",
										"nameLocations": [
											"542:15:9"
										],
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 166,
										"src": "542:15:9"
									},
									"id": 1052,
									"nodeType": "InheritanceSpecifier",
									"src": "542:15:9"
								}
							],
							"canonicalName": "MoonRabbitsStaking",
							"contractDependencies": [],
							"contractKind": "contract",
							"fullyImplemented": true,
							"id": 1386,
							"linearizedBaseContracts": [
								1386,
								166,
								112,
								1029
							],
							"name": "MoonRabbitsStaking",
							"nameLocation": "511:18:9",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"constant": false,
									"functionSelector": "78b2e3a9",
									"id": 1055,
									"mutability": "mutable",
									"name": "NFTCollection",
									"nameLocation": "599:13:9",
									"nodeType": "VariableDeclaration",
									"scope": 1386,
									"src": "584:28:9",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_contract$_IERC721_$677",
										"typeString": "contract IERC721"
									},
									"typeName": {
										"id": 1054,
										"nodeType": "UserDefinedTypeName",
										"pathNode": {
											"id": 1053,
											"name": "IERC721",
											"nameLocations": [
												"584:7:9"
											],
											"nodeType": "IdentifierPath",
											"referencedDeclaration": 677,
											"src": "584:7:9"
										},
										"referencedDeclaration": 677,
										"src": "584:7:9",
										"typeDescriptions": {
											"typeIdentifier": "t_contract$_IERC721_$677",
											"typeString": "contract IERC721"
										}
									},
									"visibility": "public"
								},
								{
									"constant": false,
									"functionSelector": "f7c618c1",
									"id": 1058,
									"mutability": "mutable",
									"name": "rewardToken",
									"nameLocation": "654:11:9",
									"nodeType": "VariableDeclaration",
									"scope": 1386,
									"src": "640:25:9",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_contract$_IERC20_$244",
										"typeString": "contract IERC20"
									},
									"typeName": {
										"id": 1057,
										"nodeType": "UserDefinedTypeName",
										"pathNode": {
											"id": 1056,
											"name": "IERC20",
											"nameLocations": [
												"640:6:9"
											],
											"nodeType": "IdentifierPath",
											"referencedDeclaration": 244,
											"src": "640:6:9"
										},
										"referencedDeclaration": 244,
										"src": "640:6:9",
										"typeDescriptions": {
											"typeIdentifier": "t_contract$_IERC20_$244",
											"typeString": "contract IERC20"
										}
									},
									"visibility": "public"
								},
								{
									"constant": false,
									"functionSelector": "2986c0e5",
									"id": 1061,
									"mutability": "mutable",
									"name": "index",
									"nameLocation": "711:5:9",
									"nodeType": "VariableDeclaration",
									"scope": 1386,
									"src": "696:24:9",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_uint256",
										"typeString": "uint256"
									},
									"typeName": {
										"id": 1059,
										"name": "uint256",
										"nodeType": "ElementaryTypeName",
										"src": "696:7:9",
										"typeDescriptions": {
											"typeIdentifier": "t_uint256",
											"typeString": "uint256"
										}
									},
									"value": {
										"hexValue": "30",
										"id": 1060,
										"isConstant": false,
										"isLValue": false,
										"isPure": true,
										"kind": "number",
										"lValueRequested": false,
										"nodeType": "Literal",
										"src": "719:1:9",
										"typeDescriptions": {
											"typeIdentifier": "t_rational_0_by_1",
											"typeString": "int_const 0"
										},
										"value": "0"
									},
									"visibility": "public"
								},
								{
									"global": false,
									"id": 1065,
									"libraryName": {
										"id": 1062,
										"name": "SafeERC20",
										"nameLocations": [
											"733:9:9"
										],
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 561,
										"src": "733:9:9"
									},
									"nodeType": "UsingForDirective",
									"src": "727:27:9",
									"typeName": {
										"id": 1064,
										"nodeType": "UserDefinedTypeName",
										"pathNode": {
											"id": 1063,
											"name": "IERC20",
											"nameLocations": [
												"747:6:9"
											],
											"nodeType": "IdentifierPath",
											"referencedDeclaration": 244,
											"src": "747:6:9"
										},
										"referencedDeclaration": 244,
										"src": "747:6:9",
										"typeDescriptions": {
											"typeIdentifier": "t_contract$_IERC20_$244",
											"typeString": "contract IERC20"
										}
									}
								},
								{
									"constant": false,
									"id": 1067,
									"mutability": "mutable",
									"name": "totalTokens",
									"nameLocation": "775:11:9",
									"nodeType": "VariableDeclaration",
									"scope": 1386,
									"src": "759:27:9",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_uint256",
										"typeString": "uint256"
									},
									"typeName": {
										"id": 1066,
										"name": "uint256",
										"nodeType": "ElementaryTypeName",
										"src": "759:7:9",
										"typeDescriptions": {
											"typeIdentifier": "t_uint256",
											"typeString": "uint256"
										}
									},
									"visibility": "private"
								},
								{
									"canonicalName": "MoonRabbitsStaking.Staker",
									"id": 1078,
									"members": [
										{
											"constant": false,
											"id": 1069,
											"mutability": "mutable",
											"name": "index",
											"nameLocation": "825:5:9",
											"nodeType": "VariableDeclaration",
											"scope": 1078,
											"src": "817:13:9",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_uint256",
												"typeString": "uint256"
											},
											"typeName": {
												"id": 1068,
												"name": "uint256",
												"nodeType": "ElementaryTypeName",
												"src": "817:7:9",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												}
											},
											"visibility": "internal"
										},
										{
											"constant": false,
											"id": 1071,
											"mutability": "mutable",
											"name": "user",
											"nameLocation": "848:4:9",
											"nodeType": "VariableDeclaration",
											"scope": 1078,
											"src": "840:12:9",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_address",
												"typeString": "address"
											},
											"typeName": {
												"id": 1070,
												"name": "address",
												"nodeType": "ElementaryTypeName",
												"src": "840:7:9",
												"stateMutability": "nonpayable",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												}
											},
											"visibility": "internal"
										},
										{
											"constant": false,
											"id": 1073,
											"mutability": "mutable",
											"name": "tokenId",
											"nameLocation": "870:7:9",
											"nodeType": "VariableDeclaration",
											"scope": 1078,
											"src": "862:15:9",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_uint256",
												"typeString": "uint256"
											},
											"typeName": {
												"id": 1072,
												"name": "uint256",
												"nodeType": "ElementaryTypeName",
												"src": "862:7:9",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												}
											},
											"visibility": "internal"
										},
										{
											"constant": false,
											"id": 1075,
											"mutability": "mutable",
											"name": "pool",
											"nameLocation": "895:4:9",
											"nodeType": "VariableDeclaration",
											"scope": 1078,
											"src": "887:12:9",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_uint256",
												"typeString": "uint256"
											},
											"typeName": {
												"id": 1074,
												"name": "uint256",
												"nodeType": "ElementaryTypeName",
												"src": "887:7:9",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												}
											},
											"visibility": "internal"
										},
										{
											"constant": false,
											"id": 1077,
											"mutability": "mutable",
											"name": "timestamp",
											"nameLocation": "917:9:9",
											"nodeType": "VariableDeclaration",
											"scope": 1078,
											"src": "909:17:9",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_uint256",
												"typeString": "uint256"
											},
											"typeName": {
												"id": 1076,
												"name": "uint256",
												"nodeType": "ElementaryTypeName",
												"src": "909:7:9",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												}
											},
											"visibility": "internal"
										}
									],
									"name": "Staker",
									"nameLocation": "800:6:9",
									"nodeType": "StructDefinition",
									"scope": 1386,
									"src": "793:140:9",
									"visibility": "public"
								},
								{
									"constant": false,
									"functionSelector": "d5a44f86",
									"id": 1083,
									"mutability": "mutable",
									"name": "stakes",
									"nameLocation": "973:6:9",
									"nodeType": "VariableDeclaration",
									"scope": 1386,
									"src": "939:40:9",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_mapping$_t_uint256_$_t_struct$_Staker_$1078_storage_$",
										"typeString": "mapping(uint256 => struct MoonRabbitsStaking.Staker)"
									},
									"typeName": {
										"id": 1082,
										"keyName": "",
										"keyNameLocation": "-1:-1:-1",
										"keyType": {
											"id": 1079,
											"name": "uint256",
											"nodeType": "ElementaryTypeName",
											"src": "947:7:9",
											"typeDescriptions": {
												"typeIdentifier": "t_uint256",
												"typeString": "uint256"
											}
										},
										"nodeType": "Mapping",
										"src": "939:26:9",
										"typeDescriptions": {
											"typeIdentifier": "t_mapping$_t_uint256_$_t_struct$_Staker_$1078_storage_$",
											"typeString": "mapping(uint256 => struct MoonRabbitsStaking.Staker)"
										},
										"valueName": "",
										"valueNameLocation": "-1:-1:-1",
										"valueType": {
											"id": 1081,
											"nodeType": "UserDefinedTypeName",
											"pathNode": {
												"id": 1080,
												"name": "Staker",
												"nameLocations": [
													"958:6:9"
												],
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 1078,
												"src": "958:6:9"
											},
											"referencedDeclaration": 1078,
											"src": "958:6:9",
											"typeDescriptions": {
												"typeIdentifier": "t_struct$_Staker_$1078_storage_ptr",
												"typeString": "struct MoonRabbitsStaking.Staker"
											}
										}
									},
									"visibility": "public"
								},
								{
									"constant": false,
									"functionSelector": "3f106929",
									"id": 1088,
									"mutability": "mutable",
									"name": "staking_details",
									"nameLocation": "1022:15:9",
									"nodeType": "VariableDeclaration",
									"scope": 1386,
									"src": "985:52:9",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_mapping$_t_address_$_t_array$_t_uint256_$dyn_storage_$",
										"typeString": "mapping(address => uint256[])"
									},
									"typeName": {
										"id": 1087,
										"keyName": "",
										"keyNameLocation": "-1:-1:-1",
										"keyType": {
											"id": 1084,
											"name": "address",
											"nodeType": "ElementaryTypeName",
											"src": "993:7:9",
											"typeDescriptions": {
												"typeIdentifier": "t_address",
												"typeString": "address"
											}
										},
										"nodeType": "Mapping",
										"src": "985:29:9",
										"typeDescriptions": {
											"typeIdentifier": "t_mapping$_t_address_$_t_array$_t_uint256_$dyn_storage_$",
											"typeString": "mapping(address => uint256[])"
										},
										"valueName": "",
										"valueNameLocation": "-1:-1:-1",
										"valueType": {
											"baseType": {
												"id": 1085,
												"name": "uint256",
												"nodeType": "ElementaryTypeName",
												"src": "1004:7:9",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												}
											},
											"id": 1086,
											"nodeType": "ArrayTypeName",
											"src": "1004:9:9",
											"typeDescriptions": {
												"typeIdentifier": "t_array$_t_uint256_$dyn_storage_ptr",
												"typeString": "uint256[]"
											}
										}
									},
									"visibility": "public"
								},
								{
									"constant": false,
									"functionSelector": "3af416d1",
									"id": 1093,
									"mutability": "mutable",
									"name": "unstaking_details",
									"nameLocation": "1080:17:9",
									"nodeType": "VariableDeclaration",
									"scope": 1386,
									"src": "1043:54:9",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_mapping$_t_address_$_t_array$_t_uint256_$dyn_storage_$",
										"typeString": "mapping(address => uint256[])"
									},
									"typeName": {
										"id": 1092,
										"keyName": "",
										"keyNameLocation": "-1:-1:-1",
										"keyType": {
											"id": 1089,
											"name": "address",
											"nodeType": "ElementaryTypeName",
											"src": "1051:7:9",
											"typeDescriptions": {
												"typeIdentifier": "t_address",
												"typeString": "address"
											}
										},
										"nodeType": "Mapping",
										"src": "1043:29:9",
										"typeDescriptions": {
											"typeIdentifier": "t_mapping$_t_address_$_t_array$_t_uint256_$dyn_storage_$",
											"typeString": "mapping(address => uint256[])"
										},
										"valueName": "",
										"valueNameLocation": "-1:-1:-1",
										"valueType": {
											"baseType": {
												"id": 1090,
												"name": "uint256",
												"nodeType": "ElementaryTypeName",
												"src": "1062:7:9",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												}
											},
											"id": 1091,
											"nodeType": "ArrayTypeName",
											"src": "1062:9:9",
											"typeDescriptions": {
												"typeIdentifier": "t_array$_t_uint256_$dyn_storage_ptr",
												"typeString": "uint256[]"
											}
										}
									},
									"visibility": "public"
								},
								{
									"body": {
										"id": 1112,
										"nodeType": "Block",
										"src": "1161:100:9",
										"statements": [
											{
												"expression": {
													"id": 1104,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 1100,
														"name": "rewardToken",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1058,
														"src": "1171:11:9",
														"typeDescriptions": {
															"typeIdentifier": "t_contract$_IERC20_$244",
															"typeString": "contract IERC20"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"arguments": [
															{
																"id": 1102,
																"name": "_RewardToken",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1095,
																"src": "1192:12:9",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															],
															"id": 1101,
															"name": "IERC20",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 244,
															"src": "1185:6:9",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_contract$_IERC20_$244_$",
																"typeString": "type(contract IERC20)"
															}
														},
														"id": 1103,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "typeConversion",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "1185:20:9",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_contract$_IERC20_$244",
															"typeString": "contract IERC20"
														}
													},
													"src": "1171:34:9",
													"typeDescriptions": {
														"typeIdentifier": "t_contract$_IERC20_$244",
														"typeString": "contract IERC20"
													}
												},
												"id": 1105,
												"nodeType": "ExpressionStatement",
												"src": "1171:34:9"
											},
											{
												"expression": {
													"id": 1110,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 1106,
														"name": "NFTCollection",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1055,
														"src": "1215:13:9",
														"typeDescriptions": {
															"typeIdentifier": "t_contract$_IERC721_$677",
															"typeString": "contract IERC721"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"arguments": [
															{
																"id": 1108,
																"name": "_NFTCollection",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1097,
																"src": "1239:14:9",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															],
															"id": 1107,
															"name": "IERC721",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 677,
															"src": "1231:7:9",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_contract$_IERC721_$677_$",
																"typeString": "type(contract IERC721)"
															}
														},
														"id": 1109,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "typeConversion",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "1231:23:9",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_contract$_IERC721_$677",
															"typeString": "contract IERC721"
														}
													},
													"src": "1215:39:9",
													"typeDescriptions": {
														"typeIdentifier": "t_contract$_IERC721_$677",
														"typeString": "contract IERC721"
													}
												},
												"id": 1111,
												"nodeType": "ExpressionStatement",
												"src": "1215:39:9"
											}
										]
									},
									"id": 1113,
									"implemented": true,
									"kind": "constructor",
									"modifiers": [],
									"name": "",
									"nameLocation": "-1:-1:-1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1098,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1095,
												"mutability": "mutable",
												"name": "_RewardToken",
												"nameLocation": "1124:12:9",
												"nodeType": "VariableDeclaration",
												"scope": 1113,
												"src": "1116:20:9",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1094,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1116:7:9",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1097,
												"mutability": "mutable",
												"name": "_NFTCollection",
												"nameLocation": "1145:14:9",
												"nodeType": "VariableDeclaration",
												"scope": 1113,
												"src": "1137:22:9",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1096,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1137:7:9",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1115:45:9"
									},
									"returnParameters": {
										"id": 1099,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1161:0:9"
									},
									"scope": 1386,
									"src": "1104:157:9",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "public"
								},
								{
									"anonymous": false,
									"eventSelector": "f556991011e831bcfac4f406d547e5e32cdd98267efab83935230d5f8d02c446",
									"id": 1123,
									"name": "Stake",
									"nameLocation": "1273:5:9",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 1122,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1115,
												"indexed": true,
												"mutability": "mutable",
												"name": "owner",
												"nameLocation": "1295:5:9",
												"nodeType": "VariableDeclaration",
												"scope": 1123,
												"src": "1279:21:9",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1114,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1279:7:9",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1117,
												"indexed": false,
												"mutability": "mutable",
												"name": "id",
												"nameLocation": "1310:2:9",
												"nodeType": "VariableDeclaration",
												"scope": 1123,
												"src": "1302:10:9",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1116,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1302:7:9",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1119,
												"indexed": false,
												"mutability": "mutable",
												"name": "pool",
												"nameLocation": "1322:4:9",
												"nodeType": "VariableDeclaration",
												"scope": 1123,
												"src": "1314:12:9",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1118,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1314:7:9",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1121,
												"indexed": false,
												"mutability": "mutable",
												"name": "time",
												"nameLocation": "1336:4:9",
												"nodeType": "VariableDeclaration",
												"scope": 1123,
												"src": "1328:12:9",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1120,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1328:7:9",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1278:63:9"
									},
									"src": "1267:75:9"
								},
								{
									"anonymous": false,
									"eventSelector": "f74c9f1985016ff6aa83c3fd81e31d0be3b194f205ae5e1b57f5bd74ad28e4cf",
									"id": 1135,
									"name": "UnStake",
									"nameLocation": "1353:7:9",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 1134,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1125,
												"indexed": true,
												"mutability": "mutable",
												"name": "owner",
												"nameLocation": "1377:5:9",
												"nodeType": "VariableDeclaration",
												"scope": 1135,
												"src": "1361:21:9",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1124,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1361:7:9",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1127,
												"indexed": false,
												"mutability": "mutable",
												"name": "id",
												"nameLocation": "1392:2:9",
												"nodeType": "VariableDeclaration",
												"scope": 1135,
												"src": "1384:10:9",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1126,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1384:7:9",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1129,
												"indexed": false,
												"mutability": "mutable",
												"name": "pool",
												"nameLocation": "1404:4:9",
												"nodeType": "VariableDeclaration",
												"scope": 1135,
												"src": "1396:12:9",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1128,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1396:7:9",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1131,
												"indexed": false,
												"mutability": "mutable",
												"name": "time",
												"nameLocation": "1418:4:9",
												"nodeType": "VariableDeclaration",
												"scope": 1135,
												"src": "1410:12:9",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1130,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1410:7:9",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1133,
												"indexed": false,
												"mutability": "mutable",
												"name": "rewardTokens",
												"nameLocation": "1432:12:9",
												"nodeType": "VariableDeclaration",
												"scope": 1135,
												"src": "1424:20:9",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1132,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1424:7:9",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1360:85:9"
									},
									"src": "1347:99:9"
								},
								{
									"body": {
										"id": 1167,
										"nodeType": "Block",
										"src": "1619:220:9",
										"statements": [
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 1145,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 1143,
														"name": "_pool",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1138,
														"src": "1632:5:9",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "==",
													"rightExpression": {
														"hexValue": "37",
														"id": 1144,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "1639:1:9",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_7_by_1",
															"typeString": "int_const 7"
														},
														"value": "7"
													},
													"src": "1632:8:9",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"falseBody": {
													"condition": {
														"commonType": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"id": 1151,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftExpression": {
															"id": 1149,
															"name": "_pool",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1138,
															"src": "1687:5:9",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"nodeType": "BinaryOperation",
														"operator": "==",
														"rightExpression": {
															"hexValue": "3134",
															"id": 1150,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "number",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "1694:2:9",
															"typeDescriptions": {
																"typeIdentifier": "t_rational_14_by_1",
																"typeString": "int_const 14"
															},
															"value": "14"
														},
														"src": "1687:9:9",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"falseBody": {
														"condition": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 1157,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 1155,
																"name": "_pool",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1138,
																"src": "1743:5:9",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "==",
															"rightExpression": {
																"hexValue": "3330",
																"id": 1156,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "1750:2:9",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_30_by_1",
																	"typeString": "int_const 30"
																},
																"value": "30"
															},
															"src": "1743:9:9",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"falseBody": {
															"id": 1163,
															"nodeType": "Block",
															"src": "1796:37:9",
															"statements": [
																{
																	"expression": {
																		"hexValue": "3130303030",
																		"id": 1161,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "1817:5:9",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_10000_by_1",
																			"typeString": "int_const 10000"
																		},
																		"value": "10000"
																	},
																	"functionReturnParameters": 1142,
																	"id": 1162,
																	"nodeType": "Return",
																	"src": "1810:12:9"
																}
															]
														},
														"id": 1164,
														"nodeType": "IfStatement",
														"src": "1740:93:9",
														"trueBody": {
															"id": 1160,
															"nodeType": "Block",
															"src": "1754:36:9",
															"statements": [
																{
																	"expression": {
																		"hexValue": "35303030",
																		"id": 1158,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "1775:4:9",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_5000_by_1",
																			"typeString": "int_const 5000"
																		},
																		"value": "5000"
																	},
																	"functionReturnParameters": 1142,
																	"id": 1159,
																	"nodeType": "Return",
																	"src": "1768:11:9"
																}
															]
														}
													},
													"id": 1165,
													"nodeType": "IfStatement",
													"src": "1684:149:9",
													"trueBody": {
														"id": 1154,
														"nodeType": "Block",
														"src": "1698:36:9",
														"statements": [
															{
																"expression": {
																	"hexValue": "33303030",
																	"id": 1152,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "1719:4:9",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_3000_by_1",
																		"typeString": "int_const 3000"
																	},
																	"value": "3000"
																},
																"functionReturnParameters": 1142,
																"id": 1153,
																"nodeType": "Return",
																"src": "1712:11:9"
															}
														]
													}
												},
												"id": 1166,
												"nodeType": "IfStatement",
												"src": "1629:204:9",
												"trueBody": {
													"id": 1148,
													"nodeType": "Block",
													"src": "1642:36:9",
													"statements": [
														{
															"expression": {
																"hexValue": "31303030",
																"id": 1146,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "1663:4:9",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_1000_by_1",
																	"typeString": "int_const 1000"
																},
																"value": "1000"
															},
															"functionReturnParameters": 1142,
															"id": 1147,
															"nodeType": "Return",
															"src": "1656:11:9"
														}
													]
												}
											}
										]
									},
									"documentation": {
										"id": 1136,
										"nodeType": "StructuredDocumentation",
										"src": "1452:87:9",
										"text": " Calculate reward for the user's pool\n @param _pool Pool of NFT"
									},
									"id": 1168,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "calculateRewardPool",
									"nameLocation": "1553:19:9",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1139,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1138,
												"mutability": "mutable",
												"name": "_pool",
												"nameLocation": "1581:5:9",
												"nodeType": "VariableDeclaration",
												"scope": 1168,
												"src": "1573:13:9",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1137,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1573:7:9",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1572:15:9"
									},
									"returnParameters": {
										"id": 1142,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1141,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1168,
												"src": "1609:7:9",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1140,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1609:7:9",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1608:9:9"
									},
									"scope": 1386,
									"src": "1544:295:9",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "private"
								},
								{
									"body": {
										"id": 1233,
										"nodeType": "Block",
										"src": "2047:392:9",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															"id": 1183,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"arguments": [
																	{
																		"id": 1179,
																		"name": "_tokenId",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1171,
																		"src": "2087:8:9",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	],
																	"expression": {
																		"id": 1177,
																		"name": "NFTCollection",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1055,
																		"src": "2065:13:9",
																		"typeDescriptions": {
																			"typeIdentifier": "t_contract$_IERC721_$677",
																			"typeString": "contract IERC721"
																		}
																	},
																	"id": 1178,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"memberLocation": "2079:7:9",
																	"memberName": "ownerOf",
																	"nodeType": "MemberAccess",
																	"referencedDeclaration": 610,
																	"src": "2065:21:9",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_external_view$_t_uint256_$returns$_t_address_$",
																		"typeString": "function (uint256) view external returns (address)"
																	}
																},
																"id": 1180,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "2065:31:9",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "==",
															"rightExpression": {
																"expression": {
																	"id": 1181,
																	"name": "msg",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 4294967281,
																	"src": "2100:3:9",
																	"typeDescriptions": {
																		"typeIdentifier": "t_magic_message",
																		"typeString": "msg"
																	}
																},
																"id": 1182,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"memberLocation": "2104:6:9",
																"memberName": "sender",
																"nodeType": "MemberAccess",
																"src": "2100:10:9",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"src": "2065:45:9",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "43616e2774207374616b65206e667420796f7520646f6e2774206f776e21",
															"id": 1184,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "2111:32:9",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_1624d4f25969ee526147bd8655de287c38135e6ace26a92631ce497b2ca81bbe",
																"typeString": "literal_string \"Can't stake nft you don't own!\""
															},
															"value": "Can't stake nft you don't own!"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_1624d4f25969ee526147bd8655de287c38135e6ace26a92631ce497b2ca81bbe",
																"typeString": "literal_string \"Can't stake nft you don't own!\""
															}
														],
														"id": 1176,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "2057:7:9",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 1185,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2057:87:9",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1186,
												"nodeType": "ExpressionStatement",
												"src": "2057:87:9"
											},
											{
												"expression": {
													"id": 1199,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"baseExpression": {
															"id": 1187,
															"name": "stakes",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1083,
															"src": "2154:6:9",
															"typeDescriptions": {
																"typeIdentifier": "t_mapping$_t_uint256_$_t_struct$_Staker_$1078_storage_$",
																"typeString": "mapping(uint256 => struct MoonRabbitsStaking.Staker storage ref)"
															}
														},
														"id": 1189,
														"indexExpression": {
															"id": 1188,
															"name": "index",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1061,
															"src": "2161:5:9",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"nodeType": "IndexAccess",
														"src": "2154:13:9",
														"typeDescriptions": {
															"typeIdentifier": "t_struct$_Staker_$1078_storage",
															"typeString": "struct MoonRabbitsStaking.Staker storage ref"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"arguments": [
															{
																"id": 1191,
																"name": "index",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1061,
																"src": "2177:5:9",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															{
																"expression": {
																	"id": 1192,
																	"name": "msg",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 4294967281,
																	"src": "2183:3:9",
																	"typeDescriptions": {
																		"typeIdentifier": "t_magic_message",
																		"typeString": "msg"
																	}
																},
																"id": 1193,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"memberLocation": "2187:6:9",
																"memberName": "sender",
																"nodeType": "MemberAccess",
																"src": "2183:10:9",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															{
																"id": 1194,
																"name": "_tokenId",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1171,
																"src": "2194:8:9",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															{
																"id": 1195,
																"name": "_pool",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1173,
																"src": "2204:5:9",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															{
																"expression": {
																	"id": 1196,
																	"name": "block",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 4294967292,
																	"src": "2211:5:9",
																	"typeDescriptions": {
																		"typeIdentifier": "t_magic_block",
																		"typeString": "block"
																	}
																},
																"id": 1197,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"memberLocation": "2217:9:9",
																"memberName": "timestamp",
																"nodeType": "MemberAccess",
																"src": "2211:15:9",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																{
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																},
																{
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																{
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																{
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															],
															"id": 1190,
															"name": "Staker",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1078,
															"src": "2170:6:9",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_struct$_Staker_$1078_storage_ptr_$",
																"typeString": "type(struct MoonRabbitsStaking.Staker storage pointer)"
															}
														},
														"id": 1198,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "structConstructorCall",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "2170:57:9",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_struct$_Staker_$1078_memory_ptr",
															"typeString": "struct MoonRabbitsStaking.Staker memory"
														}
													},
													"src": "2154:73:9",
													"typeDescriptions": {
														"typeIdentifier": "t_struct$_Staker_$1078_storage",
														"typeString": "struct MoonRabbitsStaking.Staker storage ref"
													}
												},
												"id": 1200,
												"nodeType": "ExpressionStatement",
												"src": "2154:73:9"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 1206,
															"name": "index",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1061,
															"src": "2270:5:9",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"expression": {
															"baseExpression": {
																"id": 1201,
																"name": "staking_details",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1088,
																"src": "2237:15:9",
																"typeDescriptions": {
																	"typeIdentifier": "t_mapping$_t_address_$_t_array$_t_uint256_$dyn_storage_$",
																	"typeString": "mapping(address => uint256[] storage ref)"
																}
															},
															"id": 1204,
															"indexExpression": {
																"expression": {
																	"id": 1202,
																	"name": "msg",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 4294967281,
																	"src": "2253:3:9",
																	"typeDescriptions": {
																		"typeIdentifier": "t_magic_message",
																		"typeString": "msg"
																	}
																},
																"id": 1203,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"memberLocation": "2257:6:9",
																"memberName": "sender",
																"nodeType": "MemberAccess",
																"src": "2253:10:9",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"isConstant": false,
															"isLValue": true,
															"isPure": false,
															"lValueRequested": false,
															"nodeType": "IndexAccess",
															"src": "2237:27:9",
															"typeDescriptions": {
																"typeIdentifier": "t_array$_t_uint256_$dyn_storage",
																"typeString": "uint256[] storage ref"
															}
														},
														"id": 1205,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "2265:4:9",
														"memberName": "push",
														"nodeType": "MemberAccess",
														"src": "2237:32:9",
														"typeDescriptions": {
															"typeIdentifier": "t_function_arraypush_nonpayable$_t_array$_t_uint256_$dyn_storage_ptr_$_t_uint256_$returns$__$attached_to$_t_array$_t_uint256_$dyn_storage_ptr_$",
															"typeString": "function (uint256[] storage pointer,uint256)"
														}
													},
													"id": 1207,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2237:39:9",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1208,
												"nodeType": "ExpressionStatement",
												"src": "2237:39:9"
											},
											{
												"expression": {
													"arguments": [
														{
															"expression": {
																"id": 1212,
																"name": "msg",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 4294967281,
																"src": "2313:3:9",
																"typeDescriptions": {
																	"typeIdentifier": "t_magic_message",
																	"typeString": "msg"
																}
															},
															"id": 1213,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "2317:6:9",
															"memberName": "sender",
															"nodeType": "MemberAccess",
															"src": "2313:10:9",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"arguments": [
																{
																	"id": 1216,
																	"name": "this",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 4294967268,
																	"src": "2333:4:9",
																	"typeDescriptions": {
																		"typeIdentifier": "t_contract$_MoonRabbitsStaking_$1386",
																		"typeString": "contract MoonRabbitsStaking"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_contract$_MoonRabbitsStaking_$1386",
																		"typeString": "contract MoonRabbitsStaking"
																	}
																],
																"id": 1215,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "2325:7:9",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_address_$",
																	"typeString": "type(address)"
																},
																"typeName": {
																	"id": 1214,
																	"name": "address",
																	"nodeType": "ElementaryTypeName",
																	"src": "2325:7:9",
																	"typeDescriptions": {}
																}
															},
															"id": 1217,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "typeConversion",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "2325:13:9",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 1218,
															"name": "_tokenId",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1171,
															"src": "2340:8:9",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"expression": {
															"id": 1209,
															"name": "NFTCollection",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1055,
															"src": "2286:13:9",
															"typeDescriptions": {
																"typeIdentifier": "t_contract$_IERC721_$677",
																"typeString": "contract IERC721"
															}
														},
														"id": 1211,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "2300:12:9",
														"memberName": "transferFrom",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 642,
														"src": "2286:26:9",
														"typeDescriptions": {
															"typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,address,uint256) external"
														}
													},
													"id": 1219,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2286:63:9",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1220,
												"nodeType": "ExpressionStatement",
												"src": "2286:63:9"
											},
											{
												"expression": {
													"id": 1222,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "UnaryOperation",
													"operator": "++",
													"prefix": false,
													"src": "2359:7:9",
													"subExpression": {
														"id": 1221,
														"name": "index",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1061,
														"src": "2359:5:9",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 1223,
												"nodeType": "ExpressionStatement",
												"src": "2359:7:9"
											},
											{
												"eventCall": {
													"arguments": [
														{
															"expression": {
																"id": 1225,
																"name": "msg",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 4294967281,
																"src": "2387:3:9",
																"typeDescriptions": {
																	"typeIdentifier": "t_magic_message",
																	"typeString": "msg"
																}
															},
															"id": 1226,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "2391:6:9",
															"memberName": "sender",
															"nodeType": "MemberAccess",
															"src": "2387:10:9",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 1227,
															"name": "_tokenId",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1171,
															"src": "2399:8:9",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														{
															"id": 1228,
															"name": "_pool",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1173,
															"src": "2409:5:9",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														{
															"expression": {
																"id": 1229,
																"name": "block",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 4294967292,
																"src": "2416:5:9",
																"typeDescriptions": {
																	"typeIdentifier": "t_magic_block",
																	"typeString": "block"
																}
															},
															"id": 1230,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "2422:9:9",
															"memberName": "timestamp",
															"nodeType": "MemberAccess",
															"src": "2416:15:9",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 1224,
														"name": "Stake",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1123,
														"src": "2381:5:9",
														"typeDescriptions": {
															"typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_uint256_$_t_uint256_$_t_uint256_$returns$__$",
															"typeString": "function (address,uint256,uint256,uint256)"
														}
													},
													"id": 1231,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2381:51:9",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1232,
												"nodeType": "EmitStatement",
												"src": "2376:56:9"
											}
										]
									},
									"documentation": {
										"id": 1169,
										"nodeType": "StructuredDocumentation",
										"src": "1845:139:9",
										"text": " Create a new staking for a specific user\n @param _tokenId Token Id of NFT to stake\n @param _pool Pool of NFT"
									},
									"functionSelector": "51cecc80",
									"id": 1234,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "stakeNFT",
									"nameLocation": "1998:8:9",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1174,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1171,
												"mutability": "mutable",
												"name": "_tokenId",
												"nameLocation": "2015:8:9",
												"nodeType": "VariableDeclaration",
												"scope": 1234,
												"src": "2007:16:9",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1170,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2007:7:9",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1173,
												"mutability": "mutable",
												"name": "_pool",
												"nameLocation": "2033:5:9",
												"nodeType": "VariableDeclaration",
												"scope": 1234,
												"src": "2025:13:9",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1172,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2025:7:9",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2006:33:9"
									},
									"returnParameters": {
										"id": 1175,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2047:0:9"
									},
									"scope": 1386,
									"src": "1989:450:9",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "public"
								},
								{
									"body": {
										"id": 1324,
										"nodeType": "Block",
										"src": "2677:558:9",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 1260,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 1258,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"commonType": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	"id": 1256,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"leftExpression": {
																		"commonType": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		},
																		"id": 1254,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftExpression": {
																			"components": [
																				{
																					"commonType": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					},
																					"id": 1251,
																					"isConstant": false,
																					"isLValue": false,
																					"isPure": false,
																					"lValueRequested": false,
																					"leftExpression": {
																						"expression": {
																							"id": 1245,
																							"name": "block",
																							"nodeType": "Identifier",
																							"overloadedDeclarations": [],
																							"referencedDeclaration": 4294967292,
																							"src": "2696:5:9",
																							"typeDescriptions": {
																								"typeIdentifier": "t_magic_block",
																								"typeString": "block"
																							}
																						},
																						"id": 1246,
																						"isConstant": false,
																						"isLValue": false,
																						"isPure": false,
																						"lValueRequested": false,
																						"memberLocation": "2702:9:9",
																						"memberName": "timestamp",
																						"nodeType": "MemberAccess",
																						"src": "2696:15:9",
																						"typeDescriptions": {
																							"typeIdentifier": "t_uint256",
																							"typeString": "uint256"
																						}
																					},
																					"nodeType": "BinaryOperation",
																					"operator": "-",
																					"rightExpression": {
																						"expression": {
																							"baseExpression": {
																								"id": 1247,
																								"name": "stakes",
																								"nodeType": "Identifier",
																								"overloadedDeclarations": [],
																								"referencedDeclaration": 1083,
																								"src": "2714:6:9",
																								"typeDescriptions": {
																									"typeIdentifier": "t_mapping$_t_uint256_$_t_struct$_Staker_$1078_storage_$",
																									"typeString": "mapping(uint256 => struct MoonRabbitsStaking.Staker storage ref)"
																								}
																							},
																							"id": 1249,
																							"indexExpression": {
																								"id": 1248,
																								"name": "_index",
																								"nodeType": "Identifier",
																								"overloadedDeclarations": [],
																								"referencedDeclaration": 1237,
																								"src": "2721:6:9",
																								"typeDescriptions": {
																									"typeIdentifier": "t_uint256",
																									"typeString": "uint256"
																								}
																							},
																							"isConstant": false,
																							"isLValue": true,
																							"isPure": false,
																							"lValueRequested": false,
																							"nodeType": "IndexAccess",
																							"src": "2714:14:9",
																							"typeDescriptions": {
																								"typeIdentifier": "t_struct$_Staker_$1078_storage",
																								"typeString": "struct MoonRabbitsStaking.Staker storage ref"
																							}
																						},
																						"id": 1250,
																						"isConstant": false,
																						"isLValue": true,
																						"isPure": false,
																						"lValueRequested": false,
																						"memberLocation": "2729:9:9",
																						"memberName": "timestamp",
																						"nodeType": "MemberAccess",
																						"referencedDeclaration": 1077,
																						"src": "2714:24:9",
																						"typeDescriptions": {
																							"typeIdentifier": "t_uint256",
																							"typeString": "uint256"
																						}
																					},
																					"src": "2696:42:9",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				}
																			],
																			"id": 1252,
																			"isConstant": false,
																			"isInlineArray": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"nodeType": "TupleExpression",
																			"src": "2695:44:9",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "BinaryOperation",
																		"operator": "/",
																		"rightExpression": {
																			"hexValue": "3630",
																			"id": 1253,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "2742:2:9",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_60_by_1",
																				"typeString": "int_const 60"
																			},
																			"value": "60"
																		},
																		"src": "2695:49:9",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"nodeType": "BinaryOperation",
																	"operator": "/",
																	"rightExpression": {
																		"hexValue": "3630",
																		"id": 1255,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "2747:2:9",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_60_by_1",
																			"typeString": "int_const 60"
																		},
																		"value": "60"
																	},
																	"src": "2695:54:9",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": "/",
																"rightExpression": {
																	"hexValue": "3234",
																	"id": 1257,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "2752:2:9",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_24_by_1",
																		"typeString": "int_const 24"
																	},
																	"value": "24"
																},
																"src": "2695:59:9",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">=",
															"rightExpression": {
																"id": 1259,
																"name": "_pool",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1241,
																"src": "2758:5:9",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "2695:68:9",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "5374616b696e6720706f6f6c206e6f7420656e6465642079657421212121",
															"id": 1261,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "2764:32:9",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_2c264ac290bec70a05ed24874b7a508841480fcc00576c7986fac4268cbefe0e",
																"typeString": "literal_string \"Staking pool not ended yet!!!!\""
															},
															"value": "Staking pool not ended yet!!!!"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_2c264ac290bec70a05ed24874b7a508841480fcc00576c7986fac4268cbefe0e",
																"typeString": "literal_string \"Staking pool not ended yet!!!!\""
															}
														],
														"id": 1244,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "2687:7:9",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 1262,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2687:110:9",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1263,
												"nodeType": "ExpressionStatement",
												"src": "2687:110:9"
											},
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															"id": 1271,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"expression": {
																	"baseExpression": {
																		"id": 1265,
																		"name": "stakes",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1083,
																		"src": "2815:6:9",
																		"typeDescriptions": {
																			"typeIdentifier": "t_mapping$_t_uint256_$_t_struct$_Staker_$1078_storage_$",
																			"typeString": "mapping(uint256 => struct MoonRabbitsStaking.Staker storage ref)"
																		}
																	},
																	"id": 1267,
																	"indexExpression": {
																		"id": 1266,
																		"name": "_index",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1237,
																		"src": "2822:6:9",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"isConstant": false,
																	"isLValue": true,
																	"isPure": false,
																	"lValueRequested": false,
																	"nodeType": "IndexAccess",
																	"src": "2815:14:9",
																	"typeDescriptions": {
																		"typeIdentifier": "t_struct$_Staker_$1078_storage",
																		"typeString": "struct MoonRabbitsStaking.Staker storage ref"
																	}
																},
																"id": 1268,
																"isConstant": false,
																"isLValue": true,
																"isPure": false,
																"lValueRequested": false,
																"memberLocation": "2830:4:9",
																"memberName": "user",
																"nodeType": "MemberAccess",
																"referencedDeclaration": 1071,
																"src": "2815:19:9",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "==",
															"rightExpression": {
																"expression": {
																	"id": 1269,
																	"name": "msg",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 4294967281,
																	"src": "2838:3:9",
																	"typeDescriptions": {
																		"typeIdentifier": "t_magic_message",
																		"typeString": "msg"
																	}
																},
																"id": 1270,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"memberLocation": "2842:6:9",
																"memberName": "sender",
																"nodeType": "MemberAccess",
																"src": "2838:10:9",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"src": "2815:33:9",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "596f7520617265206e6f74206f776e6572206f662074686973204e4654207374616b696e67",
															"id": 1272,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "2849:39:9",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_e15a9850692d6708934a23063a6ddc95798c196bc7427dd1b63298ad85e9753c",
																"typeString": "literal_string \"You are not owner of this NFT staking\""
															},
															"value": "You are not owner of this NFT staking"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_e15a9850692d6708934a23063a6ddc95798c196bc7427dd1b63298ad85e9753c",
																"typeString": "literal_string \"You are not owner of this NFT staking\""
															}
														],
														"id": 1264,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "2807:7:9",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 1273,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2807:82:9",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1274,
												"nodeType": "ExpressionStatement",
												"src": "2807:82:9"
											},
											{
												"expression": {
													"id": 1278,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "UnaryOperation",
													"operator": "delete",
													"prefix": true,
													"src": "2899:21:9",
													"subExpression": {
														"baseExpression": {
															"id": 1275,
															"name": "stakes",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1083,
															"src": "2906:6:9",
															"typeDescriptions": {
																"typeIdentifier": "t_mapping$_t_uint256_$_t_struct$_Staker_$1078_storage_$",
																"typeString": "mapping(uint256 => struct MoonRabbitsStaking.Staker storage ref)"
															}
														},
														"id": 1277,
														"indexExpression": {
															"id": 1276,
															"name": "_index",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1237,
															"src": "2913:6:9",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"nodeType": "IndexAccess",
														"src": "2906:14:9",
														"typeDescriptions": {
															"typeIdentifier": "t_struct$_Staker_$1078_storage",
															"typeString": "struct MoonRabbitsStaking.Staker storage ref"
														}
													},
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1279,
												"nodeType": "ExpressionStatement",
												"src": "2899:21:9"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 1285,
															"name": "_index",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1237,
															"src": "2965:6:9",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"expression": {
															"baseExpression": {
																"id": 1280,
																"name": "unstaking_details",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1093,
																"src": "2930:17:9",
																"typeDescriptions": {
																	"typeIdentifier": "t_mapping$_t_address_$_t_array$_t_uint256_$dyn_storage_$",
																	"typeString": "mapping(address => uint256[] storage ref)"
																}
															},
															"id": 1283,
															"indexExpression": {
																"expression": {
																	"id": 1281,
																	"name": "msg",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 4294967281,
																	"src": "2948:3:9",
																	"typeDescriptions": {
																		"typeIdentifier": "t_magic_message",
																		"typeString": "msg"
																	}
																},
																"id": 1282,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"memberLocation": "2952:6:9",
																"memberName": "sender",
																"nodeType": "MemberAccess",
																"src": "2948:10:9",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"isConstant": false,
															"isLValue": true,
															"isPure": false,
															"lValueRequested": false,
															"nodeType": "IndexAccess",
															"src": "2930:29:9",
															"typeDescriptions": {
																"typeIdentifier": "t_array$_t_uint256_$dyn_storage",
																"typeString": "uint256[] storage ref"
															}
														},
														"id": 1284,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "2960:4:9",
														"memberName": "push",
														"nodeType": "MemberAccess",
														"src": "2930:34:9",
														"typeDescriptions": {
															"typeIdentifier": "t_function_arraypush_nonpayable$_t_array$_t_uint256_$dyn_storage_ptr_$_t_uint256_$returns$__$attached_to$_t_array$_t_uint256_$dyn_storage_ptr_$",
															"typeString": "function (uint256[] storage pointer,uint256)"
														}
													},
													"id": 1286,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2930:42:9",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1287,
												"nodeType": "ExpressionStatement",
												"src": "2930:42:9"
											},
											{
												"expression": {
													"arguments": [
														{
															"arguments": [
																{
																	"id": 1293,
																	"name": "this",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 4294967268,
																	"src": "3018:4:9",
																	"typeDescriptions": {
																		"typeIdentifier": "t_contract$_MoonRabbitsStaking_$1386",
																		"typeString": "contract MoonRabbitsStaking"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_contract$_MoonRabbitsStaking_$1386",
																		"typeString": "contract MoonRabbitsStaking"
																	}
																],
																"id": 1292,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "3010:7:9",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_address_$",
																	"typeString": "type(address)"
																},
																"typeName": {
																	"id": 1291,
																	"name": "address",
																	"nodeType": "ElementaryTypeName",
																	"src": "3010:7:9",
																	"typeDescriptions": {}
																}
															},
															"id": 1294,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "typeConversion",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "3010:13:9",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"expression": {
																"id": 1295,
																"name": "msg",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 4294967281,
																"src": "3025:3:9",
																"typeDescriptions": {
																	"typeIdentifier": "t_magic_message",
																	"typeString": "msg"
																}
															},
															"id": 1296,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "3029:6:9",
															"memberName": "sender",
															"nodeType": "MemberAccess",
															"src": "3025:10:9",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 1297,
															"name": "_tokenId",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1239,
															"src": "3037:8:9",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"expression": {
															"id": 1288,
															"name": "NFTCollection",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1055,
															"src": "2982:13:9",
															"typeDescriptions": {
																"typeIdentifier": "t_contract$_IERC721_$677",
																"typeString": "contract IERC721"
															}
														},
														"id": 1290,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "2996:12:9",
														"memberName": "transferFrom",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 642,
														"src": "2982:26:9",
														"typeDescriptions": {
															"typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,address,uint256) external"
														}
													},
													"id": 1298,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2982:64:9",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1299,
												"nodeType": "ExpressionStatement",
												"src": "2982:64:9"
											},
											{
												"assignments": [
													1301
												],
												"declarations": [
													{
														"constant": false,
														"id": 1301,
														"mutability": "mutable",
														"name": "reward",
														"nameLocation": "3064:6:9",
														"nodeType": "VariableDeclaration",
														"scope": 1324,
														"src": "3056:14:9",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 1300,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "3056:7:9",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 1305,
												"initialValue": {
													"arguments": [
														{
															"id": 1303,
															"name": "_pool",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1241,
															"src": "3094:5:9",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 1302,
														"name": "calculateRewardPool",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1168,
														"src": "3074:19:9",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_pure$_t_uint256_$returns$_t_uint256_$",
															"typeString": "function (uint256) pure returns (uint256)"
														}
													},
													"id": 1304,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "3074:26:9",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "3056:44:9"
											},
											{
												"expression": {
													"arguments": [
														{
															"expression": {
																"id": 1309,
																"name": "msg",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 4294967281,
																"src": "3132:3:9",
																"typeDescriptions": {
																	"typeIdentifier": "t_magic_message",
																	"typeString": "msg"
																}
															},
															"id": 1310,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "3136:6:9",
															"memberName": "sender",
															"nodeType": "MemberAccess",
															"src": "3132:10:9",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 1311,
															"name": "reward",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1301,
															"src": "3144:6:9",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"expression": {
															"id": 1306,
															"name": "rewardToken",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1058,
															"src": "3110:11:9",
															"typeDescriptions": {
																"typeIdentifier": "t_contract$_IERC20_$244",
																"typeString": "contract IERC20"
															}
														},
														"id": 1308,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "3122:8:9",
														"memberName": "transfer",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 211,
														"src": "3110:20:9",
														"typeDescriptions": {
															"typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_uint256_$returns$_t_bool_$",
															"typeString": "function (address,uint256) external returns (bool)"
														}
													},
													"id": 1312,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "3110:41:9",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 1313,
												"nodeType": "ExpressionStatement",
												"src": "3110:41:9"
											},
											{
												"eventCall": {
													"arguments": [
														{
															"expression": {
																"id": 1315,
																"name": "msg",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 4294967281,
																"src": "3174:3:9",
																"typeDescriptions": {
																	"typeIdentifier": "t_magic_message",
																	"typeString": "msg"
																}
															},
															"id": 1316,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "3178:6:9",
															"memberName": "sender",
															"nodeType": "MemberAccess",
															"src": "3174:10:9",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 1317,
															"name": "_tokenId",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1239,
															"src": "3186:8:9",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														{
															"id": 1318,
															"name": "_pool",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1241,
															"src": "3196:5:9",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														{
															"expression": {
																"id": 1319,
																"name": "block",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 4294967292,
																"src": "3204:5:9",
																"typeDescriptions": {
																	"typeIdentifier": "t_magic_block",
																	"typeString": "block"
																}
															},
															"id": 1320,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "3210:9:9",
															"memberName": "timestamp",
															"nodeType": "MemberAccess",
															"src": "3204:15:9",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														{
															"id": 1321,
															"name": "reward",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1301,
															"src": "3221:6:9",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 1314,
														"name": "UnStake",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1135,
														"src": "3166:7:9",
														"typeDescriptions": {
															"typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_uint256_$_t_uint256_$_t_uint256_$_t_uint256_$returns$__$",
															"typeString": "function (address,uint256,uint256,uint256,uint256)"
														}
													},
													"id": 1322,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "3166:62:9",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1323,
												"nodeType": "EmitStatement",
												"src": "3161:67:9"
											}
										]
									},
									"documentation": {
										"id": 1235,
										"nodeType": "StructuredDocumentation",
										"src": "2445:152:9",
										"text": " Unstake the NFT and rewards user if pool is completed\n @param _tokenId Token Id of NFT to stake\n @param _pool Pool of NFT"
									},
									"functionSelector": "78dba594",
									"id": 1325,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "unStakeNFT",
									"nameLocation": "2611:10:9",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1242,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1237,
												"mutability": "mutable",
												"name": "_index",
												"nameLocation": "2630:6:9",
												"nodeType": "VariableDeclaration",
												"scope": 1325,
												"src": "2622:14:9",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1236,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2622:7:9",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1239,
												"mutability": "mutable",
												"name": "_tokenId",
												"nameLocation": "2645:8:9",
												"nodeType": "VariableDeclaration",
												"scope": 1325,
												"src": "2637:16:9",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1238,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2637:7:9",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1241,
												"mutability": "mutable",
												"name": "_pool",
												"nameLocation": "2663:5:9",
												"nodeType": "VariableDeclaration",
												"scope": 1325,
												"src": "2655:13:9",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1240,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2655:7:9",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2621:48:9"
									},
									"returnParameters": {
										"id": 1243,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2677:0:9"
									},
									"scope": 1386,
									"src": "2602:633:9",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "public"
								},
								{
									"body": {
										"id": 1345,
										"nodeType": "Block",
										"src": "3435:84:9",
										"statements": [
											{
												"assignments": [
													1338
												],
												"declarations": [
													{
														"constant": false,
														"id": 1338,
														"mutability": "mutable",
														"name": "list",
														"nameLocation": "3462:4:9",
														"nodeType": "VariableDeclaration",
														"scope": 1345,
														"src": "3445:21:9",
														"stateVariable": false,
														"storageLocation": "memory",
														"typeDescriptions": {
															"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
															"typeString": "uint256[]"
														},
														"typeName": {
															"baseType": {
																"id": 1336,
																"name": "uint256",
																"nodeType": "ElementaryTypeName",
																"src": "3445:7:9",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"id": 1337,
															"nodeType": "ArrayTypeName",
															"src": "3445:9:9",
															"typeDescriptions": {
																"typeIdentifier": "t_array$_t_uint256_$dyn_storage_ptr",
																"typeString": "uint256[]"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 1342,
												"initialValue": {
													"baseExpression": {
														"id": 1339,
														"name": "staking_details",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1088,
														"src": "3469:15:9",
														"typeDescriptions": {
															"typeIdentifier": "t_mapping$_t_address_$_t_array$_t_uint256_$dyn_storage_$",
															"typeString": "mapping(address => uint256[] storage ref)"
														}
													},
													"id": 1341,
													"indexExpression": {
														"id": 1340,
														"name": "_user",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1328,
														"src": "3485:5:9",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"isConstant": false,
													"isLValue": true,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "IndexAccess",
													"src": "3469:22:9",
													"typeDescriptions": {
														"typeIdentifier": "t_array$_t_uint256_$dyn_storage",
														"typeString": "uint256[] storage ref"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "3445:46:9"
											},
											{
												"expression": {
													"id": 1343,
													"name": "list",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 1338,
													"src": "3508:4:9",
													"typeDescriptions": {
														"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
														"typeString": "uint256[] memory"
													}
												},
												"functionReturnParameters": 1333,
												"id": 1344,
												"nodeType": "Return",
												"src": "3501:11:9"
											}
										]
									},
									"documentation": {
										"id": 1326,
										"nodeType": "StructuredDocumentation",
										"src": "3241:82:9",
										"text": " Get user's staking list\n @param _user Address of the user"
									},
									"functionSelector": "79e5f7d7",
									"id": 1346,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "userStakingList",
									"nameLocation": "3337:15:9",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1329,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1328,
												"mutability": "mutable",
												"name": "_user",
												"nameLocation": "3361:5:9",
												"nodeType": "VariableDeclaration",
												"scope": 1346,
												"src": "3353:13:9",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1327,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "3353:7:9",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3352:15:9"
									},
									"returnParameters": {
										"id": 1333,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1332,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1346,
												"src": "3413:16:9",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
													"typeString": "uint256[]"
												},
												"typeName": {
													"baseType": {
														"id": 1330,
														"name": "uint256",
														"nodeType": "ElementaryTypeName",
														"src": "3413:7:9",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"id": 1331,
													"nodeType": "ArrayTypeName",
													"src": "3413:9:9",
													"typeDescriptions": {
														"typeIdentifier": "t_array$_t_uint256_$dyn_storage_ptr",
														"typeString": "uint256[]"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3412:18:9"
									},
									"scope": 1386,
									"src": "3328:191:9",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "public"
								},
								{
									"body": {
										"id": 1384,
										"nodeType": "Block",
										"src": "3749:212:9",
										"statements": [
											{
												"body": {
													"id": 1380,
													"nodeType": "Block",
													"src": "3816:115:9",
													"statements": [
														{
															"condition": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 1375,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"baseExpression": {
																		"baseExpression": {
																			"id": 1369,
																			"name": "unstaking_details",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1093,
																			"src": "3833:17:9",
																			"typeDescriptions": {
																				"typeIdentifier": "t_mapping$_t_address_$_t_array$_t_uint256_$dyn_storage_$",
																				"typeString": "mapping(address => uint256[] storage ref)"
																			}
																		},
																		"id": 1371,
																		"indexExpression": {
																			"id": 1370,
																			"name": "_user",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1351,
																			"src": "3851:5:9",
																			"typeDescriptions": {
																				"typeIdentifier": "t_address",
																				"typeString": "address"
																			}
																		},
																		"isConstant": false,
																		"isLValue": true,
																		"isPure": false,
																		"lValueRequested": false,
																		"nodeType": "IndexAccess",
																		"src": "3833:24:9",
																		"typeDescriptions": {
																			"typeIdentifier": "t_array$_t_uint256_$dyn_storage",
																			"typeString": "uint256[] storage ref"
																		}
																	},
																	"id": 1373,
																	"indexExpression": {
																		"id": 1372,
																		"name": "j",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1357,
																		"src": "3858:1:9",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"isConstant": false,
																	"isLValue": true,
																	"isPure": false,
																	"lValueRequested": false,
																	"nodeType": "IndexAccess",
																	"src": "3833:27:9",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": "==",
																"rightExpression": {
																	"id": 1374,
																	"name": "_tempIndex",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1349,
																	"src": "3862:10:9",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "3833:39:9",
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																}
															},
															"id": 1379,
															"nodeType": "IfStatement",
															"src": "3830:91:9",
															"trueBody": {
																"id": 1378,
																"nodeType": "Block",
																"src": "3873:48:9",
																"statements": [
																	{
																		"expression": {
																			"hexValue": "74727565",
																			"id": 1376,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "bool",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "3902:4:9",
																			"typeDescriptions": {
																				"typeIdentifier": "t_bool",
																				"typeString": "bool"
																			},
																			"value": "true"
																		},
																		"functionReturnParameters": 1355,
																		"id": 1377,
																		"nodeType": "Return",
																		"src": "3895:11:9"
																	}
																]
															}
														}
													]
												},
												"condition": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 1365,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 1360,
														"name": "j",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1357,
														"src": "3774:1:9",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "<",
													"rightExpression": {
														"expression": {
															"baseExpression": {
																"id": 1361,
																"name": "unstaking_details",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1093,
																"src": "3778:17:9",
																"typeDescriptions": {
																	"typeIdentifier": "t_mapping$_t_address_$_t_array$_t_uint256_$dyn_storage_$",
																	"typeString": "mapping(address => uint256[] storage ref)"
																}
															},
															"id": 1363,
															"indexExpression": {
																"id": 1362,
																"name": "_user",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1351,
																"src": "3796:5:9",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"isConstant": false,
															"isLValue": true,
															"isPure": false,
															"lValueRequested": false,
															"nodeType": "IndexAccess",
															"src": "3778:24:9",
															"typeDescriptions": {
																"typeIdentifier": "t_array$_t_uint256_$dyn_storage",
																"typeString": "uint256[] storage ref"
															}
														},
														"id": 1364,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "3803:6:9",
														"memberName": "length",
														"nodeType": "MemberAccess",
														"src": "3778:31:9",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "3774:35:9",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 1381,
												"initializationExpression": {
													"assignments": [
														1357
													],
													"declarations": [
														{
															"constant": false,
															"id": 1357,
															"mutability": "mutable",
															"name": "j",
															"nameLocation": "3769:1:9",
															"nodeType": "VariableDeclaration",
															"scope": 1381,
															"src": "3764:6:9",
															"stateVariable": false,
															"storageLocation": "default",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"typeName": {
																"id": 1356,
																"name": "uint",
																"nodeType": "ElementaryTypeName",
																"src": "3764:4:9",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"visibility": "internal"
														}
													],
													"id": 1359,
													"initialValue": {
														"hexValue": "30",
														"id": 1358,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "3771:1:9",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_0_by_1",
															"typeString": "int_const 0"
														},
														"value": "0"
													},
													"nodeType": "VariableDeclarationStatement",
													"src": "3764:8:9"
												},
												"loopExpression": {
													"expression": {
														"id": 1367,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"nodeType": "UnaryOperation",
														"operator": "++",
														"prefix": false,
														"src": "3811:3:9",
														"subExpression": {
															"id": 1366,
															"name": "j",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1357,
															"src": "3811:1:9",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"id": 1368,
													"nodeType": "ExpressionStatement",
													"src": "3811:3:9"
												},
												"nodeType": "ForStatement",
												"src": "3759:172:9"
											},
											{
												"expression": {
													"hexValue": "66616c7365",
													"id": 1382,
													"isConstant": false,
													"isLValue": false,
													"isPure": true,
													"kind": "bool",
													"lValueRequested": false,
													"nodeType": "Literal",
													"src": "3949:5:9",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													},
													"value": "false"
												},
												"functionReturnParameters": 1355,
												"id": 1383,
												"nodeType": "Return",
												"src": "3942:12:9"
											}
										]
									},
									"documentation": {
										"id": 1347,
										"nodeType": "StructuredDocumentation",
										"src": "3525:127:9",
										"text": " Check if nft index is already unstaked\n @param _tempIndex of the nft\n @param _user of the user"
									},
									"functionSelector": "fbaca086",
									"id": 1385,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "checkIfAlreadyUnstaked",
									"nameLocation": "3666:22:9",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1352,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1349,
												"mutability": "mutable",
												"name": "_tempIndex",
												"nameLocation": "3697:10:9",
												"nodeType": "VariableDeclaration",
												"scope": 1385,
												"src": "3689:18:9",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1348,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3689:7:9",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1351,
												"mutability": "mutable",
												"name": "_user",
												"nameLocation": "3716:5:9",
												"nodeType": "VariableDeclaration",
												"scope": 1385,
												"src": "3708:13:9",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1350,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "3708:7:9",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3688:34:9"
									},
									"returnParameters": {
										"id": 1355,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1354,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1385,
												"src": "3743:4:9",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 1353,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "3743:4:9",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3742:6:9"
									},
									"scope": 1386,
									"src": "3657:304:9",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "public"
								}
							],
							"scope": 1387,
							"src": "502:3461:9",
							"usedErrors": []
						}
					],
					"src": "33:3930:9"
				},
				"id": 9
			}
		}
	}
}