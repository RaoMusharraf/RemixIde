{
	"id": "64958e93cce24757490aaca725bac57d",
	"_format": "hh-sol-build-info-1",
	"solcVersion": "0.8.21",
	"solcLongVersion": "0.8.21+commit.d9974bed",
	"input": {
		"language": "Solidity",
		"sources": {
			"contracts/SingapurContract.sol": {
				"content": "// SPDX-License-Identifier: MIT\npragma solidity ^0.8.9;\n\nimport \"@openzeppelin/contracts/token/ERC721/ERC721.sol\";\nimport \"@openzeppelin/contracts/utils/Counters.sol\";\n\ncontract MintNFT is ERC721 {\n    using Counters for Counters.Counter;\n\n    Counters.Counter private _tokenIdCounter;\n\n    constructor() ERC721(\"MyToken\", \"MTK\") {}\n\n    function safeMint(address to) public {\n        uint256 tokenId = _tokenIdCounter.current();\n        _tokenIdCounter.increment();\n        _safeMint(to, tokenId);\n    }\n}"
			},
			"@openzeppelin/contracts/utils/Counters.sol": {
				"content": "// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts v4.4.1 (utils/Counters.sol)\n\npragma solidity ^0.8.0;\n\n/**\n * @title Counters\n * @author Matt Condon (@shrugs)\n * @dev Provides counters that can only be incremented, decremented or reset. This can be used e.g. to track the number\n * of elements in a mapping, issuing ERC721 ids, or counting request ids.\n *\n * Include with `using Counters for Counters.Counter;`\n */\nlibrary Counters {\n    struct Counter {\n        // This variable should never be directly accessed by users of the library: interactions must be restricted to\n        // the library's function. As of Solidity v0.5.2, this cannot be enforced, though there is a proposal to add\n        // this feature: see https://github.com/ethereum/solidity/issues/4637\n        uint256 _value; // default: 0\n    }\n\n    function current(Counter storage counter) internal view returns (uint256) {\n        return counter._value;\n    }\n\n    function increment(Counter storage counter) internal {\n        unchecked {\n            counter._value += 1;\n        }\n    }\n\n    function decrement(Counter storage counter) internal {\n        uint256 value = counter._value;\n        require(value > 0, \"Counter: decrement overflow\");\n        unchecked {\n            counter._value = value - 1;\n        }\n    }\n\n    function reset(Counter storage counter) internal {\n        counter._value = 0;\n    }\n}\n"
			},
			"@openzeppelin/contracts/token/ERC721/ERC721.sol": {
				"content": "// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v4.8.0) (token/ERC721/ERC721.sol)\n\npragma solidity ^0.8.0;\n\nimport \"./IERC721.sol\";\nimport \"./IERC721Receiver.sol\";\nimport \"./extensions/IERC721Metadata.sol\";\nimport \"../../utils/Address.sol\";\nimport \"../../utils/Context.sol\";\nimport \"../../utils/Strings.sol\";\nimport \"../../utils/introspection/ERC165.sol\";\n\n/**\n * @dev Implementation of https://eips.ethereum.org/EIPS/eip-721[ERC721] Non-Fungible Token Standard, including\n * the Metadata extension, but not including the Enumerable extension, which is available separately as\n * {ERC721Enumerable}.\n */\ncontract ERC721 is Context, ERC165, IERC721, IERC721Metadata {\n    using Address for address;\n    using Strings for uint256;\n\n    // Token name\n    string private _name;\n\n    // Token symbol\n    string private _symbol;\n\n    // Mapping from token ID to owner address\n    mapping(uint256 => address) private _owners;\n\n    // Mapping owner address to token count\n    mapping(address => uint256) private _balances;\n\n    // Mapping from token ID to approved address\n    mapping(uint256 => address) private _tokenApprovals;\n\n    // Mapping from owner to operator approvals\n    mapping(address => mapping(address => bool)) private _operatorApprovals;\n\n    /**\n     * @dev Initializes the contract by setting a `name` and a `symbol` to the token collection.\n     */\n    constructor(string memory name_, string memory symbol_) {\n        _name = name_;\n        _symbol = symbol_;\n    }\n\n    /**\n     * @dev See {IERC165-supportsInterface}.\n     */\n    function supportsInterface(bytes4 interfaceId) public view virtual override(ERC165, IERC165) returns (bool) {\n        return\n            interfaceId == type(IERC721).interfaceId ||\n            interfaceId == type(IERC721Metadata).interfaceId ||\n            super.supportsInterface(interfaceId);\n    }\n\n    /**\n     * @dev See {IERC721-balanceOf}.\n     */\n    function balanceOf(address owner) public view virtual override returns (uint256) {\n        require(owner != address(0), \"ERC721: address zero is not a valid owner\");\n        return _balances[owner];\n    }\n\n    /**\n     * @dev See {IERC721-ownerOf}.\n     */\n    function ownerOf(uint256 tokenId) public view virtual override returns (address) {\n        address owner = _ownerOf(tokenId);\n        require(owner != address(0), \"ERC721: invalid token ID\");\n        return owner;\n    }\n\n    /**\n     * @dev See {IERC721Metadata-name}.\n     */\n    function name() public view virtual override returns (string memory) {\n        return _name;\n    }\n\n    /**\n     * @dev See {IERC721Metadata-symbol}.\n     */\n    function symbol() public view virtual override returns (string memory) {\n        return _symbol;\n    }\n\n    /**\n     * @dev See {IERC721Metadata-tokenURI}.\n     */\n    function tokenURI(uint256 tokenId) public view virtual override returns (string memory) {\n        _requireMinted(tokenId);\n\n        string memory baseURI = _baseURI();\n        return bytes(baseURI).length > 0 ? string(abi.encodePacked(baseURI, tokenId.toString())) : \"\";\n    }\n\n    /**\n     * @dev Base URI for computing {tokenURI}. If set, the resulting URI for each\n     * token will be the concatenation of the `baseURI` and the `tokenId`. Empty\n     * by default, can be overridden in child contracts.\n     */\n    function _baseURI() internal view virtual returns (string memory) {\n        return \"\";\n    }\n\n    /**\n     * @dev See {IERC721-approve}.\n     */\n    function approve(address to, uint256 tokenId) public virtual override {\n        address owner = ERC721.ownerOf(tokenId);\n        require(to != owner, \"ERC721: approval to current owner\");\n\n        require(\n            _msgSender() == owner || isApprovedForAll(owner, _msgSender()),\n            \"ERC721: approve caller is not token owner or approved for all\"\n        );\n\n        _approve(to, tokenId);\n    }\n\n    /**\n     * @dev See {IERC721-getApproved}.\n     */\n    function getApproved(uint256 tokenId) public view virtual override returns (address) {\n        _requireMinted(tokenId);\n\n        return _tokenApprovals[tokenId];\n    }\n\n    /**\n     * @dev See {IERC721-setApprovalForAll}.\n     */\n    function setApprovalForAll(address operator, bool approved) public virtual override {\n        _setApprovalForAll(_msgSender(), operator, approved);\n    }\n\n    /**\n     * @dev See {IERC721-isApprovedForAll}.\n     */\n    function isApprovedForAll(address owner, address operator) public view virtual override returns (bool) {\n        return _operatorApprovals[owner][operator];\n    }\n\n    /**\n     * @dev See {IERC721-transferFrom}.\n     */\n    function transferFrom(\n        address from,\n        address to,\n        uint256 tokenId\n    ) public virtual override {\n        //solhint-disable-next-line max-line-length\n        require(_isApprovedOrOwner(_msgSender(), tokenId), \"ERC721: caller is not token owner or approved\");\n\n        _transfer(from, to, tokenId);\n    }\n\n    /**\n     * @dev See {IERC721-safeTransferFrom}.\n     */\n    function safeTransferFrom(\n        address from,\n        address to,\n        uint256 tokenId\n    ) public virtual override {\n        safeTransferFrom(from, to, tokenId, \"\");\n    }\n\n    /**\n     * @dev See {IERC721-safeTransferFrom}.\n     */\n    function safeTransferFrom(\n        address from,\n        address to,\n        uint256 tokenId,\n        bytes memory data\n    ) public virtual override {\n        require(_isApprovedOrOwner(_msgSender(), tokenId), \"ERC721: caller is not token owner or approved\");\n        _safeTransfer(from, to, tokenId, data);\n    }\n\n    /**\n     * @dev Safely transfers `tokenId` token from `from` to `to`, checking first that contract recipients\n     * are aware of the ERC721 protocol to prevent tokens from being forever locked.\n     *\n     * `data` is additional data, it has no specified format and it is sent in call to `to`.\n     *\n     * This internal function is equivalent to {safeTransferFrom}, and can be used to e.g.\n     * implement alternative mechanisms to perform token transfer, such as signature-based.\n     *\n     * Requirements:\n     *\n     * - `from` cannot be the zero address.\n     * - `to` cannot be the zero address.\n     * - `tokenId` token must exist and be owned by `from`.\n     * - If `to` refers to a smart contract, it must implement {IERC721Receiver-onERC721Received}, which is called upon a safe transfer.\n     *\n     * Emits a {Transfer} event.\n     */\n    function _safeTransfer(\n        address from,\n        address to,\n        uint256 tokenId,\n        bytes memory data\n    ) internal virtual {\n        _transfer(from, to, tokenId);\n        require(_checkOnERC721Received(from, to, tokenId, data), \"ERC721: transfer to non ERC721Receiver implementer\");\n    }\n\n    /**\n     * @dev Returns the owner of the `tokenId`. Does NOT revert if token doesn't exist\n     */\n    function _ownerOf(uint256 tokenId) internal view virtual returns (address) {\n        return _owners[tokenId];\n    }\n\n    /**\n     * @dev Returns whether `tokenId` exists.\n     *\n     * Tokens can be managed by their owner or approved accounts via {approve} or {setApprovalForAll}.\n     *\n     * Tokens start existing when they are minted (`_mint`),\n     * and stop existing when they are burned (`_burn`).\n     */\n    function _exists(uint256 tokenId) internal view virtual returns (bool) {\n        return _ownerOf(tokenId) != address(0);\n    }\n\n    /**\n     * @dev Returns whether `spender` is allowed to manage `tokenId`.\n     *\n     * Requirements:\n     *\n     * - `tokenId` must exist.\n     */\n    function _isApprovedOrOwner(address spender, uint256 tokenId) internal view virtual returns (bool) {\n        address owner = ERC721.ownerOf(tokenId);\n        return (spender == owner || isApprovedForAll(owner, spender) || getApproved(tokenId) == spender);\n    }\n\n    /**\n     * @dev Safely mints `tokenId` and transfers it to `to`.\n     *\n     * Requirements:\n     *\n     * - `tokenId` must not exist.\n     * - If `to` refers to a smart contract, it must implement {IERC721Receiver-onERC721Received}, which is called upon a safe transfer.\n     *\n     * Emits a {Transfer} event.\n     */\n    function _safeMint(address to, uint256 tokenId) internal virtual {\n        _safeMint(to, tokenId, \"\");\n    }\n\n    /**\n     * @dev Same as {xref-ERC721-_safeMint-address-uint256-}[`_safeMint`], with an additional `data` parameter which is\n     * forwarded in {IERC721Receiver-onERC721Received} to contract recipients.\n     */\n    function _safeMint(\n        address to,\n        uint256 tokenId,\n        bytes memory data\n    ) internal virtual {\n        _mint(to, tokenId);\n        require(\n            _checkOnERC721Received(address(0), to, tokenId, data),\n            \"ERC721: transfer to non ERC721Receiver implementer\"\n        );\n    }\n\n    /**\n     * @dev Mints `tokenId` and transfers it to `to`.\n     *\n     * WARNING: Usage of this method is discouraged, use {_safeMint} whenever possible\n     *\n     * Requirements:\n     *\n     * - `tokenId` must not exist.\n     * - `to` cannot be the zero address.\n     *\n     * Emits a {Transfer} event.\n     */\n    function _mint(address to, uint256 tokenId) internal virtual {\n        require(to != address(0), \"ERC721: mint to the zero address\");\n        require(!_exists(tokenId), \"ERC721: token already minted\");\n\n        _beforeTokenTransfer(address(0), to, tokenId, 1);\n\n        // Check that tokenId was not minted by `_beforeTokenTransfer` hook\n        require(!_exists(tokenId), \"ERC721: token already minted\");\n\n        unchecked {\n            // Will not overflow unless all 2**256 token ids are minted to the same owner.\n            // Given that tokens are minted one by one, it is impossible in practice that\n            // this ever happens. Might change if we allow batch minting.\n            // The ERC fails to describe this case.\n            _balances[to] += 1;\n        }\n\n        _owners[tokenId] = to;\n\n        emit Transfer(address(0), to, tokenId);\n\n        _afterTokenTransfer(address(0), to, tokenId, 1);\n    }\n\n    /**\n     * @dev Destroys `tokenId`.\n     * The approval is cleared when the token is burned.\n     * This is an internal function that does not check if the sender is authorized to operate on the token.\n     *\n     * Requirements:\n     *\n     * - `tokenId` must exist.\n     *\n     * Emits a {Transfer} event.\n     */\n    function _burn(uint256 tokenId) internal virtual {\n        address owner = ERC721.ownerOf(tokenId);\n\n        _beforeTokenTransfer(owner, address(0), tokenId, 1);\n\n        // Update ownership in case tokenId was transferred by `_beforeTokenTransfer` hook\n        owner = ERC721.ownerOf(tokenId);\n\n        // Clear approvals\n        delete _tokenApprovals[tokenId];\n\n        unchecked {\n            // Cannot overflow, as that would require more tokens to be burned/transferred\n            // out than the owner initially received through minting and transferring in.\n            _balances[owner] -= 1;\n        }\n        delete _owners[tokenId];\n\n        emit Transfer(owner, address(0), tokenId);\n\n        _afterTokenTransfer(owner, address(0), tokenId, 1);\n    }\n\n    /**\n     * @dev Transfers `tokenId` from `from` to `to`.\n     *  As opposed to {transferFrom}, this imposes no restrictions on msg.sender.\n     *\n     * Requirements:\n     *\n     * - `to` cannot be the zero address.\n     * - `tokenId` token must be owned by `from`.\n     *\n     * Emits a {Transfer} event.\n     */\n    function _transfer(\n        address from,\n        address to,\n        uint256 tokenId\n    ) internal virtual {\n        require(ERC721.ownerOf(tokenId) == from, \"ERC721: transfer from incorrect owner\");\n        require(to != address(0), \"ERC721: transfer to the zero address\");\n\n        _beforeTokenTransfer(from, to, tokenId, 1);\n\n        // Check that tokenId was not transferred by `_beforeTokenTransfer` hook\n        require(ERC721.ownerOf(tokenId) == from, \"ERC721: transfer from incorrect owner\");\n\n        // Clear approvals from the previous owner\n        delete _tokenApprovals[tokenId];\n\n        unchecked {\n            // `_balances[from]` cannot overflow for the same reason as described in `_burn`:\n            // `from`'s balance is the number of token held, which is at least one before the current\n            // transfer.\n            // `_balances[to]` could overflow in the conditions described in `_mint`. That would require\n            // all 2**256 token ids to be minted, which in practice is impossible.\n            _balances[from] -= 1;\n            _balances[to] += 1;\n        }\n        _owners[tokenId] = to;\n\n        emit Transfer(from, to, tokenId);\n\n        _afterTokenTransfer(from, to, tokenId, 1);\n    }\n\n    /**\n     * @dev Approve `to` to operate on `tokenId`\n     *\n     * Emits an {Approval} event.\n     */\n    function _approve(address to, uint256 tokenId) internal virtual {\n        _tokenApprovals[tokenId] = to;\n        emit Approval(ERC721.ownerOf(tokenId), to, tokenId);\n    }\n\n    /**\n     * @dev Approve `operator` to operate on all of `owner` tokens\n     *\n     * Emits an {ApprovalForAll} event.\n     */\n    function _setApprovalForAll(\n        address owner,\n        address operator,\n        bool approved\n    ) internal virtual {\n        require(owner != operator, \"ERC721: approve to caller\");\n        _operatorApprovals[owner][operator] = approved;\n        emit ApprovalForAll(owner, operator, approved);\n    }\n\n    /**\n     * @dev Reverts if the `tokenId` has not been minted yet.\n     */\n    function _requireMinted(uint256 tokenId) internal view virtual {\n        require(_exists(tokenId), \"ERC721: invalid token ID\");\n    }\n\n    /**\n     * @dev Internal function to invoke {IERC721Receiver-onERC721Received} on a target address.\n     * The call is not executed if the target address is not a contract.\n     *\n     * @param from address representing the previous owner of the given token ID\n     * @param to target address that will receive the tokens\n     * @param tokenId uint256 ID of the token to be transferred\n     * @param data bytes optional data to send along with the call\n     * @return bool whether the call correctly returned the expected magic value\n     */\n    function _checkOnERC721Received(\n        address from,\n        address to,\n        uint256 tokenId,\n        bytes memory data\n    ) private returns (bool) {\n        if (to.isContract()) {\n            try IERC721Receiver(to).onERC721Received(_msgSender(), from, tokenId, data) returns (bytes4 retval) {\n                return retval == IERC721Receiver.onERC721Received.selector;\n            } catch (bytes memory reason) {\n                if (reason.length == 0) {\n                    revert(\"ERC721: transfer to non ERC721Receiver implementer\");\n                } else {\n                    /// @solidity memory-safe-assembly\n                    assembly {\n                        revert(add(32, reason), mload(reason))\n                    }\n                }\n            }\n        } else {\n            return true;\n        }\n    }\n\n    /**\n     * @dev Hook that is called before any token transfer. This includes minting and burning. If {ERC721Consecutive} is\n     * used, the hook may be called as part of a consecutive (batch) mint, as indicated by `batchSize` greater than 1.\n     *\n     * Calling conditions:\n     *\n     * - When `from` and `to` are both non-zero, ``from``'s tokens will be transferred to `to`.\n     * - When `from` is zero, the tokens will be minted for `to`.\n     * - When `to` is zero, ``from``'s tokens will be burned.\n     * - `from` and `to` are never both zero.\n     * - `batchSize` is non-zero.\n     *\n     * To learn more about hooks, head to xref:ROOT:extending-contracts.adoc#using-hooks[Using Hooks].\n     */\n    function _beforeTokenTransfer(\n        address from,\n        address to,\n        uint256, /* firstTokenId */\n        uint256 batchSize\n    ) internal virtual {\n        if (batchSize > 1) {\n            if (from != address(0)) {\n                _balances[from] -= batchSize;\n            }\n            if (to != address(0)) {\n                _balances[to] += batchSize;\n            }\n        }\n    }\n\n    /**\n     * @dev Hook that is called after any token transfer. This includes minting and burning. If {ERC721Consecutive} is\n     * used, the hook may be called as part of a consecutive (batch) mint, as indicated by `batchSize` greater than 1.\n     *\n     * Calling conditions:\n     *\n     * - When `from` and `to` are both non-zero, ``from``'s tokens were transferred to `to`.\n     * - When `from` is zero, the tokens were minted for `to`.\n     * - When `to` is zero, ``from``'s tokens were burned.\n     * - `from` and `to` are never both zero.\n     * - `batchSize` is non-zero.\n     *\n     * To learn more about hooks, head to xref:ROOT:extending-contracts.adoc#using-hooks[Using Hooks].\n     */\n    function _afterTokenTransfer(\n        address from,\n        address to,\n        uint256 firstTokenId,\n        uint256 batchSize\n    ) internal virtual {}\n}\n"
			},
			"@openzeppelin/contracts/utils/introspection/ERC165.sol": {
				"content": "// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts v4.4.1 (utils/introspection/ERC165.sol)\n\npragma solidity ^0.8.0;\n\nimport \"./IERC165.sol\";\n\n/**\n * @dev Implementation of the {IERC165} interface.\n *\n * Contracts that want to implement ERC165 should inherit from this contract and override {supportsInterface} to check\n * for the additional interface id that will be supported. For example:\n *\n * ```solidity\n * function supportsInterface(bytes4 interfaceId) public view virtual override returns (bool) {\n *     return interfaceId == type(MyInterface).interfaceId || super.supportsInterface(interfaceId);\n * }\n * ```\n *\n * Alternatively, {ERC165Storage} provides an easier to use but more expensive implementation.\n */\nabstract contract ERC165 is IERC165 {\n    /**\n     * @dev See {IERC165-supportsInterface}.\n     */\n    function supportsInterface(bytes4 interfaceId) public view virtual override returns (bool) {\n        return interfaceId == type(IERC165).interfaceId;\n    }\n}\n"
			},
			"@openzeppelin/contracts/utils/Strings.sol": {
				"content": "// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v4.8.0) (utils/Strings.sol)\n\npragma solidity ^0.8.0;\n\nimport \"./math/Math.sol\";\n\n/**\n * @dev String operations.\n */\nlibrary Strings {\n    bytes16 private constant _SYMBOLS = \"0123456789abcdef\";\n    uint8 private constant _ADDRESS_LENGTH = 20;\n\n    /**\n     * @dev Converts a `uint256` to its ASCII `string` decimal representation.\n     */\n    function toString(uint256 value) internal pure returns (string memory) {\n        unchecked {\n            uint256 length = Math.log10(value) + 1;\n            string memory buffer = new string(length);\n            uint256 ptr;\n            /// @solidity memory-safe-assembly\n            assembly {\n                ptr := add(buffer, add(32, length))\n            }\n            while (true) {\n                ptr--;\n                /// @solidity memory-safe-assembly\n                assembly {\n                    mstore8(ptr, byte(mod(value, 10), _SYMBOLS))\n                }\n                value /= 10;\n                if (value == 0) break;\n            }\n            return buffer;\n        }\n    }\n\n    /**\n     * @dev Converts a `uint256` to its ASCII `string` hexadecimal representation.\n     */\n    function toHexString(uint256 value) internal pure returns (string memory) {\n        unchecked {\n            return toHexString(value, Math.log256(value) + 1);\n        }\n    }\n\n    /**\n     * @dev Converts a `uint256` to its ASCII `string` hexadecimal representation with fixed length.\n     */\n    function toHexString(uint256 value, uint256 length) internal pure returns (string memory) {\n        bytes memory buffer = new bytes(2 * length + 2);\n        buffer[0] = \"0\";\n        buffer[1] = \"x\";\n        for (uint256 i = 2 * length + 1; i > 1; --i) {\n            buffer[i] = _SYMBOLS[value & 0xf];\n            value >>= 4;\n        }\n        require(value == 0, \"Strings: hex length insufficient\");\n        return string(buffer);\n    }\n\n    /**\n     * @dev Converts an `address` with fixed length of 20 bytes to its not checksummed ASCII `string` hexadecimal representation.\n     */\n    function toHexString(address addr) internal pure returns (string memory) {\n        return toHexString(uint256(uint160(addr)), _ADDRESS_LENGTH);\n    }\n}\n"
			},
			"@openzeppelin/contracts/utils/Context.sol": {
				"content": "// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts v4.4.1 (utils/Context.sol)\n\npragma solidity ^0.8.0;\n\n/**\n * @dev Provides information about the current execution context, including the\n * sender of the transaction and its data. While these are generally available\n * via msg.sender and msg.data, they should not be accessed in such a direct\n * manner, since when dealing with meta-transactions the account sending and\n * paying for execution may not be the actual sender (as far as an application\n * is concerned).\n *\n * This contract is only required for intermediate, library-like contracts.\n */\nabstract contract Context {\n    function _msgSender() internal view virtual returns (address) {\n        return msg.sender;\n    }\n\n    function _msgData() internal view virtual returns (bytes calldata) {\n        return msg.data;\n    }\n}\n"
			},
			"@openzeppelin/contracts/utils/Address.sol": {
				"content": "// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v4.8.0) (utils/Address.sol)\n\npragma solidity ^0.8.1;\n\n/**\n * @dev Collection of functions related to the address type\n */\nlibrary Address {\n    /**\n     * @dev Returns true if `account` is a contract.\n     *\n     * [IMPORTANT]\n     * ====\n     * It is unsafe to assume that an address for which this function returns\n     * false is an externally-owned account (EOA) and not a contract.\n     *\n     * Among others, `isContract` will return false for the following\n     * types of addresses:\n     *\n     *  - an externally-owned account\n     *  - a contract in construction\n     *  - an address where a contract will be created\n     *  - an address where a contract lived, but was destroyed\n     * ====\n     *\n     * [IMPORTANT]\n     * ====\n     * You shouldn't rely on `isContract` to protect against flash loan attacks!\n     *\n     * Preventing calls from contracts is highly discouraged. It breaks composability, breaks support for smart wallets\n     * like Gnosis Safe, and does not provide security since it can be circumvented by calling from a contract\n     * constructor.\n     * ====\n     */\n    function isContract(address account) internal view returns (bool) {\n        // This method relies on extcodesize/address.code.length, which returns 0\n        // for contracts in construction, since the code is only stored at the end\n        // of the constructor execution.\n\n        return account.code.length > 0;\n    }\n\n    /**\n     * @dev Replacement for Solidity's `transfer`: sends `amount` wei to\n     * `recipient`, forwarding all available gas and reverting on errors.\n     *\n     * https://eips.ethereum.org/EIPS/eip-1884[EIP1884] increases the gas cost\n     * of certain opcodes, possibly making contracts go over the 2300 gas limit\n     * imposed by `transfer`, making them unable to receive funds via\n     * `transfer`. {sendValue} removes this limitation.\n     *\n     * https://diligence.consensys.net/posts/2019/09/stop-using-soliditys-transfer-now/[Learn more].\n     *\n     * IMPORTANT: because control is transferred to `recipient`, care must be\n     * taken to not create reentrancy vulnerabilities. Consider using\n     * {ReentrancyGuard} or the\n     * https://solidity.readthedocs.io/en/v0.5.11/security-considerations.html#use-the-checks-effects-interactions-pattern[checks-effects-interactions pattern].\n     */\n    function sendValue(address payable recipient, uint256 amount) internal {\n        require(address(this).balance >= amount, \"Address: insufficient balance\");\n\n        (bool success, ) = recipient.call{value: amount}(\"\");\n        require(success, \"Address: unable to send value, recipient may have reverted\");\n    }\n\n    /**\n     * @dev Performs a Solidity function call using a low level `call`. A\n     * plain `call` is an unsafe replacement for a function call: use this\n     * function instead.\n     *\n     * If `target` reverts with a revert reason, it is bubbled up by this\n     * function (like regular Solidity function calls).\n     *\n     * Returns the raw returned data. To convert to the expected return value,\n     * use https://solidity.readthedocs.io/en/latest/units-and-global-variables.html?highlight=abi.decode#abi-encoding-and-decoding-functions[`abi.decode`].\n     *\n     * Requirements:\n     *\n     * - `target` must be a contract.\n     * - calling `target` with `data` must not revert.\n     *\n     * _Available since v3.1._\n     */\n    function functionCall(address target, bytes memory data) internal returns (bytes memory) {\n        return functionCallWithValue(target, data, 0, \"Address: low-level call failed\");\n    }\n\n    /**\n     * @dev Same as {xref-Address-functionCall-address-bytes-}[`functionCall`], but with\n     * `errorMessage` as a fallback revert reason when `target` reverts.\n     *\n     * _Available since v3.1._\n     */\n    function functionCall(\n        address target,\n        bytes memory data,\n        string memory errorMessage\n    ) internal returns (bytes memory) {\n        return functionCallWithValue(target, data, 0, errorMessage);\n    }\n\n    /**\n     * @dev Same as {xref-Address-functionCall-address-bytes-}[`functionCall`],\n     * but also transferring `value` wei to `target`.\n     *\n     * Requirements:\n     *\n     * - the calling contract must have an ETH balance of at least `value`.\n     * - the called Solidity function must be `payable`.\n     *\n     * _Available since v3.1._\n     */\n    function functionCallWithValue(\n        address target,\n        bytes memory data,\n        uint256 value\n    ) internal returns (bytes memory) {\n        return functionCallWithValue(target, data, value, \"Address: low-level call with value failed\");\n    }\n\n    /**\n     * @dev Same as {xref-Address-functionCallWithValue-address-bytes-uint256-}[`functionCallWithValue`], but\n     * with `errorMessage` as a fallback revert reason when `target` reverts.\n     *\n     * _Available since v3.1._\n     */\n    function functionCallWithValue(\n        address target,\n        bytes memory data,\n        uint256 value,\n        string memory errorMessage\n    ) internal returns (bytes memory) {\n        require(address(this).balance >= value, \"Address: insufficient balance for call\");\n        (bool success, bytes memory returndata) = target.call{value: value}(data);\n        return verifyCallResultFromTarget(target, success, returndata, errorMessage);\n    }\n\n    /**\n     * @dev Same as {xref-Address-functionCall-address-bytes-}[`functionCall`],\n     * but performing a static call.\n     *\n     * _Available since v3.3._\n     */\n    function functionStaticCall(address target, bytes memory data) internal view returns (bytes memory) {\n        return functionStaticCall(target, data, \"Address: low-level static call failed\");\n    }\n\n    /**\n     * @dev Same as {xref-Address-functionCall-address-bytes-string-}[`functionCall`],\n     * but performing a static call.\n     *\n     * _Available since v3.3._\n     */\n    function functionStaticCall(\n        address target,\n        bytes memory data,\n        string memory errorMessage\n    ) internal view returns (bytes memory) {\n        (bool success, bytes memory returndata) = target.staticcall(data);\n        return verifyCallResultFromTarget(target, success, returndata, errorMessage);\n    }\n\n    /**\n     * @dev Same as {xref-Address-functionCall-address-bytes-}[`functionCall`],\n     * but performing a delegate call.\n     *\n     * _Available since v3.4._\n     */\n    function functionDelegateCall(address target, bytes memory data) internal returns (bytes memory) {\n        return functionDelegateCall(target, data, \"Address: low-level delegate call failed\");\n    }\n\n    /**\n     * @dev Same as {xref-Address-functionCall-address-bytes-string-}[`functionCall`],\n     * but performing a delegate call.\n     *\n     * _Available since v3.4._\n     */\n    function functionDelegateCall(\n        address target,\n        bytes memory data,\n        string memory errorMessage\n    ) internal returns (bytes memory) {\n        (bool success, bytes memory returndata) = target.delegatecall(data);\n        return verifyCallResultFromTarget(target, success, returndata, errorMessage);\n    }\n\n    /**\n     * @dev Tool to verify that a low level call to smart-contract was successful, and revert (either by bubbling\n     * the revert reason or using the provided one) in case of unsuccessful call or if target was not a contract.\n     *\n     * _Available since v4.8._\n     */\n    function verifyCallResultFromTarget(\n        address target,\n        bool success,\n        bytes memory returndata,\n        string memory errorMessage\n    ) internal view returns (bytes memory) {\n        if (success) {\n            if (returndata.length == 0) {\n                // only check isContract if the call was successful and the return data is empty\n                // otherwise we already know that it was a contract\n                require(isContract(target), \"Address: call to non-contract\");\n            }\n            return returndata;\n        } else {\n            _revert(returndata, errorMessage);\n        }\n    }\n\n    /**\n     * @dev Tool to verify that a low level call was successful, and revert if it wasn't, either by bubbling the\n     * revert reason or using the provided one.\n     *\n     * _Available since v4.3._\n     */\n    function verifyCallResult(\n        bool success,\n        bytes memory returndata,\n        string memory errorMessage\n    ) internal pure returns (bytes memory) {\n        if (success) {\n            return returndata;\n        } else {\n            _revert(returndata, errorMessage);\n        }\n    }\n\n    function _revert(bytes memory returndata, string memory errorMessage) private pure {\n        // Look for revert reason and bubble it up if present\n        if (returndata.length > 0) {\n            // The easiest way to bubble the revert reason is using memory via assembly\n            /// @solidity memory-safe-assembly\n            assembly {\n                let returndata_size := mload(returndata)\n                revert(add(32, returndata), returndata_size)\n            }\n        } else {\n            revert(errorMessage);\n        }\n    }\n}\n"
			},
			"@openzeppelin/contracts/token/ERC721/extensions/IERC721Metadata.sol": {
				"content": "// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts v4.4.1 (token/ERC721/extensions/IERC721Metadata.sol)\n\npragma solidity ^0.8.0;\n\nimport \"../IERC721.sol\";\n\n/**\n * @title ERC-721 Non-Fungible Token Standard, optional metadata extension\n * @dev See https://eips.ethereum.org/EIPS/eip-721\n */\ninterface IERC721Metadata is IERC721 {\n    /**\n     * @dev Returns the token collection name.\n     */\n    function name() external view returns (string memory);\n\n    /**\n     * @dev Returns the token collection symbol.\n     */\n    function symbol() external view returns (string memory);\n\n    /**\n     * @dev Returns the Uniform Resource Identifier (URI) for `tokenId` token.\n     */\n    function tokenURI(uint256 tokenId) external view returns (string memory);\n}\n"
			},
			"@openzeppelin/contracts/token/ERC721/IERC721Receiver.sol": {
				"content": "// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v4.6.0) (token/ERC721/IERC721Receiver.sol)\n\npragma solidity ^0.8.0;\n\n/**\n * @title ERC721 token receiver interface\n * @dev Interface for any contract that wants to support safeTransfers\n * from ERC721 asset contracts.\n */\ninterface IERC721Receiver {\n    /**\n     * @dev Whenever an {IERC721} `tokenId` token is transferred to this contract via {IERC721-safeTransferFrom}\n     * by `operator` from `from`, this function is called.\n     *\n     * It must return its Solidity selector to confirm the token transfer.\n     * If any other value is returned or the interface is not implemented by the recipient, the transfer will be reverted.\n     *\n     * The selector can be obtained in Solidity with `IERC721Receiver.onERC721Received.selector`.\n     */\n    function onERC721Received(\n        address operator,\n        address from,\n        uint256 tokenId,\n        bytes calldata data\n    ) external returns (bytes4);\n}\n"
			},
			"@openzeppelin/contracts/token/ERC721/IERC721.sol": {
				"content": "// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v4.8.0) (token/ERC721/IERC721.sol)\n\npragma solidity ^0.8.0;\n\nimport \"../../utils/introspection/IERC165.sol\";\n\n/**\n * @dev Required interface of an ERC721 compliant contract.\n */\ninterface IERC721 is IERC165 {\n    /**\n     * @dev Emitted when `tokenId` token is transferred from `from` to `to`.\n     */\n    event Transfer(address indexed from, address indexed to, uint256 indexed tokenId);\n\n    /**\n     * @dev Emitted when `owner` enables `approved` to manage the `tokenId` token.\n     */\n    event Approval(address indexed owner, address indexed approved, uint256 indexed tokenId);\n\n    /**\n     * @dev Emitted when `owner` enables or disables (`approved`) `operator` to manage all of its assets.\n     */\n    event ApprovalForAll(address indexed owner, address indexed operator, bool approved);\n\n    /**\n     * @dev Returns the number of tokens in ``owner``'s account.\n     */\n    function balanceOf(address owner) external view returns (uint256 balance);\n\n    /**\n     * @dev Returns the owner of the `tokenId` token.\n     *\n     * Requirements:\n     *\n     * - `tokenId` must exist.\n     */\n    function ownerOf(uint256 tokenId) external view returns (address owner);\n\n    /**\n     * @dev Safely transfers `tokenId` token from `from` to `to`.\n     *\n     * Requirements:\n     *\n     * - `from` cannot be the zero address.\n     * - `to` cannot be the zero address.\n     * - `tokenId` token must exist and be owned by `from`.\n     * - If the caller is not `from`, it must be approved to move this token by either {approve} or {setApprovalForAll}.\n     * - If `to` refers to a smart contract, it must implement {IERC721Receiver-onERC721Received}, which is called upon a safe transfer.\n     *\n     * Emits a {Transfer} event.\n     */\n    function safeTransferFrom(\n        address from,\n        address to,\n        uint256 tokenId,\n        bytes calldata data\n    ) external;\n\n    /**\n     * @dev Safely transfers `tokenId` token from `from` to `to`, checking first that contract recipients\n     * are aware of the ERC721 protocol to prevent tokens from being forever locked.\n     *\n     * Requirements:\n     *\n     * - `from` cannot be the zero address.\n     * - `to` cannot be the zero address.\n     * - `tokenId` token must exist and be owned by `from`.\n     * - If the caller is not `from`, it must have been allowed to move this token by either {approve} or {setApprovalForAll}.\n     * - If `to` refers to a smart contract, it must implement {IERC721Receiver-onERC721Received}, which is called upon a safe transfer.\n     *\n     * Emits a {Transfer} event.\n     */\n    function safeTransferFrom(\n        address from,\n        address to,\n        uint256 tokenId\n    ) external;\n\n    /**\n     * @dev Transfers `tokenId` token from `from` to `to`.\n     *\n     * WARNING: Note that the caller is responsible to confirm that the recipient is capable of receiving ERC721\n     * or else they may be permanently lost. Usage of {safeTransferFrom} prevents loss, though the caller must\n     * understand this adds an external call which potentially creates a reentrancy vulnerability.\n     *\n     * Requirements:\n     *\n     * - `from` cannot be the zero address.\n     * - `to` cannot be the zero address.\n     * - `tokenId` token must be owned by `from`.\n     * - If the caller is not `from`, it must be approved to move this token by either {approve} or {setApprovalForAll}.\n     *\n     * Emits a {Transfer} event.\n     */\n    function transferFrom(\n        address from,\n        address to,\n        uint256 tokenId\n    ) external;\n\n    /**\n     * @dev Gives permission to `to` to transfer `tokenId` token to another account.\n     * The approval is cleared when the token is transferred.\n     *\n     * Only a single account can be approved at a time, so approving the zero address clears previous approvals.\n     *\n     * Requirements:\n     *\n     * - The caller must own the token or be an approved operator.\n     * - `tokenId` must exist.\n     *\n     * Emits an {Approval} event.\n     */\n    function approve(address to, uint256 tokenId) external;\n\n    /**\n     * @dev Approve or remove `operator` as an operator for the caller.\n     * Operators can call {transferFrom} or {safeTransferFrom} for any token owned by the caller.\n     *\n     * Requirements:\n     *\n     * - The `operator` cannot be the caller.\n     *\n     * Emits an {ApprovalForAll} event.\n     */\n    function setApprovalForAll(address operator, bool _approved) external;\n\n    /**\n     * @dev Returns the account approved for `tokenId` token.\n     *\n     * Requirements:\n     *\n     * - `tokenId` must exist.\n     */\n    function getApproved(uint256 tokenId) external view returns (address operator);\n\n    /**\n     * @dev Returns if the `operator` is allowed to manage all of the assets of `owner`.\n     *\n     * See {setApprovalForAll}\n     */\n    function isApprovedForAll(address owner, address operator) external view returns (bool);\n}\n"
			},
			"@openzeppelin/contracts/utils/introspection/IERC165.sol": {
				"content": "// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts v4.4.1 (utils/introspection/IERC165.sol)\n\npragma solidity ^0.8.0;\n\n/**\n * @dev Interface of the ERC165 standard, as defined in the\n * https://eips.ethereum.org/EIPS/eip-165[EIP].\n *\n * Implementers can declare support of contract interfaces, which can then be\n * queried by others ({ERC165Checker}).\n *\n * For an implementation, see {ERC165}.\n */\ninterface IERC165 {\n    /**\n     * @dev Returns true if this contract implements the interface defined by\n     * `interfaceId`. See the corresponding\n     * https://eips.ethereum.org/EIPS/eip-165#how-interfaces-are-identified[EIP section]\n     * to learn more about how these ids are created.\n     *\n     * This function call must use less than 30 000 gas.\n     */\n    function supportsInterface(bytes4 interfaceId) external view returns (bool);\n}\n"
			},
			"@openzeppelin/contracts/utils/math/Math.sol": {
				"content": "// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v4.8.0) (utils/math/Math.sol)\n\npragma solidity ^0.8.0;\n\n/**\n * @dev Standard math utilities missing in the Solidity language.\n */\nlibrary Math {\n    enum Rounding {\n        Down, // Toward negative infinity\n        Up, // Toward infinity\n        Zero // Toward zero\n    }\n\n    /**\n     * @dev Returns the largest of two numbers.\n     */\n    function max(uint256 a, uint256 b) internal pure returns (uint256) {\n        return a > b ? a : b;\n    }\n\n    /**\n     * @dev Returns the smallest of two numbers.\n     */\n    function min(uint256 a, uint256 b) internal pure returns (uint256) {\n        return a < b ? a : b;\n    }\n\n    /**\n     * @dev Returns the average of two numbers. The result is rounded towards\n     * zero.\n     */\n    function average(uint256 a, uint256 b) internal pure returns (uint256) {\n        // (a + b) / 2 can overflow.\n        return (a & b) + (a ^ b) / 2;\n    }\n\n    /**\n     * @dev Returns the ceiling of the division of two numbers.\n     *\n     * This differs from standard division with `/` in that it rounds up instead\n     * of rounding down.\n     */\n    function ceilDiv(uint256 a, uint256 b) internal pure returns (uint256) {\n        // (a + b - 1) / b can overflow on addition, so we distribute.\n        return a == 0 ? 0 : (a - 1) / b + 1;\n    }\n\n    /**\n     * @notice Calculates floor(x * y / denominator) with full precision. Throws if result overflows a uint256 or denominator == 0\n     * @dev Original credit to Remco Bloemen under MIT license (https://xn--2-umb.com/21/muldiv)\n     * with further edits by Uniswap Labs also under MIT license.\n     */\n    function mulDiv(\n        uint256 x,\n        uint256 y,\n        uint256 denominator\n    ) internal pure returns (uint256 result) {\n        unchecked {\n            // 512-bit multiply [prod1 prod0] = x * y. Compute the product mod 2^256 and mod 2^256 - 1, then use\n            // use the Chinese Remainder Theorem to reconstruct the 512 bit result. The result is stored in two 256\n            // variables such that product = prod1 * 2^256 + prod0.\n            uint256 prod0; // Least significant 256 bits of the product\n            uint256 prod1; // Most significant 256 bits of the product\n            assembly {\n                let mm := mulmod(x, y, not(0))\n                prod0 := mul(x, y)\n                prod1 := sub(sub(mm, prod0), lt(mm, prod0))\n            }\n\n            // Handle non-overflow cases, 256 by 256 division.\n            if (prod1 == 0) {\n                return prod0 / denominator;\n            }\n\n            // Make sure the result is less than 2^256. Also prevents denominator == 0.\n            require(denominator > prod1);\n\n            ///////////////////////////////////////////////\n            // 512 by 256 division.\n            ///////////////////////////////////////////////\n\n            // Make division exact by subtracting the remainder from [prod1 prod0].\n            uint256 remainder;\n            assembly {\n                // Compute remainder using mulmod.\n                remainder := mulmod(x, y, denominator)\n\n                // Subtract 256 bit number from 512 bit number.\n                prod1 := sub(prod1, gt(remainder, prod0))\n                prod0 := sub(prod0, remainder)\n            }\n\n            // Factor powers of two out of denominator and compute largest power of two divisor of denominator. Always >= 1.\n            // See https://cs.stackexchange.com/q/138556/92363.\n\n            // Does not overflow because the denominator cannot be zero at this stage in the function.\n            uint256 twos = denominator & (~denominator + 1);\n            assembly {\n                // Divide denominator by twos.\n                denominator := div(denominator, twos)\n\n                // Divide [prod1 prod0] by twos.\n                prod0 := div(prod0, twos)\n\n                // Flip twos such that it is 2^256 / twos. If twos is zero, then it becomes one.\n                twos := add(div(sub(0, twos), twos), 1)\n            }\n\n            // Shift in bits from prod1 into prod0.\n            prod0 |= prod1 * twos;\n\n            // Invert denominator mod 2^256. Now that denominator is an odd number, it has an inverse modulo 2^256 such\n            // that denominator * inv = 1 mod 2^256. Compute the inverse by starting with a seed that is correct for\n            // four bits. That is, denominator * inv = 1 mod 2^4.\n            uint256 inverse = (3 * denominator) ^ 2;\n\n            // Use the Newton-Raphson iteration to improve the precision. Thanks to Hensel's lifting lemma, this also works\n            // in modular arithmetic, doubling the correct bits in each step.\n            inverse *= 2 - denominator * inverse; // inverse mod 2^8\n            inverse *= 2 - denominator * inverse; // inverse mod 2^16\n            inverse *= 2 - denominator * inverse; // inverse mod 2^32\n            inverse *= 2 - denominator * inverse; // inverse mod 2^64\n            inverse *= 2 - denominator * inverse; // inverse mod 2^128\n            inverse *= 2 - denominator * inverse; // inverse mod 2^256\n\n            // Because the division is now exact we can divide by multiplying with the modular inverse of denominator.\n            // This will give us the correct result modulo 2^256. Since the preconditions guarantee that the outcome is\n            // less than 2^256, this is the final result. We don't need to compute the high bits of the result and prod1\n            // is no longer required.\n            result = prod0 * inverse;\n            return result;\n        }\n    }\n\n    /**\n     * @notice Calculates x * y / denominator with full precision, following the selected rounding direction.\n     */\n    function mulDiv(\n        uint256 x,\n        uint256 y,\n        uint256 denominator,\n        Rounding rounding\n    ) internal pure returns (uint256) {\n        uint256 result = mulDiv(x, y, denominator);\n        if (rounding == Rounding.Up && mulmod(x, y, denominator) > 0) {\n            result += 1;\n        }\n        return result;\n    }\n\n    /**\n     * @dev Returns the square root of a number. If the number is not a perfect square, the value is rounded down.\n     *\n     * Inspired by Henry S. Warren, Jr.'s \"Hacker's Delight\" (Chapter 11).\n     */\n    function sqrt(uint256 a) internal pure returns (uint256) {\n        if (a == 0) {\n            return 0;\n        }\n\n        // For our first guess, we get the biggest power of 2 which is smaller than the square root of the target.\n        //\n        // We know that the \"msb\" (most significant bit) of our target number `a` is a power of 2 such that we have\n        // `msb(a) <= a < 2*msb(a)`. This value can be written `msb(a)=2**k` with `k=log2(a)`.\n        //\n        // This can be rewritten `2**log2(a) <= a < 2**(log2(a) + 1)`\n        // → `sqrt(2**k) <= sqrt(a) < sqrt(2**(k+1))`\n        // → `2**(k/2) <= sqrt(a) < 2**((k+1)/2) <= 2**(k/2 + 1)`\n        //\n        // Consequently, `2**(log2(a) / 2)` is a good first approximation of `sqrt(a)` with at least 1 correct bit.\n        uint256 result = 1 << (log2(a) >> 1);\n\n        // At this point `result` is an estimation with one bit of precision. We know the true value is a uint128,\n        // since it is the square root of a uint256. Newton's method converges quadratically (precision doubles at\n        // every iteration). We thus need at most 7 iteration to turn our partial result with one bit of precision\n        // into the expected uint128 result.\n        unchecked {\n            result = (result + a / result) >> 1;\n            result = (result + a / result) >> 1;\n            result = (result + a / result) >> 1;\n            result = (result + a / result) >> 1;\n            result = (result + a / result) >> 1;\n            result = (result + a / result) >> 1;\n            result = (result + a / result) >> 1;\n            return min(result, a / result);\n        }\n    }\n\n    /**\n     * @notice Calculates sqrt(a), following the selected rounding direction.\n     */\n    function sqrt(uint256 a, Rounding rounding) internal pure returns (uint256) {\n        unchecked {\n            uint256 result = sqrt(a);\n            return result + (rounding == Rounding.Up && result * result < a ? 1 : 0);\n        }\n    }\n\n    /**\n     * @dev Return the log in base 2, rounded down, of a positive value.\n     * Returns 0 if given 0.\n     */\n    function log2(uint256 value) internal pure returns (uint256) {\n        uint256 result = 0;\n        unchecked {\n            if (value >> 128 > 0) {\n                value >>= 128;\n                result += 128;\n            }\n            if (value >> 64 > 0) {\n                value >>= 64;\n                result += 64;\n            }\n            if (value >> 32 > 0) {\n                value >>= 32;\n                result += 32;\n            }\n            if (value >> 16 > 0) {\n                value >>= 16;\n                result += 16;\n            }\n            if (value >> 8 > 0) {\n                value >>= 8;\n                result += 8;\n            }\n            if (value >> 4 > 0) {\n                value >>= 4;\n                result += 4;\n            }\n            if (value >> 2 > 0) {\n                value >>= 2;\n                result += 2;\n            }\n            if (value >> 1 > 0) {\n                result += 1;\n            }\n        }\n        return result;\n    }\n\n    /**\n     * @dev Return the log in base 2, following the selected rounding direction, of a positive value.\n     * Returns 0 if given 0.\n     */\n    function log2(uint256 value, Rounding rounding) internal pure returns (uint256) {\n        unchecked {\n            uint256 result = log2(value);\n            return result + (rounding == Rounding.Up && 1 << result < value ? 1 : 0);\n        }\n    }\n\n    /**\n     * @dev Return the log in base 10, rounded down, of a positive value.\n     * Returns 0 if given 0.\n     */\n    function log10(uint256 value) internal pure returns (uint256) {\n        uint256 result = 0;\n        unchecked {\n            if (value >= 10**64) {\n                value /= 10**64;\n                result += 64;\n            }\n            if (value >= 10**32) {\n                value /= 10**32;\n                result += 32;\n            }\n            if (value >= 10**16) {\n                value /= 10**16;\n                result += 16;\n            }\n            if (value >= 10**8) {\n                value /= 10**8;\n                result += 8;\n            }\n            if (value >= 10**4) {\n                value /= 10**4;\n                result += 4;\n            }\n            if (value >= 10**2) {\n                value /= 10**2;\n                result += 2;\n            }\n            if (value >= 10**1) {\n                result += 1;\n            }\n        }\n        return result;\n    }\n\n    /**\n     * @dev Return the log in base 10, following the selected rounding direction, of a positive value.\n     * Returns 0 if given 0.\n     */\n    function log10(uint256 value, Rounding rounding) internal pure returns (uint256) {\n        unchecked {\n            uint256 result = log10(value);\n            return result + (rounding == Rounding.Up && 10**result < value ? 1 : 0);\n        }\n    }\n\n    /**\n     * @dev Return the log in base 256, rounded down, of a positive value.\n     * Returns 0 if given 0.\n     *\n     * Adding one to the result gives the number of pairs of hex symbols needed to represent `value` as a hex string.\n     */\n    function log256(uint256 value) internal pure returns (uint256) {\n        uint256 result = 0;\n        unchecked {\n            if (value >> 128 > 0) {\n                value >>= 128;\n                result += 16;\n            }\n            if (value >> 64 > 0) {\n                value >>= 64;\n                result += 8;\n            }\n            if (value >> 32 > 0) {\n                value >>= 32;\n                result += 4;\n            }\n            if (value >> 16 > 0) {\n                value >>= 16;\n                result += 2;\n            }\n            if (value >> 8 > 0) {\n                result += 1;\n            }\n        }\n        return result;\n    }\n\n    /**\n     * @dev Return the log in base 10, following the selected rounding direction, of a positive value.\n     * Returns 0 if given 0.\n     */\n    function log256(uint256 value, Rounding rounding) internal pure returns (uint256) {\n        unchecked {\n            uint256 result = log256(value);\n            return result + (rounding == Rounding.Up && 1 << (result * 8) < value ? 1 : 0);\n        }\n    }\n}\n"
			}
		},
		"settings": {
			"optimizer": {
				"enabled": true,
				"runs": 200
			},
			"outputSelection": {
				"*": {
					"": [
						"ast"
					],
					"*": [
						"abi",
						"metadata",
						"devdoc",
						"userdoc",
						"storageLayout",
						"evm.legacyAssembly",
						"evm.bytecode",
						"evm.deployedBytecode",
						"evm.methodIdentifiers",
						"evm.gasEstimates",
						"evm.assembly"
					]
				}
			}
		}
	},
	"output": {
		"contracts": {
			"@openzeppelin/contracts/token/ERC721/ERC721.sol": {
				"ERC721": {
					"abi": [
						{
							"inputs": [
								{
									"internalType": "string",
									"name": "name_",
									"type": "string"
								},
								{
									"internalType": "string",
									"name": "symbol_",
									"type": "string"
								}
							],
							"stateMutability": "nonpayable",
							"type": "constructor"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "approved",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								}
							],
							"name": "Approval",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "operator",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "bool",
									"name": "approved",
									"type": "bool"
								}
							],
							"name": "ApprovalForAll",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								}
							],
							"name": "Transfer",
							"type": "event"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								}
							],
							"name": "approve",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "owner",
									"type": "address"
								}
							],
							"name": "balanceOf",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								}
							],
							"name": "getApproved",
							"outputs": [
								{
									"internalType": "address",
									"name": "",
									"type": "address"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "operator",
									"type": "address"
								}
							],
							"name": "isApprovedForAll",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "name",
							"outputs": [
								{
									"internalType": "string",
									"name": "",
									"type": "string"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								}
							],
							"name": "ownerOf",
							"outputs": [
								{
									"internalType": "address",
									"name": "",
									"type": "address"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								}
							],
							"name": "safeTransferFrom",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								},
								{
									"internalType": "bytes",
									"name": "data",
									"type": "bytes"
								}
							],
							"name": "safeTransferFrom",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "operator",
									"type": "address"
								},
								{
									"internalType": "bool",
									"name": "approved",
									"type": "bool"
								}
							],
							"name": "setApprovalForAll",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "bytes4",
									"name": "interfaceId",
									"type": "bytes4"
								}
							],
							"name": "supportsInterface",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "symbol",
							"outputs": [
								{
									"internalType": "string",
									"name": "",
									"type": "string"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								}
							],
							"name": "tokenURI",
							"outputs": [
								{
									"internalType": "string",
									"name": "",
									"type": "string"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								}
							],
							"name": "transferFrom",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						}
					],
					"devdoc": {
						"details": "Implementation of https://eips.ethereum.org/EIPS/eip-721[ERC721] Non-Fungible Token Standard, including the Metadata extension, but not including the Enumerable extension, which is available separately as {ERC721Enumerable}.",
						"events": {
							"Approval(address,address,uint256)": {
								"details": "Emitted when `owner` enables `approved` to manage the `tokenId` token."
							},
							"ApprovalForAll(address,address,bool)": {
								"details": "Emitted when `owner` enables or disables (`approved`) `operator` to manage all of its assets."
							},
							"Transfer(address,address,uint256)": {
								"details": "Emitted when `tokenId` token is transferred from `from` to `to`."
							}
						},
						"kind": "dev",
						"methods": {
							"approve(address,uint256)": {
								"details": "See {IERC721-approve}."
							},
							"balanceOf(address)": {
								"details": "See {IERC721-balanceOf}."
							},
							"constructor": {
								"details": "Initializes the contract by setting a `name` and a `symbol` to the token collection."
							},
							"getApproved(uint256)": {
								"details": "See {IERC721-getApproved}."
							},
							"isApprovedForAll(address,address)": {
								"details": "See {IERC721-isApprovedForAll}."
							},
							"name()": {
								"details": "See {IERC721Metadata-name}."
							},
							"ownerOf(uint256)": {
								"details": "See {IERC721-ownerOf}."
							},
							"safeTransferFrom(address,address,uint256)": {
								"details": "See {IERC721-safeTransferFrom}."
							},
							"safeTransferFrom(address,address,uint256,bytes)": {
								"details": "See {IERC721-safeTransferFrom}."
							},
							"setApprovalForAll(address,bool)": {
								"details": "See {IERC721-setApprovalForAll}."
							},
							"supportsInterface(bytes4)": {
								"details": "See {IERC165-supportsInterface}."
							},
							"symbol()": {
								"details": "See {IERC721Metadata-symbol}."
							},
							"tokenURI(uint256)": {
								"details": "See {IERC721Metadata-tokenURI}."
							},
							"transferFrom(address,address,uint256)": {
								"details": "See {IERC721-transferFrom}."
							}
						},
						"version": 1
					},
					"evm": {
						"assembly": "    /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":628:16955  contract ERC721 is Context, ERC165, IERC721, IERC721Metadata {... */\n  mstore(0x40, 0x80)\n    /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":1390:1503  constructor(string memory name_, string memory symbol_) {... */\n  callvalue\n  dup1\n  iszero\n  tag_1\n  jumpi\n  0x00\n  dup1\n  revert\ntag_1:\n  pop\n  mload(0x40)\n  sub(codesize, bytecodeSize)\n  dup1\n  bytecodeSize\n  dup4\n  codecopy\n  dup2\n  add\n  0x40\n  dup2\n  swap1\n  mstore\n  tag_2\n  swap2\n  tag_3\n  jump\t// in\ntag_2:\n    /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":1456:1461  _name */\n  0x00\n    /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":1456:1469  _name = name_ */\n  tag_6\n    /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":1464:1469  name_ */\n  dup4\n    /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":1456:1461  _name */\n  dup3\n    /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":1456:1469  _name = name_ */\n  tag_7\n  jump\t// in\ntag_6:\n  pop\n    /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":1479:1486  _symbol */\n  0x01\n    /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":1479:1496  _symbol = symbol_ */\n  tag_8\n    /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":1489:1496  symbol_ */\n  dup3\n    /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":1479:1486  _symbol */\n  dup3\n    /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":1479:1496  _symbol = symbol_ */\n  tag_7\n  jump\t// in\ntag_8:\n  pop\n    /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":1390:1503  constructor(string memory name_, string memory symbol_) {... */\n  pop\n  pop\n    /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":628:16955  contract ERC721 is Context, ERC165, IERC721, IERC721Metadata {... */\n  jump(tag_16)\n    /* \"#utility.yul\":14:141   */\ntag_10:\n    /* \"#utility.yul\":75:85   */\n  0x4e487b71\n    /* \"#utility.yul\":70:73   */\n  0xe0\n    /* \"#utility.yul\":66:86   */\n  shl\n    /* \"#utility.yul\":63:64   */\n  0x00\n    /* \"#utility.yul\":56:87   */\n  mstore\n    /* \"#utility.yul\":106:110   */\n  0x41\n    /* \"#utility.yul\":103:104   */\n  0x04\n    /* \"#utility.yul\":96:111   */\n  mstore\n    /* \"#utility.yul\":130:134   */\n  0x24\n    /* \"#utility.yul\":127:128   */\n  0x00\n    /* \"#utility.yul\":120:135   */\n  revert\n    /* \"#utility.yul\":146:986   */\ntag_11:\n    /* \"#utility.yul\":200:205   */\n  0x00\n    /* \"#utility.yul\":253:256   */\n  dup3\n    /* \"#utility.yul\":246:250   */\n  0x1f\n    /* \"#utility.yul\":238:244   */\n  dup4\n    /* \"#utility.yul\":234:251   */\n  add\n    /* \"#utility.yul\":230:257   */\n  slt\n    /* \"#utility.yul\":220:275   */\n  tag_19\n  jumpi\n    /* \"#utility.yul\":271:272   */\n  0x00\n    /* \"#utility.yul\":268:269   */\n  dup1\n    /* \"#utility.yul\":261:273   */\n  revert\n    /* \"#utility.yul\":220:275   */\ntag_19:\n    /* \"#utility.yul\":294:307   */\n  dup2\n  mload\n  sub(shl(0x40, 0x01), 0x01)\n    /* \"#utility.yul\":356:366   */\n  dup1\n  dup3\n  gt\n    /* \"#utility.yul\":353:389   */\n  iszero\n  tag_21\n  jumpi\n    /* \"#utility.yul\":369:387   */\n  tag_21\n  tag_10\n  jump\t// in\ntag_21:\n    /* \"#utility.yul\":444:446   */\n  0x40\n    /* \"#utility.yul\":438:447   */\n  mload\n    /* \"#utility.yul\":412:414   */\n  0x1f\n    /* \"#utility.yul\":498:511   */\n  dup4\n  add\n  not(0x1f)\n    /* \"#utility.yul\":494:516   */\n  swap1\n  dup2\n  and\n    /* \"#utility.yul\":518:520   */\n  0x3f\n    /* \"#utility.yul\":490:521   */\n  add\n    /* \"#utility.yul\":486:526   */\n  and\n    /* \"#utility.yul\":474:527   */\n  dup2\n  add\n  swap1\n    /* \"#utility.yul\":542:560   */\n  dup3\n  dup3\n  gt\n    /* \"#utility.yul\":562:584   */\n  dup2\n  dup4\n  lt\n    /* \"#utility.yul\":539:585   */\n  or\n    /* \"#utility.yul\":536:608   */\n  iszero\n  tag_23\n  jumpi\n    /* \"#utility.yul\":588:606   */\n  tag_23\n  tag_10\n  jump\t// in\ntag_23:\n    /* \"#utility.yul\":628:638   */\n  dup2\n    /* \"#utility.yul\":624:626   */\n  0x40\n    /* \"#utility.yul\":617:639   */\n  mstore\n    /* \"#utility.yul\":663:665   */\n  dup4\n    /* \"#utility.yul\":655:661   */\n  dup2\n    /* \"#utility.yul\":648:666   */\n  mstore\n    /* \"#utility.yul\":685:689   */\n  0x20\n    /* \"#utility.yul\":675:689   */\n  swap3\n  pop\n    /* \"#utility.yul\":730:733   */\n  dup7\n    /* \"#utility.yul\":725:727   */\n  dup4\n    /* \"#utility.yul\":720:722   */\n  dup6\n    /* \"#utility.yul\":712:718   */\n  dup9\n    /* \"#utility.yul\":708:723   */\n  add\n    /* \"#utility.yul\":704:728   */\n  add\n    /* \"#utility.yul\":701:734   */\n  gt\n    /* \"#utility.yul\":698:751   */\n  iszero\n  tag_24\n  jumpi\n    /* \"#utility.yul\":747:748   */\n  0x00\n    /* \"#utility.yul\":744:745   */\n  dup1\n    /* \"#utility.yul\":737:749   */\n  revert\n    /* \"#utility.yul\":698:751   */\ntag_24:\n    /* \"#utility.yul\":769:770   */\n  0x00\n    /* \"#utility.yul\":760:770   */\n  swap2\n  pop\n    /* \"#utility.yul\":779:912   */\ntag_25:\n    /* \"#utility.yul\":793:795   */\n  dup4\n    /* \"#utility.yul\":790:791   */\n  dup3\n    /* \"#utility.yul\":787:796   */\n  lt\n    /* \"#utility.yul\":779:912   */\n  iszero\n  tag_27\n  jumpi\n    /* \"#utility.yul\":881:895   */\n  dup6\n  dup3\n  add\n    /* \"#utility.yul\":877:900   */\n  dup4\n  add\n    /* \"#utility.yul\":871:901   */\n  mload\n    /* \"#utility.yul\":850:864   */\n  dup2\n  dup4\n  add\n    /* \"#utility.yul\":846:869   */\n  dup5\n  add\n    /* \"#utility.yul\":839:902   */\n  mstore\n    /* \"#utility.yul\":804:814   */\n  swap1\n  dup3\n  add\n  swap1\n    /* \"#utility.yul\":779:912   */\n  jump(tag_25)\ntag_27:\n    /* \"#utility.yul\":954:955   */\n  0x00\n    /* \"#utility.yul\":932:947   */\n  swap4\n  dup2\n  add\n    /* \"#utility.yul\":928:952   */\n  swap1\n  swap3\n  add\n    /* \"#utility.yul\":921:956   */\n  swap3\n  swap1\n  swap3\n  mstore\n    /* \"#utility.yul\":936:942   */\n  swap5\n    /* \"#utility.yul\":146:986   */\n  swap4\n  pop\n  pop\n  pop\n  pop\n  jump\t// out\n    /* \"#utility.yul\":991:1553   */\ntag_3:\n    /* \"#utility.yul\":1090:1096   */\n  0x00\n    /* \"#utility.yul\":1098:1104   */\n  dup1\n    /* \"#utility.yul\":1151:1153   */\n  0x40\n    /* \"#utility.yul\":1139:1148   */\n  dup4\n    /* \"#utility.yul\":1130:1137   */\n  dup6\n    /* \"#utility.yul\":1126:1149   */\n  sub\n    /* \"#utility.yul\":1122:1154   */\n  slt\n    /* \"#utility.yul\":1119:1171   */\n  iszero\n  tag_29\n  jumpi\n    /* \"#utility.yul\":1167:1168   */\n  0x00\n    /* \"#utility.yul\":1164:1165   */\n  dup1\n    /* \"#utility.yul\":1157:1169   */\n  revert\n    /* \"#utility.yul\":1119:1171   */\ntag_29:\n    /* \"#utility.yul\":1194:1210   */\n  dup3\n  mload\n  sub(shl(0x40, 0x01), 0x01)\n    /* \"#utility.yul\":1259:1273   */\n  dup1\n  dup3\n  gt\n    /* \"#utility.yul\":1256:1290   */\n  iszero\n  tag_30\n  jumpi\n    /* \"#utility.yul\":1286:1287   */\n  0x00\n    /* \"#utility.yul\":1283:1284   */\n  dup1\n    /* \"#utility.yul\":1276:1288   */\n  revert\n    /* \"#utility.yul\":1256:1290   */\ntag_30:\n    /* \"#utility.yul\":1309:1370   */\n  tag_31\n    /* \"#utility.yul\":1362:1369   */\n  dup7\n    /* \"#utility.yul\":1353:1359   */\n  dup4\n    /* \"#utility.yul\":1342:1351   */\n  dup8\n    /* \"#utility.yul\":1338:1360   */\n  add\n    /* \"#utility.yul\":1309:1370   */\n  tag_11\n  jump\t// in\ntag_31:\n    /* \"#utility.yul\":1299:1370   */\n  swap4\n  pop\n    /* \"#utility.yul\":1416:1418   */\n  0x20\n    /* \"#utility.yul\":1405:1414   */\n  dup6\n    /* \"#utility.yul\":1401:1419   */\n  add\n    /* \"#utility.yul\":1395:1420   */\n  mload\n    /* \"#utility.yul\":1379:1420   */\n  swap2\n  pop\n    /* \"#utility.yul\":1445:1447   */\n  dup1\n    /* \"#utility.yul\":1435:1443   */\n  dup3\n    /* \"#utility.yul\":1432:1448   */\n  gt\n    /* \"#utility.yul\":1429:1465   */\n  iszero\n  tag_32\n  jumpi\n    /* \"#utility.yul\":1461:1462   */\n  0x00\n    /* \"#utility.yul\":1458:1459   */\n  dup1\n    /* \"#utility.yul\":1451:1463   */\n  revert\n    /* \"#utility.yul\":1429:1465   */\ntag_32:\n  pop\n    /* \"#utility.yul\":1484:1547   */\n  tag_33\n    /* \"#utility.yul\":1539:1546   */\n  dup6\n    /* \"#utility.yul\":1528:1536   */\n  dup3\n    /* \"#utility.yul\":1517:1526   */\n  dup7\n    /* \"#utility.yul\":1513:1537   */\n  add\n    /* \"#utility.yul\":1484:1547   */\n  tag_11\n  jump\t// in\ntag_33:\n    /* \"#utility.yul\":1474:1547   */\n  swap2\n  pop\n  pop\n    /* \"#utility.yul\":991:1553   */\n  swap3\n  pop\n  swap3\n  swap1\n  pop\n  jump\t// out\n    /* \"#utility.yul\":1558:1938   */\ntag_12:\n    /* \"#utility.yul\":1637:1638   */\n  0x01\n    /* \"#utility.yul\":1633:1645   */\n  dup2\n  dup2\n  shr\n  swap1\n    /* \"#utility.yul\":1680:1692   */\n  dup3\n  and\n  dup1\n    /* \"#utility.yul\":1701:1762   */\n  tag_35\n  jumpi\n    /* \"#utility.yul\":1755:1759   */\n  0x7f\n    /* \"#utility.yul\":1747:1753   */\n  dup3\n    /* \"#utility.yul\":1743:1760   */\n  and\n    /* \"#utility.yul\":1733:1760   */\n  swap2\n  pop\n    /* \"#utility.yul\":1701:1762   */\ntag_35:\n    /* \"#utility.yul\":1808:1810   */\n  0x20\n    /* \"#utility.yul\":1800:1806   */\n  dup3\n    /* \"#utility.yul\":1797:1811   */\n  lt\n    /* \"#utility.yul\":1777:1795   */\n  dup2\n    /* \"#utility.yul\":1774:1812   */\n  sub\n    /* \"#utility.yul\":1771:1932   */\n  tag_36\n  jumpi\n    /* \"#utility.yul\":1854:1864   */\n  0x4e487b71\n    /* \"#utility.yul\":1849:1852   */\n  0xe0\n    /* \"#utility.yul\":1845:1865   */\n  shl\n    /* \"#utility.yul\":1842:1843   */\n  0x00\n    /* \"#utility.yul\":1835:1866   */\n  mstore\n    /* \"#utility.yul\":1889:1893   */\n  0x22\n    /* \"#utility.yul\":1886:1887   */\n  0x04\n    /* \"#utility.yul\":1879:1894   */\n  mstore\n    /* \"#utility.yul\":1917:1921   */\n  0x24\n    /* \"#utility.yul\":1914:1915   */\n  0x00\n    /* \"#utility.yul\":1907:1922   */\n  revert\n    /* \"#utility.yul\":1771:1932   */\ntag_36:\n  pop\n    /* \"#utility.yul\":1558:1938   */\n  swap2\n  swap1\n  pop\n  jump\t// out\n    /* \"#utility.yul\":2069:2614   */\ntag_14:\n    /* \"#utility.yul\":2171:2173   */\n  0x1f\n    /* \"#utility.yul\":2166:2169   */\n  dup3\n    /* \"#utility.yul\":2163:2174   */\n  gt\n    /* \"#utility.yul\":2160:2608   */\n  iszero\n  tag_39\n  jumpi\n    /* \"#utility.yul\":2207:2208   */\n  0x00\n    /* \"#utility.yul\":2232:2237   */\n  dup2\n    /* \"#utility.yul\":2228:2230   */\n  dup2\n    /* \"#utility.yul\":2221:2238   */\n  mstore\n    /* \"#utility.yul\":2277:2281   */\n  0x20\n    /* \"#utility.yul\":2273:2275   */\n  dup2\n    /* \"#utility.yul\":2263:2282   */\n  keccak256\n    /* \"#utility.yul\":2347:2349   */\n  0x1f\n    /* \"#utility.yul\":2335:2345   */\n  dup6\n    /* \"#utility.yul\":2331:2350   */\n  add\n    /* \"#utility.yul\":2328:2329   */\n  0x05\n    /* \"#utility.yul\":2324:2351   */\n  shr\n    /* \"#utility.yul\":2318:2322   */\n  dup2\n    /* \"#utility.yul\":2314:2352   */\n  add\n    /* \"#utility.yul\":2383:2387   */\n  0x20\n    /* \"#utility.yul\":2371:2381   */\n  dup7\n    /* \"#utility.yul\":2368:2388   */\n  lt\n    /* \"#utility.yul\":2365:2412   */\n  iszero\n  tag_40\n  jumpi\n  pop\n    /* \"#utility.yul\":2406:2410   */\n  dup1\n    /* \"#utility.yul\":2365:2412   */\ntag_40:\n    /* \"#utility.yul\":2461:2463   */\n  0x1f\n    /* \"#utility.yul\":2456:2459   */\n  dup6\n    /* \"#utility.yul\":2452:2464   */\n  add\n    /* \"#utility.yul\":2449:2450   */\n  0x05\n    /* \"#utility.yul\":2445:2465   */\n  shr\n    /* \"#utility.yul\":2439:2443   */\n  dup3\n    /* \"#utility.yul\":2435:2466   */\n  add\n    /* \"#utility.yul\":2425:2466   */\n  swap2\n  pop\n    /* \"#utility.yul\":2516:2598   */\ntag_41:\n    /* \"#utility.yul\":2534:2536   */\n  dup2\n    /* \"#utility.yul\":2527:2532   */\n  dup2\n    /* \"#utility.yul\":2524:2537   */\n  lt\n    /* \"#utility.yul\":2516:2598   */\n  iszero\n  tag_43\n  jumpi\n    /* \"#utility.yul\":2579:2596   */\n  dup3\n  dup2\n  sstore\n    /* \"#utility.yul\":2560:2561   */\n  0x01\n    /* \"#utility.yul\":2549:2562   */\n  add\n    /* \"#utility.yul\":2516:2598   */\n  jump(tag_41)\ntag_43:\n    /* \"#utility.yul\":2520:2523   */\n  pop\n  pop\n  pop\n    /* \"#utility.yul\":2160:2608   */\ntag_39:\n    /* \"#utility.yul\":2069:2614   */\n  pop\n  pop\n  pop\n  jump\t// out\n    /* \"#utility.yul\":2790:4142   */\ntag_7:\n    /* \"#utility.yul\":2910:2920   */\n  dup2\n  mload\n  sub(shl(0x40, 0x01), 0x01)\n    /* \"#utility.yul\":2932:2962   */\n  dup2\n  gt\n    /* \"#utility.yul\":2929:2985   */\n  iszero\n  tag_47\n  jumpi\n    /* \"#utility.yul\":2965:2983   */\n  tag_47\n  tag_10\n  jump\t// in\ntag_47:\n    /* \"#utility.yul\":2994:3091   */\n  tag_48\n    /* \"#utility.yul\":3084:3090   */\n  dup2\n    /* \"#utility.yul\":3044:3082   */\n  tag_49\n    /* \"#utility.yul\":3076:3080   */\n  dup5\n    /* \"#utility.yul\":3070:3081   */\n  sload\n    /* \"#utility.yul\":3044:3082   */\n  tag_12\n  jump\t// in\ntag_49:\n    /* \"#utility.yul\":3038:3042   */\n  dup5\n    /* \"#utility.yul\":2994:3091   */\n  tag_14\n  jump\t// in\ntag_48:\n    /* \"#utility.yul\":3146:3150   */\n  0x20\n  dup1\n    /* \"#utility.yul\":3210:3212   */\n  0x1f\n    /* \"#utility.yul\":3199:3213   */\n  dup4\n  gt\n    /* \"#utility.yul\":3227:3228   */\n  0x01\n    /* \"#utility.yul\":3222:3885   */\n  dup2\n  eq\n  tag_51\n  jumpi\n    /* \"#utility.yul\":3929:3930   */\n  0x00\n    /* \"#utility.yul\":3946:3952   */\n  dup5\n    /* \"#utility.yul\":3943:4032   */\n  iszero\n  tag_52\n  jumpi\n  pop\n    /* \"#utility.yul\":3998:4017   */\n  dup6\n  dup4\n  add\n    /* \"#utility.yul\":3992:4018   */\n  mload\n    /* \"#utility.yul\":3943:4032   */\ntag_52:\n  not(0x00)\n    /* \"#utility.yul\":2747:2748   */\n  0x03\n    /* \"#utility.yul\":2743:2754   */\n  dup7\n  swap1\n  shl\n    /* \"#utility.yul\":2739:2763   */\n  shr\n    /* \"#utility.yul\":2735:2764   */\n  not\n    /* \"#utility.yul\":2725:2765   */\n  and\n    /* \"#utility.yul\":2771:2772   */\n  0x01\n    /* \"#utility.yul\":2767:2778   */\n  dup6\n  swap1\n  shl\n    /* \"#utility.yul\":2722:2779   */\n  or\n    /* \"#utility.yul\":4045:4126   */\n  dup6\n  sstore\n    /* \"#utility.yul\":3192:4136   */\n  jump(tag_43)\n    /* \"#utility.yul\":3222:3885   */\ntag_51:\n    /* \"#utility.yul\":2016:2017   */\n  0x00\n    /* \"#utility.yul\":2009:2023   */\n  dup6\n  dup2\n  mstore\n    /* \"#utility.yul\":2053:2057   */\n  0x20\n    /* \"#utility.yul\":2040:2058   */\n  dup2\n  keccak256\n  not(0x1f)\n    /* \"#utility.yul\":3258:3278   */\n  dup7\n  and\n  swap2\n    /* \"#utility.yul\":3376:3612   */\ntag_55:\n    /* \"#utility.yul\":3390:3397   */\n  dup3\n    /* \"#utility.yul\":3387:3388   */\n  dup2\n    /* \"#utility.yul\":3384:3398   */\n  lt\n    /* \"#utility.yul\":3376:3612   */\n  iszero\n  tag_57\n  jumpi\n    /* \"#utility.yul\":3479:3498   */\n  dup9\n  dup7\n  add\n    /* \"#utility.yul\":3473:3499   */\n  mload\n    /* \"#utility.yul\":3458:3500   */\n  dup3\n  sstore\n    /* \"#utility.yul\":3571:3598   */\n  swap5\n  dup5\n  add\n  swap5\n    /* \"#utility.yul\":3539:3540   */\n  0x01\n    /* \"#utility.yul\":3527:3541   */\n  swap1\n  swap2\n  add\n  swap1\n    /* \"#utility.yul\":3406:3425   */\n  dup5\n  add\n    /* \"#utility.yul\":3376:3612   */\n  jump(tag_55)\ntag_57:\n    /* \"#utility.yul\":3380:3383   */\n  pop\n    /* \"#utility.yul\":3640:3646   */\n  dup6\n    /* \"#utility.yul\":3631:3638   */\n  dup3\n    /* \"#utility.yul\":3628:3647   */\n  lt\n    /* \"#utility.yul\":3625:3826   */\n  iszero\n  tag_58\n  jumpi\n    /* \"#utility.yul\":3701:3720   */\n  dup8\n  dup6\n  add\n    /* \"#utility.yul\":3695:3721   */\n  mload\n  not(0x00)\n    /* \"#utility.yul\":3784:3785   */\n  0x03\n    /* \"#utility.yul\":3780:3794   */\n  dup9\n  swap1\n  shl\n    /* \"#utility.yul\":3796:3799   */\n  0xf8\n    /* \"#utility.yul\":3776:3800   */\n  and\n    /* \"#utility.yul\":3772:3809   */\n  shr\n    /* \"#utility.yul\":3768:3810   */\n  not\n    /* \"#utility.yul\":3753:3811   */\n  and\n    /* \"#utility.yul\":3738:3812   */\n  dup2\n  sstore\n    /* \"#utility.yul\":3625:3826   */\ntag_58:\n  pop\n  pop\n  pop\n  pop\n  pop\n    /* \"#utility.yul\":3872:3873   */\n  0x01\n    /* \"#utility.yul\":3856:3870   */\n  swap1\n  dup2\n  shl\n    /* \"#utility.yul\":3852:3874   */\n  add\n    /* \"#utility.yul\":3839:3875   */\n  swap1\n  sstore\n  pop\n    /* \"#utility.yul\":2790:4142   */\n  jump\t// out\ntag_16:\n    /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":628:16955  contract ERC721 is Context, ERC165, IERC721, IERC721Metadata {... */\n  dataSize(sub_0)\n  dup1\n  dataOffset(sub_0)\n  0x00\n  codecopy\n  0x00\n  return\nstop\n\nsub_0: assembly {\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":628:16955  contract ERC721 is Context, ERC165, IERC721, IERC721Metadata {... */\n      mstore(0x40, 0x80)\n      callvalue\n      dup1\n      iszero\n      tag_1\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_1:\n      pop\n      jumpi(tag_2, lt(calldatasize, 0x04))\n      shr(0xe0, calldataload(0x00))\n      dup1\n      0x6352211e\n      gt\n      tag_16\n      jumpi\n      dup1\n      0xa22cb465\n      gt\n      tag_17\n      jumpi\n      dup1\n      0xa22cb465\n      eq\n      tag_12\n      jumpi\n      dup1\n      0xb88d4fde\n      eq\n      tag_13\n      jumpi\n      dup1\n      0xc87b56dd\n      eq\n      tag_14\n      jumpi\n      dup1\n      0xe985e9c5\n      eq\n      tag_15\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_17:\n      dup1\n      0x6352211e\n      eq\n      tag_9\n      jumpi\n      dup1\n      0x70a08231\n      eq\n      tag_10\n      jumpi\n      dup1\n      0x95d89b41\n      eq\n      tag_11\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_16:\n      dup1\n      0x01ffc9a7\n      eq\n      tag_3\n      jumpi\n      dup1\n      0x06fdde03\n      eq\n      tag_4\n      jumpi\n      dup1\n      0x081812fc\n      eq\n      tag_5\n      jumpi\n      dup1\n      0x095ea7b3\n      eq\n      tag_6\n      jumpi\n      dup1\n      0x23b872dd\n      eq\n      tag_7\n      jumpi\n      dup1\n      0x42842e0e\n      eq\n      tag_8\n      jumpi\n    tag_2:\n      0x00\n      dup1\n      revert\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":1570:1870  function supportsInterface(bytes4 interfaceId) public view virtual override(ERC165, IERC165) returns (bool) {... */\n    tag_3:\n      tag_18\n      tag_19\n      calldatasize\n      0x04\n      tag_20\n      jump\t// in\n    tag_19:\n      tag_21\n      jump\t// in\n    tag_18:\n      mload(0x40)\n        /* \"#utility.yul\":565:579   */\n      swap1\n      iszero\n        /* \"#utility.yul\":558:580   */\n      iszero\n        /* \"#utility.yul\":540:581   */\n      dup2\n      mstore\n        /* \"#utility.yul\":528:530   */\n      0x20\n        /* \"#utility.yul\":513:531   */\n      add\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":1570:1870  function supportsInterface(bytes4 interfaceId) public view virtual override(ERC165, IERC165) returns (bool) {... */\n    tag_22:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":2471:2569  function name() public view virtual override returns (string memory) {... */\n    tag_4:\n      tag_24\n      tag_25\n      jump\t// in\n    tag_24:\n      mload(0x40)\n      tag_22\n      swap2\n      swap1\n      tag_27\n      jump\t// in\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":3935:4102  function getApproved(uint256 tokenId) public view virtual override returns (address) {... */\n    tag_5:\n      tag_28\n      tag_29\n      calldatasize\n      0x04\n      tag_30\n      jump\t// in\n    tag_29:\n      tag_31\n      jump\t// in\n    tag_28:\n      mload(0x40)\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"#utility.yul\":1697:1729   */\n      swap1\n      swap2\n      and\n        /* \"#utility.yul\":1679:1730   */\n      dup2\n      mstore\n        /* \"#utility.yul\":1667:1669   */\n      0x20\n        /* \"#utility.yul\":1652:1670   */\n      add\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":3935:4102  function getApproved(uint256 tokenId) public view virtual override returns (address) {... */\n      tag_22\n        /* \"#utility.yul\":1533:1736   */\n      jump\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":3468:3874  function approve(address to, uint256 tokenId) public virtual override {... */\n    tag_6:\n      tag_34\n      tag_35\n      calldatasize\n      0x04\n      tag_36\n      jump\t// in\n    tag_35:\n      tag_37\n      jump\t// in\n    tag_34:\n      stop\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":4612:4938  function transferFrom(... */\n    tag_7:\n      tag_34\n      tag_39\n      calldatasize\n      0x04\n      tag_40\n      jump\t// in\n    tag_39:\n      tag_41\n      jump\t// in\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":5004:5183  function safeTransferFrom(... */\n    tag_8:\n      tag_34\n      tag_43\n      calldatasize\n      0x04\n      tag_40\n      jump\t// in\n    tag_43:\n      tag_44\n      jump\t// in\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":2190:2409  function ownerOf(uint256 tokenId) public view virtual override returns (address) {... */\n    tag_9:\n      tag_28\n      tag_46\n      calldatasize\n      0x04\n      tag_30\n      jump\t// in\n    tag_46:\n      tag_47\n      jump\t// in\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":1929:2133  function balanceOf(address owner) public view virtual override returns (uint256) {... */\n    tag_10:\n      tag_49\n      tag_50\n      calldatasize\n      0x04\n      tag_51\n      jump\t// in\n    tag_50:\n      tag_52\n      jump\t// in\n    tag_49:\n      mload(0x40)\n        /* \"#utility.yul\":2848:2873   */\n      swap1\n      dup2\n      mstore\n        /* \"#utility.yul\":2836:2838   */\n      0x20\n        /* \"#utility.yul\":2821:2839   */\n      add\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":1929:2133  function balanceOf(address owner) public view virtual override returns (uint256) {... */\n      tag_22\n        /* \"#utility.yul\":2702:2879   */\n      jump\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":2633:2735  function symbol() public view virtual override returns (string memory) {... */\n    tag_11:\n      tag_24\n      tag_56\n      jump\t// in\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":4169:4322  function setApprovalForAll(address operator, bool approved) public virtual override {... */\n    tag_12:\n      tag_34\n      tag_59\n      calldatasize\n      0x04\n      tag_60\n      jump\t// in\n    tag_59:\n      tag_61\n      jump\t// in\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":5249:5563  function safeTransferFrom(... */\n    tag_13:\n      tag_34\n      tag_63\n      calldatasize\n      0x04\n      tag_64\n      jump\t// in\n    tag_63:\n      tag_65\n      jump\t// in\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":2801:3077  function tokenURI(uint256 tokenId) public view virtual override returns (string memory) {... */\n    tag_14:\n      tag_24\n      tag_67\n      calldatasize\n      0x04\n      tag_30\n      jump\t// in\n    tag_67:\n      tag_68\n      jump\t// in\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":4388:4550  function isApprovedForAll(address owner, address operator) public view virtual override returns (bool) {... */\n    tag_15:\n      tag_18\n      tag_71\n      calldatasize\n      0x04\n      tag_72\n      jump\t// in\n    tag_71:\n      tag_73\n      jump\t// in\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":1570:1870  function supportsInterface(bytes4 interfaceId) public view virtual override(ERC165, IERC165) returns (bool) {... */\n    tag_21:\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":1672:1676  bool */\n      0x00\n      not(sub(shl(0xe0, 0x01), 0x01))\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":1707:1747  interfaceId == type(IERC721).interfaceId */\n      dup3\n      and\n      shl(0xe0, 0x80ac58cd)\n      eq\n      dup1\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":1707:1811  interfaceId == type(IERC721).interfaceId ||... */\n      tag_76\n      jumpi\n      pop\n      not(sub(shl(0xe0, 0x01), 0x01))\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":1763:1811  interfaceId == type(IERC721Metadata).interfaceId */\n      dup3\n      and\n      shl(0xe0, 0x5b5e139f)\n      eq\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":1707:1811  interfaceId == type(IERC721).interfaceId ||... */\n    tag_76:\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":1707:1863  interfaceId == type(IERC721).interfaceId ||... */\n      dup1\n      tag_78\n      jumpi\n      pop\n      shl(0xe0, 0x01ffc9a7)\n      not(sub(shl(0xe0, 0x01), 0x01))\n        /* \"@openzeppelin/contracts/utils/introspection/ERC165.sol\":937:977  interfaceId == type(IERC165).interfaceId */\n      dup4\n      and\n      eq\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":1827:1863  super.supportsInterface(interfaceId) */\n    tag_78:\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":1688:1863  return... */\n      swap3\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":1570:1870  function supportsInterface(bytes4 interfaceId) public view virtual override(ERC165, IERC165) returns (bool) {... */\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":2471:2569  function name() public view virtual override returns (string memory) {... */\n    tag_25:\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":2525:2538  string memory */\n      0x60\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":2557:2562  _name */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":2550:2562  return _name */\n      dup1\n      sload\n      tag_81\n      swap1\n      tag_82\n      jump\t// in\n    tag_81:\n      dup1\n      0x1f\n      add\n      0x20\n      dup1\n      swap2\n      div\n      mul\n      0x20\n      add\n      mload(0x40)\n      swap1\n      dup2\n      add\n      0x40\n      mstore\n      dup1\n      swap3\n      swap2\n      swap1\n      dup2\n      dup2\n      mstore\n      0x20\n      add\n      dup3\n      dup1\n      sload\n      tag_83\n      swap1\n      tag_82\n      jump\t// in\n    tag_83:\n      dup1\n      iszero\n      tag_84\n      jumpi\n      dup1\n      0x1f\n      lt\n      tag_85\n      jumpi\n      0x0100\n      dup1\n      dup4\n      sload\n      div\n      mul\n      dup4\n      mstore\n      swap2\n      0x20\n      add\n      swap2\n      jump(tag_84)\n    tag_85:\n      dup3\n      add\n      swap2\n      swap1\n      0x00\n      mstore\n      keccak256(0x00, 0x20)\n      swap1\n    tag_86:\n      dup2\n      sload\n      dup2\n      mstore\n      swap1\n      0x01\n      add\n      swap1\n      0x20\n      add\n      dup1\n      dup4\n      gt\n      tag_86\n      jumpi\n      dup3\n      swap1\n      sub\n      0x1f\n      and\n      dup3\n      add\n      swap2\n    tag_84:\n      pop\n      pop\n      pop\n      pop\n      pop\n      swap1\n      pop\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":2471:2569  function name() public view virtual override returns (string memory) {... */\n      swap1\n      jump\t// out\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":3935:4102  function getApproved(uint256 tokenId) public view virtual override returns (address) {... */\n    tag_31:\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":4011:4018  address */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":4030:4053  _requireMinted(tokenId) */\n      tag_88\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":4045:4052  tokenId */\n      dup3\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":4030:4044  _requireMinted */\n      tag_89\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":4030:4053  _requireMinted(tokenId) */\n      jump\t// in\n    tag_88:\n      pop\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":4071:4095  _tokenApprovals[tokenId] */\n      0x00\n      swap1\n      dup2\n      mstore\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":4071:4086  _tokenApprovals */\n      0x04\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":4071:4095  _tokenApprovals[tokenId] */\n      0x20\n      mstore\n      0x40\n      swap1\n      keccak256\n      sload\n      sub(shl(0xa0, 0x01), 0x01)\n      and\n      swap1\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":3935:4102  function getApproved(uint256 tokenId) public view virtual override returns (address) {... */\n      jump\t// out\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":3468:3874  function approve(address to, uint256 tokenId) public virtual override {... */\n    tag_37:\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":3548:3561  address owner */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":3564:3587  ERC721.ownerOf(tokenId) */\n      tag_91\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":3579:3586  tokenId */\n      dup3\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":3564:3578  ERC721.ownerOf */\n      tag_47\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":3564:3587  ERC721.ownerOf(tokenId) */\n      jump\t// in\n    tag_91:\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":3548:3587  address owner = ERC721.ownerOf(tokenId) */\n      swap1\n      pop\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":3611:3616  owner */\n      dup1\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":3605:3616  to != owner */\n      and\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":3605:3607  to */\n      dup4\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":3605:3616  to != owner */\n      and\n      sub\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":3597:3654  require(to != owner, \"ERC721: approval to current owner\") */\n      tag_92\n      jumpi\n      mload(0x40)\n      shl(0xe5, 0x461bcd)\n      dup2\n      mstore\n        /* \"#utility.yul\":5363:5365   */\n      0x20\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":3597:3654  require(to != owner, \"ERC721: approval to current owner\") */\n      0x04\n      dup3\n      add\n        /* \"#utility.yul\":5345:5366   */\n      mstore\n        /* \"#utility.yul\":5402:5404   */\n      0x21\n        /* \"#utility.yul\":5382:5400   */\n      0x24\n      dup3\n      add\n        /* \"#utility.yul\":5375:5405   */\n      mstore\n        /* \"#utility.yul\":5441:5475   */\n      0x4552433732313a20617070726f76616c20746f2063757272656e74206f776e65\n        /* \"#utility.yul\":5421:5439   */\n      0x44\n      dup3\n      add\n        /* \"#utility.yul\":5414:5476   */\n      mstore\n      shl(0xf9, 0x39)\n        /* \"#utility.yul\":5492:5510   */\n      0x64\n      dup3\n      add\n        /* \"#utility.yul\":5485:5516   */\n      mstore\n        /* \"#utility.yul\":5533:5552   */\n      0x84\n      add\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":3597:3654  require(to != owner, \"ERC721: approval to current owner\") */\n    tag_93:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n    tag_92:\n        /* \"@openzeppelin/contracts/utils/Context.sol\":719:729  msg.sender */\n      caller\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":3686:3707  _msgSender() == owner */\n      dup3\n      and\n      eq\n      dup1\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":3686:3748  _msgSender() == owner || isApprovedForAll(owner, _msgSender()) */\n      tag_98\n      jumpi\n      pop\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":3711:3748  isApprovedForAll(owner, _msgSender()) */\n      tag_98\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":3728:3733  owner */\n      dup2\n        /* \"@openzeppelin/contracts/utils/Context.sol\":719:729  msg.sender */\n      caller\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":4388:4550  function isApprovedForAll(address owner, address operator) public view virtual override returns (bool) {... */\n      tag_73\n      jump\t// in\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":3711:3748  isApprovedForAll(owner, _msgSender()) */\n    tag_98:\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":3665:3835  require(... */\n      tag_100\n      jumpi\n      mload(0x40)\n      shl(0xe5, 0x461bcd)\n      dup2\n      mstore\n        /* \"#utility.yul\":5765:5767   */\n      0x20\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":3665:3835  require(... */\n      0x04\n      dup3\n      add\n        /* \"#utility.yul\":5747:5768   */\n      mstore\n        /* \"#utility.yul\":5804:5806   */\n      0x3d\n        /* \"#utility.yul\":5784:5802   */\n      0x24\n      dup3\n      add\n        /* \"#utility.yul\":5777:5807   */\n      mstore\n        /* \"#utility.yul\":5843:5877   */\n      0x4552433732313a20617070726f76652063616c6c6572206973206e6f7420746f\n        /* \"#utility.yul\":5823:5841   */\n      0x44\n      dup3\n      add\n        /* \"#utility.yul\":5816:5878   */\n      mstore\n        /* \"#utility.yul\":5914:5945   */\n      0x6b656e206f776e6572206f7220617070726f76656420666f7220616c6c000000\n        /* \"#utility.yul\":5894:5912   */\n      0x64\n      dup3\n      add\n        /* \"#utility.yul\":5887:5946   */\n      mstore\n        /* \"#utility.yul\":5963:5982   */\n      0x84\n      add\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":3665:3835  require(... */\n      tag_93\n        /* \"#utility.yul\":5563:5988   */\n      jump\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":3665:3835  require(... */\n    tag_100:\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":3846:3867  _approve(to, tokenId) */\n      tag_103\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":3855:3857  to */\n      dup4\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":3859:3866  tokenId */\n      dup4\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":3846:3854  _approve */\n      tag_104\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":3846:3867  _approve(to, tokenId) */\n      jump\t// in\n    tag_103:\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":3538:3874  {... */\n      pop\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":3468:3874  function approve(address to, uint256 tokenId) public virtual override {... */\n      pop\n      pop\n      jump\t// out\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":4612:4938  function transferFrom(... */\n    tag_41:\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":4801:4842  _isApprovedOrOwner(_msgSender(), tokenId) */\n      tag_106\n        /* \"@openzeppelin/contracts/utils/Context.sol\":719:729  msg.sender */\n      caller\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":4834:4841  tokenId */\n      dup3\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":4801:4819  _isApprovedOrOwner */\n      tag_108\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":4801:4842  _isApprovedOrOwner(_msgSender(), tokenId) */\n      jump\t// in\n    tag_106:\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":4793:4892  require(_isApprovedOrOwner(_msgSender(), tokenId), \"ERC721: caller is not token owner or approved\") */\n      tag_109\n      jumpi\n      mload(0x40)\n      shl(0xe5, 0x461bcd)\n      dup2\n      mstore\n      0x04\n      add\n      tag_93\n      swap1\n      tag_111\n      jump\t// in\n    tag_109:\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":4903:4931  _transfer(from, to, tokenId) */\n      tag_103\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":4913:4917  from */\n      dup4\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":4919:4921  to */\n      dup4\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":4923:4930  tokenId */\n      dup4\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":4903:4912  _transfer */\n      tag_113\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":4903:4931  _transfer(from, to, tokenId) */\n      jump\t// in\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":5004:5183  function safeTransferFrom(... */\n    tag_44:\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":5137:5176  safeTransferFrom(from, to, tokenId, \"\") */\n      tag_103\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":5154:5158  from */\n      dup4\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":5160:5162  to */\n      dup4\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":5164:5171  tokenId */\n      dup4\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":5137:5176  safeTransferFrom(from, to, tokenId, \"\") */\n      mload(0x40)\n      dup1\n      0x20\n      add\n      0x40\n      mstore\n      dup1\n      0x00\n      dup2\n      mstore\n      pop\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":5137:5153  safeTransferFrom */\n      tag_65\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":5137:5176  safeTransferFrom(from, to, tokenId, \"\") */\n      jump\t// in\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":2190:2409  function ownerOf(uint256 tokenId) public view virtual override returns (address) {... */\n    tag_47:\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":2262:2269  address */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":6930:6946  _owners[tokenId] */\n      dup2\n      dup2\n      mstore\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":6930:6937  _owners */\n      0x02\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":6930:6946  _owners[tokenId] */\n      0x20\n      mstore\n      0x40\n      dup2\n      keccak256\n      sload\n      sub(shl(0xa0, 0x01), 0x01)\n      and\n      dup1\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":2324:2380  require(owner != address(0), \"ERC721: invalid token ID\") */\n      tag_78\n      jumpi\n      mload(0x40)\n      shl(0xe5, 0x461bcd)\n      dup2\n      mstore\n        /* \"#utility.yul\":6609:6611   */\n      0x20\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":2324:2380  require(owner != address(0), \"ERC721: invalid token ID\") */\n      0x04\n      dup3\n      add\n        /* \"#utility.yul\":6591:6612   */\n      mstore\n        /* \"#utility.yul\":6648:6650   */\n      0x18\n        /* \"#utility.yul\":6628:6646   */\n      0x24\n      dup3\n      add\n        /* \"#utility.yul\":6621:6651   */\n      mstore\n      shl(0x42, 0x115490cdcc8c4e881a5b9d985b1a59081d1bdad95b881251)\n        /* \"#utility.yul\":6667:6685   */\n      0x44\n      dup3\n      add\n        /* \"#utility.yul\":6660:6714   */\n      mstore\n        /* \"#utility.yul\":6731:6749   */\n      0x64\n      add\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":2324:2380  require(owner != address(0), \"ERC721: invalid token ID\") */\n      tag_93\n        /* \"#utility.yul\":6407:6755   */\n      jump\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":1929:2133  function balanceOf(address owner) public view virtual override returns (uint256) {... */\n    tag_52:\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":2001:2008  uint256 */\n      0x00\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":2028:2047  owner != address(0) */\n      dup3\n      and\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":2020:2093  require(owner != address(0), \"ERC721: address zero is not a valid owner\") */\n      tag_123\n      jumpi\n      mload(0x40)\n      shl(0xe5, 0x461bcd)\n      dup2\n      mstore\n        /* \"#utility.yul\":6962:6964   */\n      0x20\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":2020:2093  require(owner != address(0), \"ERC721: address zero is not a valid owner\") */\n      0x04\n      dup3\n      add\n        /* \"#utility.yul\":6944:6965   */\n      mstore\n        /* \"#utility.yul\":7001:7003   */\n      0x29\n        /* \"#utility.yul\":6981:6999   */\n      0x24\n      dup3\n      add\n        /* \"#utility.yul\":6974:7004   */\n      mstore\n        /* \"#utility.yul\":7040:7074   */\n      0x4552433732313a2061646472657373207a65726f206973206e6f742061207661\n        /* \"#utility.yul\":7020:7038   */\n      0x44\n      dup3\n      add\n        /* \"#utility.yul\":7013:7075   */\n      mstore\n      shl(0xb9, 0x3634b21037bbb732b9)\n        /* \"#utility.yul\":7091:7109   */\n      0x64\n      dup3\n      add\n        /* \"#utility.yul\":7084:7123   */\n      mstore\n        /* \"#utility.yul\":7140:7159   */\n      0x84\n      add\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":2020:2093  require(owner != address(0), \"ERC721: address zero is not a valid owner\") */\n      tag_93\n        /* \"#utility.yul\":6760:7165   */\n      jump\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":2020:2093  require(owner != address(0), \"ERC721: address zero is not a valid owner\") */\n    tag_123:\n      pop\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":2110:2126  _balances[owner] */\n      and\n      0x00\n      swap1\n      dup2\n      mstore\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":2110:2119  _balances */\n      0x03\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":2110:2126  _balances[owner] */\n      0x20\n      mstore\n      0x40\n      swap1\n      keccak256\n      sload\n      swap1\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":1929:2133  function balanceOf(address owner) public view virtual override returns (uint256) {... */\n      jump\t// out\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":2633:2735  function symbol() public view virtual override returns (string memory) {... */\n    tag_56:\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":2689:2702  string memory */\n      0x60\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":2721:2728  _symbol */\n      0x01\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":2714:2728  return _symbol */\n      dup1\n      sload\n      tag_81\n      swap1\n      tag_82\n      jump\t// in\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":4169:4322  function setApprovalForAll(address operator, bool approved) public virtual override {... */\n    tag_61:\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":4263:4315  _setApprovalForAll(_msgSender(), operator, approved) */\n      tag_133\n        /* \"@openzeppelin/contracts/utils/Context.sol\":719:729  msg.sender */\n      caller\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":4296:4304  operator */\n      dup4\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":4306:4314  approved */\n      dup4\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":4263:4281  _setApprovalForAll */\n      tag_135\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":4263:4315  _setApprovalForAll(_msgSender(), operator, approved) */\n      jump\t// in\n    tag_133:\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":4169:4322  function setApprovalForAll(address operator, bool approved) public virtual override {... */\n      pop\n      pop\n      jump\t// out\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":5249:5563  function safeTransferFrom(... */\n    tag_65:\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":5417:5458  _isApprovedOrOwner(_msgSender(), tokenId) */\n      tag_137\n        /* \"@openzeppelin/contracts/utils/Context.sol\":719:729  msg.sender */\n      caller\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":5450:5457  tokenId */\n      dup4\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":5417:5435  _isApprovedOrOwner */\n      tag_108\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":5417:5458  _isApprovedOrOwner(_msgSender(), tokenId) */\n      jump\t// in\n    tag_137:\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":5409:5508  require(_isApprovedOrOwner(_msgSender(), tokenId), \"ERC721: caller is not token owner or approved\") */\n      tag_139\n      jumpi\n      mload(0x40)\n      shl(0xe5, 0x461bcd)\n      dup2\n      mstore\n      0x04\n      add\n      tag_93\n      swap1\n      tag_111\n      jump\t// in\n    tag_139:\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":5518:5556  _safeTransfer(from, to, tokenId, data) */\n      tag_141\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":5532:5536  from */\n      dup5\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":5538:5540  to */\n      dup5\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":5542:5549  tokenId */\n      dup5\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":5551:5555  data */\n      dup5\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":5518:5531  _safeTransfer */\n      tag_142\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":5518:5556  _safeTransfer(from, to, tokenId, data) */\n      jump\t// in\n    tag_141:\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":5249:5563  function safeTransferFrom(... */\n      pop\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":2801:3077  function tokenURI(uint256 tokenId) public view virtual override returns (string memory) {... */\n    tag_68:\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":2874:2887  string memory */\n      0x60\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":2899:2922  _requireMinted(tokenId) */\n      tag_144\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":2914:2921  tokenId */\n      dup3\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":2899:2913  _requireMinted */\n      tag_89\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":2899:2922  _requireMinted(tokenId) */\n      jump\t// in\n    tag_144:\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":2933:2954  string memory baseURI */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":2957:2967  _baseURI() */\n      tag_145\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":3395:3404  return \"\" */\n      0x40\n      dup1\n      mload\n      0x20\n      dup2\n      add\n      swap1\n      swap2\n      mstore\n      0x00\n      dup2\n      mstore\n      swap1\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":3319:3411  function _baseURI() internal view virtual returns (string memory) {... */\n      jump\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":2957:2967  _baseURI() */\n    tag_145:\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":2933:2967  string memory baseURI = _baseURI() */\n      swap1\n      pop\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":3008:3009  0 */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":2990:2997  baseURI */\n      dup2\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":2984:3005  bytes(baseURI).length */\n      mload\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":2984:3009  bytes(baseURI).length > 0 */\n      gt\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":2984:3070  bytes(baseURI).length > 0 ? string(abi.encodePacked(baseURI, tokenId.toString())) : \"\" */\n      tag_147\n      jumpi\n      mload(0x40)\n      dup1\n      0x20\n      add\n      0x40\n      mstore\n      dup1\n      0x00\n      dup2\n      mstore\n      pop\n      jump(tag_148)\n    tag_147:\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":3036:3043  baseURI */\n      dup1\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":3045:3063  tokenId.toString() */\n      tag_149\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":3045:3052  tokenId */\n      dup5\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":3045:3061  tokenId.toString */\n      tag_150\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":3045:3063  tokenId.toString() */\n      jump\t// in\n    tag_149:\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":3019:3064  abi.encodePacked(baseURI, tokenId.toString()) */\n      add(0x20, mload(0x40))\n      tag_151\n      swap3\n      swap2\n      swap1\n      tag_152\n      jump\t// in\n    tag_151:\n      mload(0x40)\n      0x20\n      dup2\n      dup4\n      sub\n      sub\n      dup2\n      mstore\n      swap1\n      0x40\n      mstore\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":2984:3070  bytes(baseURI).length > 0 ? string(abi.encodePacked(baseURI, tokenId.toString())) : \"\" */\n    tag_148:\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":2977:3070  return bytes(baseURI).length > 0 ? string(abi.encodePacked(baseURI, tokenId.toString())) : \"\" */\n      swap4\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":2801:3077  function tokenURI(uint256 tokenId) public view virtual override returns (string memory) {... */\n      swap3\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":4388:4550  function isApprovedForAll(address owner, address operator) public view virtual override returns (bool) {... */\n    tag_73:\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":4508:4533  _operatorApprovals[owner] */\n      swap2\n      dup3\n      and\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":4485:4489  bool */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":4508:4533  _operatorApprovals[owner] */\n      swap1\n      dup2\n      mstore\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":4508:4526  _operatorApprovals */\n      0x05\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":4508:4533  _operatorApprovals[owner] */\n      0x20\n      swap1\n      dup2\n      mstore\n      0x40\n      dup1\n      dup4\n      keccak256\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":4508:4543  _operatorApprovals[owner][operator] */\n      swap4\n      swap1\n      swap5\n      and\n      dup3\n      mstore\n      swap2\n      swap1\n      swap2\n      mstore\n      keccak256\n      sload\n      0xff\n      and\n      swap1\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":4388:4550  function isApprovedForAll(address owner, address operator) public view virtual override returns (bool) {... */\n      jump\t// out\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":13466:13599  function _requireMinted(uint256 tokenId) internal view virtual {... */\n    tag_89:\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":7321:7325  bool */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":6930:6946  _owners[tokenId] */\n      dup2\n      dup2\n      mstore\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":6930:6937  _owners */\n      0x02\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":6930:6946  _owners[tokenId] */\n      0x20\n      mstore\n      0x40\n      swap1\n      keccak256\n      sload\n      sub(shl(0xa0, 0x01), 0x01)\n      and\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":13539:13592  require(_exists(tokenId), \"ERC721: invalid token ID\") */\n      tag_158\n      jumpi\n      mload(0x40)\n      shl(0xe5, 0x461bcd)\n      dup2\n      mstore\n        /* \"#utility.yul\":6609:6611   */\n      0x20\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":13539:13592  require(_exists(tokenId), \"ERC721: invalid token ID\") */\n      0x04\n      dup3\n      add\n        /* \"#utility.yul\":6591:6612   */\n      mstore\n        /* \"#utility.yul\":6648:6650   */\n      0x18\n        /* \"#utility.yul\":6628:6646   */\n      0x24\n      dup3\n      add\n        /* \"#utility.yul\":6621:6651   */\n      mstore\n      shl(0x42, 0x115490cdcc8c4e881a5b9d985b1a59081d1bdad95b881251)\n        /* \"#utility.yul\":6667:6685   */\n      0x44\n      dup3\n      add\n        /* \"#utility.yul\":6660:6714   */\n      mstore\n        /* \"#utility.yul\":6731:6749   */\n      0x64\n      add\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":13539:13592  require(_exists(tokenId), \"ERC721: invalid token ID\") */\n      tag_93\n        /* \"#utility.yul\":6407:6755   */\n      jump\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":13539:13592  require(_exists(tokenId), \"ERC721: invalid token ID\") */\n    tag_158:\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":13466:13599  function _requireMinted(uint256 tokenId) internal view virtual {... */\n      pop\n      jump\t// out\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":12768:12939  function _approve(address to, uint256 tokenId) internal virtual {... */\n    tag_104:\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":12842:12866  _tokenApprovals[tokenId] */\n      0x00\n      dup2\n      dup2\n      mstore\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":12842:12857  _tokenApprovals */\n      0x04\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":12842:12866  _tokenApprovals[tokenId] */\n      0x20\n      mstore\n      0x40\n      swap1\n      keccak256\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":12842:12871  _tokenApprovals[tokenId] = to */\n      dup1\n      sload\n      not(sub(shl(0xa0, 0x01), 0x01))\n      and\n      sub(shl(0xa0, 0x01), 0x01)\n      dup5\n      and\n      swap1\n      dup2\n      or\n      swap1\n      swap2\n      sstore\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":12842:12866  _tokenApprovals[tokenId] */\n      dup2\n      swap1\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":12895:12918  ERC721.ownerOf(tokenId) */\n      tag_162\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":12842:12866  _tokenApprovals[tokenId] */\n      dup3\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":12895:12909  ERC721.ownerOf */\n      tag_47\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":12895:12918  ERC721.ownerOf(tokenId) */\n      jump\t// in\n    tag_162:\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":12886:12932  Approval(ERC721.ownerOf(tokenId), to, tokenId) */\n      and\n      0x8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b925\n      mload(0x40)\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      log4\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":12768:12939  function _approve(address to, uint256 tokenId) internal virtual {... */\n      pop\n      pop\n      jump\t// out\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":7540:7801  function _isApprovedOrOwner(address spender, uint256 tokenId) internal view virtual returns (bool) {... */\n    tag_108:\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":7633:7637  bool */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":7649:7662  address owner */\n      dup1\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":7665:7688  ERC721.ownerOf(tokenId) */\n      tag_164\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":7680:7687  tokenId */\n      dup4\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":7665:7679  ERC721.ownerOf */\n      tag_47\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":7665:7688  ERC721.ownerOf(tokenId) */\n      jump\t// in\n    tag_164:\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":7649:7688  address owner = ERC721.ownerOf(tokenId) */\n      swap1\n      pop\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":7717:7722  owner */\n      dup1\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":7706:7722  spender == owner */\n      and\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":7706:7713  spender */\n      dup5\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":7706:7722  spender == owner */\n      and\n      eq\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":7706:7758  spender == owner || isApprovedForAll(owner, spender) */\n      dup1\n      tag_166\n      jumpi\n      pop\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":7726:7758  isApprovedForAll(owner, spender) */\n      tag_166\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":7743:7748  owner */\n      dup2\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":7750:7757  spender */\n      dup6\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":7726:7742  isApprovedForAll */\n      tag_73\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":7726:7758  isApprovedForAll(owner, spender) */\n      jump\t// in\n    tag_166:\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":7706:7793  spender == owner || isApprovedForAll(owner, spender) || getApproved(tokenId) == spender */\n      dup1\n      tag_167\n      jumpi\n      pop\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":7786:7793  spender */\n      dup4\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":7762:7793  getApproved(tokenId) == spender */\n      and\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":7762:7782  getApproved(tokenId) */\n      tag_168\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":7774:7781  tokenId */\n      dup5\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":7762:7773  getApproved */\n      tag_31\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":7762:7782  getApproved(tokenId) */\n      jump\t// in\n    tag_168:\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":7762:7793  getApproved(tokenId) == spender */\n      and\n      eq\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":7706:7793  spender == owner || isApprovedForAll(owner, spender) || getApproved(tokenId) == spender */\n    tag_167:\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":7698:7794  return (spender == owner || isApprovedForAll(owner, spender) || getApproved(tokenId) == spender) */\n      swap5\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":7540:7801  function _isApprovedOrOwner(address spender, uint256 tokenId) internal view virtual returns (bool) {... */\n      swap4\n      pop\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":11423:12656  function _transfer(... */\n    tag_113:\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":11577:11581  from */\n      dup3\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":11550:11581  ERC721.ownerOf(tokenId) == from */\n      and\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":11550:11573  ERC721.ownerOf(tokenId) */\n      tag_170\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":11565:11572  tokenId */\n      dup3\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":11550:11564  ERC721.ownerOf */\n      tag_47\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":11550:11573  ERC721.ownerOf(tokenId) */\n      jump\t// in\n    tag_170:\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":11550:11581  ERC721.ownerOf(tokenId) == from */\n      and\n      eq\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":11542:11623  require(ERC721.ownerOf(tokenId) == from, \"ERC721: transfer from incorrect owner\") */\n      tag_171\n      jumpi\n      mload(0x40)\n      shl(0xe5, 0x461bcd)\n      dup2\n      mstore\n      0x04\n      add\n      tag_93\n      swap1\n      tag_173\n      jump\t// in\n    tag_171:\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":11641:11657  to != address(0) */\n      dup3\n      and\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":11633:11698  require(to != address(0), \"ERC721: transfer to the zero address\") */\n      tag_174\n      jumpi\n      mload(0x40)\n      shl(0xe5, 0x461bcd)\n      dup2\n      mstore\n        /* \"#utility.yul\":8279:8281   */\n      0x20\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":11633:11698  require(to != address(0), \"ERC721: transfer to the zero address\") */\n      0x04\n      dup3\n      add\n        /* \"#utility.yul\":8261:8282   */\n      mstore\n        /* \"#utility.yul\":8318:8320   */\n      0x24\n        /* \"#utility.yul\":8298:8316   */\n      dup1\n      dup3\n      add\n        /* \"#utility.yul\":8291:8321   */\n      mstore\n        /* \"#utility.yul\":8357:8391   */\n      0x4552433732313a207472616e7366657220746f20746865207a65726f20616464\n        /* \"#utility.yul\":8337:8355   */\n      0x44\n      dup3\n      add\n        /* \"#utility.yul\":8330:8392   */\n      mstore\n      shl(0xe0, 0x72657373)\n        /* \"#utility.yul\":8408:8426   */\n      0x64\n      dup3\n      add\n        /* \"#utility.yul\":8401:8435   */\n      mstore\n        /* \"#utility.yul\":8452:8471   */\n      0x84\n      add\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":11633:11698  require(to != address(0), \"ERC721: transfer to the zero address\") */\n      tag_93\n        /* \"#utility.yul\":8077:8477   */\n      jump\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":11633:11698  require(to != address(0), \"ERC721: transfer to the zero address\") */\n    tag_174:\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":11709:11751  _beforeTokenTransfer(from, to, tokenId, 1) */\n      tag_177\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":11730:11734  from */\n      dup4\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":11736:11738  to */\n      dup4\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":11740:11747  tokenId */\n      dup4\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":11749:11750  1 */\n      0x01\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":11709:11729  _beforeTokenTransfer */\n      tag_178\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":11709:11751  _beforeTokenTransfer(from, to, tokenId, 1) */\n      jump\t// in\n    tag_177:\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":11878:11882  from */\n      dup3\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":11851:11882  ERC721.ownerOf(tokenId) == from */\n      and\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":11851:11874  ERC721.ownerOf(tokenId) */\n      tag_179\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":11866:11873  tokenId */\n      dup3\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":11851:11865  ERC721.ownerOf */\n      tag_47\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":11851:11874  ERC721.ownerOf(tokenId) */\n      jump\t// in\n    tag_179:\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":11851:11882  ERC721.ownerOf(tokenId) == from */\n      and\n      eq\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":11843:11924  require(ERC721.ownerOf(tokenId) == from, \"ERC721: transfer from incorrect owner\") */\n      tag_180\n      jumpi\n      mload(0x40)\n      shl(0xe5, 0x461bcd)\n      dup2\n      mstore\n      0x04\n      add\n      tag_93\n      swap1\n      tag_173\n      jump\t// in\n    tag_180:\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":11993:12017  _tokenApprovals[tokenId] */\n      0x00\n      dup2\n      dup2\n      mstore\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":11993:12008  _tokenApprovals */\n      0x04\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":11993:12017  _tokenApprovals[tokenId] */\n      0x20\n      swap1\n      dup2\n      mstore\n      0x40\n      dup1\n      dup4\n      keccak256\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":11986:12017  delete _tokenApprovals[tokenId] */\n      dup1\n      sload\n      not(sub(shl(0xa0, 0x01), 0x01))\n      swap1\n      dup2\n      and\n      swap1\n      swap2\n      sstore\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":12461:12476  _balances[from] */\n      dup8\n      dup2\n      and\n      dup1\n      dup7\n      mstore\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":12461:12470  _balances */\n      0x03\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":12461:12476  _balances[from] */\n      dup6\n      mstore\n      dup4\n      dup7\n      keccak256\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":12461:12481  _balances[from] -= 1 */\n      dup1\n      sload\n      not(0x00)\n      add\n      swap1\n      sstore\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":12495:12508  _balances[to] */\n      swap1\n      dup8\n      and\n      dup1\n      dup7\n      mstore\n      dup4\n      dup7\n      keccak256\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":12495:12513  _balances[to] += 1 */\n      dup1\n      sload\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":11986:12017  delete _tokenApprovals[tokenId] */\n      0x01\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":12495:12513  _balances[to] += 1 */\n      add\n      swap1\n      sstore\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":12533:12549  _owners[tokenId] */\n      dup7\n      dup7\n      mstore\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":12533:12540  _owners */\n      0x02\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":12533:12549  _owners[tokenId] */\n      swap1\n      swap5\n      mstore\n      dup3\n      dup6\n      keccak256\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":12533:12554  _owners[tokenId] = to */\n      dup1\n      sload\n      swap1\n      swap3\n      and\n      dup5\n      or\n      swap1\n      swap2\n      sstore\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":12570:12597  Transfer(from, to, tokenId) */\n      swap1\n      mload\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":12009:12016  tokenId */\n      dup5\n      swap4\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":12570:12597  Transfer(from, to, tokenId) */\n      0xddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef\n      swap2\n      log4\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":3538:3874  {... */\n      pop\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":3468:3874  function approve(address to, uint256 tokenId) public virtual override {... */\n      pop\n      pop\n      jump\t// out\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":13075:13382  function _setApprovalForAll(... */\n    tag_135:\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":13225:13233  operator */\n      dup2\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":13216:13233  owner != operator */\n      and\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":13216:13221  owner */\n      dup4\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":13216:13233  owner != operator */\n      and\n      sub\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":13208:13263  require(owner != operator, \"ERC721: approve to caller\") */\n      tag_186\n      jumpi\n      mload(0x40)\n      shl(0xe5, 0x461bcd)\n      dup2\n      mstore\n        /* \"#utility.yul\":8684:8686   */\n      0x20\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":13208:13263  require(owner != operator, \"ERC721: approve to caller\") */\n      0x04\n      dup3\n      add\n        /* \"#utility.yul\":8666:8687   */\n      mstore\n        /* \"#utility.yul\":8723:8725   */\n      0x19\n        /* \"#utility.yul\":8703:8721   */\n      0x24\n      dup3\n      add\n        /* \"#utility.yul\":8696:8726   */\n      mstore\n        /* \"#utility.yul\":8762:8789   */\n      0x4552433732313a20617070726f766520746f2063616c6c657200000000000000\n        /* \"#utility.yul\":8742:8760   */\n      0x44\n      dup3\n      add\n        /* \"#utility.yul\":8735:8790   */\n      mstore\n        /* \"#utility.yul\":8807:8825   */\n      0x64\n      add\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":13208:13263  require(owner != operator, \"ERC721: approve to caller\") */\n      tag_93\n        /* \"#utility.yul\":8482:8831   */\n      jump\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":13208:13263  require(owner != operator, \"ERC721: approve to caller\") */\n    tag_186:\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":13273:13298  _operatorApprovals[owner] */\n      dup4\n      dup2\n      and\n      0x00\n      dup2\n      dup2\n      mstore\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":13273:13291  _operatorApprovals */\n      0x05\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":13273:13298  _operatorApprovals[owner] */\n      0x20\n      swap1\n      dup2\n      mstore\n      0x40\n      dup1\n      dup4\n      keccak256\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":13273:13308  _operatorApprovals[owner][operator] */\n      swap5\n      dup8\n      and\n      dup1\n      dup5\n      mstore\n      swap5\n      dup3\n      mstore\n      swap2\n      dup3\n      swap1\n      keccak256\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":13273:13319  _operatorApprovals[owner][operator] = approved */\n      dup1\n      sload\n      not(0xff)\n      and\n      dup7\n      iszero\n      iszero\n      swap1\n      dup2\n      or\n      swap1\n      swap2\n      sstore\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":13334:13375  ApprovalForAll(owner, operator, approved) */\n      swap2\n      mload\n        /* \"#utility.yul\":540:581   */\n      swap2\n      dup3\n      mstore\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":13334:13375  ApprovalForAll(owner, operator, approved) */\n      0x17307eab39ab6107e8899845ad3d59bd9653f200f220920489ca2b5937696c31\n      swap2\n        /* \"#utility.yul\":513:531   */\n      add\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":13334:13375  ApprovalForAll(owner, operator, approved) */\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      log3\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":13075:13382  function _setApprovalForAll(... */\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":6424:6729  function _safeTransfer(... */\n    tag_142:\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":6574:6602  _transfer(from, to, tokenId) */\n      tag_191\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":6584:6588  from */\n      dup5\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":6590:6592  to */\n      dup5\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":6594:6601  tokenId */\n      dup5\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":6574:6583  _transfer */\n      tag_113\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":6574:6602  _transfer(from, to, tokenId) */\n      jump\t// in\n    tag_191:\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":6620:6667  _checkOnERC721Received(from, to, tokenId, data) */\n      tag_192\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":6643:6647  from */\n      dup5\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":6649:6651  to */\n      dup5\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":6653:6660  tokenId */\n      dup5\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":6662:6666  data */\n      dup5\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":6620:6642  _checkOnERC721Received */\n      tag_193\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":6620:6667  _checkOnERC721Received(from, to, tokenId, data) */\n      jump\t// in\n    tag_192:\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":6612:6722  require(_checkOnERC721Received(from, to, tokenId, data), \"ERC721: transfer to non ERC721Receiver implementer\") */\n      tag_141\n      jumpi\n      mload(0x40)\n      shl(0xe5, 0x461bcd)\n      dup2\n      mstore\n      0x04\n      add\n      tag_93\n      swap1\n      tag_196\n      jump\t// in\n        /* \"@openzeppelin/contracts/utils/Strings.sol\":415:1111  function toString(uint256 value) internal pure returns (string memory) {... */\n    tag_150:\n        /* \"@openzeppelin/contracts/utils/Strings.sol\":471:484  string memory */\n      0x60\n        /* \"@openzeppelin/contracts/utils/Strings.sol\":520:534  uint256 length */\n      0x00\n        /* \"@openzeppelin/contracts/utils/Strings.sol\":537:554  Math.log10(value) */\n      tag_199\n        /* \"@openzeppelin/contracts/utils/Strings.sol\":548:553  value */\n      dup4\n        /* \"@openzeppelin/contracts/utils/Strings.sol\":537:547  Math.log10 */\n      tag_200\n        /* \"@openzeppelin/contracts/utils/Strings.sol\":537:554  Math.log10(value) */\n      jump\t// in\n    tag_199:\n        /* \"@openzeppelin/contracts/utils/Strings.sol\":557:558  1 */\n      0x01\n        /* \"@openzeppelin/contracts/utils/Strings.sol\":537:558  Math.log10(value) + 1 */\n      add\n        /* \"@openzeppelin/contracts/utils/Strings.sol\":520:558  uint256 length = Math.log10(value) + 1 */\n      swap1\n      pop\n        /* \"@openzeppelin/contracts/utils/Strings.sol\":572:592  string memory buffer */\n      0x00\n        /* \"@openzeppelin/contracts/utils/Strings.sol\":606:612  length */\n      dup2\n        /* \"@openzeppelin/contracts/utils/Strings.sol\":595:613  new string(length) */\n      0xffffffffffffffff\n      dup2\n      gt\n      iszero\n      tag_202\n      jumpi\n      tag_202\n      tag_203\n      jump\t// in\n    tag_202:\n      mload(0x40)\n      swap1\n      dup1\n      dup3\n      mstore\n      dup1\n      0x1f\n      add\n      not(0x1f)\n      and\n      0x20\n      add\n      dup3\n      add\n      0x40\n      mstore\n      dup1\n      iszero\n      tag_204\n      jumpi\n      0x20\n      dup3\n      add\n      dup2\n      dup1\n      calldatasize\n      dup4\n      calldatacopy\n      add\n      swap1\n      pop\n    tag_204:\n      pop\n        /* \"@openzeppelin/contracts/utils/Strings.sol\":572:613  string memory buffer = new string(length) */\n      swap1\n      pop\n        /* \"@openzeppelin/contracts/utils/Strings.sol\":733:761  add(buffer, add(32, length)) */\n      dup2\n      dup2\n      add\n        /* \"@openzeppelin/contracts/utils/Strings.sol\":749:751  32 */\n      0x20\n        /* \"@openzeppelin/contracts/utils/Strings.sol\":733:761  add(buffer, add(32, length)) */\n      add\n        /* \"@openzeppelin/contracts/utils/Strings.sol\":788:1068  while (true) {... */\n    tag_205:\n      not(0x00)\n        /* \"@openzeppelin/contracts/utils/Strings.sol\":819:824  ptr-- */\n      add\n      shl(0x81, 0x181899199a1a9b1b9c1cb0b131b232b3)\n        /* \"@openzeppelin/contracts/utils/Strings.sol\":953:955  10 */\n      0x0a\n        /* \"@openzeppelin/contracts/utils/Strings.sol\":942:956  mod(value, 10) */\n      dup7\n      mod\n        /* \"@openzeppelin/contracts/utils/Strings.sol\":937:967  byte(mod(value, 10), _SYMBOLS) */\n      byte\n        /* \"@openzeppelin/contracts/utils/Strings.sol\":819:824  ptr-- */\n      dup2\n        /* \"@openzeppelin/contracts/utils/Strings.sol\":924:968  mstore8(ptr, byte(mod(value, 10), _SYMBOLS)) */\n      mstore8\n        /* \"@openzeppelin/contracts/utils/Strings.sol\":1012:1014  10 */\n      0x0a\n        /* \"@openzeppelin/contracts/utils/Strings.sol\":1003:1014  value /= 10 */\n      dup6\n      div\n      swap5\n      pop\n        /* \"@openzeppelin/contracts/utils/Strings.sol\":1032:1053  if (value == 0) break */\n      dup5\n        /* \"@openzeppelin/contracts/utils/Strings.sol\":788:1068  while (true) {... */\n      tag_205\n        /* \"@openzeppelin/contracts/utils/Strings.sol\":1032:1053  if (value == 0) break */\n      jumpi\n      pop\n        /* \"@openzeppelin/contracts/utils/Strings.sol\":1088:1094  buffer */\n      swap4\n        /* \"@openzeppelin/contracts/utils/Strings.sol\":415:1111  function toString(uint256 value) internal pure returns (string memory) {... */\n      swap3\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":15698:16094  function _beforeTokenTransfer(... */\n    tag_178:\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":15882:15883  1 */\n      0x01\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":15870:15879  batchSize */\n      dup2\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":15870:15883  batchSize > 1 */\n      gt\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":15866:16088  if (batchSize > 1) {... */\n      iszero\n      tag_141\n      jumpi\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":15903:15921  from != address(0) */\n      dup5\n      and\n      iszero\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":15899:15984  if (from != address(0)) {... */\n      tag_215\n      jumpi\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":15941:15956  _balances[from] */\n      dup5\n      and\n      0x00\n      swap1\n      dup2\n      mstore\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":15941:15950  _balances */\n      0x03\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":15941:15956  _balances[from] */\n      0x20\n      mstore\n      0x40\n      dup2\n      keccak256\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":15941:15969  _balances[from] -= batchSize */\n      dup1\n      sload\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":15960:15969  batchSize */\n      dup4\n      swap3\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":15941:15956  _balances[from] */\n      swap1\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":15941:15969  _balances[from] -= batchSize */\n      tag_216\n      swap1\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":15960:15969  batchSize */\n      dup5\n      swap1\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":15941:15969  _balances[from] -= batchSize */\n      tag_217\n      jump\t// in\n    tag_216:\n      swap1\n      swap2\n      sstore\n      pop\n      pop\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":15899:15984  if (from != address(0)) {... */\n    tag_215:\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":16001:16017  to != address(0) */\n      dup4\n      and\n      iszero\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":15997:16078  if (to != address(0)) {... */\n      tag_141\n      jumpi\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":16037:16050  _balances[to] */\n      dup4\n      and\n      0x00\n      swap1\n      dup2\n      mstore\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":16037:16046  _balances */\n      0x03\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":16037:16050  _balances[to] */\n      0x20\n      mstore\n      0x40\n      dup2\n      keccak256\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":16037:16063  _balances[to] += batchSize */\n      dup1\n      sload\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":16054:16063  batchSize */\n      dup4\n      swap3\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":16037:16050  _balances[to] */\n      swap1\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":16037:16063  _balances[to] += batchSize */\n      tag_219\n      swap1\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":16054:16063  batchSize */\n      dup5\n      swap1\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":16037:16063  _balances[to] += batchSize */\n      tag_220\n      jump\t// in\n    tag_219:\n      swap1\n      swap2\n      sstore\n      pop\n      pop\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":15698:16094  function _beforeTokenTransfer(... */\n      pop\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":14151:14982  function _checkOnERC721Received(... */\n    tag_193:\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":14300:14304  bool */\n      0x00\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":14320:14333  to.isContract */\n      dup5\n      and\n        /* \"@openzeppelin/contracts/utils/Address.sol\":1465:1484  account.code.length */\n      extcodesize\n        /* \"@openzeppelin/contracts/utils/Address.sol\":1465:1488  account.code.length > 0 */\n      iszero\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":14316:14976  if (to.isContract()) {... */\n      tag_225\n      jumpi\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":14355:14426  IERC721Receiver(to).onERC721Received(_msgSender(), from, tokenId, data) */\n      mload(0x40)\n      shl(0xe1, 0x0a85bd01)\n      dup2\n      mstore\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":14355:14391  IERC721Receiver(to).onERC721Received */\n      dup6\n      and\n      swap1\n      0x150b7a02\n      swap1\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":14355:14426  IERC721Receiver(to).onERC721Received(_msgSender(), from, tokenId, data) */\n      tag_227\n      swap1\n        /* \"@openzeppelin/contracts/utils/Context.sol\":719:729  msg.sender */\n      caller\n      swap1\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":14406:14410  from */\n      dup10\n      swap1\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":14412:14419  tokenId */\n      dup9\n      swap1\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":14421:14425  data */\n      dup9\n      swap1\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":14355:14426  IERC721Receiver(to).onERC721Received(_msgSender(), from, tokenId, data) */\n      0x04\n      add\n      tag_228\n      jump\t// in\n    tag_227:\n      0x20\n      mload(0x40)\n      dup1\n      dup4\n      sub\n      dup2\n      0x00\n      dup8\n      gas\n      call\n      swap3\n      pop\n      pop\n      pop\n      dup1\n      iszero\n      tag_229\n      jumpi\n      pop\n      0x40\n      dup1\n      mload\n      0x1f\n      returndatasize\n      swap1\n      dup2\n      add\n      not(0x1f)\n      and\n      dup3\n      add\n      swap1\n      swap3\n      mstore\n      tag_230\n      swap2\n      dup2\n      add\n      swap1\n      tag_231\n      jump\t// in\n    tag_230:\n      0x01\n    tag_229:\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":14351:14924  try IERC721Receiver(to).onERC721Received(_msgSender(), from, tokenId, data) returns (bytes4 retval) {... */\n      tag_232\n      jumpi\n      returndatasize\n      dup1\n      dup1\n      iszero\n      tag_237\n      jumpi\n      mload(0x40)\n      swap2\n      pop\n      and(add(returndatasize, 0x3f), not(0x1f))\n      dup3\n      add\n      0x40\n      mstore\n      returndatasize\n      dup3\n      mstore\n      returndatasize\n      0x00\n      0x20\n      dup5\n      add\n      returndatacopy\n      jump(tag_236)\n    tag_237:\n      0x60\n      swap2\n      pop\n    tag_236:\n      pop\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":14593:14599  reason */\n      dup1\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":14593:14606  reason.length */\n      mload\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":14610:14611  0 */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":14593:14611  reason.length == 0 */\n      sub\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":14589:14910  if (reason.length == 0) {... */\n      tag_238\n      jumpi\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":14635:14695  revert(\"ERC721: transfer to non ERC721Receiver implementer\") */\n      mload(0x40)\n      shl(0xe5, 0x461bcd)\n      dup2\n      mstore\n      0x04\n      add\n      tag_93\n      swap1\n      tag_196\n      jump\t// in\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":14589:14910  if (reason.length == 0) {... */\n    tag_238:\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":14862:14868  reason */\n      dup1\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":14856:14869  mload(reason) */\n      mload\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":14847:14853  reason */\n      dup2\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":14843:14845  32 */\n      0x20\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":14839:14854  add(32, reason) */\n      add\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":14832:14870  revert(add(32, reason), mload(reason)) */\n      revert\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":14351:14924  try IERC721Receiver(to).onERC721Received(_msgSender(), from, tokenId, data) returns (bytes4 retval) {... */\n    tag_232:\n      not(sub(shl(0xe0, 0x01), 0x01))\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":14476:14527  retval == IERC721Receiver.onERC721Received.selector */\n      and\n      shl(0xe1, 0x0a85bd01)\n      eq\n      swap1\n      pop\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":14469:14527  return retval == IERC721Receiver.onERC721Received.selector */\n      jump(tag_167)\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":14316:14976  if (to.isContract()) {... */\n    tag_225:\n      pop\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":14961:14965  true */\n      0x01\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":14151:14982  function _checkOnERC721Received(... */\n      swap5\n      swap4\n      pop\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"@openzeppelin/contracts/utils/math/Math.sol\":9889:10779  function log10(uint256 value) internal pure returns (uint256) {... */\n    tag_200:\n        /* \"@openzeppelin/contracts/utils/math/Math.sol\":9942:9949  uint256 */\n      0x00\n      dup1\n      shl(0x40, 0x184f03e93ff9f4daa797ed6e38ed64bf6a1f01)\n        /* \"@openzeppelin/contracts/utils/math/Math.sol\":10017:10032  value >= 10**64 */\n      dup4\n      lt\n        /* \"@openzeppelin/contracts/utils/math/Math.sol\":10013:10112  if (value >= 10**64) {... */\n      tag_244\n      jumpi\n      shl(0x40, 0x184f03e93ff9f4daa797ed6e38ed64bf6a1f01)\n        /* \"@openzeppelin/contracts/utils/math/Math.sol\":10052:10067  value /= 10**64 */\n      dup4\n      div\n      swap3\n      pop\n        /* \"@openzeppelin/contracts/utils/math/Math.sol\":10095:10097  64 */\n      0x40\n        /* \"@openzeppelin/contracts/utils/math/Math.sol\":10085:10097  result += 64 */\n      add\n        /* \"@openzeppelin/contracts/utils/math/Math.sol\":10013:10112  if (value >= 10**64) {... */\n    tag_244:\n        /* \"@openzeppelin/contracts/utils/math/Math.sol\":10138:10144  10**32 */\n      0x04ee2d6d415b85acef8100000000\n        /* \"@openzeppelin/contracts/utils/math/Math.sol\":10129:10134  value */\n      dup4\n        /* \"@openzeppelin/contracts/utils/math/Math.sol\":10129:10144  value >= 10**32 */\n      lt\n        /* \"@openzeppelin/contracts/utils/math/Math.sol\":10125:10224  if (value >= 10**32) {... */\n      tag_247\n      jumpi\n        /* \"@openzeppelin/contracts/utils/math/Math.sol\":10173:10179  10**32 */\n      0x04ee2d6d415b85acef8100000000\n        /* \"@openzeppelin/contracts/utils/math/Math.sol\":10164:10179  value /= 10**32 */\n      dup4\n      div\n      swap3\n      pop\n        /* \"@openzeppelin/contracts/utils/math/Math.sol\":10207:10209  32 */\n      0x20\n        /* \"@openzeppelin/contracts/utils/math/Math.sol\":10197:10209  result += 32 */\n      add\n        /* \"@openzeppelin/contracts/utils/math/Math.sol\":10125:10224  if (value >= 10**32) {... */\n    tag_247:\n        /* \"@openzeppelin/contracts/utils/math/Math.sol\":10250:10256  10**16 */\n      0x2386f26fc10000\n        /* \"@openzeppelin/contracts/utils/math/Math.sol\":10241:10246  value */\n      dup4\n        /* \"@openzeppelin/contracts/utils/math/Math.sol\":10241:10256  value >= 10**16 */\n      lt\n        /* \"@openzeppelin/contracts/utils/math/Math.sol\":10237:10336  if (value >= 10**16) {... */\n      tag_250\n      jumpi\n        /* \"@openzeppelin/contracts/utils/math/Math.sol\":10285:10291  10**16 */\n      0x2386f26fc10000\n        /* \"@openzeppelin/contracts/utils/math/Math.sol\":10276:10291  value /= 10**16 */\n      dup4\n      div\n      swap3\n      pop\n        /* \"@openzeppelin/contracts/utils/math/Math.sol\":10319:10321  16 */\n      0x10\n        /* \"@openzeppelin/contracts/utils/math/Math.sol\":10309:10321  result += 16 */\n      add\n        /* \"@openzeppelin/contracts/utils/math/Math.sol\":10237:10336  if (value >= 10**16) {... */\n    tag_250:\n        /* \"@openzeppelin/contracts/utils/math/Math.sol\":10362:10367  10**8 */\n      0x05f5e100\n        /* \"@openzeppelin/contracts/utils/math/Math.sol\":10353:10358  value */\n      dup4\n        /* \"@openzeppelin/contracts/utils/math/Math.sol\":10353:10367  value >= 10**8 */\n      lt\n        /* \"@openzeppelin/contracts/utils/math/Math.sol\":10349:10445  if (value >= 10**8) {... */\n      tag_253\n      jumpi\n        /* \"@openzeppelin/contracts/utils/math/Math.sol\":10396:10401  10**8 */\n      0x05f5e100\n        /* \"@openzeppelin/contracts/utils/math/Math.sol\":10387:10401  value /= 10**8 */\n      dup4\n      div\n      swap3\n      pop\n        /* \"@openzeppelin/contracts/utils/math/Math.sol\":10429:10430  8 */\n      0x08\n        /* \"@openzeppelin/contracts/utils/math/Math.sol\":10419:10430  result += 8 */\n      add\n        /* \"@openzeppelin/contracts/utils/math/Math.sol\":10349:10445  if (value >= 10**8) {... */\n    tag_253:\n        /* \"@openzeppelin/contracts/utils/math/Math.sol\":10471:10476  10**4 */\n      0x2710\n        /* \"@openzeppelin/contracts/utils/math/Math.sol\":10462:10467  value */\n      dup4\n        /* \"@openzeppelin/contracts/utils/math/Math.sol\":10462:10476  value >= 10**4 */\n      lt\n        /* \"@openzeppelin/contracts/utils/math/Math.sol\":10458:10554  if (value >= 10**4) {... */\n      tag_256\n      jumpi\n        /* \"@openzeppelin/contracts/utils/math/Math.sol\":10505:10510  10**4 */\n      0x2710\n        /* \"@openzeppelin/contracts/utils/math/Math.sol\":10496:10510  value /= 10**4 */\n      dup4\n      div\n      swap3\n      pop\n        /* \"@openzeppelin/contracts/utils/math/Math.sol\":10538:10539  4 */\n      0x04\n        /* \"@openzeppelin/contracts/utils/math/Math.sol\":10528:10539  result += 4 */\n      add\n        /* \"@openzeppelin/contracts/utils/math/Math.sol\":10458:10554  if (value >= 10**4) {... */\n    tag_256:\n        /* \"@openzeppelin/contracts/utils/math/Math.sol\":10580:10585  10**2 */\n      0x64\n        /* \"@openzeppelin/contracts/utils/math/Math.sol\":10571:10576  value */\n      dup4\n        /* \"@openzeppelin/contracts/utils/math/Math.sol\":10571:10585  value >= 10**2 */\n      lt\n        /* \"@openzeppelin/contracts/utils/math/Math.sol\":10567:10663  if (value >= 10**2) {... */\n      tag_259\n      jumpi\n        /* \"@openzeppelin/contracts/utils/math/Math.sol\":10614:10619  10**2 */\n      0x64\n        /* \"@openzeppelin/contracts/utils/math/Math.sol\":10605:10619  value /= 10**2 */\n      dup4\n      div\n      swap3\n      pop\n        /* \"@openzeppelin/contracts/utils/math/Math.sol\":10647:10648  2 */\n      0x02\n        /* \"@openzeppelin/contracts/utils/math/Math.sol\":10637:10648  result += 2 */\n      add\n        /* \"@openzeppelin/contracts/utils/math/Math.sol\":10567:10663  if (value >= 10**2) {... */\n    tag_259:\n        /* \"@openzeppelin/contracts/utils/math/Math.sol\":10689:10694  10**1 */\n      0x0a\n        /* \"@openzeppelin/contracts/utils/math/Math.sol\":10680:10685  value */\n      dup4\n        /* \"@openzeppelin/contracts/utils/math/Math.sol\":10680:10694  value >= 10**1 */\n      lt\n        /* \"@openzeppelin/contracts/utils/math/Math.sol\":10676:10740  if (value >= 10**1) {... */\n      tag_78\n      jumpi\n        /* \"@openzeppelin/contracts/utils/math/Math.sol\":10724:10725  1 */\n      0x01\n        /* \"@openzeppelin/contracts/utils/math/Math.sol\":10714:10725  result += 1 */\n      add\n        /* \"@openzeppelin/contracts/utils/math/Math.sol\":10766:10772  result */\n      swap3\n        /* \"@openzeppelin/contracts/utils/math/Math.sol\":9889:10779  function log10(uint256 value) internal pure returns (uint256) {... */\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":14:145   */\n    tag_264:\n      not(sub(shl(0xe0, 0x01), 0x01))\n        /* \"#utility.yul\":88:120   */\n      dup2\n      and\n        /* \"#utility.yul\":78:121   */\n      dup2\n      eq\n        /* \"#utility.yul\":68:139   */\n      tag_158\n      jumpi\n        /* \"#utility.yul\":135:136   */\n      0x00\n        /* \"#utility.yul\":132:133   */\n      dup1\n        /* \"#utility.yul\":125:137   */\n      revert\n        /* \"#utility.yul\":150:395   */\n    tag_20:\n        /* \"#utility.yul\":208:214   */\n      0x00\n        /* \"#utility.yul\":261:263   */\n      0x20\n        /* \"#utility.yul\":249:258   */\n      dup3\n        /* \"#utility.yul\":240:247   */\n      dup5\n        /* \"#utility.yul\":236:259   */\n      sub\n        /* \"#utility.yul\":232:264   */\n      slt\n        /* \"#utility.yul\":229:281   */\n      iszero\n      tag_273\n      jumpi\n        /* \"#utility.yul\":277:278   */\n      0x00\n        /* \"#utility.yul\":274:275   */\n      dup1\n        /* \"#utility.yul\":267:279   */\n      revert\n        /* \"#utility.yul\":229:281   */\n    tag_273:\n        /* \"#utility.yul\":316:325   */\n      dup2\n        /* \"#utility.yul\":303:326   */\n      calldataload\n        /* \"#utility.yul\":335:365   */\n      tag_148\n        /* \"#utility.yul\":359:364   */\n      dup2\n        /* \"#utility.yul\":335:365   */\n      tag_264\n      jump\t// in\n        /* \"#utility.yul\":592:842   */\n    tag_265:\n        /* \"#utility.yul\":677:678   */\n      0x00\n        /* \"#utility.yul\":687:800   */\n    tag_277:\n        /* \"#utility.yul\":701:707   */\n      dup4\n        /* \"#utility.yul\":698:699   */\n      dup2\n        /* \"#utility.yul\":695:708   */\n      lt\n        /* \"#utility.yul\":687:800   */\n      iszero\n      tag_279\n      jumpi\n        /* \"#utility.yul\":777:788   */\n      dup2\n      dup2\n      add\n        /* \"#utility.yul\":771:789   */\n      mload\n        /* \"#utility.yul\":758:769   */\n      dup4\n      dup3\n      add\n        /* \"#utility.yul\":751:790   */\n      mstore\n        /* \"#utility.yul\":723:725   */\n      0x20\n        /* \"#utility.yul\":716:726   */\n      add\n        /* \"#utility.yul\":687:800   */\n      jump(tag_277)\n    tag_279:\n      pop\n      pop\n        /* \"#utility.yul\":834:835   */\n      0x00\n        /* \"#utility.yul\":816:832   */\n      swap2\n      add\n        /* \"#utility.yul\":809:836   */\n      mstore\n        /* \"#utility.yul\":592:842   */\n      jump\t// out\n        /* \"#utility.yul\":847:1118   */\n    tag_266:\n        /* \"#utility.yul\":889:892   */\n      0x00\n        /* \"#utility.yul\":927:932   */\n      dup2\n        /* \"#utility.yul\":921:933   */\n      mload\n        /* \"#utility.yul\":954:960   */\n      dup1\n        /* \"#utility.yul\":949:952   */\n      dup5\n        /* \"#utility.yul\":942:961   */\n      mstore\n        /* \"#utility.yul\":970:1046   */\n      tag_281\n        /* \"#utility.yul\":1039:1045   */\n      dup2\n        /* \"#utility.yul\":1032:1036   */\n      0x20\n        /* \"#utility.yul\":1027:1030   */\n      dup7\n        /* \"#utility.yul\":1023:1037   */\n      add\n        /* \"#utility.yul\":1016:1020   */\n      0x20\n        /* \"#utility.yul\":1009:1014   */\n      dup7\n        /* \"#utility.yul\":1005:1021   */\n      add\n        /* \"#utility.yul\":970:1046   */\n      tag_265\n      jump\t// in\n    tag_281:\n        /* \"#utility.yul\":1100:1102   */\n      0x1f\n        /* \"#utility.yul\":1079:1094   */\n      add\n      not(0x1f)\n        /* \"#utility.yul\":1075:1104   */\n      and\n        /* \"#utility.yul\":1066:1105   */\n      swap3\n      swap1\n      swap3\n      add\n        /* \"#utility.yul\":1107:1111   */\n      0x20\n        /* \"#utility.yul\":1062:1112   */\n      add\n      swap3\n        /* \"#utility.yul\":847:1118   */\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":1123:1343   */\n    tag_27:\n        /* \"#utility.yul\":1272:1274   */\n      0x20\n        /* \"#utility.yul\":1261:1270   */\n      dup2\n        /* \"#utility.yul\":1254:1275   */\n      mstore\n        /* \"#utility.yul\":1235:1239   */\n      0x00\n        /* \"#utility.yul\":1292:1337   */\n      tag_148\n        /* \"#utility.yul\":1333:1335   */\n      0x20\n        /* \"#utility.yul\":1322:1331   */\n      dup4\n        /* \"#utility.yul\":1318:1336   */\n      add\n        /* \"#utility.yul\":1310:1316   */\n      dup5\n        /* \"#utility.yul\":1292:1337   */\n      tag_266\n      jump\t// in\n        /* \"#utility.yul\":1348:1528   */\n    tag_30:\n        /* \"#utility.yul\":1407:1413   */\n      0x00\n        /* \"#utility.yul\":1460:1462   */\n      0x20\n        /* \"#utility.yul\":1448:1457   */\n      dup3\n        /* \"#utility.yul\":1439:1446   */\n      dup5\n        /* \"#utility.yul\":1435:1458   */\n      sub\n        /* \"#utility.yul\":1431:1463   */\n      slt\n        /* \"#utility.yul\":1428:1480   */\n      iszero\n      tag_285\n      jumpi\n        /* \"#utility.yul\":1476:1477   */\n      0x00\n        /* \"#utility.yul\":1473:1474   */\n      dup1\n        /* \"#utility.yul\":1466:1478   */\n      revert\n        /* \"#utility.yul\":1428:1480   */\n    tag_285:\n      pop\n        /* \"#utility.yul\":1499:1522   */\n      calldataload\n      swap2\n        /* \"#utility.yul\":1348:1528   */\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":1741:1914   */\n    tag_267:\n        /* \"#utility.yul\":1809:1829   */\n      dup1\n      calldataload\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"#utility.yul\":1858:1889   */\n      dup2\n      and\n        /* \"#utility.yul\":1848:1890   */\n      dup2\n      eq\n        /* \"#utility.yul\":1838:1908   */\n      tag_288\n      jumpi\n        /* \"#utility.yul\":1904:1905   */\n      0x00\n        /* \"#utility.yul\":1901:1902   */\n      dup1\n        /* \"#utility.yul\":1894:1906   */\n      revert\n        /* \"#utility.yul\":1838:1908   */\n    tag_288:\n        /* \"#utility.yul\":1741:1914   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":1919:2173   */\n    tag_36:\n        /* \"#utility.yul\":1987:1993   */\n      0x00\n        /* \"#utility.yul\":1995:2001   */\n      dup1\n        /* \"#utility.yul\":2048:2050   */\n      0x40\n        /* \"#utility.yul\":2036:2045   */\n      dup4\n        /* \"#utility.yul\":2027:2034   */\n      dup6\n        /* \"#utility.yul\":2023:2046   */\n      sub\n        /* \"#utility.yul\":2019:2051   */\n      slt\n        /* \"#utility.yul\":2016:2068   */\n      iszero\n      tag_290\n      jumpi\n        /* \"#utility.yul\":2064:2065   */\n      0x00\n        /* \"#utility.yul\":2061:2062   */\n      dup1\n        /* \"#utility.yul\":2054:2066   */\n      revert\n        /* \"#utility.yul\":2016:2068   */\n    tag_290:\n        /* \"#utility.yul\":2087:2116   */\n      tag_291\n        /* \"#utility.yul\":2106:2115   */\n      dup4\n        /* \"#utility.yul\":2087:2116   */\n      tag_267\n      jump\t// in\n    tag_291:\n        /* \"#utility.yul\":2077:2116   */\n      swap5\n        /* \"#utility.yul\":2163:2165   */\n      0x20\n        /* \"#utility.yul\":2148:2166   */\n      swap4\n      swap1\n      swap4\n      add\n        /* \"#utility.yul\":2135:2167   */\n      calldataload\n      swap4\n      pop\n      pop\n      pop\n        /* \"#utility.yul\":1919:2173   */\n      jump\t// out\n        /* \"#utility.yul\":2178:2506   */\n    tag_40:\n        /* \"#utility.yul\":2255:2261   */\n      0x00\n        /* \"#utility.yul\":2263:2269   */\n      dup1\n        /* \"#utility.yul\":2271:2277   */\n      0x00\n        /* \"#utility.yul\":2324:2326   */\n      0x60\n        /* \"#utility.yul\":2312:2321   */\n      dup5\n        /* \"#utility.yul\":2303:2310   */\n      dup7\n        /* \"#utility.yul\":2299:2322   */\n      sub\n        /* \"#utility.yul\":2295:2327   */\n      slt\n        /* \"#utility.yul\":2292:2344   */\n      iszero\n      tag_293\n      jumpi\n        /* \"#utility.yul\":2340:2341   */\n      0x00\n        /* \"#utility.yul\":2337:2338   */\n      dup1\n        /* \"#utility.yul\":2330:2342   */\n      revert\n        /* \"#utility.yul\":2292:2344   */\n    tag_293:\n        /* \"#utility.yul\":2363:2392   */\n      tag_294\n        /* \"#utility.yul\":2382:2391   */\n      dup5\n        /* \"#utility.yul\":2363:2392   */\n      tag_267\n      jump\t// in\n    tag_294:\n        /* \"#utility.yul\":2353:2392   */\n      swap3\n      pop\n        /* \"#utility.yul\":2411:2449   */\n      tag_295\n        /* \"#utility.yul\":2445:2447   */\n      0x20\n        /* \"#utility.yul\":2434:2443   */\n      dup6\n        /* \"#utility.yul\":2430:2448   */\n      add\n        /* \"#utility.yul\":2411:2449   */\n      tag_267\n      jump\t// in\n    tag_295:\n        /* \"#utility.yul\":2401:2449   */\n      swap2\n      pop\n        /* \"#utility.yul\":2496:2498   */\n      0x40\n        /* \"#utility.yul\":2485:2494   */\n      dup5\n        /* \"#utility.yul\":2481:2499   */\n      add\n        /* \"#utility.yul\":2468:2500   */\n      calldataload\n        /* \"#utility.yul\":2458:2500   */\n      swap1\n      pop\n        /* \"#utility.yul\":2178:2506   */\n      swap3\n      pop\n      swap3\n      pop\n      swap3\n      jump\t// out\n        /* \"#utility.yul\":2511:2697   */\n    tag_51:\n        /* \"#utility.yul\":2570:2576   */\n      0x00\n        /* \"#utility.yul\":2623:2625   */\n      0x20\n        /* \"#utility.yul\":2611:2620   */\n      dup3\n        /* \"#utility.yul\":2602:2609   */\n      dup5\n        /* \"#utility.yul\":2598:2621   */\n      sub\n        /* \"#utility.yul\":2594:2626   */\n      slt\n        /* \"#utility.yul\":2591:2643   */\n      iszero\n      tag_297\n      jumpi\n        /* \"#utility.yul\":2639:2640   */\n      0x00\n        /* \"#utility.yul\":2636:2637   */\n      dup1\n        /* \"#utility.yul\":2629:2641   */\n      revert\n        /* \"#utility.yul\":2591:2643   */\n    tag_297:\n        /* \"#utility.yul\":2662:2691   */\n      tag_148\n        /* \"#utility.yul\":2681:2690   */\n      dup3\n        /* \"#utility.yul\":2662:2691   */\n      tag_267\n      jump\t// in\n        /* \"#utility.yul\":2884:3231   */\n    tag_60:\n        /* \"#utility.yul\":2949:2955   */\n      0x00\n        /* \"#utility.yul\":2957:2963   */\n      dup1\n        /* \"#utility.yul\":3010:3012   */\n      0x40\n        /* \"#utility.yul\":2998:3007   */\n      dup4\n        /* \"#utility.yul\":2989:2996   */\n      dup6\n        /* \"#utility.yul\":2985:3008   */\n      sub\n        /* \"#utility.yul\":2981:3013   */\n      slt\n        /* \"#utility.yul\":2978:3030   */\n      iszero\n      tag_301\n      jumpi\n        /* \"#utility.yul\":3026:3027   */\n      0x00\n        /* \"#utility.yul\":3023:3024   */\n      dup1\n        /* \"#utility.yul\":3016:3028   */\n      revert\n        /* \"#utility.yul\":2978:3030   */\n    tag_301:\n        /* \"#utility.yul\":3049:3078   */\n      tag_302\n        /* \"#utility.yul\":3068:3077   */\n      dup4\n        /* \"#utility.yul\":3049:3078   */\n      tag_267\n      jump\t// in\n    tag_302:\n        /* \"#utility.yul\":3039:3078   */\n      swap2\n      pop\n        /* \"#utility.yul\":3128:3130   */\n      0x20\n        /* \"#utility.yul\":3117:3126   */\n      dup4\n        /* \"#utility.yul\":3113:3131   */\n      add\n        /* \"#utility.yul\":3100:3132   */\n      calldataload\n        /* \"#utility.yul\":3175:3180   */\n      dup1\n        /* \"#utility.yul\":3168:3181   */\n      iszero\n        /* \"#utility.yul\":3161:3182   */\n      iszero\n        /* \"#utility.yul\":3154:3159   */\n      dup2\n        /* \"#utility.yul\":3151:3183   */\n      eq\n        /* \"#utility.yul\":3141:3201   */\n      tag_303\n      jumpi\n        /* \"#utility.yul\":3197:3198   */\n      0x00\n        /* \"#utility.yul\":3194:3195   */\n      dup1\n        /* \"#utility.yul\":3187:3199   */\n      revert\n        /* \"#utility.yul\":3141:3201   */\n    tag_303:\n        /* \"#utility.yul\":3220:3225   */\n      dup1\n        /* \"#utility.yul\":3210:3225   */\n      swap2\n      pop\n      pop\n        /* \"#utility.yul\":2884:3231   */\n      swap3\n      pop\n      swap3\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":3236:3363   */\n    tag_203:\n        /* \"#utility.yul\":3297:3307   */\n      0x4e487b71\n        /* \"#utility.yul\":3292:3295   */\n      0xe0\n        /* \"#utility.yul\":3288:3308   */\n      shl\n        /* \"#utility.yul\":3285:3286   */\n      0x00\n        /* \"#utility.yul\":3278:3309   */\n      mstore\n        /* \"#utility.yul\":3328:3332   */\n      0x41\n        /* \"#utility.yul\":3325:3326   */\n      0x04\n        /* \"#utility.yul\":3318:3333   */\n      mstore\n        /* \"#utility.yul\":3352:3356   */\n      0x24\n        /* \"#utility.yul\":3349:3350   */\n      0x00\n        /* \"#utility.yul\":3342:3357   */\n      revert\n        /* \"#utility.yul\":3368:4506   */\n    tag_64:\n        /* \"#utility.yul\":3463:3469   */\n      0x00\n        /* \"#utility.yul\":3471:3477   */\n      dup1\n        /* \"#utility.yul\":3479:3485   */\n      0x00\n        /* \"#utility.yul\":3487:3493   */\n      dup1\n        /* \"#utility.yul\":3540:3543   */\n      0x80\n        /* \"#utility.yul\":3528:3537   */\n      dup6\n        /* \"#utility.yul\":3519:3526   */\n      dup8\n        /* \"#utility.yul\":3515:3538   */\n      sub\n        /* \"#utility.yul\":3511:3544   */\n      slt\n        /* \"#utility.yul\":3508:3561   */\n      iszero\n      tag_306\n      jumpi\n        /* \"#utility.yul\":3557:3558   */\n      0x00\n        /* \"#utility.yul\":3554:3555   */\n      dup1\n        /* \"#utility.yul\":3547:3559   */\n      revert\n        /* \"#utility.yul\":3508:3561   */\n    tag_306:\n        /* \"#utility.yul\":3580:3609   */\n      tag_307\n        /* \"#utility.yul\":3599:3608   */\n      dup6\n        /* \"#utility.yul\":3580:3609   */\n      tag_267\n      jump\t// in\n    tag_307:\n        /* \"#utility.yul\":3570:3609   */\n      swap4\n      pop\n        /* \"#utility.yul\":3628:3666   */\n      tag_308\n        /* \"#utility.yul\":3662:3664   */\n      0x20\n        /* \"#utility.yul\":3651:3660   */\n      dup7\n        /* \"#utility.yul\":3647:3665   */\n      add\n        /* \"#utility.yul\":3628:3666   */\n      tag_267\n      jump\t// in\n    tag_308:\n        /* \"#utility.yul\":3618:3666   */\n      swap3\n      pop\n        /* \"#utility.yul\":3713:3715   */\n      0x40\n        /* \"#utility.yul\":3702:3711   */\n      dup6\n        /* \"#utility.yul\":3698:3716   */\n      add\n        /* \"#utility.yul\":3685:3717   */\n      calldataload\n        /* \"#utility.yul\":3675:3717   */\n      swap2\n      pop\n        /* \"#utility.yul\":3768:3770   */\n      0x60\n        /* \"#utility.yul\":3757:3766   */\n      dup6\n        /* \"#utility.yul\":3753:3771   */\n      add\n        /* \"#utility.yul\":3740:3772   */\n      calldataload\n        /* \"#utility.yul\":3791:3809   */\n      0xffffffffffffffff\n        /* \"#utility.yul\":3832:3834   */\n      dup1\n        /* \"#utility.yul\":3824:3830   */\n      dup3\n        /* \"#utility.yul\":3821:3835   */\n      gt\n        /* \"#utility.yul\":3818:3852   */\n      iszero\n      tag_309\n      jumpi\n        /* \"#utility.yul\":3848:3849   */\n      0x00\n        /* \"#utility.yul\":3845:3846   */\n      dup1\n        /* \"#utility.yul\":3838:3850   */\n      revert\n        /* \"#utility.yul\":3818:3852   */\n    tag_309:\n        /* \"#utility.yul\":3886:3892   */\n      dup2\n        /* \"#utility.yul\":3875:3884   */\n      dup8\n        /* \"#utility.yul\":3871:3893   */\n      add\n        /* \"#utility.yul\":3861:3893   */\n      swap2\n      pop\n        /* \"#utility.yul\":3931:3938   */\n      dup8\n        /* \"#utility.yul\":3924:3928   */\n      0x1f\n        /* \"#utility.yul\":3920:3922   */\n      dup4\n        /* \"#utility.yul\":3916:3929   */\n      add\n        /* \"#utility.yul\":3912:3939   */\n      slt\n        /* \"#utility.yul\":3902:3957   */\n      tag_310\n      jumpi\n        /* \"#utility.yul\":3953:3954   */\n      0x00\n        /* \"#utility.yul\":3950:3951   */\n      dup1\n        /* \"#utility.yul\":3943:3955   */\n      revert\n        /* \"#utility.yul\":3902:3957   */\n    tag_310:\n        /* \"#utility.yul\":3989:3991   */\n      dup2\n        /* \"#utility.yul\":3976:3992   */\n      calldataload\n        /* \"#utility.yul\":4011:4013   */\n      dup2\n        /* \"#utility.yul\":4007:4009   */\n      dup2\n        /* \"#utility.yul\":4004:4014   */\n      gt\n        /* \"#utility.yul\":4001:4037   */\n      iszero\n      tag_312\n      jumpi\n        /* \"#utility.yul\":4017:4035   */\n      tag_312\n      tag_203\n      jump\t// in\n    tag_312:\n        /* \"#utility.yul\":4092:4094   */\n      0x40\n        /* \"#utility.yul\":4086:4095   */\n      mload\n        /* \"#utility.yul\":4060:4062   */\n      0x1f\n        /* \"#utility.yul\":4146:4159   */\n      dup3\n      add\n      not(0x1f)\n        /* \"#utility.yul\":4142:4164   */\n      swap1\n      dup2\n      and\n        /* \"#utility.yul\":4166:4168   */\n      0x3f\n        /* \"#utility.yul\":4138:4169   */\n      add\n        /* \"#utility.yul\":4134:4174   */\n      and\n        /* \"#utility.yul\":4122:4175   */\n      dup2\n      add\n      swap1\n        /* \"#utility.yul\":4190:4208   */\n      dup4\n      dup3\n      gt\n        /* \"#utility.yul\":4210:4232   */\n      dup2\n      dup4\n      lt\n        /* \"#utility.yul\":4187:4233   */\n      or\n        /* \"#utility.yul\":4184:4256   */\n      iszero\n      tag_314\n      jumpi\n        /* \"#utility.yul\":4236:4254   */\n      tag_314\n      tag_203\n      jump\t// in\n    tag_314:\n        /* \"#utility.yul\":4276:4286   */\n      dup2\n        /* \"#utility.yul\":4272:4274   */\n      0x40\n        /* \"#utility.yul\":4265:4287   */\n      mstore\n        /* \"#utility.yul\":4311:4313   */\n      dup3\n        /* \"#utility.yul\":4303:4309   */\n      dup2\n        /* \"#utility.yul\":4296:4314   */\n      mstore\n        /* \"#utility.yul\":4351:4358   */\n      dup11\n        /* \"#utility.yul\":4346:4348   */\n      0x20\n        /* \"#utility.yul\":4341:4343   */\n      dup5\n        /* \"#utility.yul\":4337:4339   */\n      dup8\n        /* \"#utility.yul\":4333:4344   */\n      add\n        /* \"#utility.yul\":4329:4349   */\n      add\n        /* \"#utility.yul\":4326:4359   */\n      gt\n        /* \"#utility.yul\":4323:4376   */\n      iszero\n      tag_315\n      jumpi\n        /* \"#utility.yul\":4372:4373   */\n      0x00\n        /* \"#utility.yul\":4369:4370   */\n      dup1\n        /* \"#utility.yul\":4362:4374   */\n      revert\n        /* \"#utility.yul\":4323:4376   */\n    tag_315:\n        /* \"#utility.yul\":4428:4430   */\n      dup3\n        /* \"#utility.yul\":4423:4425   */\n      0x20\n        /* \"#utility.yul\":4419:4421   */\n      dup7\n        /* \"#utility.yul\":4415:4426   */\n      add\n        /* \"#utility.yul\":4410:4412   */\n      0x20\n        /* \"#utility.yul\":4402:4408   */\n      dup4\n        /* \"#utility.yul\":4398:4413   */\n      add\n        /* \"#utility.yul\":4385:4431   */\n      calldatacopy\n        /* \"#utility.yul\":4473:4474   */\n      0x00\n        /* \"#utility.yul\":4468:4470   */\n      0x20\n        /* \"#utility.yul\":4463:4465   */\n      dup5\n        /* \"#utility.yul\":4455:4461   */\n      dup4\n        /* \"#utility.yul\":4451:4466   */\n      add\n        /* \"#utility.yul\":4447:4471   */\n      add\n        /* \"#utility.yul\":4440:4475   */\n      mstore\n        /* \"#utility.yul\":4494:4500   */\n      dup1\n        /* \"#utility.yul\":4484:4500   */\n      swap6\n      pop\n      pop\n      pop\n      pop\n      pop\n      pop\n        /* \"#utility.yul\":3368:4506   */\n      swap3\n      swap6\n      swap2\n      swap5\n      pop\n      swap3\n      pop\n      jump\t// out\n        /* \"#utility.yul\":4511:4771   */\n    tag_72:\n        /* \"#utility.yul\":4579:4585   */\n      0x00\n        /* \"#utility.yul\":4587:4593   */\n      dup1\n        /* \"#utility.yul\":4640:4642   */\n      0x40\n        /* \"#utility.yul\":4628:4637   */\n      dup4\n        /* \"#utility.yul\":4619:4626   */\n      dup6\n        /* \"#utility.yul\":4615:4638   */\n      sub\n        /* \"#utility.yul\":4611:4643   */\n      slt\n        /* \"#utility.yul\":4608:4660   */\n      iszero\n      tag_317\n      jumpi\n        /* \"#utility.yul\":4656:4657   */\n      0x00\n        /* \"#utility.yul\":4653:4654   */\n      dup1\n        /* \"#utility.yul\":4646:4658   */\n      revert\n        /* \"#utility.yul\":4608:4660   */\n    tag_317:\n        /* \"#utility.yul\":4679:4708   */\n      tag_318\n        /* \"#utility.yul\":4698:4707   */\n      dup4\n        /* \"#utility.yul\":4679:4708   */\n      tag_267\n      jump\t// in\n    tag_318:\n        /* \"#utility.yul\":4669:4708   */\n      swap2\n      pop\n        /* \"#utility.yul\":4727:4765   */\n      tag_319\n        /* \"#utility.yul\":4761:4763   */\n      0x20\n        /* \"#utility.yul\":4750:4759   */\n      dup5\n        /* \"#utility.yul\":4746:4764   */\n      add\n        /* \"#utility.yul\":4727:4765   */\n      tag_267\n      jump\t// in\n    tag_319:\n        /* \"#utility.yul\":4717:4765   */\n      swap1\n      pop\n        /* \"#utility.yul\":4511:4771   */\n      swap3\n      pop\n      swap3\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":4776:5156   */\n    tag_82:\n        /* \"#utility.yul\":4855:4856   */\n      0x01\n        /* \"#utility.yul\":4851:4863   */\n      dup2\n      dup2\n      shr\n      swap1\n        /* \"#utility.yul\":4898:4910   */\n      dup3\n      and\n      dup1\n        /* \"#utility.yul\":4919:4980   */\n      tag_321\n      jumpi\n        /* \"#utility.yul\":4973:4977   */\n      0x7f\n        /* \"#utility.yul\":4965:4971   */\n      dup3\n        /* \"#utility.yul\":4961:4978   */\n      and\n        /* \"#utility.yul\":4951:4978   */\n      swap2\n      pop\n        /* \"#utility.yul\":4919:4980   */\n    tag_321:\n        /* \"#utility.yul\":5026:5028   */\n      0x20\n        /* \"#utility.yul\":5018:5024   */\n      dup3\n        /* \"#utility.yul\":5015:5029   */\n      lt\n        /* \"#utility.yul\":4995:5013   */\n      dup2\n        /* \"#utility.yul\":4992:5030   */\n      sub\n        /* \"#utility.yul\":4989:5150   */\n      tag_322\n      jumpi\n        /* \"#utility.yul\":5072:5082   */\n      0x4e487b71\n        /* \"#utility.yul\":5067:5070   */\n      0xe0\n        /* \"#utility.yul\":5063:5083   */\n      shl\n        /* \"#utility.yul\":5060:5061   */\n      0x00\n        /* \"#utility.yul\":5053:5084   */\n      mstore\n        /* \"#utility.yul\":5107:5111   */\n      0x22\n        /* \"#utility.yul\":5104:5105   */\n      0x04\n        /* \"#utility.yul\":5097:5112   */\n      mstore\n        /* \"#utility.yul\":5135:5139   */\n      0x24\n        /* \"#utility.yul\":5132:5133   */\n      0x00\n        /* \"#utility.yul\":5125:5140   */\n      revert\n        /* \"#utility.yul\":4989:5150   */\n    tag_322:\n      pop\n        /* \"#utility.yul\":4776:5156   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":5993:6402   */\n    tag_111:\n        /* \"#utility.yul\":6195:6197   */\n      0x20\n        /* \"#utility.yul\":6177:6198   */\n      dup1\n      dup3\n      mstore\n        /* \"#utility.yul\":6234:6236   */\n      0x2d\n        /* \"#utility.yul\":6214:6232   */\n      swap1\n      dup3\n      add\n        /* \"#utility.yul\":6207:6237   */\n      mstore\n        /* \"#utility.yul\":6273:6307   */\n      0x4552433732313a2063616c6c6572206973206e6f7420746f6b656e206f776e65\n        /* \"#utility.yul\":6268:6270   */\n      0x40\n        /* \"#utility.yul\":6253:6271   */\n      dup3\n      add\n        /* \"#utility.yul\":6246:6308   */\n      mstore\n      shl(0x9a, 0x1c881bdc88185c1c1c9bdd9959)\n        /* \"#utility.yul\":6339:6341   */\n      0x60\n        /* \"#utility.yul\":6324:6342   */\n      dup3\n      add\n        /* \"#utility.yul\":6317:6360   */\n      mstore\n        /* \"#utility.yul\":6392:6395   */\n      0x80\n        /* \"#utility.yul\":6377:6396   */\n      add\n      swap1\n        /* \"#utility.yul\":5993:6402   */\n      jump\t// out\n        /* \"#utility.yul\":7170:7666   */\n    tag_152:\n        /* \"#utility.yul\":7349:7352   */\n      0x00\n        /* \"#utility.yul\":7387:7393   */\n      dup4\n        /* \"#utility.yul\":7381:7394   */\n      mload\n        /* \"#utility.yul\":7403:7469   */\n      tag_329\n        /* \"#utility.yul\":7462:7468   */\n      dup2\n        /* \"#utility.yul\":7457:7460   */\n      dup5\n        /* \"#utility.yul\":7450:7454   */\n      0x20\n        /* \"#utility.yul\":7442:7448   */\n      dup9\n        /* \"#utility.yul\":7438:7455   */\n      add\n        /* \"#utility.yul\":7403:7469   */\n      tag_265\n      jump\t// in\n    tag_329:\n        /* \"#utility.yul\":7532:7545   */\n      dup4\n      mload\n        /* \"#utility.yul\":7491:7507   */\n      swap1\n      dup4\n      add\n      swap1\n        /* \"#utility.yul\":7554:7624   */\n      tag_330\n        /* \"#utility.yul\":7532:7545   */\n      dup2\n        /* \"#utility.yul\":7491:7507   */\n      dup4\n        /* \"#utility.yul\":7601:7605   */\n      0x20\n        /* \"#utility.yul\":7589:7606   */\n      dup9\n      add\n        /* \"#utility.yul\":7554:7624   */\n      tag_265\n      jump\t// in\n    tag_330:\n        /* \"#utility.yul\":7640:7660   */\n      add\n      swap5\n        /* \"#utility.yul\":7170:7666   */\n      swap4\n      pop\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":7671:8072   */\n    tag_173:\n        /* \"#utility.yul\":7873:7875   */\n      0x20\n        /* \"#utility.yul\":7855:7876   */\n      dup1\n      dup3\n      mstore\n        /* \"#utility.yul\":7912:7914   */\n      0x25\n        /* \"#utility.yul\":7892:7910   */\n      swap1\n      dup3\n      add\n        /* \"#utility.yul\":7885:7915   */\n      mstore\n        /* \"#utility.yul\":7951:7985   */\n      0x4552433732313a207472616e736665722066726f6d20696e636f727265637420\n        /* \"#utility.yul\":7946:7948   */\n      0x40\n        /* \"#utility.yul\":7931:7949   */\n      dup3\n      add\n        /* \"#utility.yul\":7924:7986   */\n      mstore\n      shl(0xd9, 0x37bbb732b9)\n        /* \"#utility.yul\":8017:8019   */\n      0x60\n        /* \"#utility.yul\":8002:8020   */\n      dup3\n      add\n        /* \"#utility.yul\":7995:8030   */\n      mstore\n        /* \"#utility.yul\":8062:8065   */\n      0x80\n        /* \"#utility.yul\":8047:8066   */\n      add\n      swap1\n        /* \"#utility.yul\":7671:8072   */\n      jump\t// out\n        /* \"#utility.yul\":8836:9250   */\n    tag_196:\n        /* \"#utility.yul\":9038:9040   */\n      0x20\n        /* \"#utility.yul\":9020:9041   */\n      dup1\n      dup3\n      mstore\n        /* \"#utility.yul\":9077:9079   */\n      0x32\n        /* \"#utility.yul\":9057:9075   */\n      swap1\n      dup3\n      add\n        /* \"#utility.yul\":9050:9080   */\n      mstore\n        /* \"#utility.yul\":9116:9150   */\n      0x4552433732313a207472616e7366657220746f206e6f6e204552433732315265\n        /* \"#utility.yul\":9111:9113   */\n      0x40\n        /* \"#utility.yul\":9096:9114   */\n      dup3\n      add\n        /* \"#utility.yul\":9089:9151   */\n      mstore\n      shl(0x71, 0x31b2b4bb32b91034b6b83632b6b2b73a32b9)\n        /* \"#utility.yul\":9182:9184   */\n      0x60\n        /* \"#utility.yul\":9167:9185   */\n      dup3\n      add\n        /* \"#utility.yul\":9160:9208   */\n      mstore\n        /* \"#utility.yul\":9240:9243   */\n      0x80\n        /* \"#utility.yul\":9225:9244   */\n      add\n      swap1\n        /* \"#utility.yul\":8836:9250   */\n      jump\t// out\n        /* \"#utility.yul\":9387:9514   */\n    tag_268:\n        /* \"#utility.yul\":9448:9458   */\n      0x4e487b71\n        /* \"#utility.yul\":9443:9446   */\n      0xe0\n        /* \"#utility.yul\":9439:9459   */\n      shl\n        /* \"#utility.yul\":9436:9437   */\n      0x00\n        /* \"#utility.yul\":9429:9460   */\n      mstore\n        /* \"#utility.yul\":9479:9483   */\n      0x11\n        /* \"#utility.yul\":9476:9477   */\n      0x04\n        /* \"#utility.yul\":9469:9484   */\n      mstore\n        /* \"#utility.yul\":9503:9507   */\n      0x24\n        /* \"#utility.yul\":9500:9501   */\n      0x00\n        /* \"#utility.yul\":9493:9508   */\n      revert\n        /* \"#utility.yul\":9519:9647   */\n    tag_217:\n        /* \"#utility.yul\":9586:9595   */\n      dup2\n      dup2\n      sub\n        /* \"#utility.yul\":9607:9618   */\n      dup2\n      dup2\n      gt\n        /* \"#utility.yul\":9604:9641   */\n      iszero\n      tag_78\n      jumpi\n        /* \"#utility.yul\":9621:9639   */\n      tag_78\n      tag_268\n      jump\t// in\n        /* \"#utility.yul\":9652:9777   */\n    tag_220:\n        /* \"#utility.yul\":9717:9726   */\n      dup1\n      dup3\n      add\n        /* \"#utility.yul\":9738:9748   */\n      dup1\n      dup3\n      gt\n        /* \"#utility.yul\":9735:9771   */\n      iszero\n      tag_78\n      jumpi\n        /* \"#utility.yul\":9751:9769   */\n      tag_78\n      tag_268\n      jump\t// in\n        /* \"#utility.yul\":9782:10271   */\n    tag_228:\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"#utility.yul\":10051:10066   */\n      dup6\n      dup2\n      and\n        /* \"#utility.yul\":10033:10067   */\n      dup3\n      mstore\n        /* \"#utility.yul\":10103:10118   */\n      dup5\n      and\n        /* \"#utility.yul\":10098:10100   */\n      0x20\n        /* \"#utility.yul\":10083:10101   */\n      dup3\n      add\n        /* \"#utility.yul\":10076:10119   */\n      mstore\n        /* \"#utility.yul\":10150:10152   */\n      0x40\n        /* \"#utility.yul\":10135:10153   */\n      dup2\n      add\n        /* \"#utility.yul\":10128:10162   */\n      dup4\n      swap1\n      mstore\n        /* \"#utility.yul\":10198:10201   */\n      0x80\n        /* \"#utility.yul\":10193:10195   */\n      0x60\n        /* \"#utility.yul\":10178:10196   */\n      dup3\n      add\n        /* \"#utility.yul\":10171:10202   */\n      dup2\n      swap1\n      mstore\n        /* \"#utility.yul\":9976:9980   */\n      0x00\n      swap1\n        /* \"#utility.yul\":10219:10265   */\n      tag_344\n      swap1\n        /* \"#utility.yul\":10245:10264   */\n      dup4\n      add\n        /* \"#utility.yul\":10237:10243   */\n      dup5\n        /* \"#utility.yul\":10219:10265   */\n      tag_266\n      jump\t// in\n    tag_344:\n        /* \"#utility.yul\":10211:10265   */\n      swap7\n        /* \"#utility.yul\":9782:10271   */\n      swap6\n      pop\n      pop\n      pop\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":10276:10525   */\n    tag_231:\n        /* \"#utility.yul\":10345:10351   */\n      0x00\n        /* \"#utility.yul\":10398:10400   */\n      0x20\n        /* \"#utility.yul\":10386:10395   */\n      dup3\n        /* \"#utility.yul\":10377:10384   */\n      dup5\n        /* \"#utility.yul\":10373:10396   */\n      sub\n        /* \"#utility.yul\":10369:10401   */\n      slt\n        /* \"#utility.yul\":10366:10418   */\n      iszero\n      tag_346\n      jumpi\n        /* \"#utility.yul\":10414:10415   */\n      0x00\n        /* \"#utility.yul\":10411:10412   */\n      dup1\n        /* \"#utility.yul\":10404:10416   */\n      revert\n        /* \"#utility.yul\":10366:10418   */\n    tag_346:\n        /* \"#utility.yul\":10446:10455   */\n      dup2\n        /* \"#utility.yul\":10440:10456   */\n      mload\n        /* \"#utility.yul\":10465:10495   */\n      tag_148\n        /* \"#utility.yul\":10489:10494   */\n      dup2\n        /* \"#utility.yul\":10465:10495   */\n      tag_264\n      jump\t// in\n\n    auxdata: 0xa26469706673582212208668b10ade2ce4e39acc044f7dbefc7edadaae5a1fbb762e25bf9b747808bb8464736f6c63430008150033\n}\n",
						"bytecode": {
							"functionDebugData": {
								"@_62": {
									"entryPoint": null,
									"id": 62,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"abi_decode_string_fromMemory": {
									"entryPoint": 108,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_tuple_t_string_memory_ptrt_string_memory_ptr_fromMemory": {
									"entryPoint": 278,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 2
								},
								"array_dataslot_string_storage": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"clean_up_bytearray_end_slots_string_storage": {
									"entryPoint": 438,
									"id": null,
									"parameterSlots": 3,
									"returnSlots": 0
								},
								"copy_byte_array_to_storage_from_t_string_memory_ptr_to_t_string_storage": {
									"entryPoint": 520,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"extract_byte_array_length": {
									"entryPoint": 380,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"extract_used_part_and_set_length_of_short_byte_array": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"panic_error_0x41": {
									"entryPoint": 88,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								}
							},
							"generatedSources": [
								{
									"ast": {
										"nativeSrc": "0:4144:12",
										"nodeType": "YulBlock",
										"src": "0:4144:12",
										"statements": [
											{
												"nativeSrc": "6:3:12",
												"nodeType": "YulBlock",
												"src": "6:3:12",
												"statements": []
											},
											{
												"body": {
													"nativeSrc": "46:95:12",
													"nodeType": "YulBlock",
													"src": "46:95:12",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "63:1:12",
																		"nodeType": "YulLiteral",
																		"src": "63:1:12",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"arguments": [
																			{
																				"kind": "number",
																				"nativeSrc": "70:3:12",
																				"nodeType": "YulLiteral",
																				"src": "70:3:12",
																				"type": "",
																				"value": "224"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "75:10:12",
																				"nodeType": "YulLiteral",
																				"src": "75:10:12",
																				"type": "",
																				"value": "0x4e487b71"
																			}
																		],
																		"functionName": {
																			"name": "shl",
																			"nativeSrc": "66:3:12",
																			"nodeType": "YulIdentifier",
																			"src": "66:3:12"
																		},
																		"nativeSrc": "66:20:12",
																		"nodeType": "YulFunctionCall",
																		"src": "66:20:12"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "56:6:12",
																	"nodeType": "YulIdentifier",
																	"src": "56:6:12"
																},
																"nativeSrc": "56:31:12",
																"nodeType": "YulFunctionCall",
																"src": "56:31:12"
															},
															"nativeSrc": "56:31:12",
															"nodeType": "YulExpressionStatement",
															"src": "56:31:12"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "103:1:12",
																		"nodeType": "YulLiteral",
																		"src": "103:1:12",
																		"type": "",
																		"value": "4"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "106:4:12",
																		"nodeType": "YulLiteral",
																		"src": "106:4:12",
																		"type": "",
																		"value": "0x41"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "96:6:12",
																	"nodeType": "YulIdentifier",
																	"src": "96:6:12"
																},
																"nativeSrc": "96:15:12",
																"nodeType": "YulFunctionCall",
																"src": "96:15:12"
															},
															"nativeSrc": "96:15:12",
															"nodeType": "YulExpressionStatement",
															"src": "96:15:12"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "127:1:12",
																		"nodeType": "YulLiteral",
																		"src": "127:1:12",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "130:4:12",
																		"nodeType": "YulLiteral",
																		"src": "130:4:12",
																		"type": "",
																		"value": "0x24"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nativeSrc": "120:6:12",
																	"nodeType": "YulIdentifier",
																	"src": "120:6:12"
																},
																"nativeSrc": "120:15:12",
																"nodeType": "YulFunctionCall",
																"src": "120:15:12"
															},
															"nativeSrc": "120:15:12",
															"nodeType": "YulExpressionStatement",
															"src": "120:15:12"
														}
													]
												},
												"name": "panic_error_0x41",
												"nativeSrc": "14:127:12",
												"nodeType": "YulFunctionDefinition",
												"src": "14:127:12"
											},
											{
												"body": {
													"nativeSrc": "210:776:12",
													"nodeType": "YulBlock",
													"src": "210:776:12",
													"statements": [
														{
															"body": {
																"nativeSrc": "259:16:12",
																"nodeType": "YulBlock",
																"src": "259:16:12",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nativeSrc": "268:1:12",
																					"nodeType": "YulLiteral",
																					"src": "268:1:12",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "271:1:12",
																					"nodeType": "YulLiteral",
																					"src": "271:1:12",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nativeSrc": "261:6:12",
																				"nodeType": "YulIdentifier",
																				"src": "261:6:12"
																			},
																			"nativeSrc": "261:12:12",
																			"nodeType": "YulFunctionCall",
																			"src": "261:12:12"
																		},
																		"nativeSrc": "261:12:12",
																		"nodeType": "YulExpressionStatement",
																		"src": "261:12:12"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "offset",
																						"nativeSrc": "238:6:12",
																						"nodeType": "YulIdentifier",
																						"src": "238:6:12"
																					},
																					{
																						"kind": "number",
																						"nativeSrc": "246:4:12",
																						"nodeType": "YulLiteral",
																						"src": "246:4:12",
																						"type": "",
																						"value": "0x1f"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "234:3:12",
																					"nodeType": "YulIdentifier",
																					"src": "234:3:12"
																				},
																				"nativeSrc": "234:17:12",
																				"nodeType": "YulFunctionCall",
																				"src": "234:17:12"
																			},
																			{
																				"name": "end",
																				"nativeSrc": "253:3:12",
																				"nodeType": "YulIdentifier",
																				"src": "253:3:12"
																			}
																		],
																		"functionName": {
																			"name": "slt",
																			"nativeSrc": "230:3:12",
																			"nodeType": "YulIdentifier",
																			"src": "230:3:12"
																		},
																		"nativeSrc": "230:27:12",
																		"nodeType": "YulFunctionCall",
																		"src": "230:27:12"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nativeSrc": "223:6:12",
																	"nodeType": "YulIdentifier",
																	"src": "223:6:12"
																},
																"nativeSrc": "223:35:12",
																"nodeType": "YulFunctionCall",
																"src": "223:35:12"
															},
															"nativeSrc": "220:55:12",
															"nodeType": "YulIf",
															"src": "220:55:12"
														},
														{
															"nativeSrc": "284:23:12",
															"nodeType": "YulVariableDeclaration",
															"src": "284:23:12",
															"value": {
																"arguments": [
																	{
																		"name": "offset",
																		"nativeSrc": "300:6:12",
																		"nodeType": "YulIdentifier",
																		"src": "300:6:12"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nativeSrc": "294:5:12",
																	"nodeType": "YulIdentifier",
																	"src": "294:5:12"
																},
																"nativeSrc": "294:13:12",
																"nodeType": "YulFunctionCall",
																"src": "294:13:12"
															},
															"variables": [
																{
																	"name": "_1",
																	"nativeSrc": "288:2:12",
																	"nodeType": "YulTypedName",
																	"src": "288:2:12",
																	"type": ""
																}
															]
														},
														{
															"nativeSrc": "316:28:12",
															"nodeType": "YulVariableDeclaration",
															"src": "316:28:12",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"kind": "number",
																				"nativeSrc": "334:2:12",
																				"nodeType": "YulLiteral",
																				"src": "334:2:12",
																				"type": "",
																				"value": "64"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "338:1:12",
																				"nodeType": "YulLiteral",
																				"src": "338:1:12",
																				"type": "",
																				"value": "1"
																			}
																		],
																		"functionName": {
																			"name": "shl",
																			"nativeSrc": "330:3:12",
																			"nodeType": "YulIdentifier",
																			"src": "330:3:12"
																		},
																		"nativeSrc": "330:10:12",
																		"nodeType": "YulFunctionCall",
																		"src": "330:10:12"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "342:1:12",
																		"nodeType": "YulLiteral",
																		"src": "342:1:12",
																		"type": "",
																		"value": "1"
																	}
																],
																"functionName": {
																	"name": "sub",
																	"nativeSrc": "326:3:12",
																	"nodeType": "YulIdentifier",
																	"src": "326:3:12"
																},
																"nativeSrc": "326:18:12",
																"nodeType": "YulFunctionCall",
																"src": "326:18:12"
															},
															"variables": [
																{
																	"name": "_2",
																	"nativeSrc": "320:2:12",
																	"nodeType": "YulTypedName",
																	"src": "320:2:12",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nativeSrc": "367:22:12",
																"nodeType": "YulBlock",
																"src": "367:22:12",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "panic_error_0x41",
																				"nativeSrc": "369:16:12",
																				"nodeType": "YulIdentifier",
																				"src": "369:16:12"
																			},
																			"nativeSrc": "369:18:12",
																			"nodeType": "YulFunctionCall",
																			"src": "369:18:12"
																		},
																		"nativeSrc": "369:18:12",
																		"nodeType": "YulExpressionStatement",
																		"src": "369:18:12"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "_1",
																		"nativeSrc": "359:2:12",
																		"nodeType": "YulIdentifier",
																		"src": "359:2:12"
																	},
																	{
																		"name": "_2",
																		"nativeSrc": "363:2:12",
																		"nodeType": "YulIdentifier",
																		"src": "363:2:12"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nativeSrc": "356:2:12",
																	"nodeType": "YulIdentifier",
																	"src": "356:2:12"
																},
																"nativeSrc": "356:10:12",
																"nodeType": "YulFunctionCall",
																"src": "356:10:12"
															},
															"nativeSrc": "353:36:12",
															"nodeType": "YulIf",
															"src": "353:36:12"
														},
														{
															"nativeSrc": "398:17:12",
															"nodeType": "YulVariableDeclaration",
															"src": "398:17:12",
															"value": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "412:2:12",
																		"nodeType": "YulLiteral",
																		"src": "412:2:12",
																		"type": "",
																		"value": "31"
																	}
																],
																"functionName": {
																	"name": "not",
																	"nativeSrc": "408:3:12",
																	"nodeType": "YulIdentifier",
																	"src": "408:3:12"
																},
																"nativeSrc": "408:7:12",
																"nodeType": "YulFunctionCall",
																"src": "408:7:12"
															},
															"variables": [
																{
																	"name": "_3",
																	"nativeSrc": "402:2:12",
																	"nodeType": "YulTypedName",
																	"src": "402:2:12",
																	"type": ""
																}
															]
														},
														{
															"nativeSrc": "424:23:12",
															"nodeType": "YulVariableDeclaration",
															"src": "424:23:12",
															"value": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "444:2:12",
																		"nodeType": "YulLiteral",
																		"src": "444:2:12",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nativeSrc": "438:5:12",
																	"nodeType": "YulIdentifier",
																	"src": "438:5:12"
																},
																"nativeSrc": "438:9:12",
																"nodeType": "YulFunctionCall",
																"src": "438:9:12"
															},
															"variables": [
																{
																	"name": "memPtr",
																	"nativeSrc": "428:6:12",
																	"nodeType": "YulTypedName",
																	"src": "428:6:12",
																	"type": ""
																}
															]
														},
														{
															"nativeSrc": "456:71:12",
															"nodeType": "YulVariableDeclaration",
															"src": "456:71:12",
															"value": {
																"arguments": [
																	{
																		"name": "memPtr",
																		"nativeSrc": "478:6:12",
																		"nodeType": "YulIdentifier",
																		"src": "478:6:12"
																	},
																	{
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"arguments": [
																							{
																								"arguments": [
																									{
																										"name": "_1",
																										"nativeSrc": "502:2:12",
																										"nodeType": "YulIdentifier",
																										"src": "502:2:12"
																									},
																									{
																										"kind": "number",
																										"nativeSrc": "506:4:12",
																										"nodeType": "YulLiteral",
																										"src": "506:4:12",
																										"type": "",
																										"value": "0x1f"
																									}
																								],
																								"functionName": {
																									"name": "add",
																									"nativeSrc": "498:3:12",
																									"nodeType": "YulIdentifier",
																									"src": "498:3:12"
																								},
																								"nativeSrc": "498:13:12",
																								"nodeType": "YulFunctionCall",
																								"src": "498:13:12"
																							},
																							{
																								"name": "_3",
																								"nativeSrc": "513:2:12",
																								"nodeType": "YulIdentifier",
																								"src": "513:2:12"
																							}
																						],
																						"functionName": {
																							"name": "and",
																							"nativeSrc": "494:3:12",
																							"nodeType": "YulIdentifier",
																							"src": "494:3:12"
																						},
																						"nativeSrc": "494:22:12",
																						"nodeType": "YulFunctionCall",
																						"src": "494:22:12"
																					},
																					{
																						"kind": "number",
																						"nativeSrc": "518:2:12",
																						"nodeType": "YulLiteral",
																						"src": "518:2:12",
																						"type": "",
																						"value": "63"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "490:3:12",
																					"nodeType": "YulIdentifier",
																					"src": "490:3:12"
																				},
																				"nativeSrc": "490:31:12",
																				"nodeType": "YulFunctionCall",
																				"src": "490:31:12"
																			},
																			{
																				"name": "_3",
																				"nativeSrc": "523:2:12",
																				"nodeType": "YulIdentifier",
																				"src": "523:2:12"
																			}
																		],
																		"functionName": {
																			"name": "and",
																			"nativeSrc": "486:3:12",
																			"nodeType": "YulIdentifier",
																			"src": "486:3:12"
																		},
																		"nativeSrc": "486:40:12",
																		"nodeType": "YulFunctionCall",
																		"src": "486:40:12"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "474:3:12",
																	"nodeType": "YulIdentifier",
																	"src": "474:3:12"
																},
																"nativeSrc": "474:53:12",
																"nodeType": "YulFunctionCall",
																"src": "474:53:12"
															},
															"variables": [
																{
																	"name": "newFreePtr",
																	"nativeSrc": "460:10:12",
																	"nodeType": "YulTypedName",
																	"src": "460:10:12",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nativeSrc": "586:22:12",
																"nodeType": "YulBlock",
																"src": "586:22:12",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "panic_error_0x41",
																				"nativeSrc": "588:16:12",
																				"nodeType": "YulIdentifier",
																				"src": "588:16:12"
																			},
																			"nativeSrc": "588:18:12",
																			"nodeType": "YulFunctionCall",
																			"src": "588:18:12"
																		},
																		"nativeSrc": "588:18:12",
																		"nodeType": "YulExpressionStatement",
																		"src": "588:18:12"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "newFreePtr",
																				"nativeSrc": "545:10:12",
																				"nodeType": "YulIdentifier",
																				"src": "545:10:12"
																			},
																			{
																				"name": "_2",
																				"nativeSrc": "557:2:12",
																				"nodeType": "YulIdentifier",
																				"src": "557:2:12"
																			}
																		],
																		"functionName": {
																			"name": "gt",
																			"nativeSrc": "542:2:12",
																			"nodeType": "YulIdentifier",
																			"src": "542:2:12"
																		},
																		"nativeSrc": "542:18:12",
																		"nodeType": "YulFunctionCall",
																		"src": "542:18:12"
																	},
																	{
																		"arguments": [
																			{
																				"name": "newFreePtr",
																				"nativeSrc": "565:10:12",
																				"nodeType": "YulIdentifier",
																				"src": "565:10:12"
																			},
																			{
																				"name": "memPtr",
																				"nativeSrc": "577:6:12",
																				"nodeType": "YulIdentifier",
																				"src": "577:6:12"
																			}
																		],
																		"functionName": {
																			"name": "lt",
																			"nativeSrc": "562:2:12",
																			"nodeType": "YulIdentifier",
																			"src": "562:2:12"
																		},
																		"nativeSrc": "562:22:12",
																		"nodeType": "YulFunctionCall",
																		"src": "562:22:12"
																	}
																],
																"functionName": {
																	"name": "or",
																	"nativeSrc": "539:2:12",
																	"nodeType": "YulIdentifier",
																	"src": "539:2:12"
																},
																"nativeSrc": "539:46:12",
																"nodeType": "YulFunctionCall",
																"src": "539:46:12"
															},
															"nativeSrc": "536:72:12",
															"nodeType": "YulIf",
															"src": "536:72:12"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "624:2:12",
																		"nodeType": "YulLiteral",
																		"src": "624:2:12",
																		"type": "",
																		"value": "64"
																	},
																	{
																		"name": "newFreePtr",
																		"nativeSrc": "628:10:12",
																		"nodeType": "YulIdentifier",
																		"src": "628:10:12"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "617:6:12",
																	"nodeType": "YulIdentifier",
																	"src": "617:6:12"
																},
																"nativeSrc": "617:22:12",
																"nodeType": "YulFunctionCall",
																"src": "617:22:12"
															},
															"nativeSrc": "617:22:12",
															"nodeType": "YulExpressionStatement",
															"src": "617:22:12"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "memPtr",
																		"nativeSrc": "655:6:12",
																		"nodeType": "YulIdentifier",
																		"src": "655:6:12"
																	},
																	{
																		"name": "_1",
																		"nativeSrc": "663:2:12",
																		"nodeType": "YulIdentifier",
																		"src": "663:2:12"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "648:6:12",
																	"nodeType": "YulIdentifier",
																	"src": "648:6:12"
																},
																"nativeSrc": "648:18:12",
																"nodeType": "YulFunctionCall",
																"src": "648:18:12"
															},
															"nativeSrc": "648:18:12",
															"nodeType": "YulExpressionStatement",
															"src": "648:18:12"
														},
														{
															"nativeSrc": "675:14:12",
															"nodeType": "YulVariableDeclaration",
															"src": "675:14:12",
															"value": {
																"kind": "number",
																"nativeSrc": "685:4:12",
																"nodeType": "YulLiteral",
																"src": "685:4:12",
																"type": "",
																"value": "0x20"
															},
															"variables": [
																{
																	"name": "_4",
																	"nativeSrc": "679:2:12",
																	"nodeType": "YulTypedName",
																	"src": "679:2:12",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nativeSrc": "735:16:12",
																"nodeType": "YulBlock",
																"src": "735:16:12",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nativeSrc": "744:1:12",
																					"nodeType": "YulLiteral",
																					"src": "744:1:12",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "747:1:12",
																					"nodeType": "YulLiteral",
																					"src": "747:1:12",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nativeSrc": "737:6:12",
																				"nodeType": "YulIdentifier",
																				"src": "737:6:12"
																			},
																			"nativeSrc": "737:12:12",
																			"nodeType": "YulFunctionCall",
																			"src": "737:12:12"
																		},
																		"nativeSrc": "737:12:12",
																		"nodeType": "YulExpressionStatement",
																		"src": "737:12:12"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "offset",
																						"nativeSrc": "712:6:12",
																						"nodeType": "YulIdentifier",
																						"src": "712:6:12"
																					},
																					{
																						"name": "_1",
																						"nativeSrc": "720:2:12",
																						"nodeType": "YulIdentifier",
																						"src": "720:2:12"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "708:3:12",
																					"nodeType": "YulIdentifier",
																					"src": "708:3:12"
																				},
																				"nativeSrc": "708:15:12",
																				"nodeType": "YulFunctionCall",
																				"src": "708:15:12"
																			},
																			{
																				"name": "_4",
																				"nativeSrc": "725:2:12",
																				"nodeType": "YulIdentifier",
																				"src": "725:2:12"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "704:3:12",
																			"nodeType": "YulIdentifier",
																			"src": "704:3:12"
																		},
																		"nativeSrc": "704:24:12",
																		"nodeType": "YulFunctionCall",
																		"src": "704:24:12"
																	},
																	{
																		"name": "end",
																		"nativeSrc": "730:3:12",
																		"nodeType": "YulIdentifier",
																		"src": "730:3:12"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nativeSrc": "701:2:12",
																	"nodeType": "YulIdentifier",
																	"src": "701:2:12"
																},
																"nativeSrc": "701:33:12",
																"nodeType": "YulFunctionCall",
																"src": "701:33:12"
															},
															"nativeSrc": "698:53:12",
															"nodeType": "YulIf",
															"src": "698:53:12"
														},
														{
															"nativeSrc": "760:10:12",
															"nodeType": "YulVariableDeclaration",
															"src": "760:10:12",
															"value": {
																"kind": "number",
																"nativeSrc": "769:1:12",
																"nodeType": "YulLiteral",
																"src": "769:1:12",
																"type": "",
																"value": "0"
															},
															"variables": [
																{
																	"name": "i",
																	"nativeSrc": "764:1:12",
																	"nodeType": "YulTypedName",
																	"src": "764:1:12",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nativeSrc": "825:87:12",
																"nodeType": "YulBlock",
																"src": "825:87:12",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"arguments": [
																						{
																							"arguments": [
																								{
																									"name": "memPtr",
																									"nativeSrc": "854:6:12",
																									"nodeType": "YulIdentifier",
																									"src": "854:6:12"
																								},
																								{
																									"name": "i",
																									"nativeSrc": "862:1:12",
																									"nodeType": "YulIdentifier",
																									"src": "862:1:12"
																								}
																							],
																							"functionName": {
																								"name": "add",
																								"nativeSrc": "850:3:12",
																								"nodeType": "YulIdentifier",
																								"src": "850:3:12"
																							},
																							"nativeSrc": "850:14:12",
																							"nodeType": "YulFunctionCall",
																							"src": "850:14:12"
																						},
																						{
																							"name": "_4",
																							"nativeSrc": "866:2:12",
																							"nodeType": "YulIdentifier",
																							"src": "866:2:12"
																						}
																					],
																					"functionName": {
																						"name": "add",
																						"nativeSrc": "846:3:12",
																						"nodeType": "YulIdentifier",
																						"src": "846:3:12"
																					},
																					"nativeSrc": "846:23:12",
																					"nodeType": "YulFunctionCall",
																					"src": "846:23:12"
																				},
																				{
																					"arguments": [
																						{
																							"arguments": [
																								{
																									"arguments": [
																										{
																											"name": "offset",
																											"nativeSrc": "885:6:12",
																											"nodeType": "YulIdentifier",
																											"src": "885:6:12"
																										},
																										{
																											"name": "i",
																											"nativeSrc": "893:1:12",
																											"nodeType": "YulIdentifier",
																											"src": "893:1:12"
																										}
																									],
																									"functionName": {
																										"name": "add",
																										"nativeSrc": "881:3:12",
																										"nodeType": "YulIdentifier",
																										"src": "881:3:12"
																									},
																									"nativeSrc": "881:14:12",
																									"nodeType": "YulFunctionCall",
																									"src": "881:14:12"
																								},
																								{
																									"name": "_4",
																									"nativeSrc": "897:2:12",
																									"nodeType": "YulIdentifier",
																									"src": "897:2:12"
																								}
																							],
																							"functionName": {
																								"name": "add",
																								"nativeSrc": "877:3:12",
																								"nodeType": "YulIdentifier",
																								"src": "877:3:12"
																							},
																							"nativeSrc": "877:23:12",
																							"nodeType": "YulFunctionCall",
																							"src": "877:23:12"
																						}
																					],
																					"functionName": {
																						"name": "mload",
																						"nativeSrc": "871:5:12",
																						"nodeType": "YulIdentifier",
																						"src": "871:5:12"
																					},
																					"nativeSrc": "871:30:12",
																					"nodeType": "YulFunctionCall",
																					"src": "871:30:12"
																				}
																			],
																			"functionName": {
																				"name": "mstore",
																				"nativeSrc": "839:6:12",
																				"nodeType": "YulIdentifier",
																				"src": "839:6:12"
																			},
																			"nativeSrc": "839:63:12",
																			"nodeType": "YulFunctionCall",
																			"src": "839:63:12"
																		},
																		"nativeSrc": "839:63:12",
																		"nodeType": "YulExpressionStatement",
																		"src": "839:63:12"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "i",
																		"nativeSrc": "790:1:12",
																		"nodeType": "YulIdentifier",
																		"src": "790:1:12"
																	},
																	{
																		"name": "_1",
																		"nativeSrc": "793:2:12",
																		"nodeType": "YulIdentifier",
																		"src": "793:2:12"
																	}
																],
																"functionName": {
																	"name": "lt",
																	"nativeSrc": "787:2:12",
																	"nodeType": "YulIdentifier",
																	"src": "787:2:12"
																},
																"nativeSrc": "787:9:12",
																"nodeType": "YulFunctionCall",
																"src": "787:9:12"
															},
															"nativeSrc": "779:133:12",
															"nodeType": "YulForLoop",
															"post": {
																"nativeSrc": "797:19:12",
																"nodeType": "YulBlock",
																"src": "797:19:12",
																"statements": [
																	{
																		"nativeSrc": "799:15:12",
																		"nodeType": "YulAssignment",
																		"src": "799:15:12",
																		"value": {
																			"arguments": [
																				{
																					"name": "i",
																					"nativeSrc": "808:1:12",
																					"nodeType": "YulIdentifier",
																					"src": "808:1:12"
																				},
																				{
																					"name": "_4",
																					"nativeSrc": "811:2:12",
																					"nodeType": "YulIdentifier",
																					"src": "811:2:12"
																				}
																			],
																			"functionName": {
																				"name": "add",
																				"nativeSrc": "804:3:12",
																				"nodeType": "YulIdentifier",
																				"src": "804:3:12"
																			},
																			"nativeSrc": "804:10:12",
																			"nodeType": "YulFunctionCall",
																			"src": "804:10:12"
																		},
																		"variableNames": [
																			{
																				"name": "i",
																				"nativeSrc": "799:1:12",
																				"nodeType": "YulIdentifier",
																				"src": "799:1:12"
																			}
																		]
																	}
																]
															},
															"pre": {
																"nativeSrc": "783:3:12",
																"nodeType": "YulBlock",
																"src": "783:3:12",
																"statements": []
															},
															"src": "779:133:12"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "memPtr",
																						"nativeSrc": "936:6:12",
																						"nodeType": "YulIdentifier",
																						"src": "936:6:12"
																					},
																					{
																						"name": "_1",
																						"nativeSrc": "944:2:12",
																						"nodeType": "YulIdentifier",
																						"src": "944:2:12"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "932:3:12",
																					"nodeType": "YulIdentifier",
																					"src": "932:3:12"
																				},
																				"nativeSrc": "932:15:12",
																				"nodeType": "YulFunctionCall",
																				"src": "932:15:12"
																			},
																			{
																				"name": "_4",
																				"nativeSrc": "949:2:12",
																				"nodeType": "YulIdentifier",
																				"src": "949:2:12"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "928:3:12",
																			"nodeType": "YulIdentifier",
																			"src": "928:3:12"
																		},
																		"nativeSrc": "928:24:12",
																		"nodeType": "YulFunctionCall",
																		"src": "928:24:12"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "954:1:12",
																		"nodeType": "YulLiteral",
																		"src": "954:1:12",
																		"type": "",
																		"value": "0"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "921:6:12",
																	"nodeType": "YulIdentifier",
																	"src": "921:6:12"
																},
																"nativeSrc": "921:35:12",
																"nodeType": "YulFunctionCall",
																"src": "921:35:12"
															},
															"nativeSrc": "921:35:12",
															"nodeType": "YulExpressionStatement",
															"src": "921:35:12"
														},
														{
															"nativeSrc": "965:15:12",
															"nodeType": "YulAssignment",
															"src": "965:15:12",
															"value": {
																"name": "memPtr",
																"nativeSrc": "974:6:12",
																"nodeType": "YulIdentifier",
																"src": "974:6:12"
															},
															"variableNames": [
																{
																	"name": "array",
																	"nativeSrc": "965:5:12",
																	"nodeType": "YulIdentifier",
																	"src": "965:5:12"
																}
															]
														}
													]
												},
												"name": "abi_decode_string_fromMemory",
												"nativeSrc": "146:840:12",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "offset",
														"nativeSrc": "184:6:12",
														"nodeType": "YulTypedName",
														"src": "184:6:12",
														"type": ""
													},
													{
														"name": "end",
														"nativeSrc": "192:3:12",
														"nodeType": "YulTypedName",
														"src": "192:3:12",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "array",
														"nativeSrc": "200:5:12",
														"nodeType": "YulTypedName",
														"src": "200:5:12",
														"type": ""
													}
												],
												"src": "146:840:12"
											},
											{
												"body": {
													"nativeSrc": "1109:444:12",
													"nodeType": "YulBlock",
													"src": "1109:444:12",
													"statements": [
														{
															"body": {
																"nativeSrc": "1155:16:12",
																"nodeType": "YulBlock",
																"src": "1155:16:12",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nativeSrc": "1164:1:12",
																					"nodeType": "YulLiteral",
																					"src": "1164:1:12",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "1167:1:12",
																					"nodeType": "YulLiteral",
																					"src": "1167:1:12",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nativeSrc": "1157:6:12",
																				"nodeType": "YulIdentifier",
																				"src": "1157:6:12"
																			},
																			"nativeSrc": "1157:12:12",
																			"nodeType": "YulFunctionCall",
																			"src": "1157:12:12"
																		},
																		"nativeSrc": "1157:12:12",
																		"nodeType": "YulExpressionStatement",
																		"src": "1157:12:12"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nativeSrc": "1130:7:12",
																				"nodeType": "YulIdentifier",
																				"src": "1130:7:12"
																			},
																			{
																				"name": "headStart",
																				"nativeSrc": "1139:9:12",
																				"nodeType": "YulIdentifier",
																				"src": "1139:9:12"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "1126:3:12",
																			"nodeType": "YulIdentifier",
																			"src": "1126:3:12"
																		},
																		"nativeSrc": "1126:23:12",
																		"nodeType": "YulFunctionCall",
																		"src": "1126:23:12"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "1151:2:12",
																		"nodeType": "YulLiteral",
																		"src": "1151:2:12",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nativeSrc": "1122:3:12",
																	"nodeType": "YulIdentifier",
																	"src": "1122:3:12"
																},
																"nativeSrc": "1122:32:12",
																"nodeType": "YulFunctionCall",
																"src": "1122:32:12"
															},
															"nativeSrc": "1119:52:12",
															"nodeType": "YulIf",
															"src": "1119:52:12"
														},
														{
															"nativeSrc": "1180:30:12",
															"nodeType": "YulVariableDeclaration",
															"src": "1180:30:12",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "1200:9:12",
																		"nodeType": "YulIdentifier",
																		"src": "1200:9:12"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nativeSrc": "1194:5:12",
																	"nodeType": "YulIdentifier",
																	"src": "1194:5:12"
																},
																"nativeSrc": "1194:16:12",
																"nodeType": "YulFunctionCall",
																"src": "1194:16:12"
															},
															"variables": [
																{
																	"name": "offset",
																	"nativeSrc": "1184:6:12",
																	"nodeType": "YulTypedName",
																	"src": "1184:6:12",
																	"type": ""
																}
															]
														},
														{
															"nativeSrc": "1219:28:12",
															"nodeType": "YulVariableDeclaration",
															"src": "1219:28:12",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"kind": "number",
																				"nativeSrc": "1237:2:12",
																				"nodeType": "YulLiteral",
																				"src": "1237:2:12",
																				"type": "",
																				"value": "64"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "1241:1:12",
																				"nodeType": "YulLiteral",
																				"src": "1241:1:12",
																				"type": "",
																				"value": "1"
																			}
																		],
																		"functionName": {
																			"name": "shl",
																			"nativeSrc": "1233:3:12",
																			"nodeType": "YulIdentifier",
																			"src": "1233:3:12"
																		},
																		"nativeSrc": "1233:10:12",
																		"nodeType": "YulFunctionCall",
																		"src": "1233:10:12"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "1245:1:12",
																		"nodeType": "YulLiteral",
																		"src": "1245:1:12",
																		"type": "",
																		"value": "1"
																	}
																],
																"functionName": {
																	"name": "sub",
																	"nativeSrc": "1229:3:12",
																	"nodeType": "YulIdentifier",
																	"src": "1229:3:12"
																},
																"nativeSrc": "1229:18:12",
																"nodeType": "YulFunctionCall",
																"src": "1229:18:12"
															},
															"variables": [
																{
																	"name": "_1",
																	"nativeSrc": "1223:2:12",
																	"nodeType": "YulTypedName",
																	"src": "1223:2:12",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nativeSrc": "1274:16:12",
																"nodeType": "YulBlock",
																"src": "1274:16:12",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nativeSrc": "1283:1:12",
																					"nodeType": "YulLiteral",
																					"src": "1283:1:12",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "1286:1:12",
																					"nodeType": "YulLiteral",
																					"src": "1286:1:12",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nativeSrc": "1276:6:12",
																				"nodeType": "YulIdentifier",
																				"src": "1276:6:12"
																			},
																			"nativeSrc": "1276:12:12",
																			"nodeType": "YulFunctionCall",
																			"src": "1276:12:12"
																		},
																		"nativeSrc": "1276:12:12",
																		"nodeType": "YulExpressionStatement",
																		"src": "1276:12:12"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "offset",
																		"nativeSrc": "1262:6:12",
																		"nodeType": "YulIdentifier",
																		"src": "1262:6:12"
																	},
																	{
																		"name": "_1",
																		"nativeSrc": "1270:2:12",
																		"nodeType": "YulIdentifier",
																		"src": "1270:2:12"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nativeSrc": "1259:2:12",
																	"nodeType": "YulIdentifier",
																	"src": "1259:2:12"
																},
																"nativeSrc": "1259:14:12",
																"nodeType": "YulFunctionCall",
																"src": "1259:14:12"
															},
															"nativeSrc": "1256:34:12",
															"nodeType": "YulIf",
															"src": "1256:34:12"
														},
														{
															"nativeSrc": "1299:71:12",
															"nodeType": "YulAssignment",
															"src": "1299:71:12",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "1342:9:12",
																				"nodeType": "YulIdentifier",
																				"src": "1342:9:12"
																			},
																			{
																				"name": "offset",
																				"nativeSrc": "1353:6:12",
																				"nodeType": "YulIdentifier",
																				"src": "1353:6:12"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "1338:3:12",
																			"nodeType": "YulIdentifier",
																			"src": "1338:3:12"
																		},
																		"nativeSrc": "1338:22:12",
																		"nodeType": "YulFunctionCall",
																		"src": "1338:22:12"
																	},
																	{
																		"name": "dataEnd",
																		"nativeSrc": "1362:7:12",
																		"nodeType": "YulIdentifier",
																		"src": "1362:7:12"
																	}
																],
																"functionName": {
																	"name": "abi_decode_string_fromMemory",
																	"nativeSrc": "1309:28:12",
																	"nodeType": "YulIdentifier",
																	"src": "1309:28:12"
																},
																"nativeSrc": "1309:61:12",
																"nodeType": "YulFunctionCall",
																"src": "1309:61:12"
															},
															"variableNames": [
																{
																	"name": "value0",
																	"nativeSrc": "1299:6:12",
																	"nodeType": "YulIdentifier",
																	"src": "1299:6:12"
																}
															]
														},
														{
															"nativeSrc": "1379:41:12",
															"nodeType": "YulVariableDeclaration",
															"src": "1379:41:12",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "1405:9:12",
																				"nodeType": "YulIdentifier",
																				"src": "1405:9:12"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "1416:2:12",
																				"nodeType": "YulLiteral",
																				"src": "1416:2:12",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "1401:3:12",
																			"nodeType": "YulIdentifier",
																			"src": "1401:3:12"
																		},
																		"nativeSrc": "1401:18:12",
																		"nodeType": "YulFunctionCall",
																		"src": "1401:18:12"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nativeSrc": "1395:5:12",
																	"nodeType": "YulIdentifier",
																	"src": "1395:5:12"
																},
																"nativeSrc": "1395:25:12",
																"nodeType": "YulFunctionCall",
																"src": "1395:25:12"
															},
															"variables": [
																{
																	"name": "offset_1",
																	"nativeSrc": "1383:8:12",
																	"nodeType": "YulTypedName",
																	"src": "1383:8:12",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nativeSrc": "1449:16:12",
																"nodeType": "YulBlock",
																"src": "1449:16:12",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nativeSrc": "1458:1:12",
																					"nodeType": "YulLiteral",
																					"src": "1458:1:12",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "1461:1:12",
																					"nodeType": "YulLiteral",
																					"src": "1461:1:12",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nativeSrc": "1451:6:12",
																				"nodeType": "YulIdentifier",
																				"src": "1451:6:12"
																			},
																			"nativeSrc": "1451:12:12",
																			"nodeType": "YulFunctionCall",
																			"src": "1451:12:12"
																		},
																		"nativeSrc": "1451:12:12",
																		"nodeType": "YulExpressionStatement",
																		"src": "1451:12:12"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "offset_1",
																		"nativeSrc": "1435:8:12",
																		"nodeType": "YulIdentifier",
																		"src": "1435:8:12"
																	},
																	{
																		"name": "_1",
																		"nativeSrc": "1445:2:12",
																		"nodeType": "YulIdentifier",
																		"src": "1445:2:12"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nativeSrc": "1432:2:12",
																	"nodeType": "YulIdentifier",
																	"src": "1432:2:12"
																},
																"nativeSrc": "1432:16:12",
																"nodeType": "YulFunctionCall",
																"src": "1432:16:12"
															},
															"nativeSrc": "1429:36:12",
															"nodeType": "YulIf",
															"src": "1429:36:12"
														},
														{
															"nativeSrc": "1474:73:12",
															"nodeType": "YulAssignment",
															"src": "1474:73:12",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "1517:9:12",
																				"nodeType": "YulIdentifier",
																				"src": "1517:9:12"
																			},
																			{
																				"name": "offset_1",
																				"nativeSrc": "1528:8:12",
																				"nodeType": "YulIdentifier",
																				"src": "1528:8:12"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "1513:3:12",
																			"nodeType": "YulIdentifier",
																			"src": "1513:3:12"
																		},
																		"nativeSrc": "1513:24:12",
																		"nodeType": "YulFunctionCall",
																		"src": "1513:24:12"
																	},
																	{
																		"name": "dataEnd",
																		"nativeSrc": "1539:7:12",
																		"nodeType": "YulIdentifier",
																		"src": "1539:7:12"
																	}
																],
																"functionName": {
																	"name": "abi_decode_string_fromMemory",
																	"nativeSrc": "1484:28:12",
																	"nodeType": "YulIdentifier",
																	"src": "1484:28:12"
																},
																"nativeSrc": "1484:63:12",
																"nodeType": "YulFunctionCall",
																"src": "1484:63:12"
															},
															"variableNames": [
																{
																	"name": "value1",
																	"nativeSrc": "1474:6:12",
																	"nodeType": "YulIdentifier",
																	"src": "1474:6:12"
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_string_memory_ptrt_string_memory_ptr_fromMemory",
												"nativeSrc": "991:562:12",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "1067:9:12",
														"nodeType": "YulTypedName",
														"src": "1067:9:12",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nativeSrc": "1078:7:12",
														"nodeType": "YulTypedName",
														"src": "1078:7:12",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nativeSrc": "1090:6:12",
														"nodeType": "YulTypedName",
														"src": "1090:6:12",
														"type": ""
													},
													{
														"name": "value1",
														"nativeSrc": "1098:6:12",
														"nodeType": "YulTypedName",
														"src": "1098:6:12",
														"type": ""
													}
												],
												"src": "991:562:12"
											},
											{
												"body": {
													"nativeSrc": "1613:325:12",
													"nodeType": "YulBlock",
													"src": "1613:325:12",
													"statements": [
														{
															"nativeSrc": "1623:22:12",
															"nodeType": "YulAssignment",
															"src": "1623:22:12",
															"value": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "1637:1:12",
																		"nodeType": "YulLiteral",
																		"src": "1637:1:12",
																		"type": "",
																		"value": "1"
																	},
																	{
																		"name": "data",
																		"nativeSrc": "1640:4:12",
																		"nodeType": "YulIdentifier",
																		"src": "1640:4:12"
																	}
																],
																"functionName": {
																	"name": "shr",
																	"nativeSrc": "1633:3:12",
																	"nodeType": "YulIdentifier",
																	"src": "1633:3:12"
																},
																"nativeSrc": "1633:12:12",
																"nodeType": "YulFunctionCall",
																"src": "1633:12:12"
															},
															"variableNames": [
																{
																	"name": "length",
																	"nativeSrc": "1623:6:12",
																	"nodeType": "YulIdentifier",
																	"src": "1623:6:12"
																}
															]
														},
														{
															"nativeSrc": "1654:38:12",
															"nodeType": "YulVariableDeclaration",
															"src": "1654:38:12",
															"value": {
																"arguments": [
																	{
																		"name": "data",
																		"nativeSrc": "1684:4:12",
																		"nodeType": "YulIdentifier",
																		"src": "1684:4:12"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "1690:1:12",
																		"nodeType": "YulLiteral",
																		"src": "1690:1:12",
																		"type": "",
																		"value": "1"
																	}
																],
																"functionName": {
																	"name": "and",
																	"nativeSrc": "1680:3:12",
																	"nodeType": "YulIdentifier",
																	"src": "1680:3:12"
																},
																"nativeSrc": "1680:12:12",
																"nodeType": "YulFunctionCall",
																"src": "1680:12:12"
															},
															"variables": [
																{
																	"name": "outOfPlaceEncoding",
																	"nativeSrc": "1658:18:12",
																	"nodeType": "YulTypedName",
																	"src": "1658:18:12",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nativeSrc": "1731:31:12",
																"nodeType": "YulBlock",
																"src": "1731:31:12",
																"statements": [
																	{
																		"nativeSrc": "1733:27:12",
																		"nodeType": "YulAssignment",
																		"src": "1733:27:12",
																		"value": {
																			"arguments": [
																				{
																					"name": "length",
																					"nativeSrc": "1747:6:12",
																					"nodeType": "YulIdentifier",
																					"src": "1747:6:12"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "1755:4:12",
																					"nodeType": "YulLiteral",
																					"src": "1755:4:12",
																					"type": "",
																					"value": "0x7f"
																				}
																			],
																			"functionName": {
																				"name": "and",
																				"nativeSrc": "1743:3:12",
																				"nodeType": "YulIdentifier",
																				"src": "1743:3:12"
																			},
																			"nativeSrc": "1743:17:12",
																			"nodeType": "YulFunctionCall",
																			"src": "1743:17:12"
																		},
																		"variableNames": [
																			{
																				"name": "length",
																				"nativeSrc": "1733:6:12",
																				"nodeType": "YulIdentifier",
																				"src": "1733:6:12"
																			}
																		]
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "outOfPlaceEncoding",
																		"nativeSrc": "1711:18:12",
																		"nodeType": "YulIdentifier",
																		"src": "1711:18:12"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nativeSrc": "1704:6:12",
																	"nodeType": "YulIdentifier",
																	"src": "1704:6:12"
																},
																"nativeSrc": "1704:26:12",
																"nodeType": "YulFunctionCall",
																"src": "1704:26:12"
															},
															"nativeSrc": "1701:61:12",
															"nodeType": "YulIf",
															"src": "1701:61:12"
														},
														{
															"body": {
																"nativeSrc": "1821:111:12",
																"nodeType": "YulBlock",
																"src": "1821:111:12",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nativeSrc": "1842:1:12",
																					"nodeType": "YulLiteral",
																					"src": "1842:1:12",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"arguments": [
																						{
																							"kind": "number",
																							"nativeSrc": "1849:3:12",
																							"nodeType": "YulLiteral",
																							"src": "1849:3:12",
																							"type": "",
																							"value": "224"
																						},
																						{
																							"kind": "number",
																							"nativeSrc": "1854:10:12",
																							"nodeType": "YulLiteral",
																							"src": "1854:10:12",
																							"type": "",
																							"value": "0x4e487b71"
																						}
																					],
																					"functionName": {
																						"name": "shl",
																						"nativeSrc": "1845:3:12",
																						"nodeType": "YulIdentifier",
																						"src": "1845:3:12"
																					},
																					"nativeSrc": "1845:20:12",
																					"nodeType": "YulFunctionCall",
																					"src": "1845:20:12"
																				}
																			],
																			"functionName": {
																				"name": "mstore",
																				"nativeSrc": "1835:6:12",
																				"nodeType": "YulIdentifier",
																				"src": "1835:6:12"
																			},
																			"nativeSrc": "1835:31:12",
																			"nodeType": "YulFunctionCall",
																			"src": "1835:31:12"
																		},
																		"nativeSrc": "1835:31:12",
																		"nodeType": "YulExpressionStatement",
																		"src": "1835:31:12"
																	},
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nativeSrc": "1886:1:12",
																					"nodeType": "YulLiteral",
																					"src": "1886:1:12",
																					"type": "",
																					"value": "4"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "1889:4:12",
																					"nodeType": "YulLiteral",
																					"src": "1889:4:12",
																					"type": "",
																					"value": "0x22"
																				}
																			],
																			"functionName": {
																				"name": "mstore",
																				"nativeSrc": "1879:6:12",
																				"nodeType": "YulIdentifier",
																				"src": "1879:6:12"
																			},
																			"nativeSrc": "1879:15:12",
																			"nodeType": "YulFunctionCall",
																			"src": "1879:15:12"
																		},
																		"nativeSrc": "1879:15:12",
																		"nodeType": "YulExpressionStatement",
																		"src": "1879:15:12"
																	},
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nativeSrc": "1914:1:12",
																					"nodeType": "YulLiteral",
																					"src": "1914:1:12",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "1917:4:12",
																					"nodeType": "YulLiteral",
																					"src": "1917:4:12",
																					"type": "",
																					"value": "0x24"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nativeSrc": "1907:6:12",
																				"nodeType": "YulIdentifier",
																				"src": "1907:6:12"
																			},
																			"nativeSrc": "1907:15:12",
																			"nodeType": "YulFunctionCall",
																			"src": "1907:15:12"
																		},
																		"nativeSrc": "1907:15:12",
																		"nodeType": "YulExpressionStatement",
																		"src": "1907:15:12"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "outOfPlaceEncoding",
																		"nativeSrc": "1777:18:12",
																		"nodeType": "YulIdentifier",
																		"src": "1777:18:12"
																	},
																	{
																		"arguments": [
																			{
																				"name": "length",
																				"nativeSrc": "1800:6:12",
																				"nodeType": "YulIdentifier",
																				"src": "1800:6:12"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "1808:2:12",
																				"nodeType": "YulLiteral",
																				"src": "1808:2:12",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "lt",
																			"nativeSrc": "1797:2:12",
																			"nodeType": "YulIdentifier",
																			"src": "1797:2:12"
																		},
																		"nativeSrc": "1797:14:12",
																		"nodeType": "YulFunctionCall",
																		"src": "1797:14:12"
																	}
																],
																"functionName": {
																	"name": "eq",
																	"nativeSrc": "1774:2:12",
																	"nodeType": "YulIdentifier",
																	"src": "1774:2:12"
																},
																"nativeSrc": "1774:38:12",
																"nodeType": "YulFunctionCall",
																"src": "1774:38:12"
															},
															"nativeSrc": "1771:161:12",
															"nodeType": "YulIf",
															"src": "1771:161:12"
														}
													]
												},
												"name": "extract_byte_array_length",
												"nativeSrc": "1558:380:12",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "data",
														"nativeSrc": "1593:4:12",
														"nodeType": "YulTypedName",
														"src": "1593:4:12",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "length",
														"nativeSrc": "1602:6:12",
														"nodeType": "YulTypedName",
														"src": "1602:6:12",
														"type": ""
													}
												],
												"src": "1558:380:12"
											},
											{
												"body": {
													"nativeSrc": "1999:65:12",
													"nodeType": "YulBlock",
													"src": "1999:65:12",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "2016:1:12",
																		"nodeType": "YulLiteral",
																		"src": "2016:1:12",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"name": "ptr",
																		"nativeSrc": "2019:3:12",
																		"nodeType": "YulIdentifier",
																		"src": "2019:3:12"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "2009:6:12",
																	"nodeType": "YulIdentifier",
																	"src": "2009:6:12"
																},
																"nativeSrc": "2009:14:12",
																"nodeType": "YulFunctionCall",
																"src": "2009:14:12"
															},
															"nativeSrc": "2009:14:12",
															"nodeType": "YulExpressionStatement",
															"src": "2009:14:12"
														},
														{
															"nativeSrc": "2032:26:12",
															"nodeType": "YulAssignment",
															"src": "2032:26:12",
															"value": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "2050:1:12",
																		"nodeType": "YulLiteral",
																		"src": "2050:1:12",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "2053:4:12",
																		"nodeType": "YulLiteral",
																		"src": "2053:4:12",
																		"type": "",
																		"value": "0x20"
																	}
																],
																"functionName": {
																	"name": "keccak256",
																	"nativeSrc": "2040:9:12",
																	"nodeType": "YulIdentifier",
																	"src": "2040:9:12"
																},
																"nativeSrc": "2040:18:12",
																"nodeType": "YulFunctionCall",
																"src": "2040:18:12"
															},
															"variableNames": [
																{
																	"name": "data",
																	"nativeSrc": "2032:4:12",
																	"nodeType": "YulIdentifier",
																	"src": "2032:4:12"
																}
															]
														}
													]
												},
												"name": "array_dataslot_string_storage",
												"nativeSrc": "1943:121:12",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "ptr",
														"nativeSrc": "1982:3:12",
														"nodeType": "YulTypedName",
														"src": "1982:3:12",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "data",
														"nativeSrc": "1990:4:12",
														"nodeType": "YulTypedName",
														"src": "1990:4:12",
														"type": ""
													}
												],
												"src": "1943:121:12"
											},
											{
												"body": {
													"nativeSrc": "2150:464:12",
													"nodeType": "YulBlock",
													"src": "2150:464:12",
													"statements": [
														{
															"body": {
																"nativeSrc": "2183:425:12",
																"nodeType": "YulBlock",
																"src": "2183:425:12",
																"statements": [
																	{
																		"nativeSrc": "2197:11:12",
																		"nodeType": "YulVariableDeclaration",
																		"src": "2197:11:12",
																		"value": {
																			"kind": "number",
																			"nativeSrc": "2207:1:12",
																			"nodeType": "YulLiteral",
																			"src": "2207:1:12",
																			"type": "",
																			"value": "0"
																		},
																		"variables": [
																			{
																				"name": "_1",
																				"nativeSrc": "2201:2:12",
																				"nodeType": "YulTypedName",
																				"src": "2201:2:12",
																				"type": ""
																			}
																		]
																	},
																	{
																		"expression": {
																			"arguments": [
																				{
																					"name": "_1",
																					"nativeSrc": "2228:2:12",
																					"nodeType": "YulIdentifier",
																					"src": "2228:2:12"
																				},
																				{
																					"name": "array",
																					"nativeSrc": "2232:5:12",
																					"nodeType": "YulIdentifier",
																					"src": "2232:5:12"
																				}
																			],
																			"functionName": {
																				"name": "mstore",
																				"nativeSrc": "2221:6:12",
																				"nodeType": "YulIdentifier",
																				"src": "2221:6:12"
																			},
																			"nativeSrc": "2221:17:12",
																			"nodeType": "YulFunctionCall",
																			"src": "2221:17:12"
																		},
																		"nativeSrc": "2221:17:12",
																		"nodeType": "YulExpressionStatement",
																		"src": "2221:17:12"
																	},
																	{
																		"nativeSrc": "2251:31:12",
																		"nodeType": "YulVariableDeclaration",
																		"src": "2251:31:12",
																		"value": {
																			"arguments": [
																				{
																					"name": "_1",
																					"nativeSrc": "2273:2:12",
																					"nodeType": "YulIdentifier",
																					"src": "2273:2:12"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "2277:4:12",
																					"nodeType": "YulLiteral",
																					"src": "2277:4:12",
																					"type": "",
																					"value": "0x20"
																				}
																			],
																			"functionName": {
																				"name": "keccak256",
																				"nativeSrc": "2263:9:12",
																				"nodeType": "YulIdentifier",
																				"src": "2263:9:12"
																			},
																			"nativeSrc": "2263:19:12",
																			"nodeType": "YulFunctionCall",
																			"src": "2263:19:12"
																		},
																		"variables": [
																			{
																				"name": "data",
																				"nativeSrc": "2255:4:12",
																				"nodeType": "YulTypedName",
																				"src": "2255:4:12",
																				"type": ""
																			}
																		]
																	},
																	{
																		"nativeSrc": "2295:57:12",
																		"nodeType": "YulVariableDeclaration",
																		"src": "2295:57:12",
																		"value": {
																			"arguments": [
																				{
																					"name": "data",
																					"nativeSrc": "2318:4:12",
																					"nodeType": "YulIdentifier",
																					"src": "2318:4:12"
																				},
																				{
																					"arguments": [
																						{
																							"kind": "number",
																							"nativeSrc": "2328:1:12",
																							"nodeType": "YulLiteral",
																							"src": "2328:1:12",
																							"type": "",
																							"value": "5"
																						},
																						{
																							"arguments": [
																								{
																									"name": "startIndex",
																									"nativeSrc": "2335:10:12",
																									"nodeType": "YulIdentifier",
																									"src": "2335:10:12"
																								},
																								{
																									"kind": "number",
																									"nativeSrc": "2347:2:12",
																									"nodeType": "YulLiteral",
																									"src": "2347:2:12",
																									"type": "",
																									"value": "31"
																								}
																							],
																							"functionName": {
																								"name": "add",
																								"nativeSrc": "2331:3:12",
																								"nodeType": "YulIdentifier",
																								"src": "2331:3:12"
																							},
																							"nativeSrc": "2331:19:12",
																							"nodeType": "YulFunctionCall",
																							"src": "2331:19:12"
																						}
																					],
																					"functionName": {
																						"name": "shr",
																						"nativeSrc": "2324:3:12",
																						"nodeType": "YulIdentifier",
																						"src": "2324:3:12"
																					},
																					"nativeSrc": "2324:27:12",
																					"nodeType": "YulFunctionCall",
																					"src": "2324:27:12"
																				}
																			],
																			"functionName": {
																				"name": "add",
																				"nativeSrc": "2314:3:12",
																				"nodeType": "YulIdentifier",
																				"src": "2314:3:12"
																			},
																			"nativeSrc": "2314:38:12",
																			"nodeType": "YulFunctionCall",
																			"src": "2314:38:12"
																		},
																		"variables": [
																			{
																				"name": "deleteStart",
																				"nativeSrc": "2299:11:12",
																				"nodeType": "YulTypedName",
																				"src": "2299:11:12",
																				"type": ""
																			}
																		]
																	},
																	{
																		"body": {
																			"nativeSrc": "2389:23:12",
																			"nodeType": "YulBlock",
																			"src": "2389:23:12",
																			"statements": [
																				{
																					"nativeSrc": "2391:19:12",
																					"nodeType": "YulAssignment",
																					"src": "2391:19:12",
																					"value": {
																						"name": "data",
																						"nativeSrc": "2406:4:12",
																						"nodeType": "YulIdentifier",
																						"src": "2406:4:12"
																					},
																					"variableNames": [
																						{
																							"name": "deleteStart",
																							"nativeSrc": "2391:11:12",
																							"nodeType": "YulIdentifier",
																							"src": "2391:11:12"
																						}
																					]
																				}
																			]
																		},
																		"condition": {
																			"arguments": [
																				{
																					"name": "startIndex",
																					"nativeSrc": "2371:10:12",
																					"nodeType": "YulIdentifier",
																					"src": "2371:10:12"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "2383:4:12",
																					"nodeType": "YulLiteral",
																					"src": "2383:4:12",
																					"type": "",
																					"value": "0x20"
																				}
																			],
																			"functionName": {
																				"name": "lt",
																				"nativeSrc": "2368:2:12",
																				"nodeType": "YulIdentifier",
																				"src": "2368:2:12"
																			},
																			"nativeSrc": "2368:20:12",
																			"nodeType": "YulFunctionCall",
																			"src": "2368:20:12"
																		},
																		"nativeSrc": "2365:47:12",
																		"nodeType": "YulIf",
																		"src": "2365:47:12"
																	},
																	{
																		"nativeSrc": "2425:41:12",
																		"nodeType": "YulVariableDeclaration",
																		"src": "2425:41:12",
																		"value": {
																			"arguments": [
																				{
																					"name": "data",
																					"nativeSrc": "2439:4:12",
																					"nodeType": "YulIdentifier",
																					"src": "2439:4:12"
																				},
																				{
																					"arguments": [
																						{
																							"kind": "number",
																							"nativeSrc": "2449:1:12",
																							"nodeType": "YulLiteral",
																							"src": "2449:1:12",
																							"type": "",
																							"value": "5"
																						},
																						{
																							"arguments": [
																								{
																									"name": "len",
																									"nativeSrc": "2456:3:12",
																									"nodeType": "YulIdentifier",
																									"src": "2456:3:12"
																								},
																								{
																									"kind": "number",
																									"nativeSrc": "2461:2:12",
																									"nodeType": "YulLiteral",
																									"src": "2461:2:12",
																									"type": "",
																									"value": "31"
																								}
																							],
																							"functionName": {
																								"name": "add",
																								"nativeSrc": "2452:3:12",
																								"nodeType": "YulIdentifier",
																								"src": "2452:3:12"
																							},
																							"nativeSrc": "2452:12:12",
																							"nodeType": "YulFunctionCall",
																							"src": "2452:12:12"
																						}
																					],
																					"functionName": {
																						"name": "shr",
																						"nativeSrc": "2445:3:12",
																						"nodeType": "YulIdentifier",
																						"src": "2445:3:12"
																					},
																					"nativeSrc": "2445:20:12",
																					"nodeType": "YulFunctionCall",
																					"src": "2445:20:12"
																				}
																			],
																			"functionName": {
																				"name": "add",
																				"nativeSrc": "2435:3:12",
																				"nodeType": "YulIdentifier",
																				"src": "2435:3:12"
																			},
																			"nativeSrc": "2435:31:12",
																			"nodeType": "YulFunctionCall",
																			"src": "2435:31:12"
																		},
																		"variables": [
																			{
																				"name": "_2",
																				"nativeSrc": "2429:2:12",
																				"nodeType": "YulTypedName",
																				"src": "2429:2:12",
																				"type": ""
																			}
																		]
																	},
																	{
																		"nativeSrc": "2479:24:12",
																		"nodeType": "YulVariableDeclaration",
																		"src": "2479:24:12",
																		"value": {
																			"name": "deleteStart",
																			"nativeSrc": "2492:11:12",
																			"nodeType": "YulIdentifier",
																			"src": "2492:11:12"
																		},
																		"variables": [
																			{
																				"name": "start",
																				"nativeSrc": "2483:5:12",
																				"nodeType": "YulTypedName",
																				"src": "2483:5:12",
																				"type": ""
																			}
																		]
																	},
																	{
																		"body": {
																			"nativeSrc": "2577:21:12",
																			"nodeType": "YulBlock",
																			"src": "2577:21:12",
																			"statements": [
																				{
																					"expression": {
																						"arguments": [
																							{
																								"name": "start",
																								"nativeSrc": "2586:5:12",
																								"nodeType": "YulIdentifier",
																								"src": "2586:5:12"
																							},
																							{
																								"name": "_1",
																								"nativeSrc": "2593:2:12",
																								"nodeType": "YulIdentifier",
																								"src": "2593:2:12"
																							}
																						],
																						"functionName": {
																							"name": "sstore",
																							"nativeSrc": "2579:6:12",
																							"nodeType": "YulIdentifier",
																							"src": "2579:6:12"
																						},
																						"nativeSrc": "2579:17:12",
																						"nodeType": "YulFunctionCall",
																						"src": "2579:17:12"
																					},
																					"nativeSrc": "2579:17:12",
																					"nodeType": "YulExpressionStatement",
																					"src": "2579:17:12"
																				}
																			]
																		},
																		"condition": {
																			"arguments": [
																				{
																					"name": "start",
																					"nativeSrc": "2527:5:12",
																					"nodeType": "YulIdentifier",
																					"src": "2527:5:12"
																				},
																				{
																					"name": "_2",
																					"nativeSrc": "2534:2:12",
																					"nodeType": "YulIdentifier",
																					"src": "2534:2:12"
																				}
																			],
																			"functionName": {
																				"name": "lt",
																				"nativeSrc": "2524:2:12",
																				"nodeType": "YulIdentifier",
																				"src": "2524:2:12"
																			},
																			"nativeSrc": "2524:13:12",
																			"nodeType": "YulFunctionCall",
																			"src": "2524:13:12"
																		},
																		"nativeSrc": "2516:82:12",
																		"nodeType": "YulForLoop",
																		"post": {
																			"nativeSrc": "2538:26:12",
																			"nodeType": "YulBlock",
																			"src": "2538:26:12",
																			"statements": [
																				{
																					"nativeSrc": "2540:22:12",
																					"nodeType": "YulAssignment",
																					"src": "2540:22:12",
																					"value": {
																						"arguments": [
																							{
																								"name": "start",
																								"nativeSrc": "2553:5:12",
																								"nodeType": "YulIdentifier",
																								"src": "2553:5:12"
																							},
																							{
																								"kind": "number",
																								"nativeSrc": "2560:1:12",
																								"nodeType": "YulLiteral",
																								"src": "2560:1:12",
																								"type": "",
																								"value": "1"
																							}
																						],
																						"functionName": {
																							"name": "add",
																							"nativeSrc": "2549:3:12",
																							"nodeType": "YulIdentifier",
																							"src": "2549:3:12"
																						},
																						"nativeSrc": "2549:13:12",
																						"nodeType": "YulFunctionCall",
																						"src": "2549:13:12"
																					},
																					"variableNames": [
																						{
																							"name": "start",
																							"nativeSrc": "2540:5:12",
																							"nodeType": "YulIdentifier",
																							"src": "2540:5:12"
																						}
																					]
																				}
																			]
																		},
																		"pre": {
																			"nativeSrc": "2520:3:12",
																			"nodeType": "YulBlock",
																			"src": "2520:3:12",
																			"statements": []
																		},
																		"src": "2516:82:12"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "len",
																		"nativeSrc": "2166:3:12",
																		"nodeType": "YulIdentifier",
																		"src": "2166:3:12"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "2171:2:12",
																		"nodeType": "YulLiteral",
																		"src": "2171:2:12",
																		"type": "",
																		"value": "31"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nativeSrc": "2163:2:12",
																	"nodeType": "YulIdentifier",
																	"src": "2163:2:12"
																},
																"nativeSrc": "2163:11:12",
																"nodeType": "YulFunctionCall",
																"src": "2163:11:12"
															},
															"nativeSrc": "2160:448:12",
															"nodeType": "YulIf",
															"src": "2160:448:12"
														}
													]
												},
												"name": "clean_up_bytearray_end_slots_string_storage",
												"nativeSrc": "2069:545:12",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "array",
														"nativeSrc": "2122:5:12",
														"nodeType": "YulTypedName",
														"src": "2122:5:12",
														"type": ""
													},
													{
														"name": "len",
														"nativeSrc": "2129:3:12",
														"nodeType": "YulTypedName",
														"src": "2129:3:12",
														"type": ""
													},
													{
														"name": "startIndex",
														"nativeSrc": "2134:10:12",
														"nodeType": "YulTypedName",
														"src": "2134:10:12",
														"type": ""
													}
												],
												"src": "2069:545:12"
											},
											{
												"body": {
													"nativeSrc": "2704:81:12",
													"nodeType": "YulBlock",
													"src": "2704:81:12",
													"statements": [
														{
															"nativeSrc": "2714:65:12",
															"nodeType": "YulAssignment",
															"src": "2714:65:12",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "data",
																				"nativeSrc": "2729:4:12",
																				"nodeType": "YulIdentifier",
																				"src": "2729:4:12"
																			},
																			{
																				"arguments": [
																					{
																						"arguments": [
																							{
																								"arguments": [
																									{
																										"kind": "number",
																										"nativeSrc": "2747:1:12",
																										"nodeType": "YulLiteral",
																										"src": "2747:1:12",
																										"type": "",
																										"value": "3"
																									},
																									{
																										"name": "len",
																										"nativeSrc": "2750:3:12",
																										"nodeType": "YulIdentifier",
																										"src": "2750:3:12"
																									}
																								],
																								"functionName": {
																									"name": "shl",
																									"nativeSrc": "2743:3:12",
																									"nodeType": "YulIdentifier",
																									"src": "2743:3:12"
																								},
																								"nativeSrc": "2743:11:12",
																								"nodeType": "YulFunctionCall",
																								"src": "2743:11:12"
																							},
																							{
																								"arguments": [
																									{
																										"kind": "number",
																										"nativeSrc": "2760:1:12",
																										"nodeType": "YulLiteral",
																										"src": "2760:1:12",
																										"type": "",
																										"value": "0"
																									}
																								],
																								"functionName": {
																									"name": "not",
																									"nativeSrc": "2756:3:12",
																									"nodeType": "YulIdentifier",
																									"src": "2756:3:12"
																								},
																								"nativeSrc": "2756:6:12",
																								"nodeType": "YulFunctionCall",
																								"src": "2756:6:12"
																							}
																						],
																						"functionName": {
																							"name": "shr",
																							"nativeSrc": "2739:3:12",
																							"nodeType": "YulIdentifier",
																							"src": "2739:3:12"
																						},
																						"nativeSrc": "2739:24:12",
																						"nodeType": "YulFunctionCall",
																						"src": "2739:24:12"
																					}
																				],
																				"functionName": {
																					"name": "not",
																					"nativeSrc": "2735:3:12",
																					"nodeType": "YulIdentifier",
																					"src": "2735:3:12"
																				},
																				"nativeSrc": "2735:29:12",
																				"nodeType": "YulFunctionCall",
																				"src": "2735:29:12"
																			}
																		],
																		"functionName": {
																			"name": "and",
																			"nativeSrc": "2725:3:12",
																			"nodeType": "YulIdentifier",
																			"src": "2725:3:12"
																		},
																		"nativeSrc": "2725:40:12",
																		"nodeType": "YulFunctionCall",
																		"src": "2725:40:12"
																	},
																	{
																		"arguments": [
																			{
																				"kind": "number",
																				"nativeSrc": "2771:1:12",
																				"nodeType": "YulLiteral",
																				"src": "2771:1:12",
																				"type": "",
																				"value": "1"
																			},
																			{
																				"name": "len",
																				"nativeSrc": "2774:3:12",
																				"nodeType": "YulIdentifier",
																				"src": "2774:3:12"
																			}
																		],
																		"functionName": {
																			"name": "shl",
																			"nativeSrc": "2767:3:12",
																			"nodeType": "YulIdentifier",
																			"src": "2767:3:12"
																		},
																		"nativeSrc": "2767:11:12",
																		"nodeType": "YulFunctionCall",
																		"src": "2767:11:12"
																	}
																],
																"functionName": {
																	"name": "or",
																	"nativeSrc": "2722:2:12",
																	"nodeType": "YulIdentifier",
																	"src": "2722:2:12"
																},
																"nativeSrc": "2722:57:12",
																"nodeType": "YulFunctionCall",
																"src": "2722:57:12"
															},
															"variableNames": [
																{
																	"name": "used",
																	"nativeSrc": "2714:4:12",
																	"nodeType": "YulIdentifier",
																	"src": "2714:4:12"
																}
															]
														}
													]
												},
												"name": "extract_used_part_and_set_length_of_short_byte_array",
												"nativeSrc": "2619:166:12",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "data",
														"nativeSrc": "2681:4:12",
														"nodeType": "YulTypedName",
														"src": "2681:4:12",
														"type": ""
													},
													{
														"name": "len",
														"nativeSrc": "2687:3:12",
														"nodeType": "YulTypedName",
														"src": "2687:3:12",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "used",
														"nativeSrc": "2695:4:12",
														"nodeType": "YulTypedName",
														"src": "2695:4:12",
														"type": ""
													}
												],
												"src": "2619:166:12"
											},
											{
												"body": {
													"nativeSrc": "2886:1256:12",
													"nodeType": "YulBlock",
													"src": "2886:1256:12",
													"statements": [
														{
															"nativeSrc": "2896:24:12",
															"nodeType": "YulVariableDeclaration",
															"src": "2896:24:12",
															"value": {
																"arguments": [
																	{
																		"name": "src",
																		"nativeSrc": "2916:3:12",
																		"nodeType": "YulIdentifier",
																		"src": "2916:3:12"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nativeSrc": "2910:5:12",
																	"nodeType": "YulIdentifier",
																	"src": "2910:5:12"
																},
																"nativeSrc": "2910:10:12",
																"nodeType": "YulFunctionCall",
																"src": "2910:10:12"
															},
															"variables": [
																{
																	"name": "newLen",
																	"nativeSrc": "2900:6:12",
																	"nodeType": "YulTypedName",
																	"src": "2900:6:12",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nativeSrc": "2963:22:12",
																"nodeType": "YulBlock",
																"src": "2963:22:12",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "panic_error_0x41",
																				"nativeSrc": "2965:16:12",
																				"nodeType": "YulIdentifier",
																				"src": "2965:16:12"
																			},
																			"nativeSrc": "2965:18:12",
																			"nodeType": "YulFunctionCall",
																			"src": "2965:18:12"
																		},
																		"nativeSrc": "2965:18:12",
																		"nodeType": "YulExpressionStatement",
																		"src": "2965:18:12"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "newLen",
																		"nativeSrc": "2935:6:12",
																		"nodeType": "YulIdentifier",
																		"src": "2935:6:12"
																	},
																	{
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"kind": "number",
																						"nativeSrc": "2951:2:12",
																						"nodeType": "YulLiteral",
																						"src": "2951:2:12",
																						"type": "",
																						"value": "64"
																					},
																					{
																						"kind": "number",
																						"nativeSrc": "2955:1:12",
																						"nodeType": "YulLiteral",
																						"src": "2955:1:12",
																						"type": "",
																						"value": "1"
																					}
																				],
																				"functionName": {
																					"name": "shl",
																					"nativeSrc": "2947:3:12",
																					"nodeType": "YulIdentifier",
																					"src": "2947:3:12"
																				},
																				"nativeSrc": "2947:10:12",
																				"nodeType": "YulFunctionCall",
																				"src": "2947:10:12"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "2959:1:12",
																				"nodeType": "YulLiteral",
																				"src": "2959:1:12",
																				"type": "",
																				"value": "1"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "2943:3:12",
																			"nodeType": "YulIdentifier",
																			"src": "2943:3:12"
																		},
																		"nativeSrc": "2943:18:12",
																		"nodeType": "YulFunctionCall",
																		"src": "2943:18:12"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nativeSrc": "2932:2:12",
																	"nodeType": "YulIdentifier",
																	"src": "2932:2:12"
																},
																"nativeSrc": "2932:30:12",
																"nodeType": "YulFunctionCall",
																"src": "2932:30:12"
															},
															"nativeSrc": "2929:56:12",
															"nodeType": "YulIf",
															"src": "2929:56:12"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "slot",
																		"nativeSrc": "3038:4:12",
																		"nodeType": "YulIdentifier",
																		"src": "3038:4:12"
																	},
																	{
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "slot",
																						"nativeSrc": "3076:4:12",
																						"nodeType": "YulIdentifier",
																						"src": "3076:4:12"
																					}
																				],
																				"functionName": {
																					"name": "sload",
																					"nativeSrc": "3070:5:12",
																					"nodeType": "YulIdentifier",
																					"src": "3070:5:12"
																				},
																				"nativeSrc": "3070:11:12",
																				"nodeType": "YulFunctionCall",
																				"src": "3070:11:12"
																			}
																		],
																		"functionName": {
																			"name": "extract_byte_array_length",
																			"nativeSrc": "3044:25:12",
																			"nodeType": "YulIdentifier",
																			"src": "3044:25:12"
																		},
																		"nativeSrc": "3044:38:12",
																		"nodeType": "YulFunctionCall",
																		"src": "3044:38:12"
																	},
																	{
																		"name": "newLen",
																		"nativeSrc": "3084:6:12",
																		"nodeType": "YulIdentifier",
																		"src": "3084:6:12"
																	}
																],
																"functionName": {
																	"name": "clean_up_bytearray_end_slots_string_storage",
																	"nativeSrc": "2994:43:12",
																	"nodeType": "YulIdentifier",
																	"src": "2994:43:12"
																},
																"nativeSrc": "2994:97:12",
																"nodeType": "YulFunctionCall",
																"src": "2994:97:12"
															},
															"nativeSrc": "2994:97:12",
															"nodeType": "YulExpressionStatement",
															"src": "2994:97:12"
														},
														{
															"nativeSrc": "3100:18:12",
															"nodeType": "YulVariableDeclaration",
															"src": "3100:18:12",
															"value": {
																"kind": "number",
																"nativeSrc": "3117:1:12",
																"nodeType": "YulLiteral",
																"src": "3117:1:12",
																"type": "",
																"value": "0"
															},
															"variables": [
																{
																	"name": "srcOffset",
																	"nativeSrc": "3104:9:12",
																	"nodeType": "YulTypedName",
																	"src": "3104:9:12",
																	"type": ""
																}
															]
														},
														{
															"nativeSrc": "3127:23:12",
															"nodeType": "YulVariableDeclaration",
															"src": "3127:23:12",
															"value": {
																"kind": "number",
																"nativeSrc": "3146:4:12",
																"nodeType": "YulLiteral",
																"src": "3146:4:12",
																"type": "",
																"value": "0x20"
															},
															"variables": [
																{
																	"name": "srcOffset_1",
																	"nativeSrc": "3131:11:12",
																	"nodeType": "YulTypedName",
																	"src": "3131:11:12",
																	"type": ""
																}
															]
														},
														{
															"nativeSrc": "3159:24:12",
															"nodeType": "YulAssignment",
															"src": "3159:24:12",
															"value": {
																"name": "srcOffset_1",
																"nativeSrc": "3172:11:12",
																"nodeType": "YulIdentifier",
																"src": "3172:11:12"
															},
															"variableNames": [
																{
																	"name": "srcOffset",
																	"nativeSrc": "3159:9:12",
																	"nodeType": "YulIdentifier",
																	"src": "3159:9:12"
																}
															]
														},
														{
															"cases": [
																{
																	"body": {
																		"nativeSrc": "3229:656:12",
																		"nodeType": "YulBlock",
																		"src": "3229:656:12",
																		"statements": [
																			{
																				"nativeSrc": "3243:35:12",
																				"nodeType": "YulVariableDeclaration",
																				"src": "3243:35:12",
																				"value": {
																					"arguments": [
																						{
																							"name": "newLen",
																							"nativeSrc": "3262:6:12",
																							"nodeType": "YulIdentifier",
																							"src": "3262:6:12"
																						},
																						{
																							"arguments": [
																								{
																									"kind": "number",
																									"nativeSrc": "3274:2:12",
																									"nodeType": "YulLiteral",
																									"src": "3274:2:12",
																									"type": "",
																									"value": "31"
																								}
																							],
																							"functionName": {
																								"name": "not",
																								"nativeSrc": "3270:3:12",
																								"nodeType": "YulIdentifier",
																								"src": "3270:3:12"
																							},
																							"nativeSrc": "3270:7:12",
																							"nodeType": "YulFunctionCall",
																							"src": "3270:7:12"
																						}
																					],
																					"functionName": {
																						"name": "and",
																						"nativeSrc": "3258:3:12",
																						"nodeType": "YulIdentifier",
																						"src": "3258:3:12"
																					},
																					"nativeSrc": "3258:20:12",
																					"nodeType": "YulFunctionCall",
																					"src": "3258:20:12"
																				},
																				"variables": [
																					{
																						"name": "loopEnd",
																						"nativeSrc": "3247:7:12",
																						"nodeType": "YulTypedName",
																						"src": "3247:7:12",
																						"type": ""
																					}
																				]
																			},
																			{
																				"nativeSrc": "3291:49:12",
																				"nodeType": "YulVariableDeclaration",
																				"src": "3291:49:12",
																				"value": {
																					"arguments": [
																						{
																							"name": "slot",
																							"nativeSrc": "3335:4:12",
																							"nodeType": "YulIdentifier",
																							"src": "3335:4:12"
																						}
																					],
																					"functionName": {
																						"name": "array_dataslot_string_storage",
																						"nativeSrc": "3305:29:12",
																						"nodeType": "YulIdentifier",
																						"src": "3305:29:12"
																					},
																					"nativeSrc": "3305:35:12",
																					"nodeType": "YulFunctionCall",
																					"src": "3305:35:12"
																				},
																				"variables": [
																					{
																						"name": "dstPtr",
																						"nativeSrc": "3295:6:12",
																						"nodeType": "YulTypedName",
																						"src": "3295:6:12",
																						"type": ""
																					}
																				]
																			},
																			{
																				"nativeSrc": "3353:10:12",
																				"nodeType": "YulVariableDeclaration",
																				"src": "3353:10:12",
																				"value": {
																					"kind": "number",
																					"nativeSrc": "3362:1:12",
																					"nodeType": "YulLiteral",
																					"src": "3362:1:12",
																					"type": "",
																					"value": "0"
																				},
																				"variables": [
																					{
																						"name": "i",
																						"nativeSrc": "3357:1:12",
																						"nodeType": "YulTypedName",
																						"src": "3357:1:12",
																						"type": ""
																					}
																				]
																			},
																			{
																				"body": {
																					"nativeSrc": "3440:172:12",
																					"nodeType": "YulBlock",
																					"src": "3440:172:12",
																					"statements": [
																						{
																							"expression": {
																								"arguments": [
																									{
																										"name": "dstPtr",
																										"nativeSrc": "3465:6:12",
																										"nodeType": "YulIdentifier",
																										"src": "3465:6:12"
																									},
																									{
																										"arguments": [
																											{
																												"arguments": [
																													{
																														"name": "src",
																														"nativeSrc": "3483:3:12",
																														"nodeType": "YulIdentifier",
																														"src": "3483:3:12"
																													},
																													{
																														"name": "srcOffset",
																														"nativeSrc": "3488:9:12",
																														"nodeType": "YulIdentifier",
																														"src": "3488:9:12"
																													}
																												],
																												"functionName": {
																													"name": "add",
																													"nativeSrc": "3479:3:12",
																													"nodeType": "YulIdentifier",
																													"src": "3479:3:12"
																												},
																												"nativeSrc": "3479:19:12",
																												"nodeType": "YulFunctionCall",
																												"src": "3479:19:12"
																											}
																										],
																										"functionName": {
																											"name": "mload",
																											"nativeSrc": "3473:5:12",
																											"nodeType": "YulIdentifier",
																											"src": "3473:5:12"
																										},
																										"nativeSrc": "3473:26:12",
																										"nodeType": "YulFunctionCall",
																										"src": "3473:26:12"
																									}
																								],
																								"functionName": {
																									"name": "sstore",
																									"nativeSrc": "3458:6:12",
																									"nodeType": "YulIdentifier",
																									"src": "3458:6:12"
																								},
																								"nativeSrc": "3458:42:12",
																								"nodeType": "YulFunctionCall",
																								"src": "3458:42:12"
																							},
																							"nativeSrc": "3458:42:12",
																							"nodeType": "YulExpressionStatement",
																							"src": "3458:42:12"
																						},
																						{
																							"nativeSrc": "3517:24:12",
																							"nodeType": "YulAssignment",
																							"src": "3517:24:12",
																							"value": {
																								"arguments": [
																									{
																										"name": "dstPtr",
																										"nativeSrc": "3531:6:12",
																										"nodeType": "YulIdentifier",
																										"src": "3531:6:12"
																									},
																									{
																										"kind": "number",
																										"nativeSrc": "3539:1:12",
																										"nodeType": "YulLiteral",
																										"src": "3539:1:12",
																										"type": "",
																										"value": "1"
																									}
																								],
																								"functionName": {
																									"name": "add",
																									"nativeSrc": "3527:3:12",
																									"nodeType": "YulIdentifier",
																									"src": "3527:3:12"
																								},
																								"nativeSrc": "3527:14:12",
																								"nodeType": "YulFunctionCall",
																								"src": "3527:14:12"
																							},
																							"variableNames": [
																								{
																									"name": "dstPtr",
																									"nativeSrc": "3517:6:12",
																									"nodeType": "YulIdentifier",
																									"src": "3517:6:12"
																								}
																							]
																						},
																						{
																							"nativeSrc": "3558:40:12",
																							"nodeType": "YulAssignment",
																							"src": "3558:40:12",
																							"value": {
																								"arguments": [
																									{
																										"name": "srcOffset",
																										"nativeSrc": "3575:9:12",
																										"nodeType": "YulIdentifier",
																										"src": "3575:9:12"
																									},
																									{
																										"name": "srcOffset_1",
																										"nativeSrc": "3586:11:12",
																										"nodeType": "YulIdentifier",
																										"src": "3586:11:12"
																									}
																								],
																								"functionName": {
																									"name": "add",
																									"nativeSrc": "3571:3:12",
																									"nodeType": "YulIdentifier",
																									"src": "3571:3:12"
																								},
																								"nativeSrc": "3571:27:12",
																								"nodeType": "YulFunctionCall",
																								"src": "3571:27:12"
																							},
																							"variableNames": [
																								{
																									"name": "srcOffset",
																									"nativeSrc": "3558:9:12",
																									"nodeType": "YulIdentifier",
																									"src": "3558:9:12"
																								}
																							]
																						}
																					]
																				},
																				"condition": {
																					"arguments": [
																						{
																							"name": "i",
																							"nativeSrc": "3387:1:12",
																							"nodeType": "YulIdentifier",
																							"src": "3387:1:12"
																						},
																						{
																							"name": "loopEnd",
																							"nativeSrc": "3390:7:12",
																							"nodeType": "YulIdentifier",
																							"src": "3390:7:12"
																						}
																					],
																					"functionName": {
																						"name": "lt",
																						"nativeSrc": "3384:2:12",
																						"nodeType": "YulIdentifier",
																						"src": "3384:2:12"
																					},
																					"nativeSrc": "3384:14:12",
																					"nodeType": "YulFunctionCall",
																					"src": "3384:14:12"
																				},
																				"nativeSrc": "3376:236:12",
																				"nodeType": "YulForLoop",
																				"post": {
																					"nativeSrc": "3399:28:12",
																					"nodeType": "YulBlock",
																					"src": "3399:28:12",
																					"statements": [
																						{
																							"nativeSrc": "3401:24:12",
																							"nodeType": "YulAssignment",
																							"src": "3401:24:12",
																							"value": {
																								"arguments": [
																									{
																										"name": "i",
																										"nativeSrc": "3410:1:12",
																										"nodeType": "YulIdentifier",
																										"src": "3410:1:12"
																									},
																									{
																										"name": "srcOffset_1",
																										"nativeSrc": "3413:11:12",
																										"nodeType": "YulIdentifier",
																										"src": "3413:11:12"
																									}
																								],
																								"functionName": {
																									"name": "add",
																									"nativeSrc": "3406:3:12",
																									"nodeType": "YulIdentifier",
																									"src": "3406:3:12"
																								},
																								"nativeSrc": "3406:19:12",
																								"nodeType": "YulFunctionCall",
																								"src": "3406:19:12"
																							},
																							"variableNames": [
																								{
																									"name": "i",
																									"nativeSrc": "3401:1:12",
																									"nodeType": "YulIdentifier",
																									"src": "3401:1:12"
																								}
																							]
																						}
																					]
																				},
																				"pre": {
																					"nativeSrc": "3380:3:12",
																					"nodeType": "YulBlock",
																					"src": "3380:3:12",
																					"statements": []
																				},
																				"src": "3376:236:12"
																			},
																			{
																				"body": {
																					"nativeSrc": "3660:166:12",
																					"nodeType": "YulBlock",
																					"src": "3660:166:12",
																					"statements": [
																						{
																							"nativeSrc": "3678:43:12",
																							"nodeType": "YulVariableDeclaration",
																							"src": "3678:43:12",
																							"value": {
																								"arguments": [
																									{
																										"arguments": [
																											{
																												"name": "src",
																												"nativeSrc": "3705:3:12",
																												"nodeType": "YulIdentifier",
																												"src": "3705:3:12"
																											},
																											{
																												"name": "srcOffset",
																												"nativeSrc": "3710:9:12",
																												"nodeType": "YulIdentifier",
																												"src": "3710:9:12"
																											}
																										],
																										"functionName": {
																											"name": "add",
																											"nativeSrc": "3701:3:12",
																											"nodeType": "YulIdentifier",
																											"src": "3701:3:12"
																										},
																										"nativeSrc": "3701:19:12",
																										"nodeType": "YulFunctionCall",
																										"src": "3701:19:12"
																									}
																								],
																								"functionName": {
																									"name": "mload",
																									"nativeSrc": "3695:5:12",
																									"nodeType": "YulIdentifier",
																									"src": "3695:5:12"
																								},
																								"nativeSrc": "3695:26:12",
																								"nodeType": "YulFunctionCall",
																								"src": "3695:26:12"
																							},
																							"variables": [
																								{
																									"name": "lastValue",
																									"nativeSrc": "3682:9:12",
																									"nodeType": "YulTypedName",
																									"src": "3682:9:12",
																									"type": ""
																								}
																							]
																						},
																						{
																							"expression": {
																								"arguments": [
																									{
																										"name": "dstPtr",
																										"nativeSrc": "3745:6:12",
																										"nodeType": "YulIdentifier",
																										"src": "3745:6:12"
																									},
																									{
																										"arguments": [
																											{
																												"name": "lastValue",
																												"nativeSrc": "3757:9:12",
																												"nodeType": "YulIdentifier",
																												"src": "3757:9:12"
																											},
																											{
																												"arguments": [
																													{
																														"arguments": [
																															{
																																"arguments": [
																																	{
																																		"arguments": [
																																			{
																																				"kind": "number",
																																				"nativeSrc": "3784:1:12",
																																				"nodeType": "YulLiteral",
																																				"src": "3784:1:12",
																																				"type": "",
																																				"value": "3"
																																			},
																																			{
																																				"name": "newLen",
																																				"nativeSrc": "3787:6:12",
																																				"nodeType": "YulIdentifier",
																																				"src": "3787:6:12"
																																			}
																																		],
																																		"functionName": {
																																			"name": "shl",
																																			"nativeSrc": "3780:3:12",
																																			"nodeType": "YulIdentifier",
																																			"src": "3780:3:12"
																																		},
																																		"nativeSrc": "3780:14:12",
																																		"nodeType": "YulFunctionCall",
																																		"src": "3780:14:12"
																																	},
																																	{
																																		"kind": "number",
																																		"nativeSrc": "3796:3:12",
																																		"nodeType": "YulLiteral",
																																		"src": "3796:3:12",
																																		"type": "",
																																		"value": "248"
																																	}
																																],
																																"functionName": {
																																	"name": "and",
																																	"nativeSrc": "3776:3:12",
																																	"nodeType": "YulIdentifier",
																																	"src": "3776:3:12"
																																},
																																"nativeSrc": "3776:24:12",
																																"nodeType": "YulFunctionCall",
																																"src": "3776:24:12"
																															},
																															{
																																"arguments": [
																																	{
																																		"kind": "number",
																																		"nativeSrc": "3806:1:12",
																																		"nodeType": "YulLiteral",
																																		"src": "3806:1:12",
																																		"type": "",
																																		"value": "0"
																																	}
																																],
																																"functionName": {
																																	"name": "not",
																																	"nativeSrc": "3802:3:12",
																																	"nodeType": "YulIdentifier",
																																	"src": "3802:3:12"
																																},
																																"nativeSrc": "3802:6:12",
																																"nodeType": "YulFunctionCall",
																																"src": "3802:6:12"
																															}
																														],
																														"functionName": {
																															"name": "shr",
																															"nativeSrc": "3772:3:12",
																															"nodeType": "YulIdentifier",
																															"src": "3772:3:12"
																														},
																														"nativeSrc": "3772:37:12",
																														"nodeType": "YulFunctionCall",
																														"src": "3772:37:12"
																													}
																												],
																												"functionName": {
																													"name": "not",
																													"nativeSrc": "3768:3:12",
																													"nodeType": "YulIdentifier",
																													"src": "3768:3:12"
																												},
																												"nativeSrc": "3768:42:12",
																												"nodeType": "YulFunctionCall",
																												"src": "3768:42:12"
																											}
																										],
																										"functionName": {
																											"name": "and",
																											"nativeSrc": "3753:3:12",
																											"nodeType": "YulIdentifier",
																											"src": "3753:3:12"
																										},
																										"nativeSrc": "3753:58:12",
																										"nodeType": "YulFunctionCall",
																										"src": "3753:58:12"
																									}
																								],
																								"functionName": {
																									"name": "sstore",
																									"nativeSrc": "3738:6:12",
																									"nodeType": "YulIdentifier",
																									"src": "3738:6:12"
																								},
																								"nativeSrc": "3738:74:12",
																								"nodeType": "YulFunctionCall",
																								"src": "3738:74:12"
																							},
																							"nativeSrc": "3738:74:12",
																							"nodeType": "YulExpressionStatement",
																							"src": "3738:74:12"
																						}
																					]
																				},
																				"condition": {
																					"arguments": [
																						{
																							"name": "loopEnd",
																							"nativeSrc": "3631:7:12",
																							"nodeType": "YulIdentifier",
																							"src": "3631:7:12"
																						},
																						{
																							"name": "newLen",
																							"nativeSrc": "3640:6:12",
																							"nodeType": "YulIdentifier",
																							"src": "3640:6:12"
																						}
																					],
																					"functionName": {
																						"name": "lt",
																						"nativeSrc": "3628:2:12",
																						"nodeType": "YulIdentifier",
																						"src": "3628:2:12"
																					},
																					"nativeSrc": "3628:19:12",
																					"nodeType": "YulFunctionCall",
																					"src": "3628:19:12"
																				},
																				"nativeSrc": "3625:201:12",
																				"nodeType": "YulIf",
																				"src": "3625:201:12"
																			},
																			{
																				"expression": {
																					"arguments": [
																						{
																							"name": "slot",
																							"nativeSrc": "3846:4:12",
																							"nodeType": "YulIdentifier",
																							"src": "3846:4:12"
																						},
																						{
																							"arguments": [
																								{
																									"arguments": [
																										{
																											"kind": "number",
																											"nativeSrc": "3860:1:12",
																											"nodeType": "YulLiteral",
																											"src": "3860:1:12",
																											"type": "",
																											"value": "1"
																										},
																										{
																											"name": "newLen",
																											"nativeSrc": "3863:6:12",
																											"nodeType": "YulIdentifier",
																											"src": "3863:6:12"
																										}
																									],
																									"functionName": {
																										"name": "shl",
																										"nativeSrc": "3856:3:12",
																										"nodeType": "YulIdentifier",
																										"src": "3856:3:12"
																									},
																									"nativeSrc": "3856:14:12",
																									"nodeType": "YulFunctionCall",
																									"src": "3856:14:12"
																								},
																								{
																									"kind": "number",
																									"nativeSrc": "3872:1:12",
																									"nodeType": "YulLiteral",
																									"src": "3872:1:12",
																									"type": "",
																									"value": "1"
																								}
																							],
																							"functionName": {
																								"name": "add",
																								"nativeSrc": "3852:3:12",
																								"nodeType": "YulIdentifier",
																								"src": "3852:3:12"
																							},
																							"nativeSrc": "3852:22:12",
																							"nodeType": "YulFunctionCall",
																							"src": "3852:22:12"
																						}
																					],
																					"functionName": {
																						"name": "sstore",
																						"nativeSrc": "3839:6:12",
																						"nodeType": "YulIdentifier",
																						"src": "3839:6:12"
																					},
																					"nativeSrc": "3839:36:12",
																					"nodeType": "YulFunctionCall",
																					"src": "3839:36:12"
																				},
																				"nativeSrc": "3839:36:12",
																				"nodeType": "YulExpressionStatement",
																				"src": "3839:36:12"
																			}
																		]
																	},
																	"nativeSrc": "3222:663:12",
																	"nodeType": "YulCase",
																	"src": "3222:663:12",
																	"value": {
																		"kind": "number",
																		"nativeSrc": "3227:1:12",
																		"nodeType": "YulLiteral",
																		"src": "3227:1:12",
																		"type": "",
																		"value": "1"
																	}
																},
																{
																	"body": {
																		"nativeSrc": "3902:234:12",
																		"nodeType": "YulBlock",
																		"src": "3902:234:12",
																		"statements": [
																			{
																				"nativeSrc": "3916:14:12",
																				"nodeType": "YulVariableDeclaration",
																				"src": "3916:14:12",
																				"value": {
																					"kind": "number",
																					"nativeSrc": "3929:1:12",
																					"nodeType": "YulLiteral",
																					"src": "3929:1:12",
																					"type": "",
																					"value": "0"
																				},
																				"variables": [
																					{
																						"name": "value",
																						"nativeSrc": "3920:5:12",
																						"nodeType": "YulTypedName",
																						"src": "3920:5:12",
																						"type": ""
																					}
																				]
																			},
																			{
																				"body": {
																					"nativeSrc": "3965:67:12",
																					"nodeType": "YulBlock",
																					"src": "3965:67:12",
																					"statements": [
																						{
																							"nativeSrc": "3983:35:12",
																							"nodeType": "YulAssignment",
																							"src": "3983:35:12",
																							"value": {
																								"arguments": [
																									{
																										"arguments": [
																											{
																												"name": "src",
																												"nativeSrc": "4002:3:12",
																												"nodeType": "YulIdentifier",
																												"src": "4002:3:12"
																											},
																											{
																												"name": "srcOffset",
																												"nativeSrc": "4007:9:12",
																												"nodeType": "YulIdentifier",
																												"src": "4007:9:12"
																											}
																										],
																										"functionName": {
																											"name": "add",
																											"nativeSrc": "3998:3:12",
																											"nodeType": "YulIdentifier",
																											"src": "3998:3:12"
																										},
																										"nativeSrc": "3998:19:12",
																										"nodeType": "YulFunctionCall",
																										"src": "3998:19:12"
																									}
																								],
																								"functionName": {
																									"name": "mload",
																									"nativeSrc": "3992:5:12",
																									"nodeType": "YulIdentifier",
																									"src": "3992:5:12"
																								},
																								"nativeSrc": "3992:26:12",
																								"nodeType": "YulFunctionCall",
																								"src": "3992:26:12"
																							},
																							"variableNames": [
																								{
																									"name": "value",
																									"nativeSrc": "3983:5:12",
																									"nodeType": "YulIdentifier",
																									"src": "3983:5:12"
																								}
																							]
																						}
																					]
																				},
																				"condition": {
																					"name": "newLen",
																					"nativeSrc": "3946:6:12",
																					"nodeType": "YulIdentifier",
																					"src": "3946:6:12"
																				},
																				"nativeSrc": "3943:89:12",
																				"nodeType": "YulIf",
																				"src": "3943:89:12"
																			},
																			{
																				"expression": {
																					"arguments": [
																						{
																							"name": "slot",
																							"nativeSrc": "4052:4:12",
																							"nodeType": "YulIdentifier",
																							"src": "4052:4:12"
																						},
																						{
																							"arguments": [
																								{
																									"name": "value",
																									"nativeSrc": "4111:5:12",
																									"nodeType": "YulIdentifier",
																									"src": "4111:5:12"
																								},
																								{
																									"name": "newLen",
																									"nativeSrc": "4118:6:12",
																									"nodeType": "YulIdentifier",
																									"src": "4118:6:12"
																								}
																							],
																							"functionName": {
																								"name": "extract_used_part_and_set_length_of_short_byte_array",
																								"nativeSrc": "4058:52:12",
																								"nodeType": "YulIdentifier",
																								"src": "4058:52:12"
																							},
																							"nativeSrc": "4058:67:12",
																							"nodeType": "YulFunctionCall",
																							"src": "4058:67:12"
																						}
																					],
																					"functionName": {
																						"name": "sstore",
																						"nativeSrc": "4045:6:12",
																						"nodeType": "YulIdentifier",
																						"src": "4045:6:12"
																					},
																					"nativeSrc": "4045:81:12",
																					"nodeType": "YulFunctionCall",
																					"src": "4045:81:12"
																				},
																				"nativeSrc": "4045:81:12",
																				"nodeType": "YulExpressionStatement",
																				"src": "4045:81:12"
																			}
																		]
																	},
																	"nativeSrc": "3894:242:12",
																	"nodeType": "YulCase",
																	"src": "3894:242:12",
																	"value": "default"
																}
															],
															"expression": {
																"arguments": [
																	{
																		"name": "newLen",
																		"nativeSrc": "3202:6:12",
																		"nodeType": "YulIdentifier",
																		"src": "3202:6:12"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "3210:2:12",
																		"nodeType": "YulLiteral",
																		"src": "3210:2:12",
																		"type": "",
																		"value": "31"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nativeSrc": "3199:2:12",
																	"nodeType": "YulIdentifier",
																	"src": "3199:2:12"
																},
																"nativeSrc": "3199:14:12",
																"nodeType": "YulFunctionCall",
																"src": "3199:14:12"
															},
															"nativeSrc": "3192:944:12",
															"nodeType": "YulSwitch",
															"src": "3192:944:12"
														}
													]
												},
												"name": "copy_byte_array_to_storage_from_t_string_memory_ptr_to_t_string_storage",
												"nativeSrc": "2790:1352:12",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "slot",
														"nativeSrc": "2871:4:12",
														"nodeType": "YulTypedName",
														"src": "2871:4:12",
														"type": ""
													},
													{
														"name": "src",
														"nativeSrc": "2877:3:12",
														"nodeType": "YulTypedName",
														"src": "2877:3:12",
														"type": ""
													}
												],
												"src": "2790:1352:12"
											}
										]
									},
									"contents": "{\n    { }\n    function panic_error_0x41()\n    {\n        mstore(0, shl(224, 0x4e487b71))\n        mstore(4, 0x41)\n        revert(0, 0x24)\n    }\n    function abi_decode_string_fromMemory(offset, end) -> array\n    {\n        if iszero(slt(add(offset, 0x1f), end)) { revert(0, 0) }\n        let _1 := mload(offset)\n        let _2 := sub(shl(64, 1), 1)\n        if gt(_1, _2) { panic_error_0x41() }\n        let _3 := not(31)\n        let memPtr := mload(64)\n        let newFreePtr := add(memPtr, and(add(and(add(_1, 0x1f), _3), 63), _3))\n        if or(gt(newFreePtr, _2), lt(newFreePtr, memPtr)) { panic_error_0x41() }\n        mstore(64, newFreePtr)\n        mstore(memPtr, _1)\n        let _4 := 0x20\n        if gt(add(add(offset, _1), _4), end) { revert(0, 0) }\n        let i := 0\n        for { } lt(i, _1) { i := add(i, _4) }\n        {\n            mstore(add(add(memPtr, i), _4), mload(add(add(offset, i), _4)))\n        }\n        mstore(add(add(memPtr, _1), _4), 0)\n        array := memPtr\n    }\n    function abi_decode_tuple_t_string_memory_ptrt_string_memory_ptr_fromMemory(headStart, dataEnd) -> value0, value1\n    {\n        if slt(sub(dataEnd, headStart), 64) { revert(0, 0) }\n        let offset := mload(headStart)\n        let _1 := sub(shl(64, 1), 1)\n        if gt(offset, _1) { revert(0, 0) }\n        value0 := abi_decode_string_fromMemory(add(headStart, offset), dataEnd)\n        let offset_1 := mload(add(headStart, 32))\n        if gt(offset_1, _1) { revert(0, 0) }\n        value1 := abi_decode_string_fromMemory(add(headStart, offset_1), dataEnd)\n    }\n    function extract_byte_array_length(data) -> length\n    {\n        length := shr(1, data)\n        let outOfPlaceEncoding := and(data, 1)\n        if iszero(outOfPlaceEncoding) { length := and(length, 0x7f) }\n        if eq(outOfPlaceEncoding, lt(length, 32))\n        {\n            mstore(0, shl(224, 0x4e487b71))\n            mstore(4, 0x22)\n            revert(0, 0x24)\n        }\n    }\n    function array_dataslot_string_storage(ptr) -> data\n    {\n        mstore(0, ptr)\n        data := keccak256(0, 0x20)\n    }\n    function clean_up_bytearray_end_slots_string_storage(array, len, startIndex)\n    {\n        if gt(len, 31)\n        {\n            let _1 := 0\n            mstore(_1, array)\n            let data := keccak256(_1, 0x20)\n            let deleteStart := add(data, shr(5, add(startIndex, 31)))\n            if lt(startIndex, 0x20) { deleteStart := data }\n            let _2 := add(data, shr(5, add(len, 31)))\n            let start := deleteStart\n            for { } lt(start, _2) { start := add(start, 1) }\n            { sstore(start, _1) }\n        }\n    }\n    function extract_used_part_and_set_length_of_short_byte_array(data, len) -> used\n    {\n        used := or(and(data, not(shr(shl(3, len), not(0)))), shl(1, len))\n    }\n    function copy_byte_array_to_storage_from_t_string_memory_ptr_to_t_string_storage(slot, src)\n    {\n        let newLen := mload(src)\n        if gt(newLen, sub(shl(64, 1), 1)) { panic_error_0x41() }\n        clean_up_bytearray_end_slots_string_storage(slot, extract_byte_array_length(sload(slot)), newLen)\n        let srcOffset := 0\n        let srcOffset_1 := 0x20\n        srcOffset := srcOffset_1\n        switch gt(newLen, 31)\n        case 1 {\n            let loopEnd := and(newLen, not(31))\n            let dstPtr := array_dataslot_string_storage(slot)\n            let i := 0\n            for { } lt(i, loopEnd) { i := add(i, srcOffset_1) }\n            {\n                sstore(dstPtr, mload(add(src, srcOffset)))\n                dstPtr := add(dstPtr, 1)\n                srcOffset := add(srcOffset, srcOffset_1)\n            }\n            if lt(loopEnd, newLen)\n            {\n                let lastValue := mload(add(src, srcOffset))\n                sstore(dstPtr, and(lastValue, not(shr(and(shl(3, newLen), 248), not(0)))))\n            }\n            sstore(slot, add(shl(1, newLen), 1))\n        }\n        default {\n            let value := 0\n            if newLen\n            {\n                value := mload(add(src, srcOffset))\n            }\n            sstore(slot, extract_used_part_and_set_length_of_short_byte_array(value, newLen))\n        }\n    }\n}",
									"id": 12,
									"language": "Yul",
									"name": "#utility.yul"
								}
							],
							"linkReferences": {},
							"object": "608060405234801562000010575f80fd5b506040516200143b3803806200143b833981016040819052620000339162000116565b5f62000040838262000208565b5060016200004f828262000208565b505050620002d0565b634e487b7160e01b5f52604160045260245ffd5b5f82601f8301126200007c575f80fd5b81516001600160401b038082111562000099576200009962000058565b604051601f8301601f19908116603f01168101908282118183101715620000c457620000c462000058565b81604052838152602092508683858801011115620000e0575f80fd5b5f91505b83821015620001035785820183015181830184015290820190620000e4565b5f93810190920192909252949350505050565b5f806040838503121562000128575f80fd5b82516001600160401b03808211156200013f575f80fd5b6200014d868387016200006c565b9350602085015191508082111562000163575f80fd5b5062000172858286016200006c565b9150509250929050565b600181811c908216806200019157607f821691505b602082108103620001b057634e487b7160e01b5f52602260045260245ffd5b50919050565b601f82111562000203575f81815260208120601f850160051c81016020861015620001de5750805b601f850160051c820191505b81811015620001ff57828155600101620001ea565b5050505b505050565b81516001600160401b0381111562000224576200022462000058565b6200023c816200023584546200017c565b84620001b6565b602080601f83116001811462000272575f84156200025a5750858301515b5f19600386901b1c1916600185901b178555620001ff565b5f85815260208120601f198616915b82811015620002a25788860151825594840194600190910190840162000281565b5085821015620002c057878501515f19600388901b60f8161c191681555b5050505050600190811b01905550565b61115d80620002de5f395ff3fe608060405234801561000f575f80fd5b50600436106100cb575f3560e01c80636352211e11610088578063a22cb46511610063578063a22cb465146101ae578063b88d4fde146101c1578063c87b56dd146101d4578063e985e9c5146101e7575f80fd5b80636352211e1461017257806370a082311461018557806395d89b41146101a6575f80fd5b806301ffc9a7146100cf57806306fdde03146100f7578063081812fc1461010c578063095ea7b31461013757806323b872dd1461014c57806342842e0e1461015f575b5f80fd5b6100e26100dd366004610cd3565b6101fa565b60405190151581526020015b60405180910390f35b6100ff61024b565b6040516100ee9190610d3b565b61011f61011a366004610d4d565b6102da565b6040516001600160a01b0390911681526020016100ee565b61014a610145366004610d7f565b6102ff565b005b61014a61015a366004610da7565b610418565b61014a61016d366004610da7565b610449565b61011f610180366004610d4d565b610463565b610198610193366004610de0565b6104c2565b6040519081526020016100ee565b6100ff610546565b61014a6101bc366004610df9565b610555565b61014a6101cf366004610e46565b610564565b6100ff6101e2366004610d4d565b61059c565b6100e26101f5366004610f1b565b61060c565b5f6001600160e01b031982166380ac58cd60e01b148061022a57506001600160e01b03198216635b5e139f60e01b145b8061024557506301ffc9a760e01b6001600160e01b03198316145b92915050565b60605f805461025990610f4c565b80601f016020809104026020016040519081016040528092919081815260200182805461028590610f4c565b80156102d05780601f106102a7576101008083540402835291602001916102d0565b820191905f5260205f20905b8154815290600101906020018083116102b357829003601f168201915b5050505050905090565b5f6102e482610639565b505f908152600460205260409020546001600160a01b031690565b5f61030982610463565b9050806001600160a01b0316836001600160a01b03160361037b5760405162461bcd60e51b815260206004820152602160248201527f4552433732313a20617070726f76616c20746f2063757272656e74206f776e656044820152603960f91b60648201526084015b60405180910390fd5b336001600160a01b03821614806103975750610397813361060c565b6104095760405162461bcd60e51b815260206004820152603d60248201527f4552433732313a20617070726f76652063616c6c6572206973206e6f7420746f60448201527f6b656e206f776e6572206f7220617070726f76656420666f7220616c6c0000006064820152608401610372565b610413838361069a565b505050565b6104223382610707565b61043e5760405162461bcd60e51b815260040161037290610f84565b610413838383610765565b61041383838360405180602001604052805f815250610564565b5f818152600260205260408120546001600160a01b0316806102455760405162461bcd60e51b8152602060048201526018602482015277115490cdcc8c4e881a5b9d985b1a59081d1bdad95b88125160421b6044820152606401610372565b5f6001600160a01b03821661052b5760405162461bcd60e51b815260206004820152602960248201527f4552433732313a2061646472657373207a65726f206973206e6f7420612076616044820152683634b21037bbb732b960b91b6064820152608401610372565b506001600160a01b03165f9081526003602052604090205490565b60606001805461025990610f4c565b6105603383836108d4565b5050565b61056e3383610707565b61058a5760405162461bcd60e51b815260040161037290610f84565b610596848484846109a1565b50505050565b60606105a782610639565b5f6105bc60408051602081019091525f815290565b90505f8151116105da5760405180602001604052805f815250610605565b806105e4846109d4565b6040516020016105f5929190610fd1565b6040516020818303038152906040525b9392505050565b6001600160a01b039182165f90815260056020908152604080832093909416825291909152205460ff1690565b5f818152600260205260409020546001600160a01b03166106975760405162461bcd60e51b8152602060048201526018602482015277115490cdcc8c4e881a5b9d985b1a59081d1bdad95b88125160421b6044820152606401610372565b50565b5f81815260046020526040902080546001600160a01b0319166001600160a01b03841690811790915581906106ce82610463565b6001600160a01b03167f8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b92560405160405180910390a45050565b5f8061071283610463565b9050806001600160a01b0316846001600160a01b031614806107395750610739818561060c565b8061075d5750836001600160a01b0316610752846102da565b6001600160a01b0316145b949350505050565b826001600160a01b031661077882610463565b6001600160a01b03161461079e5760405162461bcd60e51b815260040161037290610fff565b6001600160a01b0382166108005760405162461bcd60e51b8152602060048201526024808201527f4552433732313a207472616e7366657220746f20746865207a65726f206164646044820152637265737360e01b6064820152608401610372565b61080d8383836001610a64565b826001600160a01b031661082082610463565b6001600160a01b0316146108465760405162461bcd60e51b815260040161037290610fff565b5f81815260046020908152604080832080546001600160a01b03199081169091556001600160a01b038781168086526003855283862080545f1901905590871680865283862080546001019055868652600290945282852080549092168417909155905184937fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef91a4505050565b816001600160a01b0316836001600160a01b0316036109355760405162461bcd60e51b815260206004820152601960248201527f4552433732313a20617070726f766520746f2063616c6c6572000000000000006044820152606401610372565b6001600160a01b038381165f81815260056020908152604080832094871680845294825291829020805460ff191686151590811790915591519182527f17307eab39ab6107e8899845ad3d59bd9653f200f220920489ca2b5937696c31910160405180910390a3505050565b6109ac848484610765565b6109b884848484610aea565b6105965760405162461bcd60e51b815260040161037290611044565b60605f6109e083610be7565b60010190505f8167ffffffffffffffff8111156109ff576109ff610e32565b6040519080825280601f01601f191660200182016040528015610a29576020820181803683370190505b5090508181016020015b5f19016f181899199a1a9b1b9c1cb0b131b232b360811b600a86061a8153600a8504945084610a3357509392505050565b6001811115610596576001600160a01b03841615610aa9576001600160a01b0384165f9081526003602052604081208054839290610aa39084906110aa565b90915550505b6001600160a01b03831615610596576001600160a01b0383165f9081526003602052604081208054839290610adf9084906110bd565b909155505050505050565b5f6001600160a01b0384163b15610bdc57604051630a85bd0160e11b81526001600160a01b0385169063150b7a0290610b2d9033908990889088906004016110d0565b6020604051808303815f875af1925050508015610b67575060408051601f3d908101601f19168201909252610b649181019061110c565b60015b610bc2573d808015610b94576040519150601f19603f3d011682016040523d82523d5f602084013e610b99565b606091505b5080515f03610bba5760405162461bcd60e51b815260040161037290611044565b805181602001fd5b6001600160e01b031916630a85bd0160e11b14905061075d565b506001949350505050565b5f8072184f03e93ff9f4daa797ed6e38ed64bf6a1f0160401b8310610c255772184f03e93ff9f4daa797ed6e38ed64bf6a1f0160401b830492506040015b6d04ee2d6d415b85acef81000000008310610c51576d04ee2d6d415b85acef8100000000830492506020015b662386f26fc100008310610c6f57662386f26fc10000830492506010015b6305f5e1008310610c87576305f5e100830492506008015b6127108310610c9b57612710830492506004015b60648310610cad576064830492506002015b600a83106102455760010192915050565b6001600160e01b031981168114610697575f80fd5b5f60208284031215610ce3575f80fd5b813561060581610cbe565b5f5b83811015610d08578181015183820152602001610cf0565b50505f910152565b5f8151808452610d27816020860160208601610cee565b601f01601f19169290920160200192915050565b602081525f6106056020830184610d10565b5f60208284031215610d5d575f80fd5b5035919050565b80356001600160a01b0381168114610d7a575f80fd5b919050565b5f8060408385031215610d90575f80fd5b610d9983610d64565b946020939093013593505050565b5f805f60608486031215610db9575f80fd5b610dc284610d64565b9250610dd060208501610d64565b9150604084013590509250925092565b5f60208284031215610df0575f80fd5b61060582610d64565b5f8060408385031215610e0a575f80fd5b610e1383610d64565b915060208301358015158114610e27575f80fd5b809150509250929050565b634e487b7160e01b5f52604160045260245ffd5b5f805f8060808587031215610e59575f80fd5b610e6285610d64565b9350610e7060208601610d64565b925060408501359150606085013567ffffffffffffffff80821115610e93575f80fd5b818701915087601f830112610ea6575f80fd5b813581811115610eb857610eb8610e32565b604051601f8201601f19908116603f01168101908382118183101715610ee057610ee0610e32565b816040528281528a6020848701011115610ef8575f80fd5b826020860160208301375f60208483010152809550505050505092959194509250565b5f8060408385031215610f2c575f80fd5b610f3583610d64565b9150610f4360208401610d64565b90509250929050565b600181811c90821680610f6057607f821691505b602082108103610f7e57634e487b7160e01b5f52602260045260245ffd5b50919050565b6020808252602d908201527f4552433732313a2063616c6c6572206973206e6f7420746f6b656e206f776e6560408201526c1c881bdc88185c1c1c9bdd9959609a1b606082015260800190565b5f8351610fe2818460208801610cee565b835190830190610ff6818360208801610cee565b01949350505050565b60208082526025908201527f4552433732313a207472616e736665722066726f6d20696e636f72726563742060408201526437bbb732b960d91b606082015260800190565b60208082526032908201527f4552433732313a207472616e7366657220746f206e6f6e20455243373231526560408201527131b2b4bb32b91034b6b83632b6b2b73a32b960711b606082015260800190565b634e487b7160e01b5f52601160045260245ffd5b8181038181111561024557610245611096565b8082018082111561024557610245611096565b6001600160a01b03858116825284166020820152604081018390526080606082018190525f9061110290830184610d10565b9695505050505050565b5f6020828403121561111c575f80fd5b815161060581610cbe56fea26469706673582212208668b10ade2ce4e39acc044f7dbefc7edadaae5a1fbb762e25bf9b747808bb8464736f6c63430008150033",
							"opcodes": "PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH3 0x10 JUMPI PUSH0 DUP1 REVERT JUMPDEST POP PUSH1 0x40 MLOAD PUSH3 0x143B CODESIZE SUB DUP1 PUSH3 0x143B DUP4 CODECOPY DUP2 ADD PUSH1 0x40 DUP2 SWAP1 MSTORE PUSH3 0x33 SWAP2 PUSH3 0x116 JUMP JUMPDEST PUSH0 PUSH3 0x40 DUP4 DUP3 PUSH3 0x208 JUMP JUMPDEST POP PUSH1 0x1 PUSH3 0x4F DUP3 DUP3 PUSH3 0x208 JUMP JUMPDEST POP POP POP PUSH3 0x2D0 JUMP JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH0 MSTORE PUSH1 0x41 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH0 REVERT JUMPDEST PUSH0 DUP3 PUSH1 0x1F DUP4 ADD SLT PUSH3 0x7C JUMPI PUSH0 DUP1 REVERT JUMPDEST DUP2 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0x40 SHL SUB DUP1 DUP3 GT ISZERO PUSH3 0x99 JUMPI PUSH3 0x99 PUSH3 0x58 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x1F DUP4 ADD PUSH1 0x1F NOT SWAP1 DUP2 AND PUSH1 0x3F ADD AND DUP2 ADD SWAP1 DUP3 DUP3 GT DUP2 DUP4 LT OR ISZERO PUSH3 0xC4 JUMPI PUSH3 0xC4 PUSH3 0x58 JUMP JUMPDEST DUP2 PUSH1 0x40 MSTORE DUP4 DUP2 MSTORE PUSH1 0x20 SWAP3 POP DUP7 DUP4 DUP6 DUP9 ADD ADD GT ISZERO PUSH3 0xE0 JUMPI PUSH0 DUP1 REVERT JUMPDEST PUSH0 SWAP2 POP JUMPDEST DUP4 DUP3 LT ISZERO PUSH3 0x103 JUMPI DUP6 DUP3 ADD DUP4 ADD MLOAD DUP2 DUP4 ADD DUP5 ADD MSTORE SWAP1 DUP3 ADD SWAP1 PUSH3 0xE4 JUMP JUMPDEST PUSH0 SWAP4 DUP2 ADD SWAP1 SWAP3 ADD SWAP3 SWAP1 SWAP3 MSTORE SWAP5 SWAP4 POP POP POP POP JUMP JUMPDEST PUSH0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH3 0x128 JUMPI PUSH0 DUP1 REVERT JUMPDEST DUP3 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0x40 SHL SUB DUP1 DUP3 GT ISZERO PUSH3 0x13F JUMPI PUSH0 DUP1 REVERT JUMPDEST PUSH3 0x14D DUP7 DUP4 DUP8 ADD PUSH3 0x6C JUMP JUMPDEST SWAP4 POP PUSH1 0x20 DUP6 ADD MLOAD SWAP2 POP DUP1 DUP3 GT ISZERO PUSH3 0x163 JUMPI PUSH0 DUP1 REVERT JUMPDEST POP PUSH3 0x172 DUP6 DUP3 DUP7 ADD PUSH3 0x6C JUMP JUMPDEST SWAP2 POP POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH1 0x1 DUP2 DUP2 SHR SWAP1 DUP3 AND DUP1 PUSH3 0x191 JUMPI PUSH1 0x7F DUP3 AND SWAP2 POP JUMPDEST PUSH1 0x20 DUP3 LT DUP2 SUB PUSH3 0x1B0 JUMPI PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH0 MSTORE PUSH1 0x22 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH0 REVERT JUMPDEST POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x1F DUP3 GT ISZERO PUSH3 0x203 JUMPI PUSH0 DUP2 DUP2 MSTORE PUSH1 0x20 DUP2 KECCAK256 PUSH1 0x1F DUP6 ADD PUSH1 0x5 SHR DUP2 ADD PUSH1 0x20 DUP7 LT ISZERO PUSH3 0x1DE JUMPI POP DUP1 JUMPDEST PUSH1 0x1F DUP6 ADD PUSH1 0x5 SHR DUP3 ADD SWAP2 POP JUMPDEST DUP2 DUP2 LT ISZERO PUSH3 0x1FF JUMPI DUP3 DUP2 SSTORE PUSH1 0x1 ADD PUSH3 0x1EA JUMP JUMPDEST POP POP POP JUMPDEST POP POP POP JUMP JUMPDEST DUP2 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0x40 SHL SUB DUP2 GT ISZERO PUSH3 0x224 JUMPI PUSH3 0x224 PUSH3 0x58 JUMP JUMPDEST PUSH3 0x23C DUP2 PUSH3 0x235 DUP5 SLOAD PUSH3 0x17C JUMP JUMPDEST DUP5 PUSH3 0x1B6 JUMP JUMPDEST PUSH1 0x20 DUP1 PUSH1 0x1F DUP4 GT PUSH1 0x1 DUP2 EQ PUSH3 0x272 JUMPI PUSH0 DUP5 ISZERO PUSH3 0x25A JUMPI POP DUP6 DUP4 ADD MLOAD JUMPDEST PUSH0 NOT PUSH1 0x3 DUP7 SWAP1 SHL SHR NOT AND PUSH1 0x1 DUP6 SWAP1 SHL OR DUP6 SSTORE PUSH3 0x1FF JUMP JUMPDEST PUSH0 DUP6 DUP2 MSTORE PUSH1 0x20 DUP2 KECCAK256 PUSH1 0x1F NOT DUP7 AND SWAP2 JUMPDEST DUP3 DUP2 LT ISZERO PUSH3 0x2A2 JUMPI DUP9 DUP7 ADD MLOAD DUP3 SSTORE SWAP5 DUP5 ADD SWAP5 PUSH1 0x1 SWAP1 SWAP2 ADD SWAP1 DUP5 ADD PUSH3 0x281 JUMP JUMPDEST POP DUP6 DUP3 LT ISZERO PUSH3 0x2C0 JUMPI DUP8 DUP6 ADD MLOAD PUSH0 NOT PUSH1 0x3 DUP9 SWAP1 SHL PUSH1 0xF8 AND SHR NOT AND DUP2 SSTORE JUMPDEST POP POP POP POP POP PUSH1 0x1 SWAP1 DUP2 SHL ADD SWAP1 SSTORE POP JUMP JUMPDEST PUSH2 0x115D DUP1 PUSH3 0x2DE PUSH0 CODECOPY PUSH0 RETURN INVALID PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH2 0xF JUMPI PUSH0 DUP1 REVERT JUMPDEST POP PUSH1 0x4 CALLDATASIZE LT PUSH2 0xCB JUMPI PUSH0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0x6352211E GT PUSH2 0x88 JUMPI DUP1 PUSH4 0xA22CB465 GT PUSH2 0x63 JUMPI DUP1 PUSH4 0xA22CB465 EQ PUSH2 0x1AE JUMPI DUP1 PUSH4 0xB88D4FDE EQ PUSH2 0x1C1 JUMPI DUP1 PUSH4 0xC87B56DD EQ PUSH2 0x1D4 JUMPI DUP1 PUSH4 0xE985E9C5 EQ PUSH2 0x1E7 JUMPI PUSH0 DUP1 REVERT JUMPDEST DUP1 PUSH4 0x6352211E EQ PUSH2 0x172 JUMPI DUP1 PUSH4 0x70A08231 EQ PUSH2 0x185 JUMPI DUP1 PUSH4 0x95D89B41 EQ PUSH2 0x1A6 JUMPI PUSH0 DUP1 REVERT JUMPDEST DUP1 PUSH4 0x1FFC9A7 EQ PUSH2 0xCF JUMPI DUP1 PUSH4 0x6FDDE03 EQ PUSH2 0xF7 JUMPI DUP1 PUSH4 0x81812FC EQ PUSH2 0x10C JUMPI DUP1 PUSH4 0x95EA7B3 EQ PUSH2 0x137 JUMPI DUP1 PUSH4 0x23B872DD EQ PUSH2 0x14C JUMPI DUP1 PUSH4 0x42842E0E EQ PUSH2 0x15F JUMPI JUMPDEST PUSH0 DUP1 REVERT JUMPDEST PUSH2 0xE2 PUSH2 0xDD CALLDATASIZE PUSH1 0x4 PUSH2 0xCD3 JUMP JUMPDEST PUSH2 0x1FA JUMP JUMPDEST PUSH1 0x40 MLOAD SWAP1 ISZERO ISZERO DUP2 MSTORE PUSH1 0x20 ADD JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0xFF PUSH2 0x24B JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0xEE SWAP2 SWAP1 PUSH2 0xD3B JUMP JUMPDEST PUSH2 0x11F PUSH2 0x11A CALLDATASIZE PUSH1 0x4 PUSH2 0xD4D JUMP JUMPDEST PUSH2 0x2DA JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 SWAP2 AND DUP2 MSTORE PUSH1 0x20 ADD PUSH2 0xEE JUMP JUMPDEST PUSH2 0x14A PUSH2 0x145 CALLDATASIZE PUSH1 0x4 PUSH2 0xD7F JUMP JUMPDEST PUSH2 0x2FF JUMP JUMPDEST STOP JUMPDEST PUSH2 0x14A PUSH2 0x15A CALLDATASIZE PUSH1 0x4 PUSH2 0xDA7 JUMP JUMPDEST PUSH2 0x418 JUMP JUMPDEST PUSH2 0x14A PUSH2 0x16D CALLDATASIZE PUSH1 0x4 PUSH2 0xDA7 JUMP JUMPDEST PUSH2 0x449 JUMP JUMPDEST PUSH2 0x11F PUSH2 0x180 CALLDATASIZE PUSH1 0x4 PUSH2 0xD4D JUMP JUMPDEST PUSH2 0x463 JUMP JUMPDEST PUSH2 0x198 PUSH2 0x193 CALLDATASIZE PUSH1 0x4 PUSH2 0xDE0 JUMP JUMPDEST PUSH2 0x4C2 JUMP JUMPDEST PUSH1 0x40 MLOAD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH2 0xEE JUMP JUMPDEST PUSH2 0xFF PUSH2 0x546 JUMP JUMPDEST PUSH2 0x14A PUSH2 0x1BC CALLDATASIZE PUSH1 0x4 PUSH2 0xDF9 JUMP JUMPDEST PUSH2 0x555 JUMP JUMPDEST PUSH2 0x14A PUSH2 0x1CF CALLDATASIZE PUSH1 0x4 PUSH2 0xE46 JUMP JUMPDEST PUSH2 0x564 JUMP JUMPDEST PUSH2 0xFF PUSH2 0x1E2 CALLDATASIZE PUSH1 0x4 PUSH2 0xD4D JUMP JUMPDEST PUSH2 0x59C JUMP JUMPDEST PUSH2 0xE2 PUSH2 0x1F5 CALLDATASIZE PUSH1 0x4 PUSH2 0xF1B JUMP JUMPDEST PUSH2 0x60C JUMP JUMPDEST PUSH0 PUSH1 0x1 PUSH1 0x1 PUSH1 0xE0 SHL SUB NOT DUP3 AND PUSH4 0x80AC58CD PUSH1 0xE0 SHL EQ DUP1 PUSH2 0x22A JUMPI POP PUSH1 0x1 PUSH1 0x1 PUSH1 0xE0 SHL SUB NOT DUP3 AND PUSH4 0x5B5E139F PUSH1 0xE0 SHL EQ JUMPDEST DUP1 PUSH2 0x245 JUMPI POP PUSH4 0x1FFC9A7 PUSH1 0xE0 SHL PUSH1 0x1 PUSH1 0x1 PUSH1 0xE0 SHL SUB NOT DUP4 AND EQ JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x60 PUSH0 DUP1 SLOAD PUSH2 0x259 SWAP1 PUSH2 0xF4C JUMP JUMPDEST DUP1 PUSH1 0x1F ADD PUSH1 0x20 DUP1 SWAP2 DIV MUL PUSH1 0x20 ADD PUSH1 0x40 MLOAD SWAP1 DUP2 ADD PUSH1 0x40 MSTORE DUP1 SWAP3 SWAP2 SWAP1 DUP2 DUP2 MSTORE PUSH1 0x20 ADD DUP3 DUP1 SLOAD PUSH2 0x285 SWAP1 PUSH2 0xF4C JUMP JUMPDEST DUP1 ISZERO PUSH2 0x2D0 JUMPI DUP1 PUSH1 0x1F LT PUSH2 0x2A7 JUMPI PUSH2 0x100 DUP1 DUP4 SLOAD DIV MUL DUP4 MSTORE SWAP2 PUSH1 0x20 ADD SWAP2 PUSH2 0x2D0 JUMP JUMPDEST DUP3 ADD SWAP2 SWAP1 PUSH0 MSTORE PUSH1 0x20 PUSH0 KECCAK256 SWAP1 JUMPDEST DUP2 SLOAD DUP2 MSTORE SWAP1 PUSH1 0x1 ADD SWAP1 PUSH1 0x20 ADD DUP1 DUP4 GT PUSH2 0x2B3 JUMPI DUP3 SWAP1 SUB PUSH1 0x1F AND DUP3 ADD SWAP2 JUMPDEST POP POP POP POP POP SWAP1 POP SWAP1 JUMP JUMPDEST PUSH0 PUSH2 0x2E4 DUP3 PUSH2 0x639 JUMP JUMPDEST POP PUSH0 SWAP1 DUP2 MSTORE PUSH1 0x4 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND SWAP1 JUMP JUMPDEST PUSH0 PUSH2 0x309 DUP3 PUSH2 0x463 JUMP JUMPDEST SWAP1 POP DUP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP4 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND SUB PUSH2 0x37B JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x21 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x4552433732313A20617070726F76616C20746F2063757272656E74206F776E65 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x39 PUSH1 0xF9 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST CALLER PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 AND EQ DUP1 PUSH2 0x397 JUMPI POP PUSH2 0x397 DUP2 CALLER PUSH2 0x60C JUMP JUMPDEST PUSH2 0x409 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x3D PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x4552433732313A20617070726F76652063616C6C6572206973206E6F7420746F PUSH1 0x44 DUP3 ADD MSTORE PUSH32 0x6B656E206F776E6572206F7220617070726F76656420666F7220616C6C000000 PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0x372 JUMP JUMPDEST PUSH2 0x413 DUP4 DUP4 PUSH2 0x69A JUMP JUMPDEST POP POP POP JUMP JUMPDEST PUSH2 0x422 CALLER DUP3 PUSH2 0x707 JUMP JUMPDEST PUSH2 0x43E JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x372 SWAP1 PUSH2 0xF84 JUMP JUMPDEST PUSH2 0x413 DUP4 DUP4 DUP4 PUSH2 0x765 JUMP JUMPDEST PUSH2 0x413 DUP4 DUP4 DUP4 PUSH1 0x40 MLOAD DUP1 PUSH1 0x20 ADD PUSH1 0x40 MSTORE DUP1 PUSH0 DUP2 MSTORE POP PUSH2 0x564 JUMP JUMPDEST PUSH0 DUP2 DUP2 MSTORE PUSH1 0x2 PUSH1 0x20 MSTORE PUSH1 0x40 DUP2 KECCAK256 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP1 PUSH2 0x245 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x18 PUSH1 0x24 DUP3 ADD MSTORE PUSH24 0x115490CDCC8C4E881A5B9D985B1A59081D1BDAD95B881251 PUSH1 0x42 SHL PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x372 JUMP JUMPDEST PUSH0 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 AND PUSH2 0x52B JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x29 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x4552433732313A2061646472657373207A65726F206973206E6F742061207661 PUSH1 0x44 DUP3 ADD MSTORE PUSH9 0x3634B21037BBB732B9 PUSH1 0xB9 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0x372 JUMP JUMPDEST POP PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH0 SWAP1 DUP2 MSTORE PUSH1 0x3 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD SWAP1 JUMP JUMPDEST PUSH1 0x60 PUSH1 0x1 DUP1 SLOAD PUSH2 0x259 SWAP1 PUSH2 0xF4C JUMP JUMPDEST PUSH2 0x560 CALLER DUP4 DUP4 PUSH2 0x8D4 JUMP JUMPDEST POP POP JUMP JUMPDEST PUSH2 0x56E CALLER DUP4 PUSH2 0x707 JUMP JUMPDEST PUSH2 0x58A JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x372 SWAP1 PUSH2 0xF84 JUMP JUMPDEST PUSH2 0x596 DUP5 DUP5 DUP5 DUP5 PUSH2 0x9A1 JUMP JUMPDEST POP POP POP POP JUMP JUMPDEST PUSH1 0x60 PUSH2 0x5A7 DUP3 PUSH2 0x639 JUMP JUMPDEST PUSH0 PUSH2 0x5BC PUSH1 0x40 DUP1 MLOAD PUSH1 0x20 DUP2 ADD SWAP1 SWAP2 MSTORE PUSH0 DUP2 MSTORE SWAP1 JUMP JUMPDEST SWAP1 POP PUSH0 DUP2 MLOAD GT PUSH2 0x5DA JUMPI PUSH1 0x40 MLOAD DUP1 PUSH1 0x20 ADD PUSH1 0x40 MSTORE DUP1 PUSH0 DUP2 MSTORE POP PUSH2 0x605 JUMP JUMPDEST DUP1 PUSH2 0x5E4 DUP5 PUSH2 0x9D4 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x20 ADD PUSH2 0x5F5 SWAP3 SWAP2 SWAP1 PUSH2 0xFD1 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x20 DUP2 DUP4 SUB SUB DUP2 MSTORE SWAP1 PUSH1 0x40 MSTORE JUMPDEST SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP2 DUP3 AND PUSH0 SWAP1 DUP2 MSTORE PUSH1 0x5 PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 SWAP4 SWAP1 SWAP5 AND DUP3 MSTORE SWAP2 SWAP1 SWAP2 MSTORE KECCAK256 SLOAD PUSH1 0xFF AND SWAP1 JUMP JUMPDEST PUSH0 DUP2 DUP2 MSTORE PUSH1 0x2 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH2 0x697 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x18 PUSH1 0x24 DUP3 ADD MSTORE PUSH24 0x115490CDCC8C4E881A5B9D985B1A59081D1BDAD95B881251 PUSH1 0x42 SHL PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x372 JUMP JUMPDEST POP JUMP JUMPDEST PUSH0 DUP2 DUP2 MSTORE PUSH1 0x4 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 DUP1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB NOT AND PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP5 AND SWAP1 DUP2 OR SWAP1 SWAP2 SSTORE DUP2 SWAP1 PUSH2 0x6CE DUP3 PUSH2 0x463 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH32 0x8C5BE1E5EBEC7D5BD14F71427D1E84F3DD0314C0F7B2291E5B200AC8C7C3B925 PUSH1 0x40 MLOAD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG4 POP POP JUMP JUMPDEST PUSH0 DUP1 PUSH2 0x712 DUP4 PUSH2 0x463 JUMP JUMPDEST SWAP1 POP DUP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP5 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND EQ DUP1 PUSH2 0x739 JUMPI POP PUSH2 0x739 DUP2 DUP6 PUSH2 0x60C JUMP JUMPDEST DUP1 PUSH2 0x75D JUMPI POP DUP4 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH2 0x752 DUP5 PUSH2 0x2DA JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND EQ JUMPDEST SWAP5 SWAP4 POP POP POP POP JUMP JUMPDEST DUP3 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH2 0x778 DUP3 PUSH2 0x463 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND EQ PUSH2 0x79E JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x372 SWAP1 PUSH2 0xFFF JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 AND PUSH2 0x800 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x24 DUP1 DUP3 ADD MSTORE PUSH32 0x4552433732313A207472616E7366657220746F20746865207A65726F20616464 PUSH1 0x44 DUP3 ADD MSTORE PUSH4 0x72657373 PUSH1 0xE0 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0x372 JUMP JUMPDEST PUSH2 0x80D DUP4 DUP4 DUP4 PUSH1 0x1 PUSH2 0xA64 JUMP JUMPDEST DUP3 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH2 0x820 DUP3 PUSH2 0x463 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND EQ PUSH2 0x846 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x372 SWAP1 PUSH2 0xFFF JUMP JUMPDEST PUSH0 DUP2 DUP2 MSTORE PUSH1 0x4 PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 DUP1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB NOT SWAP1 DUP2 AND SWAP1 SWAP2 SSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP8 DUP2 AND DUP1 DUP7 MSTORE PUSH1 0x3 DUP6 MSTORE DUP4 DUP7 KECCAK256 DUP1 SLOAD PUSH0 NOT ADD SWAP1 SSTORE SWAP1 DUP8 AND DUP1 DUP7 MSTORE DUP4 DUP7 KECCAK256 DUP1 SLOAD PUSH1 0x1 ADD SWAP1 SSTORE DUP7 DUP7 MSTORE PUSH1 0x2 SWAP1 SWAP5 MSTORE DUP3 DUP6 KECCAK256 DUP1 SLOAD SWAP1 SWAP3 AND DUP5 OR SWAP1 SWAP2 SSTORE SWAP1 MLOAD DUP5 SWAP4 PUSH32 0xDDF252AD1BE2C89B69C2B068FC378DAA952BA7F163C4A11628F55A4DF523B3EF SWAP2 LOG4 POP POP POP JUMP JUMPDEST DUP2 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP4 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND SUB PUSH2 0x935 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x19 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x4552433732313A20617070726F766520746F2063616C6C657200000000000000 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x372 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 DUP2 AND PUSH0 DUP2 DUP2 MSTORE PUSH1 0x5 PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 SWAP5 DUP8 AND DUP1 DUP5 MSTORE SWAP5 DUP3 MSTORE SWAP2 DUP3 SWAP1 KECCAK256 DUP1 SLOAD PUSH1 0xFF NOT AND DUP7 ISZERO ISZERO SWAP1 DUP2 OR SWAP1 SWAP2 SSTORE SWAP2 MLOAD SWAP2 DUP3 MSTORE PUSH32 0x17307EAB39AB6107E8899845AD3D59BD9653F200F220920489CA2B5937696C31 SWAP2 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 POP POP POP JUMP JUMPDEST PUSH2 0x9AC DUP5 DUP5 DUP5 PUSH2 0x765 JUMP JUMPDEST PUSH2 0x9B8 DUP5 DUP5 DUP5 DUP5 PUSH2 0xAEA JUMP JUMPDEST PUSH2 0x596 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x372 SWAP1 PUSH2 0x1044 JUMP JUMPDEST PUSH1 0x60 PUSH0 PUSH2 0x9E0 DUP4 PUSH2 0xBE7 JUMP JUMPDEST PUSH1 0x1 ADD SWAP1 POP PUSH0 DUP2 PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0x9FF JUMPI PUSH2 0x9FF PUSH2 0xE32 JUMP JUMPDEST PUSH1 0x40 MLOAD SWAP1 DUP1 DUP3 MSTORE DUP1 PUSH1 0x1F ADD PUSH1 0x1F NOT AND PUSH1 0x20 ADD DUP3 ADD PUSH1 0x40 MSTORE DUP1 ISZERO PUSH2 0xA29 JUMPI PUSH1 0x20 DUP3 ADD DUP2 DUP1 CALLDATASIZE DUP4 CALLDATACOPY ADD SWAP1 POP JUMPDEST POP SWAP1 POP DUP2 DUP2 ADD PUSH1 0x20 ADD JUMPDEST PUSH0 NOT ADD PUSH16 0x181899199A1A9B1B9C1CB0B131B232B3 PUSH1 0x81 SHL PUSH1 0xA DUP7 MOD BYTE DUP2 MSTORE8 PUSH1 0xA DUP6 DIV SWAP5 POP DUP5 PUSH2 0xA33 JUMPI POP SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x1 DUP2 GT ISZERO PUSH2 0x596 JUMPI PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP5 AND ISZERO PUSH2 0xAA9 JUMPI PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP5 AND PUSH0 SWAP1 DUP2 MSTORE PUSH1 0x3 PUSH1 0x20 MSTORE PUSH1 0x40 DUP2 KECCAK256 DUP1 SLOAD DUP4 SWAP3 SWAP1 PUSH2 0xAA3 SWAP1 DUP5 SWAP1 PUSH2 0x10AA JUMP JUMPDEST SWAP1 SWAP2 SSTORE POP POP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 AND ISZERO PUSH2 0x596 JUMPI PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 AND PUSH0 SWAP1 DUP2 MSTORE PUSH1 0x3 PUSH1 0x20 MSTORE PUSH1 0x40 DUP2 KECCAK256 DUP1 SLOAD DUP4 SWAP3 SWAP1 PUSH2 0xADF SWAP1 DUP5 SWAP1 PUSH2 0x10BD JUMP JUMPDEST SWAP1 SWAP2 SSTORE POP POP POP POP POP POP JUMP JUMPDEST PUSH0 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP5 AND EXTCODESIZE ISZERO PUSH2 0xBDC JUMPI PUSH1 0x40 MLOAD PUSH4 0xA85BD01 PUSH1 0xE1 SHL DUP2 MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP6 AND SWAP1 PUSH4 0x150B7A02 SWAP1 PUSH2 0xB2D SWAP1 CALLER SWAP1 DUP10 SWAP1 DUP9 SWAP1 DUP9 SWAP1 PUSH1 0x4 ADD PUSH2 0x10D0 JUMP JUMPDEST PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH0 DUP8 GAS CALL SWAP3 POP POP POP DUP1 ISZERO PUSH2 0xB67 JUMPI POP PUSH1 0x40 DUP1 MLOAD PUSH1 0x1F RETURNDATASIZE SWAP1 DUP2 ADD PUSH1 0x1F NOT AND DUP3 ADD SWAP1 SWAP3 MSTORE PUSH2 0xB64 SWAP2 DUP2 ADD SWAP1 PUSH2 0x110C JUMP JUMPDEST PUSH1 0x1 JUMPDEST PUSH2 0xBC2 JUMPI RETURNDATASIZE DUP1 DUP1 ISZERO PUSH2 0xB94 JUMPI PUSH1 0x40 MLOAD SWAP2 POP PUSH1 0x1F NOT PUSH1 0x3F RETURNDATASIZE ADD AND DUP3 ADD PUSH1 0x40 MSTORE RETURNDATASIZE DUP3 MSTORE RETURNDATASIZE PUSH0 PUSH1 0x20 DUP5 ADD RETURNDATACOPY PUSH2 0xB99 JUMP JUMPDEST PUSH1 0x60 SWAP2 POP JUMPDEST POP DUP1 MLOAD PUSH0 SUB PUSH2 0xBBA JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x372 SWAP1 PUSH2 0x1044 JUMP JUMPDEST DUP1 MLOAD DUP2 PUSH1 0x20 ADD REVERT JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xE0 SHL SUB NOT AND PUSH4 0xA85BD01 PUSH1 0xE1 SHL EQ SWAP1 POP PUSH2 0x75D JUMP JUMPDEST POP PUSH1 0x1 SWAP5 SWAP4 POP POP POP POP JUMP JUMPDEST PUSH0 DUP1 PUSH19 0x184F03E93FF9F4DAA797ED6E38ED64BF6A1F01 PUSH1 0x40 SHL DUP4 LT PUSH2 0xC25 JUMPI PUSH19 0x184F03E93FF9F4DAA797ED6E38ED64BF6A1F01 PUSH1 0x40 SHL DUP4 DIV SWAP3 POP PUSH1 0x40 ADD JUMPDEST PUSH14 0x4EE2D6D415B85ACEF8100000000 DUP4 LT PUSH2 0xC51 JUMPI PUSH14 0x4EE2D6D415B85ACEF8100000000 DUP4 DIV SWAP3 POP PUSH1 0x20 ADD JUMPDEST PUSH7 0x2386F26FC10000 DUP4 LT PUSH2 0xC6F JUMPI PUSH7 0x2386F26FC10000 DUP4 DIV SWAP3 POP PUSH1 0x10 ADD JUMPDEST PUSH4 0x5F5E100 DUP4 LT PUSH2 0xC87 JUMPI PUSH4 0x5F5E100 DUP4 DIV SWAP3 POP PUSH1 0x8 ADD JUMPDEST PUSH2 0x2710 DUP4 LT PUSH2 0xC9B JUMPI PUSH2 0x2710 DUP4 DIV SWAP3 POP PUSH1 0x4 ADD JUMPDEST PUSH1 0x64 DUP4 LT PUSH2 0xCAD JUMPI PUSH1 0x64 DUP4 DIV SWAP3 POP PUSH1 0x2 ADD JUMPDEST PUSH1 0xA DUP4 LT PUSH2 0x245 JUMPI PUSH1 0x1 ADD SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xE0 SHL SUB NOT DUP2 AND DUP2 EQ PUSH2 0x697 JUMPI PUSH0 DUP1 REVERT JUMPDEST PUSH0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0xCE3 JUMPI PUSH0 DUP1 REVERT JUMPDEST DUP2 CALLDATALOAD PUSH2 0x605 DUP2 PUSH2 0xCBE JUMP JUMPDEST PUSH0 JUMPDEST DUP4 DUP2 LT ISZERO PUSH2 0xD08 JUMPI DUP2 DUP2 ADD MLOAD DUP4 DUP3 ADD MSTORE PUSH1 0x20 ADD PUSH2 0xCF0 JUMP JUMPDEST POP POP PUSH0 SWAP2 ADD MSTORE JUMP JUMPDEST PUSH0 DUP2 MLOAD DUP1 DUP5 MSTORE PUSH2 0xD27 DUP2 PUSH1 0x20 DUP7 ADD PUSH1 0x20 DUP7 ADD PUSH2 0xCEE JUMP JUMPDEST PUSH1 0x1F ADD PUSH1 0x1F NOT AND SWAP3 SWAP1 SWAP3 ADD PUSH1 0x20 ADD SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x20 DUP2 MSTORE PUSH0 PUSH2 0x605 PUSH1 0x20 DUP4 ADD DUP5 PUSH2 0xD10 JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0xD5D JUMPI PUSH0 DUP1 REVERT JUMPDEST POP CALLDATALOAD SWAP2 SWAP1 POP JUMP JUMPDEST DUP1 CALLDATALOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND DUP2 EQ PUSH2 0xD7A JUMPI PUSH0 DUP1 REVERT JUMPDEST SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0xD90 JUMPI PUSH0 DUP1 REVERT JUMPDEST PUSH2 0xD99 DUP4 PUSH2 0xD64 JUMP JUMPDEST SWAP5 PUSH1 0x20 SWAP4 SWAP1 SWAP4 ADD CALLDATALOAD SWAP4 POP POP POP JUMP JUMPDEST PUSH0 DUP1 PUSH0 PUSH1 0x60 DUP5 DUP7 SUB SLT ISZERO PUSH2 0xDB9 JUMPI PUSH0 DUP1 REVERT JUMPDEST PUSH2 0xDC2 DUP5 PUSH2 0xD64 JUMP JUMPDEST SWAP3 POP PUSH2 0xDD0 PUSH1 0x20 DUP6 ADD PUSH2 0xD64 JUMP JUMPDEST SWAP2 POP PUSH1 0x40 DUP5 ADD CALLDATALOAD SWAP1 POP SWAP3 POP SWAP3 POP SWAP3 JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0xDF0 JUMPI PUSH0 DUP1 REVERT JUMPDEST PUSH2 0x605 DUP3 PUSH2 0xD64 JUMP JUMPDEST PUSH0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0xE0A JUMPI PUSH0 DUP1 REVERT JUMPDEST PUSH2 0xE13 DUP4 PUSH2 0xD64 JUMP JUMPDEST SWAP2 POP PUSH1 0x20 DUP4 ADD CALLDATALOAD DUP1 ISZERO ISZERO DUP2 EQ PUSH2 0xE27 JUMPI PUSH0 DUP1 REVERT JUMPDEST DUP1 SWAP2 POP POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH0 MSTORE PUSH1 0x41 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH0 REVERT JUMPDEST PUSH0 DUP1 PUSH0 DUP1 PUSH1 0x80 DUP6 DUP8 SUB SLT ISZERO PUSH2 0xE59 JUMPI PUSH0 DUP1 REVERT JUMPDEST PUSH2 0xE62 DUP6 PUSH2 0xD64 JUMP JUMPDEST SWAP4 POP PUSH2 0xE70 PUSH1 0x20 DUP7 ADD PUSH2 0xD64 JUMP JUMPDEST SWAP3 POP PUSH1 0x40 DUP6 ADD CALLDATALOAD SWAP2 POP PUSH1 0x60 DUP6 ADD CALLDATALOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP1 DUP3 GT ISZERO PUSH2 0xE93 JUMPI PUSH0 DUP1 REVERT JUMPDEST DUP2 DUP8 ADD SWAP2 POP DUP8 PUSH1 0x1F DUP4 ADD SLT PUSH2 0xEA6 JUMPI PUSH0 DUP1 REVERT JUMPDEST DUP2 CALLDATALOAD DUP2 DUP2 GT ISZERO PUSH2 0xEB8 JUMPI PUSH2 0xEB8 PUSH2 0xE32 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x1F DUP3 ADD PUSH1 0x1F NOT SWAP1 DUP2 AND PUSH1 0x3F ADD AND DUP2 ADD SWAP1 DUP4 DUP3 GT DUP2 DUP4 LT OR ISZERO PUSH2 0xEE0 JUMPI PUSH2 0xEE0 PUSH2 0xE32 JUMP JUMPDEST DUP2 PUSH1 0x40 MSTORE DUP3 DUP2 MSTORE DUP11 PUSH1 0x20 DUP5 DUP8 ADD ADD GT ISZERO PUSH2 0xEF8 JUMPI PUSH0 DUP1 REVERT JUMPDEST DUP3 PUSH1 0x20 DUP7 ADD PUSH1 0x20 DUP4 ADD CALLDATACOPY PUSH0 PUSH1 0x20 DUP5 DUP4 ADD ADD MSTORE DUP1 SWAP6 POP POP POP POP POP POP SWAP3 SWAP6 SWAP2 SWAP5 POP SWAP3 POP JUMP JUMPDEST PUSH0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0xF2C JUMPI PUSH0 DUP1 REVERT JUMPDEST PUSH2 0xF35 DUP4 PUSH2 0xD64 JUMP JUMPDEST SWAP2 POP PUSH2 0xF43 PUSH1 0x20 DUP5 ADD PUSH2 0xD64 JUMP JUMPDEST SWAP1 POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH1 0x1 DUP2 DUP2 SHR SWAP1 DUP3 AND DUP1 PUSH2 0xF60 JUMPI PUSH1 0x7F DUP3 AND SWAP2 POP JUMPDEST PUSH1 0x20 DUP3 LT DUP2 SUB PUSH2 0xF7E JUMPI PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH0 MSTORE PUSH1 0x22 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH0 REVERT JUMPDEST POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x20 DUP1 DUP3 MSTORE PUSH1 0x2D SWAP1 DUP3 ADD MSTORE PUSH32 0x4552433732313A2063616C6C6572206973206E6F7420746F6B656E206F776E65 PUSH1 0x40 DUP3 ADD MSTORE PUSH13 0x1C881BDC88185C1C1C9BDD9959 PUSH1 0x9A SHL PUSH1 0x60 DUP3 ADD MSTORE PUSH1 0x80 ADD SWAP1 JUMP JUMPDEST PUSH0 DUP4 MLOAD PUSH2 0xFE2 DUP2 DUP5 PUSH1 0x20 DUP9 ADD PUSH2 0xCEE JUMP JUMPDEST DUP4 MLOAD SWAP1 DUP4 ADD SWAP1 PUSH2 0xFF6 DUP2 DUP4 PUSH1 0x20 DUP9 ADD PUSH2 0xCEE JUMP JUMPDEST ADD SWAP5 SWAP4 POP POP POP POP JUMP JUMPDEST PUSH1 0x20 DUP1 DUP3 MSTORE PUSH1 0x25 SWAP1 DUP3 ADD MSTORE PUSH32 0x4552433732313A207472616E736665722066726F6D20696E636F727265637420 PUSH1 0x40 DUP3 ADD MSTORE PUSH5 0x37BBB732B9 PUSH1 0xD9 SHL PUSH1 0x60 DUP3 ADD MSTORE PUSH1 0x80 ADD SWAP1 JUMP JUMPDEST PUSH1 0x20 DUP1 DUP3 MSTORE PUSH1 0x32 SWAP1 DUP3 ADD MSTORE PUSH32 0x4552433732313A207472616E7366657220746F206E6F6E204552433732315265 PUSH1 0x40 DUP3 ADD MSTORE PUSH18 0x31B2B4BB32B91034B6B83632B6B2B73A32B9 PUSH1 0x71 SHL PUSH1 0x60 DUP3 ADD MSTORE PUSH1 0x80 ADD SWAP1 JUMP JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH0 MSTORE PUSH1 0x11 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH0 REVERT JUMPDEST DUP2 DUP2 SUB DUP2 DUP2 GT ISZERO PUSH2 0x245 JUMPI PUSH2 0x245 PUSH2 0x1096 JUMP JUMPDEST DUP1 DUP3 ADD DUP1 DUP3 GT ISZERO PUSH2 0x245 JUMPI PUSH2 0x245 PUSH2 0x1096 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP6 DUP2 AND DUP3 MSTORE DUP5 AND PUSH1 0x20 DUP3 ADD MSTORE PUSH1 0x40 DUP2 ADD DUP4 SWAP1 MSTORE PUSH1 0x80 PUSH1 0x60 DUP3 ADD DUP2 SWAP1 MSTORE PUSH0 SWAP1 PUSH2 0x1102 SWAP1 DUP4 ADD DUP5 PUSH2 0xD10 JUMP JUMPDEST SWAP7 SWAP6 POP POP POP POP POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x111C JUMPI PUSH0 DUP1 REVERT JUMPDEST DUP2 MLOAD PUSH2 0x605 DUP2 PUSH2 0xCBE JUMP INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 DUP7 PUSH9 0xB10ADE2CE4E39ACC04 0x4F PUSH30 0xBEFC7EDADAAE5A1FBB762E25BF9B747808BB8464736F6C63430008150033 ",
							"sourceMap": "628:16327:0:-:0;;;1390:113;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;1456:5;:13;1464:5;1456;:13;:::i;:::-;-1:-1:-1;1479:7:0;:17;1489:7;1479;:17;:::i;:::-;;1390:113;;628:16327;;14:127:12;75:10;70:3;66:20;63:1;56:31;106:4;103:1;96:15;130:4;127:1;120:15;146:840;200:5;253:3;246:4;238:6;234:17;230:27;220:55;;271:1;268;261:12;220:55;294:13;;-1:-1:-1;;;;;356:10:12;;;353:36;;;369:18;;:::i;:::-;444:2;438:9;412:2;498:13;;-1:-1:-1;;494:22:12;;;518:2;490:31;486:40;474:53;;;542:18;;;562:22;;;539:46;536:72;;;588:18;;:::i;:::-;628:10;624:2;617:22;663:2;655:6;648:18;685:4;675:14;;730:3;725:2;720;712:6;708:15;704:24;701:33;698:53;;;747:1;744;737:12;698:53;769:1;760:10;;779:133;793:2;790:1;787:9;779:133;;;881:14;;;877:23;;871:30;850:14;;;846:23;;839:63;804:10;;;;779:133;;;954:1;932:15;;;928:24;;;921:35;;;;936:6;146:840;-1:-1:-1;;;;146:840:12:o;991:562::-;1090:6;1098;1151:2;1139:9;1130:7;1126:23;1122:32;1119:52;;;1167:1;1164;1157:12;1119:52;1194:16;;-1:-1:-1;;;;;1259:14:12;;;1256:34;;;1286:1;1283;1276:12;1256:34;1309:61;1362:7;1353:6;1342:9;1338:22;1309:61;:::i;:::-;1299:71;;1416:2;1405:9;1401:18;1395:25;1379:41;;1445:2;1435:8;1432:16;1429:36;;;1461:1;1458;1451:12;1429:36;;1484:63;1539:7;1528:8;1517:9;1513:24;1484:63;:::i;:::-;1474:73;;;991:562;;;;;:::o;1558:380::-;1637:1;1633:12;;;;1680;;;1701:61;;1755:4;1747:6;1743:17;1733:27;;1701:61;1808:2;1800:6;1797:14;1777:18;1774:38;1771:161;;1854:10;1849:3;1845:20;1842:1;1835:31;1889:4;1886:1;1879:15;1917:4;1914:1;1907:15;1771:161;;1558:380;;;:::o;2069:545::-;2171:2;2166:3;2163:11;2160:448;;;2207:1;2232:5;2228:2;2221:17;2277:4;2273:2;2263:19;2347:2;2335:10;2331:19;2328:1;2324:27;2318:4;2314:38;2383:4;2371:10;2368:20;2365:47;;;-1:-1:-1;2406:4:12;2365:47;2461:2;2456:3;2452:12;2449:1;2445:20;2439:4;2435:31;2425:41;;2516:82;2534:2;2527:5;2524:13;2516:82;;;2579:17;;;2560:1;2549:13;2516:82;;;2520:3;;;2160:448;2069:545;;;:::o;2790:1352::-;2910:10;;-1:-1:-1;;;;;2932:30:12;;2929:56;;;2965:18;;:::i;:::-;2994:97;3084:6;3044:38;3076:4;3070:11;3044:38;:::i;:::-;3038:4;2994:97;:::i;:::-;3146:4;;3210:2;3199:14;;3227:1;3222:663;;;;3929:1;3946:6;3943:89;;;-1:-1:-1;3998:19:12;;;3992:26;3943:89;-1:-1:-1;;2747:1:12;2743:11;;;2739:24;2735:29;2725:40;2771:1;2767:11;;;2722:57;4045:81;;3192:944;;3222:663;2016:1;2009:14;;;2053:4;2040:18;;-1:-1:-1;;3258:20:12;;;3376:236;3390:7;3387:1;3384:14;3376:236;;;3479:19;;;3473:26;3458:42;;3571:27;;;;3539:1;3527:14;;;;3406:19;;3376:236;;;3380:3;3640:6;3631:7;3628:19;3625:201;;;3701:19;;;3695:26;-1:-1:-1;;3784:1:12;3780:14;;;3796:3;3776:24;3772:37;3768:42;3753:58;3738:74;;3625:201;-1:-1:-1;;;;;3872:1:12;3856:14;;;3852:22;3839:36;;-1:-1:-1;2790:1352:12:o;:::-;628:16327:0;;;;;;"
						},
						"deployedBytecode": {
							"functionDebugData": {
								"@_afterTokenTransfer_943": {
									"entryPoint": null,
									"id": 943,
									"parameterSlots": 4,
									"returnSlots": 0
								},
								"@_approve_776": {
									"entryPoint": 1690,
									"id": 776,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"@_baseURI_213": {
									"entryPoint": null,
									"id": 213,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"@_beforeTokenTransfer_930": {
									"entryPoint": 2660,
									"id": 930,
									"parameterSlots": 4,
									"returnSlots": 0
								},
								"@_checkOnERC721Received_884": {
									"entryPoint": 2794,
									"id": 884,
									"parameterSlots": 4,
									"returnSlots": 1
								},
								"@_exists_445": {
									"entryPoint": null,
									"id": 445,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"@_isApprovedOrOwner_479": {
									"entryPoint": 1799,
									"id": 479,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"@_msgSender_1447": {
									"entryPoint": null,
									"id": 1447,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"@_ownerOf_427": {
									"entryPoint": null,
									"id": 427,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"@_requireMinted_822": {
									"entryPoint": 1593,
									"id": 822,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"@_safeTransfer_414": {
									"entryPoint": 2465,
									"id": 414,
									"parameterSlots": 4,
									"returnSlots": 0
								},
								"@_setApprovalForAll_808": {
									"entryPoint": 2260,
									"id": 808,
									"parameterSlots": 3,
									"returnSlots": 0
								},
								"@_transfer_752": {
									"entryPoint": 1893,
									"id": 752,
									"parameterSlots": 3,
									"returnSlots": 0
								},
								"@approve_256": {
									"entryPoint": 767,
									"id": 256,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"@balanceOf_117": {
									"entryPoint": 1218,
									"id": 117,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"@getApproved_274": {
									"entryPoint": 730,
									"id": 274,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"@isApprovedForAll_309": {
									"entryPoint": 1548,
									"id": 309,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"@isContract_1123": {
									"entryPoint": null,
									"id": 1123,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"@log10_2444": {
									"entryPoint": 3047,
									"id": 2444,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"@name_155": {
									"entryPoint": 587,
									"id": 155,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"@ownerOf_145": {
									"entryPoint": 1123,
									"id": 145,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"@safeTransferFrom_355": {
									"entryPoint": 1097,
									"id": 355,
									"parameterSlots": 3,
									"returnSlots": 0
								},
								"@safeTransferFrom_385": {
									"entryPoint": 1380,
									"id": 385,
									"parameterSlots": 4,
									"returnSlots": 0
								},
								"@setApprovalForAll_291": {
									"entryPoint": 1365,
									"id": 291,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"@supportsInterface_1729": {
									"entryPoint": null,
									"id": 1729,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"@supportsInterface_93": {
									"entryPoint": 506,
									"id": 93,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"@symbol_165": {
									"entryPoint": 1350,
									"id": 165,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"@toString_1589": {
									"entryPoint": 2516,
									"id": 1589,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"@tokenURI_204": {
									"entryPoint": 1436,
									"id": 204,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"@transferFrom_336": {
									"entryPoint": 1048,
									"id": 336,
									"parameterSlots": 3,
									"returnSlots": 0
								},
								"abi_decode_address": {
									"entryPoint": 3428,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_decode_tuple_t_address": {
									"entryPoint": 3552,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_tuple_t_addresst_address": {
									"entryPoint": 3867,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 2
								},
								"abi_decode_tuple_t_addresst_addresst_uint256": {
									"entryPoint": 3495,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 3
								},
								"abi_decode_tuple_t_addresst_addresst_uint256t_bytes_memory_ptr": {
									"entryPoint": 3654,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 4
								},
								"abi_decode_tuple_t_addresst_bool": {
									"entryPoint": 3577,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 2
								},
								"abi_decode_tuple_t_addresst_uint256": {
									"entryPoint": 3455,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 2
								},
								"abi_decode_tuple_t_bytes4": {
									"entryPoint": 3283,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_tuple_t_bytes4_fromMemory": {
									"entryPoint": 4364,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_tuple_t_uint256": {
									"entryPoint": 3405,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_string": {
									"entryPoint": 3344,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_tuple_packed_t_string_memory_ptr_t_string_memory_ptr__to_t_string_memory_ptr_t_string_memory_ptr__nonPadded_inplace_fromStack_reversed": {
									"entryPoint": 4049,
									"id": null,
									"parameterSlots": 3,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_address__to_t_address__fromStack_reversed": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_address_t_address_t_uint256_t_bytes_memory_ptr__to_t_address_t_address_t_uint256_t_bytes_memory_ptr__fromStack_reversed": {
									"entryPoint": 4304,
									"id": null,
									"parameterSlots": 5,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_bool__to_t_bool__fromStack_reversed": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_string_memory_ptr__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": 3387,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_12a8e5623d251e191fe4a291d9a59bcc01a4db7a1f5c20fc8de44358c18308af__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": 3972,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_1e766a06da43a53d0f4c380e06e5a342e14d5af1bf8501996c844905530ca84e__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": 4164,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_277f8ee9d5b4fc3c4149386f24de0fc1bbc63a8210e2197bfd1c0376a2ac5f48__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": 4095,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_455fea98ea03c32d7dd1a6f1426917d80529bf47b3ccbde74e7206e889e709f4__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_45fe4329685be5ecd250fd0e6a25aea0ea4d0e30fb6a73c118b95749e6d70d05__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_6d05c90094f31cfeb8f0eb86f0a513af3f7f8992991fbde41b08aa7960677159__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_b08d2b0fec7cc108ab049809a8beb42779d969a49299d0c317c907d9db22974f__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_b51b4875eede07862961e8f9365c6749f5fe55c6ee5d7a9e42b6912ad0b15942__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_c6e14a63ffb144eeef7cce6988e5dce07c60a7e0a7b1ef25dbe18c61483e0a83__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"checked_add_t_uint256": {
									"entryPoint": 4285,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"checked_sub_t_uint256": {
									"entryPoint": 4266,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"copy_memory_to_memory_with_cleanup": {
									"entryPoint": 3310,
									"id": null,
									"parameterSlots": 3,
									"returnSlots": 0
								},
								"extract_byte_array_length": {
									"entryPoint": 3916,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"panic_error_0x11": {
									"entryPoint": 4246,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"panic_error_0x12": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"panic_error_0x41": {
									"entryPoint": 3634,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"validator_revert_bytes4": {
									"entryPoint": 3262,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								}
							},
							"generatedSources": [
								{
									"ast": {
										"nativeSrc": "0:10527:12",
										"nodeType": "YulBlock",
										"src": "0:10527:12",
										"statements": [
											{
												"nativeSrc": "6:3:12",
												"nodeType": "YulBlock",
												"src": "6:3:12",
												"statements": []
											},
											{
												"body": {
													"nativeSrc": "58:87:12",
													"nodeType": "YulBlock",
													"src": "58:87:12",
													"statements": [
														{
															"body": {
																"nativeSrc": "123:16:12",
																"nodeType": "YulBlock",
																"src": "123:16:12",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nativeSrc": "132:1:12",
																					"nodeType": "YulLiteral",
																					"src": "132:1:12",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "135:1:12",
																					"nodeType": "YulLiteral",
																					"src": "135:1:12",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nativeSrc": "125:6:12",
																				"nodeType": "YulIdentifier",
																				"src": "125:6:12"
																			},
																			"nativeSrc": "125:12:12",
																			"nodeType": "YulFunctionCall",
																			"src": "125:12:12"
																		},
																		"nativeSrc": "125:12:12",
																		"nodeType": "YulExpressionStatement",
																		"src": "125:12:12"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nativeSrc": "81:5:12",
																				"nodeType": "YulIdentifier",
																				"src": "81:5:12"
																			},
																			{
																				"arguments": [
																					{
																						"name": "value",
																						"nativeSrc": "92:5:12",
																						"nodeType": "YulIdentifier",
																						"src": "92:5:12"
																					},
																					{
																						"arguments": [
																							{
																								"kind": "number",
																								"nativeSrc": "103:3:12",
																								"nodeType": "YulLiteral",
																								"src": "103:3:12",
																								"type": "",
																								"value": "224"
																							},
																							{
																								"kind": "number",
																								"nativeSrc": "108:10:12",
																								"nodeType": "YulLiteral",
																								"src": "108:10:12",
																								"type": "",
																								"value": "0xffffffff"
																							}
																						],
																						"functionName": {
																							"name": "shl",
																							"nativeSrc": "99:3:12",
																							"nodeType": "YulIdentifier",
																							"src": "99:3:12"
																						},
																						"nativeSrc": "99:20:12",
																						"nodeType": "YulFunctionCall",
																						"src": "99:20:12"
																					}
																				],
																				"functionName": {
																					"name": "and",
																					"nativeSrc": "88:3:12",
																					"nodeType": "YulIdentifier",
																					"src": "88:3:12"
																				},
																				"nativeSrc": "88:32:12",
																				"nodeType": "YulFunctionCall",
																				"src": "88:32:12"
																			}
																		],
																		"functionName": {
																			"name": "eq",
																			"nativeSrc": "78:2:12",
																			"nodeType": "YulIdentifier",
																			"src": "78:2:12"
																		},
																		"nativeSrc": "78:43:12",
																		"nodeType": "YulFunctionCall",
																		"src": "78:43:12"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nativeSrc": "71:6:12",
																	"nodeType": "YulIdentifier",
																	"src": "71:6:12"
																},
																"nativeSrc": "71:51:12",
																"nodeType": "YulFunctionCall",
																"src": "71:51:12"
															},
															"nativeSrc": "68:71:12",
															"nodeType": "YulIf",
															"src": "68:71:12"
														}
													]
												},
												"name": "validator_revert_bytes4",
												"nativeSrc": "14:131:12",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "47:5:12",
														"nodeType": "YulTypedName",
														"src": "47:5:12",
														"type": ""
													}
												],
												"src": "14:131:12"
											},
											{
												"body": {
													"nativeSrc": "219:176:12",
													"nodeType": "YulBlock",
													"src": "219:176:12",
													"statements": [
														{
															"body": {
																"nativeSrc": "265:16:12",
																"nodeType": "YulBlock",
																"src": "265:16:12",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nativeSrc": "274:1:12",
																					"nodeType": "YulLiteral",
																					"src": "274:1:12",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "277:1:12",
																					"nodeType": "YulLiteral",
																					"src": "277:1:12",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nativeSrc": "267:6:12",
																				"nodeType": "YulIdentifier",
																				"src": "267:6:12"
																			},
																			"nativeSrc": "267:12:12",
																			"nodeType": "YulFunctionCall",
																			"src": "267:12:12"
																		},
																		"nativeSrc": "267:12:12",
																		"nodeType": "YulExpressionStatement",
																		"src": "267:12:12"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nativeSrc": "240:7:12",
																				"nodeType": "YulIdentifier",
																				"src": "240:7:12"
																			},
																			{
																				"name": "headStart",
																				"nativeSrc": "249:9:12",
																				"nodeType": "YulIdentifier",
																				"src": "249:9:12"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "236:3:12",
																			"nodeType": "YulIdentifier",
																			"src": "236:3:12"
																		},
																		"nativeSrc": "236:23:12",
																		"nodeType": "YulFunctionCall",
																		"src": "236:23:12"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "261:2:12",
																		"nodeType": "YulLiteral",
																		"src": "261:2:12",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nativeSrc": "232:3:12",
																	"nodeType": "YulIdentifier",
																	"src": "232:3:12"
																},
																"nativeSrc": "232:32:12",
																"nodeType": "YulFunctionCall",
																"src": "232:32:12"
															},
															"nativeSrc": "229:52:12",
															"nodeType": "YulIf",
															"src": "229:52:12"
														},
														{
															"nativeSrc": "290:36:12",
															"nodeType": "YulVariableDeclaration",
															"src": "290:36:12",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "316:9:12",
																		"nodeType": "YulIdentifier",
																		"src": "316:9:12"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nativeSrc": "303:12:12",
																	"nodeType": "YulIdentifier",
																	"src": "303:12:12"
																},
																"nativeSrc": "303:23:12",
																"nodeType": "YulFunctionCall",
																"src": "303:23:12"
															},
															"variables": [
																{
																	"name": "value",
																	"nativeSrc": "294:5:12",
																	"nodeType": "YulTypedName",
																	"src": "294:5:12",
																	"type": ""
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "359:5:12",
																		"nodeType": "YulIdentifier",
																		"src": "359:5:12"
																	}
																],
																"functionName": {
																	"name": "validator_revert_bytes4",
																	"nativeSrc": "335:23:12",
																	"nodeType": "YulIdentifier",
																	"src": "335:23:12"
																},
																"nativeSrc": "335:30:12",
																"nodeType": "YulFunctionCall",
																"src": "335:30:12"
															},
															"nativeSrc": "335:30:12",
															"nodeType": "YulExpressionStatement",
															"src": "335:30:12"
														},
														{
															"nativeSrc": "374:15:12",
															"nodeType": "YulAssignment",
															"src": "374:15:12",
															"value": {
																"name": "value",
																"nativeSrc": "384:5:12",
																"nodeType": "YulIdentifier",
																"src": "384:5:12"
															},
															"variableNames": [
																{
																	"name": "value0",
																	"nativeSrc": "374:6:12",
																	"nodeType": "YulIdentifier",
																	"src": "374:6:12"
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_bytes4",
												"nativeSrc": "150:245:12",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "185:9:12",
														"nodeType": "YulTypedName",
														"src": "185:9:12",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nativeSrc": "196:7:12",
														"nodeType": "YulTypedName",
														"src": "196:7:12",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nativeSrc": "208:6:12",
														"nodeType": "YulTypedName",
														"src": "208:6:12",
														"type": ""
													}
												],
												"src": "150:245:12"
											},
											{
												"body": {
													"nativeSrc": "495:92:12",
													"nodeType": "YulBlock",
													"src": "495:92:12",
													"statements": [
														{
															"nativeSrc": "505:26:12",
															"nodeType": "YulAssignment",
															"src": "505:26:12",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "517:9:12",
																		"nodeType": "YulIdentifier",
																		"src": "517:9:12"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "528:2:12",
																		"nodeType": "YulLiteral",
																		"src": "528:2:12",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "513:3:12",
																	"nodeType": "YulIdentifier",
																	"src": "513:3:12"
																},
																"nativeSrc": "513:18:12",
																"nodeType": "YulFunctionCall",
																"src": "513:18:12"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "505:4:12",
																	"nodeType": "YulIdentifier",
																	"src": "505:4:12"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "547:9:12",
																		"nodeType": "YulIdentifier",
																		"src": "547:9:12"
																	},
																	{
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "value0",
																						"nativeSrc": "572:6:12",
																						"nodeType": "YulIdentifier",
																						"src": "572:6:12"
																					}
																				],
																				"functionName": {
																					"name": "iszero",
																					"nativeSrc": "565:6:12",
																					"nodeType": "YulIdentifier",
																					"src": "565:6:12"
																				},
																				"nativeSrc": "565:14:12",
																				"nodeType": "YulFunctionCall",
																				"src": "565:14:12"
																			}
																		],
																		"functionName": {
																			"name": "iszero",
																			"nativeSrc": "558:6:12",
																			"nodeType": "YulIdentifier",
																			"src": "558:6:12"
																		},
																		"nativeSrc": "558:22:12",
																		"nodeType": "YulFunctionCall",
																		"src": "558:22:12"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "540:6:12",
																	"nodeType": "YulIdentifier",
																	"src": "540:6:12"
																},
																"nativeSrc": "540:41:12",
																"nodeType": "YulFunctionCall",
																"src": "540:41:12"
															},
															"nativeSrc": "540:41:12",
															"nodeType": "YulExpressionStatement",
															"src": "540:41:12"
														}
													]
												},
												"name": "abi_encode_tuple_t_bool__to_t_bool__fromStack_reversed",
												"nativeSrc": "400:187:12",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "464:9:12",
														"nodeType": "YulTypedName",
														"src": "464:9:12",
														"type": ""
													},
													{
														"name": "value0",
														"nativeSrc": "475:6:12",
														"nodeType": "YulTypedName",
														"src": "475:6:12",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "486:4:12",
														"nodeType": "YulTypedName",
														"src": "486:4:12",
														"type": ""
													}
												],
												"src": "400:187:12"
											},
											{
												"body": {
													"nativeSrc": "658:184:12",
													"nodeType": "YulBlock",
													"src": "658:184:12",
													"statements": [
														{
															"nativeSrc": "668:10:12",
															"nodeType": "YulVariableDeclaration",
															"src": "668:10:12",
															"value": {
																"kind": "number",
																"nativeSrc": "677:1:12",
																"nodeType": "YulLiteral",
																"src": "677:1:12",
																"type": "",
																"value": "0"
															},
															"variables": [
																{
																	"name": "i",
																	"nativeSrc": "672:1:12",
																	"nodeType": "YulTypedName",
																	"src": "672:1:12",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nativeSrc": "737:63:12",
																"nodeType": "YulBlock",
																"src": "737:63:12",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"arguments": [
																						{
																							"name": "dst",
																							"nativeSrc": "762:3:12",
																							"nodeType": "YulIdentifier",
																							"src": "762:3:12"
																						},
																						{
																							"name": "i",
																							"nativeSrc": "767:1:12",
																							"nodeType": "YulIdentifier",
																							"src": "767:1:12"
																						}
																					],
																					"functionName": {
																						"name": "add",
																						"nativeSrc": "758:3:12",
																						"nodeType": "YulIdentifier",
																						"src": "758:3:12"
																					},
																					"nativeSrc": "758:11:12",
																					"nodeType": "YulFunctionCall",
																					"src": "758:11:12"
																				},
																				{
																					"arguments": [
																						{
																							"arguments": [
																								{
																									"name": "src",
																									"nativeSrc": "781:3:12",
																									"nodeType": "YulIdentifier",
																									"src": "781:3:12"
																								},
																								{
																									"name": "i",
																									"nativeSrc": "786:1:12",
																									"nodeType": "YulIdentifier",
																									"src": "786:1:12"
																								}
																							],
																							"functionName": {
																								"name": "add",
																								"nativeSrc": "777:3:12",
																								"nodeType": "YulIdentifier",
																								"src": "777:3:12"
																							},
																							"nativeSrc": "777:11:12",
																							"nodeType": "YulFunctionCall",
																							"src": "777:11:12"
																						}
																					],
																					"functionName": {
																						"name": "mload",
																						"nativeSrc": "771:5:12",
																						"nodeType": "YulIdentifier",
																						"src": "771:5:12"
																					},
																					"nativeSrc": "771:18:12",
																					"nodeType": "YulFunctionCall",
																					"src": "771:18:12"
																				}
																			],
																			"functionName": {
																				"name": "mstore",
																				"nativeSrc": "751:6:12",
																				"nodeType": "YulIdentifier",
																				"src": "751:6:12"
																			},
																			"nativeSrc": "751:39:12",
																			"nodeType": "YulFunctionCall",
																			"src": "751:39:12"
																		},
																		"nativeSrc": "751:39:12",
																		"nodeType": "YulExpressionStatement",
																		"src": "751:39:12"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "i",
																		"nativeSrc": "698:1:12",
																		"nodeType": "YulIdentifier",
																		"src": "698:1:12"
																	},
																	{
																		"name": "length",
																		"nativeSrc": "701:6:12",
																		"nodeType": "YulIdentifier",
																		"src": "701:6:12"
																	}
																],
																"functionName": {
																	"name": "lt",
																	"nativeSrc": "695:2:12",
																	"nodeType": "YulIdentifier",
																	"src": "695:2:12"
																},
																"nativeSrc": "695:13:12",
																"nodeType": "YulFunctionCall",
																"src": "695:13:12"
															},
															"nativeSrc": "687:113:12",
															"nodeType": "YulForLoop",
															"post": {
																"nativeSrc": "709:19:12",
																"nodeType": "YulBlock",
																"src": "709:19:12",
																"statements": [
																	{
																		"nativeSrc": "711:15:12",
																		"nodeType": "YulAssignment",
																		"src": "711:15:12",
																		"value": {
																			"arguments": [
																				{
																					"name": "i",
																					"nativeSrc": "720:1:12",
																					"nodeType": "YulIdentifier",
																					"src": "720:1:12"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "723:2:12",
																					"nodeType": "YulLiteral",
																					"src": "723:2:12",
																					"type": "",
																					"value": "32"
																				}
																			],
																			"functionName": {
																				"name": "add",
																				"nativeSrc": "716:3:12",
																				"nodeType": "YulIdentifier",
																				"src": "716:3:12"
																			},
																			"nativeSrc": "716:10:12",
																			"nodeType": "YulFunctionCall",
																			"src": "716:10:12"
																		},
																		"variableNames": [
																			{
																				"name": "i",
																				"nativeSrc": "711:1:12",
																				"nodeType": "YulIdentifier",
																				"src": "711:1:12"
																			}
																		]
																	}
																]
															},
															"pre": {
																"nativeSrc": "691:3:12",
																"nodeType": "YulBlock",
																"src": "691:3:12",
																"statements": []
															},
															"src": "687:113:12"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dst",
																				"nativeSrc": "820:3:12",
																				"nodeType": "YulIdentifier",
																				"src": "820:3:12"
																			},
																			{
																				"name": "length",
																				"nativeSrc": "825:6:12",
																				"nodeType": "YulIdentifier",
																				"src": "825:6:12"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "816:3:12",
																			"nodeType": "YulIdentifier",
																			"src": "816:3:12"
																		},
																		"nativeSrc": "816:16:12",
																		"nodeType": "YulFunctionCall",
																		"src": "816:16:12"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "834:1:12",
																		"nodeType": "YulLiteral",
																		"src": "834:1:12",
																		"type": "",
																		"value": "0"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "809:6:12",
																	"nodeType": "YulIdentifier",
																	"src": "809:6:12"
																},
																"nativeSrc": "809:27:12",
																"nodeType": "YulFunctionCall",
																"src": "809:27:12"
															},
															"nativeSrc": "809:27:12",
															"nodeType": "YulExpressionStatement",
															"src": "809:27:12"
														}
													]
												},
												"name": "copy_memory_to_memory_with_cleanup",
												"nativeSrc": "592:250:12",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "src",
														"nativeSrc": "636:3:12",
														"nodeType": "YulTypedName",
														"src": "636:3:12",
														"type": ""
													},
													{
														"name": "dst",
														"nativeSrc": "641:3:12",
														"nodeType": "YulTypedName",
														"src": "641:3:12",
														"type": ""
													},
													{
														"name": "length",
														"nativeSrc": "646:6:12",
														"nodeType": "YulTypedName",
														"src": "646:6:12",
														"type": ""
													}
												],
												"src": "592:250:12"
											},
											{
												"body": {
													"nativeSrc": "897:221:12",
													"nodeType": "YulBlock",
													"src": "897:221:12",
													"statements": [
														{
															"nativeSrc": "907:26:12",
															"nodeType": "YulVariableDeclaration",
															"src": "907:26:12",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "927:5:12",
																		"nodeType": "YulIdentifier",
																		"src": "927:5:12"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nativeSrc": "921:5:12",
																	"nodeType": "YulIdentifier",
																	"src": "921:5:12"
																},
																"nativeSrc": "921:12:12",
																"nodeType": "YulFunctionCall",
																"src": "921:12:12"
															},
															"variables": [
																{
																	"name": "length",
																	"nativeSrc": "911:6:12",
																	"nodeType": "YulTypedName",
																	"src": "911:6:12",
																	"type": ""
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "949:3:12",
																		"nodeType": "YulIdentifier",
																		"src": "949:3:12"
																	},
																	{
																		"name": "length",
																		"nativeSrc": "954:6:12",
																		"nodeType": "YulIdentifier",
																		"src": "954:6:12"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "942:6:12",
																	"nodeType": "YulIdentifier",
																	"src": "942:6:12"
																},
																"nativeSrc": "942:19:12",
																"nodeType": "YulFunctionCall",
																"src": "942:19:12"
															},
															"nativeSrc": "942:19:12",
															"nodeType": "YulExpressionStatement",
															"src": "942:19:12"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nativeSrc": "1009:5:12",
																				"nodeType": "YulIdentifier",
																				"src": "1009:5:12"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "1016:4:12",
																				"nodeType": "YulLiteral",
																				"src": "1016:4:12",
																				"type": "",
																				"value": "0x20"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "1005:3:12",
																			"nodeType": "YulIdentifier",
																			"src": "1005:3:12"
																		},
																		"nativeSrc": "1005:16:12",
																		"nodeType": "YulFunctionCall",
																		"src": "1005:16:12"
																	},
																	{
																		"arguments": [
																			{
																				"name": "pos",
																				"nativeSrc": "1027:3:12",
																				"nodeType": "YulIdentifier",
																				"src": "1027:3:12"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "1032:4:12",
																				"nodeType": "YulLiteral",
																				"src": "1032:4:12",
																				"type": "",
																				"value": "0x20"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "1023:3:12",
																			"nodeType": "YulIdentifier",
																			"src": "1023:3:12"
																		},
																		"nativeSrc": "1023:14:12",
																		"nodeType": "YulFunctionCall",
																		"src": "1023:14:12"
																	},
																	{
																		"name": "length",
																		"nativeSrc": "1039:6:12",
																		"nodeType": "YulIdentifier",
																		"src": "1039:6:12"
																	}
																],
																"functionName": {
																	"name": "copy_memory_to_memory_with_cleanup",
																	"nativeSrc": "970:34:12",
																	"nodeType": "YulIdentifier",
																	"src": "970:34:12"
																},
																"nativeSrc": "970:76:12",
																"nodeType": "YulFunctionCall",
																"src": "970:76:12"
															},
															"nativeSrc": "970:76:12",
															"nodeType": "YulExpressionStatement",
															"src": "970:76:12"
														},
														{
															"nativeSrc": "1055:57:12",
															"nodeType": "YulAssignment",
															"src": "1055:57:12",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "pos",
																				"nativeSrc": "1070:3:12",
																				"nodeType": "YulIdentifier",
																				"src": "1070:3:12"
																			},
																			{
																				"arguments": [
																					{
																						"arguments": [
																							{
																								"name": "length",
																								"nativeSrc": "1083:6:12",
																								"nodeType": "YulIdentifier",
																								"src": "1083:6:12"
																							},
																							{
																								"kind": "number",
																								"nativeSrc": "1091:2:12",
																								"nodeType": "YulLiteral",
																								"src": "1091:2:12",
																								"type": "",
																								"value": "31"
																							}
																						],
																						"functionName": {
																							"name": "add",
																							"nativeSrc": "1079:3:12",
																							"nodeType": "YulIdentifier",
																							"src": "1079:3:12"
																						},
																						"nativeSrc": "1079:15:12",
																						"nodeType": "YulFunctionCall",
																						"src": "1079:15:12"
																					},
																					{
																						"arguments": [
																							{
																								"kind": "number",
																								"nativeSrc": "1100:2:12",
																								"nodeType": "YulLiteral",
																								"src": "1100:2:12",
																								"type": "",
																								"value": "31"
																							}
																						],
																						"functionName": {
																							"name": "not",
																							"nativeSrc": "1096:3:12",
																							"nodeType": "YulIdentifier",
																							"src": "1096:3:12"
																						},
																						"nativeSrc": "1096:7:12",
																						"nodeType": "YulFunctionCall",
																						"src": "1096:7:12"
																					}
																				],
																				"functionName": {
																					"name": "and",
																					"nativeSrc": "1075:3:12",
																					"nodeType": "YulIdentifier",
																					"src": "1075:3:12"
																				},
																				"nativeSrc": "1075:29:12",
																				"nodeType": "YulFunctionCall",
																				"src": "1075:29:12"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "1066:3:12",
																			"nodeType": "YulIdentifier",
																			"src": "1066:3:12"
																		},
																		"nativeSrc": "1066:39:12",
																		"nodeType": "YulFunctionCall",
																		"src": "1066:39:12"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "1107:4:12",
																		"nodeType": "YulLiteral",
																		"src": "1107:4:12",
																		"type": "",
																		"value": "0x20"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "1062:3:12",
																	"nodeType": "YulIdentifier",
																	"src": "1062:3:12"
																},
																"nativeSrc": "1062:50:12",
																"nodeType": "YulFunctionCall",
																"src": "1062:50:12"
															},
															"variableNames": [
																{
																	"name": "end",
																	"nativeSrc": "1055:3:12",
																	"nodeType": "YulIdentifier",
																	"src": "1055:3:12"
																}
															]
														}
													]
												},
												"name": "abi_encode_string",
												"nativeSrc": "847:271:12",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "874:5:12",
														"nodeType": "YulTypedName",
														"src": "874:5:12",
														"type": ""
													},
													{
														"name": "pos",
														"nativeSrc": "881:3:12",
														"nodeType": "YulTypedName",
														"src": "881:3:12",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "end",
														"nativeSrc": "889:3:12",
														"nodeType": "YulTypedName",
														"src": "889:3:12",
														"type": ""
													}
												],
												"src": "847:271:12"
											},
											{
												"body": {
													"nativeSrc": "1244:99:12",
													"nodeType": "YulBlock",
													"src": "1244:99:12",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "1261:9:12",
																		"nodeType": "YulIdentifier",
																		"src": "1261:9:12"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "1272:2:12",
																		"nodeType": "YulLiteral",
																		"src": "1272:2:12",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "1254:6:12",
																	"nodeType": "YulIdentifier",
																	"src": "1254:6:12"
																},
																"nativeSrc": "1254:21:12",
																"nodeType": "YulFunctionCall",
																"src": "1254:21:12"
															},
															"nativeSrc": "1254:21:12",
															"nodeType": "YulExpressionStatement",
															"src": "1254:21:12"
														},
														{
															"nativeSrc": "1284:53:12",
															"nodeType": "YulAssignment",
															"src": "1284:53:12",
															"value": {
																"arguments": [
																	{
																		"name": "value0",
																		"nativeSrc": "1310:6:12",
																		"nodeType": "YulIdentifier",
																		"src": "1310:6:12"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "1322:9:12",
																				"nodeType": "YulIdentifier",
																				"src": "1322:9:12"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "1333:2:12",
																				"nodeType": "YulLiteral",
																				"src": "1333:2:12",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "1318:3:12",
																			"nodeType": "YulIdentifier",
																			"src": "1318:3:12"
																		},
																		"nativeSrc": "1318:18:12",
																		"nodeType": "YulFunctionCall",
																		"src": "1318:18:12"
																	}
																],
																"functionName": {
																	"name": "abi_encode_string",
																	"nativeSrc": "1292:17:12",
																	"nodeType": "YulIdentifier",
																	"src": "1292:17:12"
																},
																"nativeSrc": "1292:45:12",
																"nodeType": "YulFunctionCall",
																"src": "1292:45:12"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "1284:4:12",
																	"nodeType": "YulIdentifier",
																	"src": "1284:4:12"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_string_memory_ptr__to_t_string_memory_ptr__fromStack_reversed",
												"nativeSrc": "1123:220:12",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "1213:9:12",
														"nodeType": "YulTypedName",
														"src": "1213:9:12",
														"type": ""
													},
													{
														"name": "value0",
														"nativeSrc": "1224:6:12",
														"nodeType": "YulTypedName",
														"src": "1224:6:12",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "1235:4:12",
														"nodeType": "YulTypedName",
														"src": "1235:4:12",
														"type": ""
													}
												],
												"src": "1123:220:12"
											},
											{
												"body": {
													"nativeSrc": "1418:110:12",
													"nodeType": "YulBlock",
													"src": "1418:110:12",
													"statements": [
														{
															"body": {
																"nativeSrc": "1464:16:12",
																"nodeType": "YulBlock",
																"src": "1464:16:12",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nativeSrc": "1473:1:12",
																					"nodeType": "YulLiteral",
																					"src": "1473:1:12",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "1476:1:12",
																					"nodeType": "YulLiteral",
																					"src": "1476:1:12",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nativeSrc": "1466:6:12",
																				"nodeType": "YulIdentifier",
																				"src": "1466:6:12"
																			},
																			"nativeSrc": "1466:12:12",
																			"nodeType": "YulFunctionCall",
																			"src": "1466:12:12"
																		},
																		"nativeSrc": "1466:12:12",
																		"nodeType": "YulExpressionStatement",
																		"src": "1466:12:12"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nativeSrc": "1439:7:12",
																				"nodeType": "YulIdentifier",
																				"src": "1439:7:12"
																			},
																			{
																				"name": "headStart",
																				"nativeSrc": "1448:9:12",
																				"nodeType": "YulIdentifier",
																				"src": "1448:9:12"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "1435:3:12",
																			"nodeType": "YulIdentifier",
																			"src": "1435:3:12"
																		},
																		"nativeSrc": "1435:23:12",
																		"nodeType": "YulFunctionCall",
																		"src": "1435:23:12"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "1460:2:12",
																		"nodeType": "YulLiteral",
																		"src": "1460:2:12",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nativeSrc": "1431:3:12",
																	"nodeType": "YulIdentifier",
																	"src": "1431:3:12"
																},
																"nativeSrc": "1431:32:12",
																"nodeType": "YulFunctionCall",
																"src": "1431:32:12"
															},
															"nativeSrc": "1428:52:12",
															"nodeType": "YulIf",
															"src": "1428:52:12"
														},
														{
															"nativeSrc": "1489:33:12",
															"nodeType": "YulAssignment",
															"src": "1489:33:12",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "1512:9:12",
																		"nodeType": "YulIdentifier",
																		"src": "1512:9:12"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nativeSrc": "1499:12:12",
																	"nodeType": "YulIdentifier",
																	"src": "1499:12:12"
																},
																"nativeSrc": "1499:23:12",
																"nodeType": "YulFunctionCall",
																"src": "1499:23:12"
															},
															"variableNames": [
																{
																	"name": "value0",
																	"nativeSrc": "1489:6:12",
																	"nodeType": "YulIdentifier",
																	"src": "1489:6:12"
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_uint256",
												"nativeSrc": "1348:180:12",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "1384:9:12",
														"nodeType": "YulTypedName",
														"src": "1384:9:12",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nativeSrc": "1395:7:12",
														"nodeType": "YulTypedName",
														"src": "1395:7:12",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nativeSrc": "1407:6:12",
														"nodeType": "YulTypedName",
														"src": "1407:6:12",
														"type": ""
													}
												],
												"src": "1348:180:12"
											},
											{
												"body": {
													"nativeSrc": "1634:102:12",
													"nodeType": "YulBlock",
													"src": "1634:102:12",
													"statements": [
														{
															"nativeSrc": "1644:26:12",
															"nodeType": "YulAssignment",
															"src": "1644:26:12",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "1656:9:12",
																		"nodeType": "YulIdentifier",
																		"src": "1656:9:12"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "1667:2:12",
																		"nodeType": "YulLiteral",
																		"src": "1667:2:12",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "1652:3:12",
																	"nodeType": "YulIdentifier",
																	"src": "1652:3:12"
																},
																"nativeSrc": "1652:18:12",
																"nodeType": "YulFunctionCall",
																"src": "1652:18:12"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "1644:4:12",
																	"nodeType": "YulIdentifier",
																	"src": "1644:4:12"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "1686:9:12",
																		"nodeType": "YulIdentifier",
																		"src": "1686:9:12"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value0",
																				"nativeSrc": "1701:6:12",
																				"nodeType": "YulIdentifier",
																				"src": "1701:6:12"
																			},
																			{
																				"arguments": [
																					{
																						"arguments": [
																							{
																								"kind": "number",
																								"nativeSrc": "1717:3:12",
																								"nodeType": "YulLiteral",
																								"src": "1717:3:12",
																								"type": "",
																								"value": "160"
																							},
																							{
																								"kind": "number",
																								"nativeSrc": "1722:1:12",
																								"nodeType": "YulLiteral",
																								"src": "1722:1:12",
																								"type": "",
																								"value": "1"
																							}
																						],
																						"functionName": {
																							"name": "shl",
																							"nativeSrc": "1713:3:12",
																							"nodeType": "YulIdentifier",
																							"src": "1713:3:12"
																						},
																						"nativeSrc": "1713:11:12",
																						"nodeType": "YulFunctionCall",
																						"src": "1713:11:12"
																					},
																					{
																						"kind": "number",
																						"nativeSrc": "1726:1:12",
																						"nodeType": "YulLiteral",
																						"src": "1726:1:12",
																						"type": "",
																						"value": "1"
																					}
																				],
																				"functionName": {
																					"name": "sub",
																					"nativeSrc": "1709:3:12",
																					"nodeType": "YulIdentifier",
																					"src": "1709:3:12"
																				},
																				"nativeSrc": "1709:19:12",
																				"nodeType": "YulFunctionCall",
																				"src": "1709:19:12"
																			}
																		],
																		"functionName": {
																			"name": "and",
																			"nativeSrc": "1697:3:12",
																			"nodeType": "YulIdentifier",
																			"src": "1697:3:12"
																		},
																		"nativeSrc": "1697:32:12",
																		"nodeType": "YulFunctionCall",
																		"src": "1697:32:12"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "1679:6:12",
																	"nodeType": "YulIdentifier",
																	"src": "1679:6:12"
																},
																"nativeSrc": "1679:51:12",
																"nodeType": "YulFunctionCall",
																"src": "1679:51:12"
															},
															"nativeSrc": "1679:51:12",
															"nodeType": "YulExpressionStatement",
															"src": "1679:51:12"
														}
													]
												},
												"name": "abi_encode_tuple_t_address__to_t_address__fromStack_reversed",
												"nativeSrc": "1533:203:12",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "1603:9:12",
														"nodeType": "YulTypedName",
														"src": "1603:9:12",
														"type": ""
													},
													{
														"name": "value0",
														"nativeSrc": "1614:6:12",
														"nodeType": "YulTypedName",
														"src": "1614:6:12",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "1625:4:12",
														"nodeType": "YulTypedName",
														"src": "1625:4:12",
														"type": ""
													}
												],
												"src": "1533:203:12"
											},
											{
												"body": {
													"nativeSrc": "1790:124:12",
													"nodeType": "YulBlock",
													"src": "1790:124:12",
													"statements": [
														{
															"nativeSrc": "1800:29:12",
															"nodeType": "YulAssignment",
															"src": "1800:29:12",
															"value": {
																"arguments": [
																	{
																		"name": "offset",
																		"nativeSrc": "1822:6:12",
																		"nodeType": "YulIdentifier",
																		"src": "1822:6:12"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nativeSrc": "1809:12:12",
																	"nodeType": "YulIdentifier",
																	"src": "1809:12:12"
																},
																"nativeSrc": "1809:20:12",
																"nodeType": "YulFunctionCall",
																"src": "1809:20:12"
															},
															"variableNames": [
																{
																	"name": "value",
																	"nativeSrc": "1800:5:12",
																	"nodeType": "YulIdentifier",
																	"src": "1800:5:12"
																}
															]
														},
														{
															"body": {
																"nativeSrc": "1892:16:12",
																"nodeType": "YulBlock",
																"src": "1892:16:12",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nativeSrc": "1901:1:12",
																					"nodeType": "YulLiteral",
																					"src": "1901:1:12",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "1904:1:12",
																					"nodeType": "YulLiteral",
																					"src": "1904:1:12",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nativeSrc": "1894:6:12",
																				"nodeType": "YulIdentifier",
																				"src": "1894:6:12"
																			},
																			"nativeSrc": "1894:12:12",
																			"nodeType": "YulFunctionCall",
																			"src": "1894:12:12"
																		},
																		"nativeSrc": "1894:12:12",
																		"nodeType": "YulExpressionStatement",
																		"src": "1894:12:12"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nativeSrc": "1851:5:12",
																				"nodeType": "YulIdentifier",
																				"src": "1851:5:12"
																			},
																			{
																				"arguments": [
																					{
																						"name": "value",
																						"nativeSrc": "1862:5:12",
																						"nodeType": "YulIdentifier",
																						"src": "1862:5:12"
																					},
																					{
																						"arguments": [
																							{
																								"arguments": [
																									{
																										"kind": "number",
																										"nativeSrc": "1877:3:12",
																										"nodeType": "YulLiteral",
																										"src": "1877:3:12",
																										"type": "",
																										"value": "160"
																									},
																									{
																										"kind": "number",
																										"nativeSrc": "1882:1:12",
																										"nodeType": "YulLiteral",
																										"src": "1882:1:12",
																										"type": "",
																										"value": "1"
																									}
																								],
																								"functionName": {
																									"name": "shl",
																									"nativeSrc": "1873:3:12",
																									"nodeType": "YulIdentifier",
																									"src": "1873:3:12"
																								},
																								"nativeSrc": "1873:11:12",
																								"nodeType": "YulFunctionCall",
																								"src": "1873:11:12"
																							},
																							{
																								"kind": "number",
																								"nativeSrc": "1886:1:12",
																								"nodeType": "YulLiteral",
																								"src": "1886:1:12",
																								"type": "",
																								"value": "1"
																							}
																						],
																						"functionName": {
																							"name": "sub",
																							"nativeSrc": "1869:3:12",
																							"nodeType": "YulIdentifier",
																							"src": "1869:3:12"
																						},
																						"nativeSrc": "1869:19:12",
																						"nodeType": "YulFunctionCall",
																						"src": "1869:19:12"
																					}
																				],
																				"functionName": {
																					"name": "and",
																					"nativeSrc": "1858:3:12",
																					"nodeType": "YulIdentifier",
																					"src": "1858:3:12"
																				},
																				"nativeSrc": "1858:31:12",
																				"nodeType": "YulFunctionCall",
																				"src": "1858:31:12"
																			}
																		],
																		"functionName": {
																			"name": "eq",
																			"nativeSrc": "1848:2:12",
																			"nodeType": "YulIdentifier",
																			"src": "1848:2:12"
																		},
																		"nativeSrc": "1848:42:12",
																		"nodeType": "YulFunctionCall",
																		"src": "1848:42:12"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nativeSrc": "1841:6:12",
																	"nodeType": "YulIdentifier",
																	"src": "1841:6:12"
																},
																"nativeSrc": "1841:50:12",
																"nodeType": "YulFunctionCall",
																"src": "1841:50:12"
															},
															"nativeSrc": "1838:70:12",
															"nodeType": "YulIf",
															"src": "1838:70:12"
														}
													]
												},
												"name": "abi_decode_address",
												"nativeSrc": "1741:173:12",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "offset",
														"nativeSrc": "1769:6:12",
														"nodeType": "YulTypedName",
														"src": "1769:6:12",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value",
														"nativeSrc": "1780:5:12",
														"nodeType": "YulTypedName",
														"src": "1780:5:12",
														"type": ""
													}
												],
												"src": "1741:173:12"
											},
											{
												"body": {
													"nativeSrc": "2006:167:12",
													"nodeType": "YulBlock",
													"src": "2006:167:12",
													"statements": [
														{
															"body": {
																"nativeSrc": "2052:16:12",
																"nodeType": "YulBlock",
																"src": "2052:16:12",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nativeSrc": "2061:1:12",
																					"nodeType": "YulLiteral",
																					"src": "2061:1:12",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "2064:1:12",
																					"nodeType": "YulLiteral",
																					"src": "2064:1:12",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nativeSrc": "2054:6:12",
																				"nodeType": "YulIdentifier",
																				"src": "2054:6:12"
																			},
																			"nativeSrc": "2054:12:12",
																			"nodeType": "YulFunctionCall",
																			"src": "2054:12:12"
																		},
																		"nativeSrc": "2054:12:12",
																		"nodeType": "YulExpressionStatement",
																		"src": "2054:12:12"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nativeSrc": "2027:7:12",
																				"nodeType": "YulIdentifier",
																				"src": "2027:7:12"
																			},
																			{
																				"name": "headStart",
																				"nativeSrc": "2036:9:12",
																				"nodeType": "YulIdentifier",
																				"src": "2036:9:12"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "2023:3:12",
																			"nodeType": "YulIdentifier",
																			"src": "2023:3:12"
																		},
																		"nativeSrc": "2023:23:12",
																		"nodeType": "YulFunctionCall",
																		"src": "2023:23:12"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "2048:2:12",
																		"nodeType": "YulLiteral",
																		"src": "2048:2:12",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nativeSrc": "2019:3:12",
																	"nodeType": "YulIdentifier",
																	"src": "2019:3:12"
																},
																"nativeSrc": "2019:32:12",
																"nodeType": "YulFunctionCall",
																"src": "2019:32:12"
															},
															"nativeSrc": "2016:52:12",
															"nodeType": "YulIf",
															"src": "2016:52:12"
														},
														{
															"nativeSrc": "2077:39:12",
															"nodeType": "YulAssignment",
															"src": "2077:39:12",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "2106:9:12",
																		"nodeType": "YulIdentifier",
																		"src": "2106:9:12"
																	}
																],
																"functionName": {
																	"name": "abi_decode_address",
																	"nativeSrc": "2087:18:12",
																	"nodeType": "YulIdentifier",
																	"src": "2087:18:12"
																},
																"nativeSrc": "2087:29:12",
																"nodeType": "YulFunctionCall",
																"src": "2087:29:12"
															},
															"variableNames": [
																{
																	"name": "value0",
																	"nativeSrc": "2077:6:12",
																	"nodeType": "YulIdentifier",
																	"src": "2077:6:12"
																}
															]
														},
														{
															"nativeSrc": "2125:42:12",
															"nodeType": "YulAssignment",
															"src": "2125:42:12",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "2152:9:12",
																				"nodeType": "YulIdentifier",
																				"src": "2152:9:12"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "2163:2:12",
																				"nodeType": "YulLiteral",
																				"src": "2163:2:12",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "2148:3:12",
																			"nodeType": "YulIdentifier",
																			"src": "2148:3:12"
																		},
																		"nativeSrc": "2148:18:12",
																		"nodeType": "YulFunctionCall",
																		"src": "2148:18:12"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nativeSrc": "2135:12:12",
																	"nodeType": "YulIdentifier",
																	"src": "2135:12:12"
																},
																"nativeSrc": "2135:32:12",
																"nodeType": "YulFunctionCall",
																"src": "2135:32:12"
															},
															"variableNames": [
																{
																	"name": "value1",
																	"nativeSrc": "2125:6:12",
																	"nodeType": "YulIdentifier",
																	"src": "2125:6:12"
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_addresst_uint256",
												"nativeSrc": "1919:254:12",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "1964:9:12",
														"nodeType": "YulTypedName",
														"src": "1964:9:12",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nativeSrc": "1975:7:12",
														"nodeType": "YulTypedName",
														"src": "1975:7:12",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nativeSrc": "1987:6:12",
														"nodeType": "YulTypedName",
														"src": "1987:6:12",
														"type": ""
													},
													{
														"name": "value1",
														"nativeSrc": "1995:6:12",
														"nodeType": "YulTypedName",
														"src": "1995:6:12",
														"type": ""
													}
												],
												"src": "1919:254:12"
											},
											{
												"body": {
													"nativeSrc": "2282:224:12",
													"nodeType": "YulBlock",
													"src": "2282:224:12",
													"statements": [
														{
															"body": {
																"nativeSrc": "2328:16:12",
																"nodeType": "YulBlock",
																"src": "2328:16:12",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nativeSrc": "2337:1:12",
																					"nodeType": "YulLiteral",
																					"src": "2337:1:12",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "2340:1:12",
																					"nodeType": "YulLiteral",
																					"src": "2340:1:12",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nativeSrc": "2330:6:12",
																				"nodeType": "YulIdentifier",
																				"src": "2330:6:12"
																			},
																			"nativeSrc": "2330:12:12",
																			"nodeType": "YulFunctionCall",
																			"src": "2330:12:12"
																		},
																		"nativeSrc": "2330:12:12",
																		"nodeType": "YulExpressionStatement",
																		"src": "2330:12:12"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nativeSrc": "2303:7:12",
																				"nodeType": "YulIdentifier",
																				"src": "2303:7:12"
																			},
																			{
																				"name": "headStart",
																				"nativeSrc": "2312:9:12",
																				"nodeType": "YulIdentifier",
																				"src": "2312:9:12"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "2299:3:12",
																			"nodeType": "YulIdentifier",
																			"src": "2299:3:12"
																		},
																		"nativeSrc": "2299:23:12",
																		"nodeType": "YulFunctionCall",
																		"src": "2299:23:12"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "2324:2:12",
																		"nodeType": "YulLiteral",
																		"src": "2324:2:12",
																		"type": "",
																		"value": "96"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nativeSrc": "2295:3:12",
																	"nodeType": "YulIdentifier",
																	"src": "2295:3:12"
																},
																"nativeSrc": "2295:32:12",
																"nodeType": "YulFunctionCall",
																"src": "2295:32:12"
															},
															"nativeSrc": "2292:52:12",
															"nodeType": "YulIf",
															"src": "2292:52:12"
														},
														{
															"nativeSrc": "2353:39:12",
															"nodeType": "YulAssignment",
															"src": "2353:39:12",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "2382:9:12",
																		"nodeType": "YulIdentifier",
																		"src": "2382:9:12"
																	}
																],
																"functionName": {
																	"name": "abi_decode_address",
																	"nativeSrc": "2363:18:12",
																	"nodeType": "YulIdentifier",
																	"src": "2363:18:12"
																},
																"nativeSrc": "2363:29:12",
																"nodeType": "YulFunctionCall",
																"src": "2363:29:12"
															},
															"variableNames": [
																{
																	"name": "value0",
																	"nativeSrc": "2353:6:12",
																	"nodeType": "YulIdentifier",
																	"src": "2353:6:12"
																}
															]
														},
														{
															"nativeSrc": "2401:48:12",
															"nodeType": "YulAssignment",
															"src": "2401:48:12",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "2434:9:12",
																				"nodeType": "YulIdentifier",
																				"src": "2434:9:12"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "2445:2:12",
																				"nodeType": "YulLiteral",
																				"src": "2445:2:12",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "2430:3:12",
																			"nodeType": "YulIdentifier",
																			"src": "2430:3:12"
																		},
																		"nativeSrc": "2430:18:12",
																		"nodeType": "YulFunctionCall",
																		"src": "2430:18:12"
																	}
																],
																"functionName": {
																	"name": "abi_decode_address",
																	"nativeSrc": "2411:18:12",
																	"nodeType": "YulIdentifier",
																	"src": "2411:18:12"
																},
																"nativeSrc": "2411:38:12",
																"nodeType": "YulFunctionCall",
																"src": "2411:38:12"
															},
															"variableNames": [
																{
																	"name": "value1",
																	"nativeSrc": "2401:6:12",
																	"nodeType": "YulIdentifier",
																	"src": "2401:6:12"
																}
															]
														},
														{
															"nativeSrc": "2458:42:12",
															"nodeType": "YulAssignment",
															"src": "2458:42:12",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "2485:9:12",
																				"nodeType": "YulIdentifier",
																				"src": "2485:9:12"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "2496:2:12",
																				"nodeType": "YulLiteral",
																				"src": "2496:2:12",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "2481:3:12",
																			"nodeType": "YulIdentifier",
																			"src": "2481:3:12"
																		},
																		"nativeSrc": "2481:18:12",
																		"nodeType": "YulFunctionCall",
																		"src": "2481:18:12"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nativeSrc": "2468:12:12",
																	"nodeType": "YulIdentifier",
																	"src": "2468:12:12"
																},
																"nativeSrc": "2468:32:12",
																"nodeType": "YulFunctionCall",
																"src": "2468:32:12"
															},
															"variableNames": [
																{
																	"name": "value2",
																	"nativeSrc": "2458:6:12",
																	"nodeType": "YulIdentifier",
																	"src": "2458:6:12"
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_addresst_addresst_uint256",
												"nativeSrc": "2178:328:12",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "2232:9:12",
														"nodeType": "YulTypedName",
														"src": "2232:9:12",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nativeSrc": "2243:7:12",
														"nodeType": "YulTypedName",
														"src": "2243:7:12",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nativeSrc": "2255:6:12",
														"nodeType": "YulTypedName",
														"src": "2255:6:12",
														"type": ""
													},
													{
														"name": "value1",
														"nativeSrc": "2263:6:12",
														"nodeType": "YulTypedName",
														"src": "2263:6:12",
														"type": ""
													},
													{
														"name": "value2",
														"nativeSrc": "2271:6:12",
														"nodeType": "YulTypedName",
														"src": "2271:6:12",
														"type": ""
													}
												],
												"src": "2178:328:12"
											},
											{
												"body": {
													"nativeSrc": "2581:116:12",
													"nodeType": "YulBlock",
													"src": "2581:116:12",
													"statements": [
														{
															"body": {
																"nativeSrc": "2627:16:12",
																"nodeType": "YulBlock",
																"src": "2627:16:12",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nativeSrc": "2636:1:12",
																					"nodeType": "YulLiteral",
																					"src": "2636:1:12",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "2639:1:12",
																					"nodeType": "YulLiteral",
																					"src": "2639:1:12",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nativeSrc": "2629:6:12",
																				"nodeType": "YulIdentifier",
																				"src": "2629:6:12"
																			},
																			"nativeSrc": "2629:12:12",
																			"nodeType": "YulFunctionCall",
																			"src": "2629:12:12"
																		},
																		"nativeSrc": "2629:12:12",
																		"nodeType": "YulExpressionStatement",
																		"src": "2629:12:12"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nativeSrc": "2602:7:12",
																				"nodeType": "YulIdentifier",
																				"src": "2602:7:12"
																			},
																			{
																				"name": "headStart",
																				"nativeSrc": "2611:9:12",
																				"nodeType": "YulIdentifier",
																				"src": "2611:9:12"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "2598:3:12",
																			"nodeType": "YulIdentifier",
																			"src": "2598:3:12"
																		},
																		"nativeSrc": "2598:23:12",
																		"nodeType": "YulFunctionCall",
																		"src": "2598:23:12"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "2623:2:12",
																		"nodeType": "YulLiteral",
																		"src": "2623:2:12",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nativeSrc": "2594:3:12",
																	"nodeType": "YulIdentifier",
																	"src": "2594:3:12"
																},
																"nativeSrc": "2594:32:12",
																"nodeType": "YulFunctionCall",
																"src": "2594:32:12"
															},
															"nativeSrc": "2591:52:12",
															"nodeType": "YulIf",
															"src": "2591:52:12"
														},
														{
															"nativeSrc": "2652:39:12",
															"nodeType": "YulAssignment",
															"src": "2652:39:12",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "2681:9:12",
																		"nodeType": "YulIdentifier",
																		"src": "2681:9:12"
																	}
																],
																"functionName": {
																	"name": "abi_decode_address",
																	"nativeSrc": "2662:18:12",
																	"nodeType": "YulIdentifier",
																	"src": "2662:18:12"
																},
																"nativeSrc": "2662:29:12",
																"nodeType": "YulFunctionCall",
																"src": "2662:29:12"
															},
															"variableNames": [
																{
																	"name": "value0",
																	"nativeSrc": "2652:6:12",
																	"nodeType": "YulIdentifier",
																	"src": "2652:6:12"
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_address",
												"nativeSrc": "2511:186:12",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "2547:9:12",
														"nodeType": "YulTypedName",
														"src": "2547:9:12",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nativeSrc": "2558:7:12",
														"nodeType": "YulTypedName",
														"src": "2558:7:12",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nativeSrc": "2570:6:12",
														"nodeType": "YulTypedName",
														"src": "2570:6:12",
														"type": ""
													}
												],
												"src": "2511:186:12"
											},
											{
												"body": {
													"nativeSrc": "2803:76:12",
													"nodeType": "YulBlock",
													"src": "2803:76:12",
													"statements": [
														{
															"nativeSrc": "2813:26:12",
															"nodeType": "YulAssignment",
															"src": "2813:26:12",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "2825:9:12",
																		"nodeType": "YulIdentifier",
																		"src": "2825:9:12"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "2836:2:12",
																		"nodeType": "YulLiteral",
																		"src": "2836:2:12",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "2821:3:12",
																	"nodeType": "YulIdentifier",
																	"src": "2821:3:12"
																},
																"nativeSrc": "2821:18:12",
																"nodeType": "YulFunctionCall",
																"src": "2821:18:12"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "2813:4:12",
																	"nodeType": "YulIdentifier",
																	"src": "2813:4:12"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "2855:9:12",
																		"nodeType": "YulIdentifier",
																		"src": "2855:9:12"
																	},
																	{
																		"name": "value0",
																		"nativeSrc": "2866:6:12",
																		"nodeType": "YulIdentifier",
																		"src": "2866:6:12"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "2848:6:12",
																	"nodeType": "YulIdentifier",
																	"src": "2848:6:12"
																},
																"nativeSrc": "2848:25:12",
																"nodeType": "YulFunctionCall",
																"src": "2848:25:12"
															},
															"nativeSrc": "2848:25:12",
															"nodeType": "YulExpressionStatement",
															"src": "2848:25:12"
														}
													]
												},
												"name": "abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed",
												"nativeSrc": "2702:177:12",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "2772:9:12",
														"nodeType": "YulTypedName",
														"src": "2772:9:12",
														"type": ""
													},
													{
														"name": "value0",
														"nativeSrc": "2783:6:12",
														"nodeType": "YulTypedName",
														"src": "2783:6:12",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "2794:4:12",
														"nodeType": "YulTypedName",
														"src": "2794:4:12",
														"type": ""
													}
												],
												"src": "2702:177:12"
											},
											{
												"body": {
													"nativeSrc": "2968:263:12",
													"nodeType": "YulBlock",
													"src": "2968:263:12",
													"statements": [
														{
															"body": {
																"nativeSrc": "3014:16:12",
																"nodeType": "YulBlock",
																"src": "3014:16:12",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nativeSrc": "3023:1:12",
																					"nodeType": "YulLiteral",
																					"src": "3023:1:12",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "3026:1:12",
																					"nodeType": "YulLiteral",
																					"src": "3026:1:12",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nativeSrc": "3016:6:12",
																				"nodeType": "YulIdentifier",
																				"src": "3016:6:12"
																			},
																			"nativeSrc": "3016:12:12",
																			"nodeType": "YulFunctionCall",
																			"src": "3016:12:12"
																		},
																		"nativeSrc": "3016:12:12",
																		"nodeType": "YulExpressionStatement",
																		"src": "3016:12:12"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nativeSrc": "2989:7:12",
																				"nodeType": "YulIdentifier",
																				"src": "2989:7:12"
																			},
																			{
																				"name": "headStart",
																				"nativeSrc": "2998:9:12",
																				"nodeType": "YulIdentifier",
																				"src": "2998:9:12"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "2985:3:12",
																			"nodeType": "YulIdentifier",
																			"src": "2985:3:12"
																		},
																		"nativeSrc": "2985:23:12",
																		"nodeType": "YulFunctionCall",
																		"src": "2985:23:12"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "3010:2:12",
																		"nodeType": "YulLiteral",
																		"src": "3010:2:12",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nativeSrc": "2981:3:12",
																	"nodeType": "YulIdentifier",
																	"src": "2981:3:12"
																},
																"nativeSrc": "2981:32:12",
																"nodeType": "YulFunctionCall",
																"src": "2981:32:12"
															},
															"nativeSrc": "2978:52:12",
															"nodeType": "YulIf",
															"src": "2978:52:12"
														},
														{
															"nativeSrc": "3039:39:12",
															"nodeType": "YulAssignment",
															"src": "3039:39:12",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "3068:9:12",
																		"nodeType": "YulIdentifier",
																		"src": "3068:9:12"
																	}
																],
																"functionName": {
																	"name": "abi_decode_address",
																	"nativeSrc": "3049:18:12",
																	"nodeType": "YulIdentifier",
																	"src": "3049:18:12"
																},
																"nativeSrc": "3049:29:12",
																"nodeType": "YulFunctionCall",
																"src": "3049:29:12"
															},
															"variableNames": [
																{
																	"name": "value0",
																	"nativeSrc": "3039:6:12",
																	"nodeType": "YulIdentifier",
																	"src": "3039:6:12"
																}
															]
														},
														{
															"nativeSrc": "3087:45:12",
															"nodeType": "YulVariableDeclaration",
															"src": "3087:45:12",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "3117:9:12",
																				"nodeType": "YulIdentifier",
																				"src": "3117:9:12"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "3128:2:12",
																				"nodeType": "YulLiteral",
																				"src": "3128:2:12",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "3113:3:12",
																			"nodeType": "YulIdentifier",
																			"src": "3113:3:12"
																		},
																		"nativeSrc": "3113:18:12",
																		"nodeType": "YulFunctionCall",
																		"src": "3113:18:12"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nativeSrc": "3100:12:12",
																	"nodeType": "YulIdentifier",
																	"src": "3100:12:12"
																},
																"nativeSrc": "3100:32:12",
																"nodeType": "YulFunctionCall",
																"src": "3100:32:12"
															},
															"variables": [
																{
																	"name": "value",
																	"nativeSrc": "3091:5:12",
																	"nodeType": "YulTypedName",
																	"src": "3091:5:12",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nativeSrc": "3185:16:12",
																"nodeType": "YulBlock",
																"src": "3185:16:12",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nativeSrc": "3194:1:12",
																					"nodeType": "YulLiteral",
																					"src": "3194:1:12",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "3197:1:12",
																					"nodeType": "YulLiteral",
																					"src": "3197:1:12",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nativeSrc": "3187:6:12",
																				"nodeType": "YulIdentifier",
																				"src": "3187:6:12"
																			},
																			"nativeSrc": "3187:12:12",
																			"nodeType": "YulFunctionCall",
																			"src": "3187:12:12"
																		},
																		"nativeSrc": "3187:12:12",
																		"nodeType": "YulExpressionStatement",
																		"src": "3187:12:12"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nativeSrc": "3154:5:12",
																				"nodeType": "YulIdentifier",
																				"src": "3154:5:12"
																			},
																			{
																				"arguments": [
																					{
																						"arguments": [
																							{
																								"name": "value",
																								"nativeSrc": "3175:5:12",
																								"nodeType": "YulIdentifier",
																								"src": "3175:5:12"
																							}
																						],
																						"functionName": {
																							"name": "iszero",
																							"nativeSrc": "3168:6:12",
																							"nodeType": "YulIdentifier",
																							"src": "3168:6:12"
																						},
																						"nativeSrc": "3168:13:12",
																						"nodeType": "YulFunctionCall",
																						"src": "3168:13:12"
																					}
																				],
																				"functionName": {
																					"name": "iszero",
																					"nativeSrc": "3161:6:12",
																					"nodeType": "YulIdentifier",
																					"src": "3161:6:12"
																				},
																				"nativeSrc": "3161:21:12",
																				"nodeType": "YulFunctionCall",
																				"src": "3161:21:12"
																			}
																		],
																		"functionName": {
																			"name": "eq",
																			"nativeSrc": "3151:2:12",
																			"nodeType": "YulIdentifier",
																			"src": "3151:2:12"
																		},
																		"nativeSrc": "3151:32:12",
																		"nodeType": "YulFunctionCall",
																		"src": "3151:32:12"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nativeSrc": "3144:6:12",
																	"nodeType": "YulIdentifier",
																	"src": "3144:6:12"
																},
																"nativeSrc": "3144:40:12",
																"nodeType": "YulFunctionCall",
																"src": "3144:40:12"
															},
															"nativeSrc": "3141:60:12",
															"nodeType": "YulIf",
															"src": "3141:60:12"
														},
														{
															"nativeSrc": "3210:15:12",
															"nodeType": "YulAssignment",
															"src": "3210:15:12",
															"value": {
																"name": "value",
																"nativeSrc": "3220:5:12",
																"nodeType": "YulIdentifier",
																"src": "3220:5:12"
															},
															"variableNames": [
																{
																	"name": "value1",
																	"nativeSrc": "3210:6:12",
																	"nodeType": "YulIdentifier",
																	"src": "3210:6:12"
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_addresst_bool",
												"nativeSrc": "2884:347:12",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "2926:9:12",
														"nodeType": "YulTypedName",
														"src": "2926:9:12",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nativeSrc": "2937:7:12",
														"nodeType": "YulTypedName",
														"src": "2937:7:12",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nativeSrc": "2949:6:12",
														"nodeType": "YulTypedName",
														"src": "2949:6:12",
														"type": ""
													},
													{
														"name": "value1",
														"nativeSrc": "2957:6:12",
														"nodeType": "YulTypedName",
														"src": "2957:6:12",
														"type": ""
													}
												],
												"src": "2884:347:12"
											},
											{
												"body": {
													"nativeSrc": "3268:95:12",
													"nodeType": "YulBlock",
													"src": "3268:95:12",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "3285:1:12",
																		"nodeType": "YulLiteral",
																		"src": "3285:1:12",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"arguments": [
																			{
																				"kind": "number",
																				"nativeSrc": "3292:3:12",
																				"nodeType": "YulLiteral",
																				"src": "3292:3:12",
																				"type": "",
																				"value": "224"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "3297:10:12",
																				"nodeType": "YulLiteral",
																				"src": "3297:10:12",
																				"type": "",
																				"value": "0x4e487b71"
																			}
																		],
																		"functionName": {
																			"name": "shl",
																			"nativeSrc": "3288:3:12",
																			"nodeType": "YulIdentifier",
																			"src": "3288:3:12"
																		},
																		"nativeSrc": "3288:20:12",
																		"nodeType": "YulFunctionCall",
																		"src": "3288:20:12"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "3278:6:12",
																	"nodeType": "YulIdentifier",
																	"src": "3278:6:12"
																},
																"nativeSrc": "3278:31:12",
																"nodeType": "YulFunctionCall",
																"src": "3278:31:12"
															},
															"nativeSrc": "3278:31:12",
															"nodeType": "YulExpressionStatement",
															"src": "3278:31:12"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "3325:1:12",
																		"nodeType": "YulLiteral",
																		"src": "3325:1:12",
																		"type": "",
																		"value": "4"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "3328:4:12",
																		"nodeType": "YulLiteral",
																		"src": "3328:4:12",
																		"type": "",
																		"value": "0x41"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "3318:6:12",
																	"nodeType": "YulIdentifier",
																	"src": "3318:6:12"
																},
																"nativeSrc": "3318:15:12",
																"nodeType": "YulFunctionCall",
																"src": "3318:15:12"
															},
															"nativeSrc": "3318:15:12",
															"nodeType": "YulExpressionStatement",
															"src": "3318:15:12"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "3349:1:12",
																		"nodeType": "YulLiteral",
																		"src": "3349:1:12",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "3352:4:12",
																		"nodeType": "YulLiteral",
																		"src": "3352:4:12",
																		"type": "",
																		"value": "0x24"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nativeSrc": "3342:6:12",
																	"nodeType": "YulIdentifier",
																	"src": "3342:6:12"
																},
																"nativeSrc": "3342:15:12",
																"nodeType": "YulFunctionCall",
																"src": "3342:15:12"
															},
															"nativeSrc": "3342:15:12",
															"nodeType": "YulExpressionStatement",
															"src": "3342:15:12"
														}
													]
												},
												"name": "panic_error_0x41",
												"nativeSrc": "3236:127:12",
												"nodeType": "YulFunctionDefinition",
												"src": "3236:127:12"
											},
											{
												"body": {
													"nativeSrc": "3498:1008:12",
													"nodeType": "YulBlock",
													"src": "3498:1008:12",
													"statements": [
														{
															"body": {
																"nativeSrc": "3545:16:12",
																"nodeType": "YulBlock",
																"src": "3545:16:12",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nativeSrc": "3554:1:12",
																					"nodeType": "YulLiteral",
																					"src": "3554:1:12",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "3557:1:12",
																					"nodeType": "YulLiteral",
																					"src": "3557:1:12",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nativeSrc": "3547:6:12",
																				"nodeType": "YulIdentifier",
																				"src": "3547:6:12"
																			},
																			"nativeSrc": "3547:12:12",
																			"nodeType": "YulFunctionCall",
																			"src": "3547:12:12"
																		},
																		"nativeSrc": "3547:12:12",
																		"nodeType": "YulExpressionStatement",
																		"src": "3547:12:12"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nativeSrc": "3519:7:12",
																				"nodeType": "YulIdentifier",
																				"src": "3519:7:12"
																			},
																			{
																				"name": "headStart",
																				"nativeSrc": "3528:9:12",
																				"nodeType": "YulIdentifier",
																				"src": "3528:9:12"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "3515:3:12",
																			"nodeType": "YulIdentifier",
																			"src": "3515:3:12"
																		},
																		"nativeSrc": "3515:23:12",
																		"nodeType": "YulFunctionCall",
																		"src": "3515:23:12"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "3540:3:12",
																		"nodeType": "YulLiteral",
																		"src": "3540:3:12",
																		"type": "",
																		"value": "128"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nativeSrc": "3511:3:12",
																	"nodeType": "YulIdentifier",
																	"src": "3511:3:12"
																},
																"nativeSrc": "3511:33:12",
																"nodeType": "YulFunctionCall",
																"src": "3511:33:12"
															},
															"nativeSrc": "3508:53:12",
															"nodeType": "YulIf",
															"src": "3508:53:12"
														},
														{
															"nativeSrc": "3570:39:12",
															"nodeType": "YulAssignment",
															"src": "3570:39:12",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "3599:9:12",
																		"nodeType": "YulIdentifier",
																		"src": "3599:9:12"
																	}
																],
																"functionName": {
																	"name": "abi_decode_address",
																	"nativeSrc": "3580:18:12",
																	"nodeType": "YulIdentifier",
																	"src": "3580:18:12"
																},
																"nativeSrc": "3580:29:12",
																"nodeType": "YulFunctionCall",
																"src": "3580:29:12"
															},
															"variableNames": [
																{
																	"name": "value0",
																	"nativeSrc": "3570:6:12",
																	"nodeType": "YulIdentifier",
																	"src": "3570:6:12"
																}
															]
														},
														{
															"nativeSrc": "3618:48:12",
															"nodeType": "YulAssignment",
															"src": "3618:48:12",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "3651:9:12",
																				"nodeType": "YulIdentifier",
																				"src": "3651:9:12"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "3662:2:12",
																				"nodeType": "YulLiteral",
																				"src": "3662:2:12",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "3647:3:12",
																			"nodeType": "YulIdentifier",
																			"src": "3647:3:12"
																		},
																		"nativeSrc": "3647:18:12",
																		"nodeType": "YulFunctionCall",
																		"src": "3647:18:12"
																	}
																],
																"functionName": {
																	"name": "abi_decode_address",
																	"nativeSrc": "3628:18:12",
																	"nodeType": "YulIdentifier",
																	"src": "3628:18:12"
																},
																"nativeSrc": "3628:38:12",
																"nodeType": "YulFunctionCall",
																"src": "3628:38:12"
															},
															"variableNames": [
																{
																	"name": "value1",
																	"nativeSrc": "3618:6:12",
																	"nodeType": "YulIdentifier",
																	"src": "3618:6:12"
																}
															]
														},
														{
															"nativeSrc": "3675:42:12",
															"nodeType": "YulAssignment",
															"src": "3675:42:12",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "3702:9:12",
																				"nodeType": "YulIdentifier",
																				"src": "3702:9:12"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "3713:2:12",
																				"nodeType": "YulLiteral",
																				"src": "3713:2:12",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "3698:3:12",
																			"nodeType": "YulIdentifier",
																			"src": "3698:3:12"
																		},
																		"nativeSrc": "3698:18:12",
																		"nodeType": "YulFunctionCall",
																		"src": "3698:18:12"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nativeSrc": "3685:12:12",
																	"nodeType": "YulIdentifier",
																	"src": "3685:12:12"
																},
																"nativeSrc": "3685:32:12",
																"nodeType": "YulFunctionCall",
																"src": "3685:32:12"
															},
															"variableNames": [
																{
																	"name": "value2",
																	"nativeSrc": "3675:6:12",
																	"nodeType": "YulIdentifier",
																	"src": "3675:6:12"
																}
															]
														},
														{
															"nativeSrc": "3726:46:12",
															"nodeType": "YulVariableDeclaration",
															"src": "3726:46:12",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "3757:9:12",
																				"nodeType": "YulIdentifier",
																				"src": "3757:9:12"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "3768:2:12",
																				"nodeType": "YulLiteral",
																				"src": "3768:2:12",
																				"type": "",
																				"value": "96"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "3753:3:12",
																			"nodeType": "YulIdentifier",
																			"src": "3753:3:12"
																		},
																		"nativeSrc": "3753:18:12",
																		"nodeType": "YulFunctionCall",
																		"src": "3753:18:12"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nativeSrc": "3740:12:12",
																	"nodeType": "YulIdentifier",
																	"src": "3740:12:12"
																},
																"nativeSrc": "3740:32:12",
																"nodeType": "YulFunctionCall",
																"src": "3740:32:12"
															},
															"variables": [
																{
																	"name": "offset",
																	"nativeSrc": "3730:6:12",
																	"nodeType": "YulTypedName",
																	"src": "3730:6:12",
																	"type": ""
																}
															]
														},
														{
															"nativeSrc": "3781:28:12",
															"nodeType": "YulVariableDeclaration",
															"src": "3781:28:12",
															"value": {
																"kind": "number",
																"nativeSrc": "3791:18:12",
																"nodeType": "YulLiteral",
																"src": "3791:18:12",
																"type": "",
																"value": "0xffffffffffffffff"
															},
															"variables": [
																{
																	"name": "_1",
																	"nativeSrc": "3785:2:12",
																	"nodeType": "YulTypedName",
																	"src": "3785:2:12",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nativeSrc": "3836:16:12",
																"nodeType": "YulBlock",
																"src": "3836:16:12",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nativeSrc": "3845:1:12",
																					"nodeType": "YulLiteral",
																					"src": "3845:1:12",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "3848:1:12",
																					"nodeType": "YulLiteral",
																					"src": "3848:1:12",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nativeSrc": "3838:6:12",
																				"nodeType": "YulIdentifier",
																				"src": "3838:6:12"
																			},
																			"nativeSrc": "3838:12:12",
																			"nodeType": "YulFunctionCall",
																			"src": "3838:12:12"
																		},
																		"nativeSrc": "3838:12:12",
																		"nodeType": "YulExpressionStatement",
																		"src": "3838:12:12"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "offset",
																		"nativeSrc": "3824:6:12",
																		"nodeType": "YulIdentifier",
																		"src": "3824:6:12"
																	},
																	{
																		"name": "_1",
																		"nativeSrc": "3832:2:12",
																		"nodeType": "YulIdentifier",
																		"src": "3832:2:12"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nativeSrc": "3821:2:12",
																	"nodeType": "YulIdentifier",
																	"src": "3821:2:12"
																},
																"nativeSrc": "3821:14:12",
																"nodeType": "YulFunctionCall",
																"src": "3821:14:12"
															},
															"nativeSrc": "3818:34:12",
															"nodeType": "YulIf",
															"src": "3818:34:12"
														},
														{
															"nativeSrc": "3861:32:12",
															"nodeType": "YulVariableDeclaration",
															"src": "3861:32:12",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "3875:9:12",
																		"nodeType": "YulIdentifier",
																		"src": "3875:9:12"
																	},
																	{
																		"name": "offset",
																		"nativeSrc": "3886:6:12",
																		"nodeType": "YulIdentifier",
																		"src": "3886:6:12"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "3871:3:12",
																	"nodeType": "YulIdentifier",
																	"src": "3871:3:12"
																},
																"nativeSrc": "3871:22:12",
																"nodeType": "YulFunctionCall",
																"src": "3871:22:12"
															},
															"variables": [
																{
																	"name": "_2",
																	"nativeSrc": "3865:2:12",
																	"nodeType": "YulTypedName",
																	"src": "3865:2:12",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nativeSrc": "3941:16:12",
																"nodeType": "YulBlock",
																"src": "3941:16:12",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nativeSrc": "3950:1:12",
																					"nodeType": "YulLiteral",
																					"src": "3950:1:12",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "3953:1:12",
																					"nodeType": "YulLiteral",
																					"src": "3953:1:12",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nativeSrc": "3943:6:12",
																				"nodeType": "YulIdentifier",
																				"src": "3943:6:12"
																			},
																			"nativeSrc": "3943:12:12",
																			"nodeType": "YulFunctionCall",
																			"src": "3943:12:12"
																		},
																		"nativeSrc": "3943:12:12",
																		"nodeType": "YulExpressionStatement",
																		"src": "3943:12:12"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "_2",
																						"nativeSrc": "3920:2:12",
																						"nodeType": "YulIdentifier",
																						"src": "3920:2:12"
																					},
																					{
																						"kind": "number",
																						"nativeSrc": "3924:4:12",
																						"nodeType": "YulLiteral",
																						"src": "3924:4:12",
																						"type": "",
																						"value": "0x1f"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "3916:3:12",
																					"nodeType": "YulIdentifier",
																					"src": "3916:3:12"
																				},
																				"nativeSrc": "3916:13:12",
																				"nodeType": "YulFunctionCall",
																				"src": "3916:13:12"
																			},
																			{
																				"name": "dataEnd",
																				"nativeSrc": "3931:7:12",
																				"nodeType": "YulIdentifier",
																				"src": "3931:7:12"
																			}
																		],
																		"functionName": {
																			"name": "slt",
																			"nativeSrc": "3912:3:12",
																			"nodeType": "YulIdentifier",
																			"src": "3912:3:12"
																		},
																		"nativeSrc": "3912:27:12",
																		"nodeType": "YulFunctionCall",
																		"src": "3912:27:12"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nativeSrc": "3905:6:12",
																	"nodeType": "YulIdentifier",
																	"src": "3905:6:12"
																},
																"nativeSrc": "3905:35:12",
																"nodeType": "YulFunctionCall",
																"src": "3905:35:12"
															},
															"nativeSrc": "3902:55:12",
															"nodeType": "YulIf",
															"src": "3902:55:12"
														},
														{
															"nativeSrc": "3966:26:12",
															"nodeType": "YulVariableDeclaration",
															"src": "3966:26:12",
															"value": {
																"arguments": [
																	{
																		"name": "_2",
																		"nativeSrc": "3989:2:12",
																		"nodeType": "YulIdentifier",
																		"src": "3989:2:12"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nativeSrc": "3976:12:12",
																	"nodeType": "YulIdentifier",
																	"src": "3976:12:12"
																},
																"nativeSrc": "3976:16:12",
																"nodeType": "YulFunctionCall",
																"src": "3976:16:12"
															},
															"variables": [
																{
																	"name": "_3",
																	"nativeSrc": "3970:2:12",
																	"nodeType": "YulTypedName",
																	"src": "3970:2:12",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nativeSrc": "4015:22:12",
																"nodeType": "YulBlock",
																"src": "4015:22:12",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "panic_error_0x41",
																				"nativeSrc": "4017:16:12",
																				"nodeType": "YulIdentifier",
																				"src": "4017:16:12"
																			},
																			"nativeSrc": "4017:18:12",
																			"nodeType": "YulFunctionCall",
																			"src": "4017:18:12"
																		},
																		"nativeSrc": "4017:18:12",
																		"nodeType": "YulExpressionStatement",
																		"src": "4017:18:12"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "_3",
																		"nativeSrc": "4007:2:12",
																		"nodeType": "YulIdentifier",
																		"src": "4007:2:12"
																	},
																	{
																		"name": "_1",
																		"nativeSrc": "4011:2:12",
																		"nodeType": "YulIdentifier",
																		"src": "4011:2:12"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nativeSrc": "4004:2:12",
																	"nodeType": "YulIdentifier",
																	"src": "4004:2:12"
																},
																"nativeSrc": "4004:10:12",
																"nodeType": "YulFunctionCall",
																"src": "4004:10:12"
															},
															"nativeSrc": "4001:36:12",
															"nodeType": "YulIf",
															"src": "4001:36:12"
														},
														{
															"nativeSrc": "4046:17:12",
															"nodeType": "YulVariableDeclaration",
															"src": "4046:17:12",
															"value": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "4060:2:12",
																		"nodeType": "YulLiteral",
																		"src": "4060:2:12",
																		"type": "",
																		"value": "31"
																	}
																],
																"functionName": {
																	"name": "not",
																	"nativeSrc": "4056:3:12",
																	"nodeType": "YulIdentifier",
																	"src": "4056:3:12"
																},
																"nativeSrc": "4056:7:12",
																"nodeType": "YulFunctionCall",
																"src": "4056:7:12"
															},
															"variables": [
																{
																	"name": "_4",
																	"nativeSrc": "4050:2:12",
																	"nodeType": "YulTypedName",
																	"src": "4050:2:12",
																	"type": ""
																}
															]
														},
														{
															"nativeSrc": "4072:23:12",
															"nodeType": "YulVariableDeclaration",
															"src": "4072:23:12",
															"value": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "4092:2:12",
																		"nodeType": "YulLiteral",
																		"src": "4092:2:12",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nativeSrc": "4086:5:12",
																	"nodeType": "YulIdentifier",
																	"src": "4086:5:12"
																},
																"nativeSrc": "4086:9:12",
																"nodeType": "YulFunctionCall",
																"src": "4086:9:12"
															},
															"variables": [
																{
																	"name": "memPtr",
																	"nativeSrc": "4076:6:12",
																	"nodeType": "YulTypedName",
																	"src": "4076:6:12",
																	"type": ""
																}
															]
														},
														{
															"nativeSrc": "4104:71:12",
															"nodeType": "YulVariableDeclaration",
															"src": "4104:71:12",
															"value": {
																"arguments": [
																	{
																		"name": "memPtr",
																		"nativeSrc": "4126:6:12",
																		"nodeType": "YulIdentifier",
																		"src": "4126:6:12"
																	},
																	{
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"arguments": [
																							{
																								"arguments": [
																									{
																										"name": "_3",
																										"nativeSrc": "4150:2:12",
																										"nodeType": "YulIdentifier",
																										"src": "4150:2:12"
																									},
																									{
																										"kind": "number",
																										"nativeSrc": "4154:4:12",
																										"nodeType": "YulLiteral",
																										"src": "4154:4:12",
																										"type": "",
																										"value": "0x1f"
																									}
																								],
																								"functionName": {
																									"name": "add",
																									"nativeSrc": "4146:3:12",
																									"nodeType": "YulIdentifier",
																									"src": "4146:3:12"
																								},
																								"nativeSrc": "4146:13:12",
																								"nodeType": "YulFunctionCall",
																								"src": "4146:13:12"
																							},
																							{
																								"name": "_4",
																								"nativeSrc": "4161:2:12",
																								"nodeType": "YulIdentifier",
																								"src": "4161:2:12"
																							}
																						],
																						"functionName": {
																							"name": "and",
																							"nativeSrc": "4142:3:12",
																							"nodeType": "YulIdentifier",
																							"src": "4142:3:12"
																						},
																						"nativeSrc": "4142:22:12",
																						"nodeType": "YulFunctionCall",
																						"src": "4142:22:12"
																					},
																					{
																						"kind": "number",
																						"nativeSrc": "4166:2:12",
																						"nodeType": "YulLiteral",
																						"src": "4166:2:12",
																						"type": "",
																						"value": "63"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "4138:3:12",
																					"nodeType": "YulIdentifier",
																					"src": "4138:3:12"
																				},
																				"nativeSrc": "4138:31:12",
																				"nodeType": "YulFunctionCall",
																				"src": "4138:31:12"
																			},
																			{
																				"name": "_4",
																				"nativeSrc": "4171:2:12",
																				"nodeType": "YulIdentifier",
																				"src": "4171:2:12"
																			}
																		],
																		"functionName": {
																			"name": "and",
																			"nativeSrc": "4134:3:12",
																			"nodeType": "YulIdentifier",
																			"src": "4134:3:12"
																		},
																		"nativeSrc": "4134:40:12",
																		"nodeType": "YulFunctionCall",
																		"src": "4134:40:12"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "4122:3:12",
																	"nodeType": "YulIdentifier",
																	"src": "4122:3:12"
																},
																"nativeSrc": "4122:53:12",
																"nodeType": "YulFunctionCall",
																"src": "4122:53:12"
															},
															"variables": [
																{
																	"name": "newFreePtr",
																	"nativeSrc": "4108:10:12",
																	"nodeType": "YulTypedName",
																	"src": "4108:10:12",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nativeSrc": "4234:22:12",
																"nodeType": "YulBlock",
																"src": "4234:22:12",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "panic_error_0x41",
																				"nativeSrc": "4236:16:12",
																				"nodeType": "YulIdentifier",
																				"src": "4236:16:12"
																			},
																			"nativeSrc": "4236:18:12",
																			"nodeType": "YulFunctionCall",
																			"src": "4236:18:12"
																		},
																		"nativeSrc": "4236:18:12",
																		"nodeType": "YulExpressionStatement",
																		"src": "4236:18:12"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "newFreePtr",
																				"nativeSrc": "4193:10:12",
																				"nodeType": "YulIdentifier",
																				"src": "4193:10:12"
																			},
																			{
																				"name": "_1",
																				"nativeSrc": "4205:2:12",
																				"nodeType": "YulIdentifier",
																				"src": "4205:2:12"
																			}
																		],
																		"functionName": {
																			"name": "gt",
																			"nativeSrc": "4190:2:12",
																			"nodeType": "YulIdentifier",
																			"src": "4190:2:12"
																		},
																		"nativeSrc": "4190:18:12",
																		"nodeType": "YulFunctionCall",
																		"src": "4190:18:12"
																	},
																	{
																		"arguments": [
																			{
																				"name": "newFreePtr",
																				"nativeSrc": "4213:10:12",
																				"nodeType": "YulIdentifier",
																				"src": "4213:10:12"
																			},
																			{
																				"name": "memPtr",
																				"nativeSrc": "4225:6:12",
																				"nodeType": "YulIdentifier",
																				"src": "4225:6:12"
																			}
																		],
																		"functionName": {
																			"name": "lt",
																			"nativeSrc": "4210:2:12",
																			"nodeType": "YulIdentifier",
																			"src": "4210:2:12"
																		},
																		"nativeSrc": "4210:22:12",
																		"nodeType": "YulFunctionCall",
																		"src": "4210:22:12"
																	}
																],
																"functionName": {
																	"name": "or",
																	"nativeSrc": "4187:2:12",
																	"nodeType": "YulIdentifier",
																	"src": "4187:2:12"
																},
																"nativeSrc": "4187:46:12",
																"nodeType": "YulFunctionCall",
																"src": "4187:46:12"
															},
															"nativeSrc": "4184:72:12",
															"nodeType": "YulIf",
															"src": "4184:72:12"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "4272:2:12",
																		"nodeType": "YulLiteral",
																		"src": "4272:2:12",
																		"type": "",
																		"value": "64"
																	},
																	{
																		"name": "newFreePtr",
																		"nativeSrc": "4276:10:12",
																		"nodeType": "YulIdentifier",
																		"src": "4276:10:12"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "4265:6:12",
																	"nodeType": "YulIdentifier",
																	"src": "4265:6:12"
																},
																"nativeSrc": "4265:22:12",
																"nodeType": "YulFunctionCall",
																"src": "4265:22:12"
															},
															"nativeSrc": "4265:22:12",
															"nodeType": "YulExpressionStatement",
															"src": "4265:22:12"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "memPtr",
																		"nativeSrc": "4303:6:12",
																		"nodeType": "YulIdentifier",
																		"src": "4303:6:12"
																	},
																	{
																		"name": "_3",
																		"nativeSrc": "4311:2:12",
																		"nodeType": "YulIdentifier",
																		"src": "4311:2:12"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "4296:6:12",
																	"nodeType": "YulIdentifier",
																	"src": "4296:6:12"
																},
																"nativeSrc": "4296:18:12",
																"nodeType": "YulFunctionCall",
																"src": "4296:18:12"
															},
															"nativeSrc": "4296:18:12",
															"nodeType": "YulExpressionStatement",
															"src": "4296:18:12"
														},
														{
															"body": {
																"nativeSrc": "4360:16:12",
																"nodeType": "YulBlock",
																"src": "4360:16:12",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nativeSrc": "4369:1:12",
																					"nodeType": "YulLiteral",
																					"src": "4369:1:12",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "4372:1:12",
																					"nodeType": "YulLiteral",
																					"src": "4372:1:12",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nativeSrc": "4362:6:12",
																				"nodeType": "YulIdentifier",
																				"src": "4362:6:12"
																			},
																			"nativeSrc": "4362:12:12",
																			"nodeType": "YulFunctionCall",
																			"src": "4362:12:12"
																		},
																		"nativeSrc": "4362:12:12",
																		"nodeType": "YulExpressionStatement",
																		"src": "4362:12:12"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "_2",
																						"nativeSrc": "4337:2:12",
																						"nodeType": "YulIdentifier",
																						"src": "4337:2:12"
																					},
																					{
																						"name": "_3",
																						"nativeSrc": "4341:2:12",
																						"nodeType": "YulIdentifier",
																						"src": "4341:2:12"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "4333:3:12",
																					"nodeType": "YulIdentifier",
																					"src": "4333:3:12"
																				},
																				"nativeSrc": "4333:11:12",
																				"nodeType": "YulFunctionCall",
																				"src": "4333:11:12"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "4346:2:12",
																				"nodeType": "YulLiteral",
																				"src": "4346:2:12",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "4329:3:12",
																			"nodeType": "YulIdentifier",
																			"src": "4329:3:12"
																		},
																		"nativeSrc": "4329:20:12",
																		"nodeType": "YulFunctionCall",
																		"src": "4329:20:12"
																	},
																	{
																		"name": "dataEnd",
																		"nativeSrc": "4351:7:12",
																		"nodeType": "YulIdentifier",
																		"src": "4351:7:12"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nativeSrc": "4326:2:12",
																	"nodeType": "YulIdentifier",
																	"src": "4326:2:12"
																},
																"nativeSrc": "4326:33:12",
																"nodeType": "YulFunctionCall",
																"src": "4326:33:12"
															},
															"nativeSrc": "4323:53:12",
															"nodeType": "YulIf",
															"src": "4323:53:12"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "memPtr",
																				"nativeSrc": "4402:6:12",
																				"nodeType": "YulIdentifier",
																				"src": "4402:6:12"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "4410:2:12",
																				"nodeType": "YulLiteral",
																				"src": "4410:2:12",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "4398:3:12",
																			"nodeType": "YulIdentifier",
																			"src": "4398:3:12"
																		},
																		"nativeSrc": "4398:15:12",
																		"nodeType": "YulFunctionCall",
																		"src": "4398:15:12"
																	},
																	{
																		"arguments": [
																			{
																				"name": "_2",
																				"nativeSrc": "4419:2:12",
																				"nodeType": "YulIdentifier",
																				"src": "4419:2:12"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "4423:2:12",
																				"nodeType": "YulLiteral",
																				"src": "4423:2:12",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "4415:3:12",
																			"nodeType": "YulIdentifier",
																			"src": "4415:3:12"
																		},
																		"nativeSrc": "4415:11:12",
																		"nodeType": "YulFunctionCall",
																		"src": "4415:11:12"
																	},
																	{
																		"name": "_3",
																		"nativeSrc": "4428:2:12",
																		"nodeType": "YulIdentifier",
																		"src": "4428:2:12"
																	}
																],
																"functionName": {
																	"name": "calldatacopy",
																	"nativeSrc": "4385:12:12",
																	"nodeType": "YulIdentifier",
																	"src": "4385:12:12"
																},
																"nativeSrc": "4385:46:12",
																"nodeType": "YulFunctionCall",
																"src": "4385:46:12"
															},
															"nativeSrc": "4385:46:12",
															"nodeType": "YulExpressionStatement",
															"src": "4385:46:12"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "memPtr",
																						"nativeSrc": "4455:6:12",
																						"nodeType": "YulIdentifier",
																						"src": "4455:6:12"
																					},
																					{
																						"name": "_3",
																						"nativeSrc": "4463:2:12",
																						"nodeType": "YulIdentifier",
																						"src": "4463:2:12"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "4451:3:12",
																					"nodeType": "YulIdentifier",
																					"src": "4451:3:12"
																				},
																				"nativeSrc": "4451:15:12",
																				"nodeType": "YulFunctionCall",
																				"src": "4451:15:12"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "4468:2:12",
																				"nodeType": "YulLiteral",
																				"src": "4468:2:12",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "4447:3:12",
																			"nodeType": "YulIdentifier",
																			"src": "4447:3:12"
																		},
																		"nativeSrc": "4447:24:12",
																		"nodeType": "YulFunctionCall",
																		"src": "4447:24:12"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "4473:1:12",
																		"nodeType": "YulLiteral",
																		"src": "4473:1:12",
																		"type": "",
																		"value": "0"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "4440:6:12",
																	"nodeType": "YulIdentifier",
																	"src": "4440:6:12"
																},
																"nativeSrc": "4440:35:12",
																"nodeType": "YulFunctionCall",
																"src": "4440:35:12"
															},
															"nativeSrc": "4440:35:12",
															"nodeType": "YulExpressionStatement",
															"src": "4440:35:12"
														},
														{
															"nativeSrc": "4484:16:12",
															"nodeType": "YulAssignment",
															"src": "4484:16:12",
															"value": {
																"name": "memPtr",
																"nativeSrc": "4494:6:12",
																"nodeType": "YulIdentifier",
																"src": "4494:6:12"
															},
															"variableNames": [
																{
																	"name": "value3",
																	"nativeSrc": "4484:6:12",
																	"nodeType": "YulIdentifier",
																	"src": "4484:6:12"
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_addresst_addresst_uint256t_bytes_memory_ptr",
												"nativeSrc": "3368:1138:12",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "3440:9:12",
														"nodeType": "YulTypedName",
														"src": "3440:9:12",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nativeSrc": "3451:7:12",
														"nodeType": "YulTypedName",
														"src": "3451:7:12",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nativeSrc": "3463:6:12",
														"nodeType": "YulTypedName",
														"src": "3463:6:12",
														"type": ""
													},
													{
														"name": "value1",
														"nativeSrc": "3471:6:12",
														"nodeType": "YulTypedName",
														"src": "3471:6:12",
														"type": ""
													},
													{
														"name": "value2",
														"nativeSrc": "3479:6:12",
														"nodeType": "YulTypedName",
														"src": "3479:6:12",
														"type": ""
													},
													{
														"name": "value3",
														"nativeSrc": "3487:6:12",
														"nodeType": "YulTypedName",
														"src": "3487:6:12",
														"type": ""
													}
												],
												"src": "3368:1138:12"
											},
											{
												"body": {
													"nativeSrc": "4598:173:12",
													"nodeType": "YulBlock",
													"src": "4598:173:12",
													"statements": [
														{
															"body": {
																"nativeSrc": "4644:16:12",
																"nodeType": "YulBlock",
																"src": "4644:16:12",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nativeSrc": "4653:1:12",
																					"nodeType": "YulLiteral",
																					"src": "4653:1:12",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "4656:1:12",
																					"nodeType": "YulLiteral",
																					"src": "4656:1:12",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nativeSrc": "4646:6:12",
																				"nodeType": "YulIdentifier",
																				"src": "4646:6:12"
																			},
																			"nativeSrc": "4646:12:12",
																			"nodeType": "YulFunctionCall",
																			"src": "4646:12:12"
																		},
																		"nativeSrc": "4646:12:12",
																		"nodeType": "YulExpressionStatement",
																		"src": "4646:12:12"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nativeSrc": "4619:7:12",
																				"nodeType": "YulIdentifier",
																				"src": "4619:7:12"
																			},
																			{
																				"name": "headStart",
																				"nativeSrc": "4628:9:12",
																				"nodeType": "YulIdentifier",
																				"src": "4628:9:12"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "4615:3:12",
																			"nodeType": "YulIdentifier",
																			"src": "4615:3:12"
																		},
																		"nativeSrc": "4615:23:12",
																		"nodeType": "YulFunctionCall",
																		"src": "4615:23:12"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "4640:2:12",
																		"nodeType": "YulLiteral",
																		"src": "4640:2:12",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nativeSrc": "4611:3:12",
																	"nodeType": "YulIdentifier",
																	"src": "4611:3:12"
																},
																"nativeSrc": "4611:32:12",
																"nodeType": "YulFunctionCall",
																"src": "4611:32:12"
															},
															"nativeSrc": "4608:52:12",
															"nodeType": "YulIf",
															"src": "4608:52:12"
														},
														{
															"nativeSrc": "4669:39:12",
															"nodeType": "YulAssignment",
															"src": "4669:39:12",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "4698:9:12",
																		"nodeType": "YulIdentifier",
																		"src": "4698:9:12"
																	}
																],
																"functionName": {
																	"name": "abi_decode_address",
																	"nativeSrc": "4679:18:12",
																	"nodeType": "YulIdentifier",
																	"src": "4679:18:12"
																},
																"nativeSrc": "4679:29:12",
																"nodeType": "YulFunctionCall",
																"src": "4679:29:12"
															},
															"variableNames": [
																{
																	"name": "value0",
																	"nativeSrc": "4669:6:12",
																	"nodeType": "YulIdentifier",
																	"src": "4669:6:12"
																}
															]
														},
														{
															"nativeSrc": "4717:48:12",
															"nodeType": "YulAssignment",
															"src": "4717:48:12",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "4750:9:12",
																				"nodeType": "YulIdentifier",
																				"src": "4750:9:12"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "4761:2:12",
																				"nodeType": "YulLiteral",
																				"src": "4761:2:12",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "4746:3:12",
																			"nodeType": "YulIdentifier",
																			"src": "4746:3:12"
																		},
																		"nativeSrc": "4746:18:12",
																		"nodeType": "YulFunctionCall",
																		"src": "4746:18:12"
																	}
																],
																"functionName": {
																	"name": "abi_decode_address",
																	"nativeSrc": "4727:18:12",
																	"nodeType": "YulIdentifier",
																	"src": "4727:18:12"
																},
																"nativeSrc": "4727:38:12",
																"nodeType": "YulFunctionCall",
																"src": "4727:38:12"
															},
															"variableNames": [
																{
																	"name": "value1",
																	"nativeSrc": "4717:6:12",
																	"nodeType": "YulIdentifier",
																	"src": "4717:6:12"
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_addresst_address",
												"nativeSrc": "4511:260:12",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "4556:9:12",
														"nodeType": "YulTypedName",
														"src": "4556:9:12",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nativeSrc": "4567:7:12",
														"nodeType": "YulTypedName",
														"src": "4567:7:12",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nativeSrc": "4579:6:12",
														"nodeType": "YulTypedName",
														"src": "4579:6:12",
														"type": ""
													},
													{
														"name": "value1",
														"nativeSrc": "4587:6:12",
														"nodeType": "YulTypedName",
														"src": "4587:6:12",
														"type": ""
													}
												],
												"src": "4511:260:12"
											},
											{
												"body": {
													"nativeSrc": "4831:325:12",
													"nodeType": "YulBlock",
													"src": "4831:325:12",
													"statements": [
														{
															"nativeSrc": "4841:22:12",
															"nodeType": "YulAssignment",
															"src": "4841:22:12",
															"value": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "4855:1:12",
																		"nodeType": "YulLiteral",
																		"src": "4855:1:12",
																		"type": "",
																		"value": "1"
																	},
																	{
																		"name": "data",
																		"nativeSrc": "4858:4:12",
																		"nodeType": "YulIdentifier",
																		"src": "4858:4:12"
																	}
																],
																"functionName": {
																	"name": "shr",
																	"nativeSrc": "4851:3:12",
																	"nodeType": "YulIdentifier",
																	"src": "4851:3:12"
																},
																"nativeSrc": "4851:12:12",
																"nodeType": "YulFunctionCall",
																"src": "4851:12:12"
															},
															"variableNames": [
																{
																	"name": "length",
																	"nativeSrc": "4841:6:12",
																	"nodeType": "YulIdentifier",
																	"src": "4841:6:12"
																}
															]
														},
														{
															"nativeSrc": "4872:38:12",
															"nodeType": "YulVariableDeclaration",
															"src": "4872:38:12",
															"value": {
																"arguments": [
																	{
																		"name": "data",
																		"nativeSrc": "4902:4:12",
																		"nodeType": "YulIdentifier",
																		"src": "4902:4:12"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "4908:1:12",
																		"nodeType": "YulLiteral",
																		"src": "4908:1:12",
																		"type": "",
																		"value": "1"
																	}
																],
																"functionName": {
																	"name": "and",
																	"nativeSrc": "4898:3:12",
																	"nodeType": "YulIdentifier",
																	"src": "4898:3:12"
																},
																"nativeSrc": "4898:12:12",
																"nodeType": "YulFunctionCall",
																"src": "4898:12:12"
															},
															"variables": [
																{
																	"name": "outOfPlaceEncoding",
																	"nativeSrc": "4876:18:12",
																	"nodeType": "YulTypedName",
																	"src": "4876:18:12",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nativeSrc": "4949:31:12",
																"nodeType": "YulBlock",
																"src": "4949:31:12",
																"statements": [
																	{
																		"nativeSrc": "4951:27:12",
																		"nodeType": "YulAssignment",
																		"src": "4951:27:12",
																		"value": {
																			"arguments": [
																				{
																					"name": "length",
																					"nativeSrc": "4965:6:12",
																					"nodeType": "YulIdentifier",
																					"src": "4965:6:12"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "4973:4:12",
																					"nodeType": "YulLiteral",
																					"src": "4973:4:12",
																					"type": "",
																					"value": "0x7f"
																				}
																			],
																			"functionName": {
																				"name": "and",
																				"nativeSrc": "4961:3:12",
																				"nodeType": "YulIdentifier",
																				"src": "4961:3:12"
																			},
																			"nativeSrc": "4961:17:12",
																			"nodeType": "YulFunctionCall",
																			"src": "4961:17:12"
																		},
																		"variableNames": [
																			{
																				"name": "length",
																				"nativeSrc": "4951:6:12",
																				"nodeType": "YulIdentifier",
																				"src": "4951:6:12"
																			}
																		]
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "outOfPlaceEncoding",
																		"nativeSrc": "4929:18:12",
																		"nodeType": "YulIdentifier",
																		"src": "4929:18:12"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nativeSrc": "4922:6:12",
																	"nodeType": "YulIdentifier",
																	"src": "4922:6:12"
																},
																"nativeSrc": "4922:26:12",
																"nodeType": "YulFunctionCall",
																"src": "4922:26:12"
															},
															"nativeSrc": "4919:61:12",
															"nodeType": "YulIf",
															"src": "4919:61:12"
														},
														{
															"body": {
																"nativeSrc": "5039:111:12",
																"nodeType": "YulBlock",
																"src": "5039:111:12",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nativeSrc": "5060:1:12",
																					"nodeType": "YulLiteral",
																					"src": "5060:1:12",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"arguments": [
																						{
																							"kind": "number",
																							"nativeSrc": "5067:3:12",
																							"nodeType": "YulLiteral",
																							"src": "5067:3:12",
																							"type": "",
																							"value": "224"
																						},
																						{
																							"kind": "number",
																							"nativeSrc": "5072:10:12",
																							"nodeType": "YulLiteral",
																							"src": "5072:10:12",
																							"type": "",
																							"value": "0x4e487b71"
																						}
																					],
																					"functionName": {
																						"name": "shl",
																						"nativeSrc": "5063:3:12",
																						"nodeType": "YulIdentifier",
																						"src": "5063:3:12"
																					},
																					"nativeSrc": "5063:20:12",
																					"nodeType": "YulFunctionCall",
																					"src": "5063:20:12"
																				}
																			],
																			"functionName": {
																				"name": "mstore",
																				"nativeSrc": "5053:6:12",
																				"nodeType": "YulIdentifier",
																				"src": "5053:6:12"
																			},
																			"nativeSrc": "5053:31:12",
																			"nodeType": "YulFunctionCall",
																			"src": "5053:31:12"
																		},
																		"nativeSrc": "5053:31:12",
																		"nodeType": "YulExpressionStatement",
																		"src": "5053:31:12"
																	},
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nativeSrc": "5104:1:12",
																					"nodeType": "YulLiteral",
																					"src": "5104:1:12",
																					"type": "",
																					"value": "4"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "5107:4:12",
																					"nodeType": "YulLiteral",
																					"src": "5107:4:12",
																					"type": "",
																					"value": "0x22"
																				}
																			],
																			"functionName": {
																				"name": "mstore",
																				"nativeSrc": "5097:6:12",
																				"nodeType": "YulIdentifier",
																				"src": "5097:6:12"
																			},
																			"nativeSrc": "5097:15:12",
																			"nodeType": "YulFunctionCall",
																			"src": "5097:15:12"
																		},
																		"nativeSrc": "5097:15:12",
																		"nodeType": "YulExpressionStatement",
																		"src": "5097:15:12"
																	},
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nativeSrc": "5132:1:12",
																					"nodeType": "YulLiteral",
																					"src": "5132:1:12",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "5135:4:12",
																					"nodeType": "YulLiteral",
																					"src": "5135:4:12",
																					"type": "",
																					"value": "0x24"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nativeSrc": "5125:6:12",
																				"nodeType": "YulIdentifier",
																				"src": "5125:6:12"
																			},
																			"nativeSrc": "5125:15:12",
																			"nodeType": "YulFunctionCall",
																			"src": "5125:15:12"
																		},
																		"nativeSrc": "5125:15:12",
																		"nodeType": "YulExpressionStatement",
																		"src": "5125:15:12"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "outOfPlaceEncoding",
																		"nativeSrc": "4995:18:12",
																		"nodeType": "YulIdentifier",
																		"src": "4995:18:12"
																	},
																	{
																		"arguments": [
																			{
																				"name": "length",
																				"nativeSrc": "5018:6:12",
																				"nodeType": "YulIdentifier",
																				"src": "5018:6:12"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "5026:2:12",
																				"nodeType": "YulLiteral",
																				"src": "5026:2:12",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "lt",
																			"nativeSrc": "5015:2:12",
																			"nodeType": "YulIdentifier",
																			"src": "5015:2:12"
																		},
																		"nativeSrc": "5015:14:12",
																		"nodeType": "YulFunctionCall",
																		"src": "5015:14:12"
																	}
																],
																"functionName": {
																	"name": "eq",
																	"nativeSrc": "4992:2:12",
																	"nodeType": "YulIdentifier",
																	"src": "4992:2:12"
																},
																"nativeSrc": "4992:38:12",
																"nodeType": "YulFunctionCall",
																"src": "4992:38:12"
															},
															"nativeSrc": "4989:161:12",
															"nodeType": "YulIf",
															"src": "4989:161:12"
														}
													]
												},
												"name": "extract_byte_array_length",
												"nativeSrc": "4776:380:12",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "data",
														"nativeSrc": "4811:4:12",
														"nodeType": "YulTypedName",
														"src": "4811:4:12",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "length",
														"nativeSrc": "4820:6:12",
														"nodeType": "YulTypedName",
														"src": "4820:6:12",
														"type": ""
													}
												],
												"src": "4776:380:12"
											},
											{
												"body": {
													"nativeSrc": "5335:223:12",
													"nodeType": "YulBlock",
													"src": "5335:223:12",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "5352:9:12",
																		"nodeType": "YulIdentifier",
																		"src": "5352:9:12"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "5363:2:12",
																		"nodeType": "YulLiteral",
																		"src": "5363:2:12",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "5345:6:12",
																	"nodeType": "YulIdentifier",
																	"src": "5345:6:12"
																},
																"nativeSrc": "5345:21:12",
																"nodeType": "YulFunctionCall",
																"src": "5345:21:12"
															},
															"nativeSrc": "5345:21:12",
															"nodeType": "YulExpressionStatement",
															"src": "5345:21:12"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "5386:9:12",
																				"nodeType": "YulIdentifier",
																				"src": "5386:9:12"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "5397:2:12",
																				"nodeType": "YulLiteral",
																				"src": "5397:2:12",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "5382:3:12",
																			"nodeType": "YulIdentifier",
																			"src": "5382:3:12"
																		},
																		"nativeSrc": "5382:18:12",
																		"nodeType": "YulFunctionCall",
																		"src": "5382:18:12"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "5402:2:12",
																		"nodeType": "YulLiteral",
																		"src": "5402:2:12",
																		"type": "",
																		"value": "33"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "5375:6:12",
																	"nodeType": "YulIdentifier",
																	"src": "5375:6:12"
																},
																"nativeSrc": "5375:30:12",
																"nodeType": "YulFunctionCall",
																"src": "5375:30:12"
															},
															"nativeSrc": "5375:30:12",
															"nodeType": "YulExpressionStatement",
															"src": "5375:30:12"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "5425:9:12",
																				"nodeType": "YulIdentifier",
																				"src": "5425:9:12"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "5436:2:12",
																				"nodeType": "YulLiteral",
																				"src": "5436:2:12",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "5421:3:12",
																			"nodeType": "YulIdentifier",
																			"src": "5421:3:12"
																		},
																		"nativeSrc": "5421:18:12",
																		"nodeType": "YulFunctionCall",
																		"src": "5421:18:12"
																	},
																	{
																		"hexValue": "4552433732313a20617070726f76616c20746f2063757272656e74206f776e65",
																		"kind": "string",
																		"nativeSrc": "5441:34:12",
																		"nodeType": "YulLiteral",
																		"src": "5441:34:12",
																		"type": "",
																		"value": "ERC721: approval to current owne"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "5414:6:12",
																	"nodeType": "YulIdentifier",
																	"src": "5414:6:12"
																},
																"nativeSrc": "5414:62:12",
																"nodeType": "YulFunctionCall",
																"src": "5414:62:12"
															},
															"nativeSrc": "5414:62:12",
															"nodeType": "YulExpressionStatement",
															"src": "5414:62:12"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "5496:9:12",
																				"nodeType": "YulIdentifier",
																				"src": "5496:9:12"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "5507:2:12",
																				"nodeType": "YulLiteral",
																				"src": "5507:2:12",
																				"type": "",
																				"value": "96"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "5492:3:12",
																			"nodeType": "YulIdentifier",
																			"src": "5492:3:12"
																		},
																		"nativeSrc": "5492:18:12",
																		"nodeType": "YulFunctionCall",
																		"src": "5492:18:12"
																	},
																	{
																		"hexValue": "72",
																		"kind": "string",
																		"nativeSrc": "5512:3:12",
																		"nodeType": "YulLiteral",
																		"src": "5512:3:12",
																		"type": "",
																		"value": "r"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "5485:6:12",
																	"nodeType": "YulIdentifier",
																	"src": "5485:6:12"
																},
																"nativeSrc": "5485:31:12",
																"nodeType": "YulFunctionCall",
																"src": "5485:31:12"
															},
															"nativeSrc": "5485:31:12",
															"nodeType": "YulExpressionStatement",
															"src": "5485:31:12"
														},
														{
															"nativeSrc": "5525:27:12",
															"nodeType": "YulAssignment",
															"src": "5525:27:12",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "5537:9:12",
																		"nodeType": "YulIdentifier",
																		"src": "5537:9:12"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "5548:3:12",
																		"nodeType": "YulLiteral",
																		"src": "5548:3:12",
																		"type": "",
																		"value": "128"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "5533:3:12",
																	"nodeType": "YulIdentifier",
																	"src": "5533:3:12"
																},
																"nativeSrc": "5533:19:12",
																"nodeType": "YulFunctionCall",
																"src": "5533:19:12"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "5525:4:12",
																	"nodeType": "YulIdentifier",
																	"src": "5525:4:12"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_b51b4875eede07862961e8f9365c6749f5fe55c6ee5d7a9e42b6912ad0b15942__to_t_string_memory_ptr__fromStack_reversed",
												"nativeSrc": "5161:397:12",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "5312:9:12",
														"nodeType": "YulTypedName",
														"src": "5312:9:12",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "5326:4:12",
														"nodeType": "YulTypedName",
														"src": "5326:4:12",
														"type": ""
													}
												],
												"src": "5161:397:12"
											},
											{
												"body": {
													"nativeSrc": "5737:251:12",
													"nodeType": "YulBlock",
													"src": "5737:251:12",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "5754:9:12",
																		"nodeType": "YulIdentifier",
																		"src": "5754:9:12"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "5765:2:12",
																		"nodeType": "YulLiteral",
																		"src": "5765:2:12",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "5747:6:12",
																	"nodeType": "YulIdentifier",
																	"src": "5747:6:12"
																},
																"nativeSrc": "5747:21:12",
																"nodeType": "YulFunctionCall",
																"src": "5747:21:12"
															},
															"nativeSrc": "5747:21:12",
															"nodeType": "YulExpressionStatement",
															"src": "5747:21:12"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "5788:9:12",
																				"nodeType": "YulIdentifier",
																				"src": "5788:9:12"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "5799:2:12",
																				"nodeType": "YulLiteral",
																				"src": "5799:2:12",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "5784:3:12",
																			"nodeType": "YulIdentifier",
																			"src": "5784:3:12"
																		},
																		"nativeSrc": "5784:18:12",
																		"nodeType": "YulFunctionCall",
																		"src": "5784:18:12"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "5804:2:12",
																		"nodeType": "YulLiteral",
																		"src": "5804:2:12",
																		"type": "",
																		"value": "61"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "5777:6:12",
																	"nodeType": "YulIdentifier",
																	"src": "5777:6:12"
																},
																"nativeSrc": "5777:30:12",
																"nodeType": "YulFunctionCall",
																"src": "5777:30:12"
															},
															"nativeSrc": "5777:30:12",
															"nodeType": "YulExpressionStatement",
															"src": "5777:30:12"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "5827:9:12",
																				"nodeType": "YulIdentifier",
																				"src": "5827:9:12"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "5838:2:12",
																				"nodeType": "YulLiteral",
																				"src": "5838:2:12",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "5823:3:12",
																			"nodeType": "YulIdentifier",
																			"src": "5823:3:12"
																		},
																		"nativeSrc": "5823:18:12",
																		"nodeType": "YulFunctionCall",
																		"src": "5823:18:12"
																	},
																	{
																		"hexValue": "4552433732313a20617070726f76652063616c6c6572206973206e6f7420746f",
																		"kind": "string",
																		"nativeSrc": "5843:34:12",
																		"nodeType": "YulLiteral",
																		"src": "5843:34:12",
																		"type": "",
																		"value": "ERC721: approve caller is not to"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "5816:6:12",
																	"nodeType": "YulIdentifier",
																	"src": "5816:6:12"
																},
																"nativeSrc": "5816:62:12",
																"nodeType": "YulFunctionCall",
																"src": "5816:62:12"
															},
															"nativeSrc": "5816:62:12",
															"nodeType": "YulExpressionStatement",
															"src": "5816:62:12"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "5898:9:12",
																				"nodeType": "YulIdentifier",
																				"src": "5898:9:12"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "5909:2:12",
																				"nodeType": "YulLiteral",
																				"src": "5909:2:12",
																				"type": "",
																				"value": "96"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "5894:3:12",
																			"nodeType": "YulIdentifier",
																			"src": "5894:3:12"
																		},
																		"nativeSrc": "5894:18:12",
																		"nodeType": "YulFunctionCall",
																		"src": "5894:18:12"
																	},
																	{
																		"hexValue": "6b656e206f776e6572206f7220617070726f76656420666f7220616c6c",
																		"kind": "string",
																		"nativeSrc": "5914:31:12",
																		"nodeType": "YulLiteral",
																		"src": "5914:31:12",
																		"type": "",
																		"value": "ken owner or approved for all"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "5887:6:12",
																	"nodeType": "YulIdentifier",
																	"src": "5887:6:12"
																},
																"nativeSrc": "5887:59:12",
																"nodeType": "YulFunctionCall",
																"src": "5887:59:12"
															},
															"nativeSrc": "5887:59:12",
															"nodeType": "YulExpressionStatement",
															"src": "5887:59:12"
														},
														{
															"nativeSrc": "5955:27:12",
															"nodeType": "YulAssignment",
															"src": "5955:27:12",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "5967:9:12",
																		"nodeType": "YulIdentifier",
																		"src": "5967:9:12"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "5978:3:12",
																		"nodeType": "YulLiteral",
																		"src": "5978:3:12",
																		"type": "",
																		"value": "128"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "5963:3:12",
																	"nodeType": "YulIdentifier",
																	"src": "5963:3:12"
																},
																"nativeSrc": "5963:19:12",
																"nodeType": "YulFunctionCall",
																"src": "5963:19:12"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "5955:4:12",
																	"nodeType": "YulIdentifier",
																	"src": "5955:4:12"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_c6e14a63ffb144eeef7cce6988e5dce07c60a7e0a7b1ef25dbe18c61483e0a83__to_t_string_memory_ptr__fromStack_reversed",
												"nativeSrc": "5563:425:12",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "5714:9:12",
														"nodeType": "YulTypedName",
														"src": "5714:9:12",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "5728:4:12",
														"nodeType": "YulTypedName",
														"src": "5728:4:12",
														"type": ""
													}
												],
												"src": "5563:425:12"
											},
											{
												"body": {
													"nativeSrc": "6167:235:12",
													"nodeType": "YulBlock",
													"src": "6167:235:12",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "6184:9:12",
																		"nodeType": "YulIdentifier",
																		"src": "6184:9:12"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "6195:2:12",
																		"nodeType": "YulLiteral",
																		"src": "6195:2:12",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "6177:6:12",
																	"nodeType": "YulIdentifier",
																	"src": "6177:6:12"
																},
																"nativeSrc": "6177:21:12",
																"nodeType": "YulFunctionCall",
																"src": "6177:21:12"
															},
															"nativeSrc": "6177:21:12",
															"nodeType": "YulExpressionStatement",
															"src": "6177:21:12"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "6218:9:12",
																				"nodeType": "YulIdentifier",
																				"src": "6218:9:12"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "6229:2:12",
																				"nodeType": "YulLiteral",
																				"src": "6229:2:12",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "6214:3:12",
																			"nodeType": "YulIdentifier",
																			"src": "6214:3:12"
																		},
																		"nativeSrc": "6214:18:12",
																		"nodeType": "YulFunctionCall",
																		"src": "6214:18:12"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "6234:2:12",
																		"nodeType": "YulLiteral",
																		"src": "6234:2:12",
																		"type": "",
																		"value": "45"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "6207:6:12",
																	"nodeType": "YulIdentifier",
																	"src": "6207:6:12"
																},
																"nativeSrc": "6207:30:12",
																"nodeType": "YulFunctionCall",
																"src": "6207:30:12"
															},
															"nativeSrc": "6207:30:12",
															"nodeType": "YulExpressionStatement",
															"src": "6207:30:12"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "6257:9:12",
																				"nodeType": "YulIdentifier",
																				"src": "6257:9:12"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "6268:2:12",
																				"nodeType": "YulLiteral",
																				"src": "6268:2:12",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "6253:3:12",
																			"nodeType": "YulIdentifier",
																			"src": "6253:3:12"
																		},
																		"nativeSrc": "6253:18:12",
																		"nodeType": "YulFunctionCall",
																		"src": "6253:18:12"
																	},
																	{
																		"hexValue": "4552433732313a2063616c6c6572206973206e6f7420746f6b656e206f776e65",
																		"kind": "string",
																		"nativeSrc": "6273:34:12",
																		"nodeType": "YulLiteral",
																		"src": "6273:34:12",
																		"type": "",
																		"value": "ERC721: caller is not token owne"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "6246:6:12",
																	"nodeType": "YulIdentifier",
																	"src": "6246:6:12"
																},
																"nativeSrc": "6246:62:12",
																"nodeType": "YulFunctionCall",
																"src": "6246:62:12"
															},
															"nativeSrc": "6246:62:12",
															"nodeType": "YulExpressionStatement",
															"src": "6246:62:12"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "6328:9:12",
																				"nodeType": "YulIdentifier",
																				"src": "6328:9:12"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "6339:2:12",
																				"nodeType": "YulLiteral",
																				"src": "6339:2:12",
																				"type": "",
																				"value": "96"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "6324:3:12",
																			"nodeType": "YulIdentifier",
																			"src": "6324:3:12"
																		},
																		"nativeSrc": "6324:18:12",
																		"nodeType": "YulFunctionCall",
																		"src": "6324:18:12"
																	},
																	{
																		"hexValue": "72206f7220617070726f766564",
																		"kind": "string",
																		"nativeSrc": "6344:15:12",
																		"nodeType": "YulLiteral",
																		"src": "6344:15:12",
																		"type": "",
																		"value": "r or approved"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "6317:6:12",
																	"nodeType": "YulIdentifier",
																	"src": "6317:6:12"
																},
																"nativeSrc": "6317:43:12",
																"nodeType": "YulFunctionCall",
																"src": "6317:43:12"
															},
															"nativeSrc": "6317:43:12",
															"nodeType": "YulExpressionStatement",
															"src": "6317:43:12"
														},
														{
															"nativeSrc": "6369:27:12",
															"nodeType": "YulAssignment",
															"src": "6369:27:12",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "6381:9:12",
																		"nodeType": "YulIdentifier",
																		"src": "6381:9:12"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "6392:3:12",
																		"nodeType": "YulLiteral",
																		"src": "6392:3:12",
																		"type": "",
																		"value": "128"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "6377:3:12",
																	"nodeType": "YulIdentifier",
																	"src": "6377:3:12"
																},
																"nativeSrc": "6377:19:12",
																"nodeType": "YulFunctionCall",
																"src": "6377:19:12"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "6369:4:12",
																	"nodeType": "YulIdentifier",
																	"src": "6369:4:12"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_12a8e5623d251e191fe4a291d9a59bcc01a4db7a1f5c20fc8de44358c18308af__to_t_string_memory_ptr__fromStack_reversed",
												"nativeSrc": "5993:409:12",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "6144:9:12",
														"nodeType": "YulTypedName",
														"src": "6144:9:12",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "6158:4:12",
														"nodeType": "YulTypedName",
														"src": "6158:4:12",
														"type": ""
													}
												],
												"src": "5993:409:12"
											},
											{
												"body": {
													"nativeSrc": "6581:174:12",
													"nodeType": "YulBlock",
													"src": "6581:174:12",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "6598:9:12",
																		"nodeType": "YulIdentifier",
																		"src": "6598:9:12"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "6609:2:12",
																		"nodeType": "YulLiteral",
																		"src": "6609:2:12",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "6591:6:12",
																	"nodeType": "YulIdentifier",
																	"src": "6591:6:12"
																},
																"nativeSrc": "6591:21:12",
																"nodeType": "YulFunctionCall",
																"src": "6591:21:12"
															},
															"nativeSrc": "6591:21:12",
															"nodeType": "YulExpressionStatement",
															"src": "6591:21:12"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "6632:9:12",
																				"nodeType": "YulIdentifier",
																				"src": "6632:9:12"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "6643:2:12",
																				"nodeType": "YulLiteral",
																				"src": "6643:2:12",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "6628:3:12",
																			"nodeType": "YulIdentifier",
																			"src": "6628:3:12"
																		},
																		"nativeSrc": "6628:18:12",
																		"nodeType": "YulFunctionCall",
																		"src": "6628:18:12"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "6648:2:12",
																		"nodeType": "YulLiteral",
																		"src": "6648:2:12",
																		"type": "",
																		"value": "24"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "6621:6:12",
																	"nodeType": "YulIdentifier",
																	"src": "6621:6:12"
																},
																"nativeSrc": "6621:30:12",
																"nodeType": "YulFunctionCall",
																"src": "6621:30:12"
															},
															"nativeSrc": "6621:30:12",
															"nodeType": "YulExpressionStatement",
															"src": "6621:30:12"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "6671:9:12",
																				"nodeType": "YulIdentifier",
																				"src": "6671:9:12"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "6682:2:12",
																				"nodeType": "YulLiteral",
																				"src": "6682:2:12",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "6667:3:12",
																			"nodeType": "YulIdentifier",
																			"src": "6667:3:12"
																		},
																		"nativeSrc": "6667:18:12",
																		"nodeType": "YulFunctionCall",
																		"src": "6667:18:12"
																	},
																	{
																		"hexValue": "4552433732313a20696e76616c696420746f6b656e204944",
																		"kind": "string",
																		"nativeSrc": "6687:26:12",
																		"nodeType": "YulLiteral",
																		"src": "6687:26:12",
																		"type": "",
																		"value": "ERC721: invalid token ID"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "6660:6:12",
																	"nodeType": "YulIdentifier",
																	"src": "6660:6:12"
																},
																"nativeSrc": "6660:54:12",
																"nodeType": "YulFunctionCall",
																"src": "6660:54:12"
															},
															"nativeSrc": "6660:54:12",
															"nodeType": "YulExpressionStatement",
															"src": "6660:54:12"
														},
														{
															"nativeSrc": "6723:26:12",
															"nodeType": "YulAssignment",
															"src": "6723:26:12",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "6735:9:12",
																		"nodeType": "YulIdentifier",
																		"src": "6735:9:12"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "6746:2:12",
																		"nodeType": "YulLiteral",
																		"src": "6746:2:12",
																		"type": "",
																		"value": "96"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "6731:3:12",
																	"nodeType": "YulIdentifier",
																	"src": "6731:3:12"
																},
																"nativeSrc": "6731:18:12",
																"nodeType": "YulFunctionCall",
																"src": "6731:18:12"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "6723:4:12",
																	"nodeType": "YulIdentifier",
																	"src": "6723:4:12"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_b08d2b0fec7cc108ab049809a8beb42779d969a49299d0c317c907d9db22974f__to_t_string_memory_ptr__fromStack_reversed",
												"nativeSrc": "6407:348:12",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "6558:9:12",
														"nodeType": "YulTypedName",
														"src": "6558:9:12",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "6572:4:12",
														"nodeType": "YulTypedName",
														"src": "6572:4:12",
														"type": ""
													}
												],
												"src": "6407:348:12"
											},
											{
												"body": {
													"nativeSrc": "6934:231:12",
													"nodeType": "YulBlock",
													"src": "6934:231:12",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "6951:9:12",
																		"nodeType": "YulIdentifier",
																		"src": "6951:9:12"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "6962:2:12",
																		"nodeType": "YulLiteral",
																		"src": "6962:2:12",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "6944:6:12",
																	"nodeType": "YulIdentifier",
																	"src": "6944:6:12"
																},
																"nativeSrc": "6944:21:12",
																"nodeType": "YulFunctionCall",
																"src": "6944:21:12"
															},
															"nativeSrc": "6944:21:12",
															"nodeType": "YulExpressionStatement",
															"src": "6944:21:12"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "6985:9:12",
																				"nodeType": "YulIdentifier",
																				"src": "6985:9:12"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "6996:2:12",
																				"nodeType": "YulLiteral",
																				"src": "6996:2:12",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "6981:3:12",
																			"nodeType": "YulIdentifier",
																			"src": "6981:3:12"
																		},
																		"nativeSrc": "6981:18:12",
																		"nodeType": "YulFunctionCall",
																		"src": "6981:18:12"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "7001:2:12",
																		"nodeType": "YulLiteral",
																		"src": "7001:2:12",
																		"type": "",
																		"value": "41"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "6974:6:12",
																	"nodeType": "YulIdentifier",
																	"src": "6974:6:12"
																},
																"nativeSrc": "6974:30:12",
																"nodeType": "YulFunctionCall",
																"src": "6974:30:12"
															},
															"nativeSrc": "6974:30:12",
															"nodeType": "YulExpressionStatement",
															"src": "6974:30:12"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "7024:9:12",
																				"nodeType": "YulIdentifier",
																				"src": "7024:9:12"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "7035:2:12",
																				"nodeType": "YulLiteral",
																				"src": "7035:2:12",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "7020:3:12",
																			"nodeType": "YulIdentifier",
																			"src": "7020:3:12"
																		},
																		"nativeSrc": "7020:18:12",
																		"nodeType": "YulFunctionCall",
																		"src": "7020:18:12"
																	},
																	{
																		"hexValue": "4552433732313a2061646472657373207a65726f206973206e6f742061207661",
																		"kind": "string",
																		"nativeSrc": "7040:34:12",
																		"nodeType": "YulLiteral",
																		"src": "7040:34:12",
																		"type": "",
																		"value": "ERC721: address zero is not a va"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "7013:6:12",
																	"nodeType": "YulIdentifier",
																	"src": "7013:6:12"
																},
																"nativeSrc": "7013:62:12",
																"nodeType": "YulFunctionCall",
																"src": "7013:62:12"
															},
															"nativeSrc": "7013:62:12",
															"nodeType": "YulExpressionStatement",
															"src": "7013:62:12"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "7095:9:12",
																				"nodeType": "YulIdentifier",
																				"src": "7095:9:12"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "7106:2:12",
																				"nodeType": "YulLiteral",
																				"src": "7106:2:12",
																				"type": "",
																				"value": "96"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "7091:3:12",
																			"nodeType": "YulIdentifier",
																			"src": "7091:3:12"
																		},
																		"nativeSrc": "7091:18:12",
																		"nodeType": "YulFunctionCall",
																		"src": "7091:18:12"
																	},
																	{
																		"hexValue": "6c6964206f776e6572",
																		"kind": "string",
																		"nativeSrc": "7111:11:12",
																		"nodeType": "YulLiteral",
																		"src": "7111:11:12",
																		"type": "",
																		"value": "lid owner"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "7084:6:12",
																	"nodeType": "YulIdentifier",
																	"src": "7084:6:12"
																},
																"nativeSrc": "7084:39:12",
																"nodeType": "YulFunctionCall",
																"src": "7084:39:12"
															},
															"nativeSrc": "7084:39:12",
															"nodeType": "YulExpressionStatement",
															"src": "7084:39:12"
														},
														{
															"nativeSrc": "7132:27:12",
															"nodeType": "YulAssignment",
															"src": "7132:27:12",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "7144:9:12",
																		"nodeType": "YulIdentifier",
																		"src": "7144:9:12"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "7155:3:12",
																		"nodeType": "YulLiteral",
																		"src": "7155:3:12",
																		"type": "",
																		"value": "128"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "7140:3:12",
																	"nodeType": "YulIdentifier",
																	"src": "7140:3:12"
																},
																"nativeSrc": "7140:19:12",
																"nodeType": "YulFunctionCall",
																"src": "7140:19:12"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "7132:4:12",
																	"nodeType": "YulIdentifier",
																	"src": "7132:4:12"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_6d05c90094f31cfeb8f0eb86f0a513af3f7f8992991fbde41b08aa7960677159__to_t_string_memory_ptr__fromStack_reversed",
												"nativeSrc": "6760:405:12",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "6911:9:12",
														"nodeType": "YulTypedName",
														"src": "6911:9:12",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "6925:4:12",
														"nodeType": "YulTypedName",
														"src": "6925:4:12",
														"type": ""
													}
												],
												"src": "6760:405:12"
											},
											{
												"body": {
													"nativeSrc": "7357:309:12",
													"nodeType": "YulBlock",
													"src": "7357:309:12",
													"statements": [
														{
															"nativeSrc": "7367:27:12",
															"nodeType": "YulVariableDeclaration",
															"src": "7367:27:12",
															"value": {
																"arguments": [
																	{
																		"name": "value0",
																		"nativeSrc": "7387:6:12",
																		"nodeType": "YulIdentifier",
																		"src": "7387:6:12"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nativeSrc": "7381:5:12",
																	"nodeType": "YulIdentifier",
																	"src": "7381:5:12"
																},
																"nativeSrc": "7381:13:12",
																"nodeType": "YulFunctionCall",
																"src": "7381:13:12"
															},
															"variables": [
																{
																	"name": "length",
																	"nativeSrc": "7371:6:12",
																	"nodeType": "YulTypedName",
																	"src": "7371:6:12",
																	"type": ""
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value0",
																				"nativeSrc": "7442:6:12",
																				"nodeType": "YulIdentifier",
																				"src": "7442:6:12"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "7450:4:12",
																				"nodeType": "YulLiteral",
																				"src": "7450:4:12",
																				"type": "",
																				"value": "0x20"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "7438:3:12",
																			"nodeType": "YulIdentifier",
																			"src": "7438:3:12"
																		},
																		"nativeSrc": "7438:17:12",
																		"nodeType": "YulFunctionCall",
																		"src": "7438:17:12"
																	},
																	{
																		"name": "pos",
																		"nativeSrc": "7457:3:12",
																		"nodeType": "YulIdentifier",
																		"src": "7457:3:12"
																	},
																	{
																		"name": "length",
																		"nativeSrc": "7462:6:12",
																		"nodeType": "YulIdentifier",
																		"src": "7462:6:12"
																	}
																],
																"functionName": {
																	"name": "copy_memory_to_memory_with_cleanup",
																	"nativeSrc": "7403:34:12",
																	"nodeType": "YulIdentifier",
																	"src": "7403:34:12"
																},
																"nativeSrc": "7403:66:12",
																"nodeType": "YulFunctionCall",
																"src": "7403:66:12"
															},
															"nativeSrc": "7403:66:12",
															"nodeType": "YulExpressionStatement",
															"src": "7403:66:12"
														},
														{
															"nativeSrc": "7478:29:12",
															"nodeType": "YulVariableDeclaration",
															"src": "7478:29:12",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "7495:3:12",
																		"nodeType": "YulIdentifier",
																		"src": "7495:3:12"
																	},
																	{
																		"name": "length",
																		"nativeSrc": "7500:6:12",
																		"nodeType": "YulIdentifier",
																		"src": "7500:6:12"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "7491:3:12",
																	"nodeType": "YulIdentifier",
																	"src": "7491:3:12"
																},
																"nativeSrc": "7491:16:12",
																"nodeType": "YulFunctionCall",
																"src": "7491:16:12"
															},
															"variables": [
																{
																	"name": "end_1",
																	"nativeSrc": "7482:5:12",
																	"nodeType": "YulTypedName",
																	"src": "7482:5:12",
																	"type": ""
																}
															]
														},
														{
															"nativeSrc": "7516:29:12",
															"nodeType": "YulVariableDeclaration",
															"src": "7516:29:12",
															"value": {
																"arguments": [
																	{
																		"name": "value1",
																		"nativeSrc": "7538:6:12",
																		"nodeType": "YulIdentifier",
																		"src": "7538:6:12"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nativeSrc": "7532:5:12",
																	"nodeType": "YulIdentifier",
																	"src": "7532:5:12"
																},
																"nativeSrc": "7532:13:12",
																"nodeType": "YulFunctionCall",
																"src": "7532:13:12"
															},
															"variables": [
																{
																	"name": "length_1",
																	"nativeSrc": "7520:8:12",
																	"nodeType": "YulTypedName",
																	"src": "7520:8:12",
																	"type": ""
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value1",
																				"nativeSrc": "7593:6:12",
																				"nodeType": "YulIdentifier",
																				"src": "7593:6:12"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "7601:4:12",
																				"nodeType": "YulLiteral",
																				"src": "7601:4:12",
																				"type": "",
																				"value": "0x20"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "7589:3:12",
																			"nodeType": "YulIdentifier",
																			"src": "7589:3:12"
																		},
																		"nativeSrc": "7589:17:12",
																		"nodeType": "YulFunctionCall",
																		"src": "7589:17:12"
																	},
																	{
																		"name": "end_1",
																		"nativeSrc": "7608:5:12",
																		"nodeType": "YulIdentifier",
																		"src": "7608:5:12"
																	},
																	{
																		"name": "length_1",
																		"nativeSrc": "7615:8:12",
																		"nodeType": "YulIdentifier",
																		"src": "7615:8:12"
																	}
																],
																"functionName": {
																	"name": "copy_memory_to_memory_with_cleanup",
																	"nativeSrc": "7554:34:12",
																	"nodeType": "YulIdentifier",
																	"src": "7554:34:12"
																},
																"nativeSrc": "7554:70:12",
																"nodeType": "YulFunctionCall",
																"src": "7554:70:12"
															},
															"nativeSrc": "7554:70:12",
															"nodeType": "YulExpressionStatement",
															"src": "7554:70:12"
														},
														{
															"nativeSrc": "7633:27:12",
															"nodeType": "YulAssignment",
															"src": "7633:27:12",
															"value": {
																"arguments": [
																	{
																		"name": "end_1",
																		"nativeSrc": "7644:5:12",
																		"nodeType": "YulIdentifier",
																		"src": "7644:5:12"
																	},
																	{
																		"name": "length_1",
																		"nativeSrc": "7651:8:12",
																		"nodeType": "YulIdentifier",
																		"src": "7651:8:12"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "7640:3:12",
																	"nodeType": "YulIdentifier",
																	"src": "7640:3:12"
																},
																"nativeSrc": "7640:20:12",
																"nodeType": "YulFunctionCall",
																"src": "7640:20:12"
															},
															"variableNames": [
																{
																	"name": "end",
																	"nativeSrc": "7633:3:12",
																	"nodeType": "YulIdentifier",
																	"src": "7633:3:12"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_packed_t_string_memory_ptr_t_string_memory_ptr__to_t_string_memory_ptr_t_string_memory_ptr__nonPadded_inplace_fromStack_reversed",
												"nativeSrc": "7170:496:12",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "pos",
														"nativeSrc": "7325:3:12",
														"nodeType": "YulTypedName",
														"src": "7325:3:12",
														"type": ""
													},
													{
														"name": "value1",
														"nativeSrc": "7330:6:12",
														"nodeType": "YulTypedName",
														"src": "7330:6:12",
														"type": ""
													},
													{
														"name": "value0",
														"nativeSrc": "7338:6:12",
														"nodeType": "YulTypedName",
														"src": "7338:6:12",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "end",
														"nativeSrc": "7349:3:12",
														"nodeType": "YulTypedName",
														"src": "7349:3:12",
														"type": ""
													}
												],
												"src": "7170:496:12"
											},
											{
												"body": {
													"nativeSrc": "7845:227:12",
													"nodeType": "YulBlock",
													"src": "7845:227:12",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "7862:9:12",
																		"nodeType": "YulIdentifier",
																		"src": "7862:9:12"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "7873:2:12",
																		"nodeType": "YulLiteral",
																		"src": "7873:2:12",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "7855:6:12",
																	"nodeType": "YulIdentifier",
																	"src": "7855:6:12"
																},
																"nativeSrc": "7855:21:12",
																"nodeType": "YulFunctionCall",
																"src": "7855:21:12"
															},
															"nativeSrc": "7855:21:12",
															"nodeType": "YulExpressionStatement",
															"src": "7855:21:12"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "7896:9:12",
																				"nodeType": "YulIdentifier",
																				"src": "7896:9:12"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "7907:2:12",
																				"nodeType": "YulLiteral",
																				"src": "7907:2:12",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "7892:3:12",
																			"nodeType": "YulIdentifier",
																			"src": "7892:3:12"
																		},
																		"nativeSrc": "7892:18:12",
																		"nodeType": "YulFunctionCall",
																		"src": "7892:18:12"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "7912:2:12",
																		"nodeType": "YulLiteral",
																		"src": "7912:2:12",
																		"type": "",
																		"value": "37"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "7885:6:12",
																	"nodeType": "YulIdentifier",
																	"src": "7885:6:12"
																},
																"nativeSrc": "7885:30:12",
																"nodeType": "YulFunctionCall",
																"src": "7885:30:12"
															},
															"nativeSrc": "7885:30:12",
															"nodeType": "YulExpressionStatement",
															"src": "7885:30:12"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "7935:9:12",
																				"nodeType": "YulIdentifier",
																				"src": "7935:9:12"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "7946:2:12",
																				"nodeType": "YulLiteral",
																				"src": "7946:2:12",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "7931:3:12",
																			"nodeType": "YulIdentifier",
																			"src": "7931:3:12"
																		},
																		"nativeSrc": "7931:18:12",
																		"nodeType": "YulFunctionCall",
																		"src": "7931:18:12"
																	},
																	{
																		"hexValue": "4552433732313a207472616e736665722066726f6d20696e636f727265637420",
																		"kind": "string",
																		"nativeSrc": "7951:34:12",
																		"nodeType": "YulLiteral",
																		"src": "7951:34:12",
																		"type": "",
																		"value": "ERC721: transfer from incorrect "
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "7924:6:12",
																	"nodeType": "YulIdentifier",
																	"src": "7924:6:12"
																},
																"nativeSrc": "7924:62:12",
																"nodeType": "YulFunctionCall",
																"src": "7924:62:12"
															},
															"nativeSrc": "7924:62:12",
															"nodeType": "YulExpressionStatement",
															"src": "7924:62:12"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "8006:9:12",
																				"nodeType": "YulIdentifier",
																				"src": "8006:9:12"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "8017:2:12",
																				"nodeType": "YulLiteral",
																				"src": "8017:2:12",
																				"type": "",
																				"value": "96"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "8002:3:12",
																			"nodeType": "YulIdentifier",
																			"src": "8002:3:12"
																		},
																		"nativeSrc": "8002:18:12",
																		"nodeType": "YulFunctionCall",
																		"src": "8002:18:12"
																	},
																	{
																		"hexValue": "6f776e6572",
																		"kind": "string",
																		"nativeSrc": "8022:7:12",
																		"nodeType": "YulLiteral",
																		"src": "8022:7:12",
																		"type": "",
																		"value": "owner"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "7995:6:12",
																	"nodeType": "YulIdentifier",
																	"src": "7995:6:12"
																},
																"nativeSrc": "7995:35:12",
																"nodeType": "YulFunctionCall",
																"src": "7995:35:12"
															},
															"nativeSrc": "7995:35:12",
															"nodeType": "YulExpressionStatement",
															"src": "7995:35:12"
														},
														{
															"nativeSrc": "8039:27:12",
															"nodeType": "YulAssignment",
															"src": "8039:27:12",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "8051:9:12",
																		"nodeType": "YulIdentifier",
																		"src": "8051:9:12"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "8062:3:12",
																		"nodeType": "YulLiteral",
																		"src": "8062:3:12",
																		"type": "",
																		"value": "128"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "8047:3:12",
																	"nodeType": "YulIdentifier",
																	"src": "8047:3:12"
																},
																"nativeSrc": "8047:19:12",
																"nodeType": "YulFunctionCall",
																"src": "8047:19:12"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "8039:4:12",
																	"nodeType": "YulIdentifier",
																	"src": "8039:4:12"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_277f8ee9d5b4fc3c4149386f24de0fc1bbc63a8210e2197bfd1c0376a2ac5f48__to_t_string_memory_ptr__fromStack_reversed",
												"nativeSrc": "7671:401:12",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "7822:9:12",
														"nodeType": "YulTypedName",
														"src": "7822:9:12",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "7836:4:12",
														"nodeType": "YulTypedName",
														"src": "7836:4:12",
														"type": ""
													}
												],
												"src": "7671:401:12"
											},
											{
												"body": {
													"nativeSrc": "8251:226:12",
													"nodeType": "YulBlock",
													"src": "8251:226:12",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "8268:9:12",
																		"nodeType": "YulIdentifier",
																		"src": "8268:9:12"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "8279:2:12",
																		"nodeType": "YulLiteral",
																		"src": "8279:2:12",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "8261:6:12",
																	"nodeType": "YulIdentifier",
																	"src": "8261:6:12"
																},
																"nativeSrc": "8261:21:12",
																"nodeType": "YulFunctionCall",
																"src": "8261:21:12"
															},
															"nativeSrc": "8261:21:12",
															"nodeType": "YulExpressionStatement",
															"src": "8261:21:12"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "8302:9:12",
																				"nodeType": "YulIdentifier",
																				"src": "8302:9:12"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "8313:2:12",
																				"nodeType": "YulLiteral",
																				"src": "8313:2:12",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "8298:3:12",
																			"nodeType": "YulIdentifier",
																			"src": "8298:3:12"
																		},
																		"nativeSrc": "8298:18:12",
																		"nodeType": "YulFunctionCall",
																		"src": "8298:18:12"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "8318:2:12",
																		"nodeType": "YulLiteral",
																		"src": "8318:2:12",
																		"type": "",
																		"value": "36"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "8291:6:12",
																	"nodeType": "YulIdentifier",
																	"src": "8291:6:12"
																},
																"nativeSrc": "8291:30:12",
																"nodeType": "YulFunctionCall",
																"src": "8291:30:12"
															},
															"nativeSrc": "8291:30:12",
															"nodeType": "YulExpressionStatement",
															"src": "8291:30:12"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "8341:9:12",
																				"nodeType": "YulIdentifier",
																				"src": "8341:9:12"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "8352:2:12",
																				"nodeType": "YulLiteral",
																				"src": "8352:2:12",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "8337:3:12",
																			"nodeType": "YulIdentifier",
																			"src": "8337:3:12"
																		},
																		"nativeSrc": "8337:18:12",
																		"nodeType": "YulFunctionCall",
																		"src": "8337:18:12"
																	},
																	{
																		"hexValue": "4552433732313a207472616e7366657220746f20746865207a65726f20616464",
																		"kind": "string",
																		"nativeSrc": "8357:34:12",
																		"nodeType": "YulLiteral",
																		"src": "8357:34:12",
																		"type": "",
																		"value": "ERC721: transfer to the zero add"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "8330:6:12",
																	"nodeType": "YulIdentifier",
																	"src": "8330:6:12"
																},
																"nativeSrc": "8330:62:12",
																"nodeType": "YulFunctionCall",
																"src": "8330:62:12"
															},
															"nativeSrc": "8330:62:12",
															"nodeType": "YulExpressionStatement",
															"src": "8330:62:12"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "8412:9:12",
																				"nodeType": "YulIdentifier",
																				"src": "8412:9:12"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "8423:2:12",
																				"nodeType": "YulLiteral",
																				"src": "8423:2:12",
																				"type": "",
																				"value": "96"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "8408:3:12",
																			"nodeType": "YulIdentifier",
																			"src": "8408:3:12"
																		},
																		"nativeSrc": "8408:18:12",
																		"nodeType": "YulFunctionCall",
																		"src": "8408:18:12"
																	},
																	{
																		"hexValue": "72657373",
																		"kind": "string",
																		"nativeSrc": "8428:6:12",
																		"nodeType": "YulLiteral",
																		"src": "8428:6:12",
																		"type": "",
																		"value": "ress"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "8401:6:12",
																	"nodeType": "YulIdentifier",
																	"src": "8401:6:12"
																},
																"nativeSrc": "8401:34:12",
																"nodeType": "YulFunctionCall",
																"src": "8401:34:12"
															},
															"nativeSrc": "8401:34:12",
															"nodeType": "YulExpressionStatement",
															"src": "8401:34:12"
														},
														{
															"nativeSrc": "8444:27:12",
															"nodeType": "YulAssignment",
															"src": "8444:27:12",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "8456:9:12",
																		"nodeType": "YulIdentifier",
																		"src": "8456:9:12"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "8467:3:12",
																		"nodeType": "YulLiteral",
																		"src": "8467:3:12",
																		"type": "",
																		"value": "128"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "8452:3:12",
																	"nodeType": "YulIdentifier",
																	"src": "8452:3:12"
																},
																"nativeSrc": "8452:19:12",
																"nodeType": "YulFunctionCall",
																"src": "8452:19:12"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "8444:4:12",
																	"nodeType": "YulIdentifier",
																	"src": "8444:4:12"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_455fea98ea03c32d7dd1a6f1426917d80529bf47b3ccbde74e7206e889e709f4__to_t_string_memory_ptr__fromStack_reversed",
												"nativeSrc": "8077:400:12",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "8228:9:12",
														"nodeType": "YulTypedName",
														"src": "8228:9:12",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "8242:4:12",
														"nodeType": "YulTypedName",
														"src": "8242:4:12",
														"type": ""
													}
												],
												"src": "8077:400:12"
											},
											{
												"body": {
													"nativeSrc": "8656:175:12",
													"nodeType": "YulBlock",
													"src": "8656:175:12",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "8673:9:12",
																		"nodeType": "YulIdentifier",
																		"src": "8673:9:12"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "8684:2:12",
																		"nodeType": "YulLiteral",
																		"src": "8684:2:12",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "8666:6:12",
																	"nodeType": "YulIdentifier",
																	"src": "8666:6:12"
																},
																"nativeSrc": "8666:21:12",
																"nodeType": "YulFunctionCall",
																"src": "8666:21:12"
															},
															"nativeSrc": "8666:21:12",
															"nodeType": "YulExpressionStatement",
															"src": "8666:21:12"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "8707:9:12",
																				"nodeType": "YulIdentifier",
																				"src": "8707:9:12"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "8718:2:12",
																				"nodeType": "YulLiteral",
																				"src": "8718:2:12",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "8703:3:12",
																			"nodeType": "YulIdentifier",
																			"src": "8703:3:12"
																		},
																		"nativeSrc": "8703:18:12",
																		"nodeType": "YulFunctionCall",
																		"src": "8703:18:12"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "8723:2:12",
																		"nodeType": "YulLiteral",
																		"src": "8723:2:12",
																		"type": "",
																		"value": "25"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "8696:6:12",
																	"nodeType": "YulIdentifier",
																	"src": "8696:6:12"
																},
																"nativeSrc": "8696:30:12",
																"nodeType": "YulFunctionCall",
																"src": "8696:30:12"
															},
															"nativeSrc": "8696:30:12",
															"nodeType": "YulExpressionStatement",
															"src": "8696:30:12"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "8746:9:12",
																				"nodeType": "YulIdentifier",
																				"src": "8746:9:12"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "8757:2:12",
																				"nodeType": "YulLiteral",
																				"src": "8757:2:12",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "8742:3:12",
																			"nodeType": "YulIdentifier",
																			"src": "8742:3:12"
																		},
																		"nativeSrc": "8742:18:12",
																		"nodeType": "YulFunctionCall",
																		"src": "8742:18:12"
																	},
																	{
																		"hexValue": "4552433732313a20617070726f766520746f2063616c6c6572",
																		"kind": "string",
																		"nativeSrc": "8762:27:12",
																		"nodeType": "YulLiteral",
																		"src": "8762:27:12",
																		"type": "",
																		"value": "ERC721: approve to caller"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "8735:6:12",
																	"nodeType": "YulIdentifier",
																	"src": "8735:6:12"
																},
																"nativeSrc": "8735:55:12",
																"nodeType": "YulFunctionCall",
																"src": "8735:55:12"
															},
															"nativeSrc": "8735:55:12",
															"nodeType": "YulExpressionStatement",
															"src": "8735:55:12"
														},
														{
															"nativeSrc": "8799:26:12",
															"nodeType": "YulAssignment",
															"src": "8799:26:12",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "8811:9:12",
																		"nodeType": "YulIdentifier",
																		"src": "8811:9:12"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "8822:2:12",
																		"nodeType": "YulLiteral",
																		"src": "8822:2:12",
																		"type": "",
																		"value": "96"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "8807:3:12",
																	"nodeType": "YulIdentifier",
																	"src": "8807:3:12"
																},
																"nativeSrc": "8807:18:12",
																"nodeType": "YulFunctionCall",
																"src": "8807:18:12"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "8799:4:12",
																	"nodeType": "YulIdentifier",
																	"src": "8799:4:12"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_45fe4329685be5ecd250fd0e6a25aea0ea4d0e30fb6a73c118b95749e6d70d05__to_t_string_memory_ptr__fromStack_reversed",
												"nativeSrc": "8482:349:12",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "8633:9:12",
														"nodeType": "YulTypedName",
														"src": "8633:9:12",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "8647:4:12",
														"nodeType": "YulTypedName",
														"src": "8647:4:12",
														"type": ""
													}
												],
												"src": "8482:349:12"
											},
											{
												"body": {
													"nativeSrc": "9010:240:12",
													"nodeType": "YulBlock",
													"src": "9010:240:12",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "9027:9:12",
																		"nodeType": "YulIdentifier",
																		"src": "9027:9:12"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "9038:2:12",
																		"nodeType": "YulLiteral",
																		"src": "9038:2:12",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "9020:6:12",
																	"nodeType": "YulIdentifier",
																	"src": "9020:6:12"
																},
																"nativeSrc": "9020:21:12",
																"nodeType": "YulFunctionCall",
																"src": "9020:21:12"
															},
															"nativeSrc": "9020:21:12",
															"nodeType": "YulExpressionStatement",
															"src": "9020:21:12"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "9061:9:12",
																				"nodeType": "YulIdentifier",
																				"src": "9061:9:12"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "9072:2:12",
																				"nodeType": "YulLiteral",
																				"src": "9072:2:12",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "9057:3:12",
																			"nodeType": "YulIdentifier",
																			"src": "9057:3:12"
																		},
																		"nativeSrc": "9057:18:12",
																		"nodeType": "YulFunctionCall",
																		"src": "9057:18:12"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "9077:2:12",
																		"nodeType": "YulLiteral",
																		"src": "9077:2:12",
																		"type": "",
																		"value": "50"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "9050:6:12",
																	"nodeType": "YulIdentifier",
																	"src": "9050:6:12"
																},
																"nativeSrc": "9050:30:12",
																"nodeType": "YulFunctionCall",
																"src": "9050:30:12"
															},
															"nativeSrc": "9050:30:12",
															"nodeType": "YulExpressionStatement",
															"src": "9050:30:12"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "9100:9:12",
																				"nodeType": "YulIdentifier",
																				"src": "9100:9:12"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "9111:2:12",
																				"nodeType": "YulLiteral",
																				"src": "9111:2:12",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "9096:3:12",
																			"nodeType": "YulIdentifier",
																			"src": "9096:3:12"
																		},
																		"nativeSrc": "9096:18:12",
																		"nodeType": "YulFunctionCall",
																		"src": "9096:18:12"
																	},
																	{
																		"hexValue": "4552433732313a207472616e7366657220746f206e6f6e204552433732315265",
																		"kind": "string",
																		"nativeSrc": "9116:34:12",
																		"nodeType": "YulLiteral",
																		"src": "9116:34:12",
																		"type": "",
																		"value": "ERC721: transfer to non ERC721Re"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "9089:6:12",
																	"nodeType": "YulIdentifier",
																	"src": "9089:6:12"
																},
																"nativeSrc": "9089:62:12",
																"nodeType": "YulFunctionCall",
																"src": "9089:62:12"
															},
															"nativeSrc": "9089:62:12",
															"nodeType": "YulExpressionStatement",
															"src": "9089:62:12"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "9171:9:12",
																				"nodeType": "YulIdentifier",
																				"src": "9171:9:12"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "9182:2:12",
																				"nodeType": "YulLiteral",
																				"src": "9182:2:12",
																				"type": "",
																				"value": "96"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "9167:3:12",
																			"nodeType": "YulIdentifier",
																			"src": "9167:3:12"
																		},
																		"nativeSrc": "9167:18:12",
																		"nodeType": "YulFunctionCall",
																		"src": "9167:18:12"
																	},
																	{
																		"hexValue": "63656976657220696d706c656d656e746572",
																		"kind": "string",
																		"nativeSrc": "9187:20:12",
																		"nodeType": "YulLiteral",
																		"src": "9187:20:12",
																		"type": "",
																		"value": "ceiver implementer"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "9160:6:12",
																	"nodeType": "YulIdentifier",
																	"src": "9160:6:12"
																},
																"nativeSrc": "9160:48:12",
																"nodeType": "YulFunctionCall",
																"src": "9160:48:12"
															},
															"nativeSrc": "9160:48:12",
															"nodeType": "YulExpressionStatement",
															"src": "9160:48:12"
														},
														{
															"nativeSrc": "9217:27:12",
															"nodeType": "YulAssignment",
															"src": "9217:27:12",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "9229:9:12",
																		"nodeType": "YulIdentifier",
																		"src": "9229:9:12"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "9240:3:12",
																		"nodeType": "YulLiteral",
																		"src": "9240:3:12",
																		"type": "",
																		"value": "128"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "9225:3:12",
																	"nodeType": "YulIdentifier",
																	"src": "9225:3:12"
																},
																"nativeSrc": "9225:19:12",
																"nodeType": "YulFunctionCall",
																"src": "9225:19:12"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "9217:4:12",
																	"nodeType": "YulIdentifier",
																	"src": "9217:4:12"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_1e766a06da43a53d0f4c380e06e5a342e14d5af1bf8501996c844905530ca84e__to_t_string_memory_ptr__fromStack_reversed",
												"nativeSrc": "8836:414:12",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "8987:9:12",
														"nodeType": "YulTypedName",
														"src": "8987:9:12",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "9001:4:12",
														"nodeType": "YulTypedName",
														"src": "9001:4:12",
														"type": ""
													}
												],
												"src": "8836:414:12"
											},
											{
												"body": {
													"nativeSrc": "9287:95:12",
													"nodeType": "YulBlock",
													"src": "9287:95:12",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "9304:1:12",
																		"nodeType": "YulLiteral",
																		"src": "9304:1:12",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"arguments": [
																			{
																				"kind": "number",
																				"nativeSrc": "9311:3:12",
																				"nodeType": "YulLiteral",
																				"src": "9311:3:12",
																				"type": "",
																				"value": "224"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "9316:10:12",
																				"nodeType": "YulLiteral",
																				"src": "9316:10:12",
																				"type": "",
																				"value": "0x4e487b71"
																			}
																		],
																		"functionName": {
																			"name": "shl",
																			"nativeSrc": "9307:3:12",
																			"nodeType": "YulIdentifier",
																			"src": "9307:3:12"
																		},
																		"nativeSrc": "9307:20:12",
																		"nodeType": "YulFunctionCall",
																		"src": "9307:20:12"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "9297:6:12",
																	"nodeType": "YulIdentifier",
																	"src": "9297:6:12"
																},
																"nativeSrc": "9297:31:12",
																"nodeType": "YulFunctionCall",
																"src": "9297:31:12"
															},
															"nativeSrc": "9297:31:12",
															"nodeType": "YulExpressionStatement",
															"src": "9297:31:12"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "9344:1:12",
																		"nodeType": "YulLiteral",
																		"src": "9344:1:12",
																		"type": "",
																		"value": "4"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "9347:4:12",
																		"nodeType": "YulLiteral",
																		"src": "9347:4:12",
																		"type": "",
																		"value": "0x12"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "9337:6:12",
																	"nodeType": "YulIdentifier",
																	"src": "9337:6:12"
																},
																"nativeSrc": "9337:15:12",
																"nodeType": "YulFunctionCall",
																"src": "9337:15:12"
															},
															"nativeSrc": "9337:15:12",
															"nodeType": "YulExpressionStatement",
															"src": "9337:15:12"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "9368:1:12",
																		"nodeType": "YulLiteral",
																		"src": "9368:1:12",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "9371:4:12",
																		"nodeType": "YulLiteral",
																		"src": "9371:4:12",
																		"type": "",
																		"value": "0x24"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nativeSrc": "9361:6:12",
																	"nodeType": "YulIdentifier",
																	"src": "9361:6:12"
																},
																"nativeSrc": "9361:15:12",
																"nodeType": "YulFunctionCall",
																"src": "9361:15:12"
															},
															"nativeSrc": "9361:15:12",
															"nodeType": "YulExpressionStatement",
															"src": "9361:15:12"
														}
													]
												},
												"name": "panic_error_0x12",
												"nativeSrc": "9255:127:12",
												"nodeType": "YulFunctionDefinition",
												"src": "9255:127:12"
											},
											{
												"body": {
													"nativeSrc": "9419:95:12",
													"nodeType": "YulBlock",
													"src": "9419:95:12",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "9436:1:12",
																		"nodeType": "YulLiteral",
																		"src": "9436:1:12",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"arguments": [
																			{
																				"kind": "number",
																				"nativeSrc": "9443:3:12",
																				"nodeType": "YulLiteral",
																				"src": "9443:3:12",
																				"type": "",
																				"value": "224"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "9448:10:12",
																				"nodeType": "YulLiteral",
																				"src": "9448:10:12",
																				"type": "",
																				"value": "0x4e487b71"
																			}
																		],
																		"functionName": {
																			"name": "shl",
																			"nativeSrc": "9439:3:12",
																			"nodeType": "YulIdentifier",
																			"src": "9439:3:12"
																		},
																		"nativeSrc": "9439:20:12",
																		"nodeType": "YulFunctionCall",
																		"src": "9439:20:12"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "9429:6:12",
																	"nodeType": "YulIdentifier",
																	"src": "9429:6:12"
																},
																"nativeSrc": "9429:31:12",
																"nodeType": "YulFunctionCall",
																"src": "9429:31:12"
															},
															"nativeSrc": "9429:31:12",
															"nodeType": "YulExpressionStatement",
															"src": "9429:31:12"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "9476:1:12",
																		"nodeType": "YulLiteral",
																		"src": "9476:1:12",
																		"type": "",
																		"value": "4"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "9479:4:12",
																		"nodeType": "YulLiteral",
																		"src": "9479:4:12",
																		"type": "",
																		"value": "0x11"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "9469:6:12",
																	"nodeType": "YulIdentifier",
																	"src": "9469:6:12"
																},
																"nativeSrc": "9469:15:12",
																"nodeType": "YulFunctionCall",
																"src": "9469:15:12"
															},
															"nativeSrc": "9469:15:12",
															"nodeType": "YulExpressionStatement",
															"src": "9469:15:12"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "9500:1:12",
																		"nodeType": "YulLiteral",
																		"src": "9500:1:12",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "9503:4:12",
																		"nodeType": "YulLiteral",
																		"src": "9503:4:12",
																		"type": "",
																		"value": "0x24"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nativeSrc": "9493:6:12",
																	"nodeType": "YulIdentifier",
																	"src": "9493:6:12"
																},
																"nativeSrc": "9493:15:12",
																"nodeType": "YulFunctionCall",
																"src": "9493:15:12"
															},
															"nativeSrc": "9493:15:12",
															"nodeType": "YulExpressionStatement",
															"src": "9493:15:12"
														}
													]
												},
												"name": "panic_error_0x11",
												"nativeSrc": "9387:127:12",
												"nodeType": "YulFunctionDefinition",
												"src": "9387:127:12"
											},
											{
												"body": {
													"nativeSrc": "9568:79:12",
													"nodeType": "YulBlock",
													"src": "9568:79:12",
													"statements": [
														{
															"nativeSrc": "9578:17:12",
															"nodeType": "YulAssignment",
															"src": "9578:17:12",
															"value": {
																"arguments": [
																	{
																		"name": "x",
																		"nativeSrc": "9590:1:12",
																		"nodeType": "YulIdentifier",
																		"src": "9590:1:12"
																	},
																	{
																		"name": "y",
																		"nativeSrc": "9593:1:12",
																		"nodeType": "YulIdentifier",
																		"src": "9593:1:12"
																	}
																],
																"functionName": {
																	"name": "sub",
																	"nativeSrc": "9586:3:12",
																	"nodeType": "YulIdentifier",
																	"src": "9586:3:12"
																},
																"nativeSrc": "9586:9:12",
																"nodeType": "YulFunctionCall",
																"src": "9586:9:12"
															},
															"variableNames": [
																{
																	"name": "diff",
																	"nativeSrc": "9578:4:12",
																	"nodeType": "YulIdentifier",
																	"src": "9578:4:12"
																}
															]
														},
														{
															"body": {
																"nativeSrc": "9619:22:12",
																"nodeType": "YulBlock",
																"src": "9619:22:12",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "panic_error_0x11",
																				"nativeSrc": "9621:16:12",
																				"nodeType": "YulIdentifier",
																				"src": "9621:16:12"
																			},
																			"nativeSrc": "9621:18:12",
																			"nodeType": "YulFunctionCall",
																			"src": "9621:18:12"
																		},
																		"nativeSrc": "9621:18:12",
																		"nodeType": "YulExpressionStatement",
																		"src": "9621:18:12"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "diff",
																		"nativeSrc": "9610:4:12",
																		"nodeType": "YulIdentifier",
																		"src": "9610:4:12"
																	},
																	{
																		"name": "x",
																		"nativeSrc": "9616:1:12",
																		"nodeType": "YulIdentifier",
																		"src": "9616:1:12"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nativeSrc": "9607:2:12",
																	"nodeType": "YulIdentifier",
																	"src": "9607:2:12"
																},
																"nativeSrc": "9607:11:12",
																"nodeType": "YulFunctionCall",
																"src": "9607:11:12"
															},
															"nativeSrc": "9604:37:12",
															"nodeType": "YulIf",
															"src": "9604:37:12"
														}
													]
												},
												"name": "checked_sub_t_uint256",
												"nativeSrc": "9519:128:12",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "x",
														"nativeSrc": "9550:1:12",
														"nodeType": "YulTypedName",
														"src": "9550:1:12",
														"type": ""
													},
													{
														"name": "y",
														"nativeSrc": "9553:1:12",
														"nodeType": "YulTypedName",
														"src": "9553:1:12",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "diff",
														"nativeSrc": "9559:4:12",
														"nodeType": "YulTypedName",
														"src": "9559:4:12",
														"type": ""
													}
												],
												"src": "9519:128:12"
											},
											{
												"body": {
													"nativeSrc": "9700:77:12",
													"nodeType": "YulBlock",
													"src": "9700:77:12",
													"statements": [
														{
															"nativeSrc": "9710:16:12",
															"nodeType": "YulAssignment",
															"src": "9710:16:12",
															"value": {
																"arguments": [
																	{
																		"name": "x",
																		"nativeSrc": "9721:1:12",
																		"nodeType": "YulIdentifier",
																		"src": "9721:1:12"
																	},
																	{
																		"name": "y",
																		"nativeSrc": "9724:1:12",
																		"nodeType": "YulIdentifier",
																		"src": "9724:1:12"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "9717:3:12",
																	"nodeType": "YulIdentifier",
																	"src": "9717:3:12"
																},
																"nativeSrc": "9717:9:12",
																"nodeType": "YulFunctionCall",
																"src": "9717:9:12"
															},
															"variableNames": [
																{
																	"name": "sum",
																	"nativeSrc": "9710:3:12",
																	"nodeType": "YulIdentifier",
																	"src": "9710:3:12"
																}
															]
														},
														{
															"body": {
																"nativeSrc": "9749:22:12",
																"nodeType": "YulBlock",
																"src": "9749:22:12",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "panic_error_0x11",
																				"nativeSrc": "9751:16:12",
																				"nodeType": "YulIdentifier",
																				"src": "9751:16:12"
																			},
																			"nativeSrc": "9751:18:12",
																			"nodeType": "YulFunctionCall",
																			"src": "9751:18:12"
																		},
																		"nativeSrc": "9751:18:12",
																		"nodeType": "YulExpressionStatement",
																		"src": "9751:18:12"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "x",
																		"nativeSrc": "9741:1:12",
																		"nodeType": "YulIdentifier",
																		"src": "9741:1:12"
																	},
																	{
																		"name": "sum",
																		"nativeSrc": "9744:3:12",
																		"nodeType": "YulIdentifier",
																		"src": "9744:3:12"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nativeSrc": "9738:2:12",
																	"nodeType": "YulIdentifier",
																	"src": "9738:2:12"
																},
																"nativeSrc": "9738:10:12",
																"nodeType": "YulFunctionCall",
																"src": "9738:10:12"
															},
															"nativeSrc": "9735:36:12",
															"nodeType": "YulIf",
															"src": "9735:36:12"
														}
													]
												},
												"name": "checked_add_t_uint256",
												"nativeSrc": "9652:125:12",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "x",
														"nativeSrc": "9683:1:12",
														"nodeType": "YulTypedName",
														"src": "9683:1:12",
														"type": ""
													},
													{
														"name": "y",
														"nativeSrc": "9686:1:12",
														"nodeType": "YulTypedName",
														"src": "9686:1:12",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "sum",
														"nativeSrc": "9692:3:12",
														"nodeType": "YulTypedName",
														"src": "9692:3:12",
														"type": ""
													}
												],
												"src": "9652:125:12"
											},
											{
												"body": {
													"nativeSrc": "9985:286:12",
													"nodeType": "YulBlock",
													"src": "9985:286:12",
													"statements": [
														{
															"nativeSrc": "9995:29:12",
															"nodeType": "YulVariableDeclaration",
															"src": "9995:29:12",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"kind": "number",
																				"nativeSrc": "10013:3:12",
																				"nodeType": "YulLiteral",
																				"src": "10013:3:12",
																				"type": "",
																				"value": "160"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "10018:1:12",
																				"nodeType": "YulLiteral",
																				"src": "10018:1:12",
																				"type": "",
																				"value": "1"
																			}
																		],
																		"functionName": {
																			"name": "shl",
																			"nativeSrc": "10009:3:12",
																			"nodeType": "YulIdentifier",
																			"src": "10009:3:12"
																		},
																		"nativeSrc": "10009:11:12",
																		"nodeType": "YulFunctionCall",
																		"src": "10009:11:12"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "10022:1:12",
																		"nodeType": "YulLiteral",
																		"src": "10022:1:12",
																		"type": "",
																		"value": "1"
																	}
																],
																"functionName": {
																	"name": "sub",
																	"nativeSrc": "10005:3:12",
																	"nodeType": "YulIdentifier",
																	"src": "10005:3:12"
																},
																"nativeSrc": "10005:19:12",
																"nodeType": "YulFunctionCall",
																"src": "10005:19:12"
															},
															"variables": [
																{
																	"name": "_1",
																	"nativeSrc": "9999:2:12",
																	"nodeType": "YulTypedName",
																	"src": "9999:2:12",
																	"type": ""
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "10040:9:12",
																		"nodeType": "YulIdentifier",
																		"src": "10040:9:12"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value0",
																				"nativeSrc": "10055:6:12",
																				"nodeType": "YulIdentifier",
																				"src": "10055:6:12"
																			},
																			{
																				"name": "_1",
																				"nativeSrc": "10063:2:12",
																				"nodeType": "YulIdentifier",
																				"src": "10063:2:12"
																			}
																		],
																		"functionName": {
																			"name": "and",
																			"nativeSrc": "10051:3:12",
																			"nodeType": "YulIdentifier",
																			"src": "10051:3:12"
																		},
																		"nativeSrc": "10051:15:12",
																		"nodeType": "YulFunctionCall",
																		"src": "10051:15:12"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "10033:6:12",
																	"nodeType": "YulIdentifier",
																	"src": "10033:6:12"
																},
																"nativeSrc": "10033:34:12",
																"nodeType": "YulFunctionCall",
																"src": "10033:34:12"
															},
															"nativeSrc": "10033:34:12",
															"nodeType": "YulExpressionStatement",
															"src": "10033:34:12"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "10087:9:12",
																				"nodeType": "YulIdentifier",
																				"src": "10087:9:12"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "10098:2:12",
																				"nodeType": "YulLiteral",
																				"src": "10098:2:12",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "10083:3:12",
																			"nodeType": "YulIdentifier",
																			"src": "10083:3:12"
																		},
																		"nativeSrc": "10083:18:12",
																		"nodeType": "YulFunctionCall",
																		"src": "10083:18:12"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value1",
																				"nativeSrc": "10107:6:12",
																				"nodeType": "YulIdentifier",
																				"src": "10107:6:12"
																			},
																			{
																				"name": "_1",
																				"nativeSrc": "10115:2:12",
																				"nodeType": "YulIdentifier",
																				"src": "10115:2:12"
																			}
																		],
																		"functionName": {
																			"name": "and",
																			"nativeSrc": "10103:3:12",
																			"nodeType": "YulIdentifier",
																			"src": "10103:3:12"
																		},
																		"nativeSrc": "10103:15:12",
																		"nodeType": "YulFunctionCall",
																		"src": "10103:15:12"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "10076:6:12",
																	"nodeType": "YulIdentifier",
																	"src": "10076:6:12"
																},
																"nativeSrc": "10076:43:12",
																"nodeType": "YulFunctionCall",
																"src": "10076:43:12"
															},
															"nativeSrc": "10076:43:12",
															"nodeType": "YulExpressionStatement",
															"src": "10076:43:12"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "10139:9:12",
																				"nodeType": "YulIdentifier",
																				"src": "10139:9:12"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "10150:2:12",
																				"nodeType": "YulLiteral",
																				"src": "10150:2:12",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "10135:3:12",
																			"nodeType": "YulIdentifier",
																			"src": "10135:3:12"
																		},
																		"nativeSrc": "10135:18:12",
																		"nodeType": "YulFunctionCall",
																		"src": "10135:18:12"
																	},
																	{
																		"name": "value2",
																		"nativeSrc": "10155:6:12",
																		"nodeType": "YulIdentifier",
																		"src": "10155:6:12"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "10128:6:12",
																	"nodeType": "YulIdentifier",
																	"src": "10128:6:12"
																},
																"nativeSrc": "10128:34:12",
																"nodeType": "YulFunctionCall",
																"src": "10128:34:12"
															},
															"nativeSrc": "10128:34:12",
															"nodeType": "YulExpressionStatement",
															"src": "10128:34:12"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "10182:9:12",
																				"nodeType": "YulIdentifier",
																				"src": "10182:9:12"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "10193:2:12",
																				"nodeType": "YulLiteral",
																				"src": "10193:2:12",
																				"type": "",
																				"value": "96"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "10178:3:12",
																			"nodeType": "YulIdentifier",
																			"src": "10178:3:12"
																		},
																		"nativeSrc": "10178:18:12",
																		"nodeType": "YulFunctionCall",
																		"src": "10178:18:12"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "10198:3:12",
																		"nodeType": "YulLiteral",
																		"src": "10198:3:12",
																		"type": "",
																		"value": "128"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "10171:6:12",
																	"nodeType": "YulIdentifier",
																	"src": "10171:6:12"
																},
																"nativeSrc": "10171:31:12",
																"nodeType": "YulFunctionCall",
																"src": "10171:31:12"
															},
															"nativeSrc": "10171:31:12",
															"nodeType": "YulExpressionStatement",
															"src": "10171:31:12"
														},
														{
															"nativeSrc": "10211:54:12",
															"nodeType": "YulAssignment",
															"src": "10211:54:12",
															"value": {
																"arguments": [
																	{
																		"name": "value3",
																		"nativeSrc": "10237:6:12",
																		"nodeType": "YulIdentifier",
																		"src": "10237:6:12"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "10249:9:12",
																				"nodeType": "YulIdentifier",
																				"src": "10249:9:12"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "10260:3:12",
																				"nodeType": "YulLiteral",
																				"src": "10260:3:12",
																				"type": "",
																				"value": "128"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "10245:3:12",
																			"nodeType": "YulIdentifier",
																			"src": "10245:3:12"
																		},
																		"nativeSrc": "10245:19:12",
																		"nodeType": "YulFunctionCall",
																		"src": "10245:19:12"
																	}
																],
																"functionName": {
																	"name": "abi_encode_string",
																	"nativeSrc": "10219:17:12",
																	"nodeType": "YulIdentifier",
																	"src": "10219:17:12"
																},
																"nativeSrc": "10219:46:12",
																"nodeType": "YulFunctionCall",
																"src": "10219:46:12"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "10211:4:12",
																	"nodeType": "YulIdentifier",
																	"src": "10211:4:12"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_address_t_address_t_uint256_t_bytes_memory_ptr__to_t_address_t_address_t_uint256_t_bytes_memory_ptr__fromStack_reversed",
												"nativeSrc": "9782:489:12",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "9930:9:12",
														"nodeType": "YulTypedName",
														"src": "9930:9:12",
														"type": ""
													},
													{
														"name": "value3",
														"nativeSrc": "9941:6:12",
														"nodeType": "YulTypedName",
														"src": "9941:6:12",
														"type": ""
													},
													{
														"name": "value2",
														"nativeSrc": "9949:6:12",
														"nodeType": "YulTypedName",
														"src": "9949:6:12",
														"type": ""
													},
													{
														"name": "value1",
														"nativeSrc": "9957:6:12",
														"nodeType": "YulTypedName",
														"src": "9957:6:12",
														"type": ""
													},
													{
														"name": "value0",
														"nativeSrc": "9965:6:12",
														"nodeType": "YulTypedName",
														"src": "9965:6:12",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "9976:4:12",
														"nodeType": "YulTypedName",
														"src": "9976:4:12",
														"type": ""
													}
												],
												"src": "9782:489:12"
											},
											{
												"body": {
													"nativeSrc": "10356:169:12",
													"nodeType": "YulBlock",
													"src": "10356:169:12",
													"statements": [
														{
															"body": {
																"nativeSrc": "10402:16:12",
																"nodeType": "YulBlock",
																"src": "10402:16:12",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nativeSrc": "10411:1:12",
																					"nodeType": "YulLiteral",
																					"src": "10411:1:12",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "10414:1:12",
																					"nodeType": "YulLiteral",
																					"src": "10414:1:12",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nativeSrc": "10404:6:12",
																				"nodeType": "YulIdentifier",
																				"src": "10404:6:12"
																			},
																			"nativeSrc": "10404:12:12",
																			"nodeType": "YulFunctionCall",
																			"src": "10404:12:12"
																		},
																		"nativeSrc": "10404:12:12",
																		"nodeType": "YulExpressionStatement",
																		"src": "10404:12:12"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nativeSrc": "10377:7:12",
																				"nodeType": "YulIdentifier",
																				"src": "10377:7:12"
																			},
																			{
																				"name": "headStart",
																				"nativeSrc": "10386:9:12",
																				"nodeType": "YulIdentifier",
																				"src": "10386:9:12"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "10373:3:12",
																			"nodeType": "YulIdentifier",
																			"src": "10373:3:12"
																		},
																		"nativeSrc": "10373:23:12",
																		"nodeType": "YulFunctionCall",
																		"src": "10373:23:12"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "10398:2:12",
																		"nodeType": "YulLiteral",
																		"src": "10398:2:12",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nativeSrc": "10369:3:12",
																	"nodeType": "YulIdentifier",
																	"src": "10369:3:12"
																},
																"nativeSrc": "10369:32:12",
																"nodeType": "YulFunctionCall",
																"src": "10369:32:12"
															},
															"nativeSrc": "10366:52:12",
															"nodeType": "YulIf",
															"src": "10366:52:12"
														},
														{
															"nativeSrc": "10427:29:12",
															"nodeType": "YulVariableDeclaration",
															"src": "10427:29:12",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "10446:9:12",
																		"nodeType": "YulIdentifier",
																		"src": "10446:9:12"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nativeSrc": "10440:5:12",
																	"nodeType": "YulIdentifier",
																	"src": "10440:5:12"
																},
																"nativeSrc": "10440:16:12",
																"nodeType": "YulFunctionCall",
																"src": "10440:16:12"
															},
															"variables": [
																{
																	"name": "value",
																	"nativeSrc": "10431:5:12",
																	"nodeType": "YulTypedName",
																	"src": "10431:5:12",
																	"type": ""
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "10489:5:12",
																		"nodeType": "YulIdentifier",
																		"src": "10489:5:12"
																	}
																],
																"functionName": {
																	"name": "validator_revert_bytes4",
																	"nativeSrc": "10465:23:12",
																	"nodeType": "YulIdentifier",
																	"src": "10465:23:12"
																},
																"nativeSrc": "10465:30:12",
																"nodeType": "YulFunctionCall",
																"src": "10465:30:12"
															},
															"nativeSrc": "10465:30:12",
															"nodeType": "YulExpressionStatement",
															"src": "10465:30:12"
														},
														{
															"nativeSrc": "10504:15:12",
															"nodeType": "YulAssignment",
															"src": "10504:15:12",
															"value": {
																"name": "value",
																"nativeSrc": "10514:5:12",
																"nodeType": "YulIdentifier",
																"src": "10514:5:12"
															},
															"variableNames": [
																{
																	"name": "value0",
																	"nativeSrc": "10504:6:12",
																	"nodeType": "YulIdentifier",
																	"src": "10504:6:12"
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_bytes4_fromMemory",
												"nativeSrc": "10276:249:12",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "10322:9:12",
														"nodeType": "YulTypedName",
														"src": "10322:9:12",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nativeSrc": "10333:7:12",
														"nodeType": "YulTypedName",
														"src": "10333:7:12",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nativeSrc": "10345:6:12",
														"nodeType": "YulTypedName",
														"src": "10345:6:12",
														"type": ""
													}
												],
												"src": "10276:249:12"
											}
										]
									},
									"contents": "{\n    { }\n    function validator_revert_bytes4(value)\n    {\n        if iszero(eq(value, and(value, shl(224, 0xffffffff)))) { revert(0, 0) }\n    }\n    function abi_decode_tuple_t_bytes4(headStart, dataEnd) -> value0\n    {\n        if slt(sub(dataEnd, headStart), 32) { revert(0, 0) }\n        let value := calldataload(headStart)\n        validator_revert_bytes4(value)\n        value0 := value\n    }\n    function abi_encode_tuple_t_bool__to_t_bool__fromStack_reversed(headStart, value0) -> tail\n    {\n        tail := add(headStart, 32)\n        mstore(headStart, iszero(iszero(value0)))\n    }\n    function copy_memory_to_memory_with_cleanup(src, dst, length)\n    {\n        let i := 0\n        for { } lt(i, length) { i := add(i, 32) }\n        {\n            mstore(add(dst, i), mload(add(src, i)))\n        }\n        mstore(add(dst, length), 0)\n    }\n    function abi_encode_string(value, pos) -> end\n    {\n        let length := mload(value)\n        mstore(pos, length)\n        copy_memory_to_memory_with_cleanup(add(value, 0x20), add(pos, 0x20), length)\n        end := add(add(pos, and(add(length, 31), not(31))), 0x20)\n    }\n    function abi_encode_tuple_t_string_memory_ptr__to_t_string_memory_ptr__fromStack_reversed(headStart, value0) -> tail\n    {\n        mstore(headStart, 32)\n        tail := abi_encode_string(value0, add(headStart, 32))\n    }\n    function abi_decode_tuple_t_uint256(headStart, dataEnd) -> value0\n    {\n        if slt(sub(dataEnd, headStart), 32) { revert(0, 0) }\n        value0 := calldataload(headStart)\n    }\n    function abi_encode_tuple_t_address__to_t_address__fromStack_reversed(headStart, value0) -> tail\n    {\n        tail := add(headStart, 32)\n        mstore(headStart, and(value0, sub(shl(160, 1), 1)))\n    }\n    function abi_decode_address(offset) -> value\n    {\n        value := calldataload(offset)\n        if iszero(eq(value, and(value, sub(shl(160, 1), 1)))) { revert(0, 0) }\n    }\n    function abi_decode_tuple_t_addresst_uint256(headStart, dataEnd) -> value0, value1\n    {\n        if slt(sub(dataEnd, headStart), 64) { revert(0, 0) }\n        value0 := abi_decode_address(headStart)\n        value1 := calldataload(add(headStart, 32))\n    }\n    function abi_decode_tuple_t_addresst_addresst_uint256(headStart, dataEnd) -> value0, value1, value2\n    {\n        if slt(sub(dataEnd, headStart), 96) { revert(0, 0) }\n        value0 := abi_decode_address(headStart)\n        value1 := abi_decode_address(add(headStart, 32))\n        value2 := calldataload(add(headStart, 64))\n    }\n    function abi_decode_tuple_t_address(headStart, dataEnd) -> value0\n    {\n        if slt(sub(dataEnd, headStart), 32) { revert(0, 0) }\n        value0 := abi_decode_address(headStart)\n    }\n    function abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed(headStart, value0) -> tail\n    {\n        tail := add(headStart, 32)\n        mstore(headStart, value0)\n    }\n    function abi_decode_tuple_t_addresst_bool(headStart, dataEnd) -> value0, value1\n    {\n        if slt(sub(dataEnd, headStart), 64) { revert(0, 0) }\n        value0 := abi_decode_address(headStart)\n        let value := calldataload(add(headStart, 32))\n        if iszero(eq(value, iszero(iszero(value)))) { revert(0, 0) }\n        value1 := value\n    }\n    function panic_error_0x41()\n    {\n        mstore(0, shl(224, 0x4e487b71))\n        mstore(4, 0x41)\n        revert(0, 0x24)\n    }\n    function abi_decode_tuple_t_addresst_addresst_uint256t_bytes_memory_ptr(headStart, dataEnd) -> value0, value1, value2, value3\n    {\n        if slt(sub(dataEnd, headStart), 128) { revert(0, 0) }\n        value0 := abi_decode_address(headStart)\n        value1 := abi_decode_address(add(headStart, 32))\n        value2 := calldataload(add(headStart, 64))\n        let offset := calldataload(add(headStart, 96))\n        let _1 := 0xffffffffffffffff\n        if gt(offset, _1) { revert(0, 0) }\n        let _2 := add(headStart, offset)\n        if iszero(slt(add(_2, 0x1f), dataEnd)) { revert(0, 0) }\n        let _3 := calldataload(_2)\n        if gt(_3, _1) { panic_error_0x41() }\n        let _4 := not(31)\n        let memPtr := mload(64)\n        let newFreePtr := add(memPtr, and(add(and(add(_3, 0x1f), _4), 63), _4))\n        if or(gt(newFreePtr, _1), lt(newFreePtr, memPtr)) { panic_error_0x41() }\n        mstore(64, newFreePtr)\n        mstore(memPtr, _3)\n        if gt(add(add(_2, _3), 32), dataEnd) { revert(0, 0) }\n        calldatacopy(add(memPtr, 32), add(_2, 32), _3)\n        mstore(add(add(memPtr, _3), 32), 0)\n        value3 := memPtr\n    }\n    function abi_decode_tuple_t_addresst_address(headStart, dataEnd) -> value0, value1\n    {\n        if slt(sub(dataEnd, headStart), 64) { revert(0, 0) }\n        value0 := abi_decode_address(headStart)\n        value1 := abi_decode_address(add(headStart, 32))\n    }\n    function extract_byte_array_length(data) -> length\n    {\n        length := shr(1, data)\n        let outOfPlaceEncoding := and(data, 1)\n        if iszero(outOfPlaceEncoding) { length := and(length, 0x7f) }\n        if eq(outOfPlaceEncoding, lt(length, 32))\n        {\n            mstore(0, shl(224, 0x4e487b71))\n            mstore(4, 0x22)\n            revert(0, 0x24)\n        }\n    }\n    function abi_encode_tuple_t_stringliteral_b51b4875eede07862961e8f9365c6749f5fe55c6ee5d7a9e42b6912ad0b15942__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 33)\n        mstore(add(headStart, 64), \"ERC721: approval to current owne\")\n        mstore(add(headStart, 96), \"r\")\n        tail := add(headStart, 128)\n    }\n    function abi_encode_tuple_t_stringliteral_c6e14a63ffb144eeef7cce6988e5dce07c60a7e0a7b1ef25dbe18c61483e0a83__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 61)\n        mstore(add(headStart, 64), \"ERC721: approve caller is not to\")\n        mstore(add(headStart, 96), \"ken owner or approved for all\")\n        tail := add(headStart, 128)\n    }\n    function abi_encode_tuple_t_stringliteral_12a8e5623d251e191fe4a291d9a59bcc01a4db7a1f5c20fc8de44358c18308af__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 45)\n        mstore(add(headStart, 64), \"ERC721: caller is not token owne\")\n        mstore(add(headStart, 96), \"r or approved\")\n        tail := add(headStart, 128)\n    }\n    function abi_encode_tuple_t_stringliteral_b08d2b0fec7cc108ab049809a8beb42779d969a49299d0c317c907d9db22974f__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 24)\n        mstore(add(headStart, 64), \"ERC721: invalid token ID\")\n        tail := add(headStart, 96)\n    }\n    function abi_encode_tuple_t_stringliteral_6d05c90094f31cfeb8f0eb86f0a513af3f7f8992991fbde41b08aa7960677159__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 41)\n        mstore(add(headStart, 64), \"ERC721: address zero is not a va\")\n        mstore(add(headStart, 96), \"lid owner\")\n        tail := add(headStart, 128)\n    }\n    function abi_encode_tuple_packed_t_string_memory_ptr_t_string_memory_ptr__to_t_string_memory_ptr_t_string_memory_ptr__nonPadded_inplace_fromStack_reversed(pos, value1, value0) -> end\n    {\n        let length := mload(value0)\n        copy_memory_to_memory_with_cleanup(add(value0, 0x20), pos, length)\n        let end_1 := add(pos, length)\n        let length_1 := mload(value1)\n        copy_memory_to_memory_with_cleanup(add(value1, 0x20), end_1, length_1)\n        end := add(end_1, length_1)\n    }\n    function abi_encode_tuple_t_stringliteral_277f8ee9d5b4fc3c4149386f24de0fc1bbc63a8210e2197bfd1c0376a2ac5f48__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 37)\n        mstore(add(headStart, 64), \"ERC721: transfer from incorrect \")\n        mstore(add(headStart, 96), \"owner\")\n        tail := add(headStart, 128)\n    }\n    function abi_encode_tuple_t_stringliteral_455fea98ea03c32d7dd1a6f1426917d80529bf47b3ccbde74e7206e889e709f4__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 36)\n        mstore(add(headStart, 64), \"ERC721: transfer to the zero add\")\n        mstore(add(headStart, 96), \"ress\")\n        tail := add(headStart, 128)\n    }\n    function abi_encode_tuple_t_stringliteral_45fe4329685be5ecd250fd0e6a25aea0ea4d0e30fb6a73c118b95749e6d70d05__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 25)\n        mstore(add(headStart, 64), \"ERC721: approve to caller\")\n        tail := add(headStart, 96)\n    }\n    function abi_encode_tuple_t_stringliteral_1e766a06da43a53d0f4c380e06e5a342e14d5af1bf8501996c844905530ca84e__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 50)\n        mstore(add(headStart, 64), \"ERC721: transfer to non ERC721Re\")\n        mstore(add(headStart, 96), \"ceiver implementer\")\n        tail := add(headStart, 128)\n    }\n    function panic_error_0x12()\n    {\n        mstore(0, shl(224, 0x4e487b71))\n        mstore(4, 0x12)\n        revert(0, 0x24)\n    }\n    function panic_error_0x11()\n    {\n        mstore(0, shl(224, 0x4e487b71))\n        mstore(4, 0x11)\n        revert(0, 0x24)\n    }\n    function checked_sub_t_uint256(x, y) -> diff\n    {\n        diff := sub(x, y)\n        if gt(diff, x) { panic_error_0x11() }\n    }\n    function checked_add_t_uint256(x, y) -> sum\n    {\n        sum := add(x, y)\n        if gt(x, sum) { panic_error_0x11() }\n    }\n    function abi_encode_tuple_t_address_t_address_t_uint256_t_bytes_memory_ptr__to_t_address_t_address_t_uint256_t_bytes_memory_ptr__fromStack_reversed(headStart, value3, value2, value1, value0) -> tail\n    {\n        let _1 := sub(shl(160, 1), 1)\n        mstore(headStart, and(value0, _1))\n        mstore(add(headStart, 32), and(value1, _1))\n        mstore(add(headStart, 64), value2)\n        mstore(add(headStart, 96), 128)\n        tail := abi_encode_string(value3, add(headStart, 128))\n    }\n    function abi_decode_tuple_t_bytes4_fromMemory(headStart, dataEnd) -> value0\n    {\n        if slt(sub(dataEnd, headStart), 32) { revert(0, 0) }\n        let value := mload(headStart)\n        validator_revert_bytes4(value)\n        value0 := value\n    }\n}",
									"id": 12,
									"language": "Yul",
									"name": "#utility.yul"
								}
							],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH2 0xF JUMPI PUSH0 DUP1 REVERT JUMPDEST POP PUSH1 0x4 CALLDATASIZE LT PUSH2 0xCB JUMPI PUSH0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0x6352211E GT PUSH2 0x88 JUMPI DUP1 PUSH4 0xA22CB465 GT PUSH2 0x63 JUMPI DUP1 PUSH4 0xA22CB465 EQ PUSH2 0x1AE JUMPI DUP1 PUSH4 0xB88D4FDE EQ PUSH2 0x1C1 JUMPI DUP1 PUSH4 0xC87B56DD EQ PUSH2 0x1D4 JUMPI DUP1 PUSH4 0xE985E9C5 EQ PUSH2 0x1E7 JUMPI PUSH0 DUP1 REVERT JUMPDEST DUP1 PUSH4 0x6352211E EQ PUSH2 0x172 JUMPI DUP1 PUSH4 0x70A08231 EQ PUSH2 0x185 JUMPI DUP1 PUSH4 0x95D89B41 EQ PUSH2 0x1A6 JUMPI PUSH0 DUP1 REVERT JUMPDEST DUP1 PUSH4 0x1FFC9A7 EQ PUSH2 0xCF JUMPI DUP1 PUSH4 0x6FDDE03 EQ PUSH2 0xF7 JUMPI DUP1 PUSH4 0x81812FC EQ PUSH2 0x10C JUMPI DUP1 PUSH4 0x95EA7B3 EQ PUSH2 0x137 JUMPI DUP1 PUSH4 0x23B872DD EQ PUSH2 0x14C JUMPI DUP1 PUSH4 0x42842E0E EQ PUSH2 0x15F JUMPI JUMPDEST PUSH0 DUP1 REVERT JUMPDEST PUSH2 0xE2 PUSH2 0xDD CALLDATASIZE PUSH1 0x4 PUSH2 0xCD3 JUMP JUMPDEST PUSH2 0x1FA JUMP JUMPDEST PUSH1 0x40 MLOAD SWAP1 ISZERO ISZERO DUP2 MSTORE PUSH1 0x20 ADD JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0xFF PUSH2 0x24B JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0xEE SWAP2 SWAP1 PUSH2 0xD3B JUMP JUMPDEST PUSH2 0x11F PUSH2 0x11A CALLDATASIZE PUSH1 0x4 PUSH2 0xD4D JUMP JUMPDEST PUSH2 0x2DA JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 SWAP2 AND DUP2 MSTORE PUSH1 0x20 ADD PUSH2 0xEE JUMP JUMPDEST PUSH2 0x14A PUSH2 0x145 CALLDATASIZE PUSH1 0x4 PUSH2 0xD7F JUMP JUMPDEST PUSH2 0x2FF JUMP JUMPDEST STOP JUMPDEST PUSH2 0x14A PUSH2 0x15A CALLDATASIZE PUSH1 0x4 PUSH2 0xDA7 JUMP JUMPDEST PUSH2 0x418 JUMP JUMPDEST PUSH2 0x14A PUSH2 0x16D CALLDATASIZE PUSH1 0x4 PUSH2 0xDA7 JUMP JUMPDEST PUSH2 0x449 JUMP JUMPDEST PUSH2 0x11F PUSH2 0x180 CALLDATASIZE PUSH1 0x4 PUSH2 0xD4D JUMP JUMPDEST PUSH2 0x463 JUMP JUMPDEST PUSH2 0x198 PUSH2 0x193 CALLDATASIZE PUSH1 0x4 PUSH2 0xDE0 JUMP JUMPDEST PUSH2 0x4C2 JUMP JUMPDEST PUSH1 0x40 MLOAD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH2 0xEE JUMP JUMPDEST PUSH2 0xFF PUSH2 0x546 JUMP JUMPDEST PUSH2 0x14A PUSH2 0x1BC CALLDATASIZE PUSH1 0x4 PUSH2 0xDF9 JUMP JUMPDEST PUSH2 0x555 JUMP JUMPDEST PUSH2 0x14A PUSH2 0x1CF CALLDATASIZE PUSH1 0x4 PUSH2 0xE46 JUMP JUMPDEST PUSH2 0x564 JUMP JUMPDEST PUSH2 0xFF PUSH2 0x1E2 CALLDATASIZE PUSH1 0x4 PUSH2 0xD4D JUMP JUMPDEST PUSH2 0x59C JUMP JUMPDEST PUSH2 0xE2 PUSH2 0x1F5 CALLDATASIZE PUSH1 0x4 PUSH2 0xF1B JUMP JUMPDEST PUSH2 0x60C JUMP JUMPDEST PUSH0 PUSH1 0x1 PUSH1 0x1 PUSH1 0xE0 SHL SUB NOT DUP3 AND PUSH4 0x80AC58CD PUSH1 0xE0 SHL EQ DUP1 PUSH2 0x22A JUMPI POP PUSH1 0x1 PUSH1 0x1 PUSH1 0xE0 SHL SUB NOT DUP3 AND PUSH4 0x5B5E139F PUSH1 0xE0 SHL EQ JUMPDEST DUP1 PUSH2 0x245 JUMPI POP PUSH4 0x1FFC9A7 PUSH1 0xE0 SHL PUSH1 0x1 PUSH1 0x1 PUSH1 0xE0 SHL SUB NOT DUP4 AND EQ JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x60 PUSH0 DUP1 SLOAD PUSH2 0x259 SWAP1 PUSH2 0xF4C JUMP JUMPDEST DUP1 PUSH1 0x1F ADD PUSH1 0x20 DUP1 SWAP2 DIV MUL PUSH1 0x20 ADD PUSH1 0x40 MLOAD SWAP1 DUP2 ADD PUSH1 0x40 MSTORE DUP1 SWAP3 SWAP2 SWAP1 DUP2 DUP2 MSTORE PUSH1 0x20 ADD DUP3 DUP1 SLOAD PUSH2 0x285 SWAP1 PUSH2 0xF4C JUMP JUMPDEST DUP1 ISZERO PUSH2 0x2D0 JUMPI DUP1 PUSH1 0x1F LT PUSH2 0x2A7 JUMPI PUSH2 0x100 DUP1 DUP4 SLOAD DIV MUL DUP4 MSTORE SWAP2 PUSH1 0x20 ADD SWAP2 PUSH2 0x2D0 JUMP JUMPDEST DUP3 ADD SWAP2 SWAP1 PUSH0 MSTORE PUSH1 0x20 PUSH0 KECCAK256 SWAP1 JUMPDEST DUP2 SLOAD DUP2 MSTORE SWAP1 PUSH1 0x1 ADD SWAP1 PUSH1 0x20 ADD DUP1 DUP4 GT PUSH2 0x2B3 JUMPI DUP3 SWAP1 SUB PUSH1 0x1F AND DUP3 ADD SWAP2 JUMPDEST POP POP POP POP POP SWAP1 POP SWAP1 JUMP JUMPDEST PUSH0 PUSH2 0x2E4 DUP3 PUSH2 0x639 JUMP JUMPDEST POP PUSH0 SWAP1 DUP2 MSTORE PUSH1 0x4 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND SWAP1 JUMP JUMPDEST PUSH0 PUSH2 0x309 DUP3 PUSH2 0x463 JUMP JUMPDEST SWAP1 POP DUP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP4 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND SUB PUSH2 0x37B JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x21 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x4552433732313A20617070726F76616C20746F2063757272656E74206F776E65 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x39 PUSH1 0xF9 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST CALLER PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 AND EQ DUP1 PUSH2 0x397 JUMPI POP PUSH2 0x397 DUP2 CALLER PUSH2 0x60C JUMP JUMPDEST PUSH2 0x409 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x3D PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x4552433732313A20617070726F76652063616C6C6572206973206E6F7420746F PUSH1 0x44 DUP3 ADD MSTORE PUSH32 0x6B656E206F776E6572206F7220617070726F76656420666F7220616C6C000000 PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0x372 JUMP JUMPDEST PUSH2 0x413 DUP4 DUP4 PUSH2 0x69A JUMP JUMPDEST POP POP POP JUMP JUMPDEST PUSH2 0x422 CALLER DUP3 PUSH2 0x707 JUMP JUMPDEST PUSH2 0x43E JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x372 SWAP1 PUSH2 0xF84 JUMP JUMPDEST PUSH2 0x413 DUP4 DUP4 DUP4 PUSH2 0x765 JUMP JUMPDEST PUSH2 0x413 DUP4 DUP4 DUP4 PUSH1 0x40 MLOAD DUP1 PUSH1 0x20 ADD PUSH1 0x40 MSTORE DUP1 PUSH0 DUP2 MSTORE POP PUSH2 0x564 JUMP JUMPDEST PUSH0 DUP2 DUP2 MSTORE PUSH1 0x2 PUSH1 0x20 MSTORE PUSH1 0x40 DUP2 KECCAK256 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP1 PUSH2 0x245 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x18 PUSH1 0x24 DUP3 ADD MSTORE PUSH24 0x115490CDCC8C4E881A5B9D985B1A59081D1BDAD95B881251 PUSH1 0x42 SHL PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x372 JUMP JUMPDEST PUSH0 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 AND PUSH2 0x52B JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x29 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x4552433732313A2061646472657373207A65726F206973206E6F742061207661 PUSH1 0x44 DUP3 ADD MSTORE PUSH9 0x3634B21037BBB732B9 PUSH1 0xB9 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0x372 JUMP JUMPDEST POP PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH0 SWAP1 DUP2 MSTORE PUSH1 0x3 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD SWAP1 JUMP JUMPDEST PUSH1 0x60 PUSH1 0x1 DUP1 SLOAD PUSH2 0x259 SWAP1 PUSH2 0xF4C JUMP JUMPDEST PUSH2 0x560 CALLER DUP4 DUP4 PUSH2 0x8D4 JUMP JUMPDEST POP POP JUMP JUMPDEST PUSH2 0x56E CALLER DUP4 PUSH2 0x707 JUMP JUMPDEST PUSH2 0x58A JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x372 SWAP1 PUSH2 0xF84 JUMP JUMPDEST PUSH2 0x596 DUP5 DUP5 DUP5 DUP5 PUSH2 0x9A1 JUMP JUMPDEST POP POP POP POP JUMP JUMPDEST PUSH1 0x60 PUSH2 0x5A7 DUP3 PUSH2 0x639 JUMP JUMPDEST PUSH0 PUSH2 0x5BC PUSH1 0x40 DUP1 MLOAD PUSH1 0x20 DUP2 ADD SWAP1 SWAP2 MSTORE PUSH0 DUP2 MSTORE SWAP1 JUMP JUMPDEST SWAP1 POP PUSH0 DUP2 MLOAD GT PUSH2 0x5DA JUMPI PUSH1 0x40 MLOAD DUP1 PUSH1 0x20 ADD PUSH1 0x40 MSTORE DUP1 PUSH0 DUP2 MSTORE POP PUSH2 0x605 JUMP JUMPDEST DUP1 PUSH2 0x5E4 DUP5 PUSH2 0x9D4 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x20 ADD PUSH2 0x5F5 SWAP3 SWAP2 SWAP1 PUSH2 0xFD1 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x20 DUP2 DUP4 SUB SUB DUP2 MSTORE SWAP1 PUSH1 0x40 MSTORE JUMPDEST SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP2 DUP3 AND PUSH0 SWAP1 DUP2 MSTORE PUSH1 0x5 PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 SWAP4 SWAP1 SWAP5 AND DUP3 MSTORE SWAP2 SWAP1 SWAP2 MSTORE KECCAK256 SLOAD PUSH1 0xFF AND SWAP1 JUMP JUMPDEST PUSH0 DUP2 DUP2 MSTORE PUSH1 0x2 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH2 0x697 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x18 PUSH1 0x24 DUP3 ADD MSTORE PUSH24 0x115490CDCC8C4E881A5B9D985B1A59081D1BDAD95B881251 PUSH1 0x42 SHL PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x372 JUMP JUMPDEST POP JUMP JUMPDEST PUSH0 DUP2 DUP2 MSTORE PUSH1 0x4 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 DUP1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB NOT AND PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP5 AND SWAP1 DUP2 OR SWAP1 SWAP2 SSTORE DUP2 SWAP1 PUSH2 0x6CE DUP3 PUSH2 0x463 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH32 0x8C5BE1E5EBEC7D5BD14F71427D1E84F3DD0314C0F7B2291E5B200AC8C7C3B925 PUSH1 0x40 MLOAD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG4 POP POP JUMP JUMPDEST PUSH0 DUP1 PUSH2 0x712 DUP4 PUSH2 0x463 JUMP JUMPDEST SWAP1 POP DUP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP5 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND EQ DUP1 PUSH2 0x739 JUMPI POP PUSH2 0x739 DUP2 DUP6 PUSH2 0x60C JUMP JUMPDEST DUP1 PUSH2 0x75D JUMPI POP DUP4 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH2 0x752 DUP5 PUSH2 0x2DA JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND EQ JUMPDEST SWAP5 SWAP4 POP POP POP POP JUMP JUMPDEST DUP3 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH2 0x778 DUP3 PUSH2 0x463 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND EQ PUSH2 0x79E JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x372 SWAP1 PUSH2 0xFFF JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 AND PUSH2 0x800 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x24 DUP1 DUP3 ADD MSTORE PUSH32 0x4552433732313A207472616E7366657220746F20746865207A65726F20616464 PUSH1 0x44 DUP3 ADD MSTORE PUSH4 0x72657373 PUSH1 0xE0 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0x372 JUMP JUMPDEST PUSH2 0x80D DUP4 DUP4 DUP4 PUSH1 0x1 PUSH2 0xA64 JUMP JUMPDEST DUP3 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH2 0x820 DUP3 PUSH2 0x463 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND EQ PUSH2 0x846 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x372 SWAP1 PUSH2 0xFFF JUMP JUMPDEST PUSH0 DUP2 DUP2 MSTORE PUSH1 0x4 PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 DUP1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB NOT SWAP1 DUP2 AND SWAP1 SWAP2 SSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP8 DUP2 AND DUP1 DUP7 MSTORE PUSH1 0x3 DUP6 MSTORE DUP4 DUP7 KECCAK256 DUP1 SLOAD PUSH0 NOT ADD SWAP1 SSTORE SWAP1 DUP8 AND DUP1 DUP7 MSTORE DUP4 DUP7 KECCAK256 DUP1 SLOAD PUSH1 0x1 ADD SWAP1 SSTORE DUP7 DUP7 MSTORE PUSH1 0x2 SWAP1 SWAP5 MSTORE DUP3 DUP6 KECCAK256 DUP1 SLOAD SWAP1 SWAP3 AND DUP5 OR SWAP1 SWAP2 SSTORE SWAP1 MLOAD DUP5 SWAP4 PUSH32 0xDDF252AD1BE2C89B69C2B068FC378DAA952BA7F163C4A11628F55A4DF523B3EF SWAP2 LOG4 POP POP POP JUMP JUMPDEST DUP2 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP4 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND SUB PUSH2 0x935 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x19 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x4552433732313A20617070726F766520746F2063616C6C657200000000000000 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x372 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 DUP2 AND PUSH0 DUP2 DUP2 MSTORE PUSH1 0x5 PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 SWAP5 DUP8 AND DUP1 DUP5 MSTORE SWAP5 DUP3 MSTORE SWAP2 DUP3 SWAP1 KECCAK256 DUP1 SLOAD PUSH1 0xFF NOT AND DUP7 ISZERO ISZERO SWAP1 DUP2 OR SWAP1 SWAP2 SSTORE SWAP2 MLOAD SWAP2 DUP3 MSTORE PUSH32 0x17307EAB39AB6107E8899845AD3D59BD9653F200F220920489CA2B5937696C31 SWAP2 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 POP POP POP JUMP JUMPDEST PUSH2 0x9AC DUP5 DUP5 DUP5 PUSH2 0x765 JUMP JUMPDEST PUSH2 0x9B8 DUP5 DUP5 DUP5 DUP5 PUSH2 0xAEA JUMP JUMPDEST PUSH2 0x596 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x372 SWAP1 PUSH2 0x1044 JUMP JUMPDEST PUSH1 0x60 PUSH0 PUSH2 0x9E0 DUP4 PUSH2 0xBE7 JUMP JUMPDEST PUSH1 0x1 ADD SWAP1 POP PUSH0 DUP2 PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0x9FF JUMPI PUSH2 0x9FF PUSH2 0xE32 JUMP JUMPDEST PUSH1 0x40 MLOAD SWAP1 DUP1 DUP3 MSTORE DUP1 PUSH1 0x1F ADD PUSH1 0x1F NOT AND PUSH1 0x20 ADD DUP3 ADD PUSH1 0x40 MSTORE DUP1 ISZERO PUSH2 0xA29 JUMPI PUSH1 0x20 DUP3 ADD DUP2 DUP1 CALLDATASIZE DUP4 CALLDATACOPY ADD SWAP1 POP JUMPDEST POP SWAP1 POP DUP2 DUP2 ADD PUSH1 0x20 ADD JUMPDEST PUSH0 NOT ADD PUSH16 0x181899199A1A9B1B9C1CB0B131B232B3 PUSH1 0x81 SHL PUSH1 0xA DUP7 MOD BYTE DUP2 MSTORE8 PUSH1 0xA DUP6 DIV SWAP5 POP DUP5 PUSH2 0xA33 JUMPI POP SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x1 DUP2 GT ISZERO PUSH2 0x596 JUMPI PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP5 AND ISZERO PUSH2 0xAA9 JUMPI PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP5 AND PUSH0 SWAP1 DUP2 MSTORE PUSH1 0x3 PUSH1 0x20 MSTORE PUSH1 0x40 DUP2 KECCAK256 DUP1 SLOAD DUP4 SWAP3 SWAP1 PUSH2 0xAA3 SWAP1 DUP5 SWAP1 PUSH2 0x10AA JUMP JUMPDEST SWAP1 SWAP2 SSTORE POP POP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 AND ISZERO PUSH2 0x596 JUMPI PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 AND PUSH0 SWAP1 DUP2 MSTORE PUSH1 0x3 PUSH1 0x20 MSTORE PUSH1 0x40 DUP2 KECCAK256 DUP1 SLOAD DUP4 SWAP3 SWAP1 PUSH2 0xADF SWAP1 DUP5 SWAP1 PUSH2 0x10BD JUMP JUMPDEST SWAP1 SWAP2 SSTORE POP POP POP POP POP POP JUMP JUMPDEST PUSH0 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP5 AND EXTCODESIZE ISZERO PUSH2 0xBDC JUMPI PUSH1 0x40 MLOAD PUSH4 0xA85BD01 PUSH1 0xE1 SHL DUP2 MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP6 AND SWAP1 PUSH4 0x150B7A02 SWAP1 PUSH2 0xB2D SWAP1 CALLER SWAP1 DUP10 SWAP1 DUP9 SWAP1 DUP9 SWAP1 PUSH1 0x4 ADD PUSH2 0x10D0 JUMP JUMPDEST PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH0 DUP8 GAS CALL SWAP3 POP POP POP DUP1 ISZERO PUSH2 0xB67 JUMPI POP PUSH1 0x40 DUP1 MLOAD PUSH1 0x1F RETURNDATASIZE SWAP1 DUP2 ADD PUSH1 0x1F NOT AND DUP3 ADD SWAP1 SWAP3 MSTORE PUSH2 0xB64 SWAP2 DUP2 ADD SWAP1 PUSH2 0x110C JUMP JUMPDEST PUSH1 0x1 JUMPDEST PUSH2 0xBC2 JUMPI RETURNDATASIZE DUP1 DUP1 ISZERO PUSH2 0xB94 JUMPI PUSH1 0x40 MLOAD SWAP2 POP PUSH1 0x1F NOT PUSH1 0x3F RETURNDATASIZE ADD AND DUP3 ADD PUSH1 0x40 MSTORE RETURNDATASIZE DUP3 MSTORE RETURNDATASIZE PUSH0 PUSH1 0x20 DUP5 ADD RETURNDATACOPY PUSH2 0xB99 JUMP JUMPDEST PUSH1 0x60 SWAP2 POP JUMPDEST POP DUP1 MLOAD PUSH0 SUB PUSH2 0xBBA JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x372 SWAP1 PUSH2 0x1044 JUMP JUMPDEST DUP1 MLOAD DUP2 PUSH1 0x20 ADD REVERT JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xE0 SHL SUB NOT AND PUSH4 0xA85BD01 PUSH1 0xE1 SHL EQ SWAP1 POP PUSH2 0x75D JUMP JUMPDEST POP PUSH1 0x1 SWAP5 SWAP4 POP POP POP POP JUMP JUMPDEST PUSH0 DUP1 PUSH19 0x184F03E93FF9F4DAA797ED6E38ED64BF6A1F01 PUSH1 0x40 SHL DUP4 LT PUSH2 0xC25 JUMPI PUSH19 0x184F03E93FF9F4DAA797ED6E38ED64BF6A1F01 PUSH1 0x40 SHL DUP4 DIV SWAP3 POP PUSH1 0x40 ADD JUMPDEST PUSH14 0x4EE2D6D415B85ACEF8100000000 DUP4 LT PUSH2 0xC51 JUMPI PUSH14 0x4EE2D6D415B85ACEF8100000000 DUP4 DIV SWAP3 POP PUSH1 0x20 ADD JUMPDEST PUSH7 0x2386F26FC10000 DUP4 LT PUSH2 0xC6F JUMPI PUSH7 0x2386F26FC10000 DUP4 DIV SWAP3 POP PUSH1 0x10 ADD JUMPDEST PUSH4 0x5F5E100 DUP4 LT PUSH2 0xC87 JUMPI PUSH4 0x5F5E100 DUP4 DIV SWAP3 POP PUSH1 0x8 ADD JUMPDEST PUSH2 0x2710 DUP4 LT PUSH2 0xC9B JUMPI PUSH2 0x2710 DUP4 DIV SWAP3 POP PUSH1 0x4 ADD JUMPDEST PUSH1 0x64 DUP4 LT PUSH2 0xCAD JUMPI PUSH1 0x64 DUP4 DIV SWAP3 POP PUSH1 0x2 ADD JUMPDEST PUSH1 0xA DUP4 LT PUSH2 0x245 JUMPI PUSH1 0x1 ADD SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xE0 SHL SUB NOT DUP2 AND DUP2 EQ PUSH2 0x697 JUMPI PUSH0 DUP1 REVERT JUMPDEST PUSH0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0xCE3 JUMPI PUSH0 DUP1 REVERT JUMPDEST DUP2 CALLDATALOAD PUSH2 0x605 DUP2 PUSH2 0xCBE JUMP JUMPDEST PUSH0 JUMPDEST DUP4 DUP2 LT ISZERO PUSH2 0xD08 JUMPI DUP2 DUP2 ADD MLOAD DUP4 DUP3 ADD MSTORE PUSH1 0x20 ADD PUSH2 0xCF0 JUMP JUMPDEST POP POP PUSH0 SWAP2 ADD MSTORE JUMP JUMPDEST PUSH0 DUP2 MLOAD DUP1 DUP5 MSTORE PUSH2 0xD27 DUP2 PUSH1 0x20 DUP7 ADD PUSH1 0x20 DUP7 ADD PUSH2 0xCEE JUMP JUMPDEST PUSH1 0x1F ADD PUSH1 0x1F NOT AND SWAP3 SWAP1 SWAP3 ADD PUSH1 0x20 ADD SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x20 DUP2 MSTORE PUSH0 PUSH2 0x605 PUSH1 0x20 DUP4 ADD DUP5 PUSH2 0xD10 JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0xD5D JUMPI PUSH0 DUP1 REVERT JUMPDEST POP CALLDATALOAD SWAP2 SWAP1 POP JUMP JUMPDEST DUP1 CALLDATALOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND DUP2 EQ PUSH2 0xD7A JUMPI PUSH0 DUP1 REVERT JUMPDEST SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0xD90 JUMPI PUSH0 DUP1 REVERT JUMPDEST PUSH2 0xD99 DUP4 PUSH2 0xD64 JUMP JUMPDEST SWAP5 PUSH1 0x20 SWAP4 SWAP1 SWAP4 ADD CALLDATALOAD SWAP4 POP POP POP JUMP JUMPDEST PUSH0 DUP1 PUSH0 PUSH1 0x60 DUP5 DUP7 SUB SLT ISZERO PUSH2 0xDB9 JUMPI PUSH0 DUP1 REVERT JUMPDEST PUSH2 0xDC2 DUP5 PUSH2 0xD64 JUMP JUMPDEST SWAP3 POP PUSH2 0xDD0 PUSH1 0x20 DUP6 ADD PUSH2 0xD64 JUMP JUMPDEST SWAP2 POP PUSH1 0x40 DUP5 ADD CALLDATALOAD SWAP1 POP SWAP3 POP SWAP3 POP SWAP3 JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0xDF0 JUMPI PUSH0 DUP1 REVERT JUMPDEST PUSH2 0x605 DUP3 PUSH2 0xD64 JUMP JUMPDEST PUSH0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0xE0A JUMPI PUSH0 DUP1 REVERT JUMPDEST PUSH2 0xE13 DUP4 PUSH2 0xD64 JUMP JUMPDEST SWAP2 POP PUSH1 0x20 DUP4 ADD CALLDATALOAD DUP1 ISZERO ISZERO DUP2 EQ PUSH2 0xE27 JUMPI PUSH0 DUP1 REVERT JUMPDEST DUP1 SWAP2 POP POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH0 MSTORE PUSH1 0x41 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH0 REVERT JUMPDEST PUSH0 DUP1 PUSH0 DUP1 PUSH1 0x80 DUP6 DUP8 SUB SLT ISZERO PUSH2 0xE59 JUMPI PUSH0 DUP1 REVERT JUMPDEST PUSH2 0xE62 DUP6 PUSH2 0xD64 JUMP JUMPDEST SWAP4 POP PUSH2 0xE70 PUSH1 0x20 DUP7 ADD PUSH2 0xD64 JUMP JUMPDEST SWAP3 POP PUSH1 0x40 DUP6 ADD CALLDATALOAD SWAP2 POP PUSH1 0x60 DUP6 ADD CALLDATALOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP1 DUP3 GT ISZERO PUSH2 0xE93 JUMPI PUSH0 DUP1 REVERT JUMPDEST DUP2 DUP8 ADD SWAP2 POP DUP8 PUSH1 0x1F DUP4 ADD SLT PUSH2 0xEA6 JUMPI PUSH0 DUP1 REVERT JUMPDEST DUP2 CALLDATALOAD DUP2 DUP2 GT ISZERO PUSH2 0xEB8 JUMPI PUSH2 0xEB8 PUSH2 0xE32 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x1F DUP3 ADD PUSH1 0x1F NOT SWAP1 DUP2 AND PUSH1 0x3F ADD AND DUP2 ADD SWAP1 DUP4 DUP3 GT DUP2 DUP4 LT OR ISZERO PUSH2 0xEE0 JUMPI PUSH2 0xEE0 PUSH2 0xE32 JUMP JUMPDEST DUP2 PUSH1 0x40 MSTORE DUP3 DUP2 MSTORE DUP11 PUSH1 0x20 DUP5 DUP8 ADD ADD GT ISZERO PUSH2 0xEF8 JUMPI PUSH0 DUP1 REVERT JUMPDEST DUP3 PUSH1 0x20 DUP7 ADD PUSH1 0x20 DUP4 ADD CALLDATACOPY PUSH0 PUSH1 0x20 DUP5 DUP4 ADD ADD MSTORE DUP1 SWAP6 POP POP POP POP POP POP SWAP3 SWAP6 SWAP2 SWAP5 POP SWAP3 POP JUMP JUMPDEST PUSH0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0xF2C JUMPI PUSH0 DUP1 REVERT JUMPDEST PUSH2 0xF35 DUP4 PUSH2 0xD64 JUMP JUMPDEST SWAP2 POP PUSH2 0xF43 PUSH1 0x20 DUP5 ADD PUSH2 0xD64 JUMP JUMPDEST SWAP1 POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH1 0x1 DUP2 DUP2 SHR SWAP1 DUP3 AND DUP1 PUSH2 0xF60 JUMPI PUSH1 0x7F DUP3 AND SWAP2 POP JUMPDEST PUSH1 0x20 DUP3 LT DUP2 SUB PUSH2 0xF7E JUMPI PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH0 MSTORE PUSH1 0x22 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH0 REVERT JUMPDEST POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x20 DUP1 DUP3 MSTORE PUSH1 0x2D SWAP1 DUP3 ADD MSTORE PUSH32 0x4552433732313A2063616C6C6572206973206E6F7420746F6B656E206F776E65 PUSH1 0x40 DUP3 ADD MSTORE PUSH13 0x1C881BDC88185C1C1C9BDD9959 PUSH1 0x9A SHL PUSH1 0x60 DUP3 ADD MSTORE PUSH1 0x80 ADD SWAP1 JUMP JUMPDEST PUSH0 DUP4 MLOAD PUSH2 0xFE2 DUP2 DUP5 PUSH1 0x20 DUP9 ADD PUSH2 0xCEE JUMP JUMPDEST DUP4 MLOAD SWAP1 DUP4 ADD SWAP1 PUSH2 0xFF6 DUP2 DUP4 PUSH1 0x20 DUP9 ADD PUSH2 0xCEE JUMP JUMPDEST ADD SWAP5 SWAP4 POP POP POP POP JUMP JUMPDEST PUSH1 0x20 DUP1 DUP3 MSTORE PUSH1 0x25 SWAP1 DUP3 ADD MSTORE PUSH32 0x4552433732313A207472616E736665722066726F6D20696E636F727265637420 PUSH1 0x40 DUP3 ADD MSTORE PUSH5 0x37BBB732B9 PUSH1 0xD9 SHL PUSH1 0x60 DUP3 ADD MSTORE PUSH1 0x80 ADD SWAP1 JUMP JUMPDEST PUSH1 0x20 DUP1 DUP3 MSTORE PUSH1 0x32 SWAP1 DUP3 ADD MSTORE PUSH32 0x4552433732313A207472616E7366657220746F206E6F6E204552433732315265 PUSH1 0x40 DUP3 ADD MSTORE PUSH18 0x31B2B4BB32B91034B6B83632B6B2B73A32B9 PUSH1 0x71 SHL PUSH1 0x60 DUP3 ADD MSTORE PUSH1 0x80 ADD SWAP1 JUMP JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH0 MSTORE PUSH1 0x11 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH0 REVERT JUMPDEST DUP2 DUP2 SUB DUP2 DUP2 GT ISZERO PUSH2 0x245 JUMPI PUSH2 0x245 PUSH2 0x1096 JUMP JUMPDEST DUP1 DUP3 ADD DUP1 DUP3 GT ISZERO PUSH2 0x245 JUMPI PUSH2 0x245 PUSH2 0x1096 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP6 DUP2 AND DUP3 MSTORE DUP5 AND PUSH1 0x20 DUP3 ADD MSTORE PUSH1 0x40 DUP2 ADD DUP4 SWAP1 MSTORE PUSH1 0x80 PUSH1 0x60 DUP3 ADD DUP2 SWAP1 MSTORE PUSH0 SWAP1 PUSH2 0x1102 SWAP1 DUP4 ADD DUP5 PUSH2 0xD10 JUMP JUMPDEST SWAP7 SWAP6 POP POP POP POP POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x111C JUMPI PUSH0 DUP1 REVERT JUMPDEST DUP2 MLOAD PUSH2 0x605 DUP2 PUSH2 0xCBE JUMP INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 DUP7 PUSH9 0xB10ADE2CE4E39ACC04 0x4F PUSH30 0xBEFC7EDADAAE5A1FBB762E25BF9B747808BB8464736F6C63430008150033 ",
							"sourceMap": "628:16327:0:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1570:300;;;;;;:::i;:::-;;:::i;:::-;;;565:14:12;;558:22;540:41;;528:2;513:18;1570:300:0;;;;;;;;2471:98;;;:::i;:::-;;;;;;;:::i;3935:167::-;;;;;;:::i;:::-;;:::i;:::-;;;-1:-1:-1;;;;;1697:32:12;;;1679:51;;1667:2;1652:18;3935:167:0;1533:203:12;3468:406:0;;;;;;:::i;:::-;;:::i;:::-;;4612:326;;;;;;:::i;:::-;;:::i;5004:179::-;;;;;;:::i;:::-;;:::i;2190:219::-;;;;;;:::i;:::-;;:::i;1929:204::-;;;;;;:::i;:::-;;:::i;:::-;;;2848:25:12;;;2836:2;2821:18;1929:204:0;2702:177:12;2633:102:0;;;:::i;4169:153::-;;;;;;:::i;:::-;;:::i;5249:314::-;;;;;;:::i;:::-;;:::i;2801:276::-;;;;;;:::i;:::-;;:::i;4388:162::-;;;;;;:::i;:::-;;:::i;1570:300::-;1672:4;-1:-1:-1;;;;;;1707:40:0;;-1:-1:-1;;;1707:40:0;;:104;;-1:-1:-1;;;;;;;1763:48:0;;-1:-1:-1;;;1763:48:0;1707:104;:156;;;-1:-1:-1;;;;;;;;;;937:40:8;;;1827:36:0;1688:175;1570:300;-1:-1:-1;;1570:300:0:o;2471:98::-;2525:13;2557:5;2550:12;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;2471:98;:::o;3935:167::-;4011:7;4030:23;4045:7;4030:14;:23::i;:::-;-1:-1:-1;4071:24:0;;;;:15;:24;;;;;;-1:-1:-1;;;;;4071:24:0;;3935:167::o;3468:406::-;3548:13;3564:23;3579:7;3564:14;:23::i;:::-;3548:39;;3611:5;-1:-1:-1;;;;;3605:11:0;:2;-1:-1:-1;;;;;3605:11:0;;3597:57;;;;-1:-1:-1;;;3597:57:0;;5363:2:12;3597:57:0;;;5345:21:12;5402:2;5382:18;;;5375:30;5441:34;5421:18;;;5414:62;-1:-1:-1;;;5492:18:12;;;5485:31;5533:19;;3597:57:0;;;;;;;;;719:10:5;-1:-1:-1;;;;;3686:21:0;;;;:62;;-1:-1:-1;3711:37:0;3728:5;719:10:5;4388:162:0;:::i;3711:37::-;3665:170;;;;-1:-1:-1;;;3665:170:0;;5765:2:12;3665:170:0;;;5747:21:12;5804:2;5784:18;;;5777:30;5843:34;5823:18;;;5816:62;5914:31;5894:18;;;5887:59;5963:19;;3665:170:0;5563:425:12;3665:170:0;3846:21;3855:2;3859:7;3846:8;:21::i;:::-;3538:336;3468:406;;:::o;4612:326::-;4801:41;719:10:5;4834:7:0;4801:18;:41::i;:::-;4793:99;;;;-1:-1:-1;;;4793:99:0;;;;;;;:::i;:::-;4903:28;4913:4;4919:2;4923:7;4903:9;:28::i;5004:179::-;5137:39;5154:4;5160:2;5164:7;5137:39;;;;;;;;;;;;:16;:39::i;2190:219::-;2262:7;6930:16;;;:7;:16;;;;;;-1:-1:-1;;;;;6930:16:0;;2324:56;;;;-1:-1:-1;;;2324:56:0;;6609:2:12;2324:56:0;;;6591:21:12;6648:2;6628:18;;;6621:30;-1:-1:-1;;;6667:18:12;;;6660:54;6731:18;;2324:56:0;6407:348:12;1929:204:0;2001:7;-1:-1:-1;;;;;2028:19:0;;2020:73;;;;-1:-1:-1;;;2020:73:0;;6962:2:12;2020:73:0;;;6944:21:12;7001:2;6981:18;;;6974:30;7040:34;7020:18;;;7013:62;-1:-1:-1;;;7091:18:12;;;7084:39;7140:19;;2020:73:0;6760:405:12;2020:73:0;-1:-1:-1;;;;;;2110:16:0;;;;;:9;:16;;;;;;;1929:204::o;2633:102::-;2689:13;2721:7;2714:14;;;;;:::i;4169:153::-;4263:52;719:10:5;4296:8:0;4306;4263:18;:52::i;:::-;4169:153;;:::o;5249:314::-;5417:41;719:10:5;5450:7:0;5417:18;:41::i;:::-;5409:99;;;;-1:-1:-1;;;5409:99:0;;;;;;;:::i;:::-;5518:38;5532:4;5538:2;5542:7;5551:4;5518:13;:38::i;:::-;5249:314;;;;:::o;2801:276::-;2874:13;2899:23;2914:7;2899:14;:23::i;:::-;2933:21;2957:10;3395:9;;;;;;;;;-1:-1:-1;3395:9:0;;;3319:92;2957:10;2933:34;;3008:1;2990:7;2984:21;:25;:86;;;;;;;;;;;;;;;;;3036:7;3045:18;:7;:16;:18::i;:::-;3019:45;;;;;;;;;:::i;:::-;;;;;;;;;;;;;2984:86;2977:93;2801:276;-1:-1:-1;;;2801:276:0:o;4388:162::-;-1:-1:-1;;;;;4508:25:0;;;4485:4;4508:25;;;:18;:25;;;;;;;;:35;;;;;;;;;;;;;;;4388:162::o;13466:133::-;7321:4;6930:16;;;:7;:16;;;;;;-1:-1:-1;;;;;6930:16:0;13539:53;;;;-1:-1:-1;;;13539:53:0;;6609:2:12;13539:53:0;;;6591:21:12;6648:2;6628:18;;;6621:30;-1:-1:-1;;;6667:18:12;;;6660:54;6731:18;;13539:53:0;6407:348:12;13539:53:0;13466:133;:::o;12768:171::-;12842:24;;;;:15;:24;;;;;:29;;-1:-1:-1;;;;;;12842:29:0;-1:-1:-1;;;;;12842:29:0;;;;;;;;:24;;12895:23;12842:24;12895:14;:23::i;:::-;-1:-1:-1;;;;;12886:46:0;;;;;;;;;;;12768:171;;:::o;7540:261::-;7633:4;7649:13;7665:23;7680:7;7665:14;:23::i;:::-;7649:39;;7717:5;-1:-1:-1;;;;;7706:16:0;:7;-1:-1:-1;;;;;7706:16:0;;:52;;;;7726:32;7743:5;7750:7;7726:16;:32::i;:::-;7706:87;;;;7786:7;-1:-1:-1;;;;;7762:31:0;:20;7774:7;7762:11;:20::i;:::-;-1:-1:-1;;;;;7762:31:0;;7706:87;7698:96;7540:261;-1:-1:-1;;;;7540:261:0:o;11423:1233::-;11577:4;-1:-1:-1;;;;;11550:31:0;:23;11565:7;11550:14;:23::i;:::-;-1:-1:-1;;;;;11550:31:0;;11542:81;;;;-1:-1:-1;;;11542:81:0;;;;;;;:::i;:::-;-1:-1:-1;;;;;11641:16:0;;11633:65;;;;-1:-1:-1;;;11633:65:0;;8279:2:12;11633:65:0;;;8261:21:12;8318:2;8298:18;;;8291:30;8357:34;8337:18;;;8330:62;-1:-1:-1;;;8408:18:12;;;8401:34;8452:19;;11633:65:0;8077:400:12;11633:65:0;11709:42;11730:4;11736:2;11740:7;11749:1;11709:20;:42::i;:::-;11878:4;-1:-1:-1;;;;;11851:31:0;:23;11866:7;11851:14;:23::i;:::-;-1:-1:-1;;;;;11851:31:0;;11843:81;;;;-1:-1:-1;;;11843:81:0;;;;;;;:::i;:::-;11993:24;;;;:15;:24;;;;;;;;11986:31;;-1:-1:-1;;;;;;11986:31:0;;;;;;-1:-1:-1;;;;;12461:15:0;;;;;;:9;:15;;;;;:20;;-1:-1:-1;;12461:20:0;;;12495:13;;;;;;;;;:18;;11986:31;12495:18;;;12533:16;;;:7;:16;;;;;;:21;;;;;;;;;;12570:27;;12009:7;;12570:27;;;3538:336;3468:406;;:::o;13075:307::-;13225:8;-1:-1:-1;;;;;13216:17:0;:5;-1:-1:-1;;;;;13216:17:0;;13208:55;;;;-1:-1:-1;;;13208:55:0;;8684:2:12;13208:55:0;;;8666:21:12;8723:2;8703:18;;;8696:30;8762:27;8742:18;;;8735:55;8807:18;;13208:55:0;8482:349:12;13208:55:0;-1:-1:-1;;;;;13273:25:0;;;;;;;:18;:25;;;;;;;;:35;;;;;;;;;;;;;:46;;-1:-1:-1;;13273:46:0;;;;;;;;;;13334:41;;540::12;;;13334::0;;513:18:12;13334:41:0;;;;;;;13075:307;;;:::o;6424:305::-;6574:28;6584:4;6590:2;6594:7;6574:9;:28::i;:::-;6620:47;6643:4;6649:2;6653:7;6662:4;6620:22;:47::i;:::-;6612:110;;;;-1:-1:-1;;;6612:110:0;;;;;;;:::i;415:696:7:-;471:13;520:14;537:17;548:5;537:10;:17::i;:::-;557:1;537:21;520:38;;572:20;606:6;595:18;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;595:18:7;-1:-1:-1;572:41:7;-1:-1:-1;733:28:7;;;749:2;733:28;788:280;-1:-1:-1;;819:5:7;-1:-1:-1;;;953:2:7;942:14;;937:30;819:5;924:44;1012:2;1003:11;;;-1:-1:-1;1032:21:7;788:280;1032:21;-1:-1:-1;1088:6:7;415:696;-1:-1:-1;;;415:696:7:o;15698:396:0:-;15882:1;15870:9;:13;15866:222;;;-1:-1:-1;;;;;15903:18:0;;;15899:85;;-1:-1:-1;;;;;15941:15:0;;;;;;:9;:15;;;;;:28;;15960:9;;15941:15;:28;;15960:9;;15941:28;:::i;:::-;;;;-1:-1:-1;;15899:85:0;-1:-1:-1;;;;;16001:16:0;;;15997:81;;-1:-1:-1;;;;;16037:13:0;;;;;;:9;:13;;;;;:26;;16054:9;;16037:13;:26;;16054:9;;16037:26;:::i;:::-;;;;-1:-1:-1;;15698:396:0;;;;:::o;14151:831::-;14300:4;-1:-1:-1;;;;;14320:13:0;;1465:19:4;:23;14316:660:0;;14355:71;;-1:-1:-1;;;14355:71:0;;-1:-1:-1;;;;;14355:36:0;;;;;:71;;719:10:5;;14406:4:0;;14412:7;;14421:4;;14355:71;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;-1:-1:-1;14355:71:0;;;;;;;;-1:-1:-1;;14355:71:0;;;;;;;;;;;;:::i;:::-;;;14351:573;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;14593:6;:13;14610:1;14593:18;14589:321;;14635:60;;-1:-1:-1;;;14635:60:0;;;;;;;:::i;14589:321::-;14862:6;14856:13;14847:6;14843:2;14839:15;14832:38;14351:573;-1:-1:-1;;;;;;14476:51:0;-1:-1:-1;;;14476:51:0;;-1:-1:-1;14469:58:0;;14316:660;-1:-1:-1;14961:4:0;14151:831;;;;;;:::o;9889:890:10:-;9942:7;;-1:-1:-1;;;10017:15:10;;10013:99;;-1:-1:-1;;;10052:15:10;;;-1:-1:-1;10095:2:10;10085:12;10013:99;10138:6;10129:5;:15;10125:99;;10173:6;10164:15;;;-1:-1:-1;10207:2:10;10197:12;10125:99;10250:6;10241:5;:15;10237:99;;10285:6;10276:15;;;-1:-1:-1;10319:2:10;10309:12;10237:99;10362:5;10353;:14;10349:96;;10396:5;10387:14;;;-1:-1:-1;10429:1:10;10419:11;10349:96;10471:5;10462;:14;10458:96;;10505:5;10496:14;;;-1:-1:-1;10538:1:10;10528:11;10458:96;10580:5;10571;:14;10567:96;;10614:5;10605:14;;;-1:-1:-1;10647:1:10;10637:11;10567:96;10689:5;10680;:14;10676:64;;10724:1;10714:11;10766:6;9889:890;-1:-1:-1;;9889:890:10:o;14:131:12:-;-1:-1:-1;;;;;;88:32:12;;78:43;;68:71;;135:1;132;125:12;150:245;208:6;261:2;249:9;240:7;236:23;232:32;229:52;;;277:1;274;267:12;229:52;316:9;303:23;335:30;359:5;335:30;:::i;592:250::-;677:1;687:113;701:6;698:1;695:13;687:113;;;777:11;;;771:18;758:11;;;751:39;723:2;716:10;687:113;;;-1:-1:-1;;834:1:12;816:16;;809:27;592:250::o;847:271::-;889:3;927:5;921:12;954:6;949:3;942:19;970:76;1039:6;1032:4;1027:3;1023:14;1016:4;1009:5;1005:16;970:76;:::i;:::-;1100:2;1079:15;-1:-1:-1;;1075:29:12;1066:39;;;;1107:4;1062:50;;847:271;-1:-1:-1;;847:271:12:o;1123:220::-;1272:2;1261:9;1254:21;1235:4;1292:45;1333:2;1322:9;1318:18;1310:6;1292:45;:::i;1348:180::-;1407:6;1460:2;1448:9;1439:7;1435:23;1431:32;1428:52;;;1476:1;1473;1466:12;1428:52;-1:-1:-1;1499:23:12;;1348:180;-1:-1:-1;1348:180:12:o;1741:173::-;1809:20;;-1:-1:-1;;;;;1858:31:12;;1848:42;;1838:70;;1904:1;1901;1894:12;1838:70;1741:173;;;:::o;1919:254::-;1987:6;1995;2048:2;2036:9;2027:7;2023:23;2019:32;2016:52;;;2064:1;2061;2054:12;2016:52;2087:29;2106:9;2087:29;:::i;:::-;2077:39;2163:2;2148:18;;;;2135:32;;-1:-1:-1;;;1919:254:12:o;2178:328::-;2255:6;2263;2271;2324:2;2312:9;2303:7;2299:23;2295:32;2292:52;;;2340:1;2337;2330:12;2292:52;2363:29;2382:9;2363:29;:::i;:::-;2353:39;;2411:38;2445:2;2434:9;2430:18;2411:38;:::i;:::-;2401:48;;2496:2;2485:9;2481:18;2468:32;2458:42;;2178:328;;;;;:::o;2511:186::-;2570:6;2623:2;2611:9;2602:7;2598:23;2594:32;2591:52;;;2639:1;2636;2629:12;2591:52;2662:29;2681:9;2662:29;:::i;2884:347::-;2949:6;2957;3010:2;2998:9;2989:7;2985:23;2981:32;2978:52;;;3026:1;3023;3016:12;2978:52;3049:29;3068:9;3049:29;:::i;:::-;3039:39;;3128:2;3117:9;3113:18;3100:32;3175:5;3168:13;3161:21;3154:5;3151:32;3141:60;;3197:1;3194;3187:12;3141:60;3220:5;3210:15;;;2884:347;;;;;:::o;3236:127::-;3297:10;3292:3;3288:20;3285:1;3278:31;3328:4;3325:1;3318:15;3352:4;3349:1;3342:15;3368:1138;3463:6;3471;3479;3487;3540:3;3528:9;3519:7;3515:23;3511:33;3508:53;;;3557:1;3554;3547:12;3508:53;3580:29;3599:9;3580:29;:::i;:::-;3570:39;;3628:38;3662:2;3651:9;3647:18;3628:38;:::i;:::-;3618:48;;3713:2;3702:9;3698:18;3685:32;3675:42;;3768:2;3757:9;3753:18;3740:32;3791:18;3832:2;3824:6;3821:14;3818:34;;;3848:1;3845;3838:12;3818:34;3886:6;3875:9;3871:22;3861:32;;3931:7;3924:4;3920:2;3916:13;3912:27;3902:55;;3953:1;3950;3943:12;3902:55;3989:2;3976:16;4011:2;4007;4004:10;4001:36;;;4017:18;;:::i;:::-;4092:2;4086:9;4060:2;4146:13;;-1:-1:-1;;4142:22:12;;;4166:2;4138:31;4134:40;4122:53;;;4190:18;;;4210:22;;;4187:46;4184:72;;;4236:18;;:::i;:::-;4276:10;4272:2;4265:22;4311:2;4303:6;4296:18;4351:7;4346:2;4341;4337;4333:11;4329:20;4326:33;4323:53;;;4372:1;4369;4362:12;4323:53;4428:2;4423;4419;4415:11;4410:2;4402:6;4398:15;4385:46;4473:1;4468:2;4463;4455:6;4451:15;4447:24;4440:35;4494:6;4484:16;;;;;;;3368:1138;;;;;;;:::o;4511:260::-;4579:6;4587;4640:2;4628:9;4619:7;4615:23;4611:32;4608:52;;;4656:1;4653;4646:12;4608:52;4679:29;4698:9;4679:29;:::i;:::-;4669:39;;4727:38;4761:2;4750:9;4746:18;4727:38;:::i;:::-;4717:48;;4511:260;;;;;:::o;4776:380::-;4855:1;4851:12;;;;4898;;;4919:61;;4973:4;4965:6;4961:17;4951:27;;4919:61;5026:2;5018:6;5015:14;4995:18;4992:38;4989:161;;5072:10;5067:3;5063:20;5060:1;5053:31;5107:4;5104:1;5097:15;5135:4;5132:1;5125:15;4989:161;;4776:380;;;:::o;5993:409::-;6195:2;6177:21;;;6234:2;6214:18;;;6207:30;6273:34;6268:2;6253:18;;6246:62;-1:-1:-1;;;6339:2:12;6324:18;;6317:43;6392:3;6377:19;;5993:409::o;7170:496::-;7349:3;7387:6;7381:13;7403:66;7462:6;7457:3;7450:4;7442:6;7438:17;7403:66;:::i;:::-;7532:13;;7491:16;;;;7554:70;7532:13;7491:16;7601:4;7589:17;;7554:70;:::i;:::-;7640:20;;7170:496;-1:-1:-1;;;;7170:496:12:o;7671:401::-;7873:2;7855:21;;;7912:2;7892:18;;;7885:30;7951:34;7946:2;7931:18;;7924:62;-1:-1:-1;;;8017:2:12;8002:18;;7995:35;8062:3;8047:19;;7671:401::o;8836:414::-;9038:2;9020:21;;;9077:2;9057:18;;;9050:30;9116:34;9111:2;9096:18;;9089:62;-1:-1:-1;;;9182:2:12;9167:18;;9160:48;9240:3;9225:19;;8836:414::o;9387:127::-;9448:10;9443:3;9439:20;9436:1;9429:31;9479:4;9476:1;9469:15;9503:4;9500:1;9493:15;9519:128;9586:9;;;9607:11;;;9604:37;;;9621:18;;:::i;9652:125::-;9717:9;;;9738:10;;;9735:36;;;9751:18;;:::i;9782:489::-;-1:-1:-1;;;;;10051:15:12;;;10033:34;;10103:15;;10098:2;10083:18;;10076:43;10150:2;10135:18;;10128:34;;;10198:3;10193:2;10178:18;;10171:31;;;9976:4;;10219:46;;10245:19;;10237:6;10219:46;:::i;:::-;10211:54;9782:489;-1:-1:-1;;;;;;9782:489:12:o;10276:249::-;10345:6;10398:2;10386:9;10377:7;10373:23;10369:32;10366:52;;;10414:1;10411;10404:12;10366:52;10446:9;10440:16;10465:30;10489:5;10465:30;:::i"
						},
						"gasEstimates": {
							"creation": {
								"codeDepositCost": "889000",
								"executionCost": "infinite",
								"totalCost": "infinite"
							},
							"external": {
								"approve(address,uint256)": "infinite",
								"balanceOf(address)": "2630",
								"getApproved(uint256)": "4764",
								"isApprovedForAll(address,address)": "infinite",
								"name()": "infinite",
								"ownerOf(uint256)": "2558",
								"safeTransferFrom(address,address,uint256)": "infinite",
								"safeTransferFrom(address,address,uint256,bytes)": "infinite",
								"setApprovalForAll(address,bool)": "26702",
								"supportsInterface(bytes4)": "508",
								"symbol()": "infinite",
								"tokenURI(uint256)": "infinite",
								"transferFrom(address,address,uint256)": "infinite"
							},
							"internal": {
								"_afterTokenTransfer(address,address,uint256,uint256)": "infinite",
								"_approve(address,uint256)": "infinite",
								"_baseURI()": "infinite",
								"_beforeTokenTransfer(address,address,uint256,uint256)": "24512",
								"_burn(uint256)": "infinite",
								"_checkOnERC721Received(address,address,uint256,bytes memory)": "infinite",
								"_exists(uint256)": "infinite",
								"_isApprovedOrOwner(address,uint256)": "infinite",
								"_mint(address,uint256)": "infinite",
								"_ownerOf(uint256)": "infinite",
								"_requireMinted(uint256)": "infinite",
								"_safeMint(address,uint256)": "infinite",
								"_safeMint(address,uint256,bytes memory)": "infinite",
								"_safeTransfer(address,address,uint256,bytes memory)": "infinite",
								"_setApprovalForAll(address,address,bool)": "infinite",
								"_transfer(address,address,uint256)": "infinite"
							}
						},
						"legacyAssembly": {
							".code": [
								{
									"begin": 628,
									"end": 16955,
									"name": "PUSH",
									"source": 0,
									"value": "80"
								},
								{
									"begin": 628,
									"end": 16955,
									"name": "PUSH",
									"source": 0,
									"value": "40"
								},
								{
									"begin": 628,
									"end": 16955,
									"name": "MSTORE",
									"source": 0
								},
								{
									"begin": 1390,
									"end": 1503,
									"name": "CALLVALUE",
									"source": 0
								},
								{
									"begin": 1390,
									"end": 1503,
									"name": "DUP1",
									"source": 0
								},
								{
									"begin": 1390,
									"end": 1503,
									"name": "ISZERO",
									"source": 0
								},
								{
									"begin": 1390,
									"end": 1503,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "1"
								},
								{
									"begin": 1390,
									"end": 1503,
									"name": "JUMPI",
									"source": 0
								},
								{
									"begin": 1390,
									"end": 1503,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 1390,
									"end": 1503,
									"name": "DUP1",
									"source": 0
								},
								{
									"begin": 1390,
									"end": 1503,
									"name": "REVERT",
									"source": 0
								},
								{
									"begin": 1390,
									"end": 1503,
									"name": "tag",
									"source": 0,
									"value": "1"
								},
								{
									"begin": 1390,
									"end": 1503,
									"name": "JUMPDEST",
									"source": 0
								},
								{
									"begin": 1390,
									"end": 1503,
									"name": "POP",
									"source": 0
								},
								{
									"begin": 1390,
									"end": 1503,
									"name": "PUSH",
									"source": 0,
									"value": "40"
								},
								{
									"begin": 1390,
									"end": 1503,
									"name": "MLOAD",
									"source": 0
								},
								{
									"begin": 1390,
									"end": 1503,
									"name": "PUSHSIZE",
									"source": 0
								},
								{
									"begin": 1390,
									"end": 1503,
									"name": "CODESIZE",
									"source": 0
								},
								{
									"begin": 1390,
									"end": 1503,
									"name": "SUB",
									"source": 0
								},
								{
									"begin": 1390,
									"end": 1503,
									"name": "DUP1",
									"source": 0
								},
								{
									"begin": 1390,
									"end": 1503,
									"name": "PUSHSIZE",
									"source": 0
								},
								{
									"begin": 1390,
									"end": 1503,
									"name": "DUP4",
									"source": 0
								},
								{
									"begin": 1390,
									"end": 1503,
									"name": "CODECOPY",
									"source": 0
								},
								{
									"begin": 1390,
									"end": 1503,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 1390,
									"end": 1503,
									"name": "ADD",
									"source": 0
								},
								{
									"begin": 1390,
									"end": 1503,
									"name": "PUSH",
									"source": 0,
									"value": "40"
								},
								{
									"begin": 1390,
									"end": 1503,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 1390,
									"end": 1503,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 1390,
									"end": 1503,
									"name": "MSTORE",
									"source": 0
								},
								{
									"begin": 1390,
									"end": 1503,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "2"
								},
								{
									"begin": 1390,
									"end": 1503,
									"name": "SWAP2",
									"source": 0
								},
								{
									"begin": 1390,
									"end": 1503,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "3"
								},
								{
									"begin": 1390,
									"end": 1503,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 0
								},
								{
									"begin": 1390,
									"end": 1503,
									"name": "tag",
									"source": 0,
									"value": "2"
								},
								{
									"begin": 1390,
									"end": 1503,
									"name": "JUMPDEST",
									"source": 0
								},
								{
									"begin": 1456,
									"end": 1461,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 1456,
									"end": 1469,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "6"
								},
								{
									"begin": 1464,
									"end": 1469,
									"name": "DUP4",
									"source": 0
								},
								{
									"begin": 1456,
									"end": 1461,
									"name": "DUP3",
									"source": 0
								},
								{
									"begin": 1456,
									"end": 1469,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "7"
								},
								{
									"begin": 1456,
									"end": 1469,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 0
								},
								{
									"begin": 1456,
									"end": 1469,
									"name": "tag",
									"source": 0,
									"value": "6"
								},
								{
									"begin": 1456,
									"end": 1469,
									"name": "JUMPDEST",
									"source": 0
								},
								{
									"begin": -1,
									"end": -1,
									"name": "POP",
									"source": -1
								},
								{
									"begin": 1479,
									"end": 1486,
									"name": "PUSH",
									"source": 0,
									"value": "1"
								},
								{
									"begin": 1479,
									"end": 1496,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "8"
								},
								{
									"begin": 1489,
									"end": 1496,
									"name": "DUP3",
									"source": 0
								},
								{
									"begin": 1479,
									"end": 1486,
									"name": "DUP3",
									"source": 0
								},
								{
									"begin": 1479,
									"end": 1496,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "7"
								},
								{
									"begin": 1479,
									"end": 1496,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 0
								},
								{
									"begin": 1479,
									"end": 1496,
									"name": "tag",
									"source": 0,
									"value": "8"
								},
								{
									"begin": 1479,
									"end": 1496,
									"name": "JUMPDEST",
									"source": 0
								},
								{
									"begin": 1479,
									"end": 1496,
									"name": "POP",
									"source": 0
								},
								{
									"begin": 1390,
									"end": 1503,
									"name": "POP",
									"source": 0
								},
								{
									"begin": 1390,
									"end": 1503,
									"name": "POP",
									"source": 0
								},
								{
									"begin": 628,
									"end": 16955,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "16"
								},
								{
									"begin": 628,
									"end": 16955,
									"name": "JUMP",
									"source": 0
								},
								{
									"begin": 14,
									"end": 141,
									"name": "tag",
									"source": 12,
									"value": "10"
								},
								{
									"begin": 14,
									"end": 141,
									"name": "JUMPDEST",
									"source": 12
								},
								{
									"begin": 75,
									"end": 85,
									"name": "PUSH",
									"source": 12,
									"value": "4E487B71"
								},
								{
									"begin": 70,
									"end": 73,
									"name": "PUSH",
									"source": 12,
									"value": "E0"
								},
								{
									"begin": 66,
									"end": 86,
									"name": "SHL",
									"source": 12
								},
								{
									"begin": 63,
									"end": 64,
									"name": "PUSH",
									"source": 12,
									"value": "0"
								},
								{
									"begin": 56,
									"end": 87,
									"name": "MSTORE",
									"source": 12
								},
								{
									"begin": 106,
									"end": 110,
									"name": "PUSH",
									"source": 12,
									"value": "41"
								},
								{
									"begin": 103,
									"end": 104,
									"name": "PUSH",
									"source": 12,
									"value": "4"
								},
								{
									"begin": 96,
									"end": 111,
									"name": "MSTORE",
									"source": 12
								},
								{
									"begin": 130,
									"end": 134,
									"name": "PUSH",
									"source": 12,
									"value": "24"
								},
								{
									"begin": 127,
									"end": 128,
									"name": "PUSH",
									"source": 12,
									"value": "0"
								},
								{
									"begin": 120,
									"end": 135,
									"name": "REVERT",
									"source": 12
								},
								{
									"begin": 146,
									"end": 986,
									"name": "tag",
									"source": 12,
									"value": "11"
								},
								{
									"begin": 146,
									"end": 986,
									"name": "JUMPDEST",
									"source": 12
								},
								{
									"begin": 200,
									"end": 205,
									"name": "PUSH",
									"source": 12,
									"value": "0"
								},
								{
									"begin": 253,
									"end": 256,
									"name": "DUP3",
									"source": 12
								},
								{
									"begin": 246,
									"end": 250,
									"name": "PUSH",
									"source": 12,
									"value": "1F"
								},
								{
									"begin": 238,
									"end": 244,
									"name": "DUP4",
									"source": 12
								},
								{
									"begin": 234,
									"end": 251,
									"name": "ADD",
									"source": 12
								},
								{
									"begin": 230,
									"end": 257,
									"name": "SLT",
									"source": 12
								},
								{
									"begin": 220,
									"end": 275,
									"name": "PUSH [tag]",
									"source": 12,
									"value": "19"
								},
								{
									"begin": 220,
									"end": 275,
									"name": "JUMPI",
									"source": 12
								},
								{
									"begin": 271,
									"end": 272,
									"name": "PUSH",
									"source": 12,
									"value": "0"
								},
								{
									"begin": 268,
									"end": 269,
									"name": "DUP1",
									"source": 12
								},
								{
									"begin": 261,
									"end": 273,
									"name": "REVERT",
									"source": 12
								},
								{
									"begin": 220,
									"end": 275,
									"name": "tag",
									"source": 12,
									"value": "19"
								},
								{
									"begin": 220,
									"end": 275,
									"name": "JUMPDEST",
									"source": 12
								},
								{
									"begin": 294,
									"end": 307,
									"name": "DUP2",
									"source": 12
								},
								{
									"begin": 294,
									"end": 307,
									"name": "MLOAD",
									"source": 12
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "1"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "1"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "40"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SHL",
									"source": -1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SUB",
									"source": -1
								},
								{
									"begin": 356,
									"end": 366,
									"name": "DUP1",
									"source": 12
								},
								{
									"begin": 356,
									"end": 366,
									"name": "DUP3",
									"source": 12
								},
								{
									"begin": 356,
									"end": 366,
									"name": "GT",
									"source": 12
								},
								{
									"begin": 353,
									"end": 389,
									"name": "ISZERO",
									"source": 12
								},
								{
									"begin": 353,
									"end": 389,
									"name": "PUSH [tag]",
									"source": 12,
									"value": "21"
								},
								{
									"begin": 353,
									"end": 389,
									"name": "JUMPI",
									"source": 12
								},
								{
									"begin": 369,
									"end": 387,
									"name": "PUSH [tag]",
									"source": 12,
									"value": "21"
								},
								{
									"begin": 369,
									"end": 387,
									"name": "PUSH [tag]",
									"source": 12,
									"value": "10"
								},
								{
									"begin": 369,
									"end": 387,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 12
								},
								{
									"begin": 369,
									"end": 387,
									"name": "tag",
									"source": 12,
									"value": "21"
								},
								{
									"begin": 369,
									"end": 387,
									"name": "JUMPDEST",
									"source": 12
								},
								{
									"begin": 444,
									"end": 446,
									"name": "PUSH",
									"source": 12,
									"value": "40"
								},
								{
									"begin": 438,
									"end": 447,
									"name": "MLOAD",
									"source": 12
								},
								{
									"begin": 412,
									"end": 414,
									"name": "PUSH",
									"source": 12,
									"value": "1F"
								},
								{
									"begin": 498,
									"end": 511,
									"name": "DUP4",
									"source": 12
								},
								{
									"begin": 498,
									"end": 511,
									"name": "ADD",
									"source": 12
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "1F"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "NOT",
									"source": -1
								},
								{
									"begin": 494,
									"end": 516,
									"name": "SWAP1",
									"source": 12
								},
								{
									"begin": 494,
									"end": 516,
									"name": "DUP2",
									"source": 12
								},
								{
									"begin": 494,
									"end": 516,
									"name": "AND",
									"source": 12
								},
								{
									"begin": 518,
									"end": 520,
									"name": "PUSH",
									"source": 12,
									"value": "3F"
								},
								{
									"begin": 490,
									"end": 521,
									"name": "ADD",
									"source": 12
								},
								{
									"begin": 486,
									"end": 526,
									"name": "AND",
									"source": 12
								},
								{
									"begin": 474,
									"end": 527,
									"name": "DUP2",
									"source": 12
								},
								{
									"begin": 474,
									"end": 527,
									"name": "ADD",
									"source": 12
								},
								{
									"begin": 474,
									"end": 527,
									"name": "SWAP1",
									"source": 12
								},
								{
									"begin": 542,
									"end": 560,
									"name": "DUP3",
									"source": 12
								},
								{
									"begin": 542,
									"end": 560,
									"name": "DUP3",
									"source": 12
								},
								{
									"begin": 542,
									"end": 560,
									"name": "GT",
									"source": 12
								},
								{
									"begin": 562,
									"end": 584,
									"name": "DUP2",
									"source": 12
								},
								{
									"begin": 562,
									"end": 584,
									"name": "DUP4",
									"source": 12
								},
								{
									"begin": 562,
									"end": 584,
									"name": "LT",
									"source": 12
								},
								{
									"begin": 539,
									"end": 585,
									"name": "OR",
									"source": 12
								},
								{
									"begin": 536,
									"end": 608,
									"name": "ISZERO",
									"source": 12
								},
								{
									"begin": 536,
									"end": 608,
									"name": "PUSH [tag]",
									"source": 12,
									"value": "23"
								},
								{
									"begin": 536,
									"end": 608,
									"name": "JUMPI",
									"source": 12
								},
								{
									"begin": 588,
									"end": 606,
									"name": "PUSH [tag]",
									"source": 12,
									"value": "23"
								},
								{
									"begin": 588,
									"end": 606,
									"name": "PUSH [tag]",
									"source": 12,
									"value": "10"
								},
								{
									"begin": 588,
									"end": 606,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 12
								},
								{
									"begin": 588,
									"end": 606,
									"name": "tag",
									"source": 12,
									"value": "23"
								},
								{
									"begin": 588,
									"end": 606,
									"name": "JUMPDEST",
									"source": 12
								},
								{
									"begin": 628,
									"end": 638,
									"name": "DUP2",
									"source": 12
								},
								{
									"begin": 624,
									"end": 626,
									"name": "PUSH",
									"source": 12,
									"value": "40"
								},
								{
									"begin": 617,
									"end": 639,
									"name": "MSTORE",
									"source": 12
								},
								{
									"begin": 663,
									"end": 665,
									"name": "DUP4",
									"source": 12
								},
								{
									"begin": 655,
									"end": 661,
									"name": "DUP2",
									"source": 12
								},
								{
									"begin": 648,
									"end": 666,
									"name": "MSTORE",
									"source": 12
								},
								{
									"begin": 685,
									"end": 689,
									"name": "PUSH",
									"source": 12,
									"value": "20"
								},
								{
									"begin": 675,
									"end": 689,
									"name": "SWAP3",
									"source": 12
								},
								{
									"begin": 675,
									"end": 689,
									"name": "POP",
									"source": 12
								},
								{
									"begin": 730,
									"end": 733,
									"name": "DUP7",
									"source": 12
								},
								{
									"begin": 725,
									"end": 727,
									"name": "DUP4",
									"source": 12
								},
								{
									"begin": 720,
									"end": 722,
									"name": "DUP6",
									"source": 12
								},
								{
									"begin": 712,
									"end": 718,
									"name": "DUP9",
									"source": 12
								},
								{
									"begin": 708,
									"end": 723,
									"name": "ADD",
									"source": 12
								},
								{
									"begin": 704,
									"end": 728,
									"name": "ADD",
									"source": 12
								},
								{
									"begin": 701,
									"end": 734,
									"name": "GT",
									"source": 12
								},
								{
									"begin": 698,
									"end": 751,
									"name": "ISZERO",
									"source": 12
								},
								{
									"begin": 698,
									"end": 751,
									"name": "PUSH [tag]",
									"source": 12,
									"value": "24"
								},
								{
									"begin": 698,
									"end": 751,
									"name": "JUMPI",
									"source": 12
								},
								{
									"begin": 747,
									"end": 748,
									"name": "PUSH",
									"source": 12,
									"value": "0"
								},
								{
									"begin": 744,
									"end": 745,
									"name": "DUP1",
									"source": 12
								},
								{
									"begin": 737,
									"end": 749,
									"name": "REVERT",
									"source": 12
								},
								{
									"begin": 698,
									"end": 751,
									"name": "tag",
									"source": 12,
									"value": "24"
								},
								{
									"begin": 698,
									"end": 751,
									"name": "JUMPDEST",
									"source": 12
								},
								{
									"begin": 769,
									"end": 770,
									"name": "PUSH",
									"source": 12,
									"value": "0"
								},
								{
									"begin": 760,
									"end": 770,
									"name": "SWAP2",
									"source": 12
								},
								{
									"begin": 760,
									"end": 770,
									"name": "POP",
									"source": 12
								},
								{
									"begin": 779,
									"end": 912,
									"name": "tag",
									"source": 12,
									"value": "25"
								},
								{
									"begin": 779,
									"end": 912,
									"name": "JUMPDEST",
									"source": 12
								},
								{
									"begin": 793,
									"end": 795,
									"name": "DUP4",
									"source": 12
								},
								{
									"begin": 790,
									"end": 791,
									"name": "DUP3",
									"source": 12
								},
								{
									"begin": 787,
									"end": 796,
									"name": "LT",
									"source": 12
								},
								{
									"begin": 779,
									"end": 912,
									"name": "ISZERO",
									"source": 12
								},
								{
									"begin": 779,
									"end": 912,
									"name": "PUSH [tag]",
									"source": 12,
									"value": "27"
								},
								{
									"begin": 779,
									"end": 912,
									"name": "JUMPI",
									"source": 12
								},
								{
									"begin": 881,
									"end": 895,
									"name": "DUP6",
									"source": 12
								},
								{
									"begin": 881,
									"end": 895,
									"name": "DUP3",
									"source": 12
								},
								{
									"begin": 881,
									"end": 895,
									"name": "ADD",
									"source": 12
								},
								{
									"begin": 877,
									"end": 900,
									"name": "DUP4",
									"source": 12
								},
								{
									"begin": 877,
									"end": 900,
									"name": "ADD",
									"source": 12
								},
								{
									"begin": 871,
									"end": 901,
									"name": "MLOAD",
									"source": 12
								},
								{
									"begin": 850,
									"end": 864,
									"name": "DUP2",
									"source": 12
								},
								{
									"begin": 850,
									"end": 864,
									"name": "DUP4",
									"source": 12
								},
								{
									"begin": 850,
									"end": 864,
									"name": "ADD",
									"source": 12
								},
								{
									"begin": 846,
									"end": 869,
									"name": "DUP5",
									"source": 12
								},
								{
									"begin": 846,
									"end": 869,
									"name": "ADD",
									"source": 12
								},
								{
									"begin": 839,
									"end": 902,
									"name": "MSTORE",
									"source": 12
								},
								{
									"begin": 804,
									"end": 814,
									"name": "SWAP1",
									"source": 12
								},
								{
									"begin": 804,
									"end": 814,
									"name": "DUP3",
									"source": 12
								},
								{
									"begin": 804,
									"end": 814,
									"name": "ADD",
									"source": 12
								},
								{
									"begin": 804,
									"end": 814,
									"name": "SWAP1",
									"source": 12
								},
								{
									"begin": 779,
									"end": 912,
									"name": "PUSH [tag]",
									"source": 12,
									"value": "25"
								},
								{
									"begin": 779,
									"end": 912,
									"name": "JUMP",
									"source": 12
								},
								{
									"begin": 779,
									"end": 912,
									"name": "tag",
									"source": 12,
									"value": "27"
								},
								{
									"begin": 779,
									"end": 912,
									"name": "JUMPDEST",
									"source": 12
								},
								{
									"begin": 954,
									"end": 955,
									"name": "PUSH",
									"source": 12,
									"value": "0"
								},
								{
									"begin": 932,
									"end": 947,
									"name": "SWAP4",
									"source": 12
								},
								{
									"begin": 932,
									"end": 947,
									"name": "DUP2",
									"source": 12
								},
								{
									"begin": 932,
									"end": 947,
									"name": "ADD",
									"source": 12
								},
								{
									"begin": 928,
									"end": 952,
									"name": "SWAP1",
									"source": 12
								},
								{
									"begin": 928,
									"end": 952,
									"name": "SWAP3",
									"source": 12
								},
								{
									"begin": 928,
									"end": 952,
									"name": "ADD",
									"source": 12
								},
								{
									"begin": 921,
									"end": 956,
									"name": "SWAP3",
									"source": 12
								},
								{
									"begin": 921,
									"end": 956,
									"name": "SWAP1",
									"source": 12
								},
								{
									"begin": 921,
									"end": 956,
									"name": "SWAP3",
									"source": 12
								},
								{
									"begin": 921,
									"end": 956,
									"name": "MSTORE",
									"source": 12
								},
								{
									"begin": 936,
									"end": 942,
									"name": "SWAP5",
									"source": 12
								},
								{
									"begin": 146,
									"end": 986,
									"name": "SWAP4",
									"source": 12
								},
								{
									"begin": -1,
									"end": -1,
									"name": "POP",
									"source": -1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "POP",
									"source": -1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "POP",
									"source": -1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "POP",
									"source": -1
								},
								{
									"begin": 146,
									"end": 986,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 12
								},
								{
									"begin": 991,
									"end": 1553,
									"name": "tag",
									"source": 12,
									"value": "3"
								},
								{
									"begin": 991,
									"end": 1553,
									"name": "JUMPDEST",
									"source": 12
								},
								{
									"begin": 1090,
									"end": 1096,
									"name": "PUSH",
									"source": 12,
									"value": "0"
								},
								{
									"begin": 1098,
									"end": 1104,
									"name": "DUP1",
									"source": 12
								},
								{
									"begin": 1151,
									"end": 1153,
									"name": "PUSH",
									"source": 12,
									"value": "40"
								},
								{
									"begin": 1139,
									"end": 1148,
									"name": "DUP4",
									"source": 12
								},
								{
									"begin": 1130,
									"end": 1137,
									"name": "DUP6",
									"source": 12
								},
								{
									"begin": 1126,
									"end": 1149,
									"name": "SUB",
									"source": 12
								},
								{
									"begin": 1122,
									"end": 1154,
									"name": "SLT",
									"source": 12
								},
								{
									"begin": 1119,
									"end": 1171,
									"name": "ISZERO",
									"source": 12
								},
								{
									"begin": 1119,
									"end": 1171,
									"name": "PUSH [tag]",
									"source": 12,
									"value": "29"
								},
								{
									"begin": 1119,
									"end": 1171,
									"name": "JUMPI",
									"source": 12
								},
								{
									"begin": 1167,
									"end": 1168,
									"name": "PUSH",
									"source": 12,
									"value": "0"
								},
								{
									"begin": 1164,
									"end": 1165,
									"name": "DUP1",
									"source": 12
								},
								{
									"begin": 1157,
									"end": 1169,
									"name": "REVERT",
									"source": 12
								},
								{
									"begin": 1119,
									"end": 1171,
									"name": "tag",
									"source": 12,
									"value": "29"
								},
								{
									"begin": 1119,
									"end": 1171,
									"name": "JUMPDEST",
									"source": 12
								},
								{
									"begin": 1194,
									"end": 1210,
									"name": "DUP3",
									"source": 12
								},
								{
									"begin": 1194,
									"end": 1210,
									"name": "MLOAD",
									"source": 12
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "1"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "1"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "40"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SHL",
									"source": -1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SUB",
									"source": -1
								},
								{
									"begin": 1259,
									"end": 1273,
									"name": "DUP1",
									"source": 12
								},
								{
									"begin": 1259,
									"end": 1273,
									"name": "DUP3",
									"source": 12
								},
								{
									"begin": 1259,
									"end": 1273,
									"name": "GT",
									"source": 12
								},
								{
									"begin": 1256,
									"end": 1290,
									"name": "ISZERO",
									"source": 12
								},
								{
									"begin": 1256,
									"end": 1290,
									"name": "PUSH [tag]",
									"source": 12,
									"value": "30"
								},
								{
									"begin": 1256,
									"end": 1290,
									"name": "JUMPI",
									"source": 12
								},
								{
									"begin": 1286,
									"end": 1287,
									"name": "PUSH",
									"source": 12,
									"value": "0"
								},
								{
									"begin": 1283,
									"end": 1284,
									"name": "DUP1",
									"source": 12
								},
								{
									"begin": 1276,
									"end": 1288,
									"name": "REVERT",
									"source": 12
								},
								{
									"begin": 1256,
									"end": 1290,
									"name": "tag",
									"source": 12,
									"value": "30"
								},
								{
									"begin": 1256,
									"end": 1290,
									"name": "JUMPDEST",
									"source": 12
								},
								{
									"begin": 1309,
									"end": 1370,
									"name": "PUSH [tag]",
									"source": 12,
									"value": "31"
								},
								{
									"begin": 1362,
									"end": 1369,
									"name": "DUP7",
									"source": 12
								},
								{
									"begin": 1353,
									"end": 1359,
									"name": "DUP4",
									"source": 12
								},
								{
									"begin": 1342,
									"end": 1351,
									"name": "DUP8",
									"source": 12
								},
								{
									"begin": 1338,
									"end": 1360,
									"name": "ADD",
									"source": 12
								},
								{
									"begin": 1309,
									"end": 1370,
									"name": "PUSH [tag]",
									"source": 12,
									"value": "11"
								},
								{
									"begin": 1309,
									"end": 1370,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 12
								},
								{
									"begin": 1309,
									"end": 1370,
									"name": "tag",
									"source": 12,
									"value": "31"
								},
								{
									"begin": 1309,
									"end": 1370,
									"name": "JUMPDEST",
									"source": 12
								},
								{
									"begin": 1299,
									"end": 1370,
									"name": "SWAP4",
									"source": 12
								},
								{
									"begin": 1299,
									"end": 1370,
									"name": "POP",
									"source": 12
								},
								{
									"begin": 1416,
									"end": 1418,
									"name": "PUSH",
									"source": 12,
									"value": "20"
								},
								{
									"begin": 1405,
									"end": 1414,
									"name": "DUP6",
									"source": 12
								},
								{
									"begin": 1401,
									"end": 1419,
									"name": "ADD",
									"source": 12
								},
								{
									"begin": 1395,
									"end": 1420,
									"name": "MLOAD",
									"source": 12
								},
								{
									"begin": 1379,
									"end": 1420,
									"name": "SWAP2",
									"source": 12
								},
								{
									"begin": 1379,
									"end": 1420,
									"name": "POP",
									"source": 12
								},
								{
									"begin": 1445,
									"end": 1447,
									"name": "DUP1",
									"source": 12
								},
								{
									"begin": 1435,
									"end": 1443,
									"name": "DUP3",
									"source": 12
								},
								{
									"begin": 1432,
									"end": 1448,
									"name": "GT",
									"source": 12
								},
								{
									"begin": 1429,
									"end": 1465,
									"name": "ISZERO",
									"source": 12
								},
								{
									"begin": 1429,
									"end": 1465,
									"name": "PUSH [tag]",
									"source": 12,
									"value": "32"
								},
								{
									"begin": 1429,
									"end": 1465,
									"name": "JUMPI",
									"source": 12
								},
								{
									"begin": 1461,
									"end": 1462,
									"name": "PUSH",
									"source": 12,
									"value": "0"
								},
								{
									"begin": 1458,
									"end": 1459,
									"name": "DUP1",
									"source": 12
								},
								{
									"begin": 1451,
									"end": 1463,
									"name": "REVERT",
									"source": 12
								},
								{
									"begin": 1429,
									"end": 1465,
									"name": "tag",
									"source": 12,
									"value": "32"
								},
								{
									"begin": 1429,
									"end": 1465,
									"name": "JUMPDEST",
									"source": 12
								},
								{
									"begin": 1429,
									"end": 1465,
									"name": "POP",
									"source": 12
								},
								{
									"begin": 1484,
									"end": 1547,
									"name": "PUSH [tag]",
									"source": 12,
									"value": "33"
								},
								{
									"begin": 1539,
									"end": 1546,
									"name": "DUP6",
									"source": 12
								},
								{
									"begin": 1528,
									"end": 1536,
									"name": "DUP3",
									"source": 12
								},
								{
									"begin": 1517,
									"end": 1526,
									"name": "DUP7",
									"source": 12
								},
								{
									"begin": 1513,
									"end": 1537,
									"name": "ADD",
									"source": 12
								},
								{
									"begin": 1484,
									"end": 1547,
									"name": "PUSH [tag]",
									"source": 12,
									"value": "11"
								},
								{
									"begin": 1484,
									"end": 1547,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 12
								},
								{
									"begin": 1484,
									"end": 1547,
									"name": "tag",
									"source": 12,
									"value": "33"
								},
								{
									"begin": 1484,
									"end": 1547,
									"name": "JUMPDEST",
									"source": 12
								},
								{
									"begin": 1474,
									"end": 1547,
									"name": "SWAP2",
									"source": 12
								},
								{
									"begin": 1474,
									"end": 1547,
									"name": "POP",
									"source": 12
								},
								{
									"begin": 1474,
									"end": 1547,
									"name": "POP",
									"source": 12
								},
								{
									"begin": 991,
									"end": 1553,
									"name": "SWAP3",
									"source": 12
								},
								{
									"begin": 991,
									"end": 1553,
									"name": "POP",
									"source": 12
								},
								{
									"begin": 991,
									"end": 1553,
									"name": "SWAP3",
									"source": 12
								},
								{
									"begin": 991,
									"end": 1553,
									"name": "SWAP1",
									"source": 12
								},
								{
									"begin": 991,
									"end": 1553,
									"name": "POP",
									"source": 12
								},
								{
									"begin": 991,
									"end": 1553,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 12
								},
								{
									"begin": 1558,
									"end": 1938,
									"name": "tag",
									"source": 12,
									"value": "12"
								},
								{
									"begin": 1558,
									"end": 1938,
									"name": "JUMPDEST",
									"source": 12
								},
								{
									"begin": 1637,
									"end": 1638,
									"name": "PUSH",
									"source": 12,
									"value": "1"
								},
								{
									"begin": 1633,
									"end": 1645,
									"name": "DUP2",
									"source": 12
								},
								{
									"begin": 1633,
									"end": 1645,
									"name": "DUP2",
									"source": 12
								},
								{
									"begin": 1633,
									"end": 1645,
									"name": "SHR",
									"source": 12
								},
								{
									"begin": 1633,
									"end": 1645,
									"name": "SWAP1",
									"source": 12
								},
								{
									"begin": 1680,
									"end": 1692,
									"name": "DUP3",
									"source": 12
								},
								{
									"begin": 1680,
									"end": 1692,
									"name": "AND",
									"source": 12
								},
								{
									"begin": 1680,
									"end": 1692,
									"name": "DUP1",
									"source": 12
								},
								{
									"begin": 1701,
									"end": 1762,
									"name": "PUSH [tag]",
									"source": 12,
									"value": "35"
								},
								{
									"begin": 1701,
									"end": 1762,
									"name": "JUMPI",
									"source": 12
								},
								{
									"begin": 1755,
									"end": 1759,
									"name": "PUSH",
									"source": 12,
									"value": "7F"
								},
								{
									"begin": 1747,
									"end": 1753,
									"name": "DUP3",
									"source": 12
								},
								{
									"begin": 1743,
									"end": 1760,
									"name": "AND",
									"source": 12
								},
								{
									"begin": 1733,
									"end": 1760,
									"name": "SWAP2",
									"source": 12
								},
								{
									"begin": 1733,
									"end": 1760,
									"name": "POP",
									"source": 12
								},
								{
									"begin": 1701,
									"end": 1762,
									"name": "tag",
									"source": 12,
									"value": "35"
								},
								{
									"begin": 1701,
									"end": 1762,
									"name": "JUMPDEST",
									"source": 12
								},
								{
									"begin": 1808,
									"end": 1810,
									"name": "PUSH",
									"source": 12,
									"value": "20"
								},
								{
									"begin": 1800,
									"end": 1806,
									"name": "DUP3",
									"source": 12
								},
								{
									"begin": 1797,
									"end": 1811,
									"name": "LT",
									"source": 12
								},
								{
									"begin": 1777,
									"end": 1795,
									"name": "DUP2",
									"source": 12
								},
								{
									"begin": 1774,
									"end": 1812,
									"name": "SUB",
									"source": 12
								},
								{
									"begin": 1771,
									"end": 1932,
									"name": "PUSH [tag]",
									"source": 12,
									"value": "36"
								},
								{
									"begin": 1771,
									"end": 1932,
									"name": "JUMPI",
									"source": 12
								},
								{
									"begin": 1854,
									"end": 1864,
									"name": "PUSH",
									"source": 12,
									"value": "4E487B71"
								},
								{
									"begin": 1849,
									"end": 1852,
									"name": "PUSH",
									"source": 12,
									"value": "E0"
								},
								{
									"begin": 1845,
									"end": 1865,
									"name": "SHL",
									"source": 12
								},
								{
									"begin": 1842,
									"end": 1843,
									"name": "PUSH",
									"source": 12,
									"value": "0"
								},
								{
									"begin": 1835,
									"end": 1866,
									"name": "MSTORE",
									"source": 12
								},
								{
									"begin": 1889,
									"end": 1893,
									"name": "PUSH",
									"source": 12,
									"value": "22"
								},
								{
									"begin": 1886,
									"end": 1887,
									"name": "PUSH",
									"source": 12,
									"value": "4"
								},
								{
									"begin": 1879,
									"end": 1894,
									"name": "MSTORE",
									"source": 12
								},
								{
									"begin": 1917,
									"end": 1921,
									"name": "PUSH",
									"source": 12,
									"value": "24"
								},
								{
									"begin": 1914,
									"end": 1915,
									"name": "PUSH",
									"source": 12,
									"value": "0"
								},
								{
									"begin": 1907,
									"end": 1922,
									"name": "REVERT",
									"source": 12
								},
								{
									"begin": 1771,
									"end": 1932,
									"name": "tag",
									"source": 12,
									"value": "36"
								},
								{
									"begin": 1771,
									"end": 1932,
									"name": "JUMPDEST",
									"source": 12
								},
								{
									"begin": 1771,
									"end": 1932,
									"name": "POP",
									"source": 12
								},
								{
									"begin": 1558,
									"end": 1938,
									"name": "SWAP2",
									"source": 12
								},
								{
									"begin": 1558,
									"end": 1938,
									"name": "SWAP1",
									"source": 12
								},
								{
									"begin": 1558,
									"end": 1938,
									"name": "POP",
									"source": 12
								},
								{
									"begin": 1558,
									"end": 1938,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 12
								},
								{
									"begin": 2069,
									"end": 2614,
									"name": "tag",
									"source": 12,
									"value": "14"
								},
								{
									"begin": 2069,
									"end": 2614,
									"name": "JUMPDEST",
									"source": 12
								},
								{
									"begin": 2171,
									"end": 2173,
									"name": "PUSH",
									"source": 12,
									"value": "1F"
								},
								{
									"begin": 2166,
									"end": 2169,
									"name": "DUP3",
									"source": 12
								},
								{
									"begin": 2163,
									"end": 2174,
									"name": "GT",
									"source": 12
								},
								{
									"begin": 2160,
									"end": 2608,
									"name": "ISZERO",
									"source": 12
								},
								{
									"begin": 2160,
									"end": 2608,
									"name": "PUSH [tag]",
									"source": 12,
									"value": "39"
								},
								{
									"begin": 2160,
									"end": 2608,
									"name": "JUMPI",
									"source": 12
								},
								{
									"begin": 2207,
									"end": 2208,
									"name": "PUSH",
									"source": 12,
									"value": "0"
								},
								{
									"begin": 2232,
									"end": 2237,
									"name": "DUP2",
									"source": 12
								},
								{
									"begin": 2228,
									"end": 2230,
									"name": "DUP2",
									"source": 12
								},
								{
									"begin": 2221,
									"end": 2238,
									"name": "MSTORE",
									"source": 12
								},
								{
									"begin": 2277,
									"end": 2281,
									"name": "PUSH",
									"source": 12,
									"value": "20"
								},
								{
									"begin": 2273,
									"end": 2275,
									"name": "DUP2",
									"source": 12
								},
								{
									"begin": 2263,
									"end": 2282,
									"name": "KECCAK256",
									"source": 12
								},
								{
									"begin": 2347,
									"end": 2349,
									"name": "PUSH",
									"source": 12,
									"value": "1F"
								},
								{
									"begin": 2335,
									"end": 2345,
									"name": "DUP6",
									"source": 12
								},
								{
									"begin": 2331,
									"end": 2350,
									"name": "ADD",
									"source": 12
								},
								{
									"begin": 2328,
									"end": 2329,
									"name": "PUSH",
									"source": 12,
									"value": "5"
								},
								{
									"begin": 2324,
									"end": 2351,
									"name": "SHR",
									"source": 12
								},
								{
									"begin": 2318,
									"end": 2322,
									"name": "DUP2",
									"source": 12
								},
								{
									"begin": 2314,
									"end": 2352,
									"name": "ADD",
									"source": 12
								},
								{
									"begin": 2383,
									"end": 2387,
									"name": "PUSH",
									"source": 12,
									"value": "20"
								},
								{
									"begin": 2371,
									"end": 2381,
									"name": "DUP7",
									"source": 12
								},
								{
									"begin": 2368,
									"end": 2388,
									"name": "LT",
									"source": 12
								},
								{
									"begin": 2365,
									"end": 2412,
									"name": "ISZERO",
									"source": 12
								},
								{
									"begin": 2365,
									"end": 2412,
									"name": "PUSH [tag]",
									"source": 12,
									"value": "40"
								},
								{
									"begin": 2365,
									"end": 2412,
									"name": "JUMPI",
									"source": 12
								},
								{
									"begin": -1,
									"end": -1,
									"name": "POP",
									"source": -1
								},
								{
									"begin": 2406,
									"end": 2410,
									"name": "DUP1",
									"source": 12
								},
								{
									"begin": 2365,
									"end": 2412,
									"name": "tag",
									"source": 12,
									"value": "40"
								},
								{
									"begin": 2365,
									"end": 2412,
									"name": "JUMPDEST",
									"source": 12
								},
								{
									"begin": 2461,
									"end": 2463,
									"name": "PUSH",
									"source": 12,
									"value": "1F"
								},
								{
									"begin": 2456,
									"end": 2459,
									"name": "DUP6",
									"source": 12
								},
								{
									"begin": 2452,
									"end": 2464,
									"name": "ADD",
									"source": 12
								},
								{
									"begin": 2449,
									"end": 2450,
									"name": "PUSH",
									"source": 12,
									"value": "5"
								},
								{
									"begin": 2445,
									"end": 2465,
									"name": "SHR",
									"source": 12
								},
								{
									"begin": 2439,
									"end": 2443,
									"name": "DUP3",
									"source": 12
								},
								{
									"begin": 2435,
									"end": 2466,
									"name": "ADD",
									"source": 12
								},
								{
									"begin": 2425,
									"end": 2466,
									"name": "SWAP2",
									"source": 12
								},
								{
									"begin": 2425,
									"end": 2466,
									"name": "POP",
									"source": 12
								},
								{
									"begin": 2516,
									"end": 2598,
									"name": "tag",
									"source": 12,
									"value": "41"
								},
								{
									"begin": 2516,
									"end": 2598,
									"name": "JUMPDEST",
									"source": 12
								},
								{
									"begin": 2534,
									"end": 2536,
									"name": "DUP2",
									"source": 12
								},
								{
									"begin": 2527,
									"end": 2532,
									"name": "DUP2",
									"source": 12
								},
								{
									"begin": 2524,
									"end": 2537,
									"name": "LT",
									"source": 12
								},
								{
									"begin": 2516,
									"end": 2598,
									"name": "ISZERO",
									"source": 12
								},
								{
									"begin": 2516,
									"end": 2598,
									"name": "PUSH [tag]",
									"source": 12,
									"value": "43"
								},
								{
									"begin": 2516,
									"end": 2598,
									"name": "JUMPI",
									"source": 12
								},
								{
									"begin": 2579,
									"end": 2596,
									"name": "DUP3",
									"source": 12
								},
								{
									"begin": 2579,
									"end": 2596,
									"name": "DUP2",
									"source": 12
								},
								{
									"begin": 2579,
									"end": 2596,
									"name": "SSTORE",
									"source": 12
								},
								{
									"begin": 2560,
									"end": 2561,
									"name": "PUSH",
									"source": 12,
									"value": "1"
								},
								{
									"begin": 2549,
									"end": 2562,
									"name": "ADD",
									"source": 12
								},
								{
									"begin": 2516,
									"end": 2598,
									"name": "PUSH [tag]",
									"source": 12,
									"value": "41"
								},
								{
									"begin": 2516,
									"end": 2598,
									"name": "JUMP",
									"source": 12
								},
								{
									"begin": 2516,
									"end": 2598,
									"name": "tag",
									"source": 12,
									"value": "43"
								},
								{
									"begin": 2516,
									"end": 2598,
									"name": "JUMPDEST",
									"source": 12
								},
								{
									"begin": 2520,
									"end": 2523,
									"name": "POP",
									"source": 12
								},
								{
									"begin": 2520,
									"end": 2523,
									"name": "POP",
									"source": 12
								},
								{
									"begin": 2520,
									"end": 2523,
									"name": "POP",
									"source": 12
								},
								{
									"begin": 2160,
									"end": 2608,
									"name": "tag",
									"source": 12,
									"value": "39"
								},
								{
									"begin": 2160,
									"end": 2608,
									"name": "JUMPDEST",
									"source": 12
								},
								{
									"begin": 2069,
									"end": 2614,
									"name": "POP",
									"source": 12
								},
								{
									"begin": 2069,
									"end": 2614,
									"name": "POP",
									"source": 12
								},
								{
									"begin": 2069,
									"end": 2614,
									"name": "POP",
									"source": 12
								},
								{
									"begin": 2069,
									"end": 2614,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 12
								},
								{
									"begin": 2790,
									"end": 4142,
									"name": "tag",
									"source": 12,
									"value": "7"
								},
								{
									"begin": 2790,
									"end": 4142,
									"name": "JUMPDEST",
									"source": 12
								},
								{
									"begin": 2910,
									"end": 2920,
									"name": "DUP2",
									"source": 12
								},
								{
									"begin": 2910,
									"end": 2920,
									"name": "MLOAD",
									"source": 12
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "1"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "1"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "40"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SHL",
									"source": -1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SUB",
									"source": -1
								},
								{
									"begin": 2932,
									"end": 2962,
									"name": "DUP2",
									"source": 12
								},
								{
									"begin": 2932,
									"end": 2962,
									"name": "GT",
									"source": 12
								},
								{
									"begin": 2929,
									"end": 2985,
									"name": "ISZERO",
									"source": 12
								},
								{
									"begin": 2929,
									"end": 2985,
									"name": "PUSH [tag]",
									"source": 12,
									"value": "47"
								},
								{
									"begin": 2929,
									"end": 2985,
									"name": "JUMPI",
									"source": 12
								},
								{
									"begin": 2965,
									"end": 2983,
									"name": "PUSH [tag]",
									"source": 12,
									"value": "47"
								},
								{
									"begin": 2965,
									"end": 2983,
									"name": "PUSH [tag]",
									"source": 12,
									"value": "10"
								},
								{
									"begin": 2965,
									"end": 2983,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 12
								},
								{
									"begin": 2965,
									"end": 2983,
									"name": "tag",
									"source": 12,
									"value": "47"
								},
								{
									"begin": 2965,
									"end": 2983,
									"name": "JUMPDEST",
									"source": 12
								},
								{
									"begin": 2994,
									"end": 3091,
									"name": "PUSH [tag]",
									"source": 12,
									"value": "48"
								},
								{
									"begin": 3084,
									"end": 3090,
									"name": "DUP2",
									"source": 12
								},
								{
									"begin": 3044,
									"end": 3082,
									"name": "PUSH [tag]",
									"source": 12,
									"value": "49"
								},
								{
									"begin": 3076,
									"end": 3080,
									"name": "DUP5",
									"source": 12
								},
								{
									"begin": 3070,
									"end": 3081,
									"name": "SLOAD",
									"source": 12
								},
								{
									"begin": 3044,
									"end": 3082,
									"name": "PUSH [tag]",
									"source": 12,
									"value": "12"
								},
								{
									"begin": 3044,
									"end": 3082,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 12
								},
								{
									"begin": 3044,
									"end": 3082,
									"name": "tag",
									"source": 12,
									"value": "49"
								},
								{
									"begin": 3044,
									"end": 3082,
									"name": "JUMPDEST",
									"source": 12
								},
								{
									"begin": 3038,
									"end": 3042,
									"name": "DUP5",
									"source": 12
								},
								{
									"begin": 2994,
									"end": 3091,
									"name": "PUSH [tag]",
									"source": 12,
									"value": "14"
								},
								{
									"begin": 2994,
									"end": 3091,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 12
								},
								{
									"begin": 2994,
									"end": 3091,
									"name": "tag",
									"source": 12,
									"value": "48"
								},
								{
									"begin": 2994,
									"end": 3091,
									"name": "JUMPDEST",
									"source": 12
								},
								{
									"begin": 3146,
									"end": 3150,
									"name": "PUSH",
									"source": 12,
									"value": "20"
								},
								{
									"begin": 3146,
									"end": 3150,
									"name": "DUP1",
									"source": 12
								},
								{
									"begin": 3210,
									"end": 3212,
									"name": "PUSH",
									"source": 12,
									"value": "1F"
								},
								{
									"begin": 3199,
									"end": 3213,
									"name": "DUP4",
									"source": 12
								},
								{
									"begin": 3199,
									"end": 3213,
									"name": "GT",
									"source": 12
								},
								{
									"begin": 3227,
									"end": 3228,
									"name": "PUSH",
									"source": 12,
									"value": "1"
								},
								{
									"begin": 3222,
									"end": 3885,
									"name": "DUP2",
									"source": 12
								},
								{
									"begin": 3222,
									"end": 3885,
									"name": "EQ",
									"source": 12
								},
								{
									"begin": 3222,
									"end": 3885,
									"name": "PUSH [tag]",
									"source": 12,
									"value": "51"
								},
								{
									"begin": 3222,
									"end": 3885,
									"name": "JUMPI",
									"source": 12
								},
								{
									"begin": 3929,
									"end": 3930,
									"name": "PUSH",
									"source": 12,
									"value": "0"
								},
								{
									"begin": 3946,
									"end": 3952,
									"name": "DUP5",
									"source": 12
								},
								{
									"begin": 3943,
									"end": 4032,
									"name": "ISZERO",
									"source": 12
								},
								{
									"begin": 3943,
									"end": 4032,
									"name": "PUSH [tag]",
									"source": 12,
									"value": "52"
								},
								{
									"begin": 3943,
									"end": 4032,
									"name": "JUMPI",
									"source": 12
								},
								{
									"begin": -1,
									"end": -1,
									"name": "POP",
									"source": -1
								},
								{
									"begin": 3998,
									"end": 4017,
									"name": "DUP6",
									"source": 12
								},
								{
									"begin": 3998,
									"end": 4017,
									"name": "DUP4",
									"source": 12
								},
								{
									"begin": 3998,
									"end": 4017,
									"name": "ADD",
									"source": 12
								},
								{
									"begin": 3992,
									"end": 4018,
									"name": "MLOAD",
									"source": 12
								},
								{
									"begin": 3943,
									"end": 4032,
									"name": "tag",
									"source": 12,
									"value": "52"
								},
								{
									"begin": 3943,
									"end": 4032,
									"name": "JUMPDEST",
									"source": 12
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "0"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "NOT",
									"source": -1
								},
								{
									"begin": 2747,
									"end": 2748,
									"name": "PUSH",
									"source": 12,
									"value": "3"
								},
								{
									"begin": 2743,
									"end": 2754,
									"name": "DUP7",
									"source": 12
								},
								{
									"begin": 2743,
									"end": 2754,
									"name": "SWAP1",
									"source": 12
								},
								{
									"begin": 2743,
									"end": 2754,
									"name": "SHL",
									"source": 12
								},
								{
									"begin": 2739,
									"end": 2763,
									"name": "SHR",
									"source": 12
								},
								{
									"begin": 2735,
									"end": 2764,
									"name": "NOT",
									"source": 12
								},
								{
									"begin": 2725,
									"end": 2765,
									"name": "AND",
									"source": 12
								},
								{
									"begin": 2771,
									"end": 2772,
									"name": "PUSH",
									"source": 12,
									"value": "1"
								},
								{
									"begin": 2767,
									"end": 2778,
									"name": "DUP6",
									"source": 12
								},
								{
									"begin": 2767,
									"end": 2778,
									"name": "SWAP1",
									"source": 12
								},
								{
									"begin": 2767,
									"end": 2778,
									"name": "SHL",
									"source": 12
								},
								{
									"begin": 2722,
									"end": 2779,
									"name": "OR",
									"source": 12
								},
								{
									"begin": 4045,
									"end": 4126,
									"name": "DUP6",
									"source": 12
								},
								{
									"begin": 4045,
									"end": 4126,
									"name": "SSTORE",
									"source": 12
								},
								{
									"begin": 3192,
									"end": 4136,
									"name": "PUSH [tag]",
									"source": 12,
									"value": "43"
								},
								{
									"begin": 3192,
									"end": 4136,
									"name": "JUMP",
									"source": 12
								},
								{
									"begin": 3222,
									"end": 3885,
									"name": "tag",
									"source": 12,
									"value": "51"
								},
								{
									"begin": 3222,
									"end": 3885,
									"name": "JUMPDEST",
									"source": 12
								},
								{
									"begin": 2016,
									"end": 2017,
									"name": "PUSH",
									"source": 12,
									"value": "0"
								},
								{
									"begin": 2009,
									"end": 2023,
									"name": "DUP6",
									"source": 12
								},
								{
									"begin": 2009,
									"end": 2023,
									"name": "DUP2",
									"source": 12
								},
								{
									"begin": 2009,
									"end": 2023,
									"name": "MSTORE",
									"source": 12
								},
								{
									"begin": 2053,
									"end": 2057,
									"name": "PUSH",
									"source": 12,
									"value": "20"
								},
								{
									"begin": 2040,
									"end": 2058,
									"name": "DUP2",
									"source": 12
								},
								{
									"begin": 2040,
									"end": 2058,
									"name": "KECCAK256",
									"source": 12
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "1F"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "NOT",
									"source": -1
								},
								{
									"begin": 3258,
									"end": 3278,
									"name": "DUP7",
									"source": 12
								},
								{
									"begin": 3258,
									"end": 3278,
									"name": "AND",
									"source": 12
								},
								{
									"begin": 3258,
									"end": 3278,
									"name": "SWAP2",
									"source": 12
								},
								{
									"begin": 3376,
									"end": 3612,
									"name": "tag",
									"source": 12,
									"value": "55"
								},
								{
									"begin": 3376,
									"end": 3612,
									"name": "JUMPDEST",
									"source": 12
								},
								{
									"begin": 3390,
									"end": 3397,
									"name": "DUP3",
									"source": 12
								},
								{
									"begin": 3387,
									"end": 3388,
									"name": "DUP2",
									"source": 12
								},
								{
									"begin": 3384,
									"end": 3398,
									"name": "LT",
									"source": 12
								},
								{
									"begin": 3376,
									"end": 3612,
									"name": "ISZERO",
									"source": 12
								},
								{
									"begin": 3376,
									"end": 3612,
									"name": "PUSH [tag]",
									"source": 12,
									"value": "57"
								},
								{
									"begin": 3376,
									"end": 3612,
									"name": "JUMPI",
									"source": 12
								},
								{
									"begin": 3479,
									"end": 3498,
									"name": "DUP9",
									"source": 12
								},
								{
									"begin": 3479,
									"end": 3498,
									"name": "DUP7",
									"source": 12
								},
								{
									"begin": 3479,
									"end": 3498,
									"name": "ADD",
									"source": 12
								},
								{
									"begin": 3473,
									"end": 3499,
									"name": "MLOAD",
									"source": 12
								},
								{
									"begin": 3458,
									"end": 3500,
									"name": "DUP3",
									"source": 12
								},
								{
									"begin": 3458,
									"end": 3500,
									"name": "SSTORE",
									"source": 12
								},
								{
									"begin": 3571,
									"end": 3598,
									"name": "SWAP5",
									"source": 12
								},
								{
									"begin": 3571,
									"end": 3598,
									"name": "DUP5",
									"source": 12
								},
								{
									"begin": 3571,
									"end": 3598,
									"name": "ADD",
									"source": 12
								},
								{
									"begin": 3571,
									"end": 3598,
									"name": "SWAP5",
									"source": 12
								},
								{
									"begin": 3539,
									"end": 3540,
									"name": "PUSH",
									"source": 12,
									"value": "1"
								},
								{
									"begin": 3527,
									"end": 3541,
									"name": "SWAP1",
									"source": 12
								},
								{
									"begin": 3527,
									"end": 3541,
									"name": "SWAP2",
									"source": 12
								},
								{
									"begin": 3527,
									"end": 3541,
									"name": "ADD",
									"source": 12
								},
								{
									"begin": 3527,
									"end": 3541,
									"name": "SWAP1",
									"source": 12
								},
								{
									"begin": 3406,
									"end": 3425,
									"name": "DUP5",
									"source": 12
								},
								{
									"begin": 3406,
									"end": 3425,
									"name": "ADD",
									"source": 12
								},
								{
									"begin": 3376,
									"end": 3612,
									"name": "PUSH [tag]",
									"source": 12,
									"value": "55"
								},
								{
									"begin": 3376,
									"end": 3612,
									"name": "JUMP",
									"source": 12
								},
								{
									"begin": 3376,
									"end": 3612,
									"name": "tag",
									"source": 12,
									"value": "57"
								},
								{
									"begin": 3376,
									"end": 3612,
									"name": "JUMPDEST",
									"source": 12
								},
								{
									"begin": 3380,
									"end": 3383,
									"name": "POP",
									"source": 12
								},
								{
									"begin": 3640,
									"end": 3646,
									"name": "DUP6",
									"source": 12
								},
								{
									"begin": 3631,
									"end": 3638,
									"name": "DUP3",
									"source": 12
								},
								{
									"begin": 3628,
									"end": 3647,
									"name": "LT",
									"source": 12
								},
								{
									"begin": 3625,
									"end": 3826,
									"name": "ISZERO",
									"source": 12
								},
								{
									"begin": 3625,
									"end": 3826,
									"name": "PUSH [tag]",
									"source": 12,
									"value": "58"
								},
								{
									"begin": 3625,
									"end": 3826,
									"name": "JUMPI",
									"source": 12
								},
								{
									"begin": 3701,
									"end": 3720,
									"name": "DUP8",
									"source": 12
								},
								{
									"begin": 3701,
									"end": 3720,
									"name": "DUP6",
									"source": 12
								},
								{
									"begin": 3701,
									"end": 3720,
									"name": "ADD",
									"source": 12
								},
								{
									"begin": 3695,
									"end": 3721,
									"name": "MLOAD",
									"source": 12
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "0"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "NOT",
									"source": -1
								},
								{
									"begin": 3784,
									"end": 3785,
									"name": "PUSH",
									"source": 12,
									"value": "3"
								},
								{
									"begin": 3780,
									"end": 3794,
									"name": "DUP9",
									"source": 12
								},
								{
									"begin": 3780,
									"end": 3794,
									"name": "SWAP1",
									"source": 12
								},
								{
									"begin": 3780,
									"end": 3794,
									"name": "SHL",
									"source": 12
								},
								{
									"begin": 3796,
									"end": 3799,
									"name": "PUSH",
									"source": 12,
									"value": "F8"
								},
								{
									"begin": 3776,
									"end": 3800,
									"name": "AND",
									"source": 12
								},
								{
									"begin": 3772,
									"end": 3809,
									"name": "SHR",
									"source": 12
								},
								{
									"begin": 3768,
									"end": 3810,
									"name": "NOT",
									"source": 12
								},
								{
									"begin": 3753,
									"end": 3811,
									"name": "AND",
									"source": 12
								},
								{
									"begin": 3738,
									"end": 3812,
									"name": "DUP2",
									"source": 12
								},
								{
									"begin": 3738,
									"end": 3812,
									"name": "SSTORE",
									"source": 12
								},
								{
									"begin": 3625,
									"end": 3826,
									"name": "tag",
									"source": 12,
									"value": "58"
								},
								{
									"begin": 3625,
									"end": 3826,
									"name": "JUMPDEST",
									"source": 12
								},
								{
									"begin": -1,
									"end": -1,
									"name": "POP",
									"source": -1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "POP",
									"source": -1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "POP",
									"source": -1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "POP",
									"source": -1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "POP",
									"source": -1
								},
								{
									"begin": 3872,
									"end": 3873,
									"name": "PUSH",
									"source": 12,
									"value": "1"
								},
								{
									"begin": 3856,
									"end": 3870,
									"name": "SWAP1",
									"source": 12
								},
								{
									"begin": 3856,
									"end": 3870,
									"name": "DUP2",
									"source": 12
								},
								{
									"begin": 3856,
									"end": 3870,
									"name": "SHL",
									"source": 12
								},
								{
									"begin": 3852,
									"end": 3874,
									"name": "ADD",
									"source": 12
								},
								{
									"begin": 3839,
									"end": 3875,
									"name": "SWAP1",
									"source": 12
								},
								{
									"begin": 3839,
									"end": 3875,
									"name": "SSTORE",
									"source": 12
								},
								{
									"begin": -1,
									"end": -1,
									"name": "POP",
									"source": -1
								},
								{
									"begin": 2790,
									"end": 4142,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 12
								},
								{
									"begin": 2790,
									"end": 4142,
									"name": "tag",
									"source": 12,
									"value": "16"
								},
								{
									"begin": 2790,
									"end": 4142,
									"name": "JUMPDEST",
									"source": 12
								},
								{
									"begin": 628,
									"end": 16955,
									"name": "PUSH #[$]",
									"source": 0,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 628,
									"end": 16955,
									"name": "DUP1",
									"source": 0
								},
								{
									"begin": 628,
									"end": 16955,
									"name": "PUSH [$]",
									"source": 0,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 628,
									"end": 16955,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 628,
									"end": 16955,
									"name": "CODECOPY",
									"source": 0
								},
								{
									"begin": 628,
									"end": 16955,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 628,
									"end": 16955,
									"name": "RETURN",
									"source": 0
								}
							],
							".data": {
								"0": {
									".auxdata": "a26469706673582212208668b10ade2ce4e39acc044f7dbefc7edadaae5a1fbb762e25bf9b747808bb8464736f6c63430008150033",
									".code": [
										{
											"begin": 628,
											"end": 16955,
											"name": "PUSH",
											"source": 0,
											"value": "80"
										},
										{
											"begin": 628,
											"end": 16955,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 628,
											"end": 16955,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 628,
											"end": 16955,
											"name": "CALLVALUE",
											"source": 0
										},
										{
											"begin": 628,
											"end": 16955,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 628,
											"end": 16955,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 628,
											"end": 16955,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "1"
										},
										{
											"begin": 628,
											"end": 16955,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 628,
											"end": 16955,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 628,
											"end": 16955,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 628,
											"end": 16955,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 628,
											"end": 16955,
											"name": "tag",
											"source": 0,
											"value": "1"
										},
										{
											"begin": 628,
											"end": 16955,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 628,
											"end": 16955,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 628,
											"end": 16955,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 628,
											"end": 16955,
											"name": "CALLDATASIZE",
											"source": 0
										},
										{
											"begin": 628,
											"end": 16955,
											"name": "LT",
											"source": 0
										},
										{
											"begin": 628,
											"end": 16955,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "2"
										},
										{
											"begin": 628,
											"end": 16955,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 628,
											"end": 16955,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 628,
											"end": 16955,
											"name": "CALLDATALOAD",
											"source": 0
										},
										{
											"begin": 628,
											"end": 16955,
											"name": "PUSH",
											"source": 0,
											"value": "E0"
										},
										{
											"begin": 628,
											"end": 16955,
											"name": "SHR",
											"source": 0
										},
										{
											"begin": 628,
											"end": 16955,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 628,
											"end": 16955,
											"name": "PUSH",
											"source": 0,
											"value": "6352211E"
										},
										{
											"begin": 628,
											"end": 16955,
											"name": "GT",
											"source": 0
										},
										{
											"begin": 628,
											"end": 16955,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "16"
										},
										{
											"begin": 628,
											"end": 16955,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 628,
											"end": 16955,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 628,
											"end": 16955,
											"name": "PUSH",
											"source": 0,
											"value": "A22CB465"
										},
										{
											"begin": 628,
											"end": 16955,
											"name": "GT",
											"source": 0
										},
										{
											"begin": 628,
											"end": 16955,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "17"
										},
										{
											"begin": 628,
											"end": 16955,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 628,
											"end": 16955,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 628,
											"end": 16955,
											"name": "PUSH",
											"source": 0,
											"value": "A22CB465"
										},
										{
											"begin": 628,
											"end": 16955,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 628,
											"end": 16955,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "12"
										},
										{
											"begin": 628,
											"end": 16955,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 628,
											"end": 16955,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 628,
											"end": 16955,
											"name": "PUSH",
											"source": 0,
											"value": "B88D4FDE"
										},
										{
											"begin": 628,
											"end": 16955,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 628,
											"end": 16955,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "13"
										},
										{
											"begin": 628,
											"end": 16955,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 628,
											"end": 16955,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 628,
											"end": 16955,
											"name": "PUSH",
											"source": 0,
											"value": "C87B56DD"
										},
										{
											"begin": 628,
											"end": 16955,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 628,
											"end": 16955,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "14"
										},
										{
											"begin": 628,
											"end": 16955,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 628,
											"end": 16955,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 628,
											"end": 16955,
											"name": "PUSH",
											"source": 0,
											"value": "E985E9C5"
										},
										{
											"begin": 628,
											"end": 16955,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 628,
											"end": 16955,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "15"
										},
										{
											"begin": 628,
											"end": 16955,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 628,
											"end": 16955,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 628,
											"end": 16955,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 628,
											"end": 16955,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 628,
											"end": 16955,
											"name": "tag",
											"source": 0,
											"value": "17"
										},
										{
											"begin": 628,
											"end": 16955,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 628,
											"end": 16955,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 628,
											"end": 16955,
											"name": "PUSH",
											"source": 0,
											"value": "6352211E"
										},
										{
											"begin": 628,
											"end": 16955,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 628,
											"end": 16955,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "9"
										},
										{
											"begin": 628,
											"end": 16955,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 628,
											"end": 16955,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 628,
											"end": 16955,
											"name": "PUSH",
											"source": 0,
											"value": "70A08231"
										},
										{
											"begin": 628,
											"end": 16955,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 628,
											"end": 16955,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "10"
										},
										{
											"begin": 628,
											"end": 16955,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 628,
											"end": 16955,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 628,
											"end": 16955,
											"name": "PUSH",
											"source": 0,
											"value": "95D89B41"
										},
										{
											"begin": 628,
											"end": 16955,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 628,
											"end": 16955,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "11"
										},
										{
											"begin": 628,
											"end": 16955,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 628,
											"end": 16955,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 628,
											"end": 16955,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 628,
											"end": 16955,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 628,
											"end": 16955,
											"name": "tag",
											"source": 0,
											"value": "16"
										},
										{
											"begin": 628,
											"end": 16955,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 628,
											"end": 16955,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 628,
											"end": 16955,
											"name": "PUSH",
											"source": 0,
											"value": "1FFC9A7"
										},
										{
											"begin": 628,
											"end": 16955,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 628,
											"end": 16955,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "3"
										},
										{
											"begin": 628,
											"end": 16955,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 628,
											"end": 16955,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 628,
											"end": 16955,
											"name": "PUSH",
											"source": 0,
											"value": "6FDDE03"
										},
										{
											"begin": 628,
											"end": 16955,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 628,
											"end": 16955,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 628,
											"end": 16955,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 628,
											"end": 16955,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 628,
											"end": 16955,
											"name": "PUSH",
											"source": 0,
											"value": "81812FC"
										},
										{
											"begin": 628,
											"end": 16955,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 628,
											"end": 16955,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "5"
										},
										{
											"begin": 628,
											"end": 16955,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 628,
											"end": 16955,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 628,
											"end": 16955,
											"name": "PUSH",
											"source": 0,
											"value": "95EA7B3"
										},
										{
											"begin": 628,
											"end": 16955,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 628,
											"end": 16955,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "6"
										},
										{
											"begin": 628,
											"end": 16955,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 628,
											"end": 16955,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 628,
											"end": 16955,
											"name": "PUSH",
											"source": 0,
											"value": "23B872DD"
										},
										{
											"begin": 628,
											"end": 16955,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 628,
											"end": 16955,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "7"
										},
										{
											"begin": 628,
											"end": 16955,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 628,
											"end": 16955,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 628,
											"end": 16955,
											"name": "PUSH",
											"source": 0,
											"value": "42842E0E"
										},
										{
											"begin": 628,
											"end": 16955,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 628,
											"end": 16955,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "8"
										},
										{
											"begin": 628,
											"end": 16955,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 628,
											"end": 16955,
											"name": "tag",
											"source": 0,
											"value": "2"
										},
										{
											"begin": 628,
											"end": 16955,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 628,
											"end": 16955,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 628,
											"end": 16955,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 628,
											"end": 16955,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 1570,
											"end": 1870,
											"name": "tag",
											"source": 0,
											"value": "3"
										},
										{
											"begin": 1570,
											"end": 1870,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1570,
											"end": 1870,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "18"
										},
										{
											"begin": 1570,
											"end": 1870,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "19"
										},
										{
											"begin": 1570,
											"end": 1870,
											"name": "CALLDATASIZE",
											"source": 0
										},
										{
											"begin": 1570,
											"end": 1870,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 1570,
											"end": 1870,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 1570,
											"end": 1870,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 1570,
											"end": 1870,
											"name": "tag",
											"source": 0,
											"value": "19"
										},
										{
											"begin": 1570,
											"end": 1870,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1570,
											"end": 1870,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "21"
										},
										{
											"begin": 1570,
											"end": 1870,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 1570,
											"end": 1870,
											"name": "tag",
											"source": 0,
											"value": "18"
										},
										{
											"begin": 1570,
											"end": 1870,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1570,
											"end": 1870,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 1570,
											"end": 1870,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 565,
											"end": 579,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 565,
											"end": 579,
											"name": "ISZERO",
											"source": 12
										},
										{
											"begin": 558,
											"end": 580,
											"name": "ISZERO",
											"source": 12
										},
										{
											"begin": 540,
											"end": 581,
											"name": "DUP2",
											"source": 12
										},
										{
											"begin": 540,
											"end": 581,
											"name": "MSTORE",
											"source": 12
										},
										{
											"begin": 528,
											"end": 530,
											"name": "PUSH",
											"source": 12,
											"value": "20"
										},
										{
											"begin": 513,
											"end": 531,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 1570,
											"end": 1870,
											"name": "tag",
											"source": 0,
											"value": "22"
										},
										{
											"begin": 1570,
											"end": 1870,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1570,
											"end": 1870,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 1570,
											"end": 1870,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 1570,
											"end": 1870,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 1570,
											"end": 1870,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 1570,
											"end": 1870,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 1570,
											"end": 1870,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 1570,
											"end": 1870,
											"name": "RETURN",
											"source": 0
										},
										{
											"begin": 2471,
											"end": 2569,
											"name": "tag",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 2471,
											"end": 2569,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2471,
											"end": 2569,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "24"
										},
										{
											"begin": 2471,
											"end": 2569,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "25"
										},
										{
											"begin": 2471,
											"end": 2569,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 2471,
											"end": 2569,
											"name": "tag",
											"source": 0,
											"value": "24"
										},
										{
											"begin": 2471,
											"end": 2569,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2471,
											"end": 2569,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 2471,
											"end": 2569,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 2471,
											"end": 2569,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "22"
										},
										{
											"begin": 2471,
											"end": 2569,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 2471,
											"end": 2569,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 2471,
											"end": 2569,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "27"
										},
										{
											"begin": 2471,
											"end": 2569,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 3935,
											"end": 4102,
											"name": "tag",
											"source": 0,
											"value": "5"
										},
										{
											"begin": 3935,
											"end": 4102,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 3935,
											"end": 4102,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "28"
										},
										{
											"begin": 3935,
											"end": 4102,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "29"
										},
										{
											"begin": 3935,
											"end": 4102,
											"name": "CALLDATASIZE",
											"source": 0
										},
										{
											"begin": 3935,
											"end": 4102,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 3935,
											"end": 4102,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "30"
										},
										{
											"begin": 3935,
											"end": 4102,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 3935,
											"end": 4102,
											"name": "tag",
											"source": 0,
											"value": "29"
										},
										{
											"begin": 3935,
											"end": 4102,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 3935,
											"end": 4102,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "31"
										},
										{
											"begin": 3935,
											"end": 4102,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 3935,
											"end": 4102,
											"name": "tag",
											"source": 0,
											"value": "28"
										},
										{
											"begin": 3935,
											"end": 4102,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 3935,
											"end": 4102,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 3935,
											"end": 4102,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 1697,
											"end": 1729,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 1697,
											"end": 1729,
											"name": "SWAP2",
											"source": 12
										},
										{
											"begin": 1697,
											"end": 1729,
											"name": "AND",
											"source": 12
										},
										{
											"begin": 1679,
											"end": 1730,
											"name": "DUP2",
											"source": 12
										},
										{
											"begin": 1679,
											"end": 1730,
											"name": "MSTORE",
											"source": 12
										},
										{
											"begin": 1667,
											"end": 1669,
											"name": "PUSH",
											"source": 12,
											"value": "20"
										},
										{
											"begin": 1652,
											"end": 1670,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 3935,
											"end": 4102,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "22"
										},
										{
											"begin": 1533,
											"end": 1736,
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 3468,
											"end": 3874,
											"name": "tag",
											"source": 0,
											"value": "6"
										},
										{
											"begin": 3468,
											"end": 3874,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 3468,
											"end": 3874,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "34"
										},
										{
											"begin": 3468,
											"end": 3874,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "35"
										},
										{
											"begin": 3468,
											"end": 3874,
											"name": "CALLDATASIZE",
											"source": 0
										},
										{
											"begin": 3468,
											"end": 3874,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 3468,
											"end": 3874,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "36"
										},
										{
											"begin": 3468,
											"end": 3874,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 3468,
											"end": 3874,
											"name": "tag",
											"source": 0,
											"value": "35"
										},
										{
											"begin": 3468,
											"end": 3874,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 3468,
											"end": 3874,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "37"
										},
										{
											"begin": 3468,
											"end": 3874,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 3468,
											"end": 3874,
											"name": "tag",
											"source": 0,
											"value": "34"
										},
										{
											"begin": 3468,
											"end": 3874,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 3468,
											"end": 3874,
											"name": "STOP",
											"source": 0
										},
										{
											"begin": 4612,
											"end": 4938,
											"name": "tag",
											"source": 0,
											"value": "7"
										},
										{
											"begin": 4612,
											"end": 4938,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 4612,
											"end": 4938,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "34"
										},
										{
											"begin": 4612,
											"end": 4938,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "39"
										},
										{
											"begin": 4612,
											"end": 4938,
											"name": "CALLDATASIZE",
											"source": 0
										},
										{
											"begin": 4612,
											"end": 4938,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 4612,
											"end": 4938,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 4612,
											"end": 4938,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 4612,
											"end": 4938,
											"name": "tag",
											"source": 0,
											"value": "39"
										},
										{
											"begin": 4612,
											"end": 4938,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 4612,
											"end": 4938,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "41"
										},
										{
											"begin": 4612,
											"end": 4938,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 5004,
											"end": 5183,
											"name": "tag",
											"source": 0,
											"value": "8"
										},
										{
											"begin": 5004,
											"end": 5183,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 5004,
											"end": 5183,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "34"
										},
										{
											"begin": 5004,
											"end": 5183,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "43"
										},
										{
											"begin": 5004,
											"end": 5183,
											"name": "CALLDATASIZE",
											"source": 0
										},
										{
											"begin": 5004,
											"end": 5183,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 5004,
											"end": 5183,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 5004,
											"end": 5183,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 5004,
											"end": 5183,
											"name": "tag",
											"source": 0,
											"value": "43"
										},
										{
											"begin": 5004,
											"end": 5183,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 5004,
											"end": 5183,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "44"
										},
										{
											"begin": 5004,
											"end": 5183,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 2190,
											"end": 2409,
											"name": "tag",
											"source": 0,
											"value": "9"
										},
										{
											"begin": 2190,
											"end": 2409,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2190,
											"end": 2409,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "28"
										},
										{
											"begin": 2190,
											"end": 2409,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "46"
										},
										{
											"begin": 2190,
											"end": 2409,
											"name": "CALLDATASIZE",
											"source": 0
										},
										{
											"begin": 2190,
											"end": 2409,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 2190,
											"end": 2409,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "30"
										},
										{
											"begin": 2190,
											"end": 2409,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 2190,
											"end": 2409,
											"name": "tag",
											"source": 0,
											"value": "46"
										},
										{
											"begin": 2190,
											"end": 2409,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2190,
											"end": 2409,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "47"
										},
										{
											"begin": 2190,
											"end": 2409,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 1929,
											"end": 2133,
											"name": "tag",
											"source": 0,
											"value": "10"
										},
										{
											"begin": 1929,
											"end": 2133,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1929,
											"end": 2133,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "49"
										},
										{
											"begin": 1929,
											"end": 2133,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "50"
										},
										{
											"begin": 1929,
											"end": 2133,
											"name": "CALLDATASIZE",
											"source": 0
										},
										{
											"begin": 1929,
											"end": 2133,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 1929,
											"end": 2133,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "51"
										},
										{
											"begin": 1929,
											"end": 2133,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 1929,
											"end": 2133,
											"name": "tag",
											"source": 0,
											"value": "50"
										},
										{
											"begin": 1929,
											"end": 2133,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1929,
											"end": 2133,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "52"
										},
										{
											"begin": 1929,
											"end": 2133,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 1929,
											"end": 2133,
											"name": "tag",
											"source": 0,
											"value": "49"
										},
										{
											"begin": 1929,
											"end": 2133,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1929,
											"end": 2133,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 1929,
											"end": 2133,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 2848,
											"end": 2873,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 2848,
											"end": 2873,
											"name": "DUP2",
											"source": 12
										},
										{
											"begin": 2848,
											"end": 2873,
											"name": "MSTORE",
											"source": 12
										},
										{
											"begin": 2836,
											"end": 2838,
											"name": "PUSH",
											"source": 12,
											"value": "20"
										},
										{
											"begin": 2821,
											"end": 2839,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 1929,
											"end": 2133,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "22"
										},
										{
											"begin": 2702,
											"end": 2879,
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 2633,
											"end": 2735,
											"name": "tag",
											"source": 0,
											"value": "11"
										},
										{
											"begin": 2633,
											"end": 2735,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2633,
											"end": 2735,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "24"
										},
										{
											"begin": 2633,
											"end": 2735,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "56"
										},
										{
											"begin": 2633,
											"end": 2735,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 4169,
											"end": 4322,
											"name": "tag",
											"source": 0,
											"value": "12"
										},
										{
											"begin": 4169,
											"end": 4322,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 4169,
											"end": 4322,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "34"
										},
										{
											"begin": 4169,
											"end": 4322,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "59"
										},
										{
											"begin": 4169,
											"end": 4322,
											"name": "CALLDATASIZE",
											"source": 0
										},
										{
											"begin": 4169,
											"end": 4322,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 4169,
											"end": 4322,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "60"
										},
										{
											"begin": 4169,
											"end": 4322,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 4169,
											"end": 4322,
											"name": "tag",
											"source": 0,
											"value": "59"
										},
										{
											"begin": 4169,
											"end": 4322,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 4169,
											"end": 4322,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "61"
										},
										{
											"begin": 4169,
											"end": 4322,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 5249,
											"end": 5563,
											"name": "tag",
											"source": 0,
											"value": "13"
										},
										{
											"begin": 5249,
											"end": 5563,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 5249,
											"end": 5563,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "34"
										},
										{
											"begin": 5249,
											"end": 5563,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "63"
										},
										{
											"begin": 5249,
											"end": 5563,
											"name": "CALLDATASIZE",
											"source": 0
										},
										{
											"begin": 5249,
											"end": 5563,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 5249,
											"end": 5563,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "64"
										},
										{
											"begin": 5249,
											"end": 5563,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 5249,
											"end": 5563,
											"name": "tag",
											"source": 0,
											"value": "63"
										},
										{
											"begin": 5249,
											"end": 5563,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 5249,
											"end": 5563,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "65"
										},
										{
											"begin": 5249,
											"end": 5563,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 2801,
											"end": 3077,
											"name": "tag",
											"source": 0,
											"value": "14"
										},
										{
											"begin": 2801,
											"end": 3077,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2801,
											"end": 3077,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "24"
										},
										{
											"begin": 2801,
											"end": 3077,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "67"
										},
										{
											"begin": 2801,
											"end": 3077,
											"name": "CALLDATASIZE",
											"source": 0
										},
										{
											"begin": 2801,
											"end": 3077,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 2801,
											"end": 3077,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "30"
										},
										{
											"begin": 2801,
											"end": 3077,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 2801,
											"end": 3077,
											"name": "tag",
											"source": 0,
											"value": "67"
										},
										{
											"begin": 2801,
											"end": 3077,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2801,
											"end": 3077,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "68"
										},
										{
											"begin": 2801,
											"end": 3077,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 4388,
											"end": 4550,
											"name": "tag",
											"source": 0,
											"value": "15"
										},
										{
											"begin": 4388,
											"end": 4550,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 4388,
											"end": 4550,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "18"
										},
										{
											"begin": 4388,
											"end": 4550,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "71"
										},
										{
											"begin": 4388,
											"end": 4550,
											"name": "CALLDATASIZE",
											"source": 0
										},
										{
											"begin": 4388,
											"end": 4550,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 4388,
											"end": 4550,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "72"
										},
										{
											"begin": 4388,
											"end": 4550,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 4388,
											"end": 4550,
											"name": "tag",
											"source": 0,
											"value": "71"
										},
										{
											"begin": 4388,
											"end": 4550,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 4388,
											"end": 4550,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "73"
										},
										{
											"begin": 4388,
											"end": 4550,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 1570,
											"end": 1870,
											"name": "tag",
											"source": 0,
											"value": "21"
										},
										{
											"begin": 1570,
											"end": 1870,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1672,
											"end": 1676,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "NOT",
											"source": -1
										},
										{
											"begin": 1707,
											"end": 1747,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 1707,
											"end": 1747,
											"name": "AND",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "80AC58CD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 1707,
											"end": 1747,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 1707,
											"end": 1747,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 1707,
											"end": 1811,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "76"
										},
										{
											"begin": 1707,
											"end": 1811,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "NOT",
											"source": -1
										},
										{
											"begin": 1763,
											"end": 1811,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 1763,
											"end": 1811,
											"name": "AND",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "5B5E139F"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 1763,
											"end": 1811,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 1707,
											"end": 1811,
											"name": "tag",
											"source": 0,
											"value": "76"
										},
										{
											"begin": 1707,
											"end": 1811,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1707,
											"end": 1863,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 1707,
											"end": 1863,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "78"
										},
										{
											"begin": 1707,
											"end": 1863,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1FFC9A7"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "NOT",
											"source": -1
										},
										{
											"begin": 937,
											"end": 977,
											"name": "DUP4",
											"source": 8
										},
										{
											"begin": 937,
											"end": 977,
											"name": "AND",
											"source": 8
										},
										{
											"begin": 937,
											"end": 977,
											"name": "EQ",
											"source": 8
										},
										{
											"begin": 1827,
											"end": 1863,
											"name": "tag",
											"source": 0,
											"value": "78"
										},
										{
											"begin": 1827,
											"end": 1863,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1688,
											"end": 1863,
											"name": "SWAP3",
											"source": 0
										},
										{
											"begin": 1570,
											"end": 1870,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 1570,
											"end": 1870,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 2471,
											"end": 2569,
											"name": "tag",
											"source": 0,
											"value": "25"
										},
										{
											"begin": 2471,
											"end": 2569,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2525,
											"end": 2538,
											"name": "PUSH",
											"source": 0,
											"value": "60"
										},
										{
											"begin": 2557,
											"end": 2562,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 2550,
											"end": 2562,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 2550,
											"end": 2562,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 2550,
											"end": 2562,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "81"
										},
										{
											"begin": 2550,
											"end": 2562,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 2550,
											"end": 2562,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "82"
										},
										{
											"begin": 2550,
											"end": 2562,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 2550,
											"end": 2562,
											"name": "tag",
											"source": 0,
											"value": "81"
										},
										{
											"begin": 2550,
											"end": 2562,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2550,
											"end": 2562,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 2550,
											"end": 2562,
											"name": "PUSH",
											"source": 0,
											"value": "1F"
										},
										{
											"begin": 2550,
											"end": 2562,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 2550,
											"end": 2562,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 2550,
											"end": 2562,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 2550,
											"end": 2562,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 2550,
											"end": 2562,
											"name": "DIV",
											"source": 0
										},
										{
											"begin": 2550,
											"end": 2562,
											"name": "MUL",
											"source": 0
										},
										{
											"begin": 2550,
											"end": 2562,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 2550,
											"end": 2562,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 2550,
											"end": 2562,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 2550,
											"end": 2562,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 2550,
											"end": 2562,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 2550,
											"end": 2562,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 2550,
											"end": 2562,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 2550,
											"end": 2562,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 2550,
											"end": 2562,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 2550,
											"end": 2562,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 2550,
											"end": 2562,
											"name": "SWAP3",
											"source": 0
										},
										{
											"begin": 2550,
											"end": 2562,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 2550,
											"end": 2562,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 2550,
											"end": 2562,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 2550,
											"end": 2562,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 2550,
											"end": 2562,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 2550,
											"end": 2562,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 2550,
											"end": 2562,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 2550,
											"end": 2562,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 2550,
											"end": 2562,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 2550,
											"end": 2562,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 2550,
											"end": 2562,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "83"
										},
										{
											"begin": 2550,
											"end": 2562,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 2550,
											"end": 2562,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "82"
										},
										{
											"begin": 2550,
											"end": 2562,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 2550,
											"end": 2562,
											"name": "tag",
											"source": 0,
											"value": "83"
										},
										{
											"begin": 2550,
											"end": 2562,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2550,
											"end": 2562,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 2550,
											"end": 2562,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 2550,
											"end": 2562,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "84"
										},
										{
											"begin": 2550,
											"end": 2562,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 2550,
											"end": 2562,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 2550,
											"end": 2562,
											"name": "PUSH",
											"source": 0,
											"value": "1F"
										},
										{
											"begin": 2550,
											"end": 2562,
											"name": "LT",
											"source": 0
										},
										{
											"begin": 2550,
											"end": 2562,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "85"
										},
										{
											"begin": 2550,
											"end": 2562,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 2550,
											"end": 2562,
											"name": "PUSH",
											"source": 0,
											"value": "100"
										},
										{
											"begin": 2550,
											"end": 2562,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 2550,
											"end": 2562,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 2550,
											"end": 2562,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 2550,
											"end": 2562,
											"name": "DIV",
											"source": 0
										},
										{
											"begin": 2550,
											"end": 2562,
											"name": "MUL",
											"source": 0
										},
										{
											"begin": 2550,
											"end": 2562,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 2550,
											"end": 2562,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 2550,
											"end": 2562,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 2550,
											"end": 2562,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 2550,
											"end": 2562,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 2550,
											"end": 2562,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 2550,
											"end": 2562,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "84"
										},
										{
											"begin": 2550,
											"end": 2562,
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 2550,
											"end": 2562,
											"name": "tag",
											"source": 0,
											"value": "85"
										},
										{
											"begin": 2550,
											"end": 2562,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2550,
											"end": 2562,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 2550,
											"end": 2562,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 2550,
											"end": 2562,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 2550,
											"end": 2562,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 2550,
											"end": 2562,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 2550,
											"end": 2562,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 2550,
											"end": 2562,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 2550,
											"end": 2562,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 2550,
											"end": 2562,
											"name": "KECCAK256",
											"source": 0
										},
										{
											"begin": 2550,
											"end": 2562,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 2550,
											"end": 2562,
											"name": "tag",
											"source": 0,
											"value": "86"
										},
										{
											"begin": 2550,
											"end": 2562,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2550,
											"end": 2562,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 2550,
											"end": 2562,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 2550,
											"end": 2562,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 2550,
											"end": 2562,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 2550,
											"end": 2562,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 2550,
											"end": 2562,
											"name": "PUSH",
											"source": 0,
											"value": "1"
										},
										{
											"begin": 2550,
											"end": 2562,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 2550,
											"end": 2562,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 2550,
											"end": 2562,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 2550,
											"end": 2562,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 2550,
											"end": 2562,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 2550,
											"end": 2562,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 2550,
											"end": 2562,
											"name": "GT",
											"source": 0
										},
										{
											"begin": 2550,
											"end": 2562,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "86"
										},
										{
											"begin": 2550,
											"end": 2562,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 2550,
											"end": 2562,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 2550,
											"end": 2562,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 2550,
											"end": 2562,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 2550,
											"end": 2562,
											"name": "PUSH",
											"source": 0,
											"value": "1F"
										},
										{
											"begin": 2550,
											"end": 2562,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 2550,
											"end": 2562,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 2550,
											"end": 2562,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 2550,
											"end": 2562,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 2550,
											"end": 2562,
											"name": "tag",
											"source": 0,
											"value": "84"
										},
										{
											"begin": 2550,
											"end": 2562,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2550,
											"end": 2562,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 2550,
											"end": 2562,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 2550,
											"end": 2562,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 2550,
											"end": 2562,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 2550,
											"end": 2562,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 2550,
											"end": 2562,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 2550,
											"end": 2562,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 2471,
											"end": 2569,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 2471,
											"end": 2569,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 3935,
											"end": 4102,
											"name": "tag",
											"source": 0,
											"value": "31"
										},
										{
											"begin": 3935,
											"end": 4102,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 4011,
											"end": 4018,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 4030,
											"end": 4053,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "88"
										},
										{
											"begin": 4045,
											"end": 4052,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 4030,
											"end": 4044,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "89"
										},
										{
											"begin": 4030,
											"end": 4053,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 4030,
											"end": 4053,
											"name": "tag",
											"source": 0,
											"value": "88"
										},
										{
											"begin": 4030,
											"end": 4053,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 4071,
											"end": 4095,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 4071,
											"end": 4095,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 4071,
											"end": 4095,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 4071,
											"end": 4095,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 4071,
											"end": 4086,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 4071,
											"end": 4095,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 4071,
											"end": 4095,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 4071,
											"end": 4095,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 4071,
											"end": 4095,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 4071,
											"end": 4095,
											"name": "KECCAK256",
											"source": 0
										},
										{
											"begin": 4071,
											"end": 4095,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 4071,
											"end": 4095,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 4071,
											"end": 4095,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 3935,
											"end": 4102,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 3468,
											"end": 3874,
											"name": "tag",
											"source": 0,
											"value": "37"
										},
										{
											"begin": 3468,
											"end": 3874,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 3548,
											"end": 3561,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 3564,
											"end": 3587,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "91"
										},
										{
											"begin": 3579,
											"end": 3586,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 3564,
											"end": 3578,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "47"
										},
										{
											"begin": 3564,
											"end": 3587,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 3564,
											"end": 3587,
											"name": "tag",
											"source": 0,
											"value": "91"
										},
										{
											"begin": 3564,
											"end": 3587,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 3548,
											"end": 3587,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 3548,
											"end": 3587,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 3611,
											"end": 3616,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 3605,
											"end": 3616,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 3605,
											"end": 3607,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 3605,
											"end": 3616,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 3605,
											"end": 3616,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 3597,
											"end": 3654,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "92"
										},
										{
											"begin": 3597,
											"end": 3654,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 3597,
											"end": 3654,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 3597,
											"end": 3654,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "461BCD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E5"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 3597,
											"end": 3654,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 3597,
											"end": 3654,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 5363,
											"end": 5365,
											"name": "PUSH",
											"source": 12,
											"value": "20"
										},
										{
											"begin": 3597,
											"end": 3654,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 3597,
											"end": 3654,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 3597,
											"end": 3654,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 5345,
											"end": 5366,
											"name": "MSTORE",
											"source": 12
										},
										{
											"begin": 5402,
											"end": 5404,
											"name": "PUSH",
											"source": 12,
											"value": "21"
										},
										{
											"begin": 5382,
											"end": 5400,
											"name": "PUSH",
											"source": 12,
											"value": "24"
										},
										{
											"begin": 5382,
											"end": 5400,
											"name": "DUP3",
											"source": 12
										},
										{
											"begin": 5382,
											"end": 5400,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 5375,
											"end": 5405,
											"name": "MSTORE",
											"source": 12
										},
										{
											"begin": 5441,
											"end": 5475,
											"name": "PUSH",
											"source": 12,
											"value": "4552433732313A20617070726F76616C20746F2063757272656E74206F776E65"
										},
										{
											"begin": 5421,
											"end": 5439,
											"name": "PUSH",
											"source": 12,
											"value": "44"
										},
										{
											"begin": 5421,
											"end": 5439,
											"name": "DUP3",
											"source": 12
										},
										{
											"begin": 5421,
											"end": 5439,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 5414,
											"end": 5476,
											"name": "MSTORE",
											"source": 12
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "39"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "F9"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 5492,
											"end": 5510,
											"name": "PUSH",
											"source": 12,
											"value": "64"
										},
										{
											"begin": 5492,
											"end": 5510,
											"name": "DUP3",
											"source": 12
										},
										{
											"begin": 5492,
											"end": 5510,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 5485,
											"end": 5516,
											"name": "MSTORE",
											"source": 12
										},
										{
											"begin": 5533,
											"end": 5552,
											"name": "PUSH",
											"source": 12,
											"value": "84"
										},
										{
											"begin": 5533,
											"end": 5552,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 3597,
											"end": 3654,
											"name": "tag",
											"source": 0,
											"value": "93"
										},
										{
											"begin": 3597,
											"end": 3654,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 3597,
											"end": 3654,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 3597,
											"end": 3654,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 3597,
											"end": 3654,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 3597,
											"end": 3654,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 3597,
											"end": 3654,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 3597,
											"end": 3654,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 3597,
											"end": 3654,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 3597,
											"end": 3654,
											"name": "tag",
											"source": 0,
											"value": "92"
										},
										{
											"begin": 3597,
											"end": 3654,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 719,
											"end": 729,
											"name": "CALLER",
											"source": 5
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 3686,
											"end": 3707,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 3686,
											"end": 3707,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 3686,
											"end": 3707,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 3686,
											"end": 3707,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 3686,
											"end": 3748,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "98"
										},
										{
											"begin": 3686,
											"end": 3748,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 3711,
											"end": 3748,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "98"
										},
										{
											"begin": 3728,
											"end": 3733,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 719,
											"end": 729,
											"name": "CALLER",
											"source": 5
										},
										{
											"begin": 4388,
											"end": 4550,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "73"
										},
										{
											"begin": 4388,
											"end": 4550,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 3711,
											"end": 3748,
											"name": "tag",
											"source": 0,
											"value": "98"
										},
										{
											"begin": 3711,
											"end": 3748,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 3665,
											"end": 3835,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "100"
										},
										{
											"begin": 3665,
											"end": 3835,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 3665,
											"end": 3835,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 3665,
											"end": 3835,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "461BCD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E5"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 3665,
											"end": 3835,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 3665,
											"end": 3835,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 5765,
											"end": 5767,
											"name": "PUSH",
											"source": 12,
											"value": "20"
										},
										{
											"begin": 3665,
											"end": 3835,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 3665,
											"end": 3835,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 3665,
											"end": 3835,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 5747,
											"end": 5768,
											"name": "MSTORE",
											"source": 12
										},
										{
											"begin": 5804,
											"end": 5806,
											"name": "PUSH",
											"source": 12,
											"value": "3D"
										},
										{
											"begin": 5784,
											"end": 5802,
											"name": "PUSH",
											"source": 12,
											"value": "24"
										},
										{
											"begin": 5784,
											"end": 5802,
											"name": "DUP3",
											"source": 12
										},
										{
											"begin": 5784,
											"end": 5802,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 5777,
											"end": 5807,
											"name": "MSTORE",
											"source": 12
										},
										{
											"begin": 5843,
											"end": 5877,
											"name": "PUSH",
											"source": 12,
											"value": "4552433732313A20617070726F76652063616C6C6572206973206E6F7420746F"
										},
										{
											"begin": 5823,
											"end": 5841,
											"name": "PUSH",
											"source": 12,
											"value": "44"
										},
										{
											"begin": 5823,
											"end": 5841,
											"name": "DUP3",
											"source": 12
										},
										{
											"begin": 5823,
											"end": 5841,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 5816,
											"end": 5878,
											"name": "MSTORE",
											"source": 12
										},
										{
											"begin": 5914,
											"end": 5945,
											"name": "PUSH",
											"source": 12,
											"value": "6B656E206F776E6572206F7220617070726F76656420666F7220616C6C000000"
										},
										{
											"begin": 5894,
											"end": 5912,
											"name": "PUSH",
											"source": 12,
											"value": "64"
										},
										{
											"begin": 5894,
											"end": 5912,
											"name": "DUP3",
											"source": 12
										},
										{
											"begin": 5894,
											"end": 5912,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 5887,
											"end": 5946,
											"name": "MSTORE",
											"source": 12
										},
										{
											"begin": 5963,
											"end": 5982,
											"name": "PUSH",
											"source": 12,
											"value": "84"
										},
										{
											"begin": 5963,
											"end": 5982,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 3665,
											"end": 3835,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "93"
										},
										{
											"begin": 5563,
											"end": 5988,
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 3665,
											"end": 3835,
											"name": "tag",
											"source": 0,
											"value": "100"
										},
										{
											"begin": 3665,
											"end": 3835,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 3846,
											"end": 3867,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "103"
										},
										{
											"begin": 3855,
											"end": 3857,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 3859,
											"end": 3866,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 3846,
											"end": 3854,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "104"
										},
										{
											"begin": 3846,
											"end": 3867,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 3846,
											"end": 3867,
											"name": "tag",
											"source": 0,
											"value": "103"
										},
										{
											"begin": 3846,
											"end": 3867,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 3538,
											"end": 3874,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 3468,
											"end": 3874,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 3468,
											"end": 3874,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 3468,
											"end": 3874,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 4612,
											"end": 4938,
											"name": "tag",
											"source": 0,
											"value": "41"
										},
										{
											"begin": 4612,
											"end": 4938,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 4801,
											"end": 4842,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "106"
										},
										{
											"begin": 719,
											"end": 729,
											"name": "CALLER",
											"source": 5
										},
										{
											"begin": 4834,
											"end": 4841,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 4801,
											"end": 4819,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "108"
										},
										{
											"begin": 4801,
											"end": 4842,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 4801,
											"end": 4842,
											"name": "tag",
											"source": 0,
											"value": "106"
										},
										{
											"begin": 4801,
											"end": 4842,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 4793,
											"end": 4892,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "109"
										},
										{
											"begin": 4793,
											"end": 4892,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 4793,
											"end": 4892,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 4793,
											"end": 4892,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "461BCD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E5"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 4793,
											"end": 4892,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 4793,
											"end": 4892,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 4793,
											"end": 4892,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 4793,
											"end": 4892,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 4793,
											"end": 4892,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "93"
										},
										{
											"begin": 4793,
											"end": 4892,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 4793,
											"end": 4892,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "111"
										},
										{
											"begin": 4793,
											"end": 4892,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 4793,
											"end": 4892,
											"name": "tag",
											"source": 0,
											"value": "109"
										},
										{
											"begin": 4793,
											"end": 4892,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 4903,
											"end": 4931,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "103"
										},
										{
											"begin": 4913,
											"end": 4917,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 4919,
											"end": 4921,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 4923,
											"end": 4930,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 4903,
											"end": 4912,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "113"
										},
										{
											"begin": 4903,
											"end": 4931,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 5004,
											"end": 5183,
											"name": "tag",
											"source": 0,
											"value": "44"
										},
										{
											"begin": 5004,
											"end": 5183,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 5137,
											"end": 5176,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "103"
										},
										{
											"begin": 5154,
											"end": 5158,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 5160,
											"end": 5162,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 5164,
											"end": 5171,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 5137,
											"end": 5176,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 5137,
											"end": 5176,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 5137,
											"end": 5176,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 5137,
											"end": 5176,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 5137,
											"end": 5176,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 5137,
											"end": 5176,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 5137,
											"end": 5176,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 5137,
											"end": 5176,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 5137,
											"end": 5176,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 5137,
											"end": 5176,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 5137,
											"end": 5176,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 5137,
											"end": 5176,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 5137,
											"end": 5153,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "65"
										},
										{
											"begin": 5137,
											"end": 5176,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 2190,
											"end": 2409,
											"name": "tag",
											"source": 0,
											"value": "47"
										},
										{
											"begin": 2190,
											"end": 2409,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2262,
											"end": 2269,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 6930,
											"end": 6946,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 6930,
											"end": 6946,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 6930,
											"end": 6946,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 6930,
											"end": 6937,
											"name": "PUSH",
											"source": 0,
											"value": "2"
										},
										{
											"begin": 6930,
											"end": 6946,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 6930,
											"end": 6946,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 6930,
											"end": 6946,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 6930,
											"end": 6946,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 6930,
											"end": 6946,
											"name": "KECCAK256",
											"source": 0
										},
										{
											"begin": 6930,
											"end": 6946,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 6930,
											"end": 6946,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 6930,
											"end": 6946,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 2324,
											"end": 2380,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "78"
										},
										{
											"begin": 2324,
											"end": 2380,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 2324,
											"end": 2380,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 2324,
											"end": 2380,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "461BCD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E5"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 2324,
											"end": 2380,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 2324,
											"end": 2380,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 6609,
											"end": 6611,
											"name": "PUSH",
											"source": 12,
											"value": "20"
										},
										{
											"begin": 2324,
											"end": 2380,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 2324,
											"end": 2380,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 2324,
											"end": 2380,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 6591,
											"end": 6612,
											"name": "MSTORE",
											"source": 12
										},
										{
											"begin": 6648,
											"end": 6650,
											"name": "PUSH",
											"source": 12,
											"value": "18"
										},
										{
											"begin": 6628,
											"end": 6646,
											"name": "PUSH",
											"source": 12,
											"value": "24"
										},
										{
											"begin": 6628,
											"end": 6646,
											"name": "DUP3",
											"source": 12
										},
										{
											"begin": 6628,
											"end": 6646,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 6621,
											"end": 6651,
											"name": "MSTORE",
											"source": 12
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "115490CDCC8C4E881A5B9D985B1A59081D1BDAD95B881251"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "42"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 6667,
											"end": 6685,
											"name": "PUSH",
											"source": 12,
											"value": "44"
										},
										{
											"begin": 6667,
											"end": 6685,
											"name": "DUP3",
											"source": 12
										},
										{
											"begin": 6667,
											"end": 6685,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 6660,
											"end": 6714,
											"name": "MSTORE",
											"source": 12
										},
										{
											"begin": 6731,
											"end": 6749,
											"name": "PUSH",
											"source": 12,
											"value": "64"
										},
										{
											"begin": 6731,
											"end": 6749,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 2324,
											"end": 2380,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "93"
										},
										{
											"begin": 6407,
											"end": 6755,
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 1929,
											"end": 2133,
											"name": "tag",
											"source": 0,
											"value": "52"
										},
										{
											"begin": 1929,
											"end": 2133,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2001,
											"end": 2008,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 2028,
											"end": 2047,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 2028,
											"end": 2047,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 2020,
											"end": 2093,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "123"
										},
										{
											"begin": 2020,
											"end": 2093,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 2020,
											"end": 2093,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 2020,
											"end": 2093,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "461BCD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E5"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 2020,
											"end": 2093,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 2020,
											"end": 2093,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 6962,
											"end": 6964,
											"name": "PUSH",
											"source": 12,
											"value": "20"
										},
										{
											"begin": 2020,
											"end": 2093,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 2020,
											"end": 2093,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 2020,
											"end": 2093,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 6944,
											"end": 6965,
											"name": "MSTORE",
											"source": 12
										},
										{
											"begin": 7001,
											"end": 7003,
											"name": "PUSH",
											"source": 12,
											"value": "29"
										},
										{
											"begin": 6981,
											"end": 6999,
											"name": "PUSH",
											"source": 12,
											"value": "24"
										},
										{
											"begin": 6981,
											"end": 6999,
											"name": "DUP3",
											"source": 12
										},
										{
											"begin": 6981,
											"end": 6999,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 6974,
											"end": 7004,
											"name": "MSTORE",
											"source": 12
										},
										{
											"begin": 7040,
											"end": 7074,
											"name": "PUSH",
											"source": 12,
											"value": "4552433732313A2061646472657373207A65726F206973206E6F742061207661"
										},
										{
											"begin": 7020,
											"end": 7038,
											"name": "PUSH",
											"source": 12,
											"value": "44"
										},
										{
											"begin": 7020,
											"end": 7038,
											"name": "DUP3",
											"source": 12
										},
										{
											"begin": 7020,
											"end": 7038,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 7013,
											"end": 7075,
											"name": "MSTORE",
											"source": 12
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "3634B21037BBB732B9"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "B9"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 7091,
											"end": 7109,
											"name": "PUSH",
											"source": 12,
											"value": "64"
										},
										{
											"begin": 7091,
											"end": 7109,
											"name": "DUP3",
											"source": 12
										},
										{
											"begin": 7091,
											"end": 7109,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 7084,
											"end": 7123,
											"name": "MSTORE",
											"source": 12
										},
										{
											"begin": 7140,
											"end": 7159,
											"name": "PUSH",
											"source": 12,
											"value": "84"
										},
										{
											"begin": 7140,
											"end": 7159,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 2020,
											"end": 2093,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "93"
										},
										{
											"begin": 6760,
											"end": 7165,
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 2020,
											"end": 2093,
											"name": "tag",
											"source": 0,
											"value": "123"
										},
										{
											"begin": 2020,
											"end": 2093,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 2110,
											"end": 2126,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 2110,
											"end": 2126,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 2110,
											"end": 2126,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 2110,
											"end": 2126,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 2110,
											"end": 2126,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 2110,
											"end": 2119,
											"name": "PUSH",
											"source": 0,
											"value": "3"
										},
										{
											"begin": 2110,
											"end": 2126,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 2110,
											"end": 2126,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 2110,
											"end": 2126,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 2110,
											"end": 2126,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 2110,
											"end": 2126,
											"name": "KECCAK256",
											"source": 0
										},
										{
											"begin": 2110,
											"end": 2126,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 2110,
											"end": 2126,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 1929,
											"end": 2133,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 2633,
											"end": 2735,
											"name": "tag",
											"source": 0,
											"value": "56"
										},
										{
											"begin": 2633,
											"end": 2735,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2689,
											"end": 2702,
											"name": "PUSH",
											"source": 0,
											"value": "60"
										},
										{
											"begin": 2721,
											"end": 2728,
											"name": "PUSH",
											"source": 0,
											"value": "1"
										},
										{
											"begin": 2714,
											"end": 2728,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 2714,
											"end": 2728,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 2714,
											"end": 2728,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "81"
										},
										{
											"begin": 2714,
											"end": 2728,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 2714,
											"end": 2728,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "82"
										},
										{
											"begin": 2714,
											"end": 2728,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 4169,
											"end": 4322,
											"name": "tag",
											"source": 0,
											"value": "61"
										},
										{
											"begin": 4169,
											"end": 4322,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 4263,
											"end": 4315,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "133"
										},
										{
											"begin": 719,
											"end": 729,
											"name": "CALLER",
											"source": 5
										},
										{
											"begin": 4296,
											"end": 4304,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 4306,
											"end": 4314,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 4263,
											"end": 4281,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "135"
										},
										{
											"begin": 4263,
											"end": 4315,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 4263,
											"end": 4315,
											"name": "tag",
											"source": 0,
											"value": "133"
										},
										{
											"begin": 4263,
											"end": 4315,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 4169,
											"end": 4322,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 4169,
											"end": 4322,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 4169,
											"end": 4322,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 5249,
											"end": 5563,
											"name": "tag",
											"source": 0,
											"value": "65"
										},
										{
											"begin": 5249,
											"end": 5563,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 5417,
											"end": 5458,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "137"
										},
										{
											"begin": 719,
											"end": 729,
											"name": "CALLER",
											"source": 5
										},
										{
											"begin": 5450,
											"end": 5457,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 5417,
											"end": 5435,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "108"
										},
										{
											"begin": 5417,
											"end": 5458,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 5417,
											"end": 5458,
											"name": "tag",
											"source": 0,
											"value": "137"
										},
										{
											"begin": 5417,
											"end": 5458,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 5409,
											"end": 5508,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "139"
										},
										{
											"begin": 5409,
											"end": 5508,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 5409,
											"end": 5508,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 5409,
											"end": 5508,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "461BCD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E5"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 5409,
											"end": 5508,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 5409,
											"end": 5508,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 5409,
											"end": 5508,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 5409,
											"end": 5508,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 5409,
											"end": 5508,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "93"
										},
										{
											"begin": 5409,
											"end": 5508,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 5409,
											"end": 5508,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "111"
										},
										{
											"begin": 5409,
											"end": 5508,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 5409,
											"end": 5508,
											"name": "tag",
											"source": 0,
											"value": "139"
										},
										{
											"begin": 5409,
											"end": 5508,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 5518,
											"end": 5556,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "141"
										},
										{
											"begin": 5532,
											"end": 5536,
											"name": "DUP5",
											"source": 0
										},
										{
											"begin": 5538,
											"end": 5540,
											"name": "DUP5",
											"source": 0
										},
										{
											"begin": 5542,
											"end": 5549,
											"name": "DUP5",
											"source": 0
										},
										{
											"begin": 5551,
											"end": 5555,
											"name": "DUP5",
											"source": 0
										},
										{
											"begin": 5518,
											"end": 5531,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "142"
										},
										{
											"begin": 5518,
											"end": 5556,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 5518,
											"end": 5556,
											"name": "tag",
											"source": 0,
											"value": "141"
										},
										{
											"begin": 5518,
											"end": 5556,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 5249,
											"end": 5563,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 5249,
											"end": 5563,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 5249,
											"end": 5563,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 5249,
											"end": 5563,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 5249,
											"end": 5563,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 2801,
											"end": 3077,
											"name": "tag",
											"source": 0,
											"value": "68"
										},
										{
											"begin": 2801,
											"end": 3077,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2874,
											"end": 2887,
											"name": "PUSH",
											"source": 0,
											"value": "60"
										},
										{
											"begin": 2899,
											"end": 2922,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "144"
										},
										{
											"begin": 2914,
											"end": 2921,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 2899,
											"end": 2913,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "89"
										},
										{
											"begin": 2899,
											"end": 2922,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 2899,
											"end": 2922,
											"name": "tag",
											"source": 0,
											"value": "144"
										},
										{
											"begin": 2899,
											"end": 2922,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2933,
											"end": 2954,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 2957,
											"end": 2967,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "145"
										},
										{
											"begin": 3395,
											"end": 3404,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 3395,
											"end": 3404,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 3395,
											"end": 3404,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 3395,
											"end": 3404,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 3395,
											"end": 3404,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 3395,
											"end": 3404,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 3395,
											"end": 3404,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 3395,
											"end": 3404,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 3395,
											"end": 3404,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "0"
										},
										{
											"begin": 3395,
											"end": 3404,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 3395,
											"end": 3404,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 3395,
											"end": 3404,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 3319,
											"end": 3411,
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 2957,
											"end": 2967,
											"name": "tag",
											"source": 0,
											"value": "145"
										},
										{
											"begin": 2957,
											"end": 2967,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2933,
											"end": 2967,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 2933,
											"end": 2967,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 3008,
											"end": 3009,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 2990,
											"end": 2997,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 2984,
											"end": 3005,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 2984,
											"end": 3009,
											"name": "GT",
											"source": 0
										},
										{
											"begin": 2984,
											"end": 3070,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "147"
										},
										{
											"begin": 2984,
											"end": 3070,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 2984,
											"end": 3070,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 2984,
											"end": 3070,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 2984,
											"end": 3070,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 2984,
											"end": 3070,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 2984,
											"end": 3070,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 2984,
											"end": 3070,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 2984,
											"end": 3070,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 2984,
											"end": 3070,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 2984,
											"end": 3070,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 2984,
											"end": 3070,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 2984,
											"end": 3070,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 2984,
											"end": 3070,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 2984,
											"end": 3070,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "148"
										},
										{
											"begin": 2984,
											"end": 3070,
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 2984,
											"end": 3070,
											"name": "tag",
											"source": 0,
											"value": "147"
										},
										{
											"begin": 2984,
											"end": 3070,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 3036,
											"end": 3043,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 3045,
											"end": 3063,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "149"
										},
										{
											"begin": 3045,
											"end": 3052,
											"name": "DUP5",
											"source": 0
										},
										{
											"begin": 3045,
											"end": 3061,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "150"
										},
										{
											"begin": 3045,
											"end": 3063,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 3045,
											"end": 3063,
											"name": "tag",
											"source": 0,
											"value": "149"
										},
										{
											"begin": 3045,
											"end": 3063,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 3019,
											"end": 3064,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 3019,
											"end": 3064,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 3019,
											"end": 3064,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 3019,
											"end": 3064,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 3019,
											"end": 3064,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "151"
										},
										{
											"begin": 3019,
											"end": 3064,
											"name": "SWAP3",
											"source": 0
										},
										{
											"begin": 3019,
											"end": 3064,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 3019,
											"end": 3064,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 3019,
											"end": 3064,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "152"
										},
										{
											"begin": 3019,
											"end": 3064,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 3019,
											"end": 3064,
											"name": "tag",
											"source": 0,
											"value": "151"
										},
										{
											"begin": 3019,
											"end": 3064,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 3019,
											"end": 3064,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 3019,
											"end": 3064,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 3019,
											"end": 3064,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 3019,
											"end": 3064,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 3019,
											"end": 3064,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 3019,
											"end": 3064,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 3019,
											"end": 3064,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 3019,
											"end": 3064,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 3019,
											"end": 3064,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 3019,
											"end": 3064,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 3019,
											"end": 3064,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 3019,
											"end": 3064,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 2984,
											"end": 3070,
											"name": "tag",
											"source": 0,
											"value": "148"
										},
										{
											"begin": 2984,
											"end": 3070,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2977,
											"end": 3070,
											"name": "SWAP4",
											"source": 0
										},
										{
											"begin": 2801,
											"end": 3077,
											"name": "SWAP3",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 2801,
											"end": 3077,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 4388,
											"end": 4550,
											"name": "tag",
											"source": 0,
											"value": "73"
										},
										{
											"begin": 4388,
											"end": 4550,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 4508,
											"end": 4533,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 4508,
											"end": 4533,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 4508,
											"end": 4533,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 4485,
											"end": 4489,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 4508,
											"end": 4533,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 4508,
											"end": 4533,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 4508,
											"end": 4533,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 4508,
											"end": 4526,
											"name": "PUSH",
											"source": 0,
											"value": "5"
										},
										{
											"begin": 4508,
											"end": 4533,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 4508,
											"end": 4533,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 4508,
											"end": 4533,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 4508,
											"end": 4533,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 4508,
											"end": 4533,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 4508,
											"end": 4533,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 4508,
											"end": 4533,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 4508,
											"end": 4533,
											"name": "KECCAK256",
											"source": 0
										},
										{
											"begin": 4508,
											"end": 4543,
											"name": "SWAP4",
											"source": 0
										},
										{
											"begin": 4508,
											"end": 4543,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 4508,
											"end": 4543,
											"name": "SWAP5",
											"source": 0
										},
										{
											"begin": 4508,
											"end": 4543,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 4508,
											"end": 4543,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 4508,
											"end": 4543,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 4508,
											"end": 4543,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 4508,
											"end": 4543,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 4508,
											"end": 4543,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 4508,
											"end": 4543,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 4508,
											"end": 4543,
											"name": "KECCAK256",
											"source": 0
										},
										{
											"begin": 4508,
											"end": 4543,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 4508,
											"end": 4543,
											"name": "PUSH",
											"source": 0,
											"value": "FF"
										},
										{
											"begin": 4508,
											"end": 4543,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 4508,
											"end": 4543,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 4388,
											"end": 4550,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 13466,
											"end": 13599,
											"name": "tag",
											"source": 0,
											"value": "89"
										},
										{
											"begin": 13466,
											"end": 13599,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 7321,
											"end": 7325,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 6930,
											"end": 6946,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 6930,
											"end": 6946,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 6930,
											"end": 6946,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 6930,
											"end": 6937,
											"name": "PUSH",
											"source": 0,
											"value": "2"
										},
										{
											"begin": 6930,
											"end": 6946,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 6930,
											"end": 6946,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 6930,
											"end": 6946,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 6930,
											"end": 6946,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 6930,
											"end": 6946,
											"name": "KECCAK256",
											"source": 0
										},
										{
											"begin": 6930,
											"end": 6946,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 6930,
											"end": 6946,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 13539,
											"end": 13592,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "158"
										},
										{
											"begin": 13539,
											"end": 13592,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 13539,
											"end": 13592,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 13539,
											"end": 13592,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "461BCD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E5"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 13539,
											"end": 13592,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 13539,
											"end": 13592,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 6609,
											"end": 6611,
											"name": "PUSH",
											"source": 12,
											"value": "20"
										},
										{
											"begin": 13539,
											"end": 13592,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 13539,
											"end": 13592,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 13539,
											"end": 13592,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 6591,
											"end": 6612,
											"name": "MSTORE",
											"source": 12
										},
										{
											"begin": 6648,
											"end": 6650,
											"name": "PUSH",
											"source": 12,
											"value": "18"
										},
										{
											"begin": 6628,
											"end": 6646,
											"name": "PUSH",
											"source": 12,
											"value": "24"
										},
										{
											"begin": 6628,
											"end": 6646,
											"name": "DUP3",
											"source": 12
										},
										{
											"begin": 6628,
											"end": 6646,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 6621,
											"end": 6651,
											"name": "MSTORE",
											"source": 12
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "115490CDCC8C4E881A5B9D985B1A59081D1BDAD95B881251"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "42"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 6667,
											"end": 6685,
											"name": "PUSH",
											"source": 12,
											"value": "44"
										},
										{
											"begin": 6667,
											"end": 6685,
											"name": "DUP3",
											"source": 12
										},
										{
											"begin": 6667,
											"end": 6685,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 6660,
											"end": 6714,
											"name": "MSTORE",
											"source": 12
										},
										{
											"begin": 6731,
											"end": 6749,
											"name": "PUSH",
											"source": 12,
											"value": "64"
										},
										{
											"begin": 6731,
											"end": 6749,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 13539,
											"end": 13592,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "93"
										},
										{
											"begin": 6407,
											"end": 6755,
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 13539,
											"end": 13592,
											"name": "tag",
											"source": 0,
											"value": "158"
										},
										{
											"begin": 13539,
											"end": 13592,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 13466,
											"end": 13599,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 13466,
											"end": 13599,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 12768,
											"end": 12939,
											"name": "tag",
											"source": 0,
											"value": "104"
										},
										{
											"begin": 12768,
											"end": 12939,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 12842,
											"end": 12866,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 12842,
											"end": 12866,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 12842,
											"end": 12866,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 12842,
											"end": 12866,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 12842,
											"end": 12857,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 12842,
											"end": 12866,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 12842,
											"end": 12866,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 12842,
											"end": 12866,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 12842,
											"end": 12866,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 12842,
											"end": 12866,
											"name": "KECCAK256",
											"source": 0
										},
										{
											"begin": 12842,
											"end": 12871,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 12842,
											"end": 12871,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "NOT",
											"source": -1
										},
										{
											"begin": 12842,
											"end": 12871,
											"name": "AND",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 12842,
											"end": 12871,
											"name": "DUP5",
											"source": 0
										},
										{
											"begin": 12842,
											"end": 12871,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 12842,
											"end": 12871,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 12842,
											"end": 12871,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 12842,
											"end": 12871,
											"name": "OR",
											"source": 0
										},
										{
											"begin": 12842,
											"end": 12871,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 12842,
											"end": 12871,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 12842,
											"end": 12871,
											"name": "SSTORE",
											"source": 0
										},
										{
											"begin": 12842,
											"end": 12866,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 12842,
											"end": 12866,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 12895,
											"end": 12918,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "162"
										},
										{
											"begin": 12842,
											"end": 12866,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 12895,
											"end": 12909,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "47"
										},
										{
											"begin": 12895,
											"end": 12918,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 12895,
											"end": 12918,
											"name": "tag",
											"source": 0,
											"value": "162"
										},
										{
											"begin": 12895,
											"end": 12918,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 12886,
											"end": 12932,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 12886,
											"end": 12932,
											"name": "PUSH",
											"source": 0,
											"value": "8C5BE1E5EBEC7D5BD14F71427D1E84F3DD0314C0F7B2291E5B200AC8C7C3B925"
										},
										{
											"begin": 12886,
											"end": 12932,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 12886,
											"end": 12932,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 12886,
											"end": 12932,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 12886,
											"end": 12932,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 12886,
											"end": 12932,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 12886,
											"end": 12932,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 12886,
											"end": 12932,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 12886,
											"end": 12932,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 12886,
											"end": 12932,
											"name": "LOG4",
											"source": 0
										},
										{
											"begin": 12768,
											"end": 12939,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 12768,
											"end": 12939,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 12768,
											"end": 12939,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 7540,
											"end": 7801,
											"name": "tag",
											"source": 0,
											"value": "108"
										},
										{
											"begin": 7540,
											"end": 7801,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 7633,
											"end": 7637,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 7649,
											"end": 7662,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 7665,
											"end": 7688,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "164"
										},
										{
											"begin": 7680,
											"end": 7687,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 7665,
											"end": 7679,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "47"
										},
										{
											"begin": 7665,
											"end": 7688,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 7665,
											"end": 7688,
											"name": "tag",
											"source": 0,
											"value": "164"
										},
										{
											"begin": 7665,
											"end": 7688,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 7649,
											"end": 7688,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 7649,
											"end": 7688,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 7717,
											"end": 7722,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 7706,
											"end": 7722,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 7706,
											"end": 7713,
											"name": "DUP5",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 7706,
											"end": 7722,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 7706,
											"end": 7722,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 7706,
											"end": 7758,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 7706,
											"end": 7758,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "166"
										},
										{
											"begin": 7706,
											"end": 7758,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 7706,
											"end": 7758,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 7726,
											"end": 7758,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "166"
										},
										{
											"begin": 7743,
											"end": 7748,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 7750,
											"end": 7757,
											"name": "DUP6",
											"source": 0
										},
										{
											"begin": 7726,
											"end": 7742,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "73"
										},
										{
											"begin": 7726,
											"end": 7758,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 7726,
											"end": 7758,
											"name": "tag",
											"source": 0,
											"value": "166"
										},
										{
											"begin": 7726,
											"end": 7758,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 7706,
											"end": 7793,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 7706,
											"end": 7793,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "167"
										},
										{
											"begin": 7706,
											"end": 7793,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 7706,
											"end": 7793,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 7786,
											"end": 7793,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 7762,
											"end": 7793,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 7762,
											"end": 7782,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "168"
										},
										{
											"begin": 7774,
											"end": 7781,
											"name": "DUP5",
											"source": 0
										},
										{
											"begin": 7762,
											"end": 7773,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "31"
										},
										{
											"begin": 7762,
											"end": 7782,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 7762,
											"end": 7782,
											"name": "tag",
											"source": 0,
											"value": "168"
										},
										{
											"begin": 7762,
											"end": 7782,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 7762,
											"end": 7793,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 7762,
											"end": 7793,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 7706,
											"end": 7793,
											"name": "tag",
											"source": 0,
											"value": "167"
										},
										{
											"begin": 7706,
											"end": 7793,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 7698,
											"end": 7794,
											"name": "SWAP5",
											"source": 0
										},
										{
											"begin": 7540,
											"end": 7801,
											"name": "SWAP4",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 7540,
											"end": 7801,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 11423,
											"end": 12656,
											"name": "tag",
											"source": 0,
											"value": "113"
										},
										{
											"begin": 11423,
											"end": 12656,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 11577,
											"end": 11581,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 11550,
											"end": 11581,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 11550,
											"end": 11573,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "170"
										},
										{
											"begin": 11565,
											"end": 11572,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 11550,
											"end": 11564,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "47"
										},
										{
											"begin": 11550,
											"end": 11573,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 11550,
											"end": 11573,
											"name": "tag",
											"source": 0,
											"value": "170"
										},
										{
											"begin": 11550,
											"end": 11573,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 11550,
											"end": 11581,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 11550,
											"end": 11581,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 11542,
											"end": 11623,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "171"
										},
										{
											"begin": 11542,
											"end": 11623,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 11542,
											"end": 11623,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 11542,
											"end": 11623,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "461BCD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E5"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 11542,
											"end": 11623,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 11542,
											"end": 11623,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 11542,
											"end": 11623,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 11542,
											"end": 11623,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 11542,
											"end": 11623,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "93"
										},
										{
											"begin": 11542,
											"end": 11623,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 11542,
											"end": 11623,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "173"
										},
										{
											"begin": 11542,
											"end": 11623,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 11542,
											"end": 11623,
											"name": "tag",
											"source": 0,
											"value": "171"
										},
										{
											"begin": 11542,
											"end": 11623,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 11641,
											"end": 11657,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 11641,
											"end": 11657,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 11633,
											"end": 11698,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "174"
										},
										{
											"begin": 11633,
											"end": 11698,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 11633,
											"end": 11698,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 11633,
											"end": 11698,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "461BCD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E5"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 11633,
											"end": 11698,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 11633,
											"end": 11698,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 8279,
											"end": 8281,
											"name": "PUSH",
											"source": 12,
											"value": "20"
										},
										{
											"begin": 11633,
											"end": 11698,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 11633,
											"end": 11698,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 11633,
											"end": 11698,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 8261,
											"end": 8282,
											"name": "MSTORE",
											"source": 12
										},
										{
											"begin": 8318,
											"end": 8320,
											"name": "PUSH",
											"source": 12,
											"value": "24"
										},
										{
											"begin": 8298,
											"end": 8316,
											"name": "DUP1",
											"source": 12
										},
										{
											"begin": 8298,
											"end": 8316,
											"name": "DUP3",
											"source": 12
										},
										{
											"begin": 8298,
											"end": 8316,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 8291,
											"end": 8321,
											"name": "MSTORE",
											"source": 12
										},
										{
											"begin": 8357,
											"end": 8391,
											"name": "PUSH",
											"source": 12,
											"value": "4552433732313A207472616E7366657220746F20746865207A65726F20616464"
										},
										{
											"begin": 8337,
											"end": 8355,
											"name": "PUSH",
											"source": 12,
											"value": "44"
										},
										{
											"begin": 8337,
											"end": 8355,
											"name": "DUP3",
											"source": 12
										},
										{
											"begin": 8337,
											"end": 8355,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 8330,
											"end": 8392,
											"name": "MSTORE",
											"source": 12
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "72657373"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 8408,
											"end": 8426,
											"name": "PUSH",
											"source": 12,
											"value": "64"
										},
										{
											"begin": 8408,
											"end": 8426,
											"name": "DUP3",
											"source": 12
										},
										{
											"begin": 8408,
											"end": 8426,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 8401,
											"end": 8435,
											"name": "MSTORE",
											"source": 12
										},
										{
											"begin": 8452,
											"end": 8471,
											"name": "PUSH",
											"source": 12,
											"value": "84"
										},
										{
											"begin": 8452,
											"end": 8471,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 11633,
											"end": 11698,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "93"
										},
										{
											"begin": 8077,
											"end": 8477,
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 11633,
											"end": 11698,
											"name": "tag",
											"source": 0,
											"value": "174"
										},
										{
											"begin": 11633,
											"end": 11698,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 11709,
											"end": 11751,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "177"
										},
										{
											"begin": 11730,
											"end": 11734,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 11736,
											"end": 11738,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 11740,
											"end": 11747,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 11749,
											"end": 11750,
											"name": "PUSH",
											"source": 0,
											"value": "1"
										},
										{
											"begin": 11709,
											"end": 11729,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "178"
										},
										{
											"begin": 11709,
											"end": 11751,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 11709,
											"end": 11751,
											"name": "tag",
											"source": 0,
											"value": "177"
										},
										{
											"begin": 11709,
											"end": 11751,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 11878,
											"end": 11882,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 11851,
											"end": 11882,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 11851,
											"end": 11874,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "179"
										},
										{
											"begin": 11866,
											"end": 11873,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 11851,
											"end": 11865,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "47"
										},
										{
											"begin": 11851,
											"end": 11874,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 11851,
											"end": 11874,
											"name": "tag",
											"source": 0,
											"value": "179"
										},
										{
											"begin": 11851,
											"end": 11874,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 11851,
											"end": 11882,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 11851,
											"end": 11882,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 11843,
											"end": 11924,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "180"
										},
										{
											"begin": 11843,
											"end": 11924,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 11843,
											"end": 11924,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 11843,
											"end": 11924,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "461BCD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E5"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 11843,
											"end": 11924,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 11843,
											"end": 11924,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 11843,
											"end": 11924,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 11843,
											"end": 11924,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 11843,
											"end": 11924,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "93"
										},
										{
											"begin": 11843,
											"end": 11924,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 11843,
											"end": 11924,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "173"
										},
										{
											"begin": 11843,
											"end": 11924,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 11843,
											"end": 11924,
											"name": "tag",
											"source": 0,
											"value": "180"
										},
										{
											"begin": 11843,
											"end": 11924,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 11993,
											"end": 12017,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 11993,
											"end": 12017,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 11993,
											"end": 12017,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 11993,
											"end": 12017,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 11993,
											"end": 12008,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 11993,
											"end": 12017,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 11993,
											"end": 12017,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 11993,
											"end": 12017,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 11993,
											"end": 12017,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 11993,
											"end": 12017,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 11993,
											"end": 12017,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 11993,
											"end": 12017,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 11993,
											"end": 12017,
											"name": "KECCAK256",
											"source": 0
										},
										{
											"begin": 11986,
											"end": 12017,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 11986,
											"end": 12017,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "NOT",
											"source": -1
										},
										{
											"begin": 11986,
											"end": 12017,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 11986,
											"end": 12017,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 11986,
											"end": 12017,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 11986,
											"end": 12017,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 11986,
											"end": 12017,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 11986,
											"end": 12017,
											"name": "SSTORE",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 12461,
											"end": 12476,
											"name": "DUP8",
											"source": 0
										},
										{
											"begin": 12461,
											"end": 12476,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 12461,
											"end": 12476,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 12461,
											"end": 12476,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 12461,
											"end": 12476,
											"name": "DUP7",
											"source": 0
										},
										{
											"begin": 12461,
											"end": 12476,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 12461,
											"end": 12470,
											"name": "PUSH",
											"source": 0,
											"value": "3"
										},
										{
											"begin": 12461,
											"end": 12476,
											"name": "DUP6",
											"source": 0
										},
										{
											"begin": 12461,
											"end": 12476,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 12461,
											"end": 12476,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 12461,
											"end": 12476,
											"name": "DUP7",
											"source": 0
										},
										{
											"begin": 12461,
											"end": 12476,
											"name": "KECCAK256",
											"source": 0
										},
										{
											"begin": 12461,
											"end": 12481,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 12461,
											"end": 12481,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "NOT",
											"source": -1
										},
										{
											"begin": 12461,
											"end": 12481,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 12461,
											"end": 12481,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 12461,
											"end": 12481,
											"name": "SSTORE",
											"source": 0
										},
										{
											"begin": 12495,
											"end": 12508,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 12495,
											"end": 12508,
											"name": "DUP8",
											"source": 0
										},
										{
											"begin": 12495,
											"end": 12508,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 12495,
											"end": 12508,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 12495,
											"end": 12508,
											"name": "DUP7",
											"source": 0
										},
										{
											"begin": 12495,
											"end": 12508,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 12495,
											"end": 12508,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 12495,
											"end": 12508,
											"name": "DUP7",
											"source": 0
										},
										{
											"begin": 12495,
											"end": 12508,
											"name": "KECCAK256",
											"source": 0
										},
										{
											"begin": 12495,
											"end": 12513,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 12495,
											"end": 12513,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 11986,
											"end": 12017,
											"name": "PUSH",
											"source": 0,
											"value": "1"
										},
										{
											"begin": 12495,
											"end": 12513,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 12495,
											"end": 12513,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 12495,
											"end": 12513,
											"name": "SSTORE",
											"source": 0
										},
										{
											"begin": 12533,
											"end": 12549,
											"name": "DUP7",
											"source": 0
										},
										{
											"begin": 12533,
											"end": 12549,
											"name": "DUP7",
											"source": 0
										},
										{
											"begin": 12533,
											"end": 12549,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 12533,
											"end": 12540,
											"name": "PUSH",
											"source": 0,
											"value": "2"
										},
										{
											"begin": 12533,
											"end": 12549,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 12533,
											"end": 12549,
											"name": "SWAP5",
											"source": 0
										},
										{
											"begin": 12533,
											"end": 12549,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 12533,
											"end": 12549,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 12533,
											"end": 12549,
											"name": "DUP6",
											"source": 0
										},
										{
											"begin": 12533,
											"end": 12549,
											"name": "KECCAK256",
											"source": 0
										},
										{
											"begin": 12533,
											"end": 12554,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 12533,
											"end": 12554,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 12533,
											"end": 12554,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 12533,
											"end": 12554,
											"name": "SWAP3",
											"source": 0
										},
										{
											"begin": 12533,
											"end": 12554,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 12533,
											"end": 12554,
											"name": "DUP5",
											"source": 0
										},
										{
											"begin": 12533,
											"end": 12554,
											"name": "OR",
											"source": 0
										},
										{
											"begin": 12533,
											"end": 12554,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 12533,
											"end": 12554,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 12533,
											"end": 12554,
											"name": "SSTORE",
											"source": 0
										},
										{
											"begin": 12570,
											"end": 12597,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 12570,
											"end": 12597,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 12009,
											"end": 12016,
											"name": "DUP5",
											"source": 0
										},
										{
											"begin": 12009,
											"end": 12016,
											"name": "SWAP4",
											"source": 0
										},
										{
											"begin": 12570,
											"end": 12597,
											"name": "PUSH",
											"source": 0,
											"value": "DDF252AD1BE2C89B69C2B068FC378DAA952BA7F163C4A11628F55A4DF523B3EF"
										},
										{
											"begin": 12570,
											"end": 12597,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 12570,
											"end": 12597,
											"name": "LOG4",
											"source": 0
										},
										{
											"begin": 3538,
											"end": 3874,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 3468,
											"end": 3874,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 3468,
											"end": 3874,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 3468,
											"end": 3874,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 13075,
											"end": 13382,
											"name": "tag",
											"source": 0,
											"value": "135"
										},
										{
											"begin": 13075,
											"end": 13382,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 13225,
											"end": 13233,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 13216,
											"end": 13233,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 13216,
											"end": 13221,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 13216,
											"end": 13233,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 13216,
											"end": 13233,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 13208,
											"end": 13263,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "186"
										},
										{
											"begin": 13208,
											"end": 13263,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 13208,
											"end": 13263,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 13208,
											"end": 13263,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "461BCD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E5"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 13208,
											"end": 13263,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 13208,
											"end": 13263,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 8684,
											"end": 8686,
											"name": "PUSH",
											"source": 12,
											"value": "20"
										},
										{
											"begin": 13208,
											"end": 13263,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 13208,
											"end": 13263,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 13208,
											"end": 13263,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 8666,
											"end": 8687,
											"name": "MSTORE",
											"source": 12
										},
										{
											"begin": 8723,
											"end": 8725,
											"name": "PUSH",
											"source": 12,
											"value": "19"
										},
										{
											"begin": 8703,
											"end": 8721,
											"name": "PUSH",
											"source": 12,
											"value": "24"
										},
										{
											"begin": 8703,
											"end": 8721,
											"name": "DUP3",
											"source": 12
										},
										{
											"begin": 8703,
											"end": 8721,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 8696,
											"end": 8726,
											"name": "MSTORE",
											"source": 12
										},
										{
											"begin": 8762,
											"end": 8789,
											"name": "PUSH",
											"source": 12,
											"value": "4552433732313A20617070726F766520746F2063616C6C657200000000000000"
										},
										{
											"begin": 8742,
											"end": 8760,
											"name": "PUSH",
											"source": 12,
											"value": "44"
										},
										{
											"begin": 8742,
											"end": 8760,
											"name": "DUP3",
											"source": 12
										},
										{
											"begin": 8742,
											"end": 8760,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 8735,
											"end": 8790,
											"name": "MSTORE",
											"source": 12
										},
										{
											"begin": 8807,
											"end": 8825,
											"name": "PUSH",
											"source": 12,
											"value": "64"
										},
										{
											"begin": 8807,
											"end": 8825,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 13208,
											"end": 13263,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "93"
										},
										{
											"begin": 8482,
											"end": 8831,
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 13208,
											"end": 13263,
											"name": "tag",
											"source": 0,
											"value": "186"
										},
										{
											"begin": 13208,
											"end": 13263,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 13273,
											"end": 13298,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 13273,
											"end": 13298,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 13273,
											"end": 13298,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 13273,
											"end": 13298,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 13273,
											"end": 13298,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 13273,
											"end": 13298,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 13273,
											"end": 13298,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 13273,
											"end": 13291,
											"name": "PUSH",
											"source": 0,
											"value": "5"
										},
										{
											"begin": 13273,
											"end": 13298,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 13273,
											"end": 13298,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 13273,
											"end": 13298,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 13273,
											"end": 13298,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 13273,
											"end": 13298,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 13273,
											"end": 13298,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 13273,
											"end": 13298,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 13273,
											"end": 13298,
											"name": "KECCAK256",
											"source": 0
										},
										{
											"begin": 13273,
											"end": 13308,
											"name": "SWAP5",
											"source": 0
										},
										{
											"begin": 13273,
											"end": 13308,
											"name": "DUP8",
											"source": 0
										},
										{
											"begin": 13273,
											"end": 13308,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 13273,
											"end": 13308,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 13273,
											"end": 13308,
											"name": "DUP5",
											"source": 0
										},
										{
											"begin": 13273,
											"end": 13308,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 13273,
											"end": 13308,
											"name": "SWAP5",
											"source": 0
										},
										{
											"begin": 13273,
											"end": 13308,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 13273,
											"end": 13308,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 13273,
											"end": 13308,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 13273,
											"end": 13308,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 13273,
											"end": 13308,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 13273,
											"end": 13308,
											"name": "KECCAK256",
											"source": 0
										},
										{
											"begin": 13273,
											"end": 13319,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 13273,
											"end": 13319,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "FF"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "NOT",
											"source": -1
										},
										{
											"begin": 13273,
											"end": 13319,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 13273,
											"end": 13319,
											"name": "DUP7",
											"source": 0
										},
										{
											"begin": 13273,
											"end": 13319,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 13273,
											"end": 13319,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 13273,
											"end": 13319,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 13273,
											"end": 13319,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 13273,
											"end": 13319,
											"name": "OR",
											"source": 0
										},
										{
											"begin": 13273,
											"end": 13319,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 13273,
											"end": 13319,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 13273,
											"end": 13319,
											"name": "SSTORE",
											"source": 0
										},
										{
											"begin": 13334,
											"end": 13375,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 13334,
											"end": 13375,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 540,
											"end": 581,
											"name": "SWAP2",
											"source": 12
										},
										{
											"begin": 540,
											"end": 581,
											"name": "DUP3",
											"source": 12
										},
										{
											"begin": 540,
											"end": 581,
											"name": "MSTORE",
											"source": 12
										},
										{
											"begin": 13334,
											"end": 13375,
											"name": "PUSH",
											"source": 0,
											"value": "17307EAB39AB6107E8899845AD3D59BD9653F200F220920489CA2B5937696C31"
										},
										{
											"begin": 13334,
											"end": 13375,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 513,
											"end": 531,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 13334,
											"end": 13375,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 13334,
											"end": 13375,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 13334,
											"end": 13375,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 13334,
											"end": 13375,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 13334,
											"end": 13375,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 13334,
											"end": 13375,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 13334,
											"end": 13375,
											"name": "LOG3",
											"source": 0
										},
										{
											"begin": 13075,
											"end": 13382,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 13075,
											"end": 13382,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 13075,
											"end": 13382,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 13075,
											"end": 13382,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 6424,
											"end": 6729,
											"name": "tag",
											"source": 0,
											"value": "142"
										},
										{
											"begin": 6424,
											"end": 6729,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 6574,
											"end": 6602,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "191"
										},
										{
											"begin": 6584,
											"end": 6588,
											"name": "DUP5",
											"source": 0
										},
										{
											"begin": 6590,
											"end": 6592,
											"name": "DUP5",
											"source": 0
										},
										{
											"begin": 6594,
											"end": 6601,
											"name": "DUP5",
											"source": 0
										},
										{
											"begin": 6574,
											"end": 6583,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "113"
										},
										{
											"begin": 6574,
											"end": 6602,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 6574,
											"end": 6602,
											"name": "tag",
											"source": 0,
											"value": "191"
										},
										{
											"begin": 6574,
											"end": 6602,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 6620,
											"end": 6667,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "192"
										},
										{
											"begin": 6643,
											"end": 6647,
											"name": "DUP5",
											"source": 0
										},
										{
											"begin": 6649,
											"end": 6651,
											"name": "DUP5",
											"source": 0
										},
										{
											"begin": 6653,
											"end": 6660,
											"name": "DUP5",
											"source": 0
										},
										{
											"begin": 6662,
											"end": 6666,
											"name": "DUP5",
											"source": 0
										},
										{
											"begin": 6620,
											"end": 6642,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "193"
										},
										{
											"begin": 6620,
											"end": 6667,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 6620,
											"end": 6667,
											"name": "tag",
											"source": 0,
											"value": "192"
										},
										{
											"begin": 6620,
											"end": 6667,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 6612,
											"end": 6722,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "141"
										},
										{
											"begin": 6612,
											"end": 6722,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 6612,
											"end": 6722,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 6612,
											"end": 6722,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "461BCD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E5"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 6612,
											"end": 6722,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 6612,
											"end": 6722,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 6612,
											"end": 6722,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 6612,
											"end": 6722,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 6612,
											"end": 6722,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "93"
										},
										{
											"begin": 6612,
											"end": 6722,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 6612,
											"end": 6722,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "196"
										},
										{
											"begin": 6612,
											"end": 6722,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 415,
											"end": 1111,
											"name": "tag",
											"source": 7,
											"value": "150"
										},
										{
											"begin": 415,
											"end": 1111,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 471,
											"end": 484,
											"name": "PUSH",
											"source": 7,
											"value": "60"
										},
										{
											"begin": 520,
											"end": 534,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 537,
											"end": 554,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "199"
										},
										{
											"begin": 548,
											"end": 553,
											"name": "DUP4",
											"source": 7
										},
										{
											"begin": 537,
											"end": 547,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "200"
										},
										{
											"begin": 537,
											"end": 554,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 537,
											"end": 554,
											"name": "tag",
											"source": 7,
											"value": "199"
										},
										{
											"begin": 537,
											"end": 554,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 557,
											"end": 558,
											"name": "PUSH",
											"source": 7,
											"value": "1"
										},
										{
											"begin": 537,
											"end": 558,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 520,
											"end": 558,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 520,
											"end": 558,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 572,
											"end": 592,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 606,
											"end": 612,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 595,
											"end": 613,
											"name": "PUSH",
											"source": 7,
											"value": "FFFFFFFFFFFFFFFF"
										},
										{
											"begin": 595,
											"end": 613,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 595,
											"end": 613,
											"name": "GT",
											"source": 7
										},
										{
											"begin": 595,
											"end": 613,
											"name": "ISZERO",
											"source": 7
										},
										{
											"begin": 595,
											"end": 613,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "202"
										},
										{
											"begin": 595,
											"end": 613,
											"name": "JUMPI",
											"source": 7
										},
										{
											"begin": 595,
											"end": 613,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "202"
										},
										{
											"begin": 595,
											"end": 613,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "203"
										},
										{
											"begin": 595,
											"end": 613,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 595,
											"end": 613,
											"name": "tag",
											"source": 7,
											"value": "202"
										},
										{
											"begin": 595,
											"end": 613,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 595,
											"end": 613,
											"name": "PUSH",
											"source": 7,
											"value": "40"
										},
										{
											"begin": 595,
											"end": 613,
											"name": "MLOAD",
											"source": 7
										},
										{
											"begin": 595,
											"end": 613,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 595,
											"end": 613,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 595,
											"end": 613,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 595,
											"end": 613,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 595,
											"end": 613,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 595,
											"end": 613,
											"name": "PUSH",
											"source": 7,
											"value": "1F"
										},
										{
											"begin": 595,
											"end": 613,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 595,
											"end": 613,
											"name": "PUSH",
											"source": 7,
											"value": "1F"
										},
										{
											"begin": 595,
											"end": 613,
											"name": "NOT",
											"source": 7
										},
										{
											"begin": 595,
											"end": 613,
											"name": "AND",
											"source": 7
										},
										{
											"begin": 595,
											"end": 613,
											"name": "PUSH",
											"source": 7,
											"value": "20"
										},
										{
											"begin": 595,
											"end": 613,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 595,
											"end": 613,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 595,
											"end": 613,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 595,
											"end": 613,
											"name": "PUSH",
											"source": 7,
											"value": "40"
										},
										{
											"begin": 595,
											"end": 613,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 595,
											"end": 613,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 595,
											"end": 613,
											"name": "ISZERO",
											"source": 7
										},
										{
											"begin": 595,
											"end": 613,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "204"
										},
										{
											"begin": 595,
											"end": 613,
											"name": "JUMPI",
											"source": 7
										},
										{
											"begin": 595,
											"end": 613,
											"name": "PUSH",
											"source": 7,
											"value": "20"
										},
										{
											"begin": 595,
											"end": 613,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 595,
											"end": 613,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 595,
											"end": 613,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 595,
											"end": 613,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 595,
											"end": 613,
											"name": "CALLDATASIZE",
											"source": 7
										},
										{
											"begin": 595,
											"end": 613,
											"name": "DUP4",
											"source": 7
										},
										{
											"begin": 595,
											"end": 613,
											"name": "CALLDATACOPY",
											"source": 7
										},
										{
											"begin": 595,
											"end": 613,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 595,
											"end": 613,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 595,
											"end": 613,
											"name": "tag",
											"source": 7,
											"value": "204"
										},
										{
											"begin": 595,
											"end": 613,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 572,
											"end": 613,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 733,
											"end": 761,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 733,
											"end": 761,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 733,
											"end": 761,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 749,
											"end": 751,
											"name": "PUSH",
											"source": 7,
											"value": "20"
										},
										{
											"begin": 733,
											"end": 761,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 788,
											"end": 1068,
											"name": "tag",
											"source": 7,
											"value": "205"
										},
										{
											"begin": 788,
											"end": 1068,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "NOT",
											"source": -1
										},
										{
											"begin": 819,
											"end": 824,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "181899199A1A9B1B9C1CB0B131B232B3"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "81"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 953,
											"end": 955,
											"name": "PUSH",
											"source": 7,
											"value": "A"
										},
										{
											"begin": 942,
											"end": 956,
											"name": "DUP7",
											"source": 7
										},
										{
											"begin": 942,
											"end": 956,
											"name": "MOD",
											"source": 7
										},
										{
											"begin": 937,
											"end": 967,
											"name": "BYTE",
											"source": 7
										},
										{
											"begin": 819,
											"end": 824,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 924,
											"end": 968,
											"name": "MSTORE8",
											"source": 7
										},
										{
											"begin": 1012,
											"end": 1014,
											"name": "PUSH",
											"source": 7,
											"value": "A"
										},
										{
											"begin": 1003,
											"end": 1014,
											"name": "DUP6",
											"source": 7
										},
										{
											"begin": 1003,
											"end": 1014,
											"name": "DIV",
											"source": 7
										},
										{
											"begin": 1003,
											"end": 1014,
											"name": "SWAP5",
											"source": 7
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 1032,
											"end": 1053,
											"name": "DUP5",
											"source": 7
										},
										{
											"begin": 788,
											"end": 1068,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "205"
										},
										{
											"begin": 1032,
											"end": 1053,
											"name": "JUMPI",
											"source": 7
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 1088,
											"end": 1094,
											"name": "SWAP4",
											"source": 7
										},
										{
											"begin": 415,
											"end": 1111,
											"name": "SWAP3",
											"source": 7
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 415,
											"end": 1111,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 15698,
											"end": 16094,
											"name": "tag",
											"source": 0,
											"value": "178"
										},
										{
											"begin": 15698,
											"end": 16094,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 15882,
											"end": 15883,
											"name": "PUSH",
											"source": 0,
											"value": "1"
										},
										{
											"begin": 15870,
											"end": 15879,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 15870,
											"end": 15883,
											"name": "GT",
											"source": 0
										},
										{
											"begin": 15866,
											"end": 16088,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 15866,
											"end": 16088,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "141"
										},
										{
											"begin": 15866,
											"end": 16088,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 15903,
											"end": 15921,
											"name": "DUP5",
											"source": 0
										},
										{
											"begin": 15903,
											"end": 15921,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 15903,
											"end": 15921,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 15899,
											"end": 15984,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "215"
										},
										{
											"begin": 15899,
											"end": 15984,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 15941,
											"end": 15956,
											"name": "DUP5",
											"source": 0
										},
										{
											"begin": 15941,
											"end": 15956,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 15941,
											"end": 15956,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 15941,
											"end": 15956,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 15941,
											"end": 15956,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 15941,
											"end": 15956,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 15941,
											"end": 15950,
											"name": "PUSH",
											"source": 0,
											"value": "3"
										},
										{
											"begin": 15941,
											"end": 15956,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 15941,
											"end": 15956,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 15941,
											"end": 15956,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 15941,
											"end": 15956,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 15941,
											"end": 15956,
											"name": "KECCAK256",
											"source": 0
										},
										{
											"begin": 15941,
											"end": 15969,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 15941,
											"end": 15969,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 15960,
											"end": 15969,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 15960,
											"end": 15969,
											"name": "SWAP3",
											"source": 0
										},
										{
											"begin": 15941,
											"end": 15956,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 15941,
											"end": 15969,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "216"
										},
										{
											"begin": 15941,
											"end": 15969,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 15960,
											"end": 15969,
											"name": "DUP5",
											"source": 0
										},
										{
											"begin": 15960,
											"end": 15969,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 15941,
											"end": 15969,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "217"
										},
										{
											"begin": 15941,
											"end": 15969,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 15941,
											"end": 15969,
											"name": "tag",
											"source": 0,
											"value": "216"
										},
										{
											"begin": 15941,
											"end": 15969,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 15941,
											"end": 15969,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 15941,
											"end": 15969,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 15941,
											"end": 15969,
											"name": "SSTORE",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 15899,
											"end": 15984,
											"name": "tag",
											"source": 0,
											"value": "215"
										},
										{
											"begin": 15899,
											"end": 15984,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 16001,
											"end": 16017,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 16001,
											"end": 16017,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 16001,
											"end": 16017,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 15997,
											"end": 16078,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "141"
										},
										{
											"begin": 15997,
											"end": 16078,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 16037,
											"end": 16050,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 16037,
											"end": 16050,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 16037,
											"end": 16050,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 16037,
											"end": 16050,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 16037,
											"end": 16050,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 16037,
											"end": 16050,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 16037,
											"end": 16046,
											"name": "PUSH",
											"source": 0,
											"value": "3"
										},
										{
											"begin": 16037,
											"end": 16050,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 16037,
											"end": 16050,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 16037,
											"end": 16050,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 16037,
											"end": 16050,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 16037,
											"end": 16050,
											"name": "KECCAK256",
											"source": 0
										},
										{
											"begin": 16037,
											"end": 16063,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 16037,
											"end": 16063,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 16054,
											"end": 16063,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 16054,
											"end": 16063,
											"name": "SWAP3",
											"source": 0
										},
										{
											"begin": 16037,
											"end": 16050,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 16037,
											"end": 16063,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "219"
										},
										{
											"begin": 16037,
											"end": 16063,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 16054,
											"end": 16063,
											"name": "DUP5",
											"source": 0
										},
										{
											"begin": 16054,
											"end": 16063,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 16037,
											"end": 16063,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "220"
										},
										{
											"begin": 16037,
											"end": 16063,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 16037,
											"end": 16063,
											"name": "tag",
											"source": 0,
											"value": "219"
										},
										{
											"begin": 16037,
											"end": 16063,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 16037,
											"end": 16063,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 16037,
											"end": 16063,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 16037,
											"end": 16063,
											"name": "SSTORE",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 15698,
											"end": 16094,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 15698,
											"end": 16094,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 15698,
											"end": 16094,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 15698,
											"end": 16094,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 15698,
											"end": 16094,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 14151,
											"end": 14982,
											"name": "tag",
											"source": 0,
											"value": "193"
										},
										{
											"begin": 14151,
											"end": 14982,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 14300,
											"end": 14304,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 14320,
											"end": 14333,
											"name": "DUP5",
											"source": 0
										},
										{
											"begin": 14320,
											"end": 14333,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 1465,
											"end": 1484,
											"name": "EXTCODESIZE",
											"source": 4
										},
										{
											"begin": 1465,
											"end": 1488,
											"name": "ISZERO",
											"source": 4
										},
										{
											"begin": 14316,
											"end": 14976,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "225"
										},
										{
											"begin": 14316,
											"end": 14976,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 14355,
											"end": 14426,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 14355,
											"end": 14426,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A85BD01"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 14355,
											"end": 14426,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 14355,
											"end": 14426,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 14355,
											"end": 14391,
											"name": "DUP6",
											"source": 0
										},
										{
											"begin": 14355,
											"end": 14391,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 14355,
											"end": 14391,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 14355,
											"end": 14391,
											"name": "PUSH",
											"source": 0,
											"value": "150B7A02"
										},
										{
											"begin": 14355,
											"end": 14391,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 14355,
											"end": 14426,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "227"
										},
										{
											"begin": 14355,
											"end": 14426,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 719,
											"end": 729,
											"name": "CALLER",
											"source": 5
										},
										{
											"begin": 719,
											"end": 729,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 14406,
											"end": 14410,
											"name": "DUP10",
											"source": 0
										},
										{
											"begin": 14406,
											"end": 14410,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 14412,
											"end": 14419,
											"name": "DUP9",
											"source": 0
										},
										{
											"begin": 14412,
											"end": 14419,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 14421,
											"end": 14425,
											"name": "DUP9",
											"source": 0
										},
										{
											"begin": 14421,
											"end": 14425,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 14355,
											"end": 14426,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 14355,
											"end": 14426,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 14355,
											"end": 14426,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "228"
										},
										{
											"begin": 14355,
											"end": 14426,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 14355,
											"end": 14426,
											"name": "tag",
											"source": 0,
											"value": "227"
										},
										{
											"begin": 14355,
											"end": 14426,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 14355,
											"end": 14426,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 14355,
											"end": 14426,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 14355,
											"end": 14426,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 14355,
											"end": 14426,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 14355,
											"end": 14426,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 14355,
											"end": 14426,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 14355,
											"end": 14426,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 14355,
											"end": 14426,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 14355,
											"end": 14426,
											"name": "DUP8",
											"source": 0
										},
										{
											"begin": 14355,
											"end": 14426,
											"name": "GAS",
											"source": 0
										},
										{
											"begin": 14355,
											"end": 14426,
											"name": "CALL",
											"source": 0
										},
										{
											"begin": 14355,
											"end": 14426,
											"name": "SWAP3",
											"source": 0
										},
										{
											"begin": 14355,
											"end": 14426,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 14355,
											"end": 14426,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 14355,
											"end": 14426,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 14355,
											"end": 14426,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 14355,
											"end": 14426,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 14355,
											"end": 14426,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "229"
										},
										{
											"begin": 14355,
											"end": 14426,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 14355,
											"end": 14426,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 14355,
											"end": 14426,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 14355,
											"end": 14426,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 14355,
											"end": 14426,
											"name": "PUSH",
											"source": 0,
											"value": "1F"
										},
										{
											"begin": 14355,
											"end": 14426,
											"name": "RETURNDATASIZE",
											"source": 0
										},
										{
											"begin": 14355,
											"end": 14426,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 14355,
											"end": 14426,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 14355,
											"end": 14426,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1F"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "NOT",
											"source": -1
										},
										{
											"begin": 14355,
											"end": 14426,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 14355,
											"end": 14426,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 14355,
											"end": 14426,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 14355,
											"end": 14426,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 14355,
											"end": 14426,
											"name": "SWAP3",
											"source": 0
										},
										{
											"begin": 14355,
											"end": 14426,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 14355,
											"end": 14426,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "230"
										},
										{
											"begin": 14355,
											"end": 14426,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 14355,
											"end": 14426,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 14355,
											"end": 14426,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 14355,
											"end": 14426,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 14355,
											"end": 14426,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "231"
										},
										{
											"begin": 14355,
											"end": 14426,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 14355,
											"end": 14426,
											"name": "tag",
											"source": 0,
											"value": "230"
										},
										{
											"begin": 14355,
											"end": 14426,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 14355,
											"end": 14426,
											"name": "PUSH",
											"source": 0,
											"value": "1"
										},
										{
											"begin": 14355,
											"end": 14426,
											"name": "tag",
											"source": 0,
											"value": "229"
										},
										{
											"begin": 14355,
											"end": 14426,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 14351,
											"end": 14924,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "232"
										},
										{
											"begin": 14351,
											"end": 14924,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 14351,
											"end": 14924,
											"name": "RETURNDATASIZE",
											"source": 0
										},
										{
											"begin": 14351,
											"end": 14924,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 14351,
											"end": 14924,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 14351,
											"end": 14924,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 14351,
											"end": 14924,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "237"
										},
										{
											"begin": 14351,
											"end": 14924,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 14351,
											"end": 14924,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 14351,
											"end": 14924,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 14351,
											"end": 14924,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 14351,
											"end": 14924,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 14351,
											"end": 14924,
											"name": "PUSH",
											"source": 0,
											"value": "1F"
										},
										{
											"begin": 14351,
											"end": 14924,
											"name": "NOT",
											"source": 0
										},
										{
											"begin": 14351,
											"end": 14924,
											"name": "PUSH",
											"source": 0,
											"value": "3F"
										},
										{
											"begin": 14351,
											"end": 14924,
											"name": "RETURNDATASIZE",
											"source": 0
										},
										{
											"begin": 14351,
											"end": 14924,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 14351,
											"end": 14924,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 14351,
											"end": 14924,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 14351,
											"end": 14924,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 14351,
											"end": 14924,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 14351,
											"end": 14924,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 14351,
											"end": 14924,
											"name": "RETURNDATASIZE",
											"source": 0
										},
										{
											"begin": 14351,
											"end": 14924,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 14351,
											"end": 14924,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 14351,
											"end": 14924,
											"name": "RETURNDATASIZE",
											"source": 0
										},
										{
											"begin": 14351,
											"end": 14924,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 14351,
											"end": 14924,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 14351,
											"end": 14924,
											"name": "DUP5",
											"source": 0
										},
										{
											"begin": 14351,
											"end": 14924,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 14351,
											"end": 14924,
											"name": "RETURNDATACOPY",
											"source": 0
										},
										{
											"begin": 14351,
											"end": 14924,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "236"
										},
										{
											"begin": 14351,
											"end": 14924,
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 14351,
											"end": 14924,
											"name": "tag",
											"source": 0,
											"value": "237"
										},
										{
											"begin": 14351,
											"end": 14924,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 14351,
											"end": 14924,
											"name": "PUSH",
											"source": 0,
											"value": "60"
										},
										{
											"begin": 14351,
											"end": 14924,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 14351,
											"end": 14924,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 14351,
											"end": 14924,
											"name": "tag",
											"source": 0,
											"value": "236"
										},
										{
											"begin": 14351,
											"end": 14924,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 14351,
											"end": 14924,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 14593,
											"end": 14599,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 14593,
											"end": 14606,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 14610,
											"end": 14611,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 14593,
											"end": 14611,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 14589,
											"end": 14910,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "238"
										},
										{
											"begin": 14589,
											"end": 14910,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 14635,
											"end": 14695,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 14635,
											"end": 14695,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "461BCD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E5"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 14635,
											"end": 14695,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 14635,
											"end": 14695,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 14635,
											"end": 14695,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 14635,
											"end": 14695,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 14635,
											"end": 14695,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "93"
										},
										{
											"begin": 14635,
											"end": 14695,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 14635,
											"end": 14695,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "196"
										},
										{
											"begin": 14635,
											"end": 14695,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 14589,
											"end": 14910,
											"name": "tag",
											"source": 0,
											"value": "238"
										},
										{
											"begin": 14589,
											"end": 14910,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 14862,
											"end": 14868,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 14856,
											"end": 14869,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 14847,
											"end": 14853,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 14843,
											"end": 14845,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 14839,
											"end": 14854,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 14832,
											"end": 14870,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 14351,
											"end": 14924,
											"name": "tag",
											"source": 0,
											"value": "232"
										},
										{
											"begin": 14351,
											"end": 14924,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "NOT",
											"source": -1
										},
										{
											"begin": 14476,
											"end": 14527,
											"name": "AND",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A85BD01"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 14476,
											"end": 14527,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 14476,
											"end": 14527,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 14469,
											"end": 14527,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "167"
										},
										{
											"begin": 14469,
											"end": 14527,
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 14316,
											"end": 14976,
											"name": "tag",
											"source": 0,
											"value": "225"
										},
										{
											"begin": 14316,
											"end": 14976,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 14961,
											"end": 14965,
											"name": "PUSH",
											"source": 0,
											"value": "1"
										},
										{
											"begin": 14151,
											"end": 14982,
											"name": "SWAP5",
											"source": 0
										},
										{
											"begin": 14151,
											"end": 14982,
											"name": "SWAP4",
											"source": 0
										},
										{
											"begin": 14151,
											"end": 14982,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 14151,
											"end": 14982,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 14151,
											"end": 14982,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 14151,
											"end": 14982,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 14151,
											"end": 14982,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 9889,
											"end": 10779,
											"name": "tag",
											"source": 10,
											"value": "200"
										},
										{
											"begin": 9889,
											"end": 10779,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 9942,
											"end": 9949,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 9942,
											"end": 9949,
											"name": "DUP1",
											"source": 10
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "184F03E93FF9F4DAA797ED6E38ED64BF6A1F01"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "40"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 10017,
											"end": 10032,
											"name": "DUP4",
											"source": 10
										},
										{
											"begin": 10017,
											"end": 10032,
											"name": "LT",
											"source": 10
										},
										{
											"begin": 10013,
											"end": 10112,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "244"
										},
										{
											"begin": 10013,
											"end": 10112,
											"name": "JUMPI",
											"source": 10
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "184F03E93FF9F4DAA797ED6E38ED64BF6A1F01"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "40"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 10052,
											"end": 10067,
											"name": "DUP4",
											"source": 10
										},
										{
											"begin": 10052,
											"end": 10067,
											"name": "DIV",
											"source": 10
										},
										{
											"begin": 10052,
											"end": 10067,
											"name": "SWAP3",
											"source": 10
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 10095,
											"end": 10097,
											"name": "PUSH",
											"source": 10,
											"value": "40"
										},
										{
											"begin": 10085,
											"end": 10097,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 10013,
											"end": 10112,
											"name": "tag",
											"source": 10,
											"value": "244"
										},
										{
											"begin": 10013,
											"end": 10112,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 10138,
											"end": 10144,
											"name": "PUSH",
											"source": 10,
											"value": "4EE2D6D415B85ACEF8100000000"
										},
										{
											"begin": 10129,
											"end": 10134,
											"name": "DUP4",
											"source": 10
										},
										{
											"begin": 10129,
											"end": 10144,
											"name": "LT",
											"source": 10
										},
										{
											"begin": 10125,
											"end": 10224,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "247"
										},
										{
											"begin": 10125,
											"end": 10224,
											"name": "JUMPI",
											"source": 10
										},
										{
											"begin": 10173,
											"end": 10179,
											"name": "PUSH",
											"source": 10,
											"value": "4EE2D6D415B85ACEF8100000000"
										},
										{
											"begin": 10164,
											"end": 10179,
											"name": "DUP4",
											"source": 10
										},
										{
											"begin": 10164,
											"end": 10179,
											"name": "DIV",
											"source": 10
										},
										{
											"begin": 10164,
											"end": 10179,
											"name": "SWAP3",
											"source": 10
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 10207,
											"end": 10209,
											"name": "PUSH",
											"source": 10,
											"value": "20"
										},
										{
											"begin": 10197,
											"end": 10209,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 10125,
											"end": 10224,
											"name": "tag",
											"source": 10,
											"value": "247"
										},
										{
											"begin": 10125,
											"end": 10224,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 10250,
											"end": 10256,
											"name": "PUSH",
											"source": 10,
											"value": "2386F26FC10000"
										},
										{
											"begin": 10241,
											"end": 10246,
											"name": "DUP4",
											"source": 10
										},
										{
											"begin": 10241,
											"end": 10256,
											"name": "LT",
											"source": 10
										},
										{
											"begin": 10237,
											"end": 10336,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "250"
										},
										{
											"begin": 10237,
											"end": 10336,
											"name": "JUMPI",
											"source": 10
										},
										{
											"begin": 10285,
											"end": 10291,
											"name": "PUSH",
											"source": 10,
											"value": "2386F26FC10000"
										},
										{
											"begin": 10276,
											"end": 10291,
											"name": "DUP4",
											"source": 10
										},
										{
											"begin": 10276,
											"end": 10291,
											"name": "DIV",
											"source": 10
										},
										{
											"begin": 10276,
											"end": 10291,
											"name": "SWAP3",
											"source": 10
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 10319,
											"end": 10321,
											"name": "PUSH",
											"source": 10,
											"value": "10"
										},
										{
											"begin": 10309,
											"end": 10321,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 10237,
											"end": 10336,
											"name": "tag",
											"source": 10,
											"value": "250"
										},
										{
											"begin": 10237,
											"end": 10336,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 10362,
											"end": 10367,
											"name": "PUSH",
											"source": 10,
											"value": "5F5E100"
										},
										{
											"begin": 10353,
											"end": 10358,
											"name": "DUP4",
											"source": 10
										},
										{
											"begin": 10353,
											"end": 10367,
											"name": "LT",
											"source": 10
										},
										{
											"begin": 10349,
											"end": 10445,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "253"
										},
										{
											"begin": 10349,
											"end": 10445,
											"name": "JUMPI",
											"source": 10
										},
										{
											"begin": 10396,
											"end": 10401,
											"name": "PUSH",
											"source": 10,
											"value": "5F5E100"
										},
										{
											"begin": 10387,
											"end": 10401,
											"name": "DUP4",
											"source": 10
										},
										{
											"begin": 10387,
											"end": 10401,
											"name": "DIV",
											"source": 10
										},
										{
											"begin": 10387,
											"end": 10401,
											"name": "SWAP3",
											"source": 10
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 10429,
											"end": 10430,
											"name": "PUSH",
											"source": 10,
											"value": "8"
										},
										{
											"begin": 10419,
											"end": 10430,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 10349,
											"end": 10445,
											"name": "tag",
											"source": 10,
											"value": "253"
										},
										{
											"begin": 10349,
											"end": 10445,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 10471,
											"end": 10476,
											"name": "PUSH",
											"source": 10,
											"value": "2710"
										},
										{
											"begin": 10462,
											"end": 10467,
											"name": "DUP4",
											"source": 10
										},
										{
											"begin": 10462,
											"end": 10476,
											"name": "LT",
											"source": 10
										},
										{
											"begin": 10458,
											"end": 10554,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "256"
										},
										{
											"begin": 10458,
											"end": 10554,
											"name": "JUMPI",
											"source": 10
										},
										{
											"begin": 10505,
											"end": 10510,
											"name": "PUSH",
											"source": 10,
											"value": "2710"
										},
										{
											"begin": 10496,
											"end": 10510,
											"name": "DUP4",
											"source": 10
										},
										{
											"begin": 10496,
											"end": 10510,
											"name": "DIV",
											"source": 10
										},
										{
											"begin": 10496,
											"end": 10510,
											"name": "SWAP3",
											"source": 10
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 10538,
											"end": 10539,
											"name": "PUSH",
											"source": 10,
											"value": "4"
										},
										{
											"begin": 10528,
											"end": 10539,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 10458,
											"end": 10554,
											"name": "tag",
											"source": 10,
											"value": "256"
										},
										{
											"begin": 10458,
											"end": 10554,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 10580,
											"end": 10585,
											"name": "PUSH",
											"source": 10,
											"value": "64"
										},
										{
											"begin": 10571,
											"end": 10576,
											"name": "DUP4",
											"source": 10
										},
										{
											"begin": 10571,
											"end": 10585,
											"name": "LT",
											"source": 10
										},
										{
											"begin": 10567,
											"end": 10663,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "259"
										},
										{
											"begin": 10567,
											"end": 10663,
											"name": "JUMPI",
											"source": 10
										},
										{
											"begin": 10614,
											"end": 10619,
											"name": "PUSH",
											"source": 10,
											"value": "64"
										},
										{
											"begin": 10605,
											"end": 10619,
											"name": "DUP4",
											"source": 10
										},
										{
											"begin": 10605,
											"end": 10619,
											"name": "DIV",
											"source": 10
										},
										{
											"begin": 10605,
											"end": 10619,
											"name": "SWAP3",
											"source": 10
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 10647,
											"end": 10648,
											"name": "PUSH",
											"source": 10,
											"value": "2"
										},
										{
											"begin": 10637,
											"end": 10648,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 10567,
											"end": 10663,
											"name": "tag",
											"source": 10,
											"value": "259"
										},
										{
											"begin": 10567,
											"end": 10663,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 10689,
											"end": 10694,
											"name": "PUSH",
											"source": 10,
											"value": "A"
										},
										{
											"begin": 10680,
											"end": 10685,
											"name": "DUP4",
											"source": 10
										},
										{
											"begin": 10680,
											"end": 10694,
											"name": "LT",
											"source": 10
										},
										{
											"begin": 10676,
											"end": 10740,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "78"
										},
										{
											"begin": 10676,
											"end": 10740,
											"name": "JUMPI",
											"source": 10
										},
										{
											"begin": 10724,
											"end": 10725,
											"name": "PUSH",
											"source": 10,
											"value": "1"
										},
										{
											"begin": 10714,
											"end": 10725,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 10766,
											"end": 10772,
											"name": "SWAP3",
											"source": 10
										},
										{
											"begin": 9889,
											"end": 10779,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 9889,
											"end": 10779,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 14,
											"end": 145,
											"name": "tag",
											"source": 12,
											"value": "264"
										},
										{
											"begin": 14,
											"end": 145,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "NOT",
											"source": -1
										},
										{
											"begin": 88,
											"end": 120,
											"name": "DUP2",
											"source": 12
										},
										{
											"begin": 88,
											"end": 120,
											"name": "AND",
											"source": 12
										},
										{
											"begin": 78,
											"end": 121,
											"name": "DUP2",
											"source": 12
										},
										{
											"begin": 78,
											"end": 121,
											"name": "EQ",
											"source": 12
										},
										{
											"begin": 68,
											"end": 139,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "158"
										},
										{
											"begin": 68,
											"end": 139,
											"name": "JUMPI",
											"source": 12
										},
										{
											"begin": 135,
											"end": 136,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 132,
											"end": 133,
											"name": "DUP1",
											"source": 12
										},
										{
											"begin": 125,
											"end": 137,
											"name": "REVERT",
											"source": 12
										},
										{
											"begin": 150,
											"end": 395,
											"name": "tag",
											"source": 12,
											"value": "20"
										},
										{
											"begin": 150,
											"end": 395,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 208,
											"end": 214,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 261,
											"end": 263,
											"name": "PUSH",
											"source": 12,
											"value": "20"
										},
										{
											"begin": 249,
											"end": 258,
											"name": "DUP3",
											"source": 12
										},
										{
											"begin": 240,
											"end": 247,
											"name": "DUP5",
											"source": 12
										},
										{
											"begin": 236,
											"end": 259,
											"name": "SUB",
											"source": 12
										},
										{
											"begin": 232,
											"end": 264,
											"name": "SLT",
											"source": 12
										},
										{
											"begin": 229,
											"end": 281,
											"name": "ISZERO",
											"source": 12
										},
										{
											"begin": 229,
											"end": 281,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "273"
										},
										{
											"begin": 229,
											"end": 281,
											"name": "JUMPI",
											"source": 12
										},
										{
											"begin": 277,
											"end": 278,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 274,
											"end": 275,
											"name": "DUP1",
											"source": 12
										},
										{
											"begin": 267,
											"end": 279,
											"name": "REVERT",
											"source": 12
										},
										{
											"begin": 229,
											"end": 281,
											"name": "tag",
											"source": 12,
											"value": "273"
										},
										{
											"begin": 229,
											"end": 281,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 316,
											"end": 325,
											"name": "DUP2",
											"source": 12
										},
										{
											"begin": 303,
											"end": 326,
											"name": "CALLDATALOAD",
											"source": 12
										},
										{
											"begin": 335,
											"end": 365,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "148"
										},
										{
											"begin": 359,
											"end": 364,
											"name": "DUP2",
											"source": 12
										},
										{
											"begin": 335,
											"end": 365,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "264"
										},
										{
											"begin": 335,
											"end": 365,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 592,
											"end": 842,
											"name": "tag",
											"source": 12,
											"value": "265"
										},
										{
											"begin": 592,
											"end": 842,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 677,
											"end": 678,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 687,
											"end": 800,
											"name": "tag",
											"source": 12,
											"value": "277"
										},
										{
											"begin": 687,
											"end": 800,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 701,
											"end": 707,
											"name": "DUP4",
											"source": 12
										},
										{
											"begin": 698,
											"end": 699,
											"name": "DUP2",
											"source": 12
										},
										{
											"begin": 695,
											"end": 708,
											"name": "LT",
											"source": 12
										},
										{
											"begin": 687,
											"end": 800,
											"name": "ISZERO",
											"source": 12
										},
										{
											"begin": 687,
											"end": 800,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "279"
										},
										{
											"begin": 687,
											"end": 800,
											"name": "JUMPI",
											"source": 12
										},
										{
											"begin": 777,
											"end": 788,
											"name": "DUP2",
											"source": 12
										},
										{
											"begin": 777,
											"end": 788,
											"name": "DUP2",
											"source": 12
										},
										{
											"begin": 777,
											"end": 788,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 771,
											"end": 789,
											"name": "MLOAD",
											"source": 12
										},
										{
											"begin": 758,
											"end": 769,
											"name": "DUP4",
											"source": 12
										},
										{
											"begin": 758,
											"end": 769,
											"name": "DUP3",
											"source": 12
										},
										{
											"begin": 758,
											"end": 769,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 751,
											"end": 790,
											"name": "MSTORE",
											"source": 12
										},
										{
											"begin": 723,
											"end": 725,
											"name": "PUSH",
											"source": 12,
											"value": "20"
										},
										{
											"begin": 716,
											"end": 726,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 687,
											"end": 800,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "277"
										},
										{
											"begin": 687,
											"end": 800,
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 687,
											"end": 800,
											"name": "tag",
											"source": 12,
											"value": "279"
										},
										{
											"begin": 687,
											"end": 800,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 834,
											"end": 835,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 816,
											"end": 832,
											"name": "SWAP2",
											"source": 12
										},
										{
											"begin": 816,
											"end": 832,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 809,
											"end": 836,
											"name": "MSTORE",
											"source": 12
										},
										{
											"begin": 592,
											"end": 842,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 847,
											"end": 1118,
											"name": "tag",
											"source": 12,
											"value": "266"
										},
										{
											"begin": 847,
											"end": 1118,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 889,
											"end": 892,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 927,
											"end": 932,
											"name": "DUP2",
											"source": 12
										},
										{
											"begin": 921,
											"end": 933,
											"name": "MLOAD",
											"source": 12
										},
										{
											"begin": 954,
											"end": 960,
											"name": "DUP1",
											"source": 12
										},
										{
											"begin": 949,
											"end": 952,
											"name": "DUP5",
											"source": 12
										},
										{
											"begin": 942,
											"end": 961,
											"name": "MSTORE",
											"source": 12
										},
										{
											"begin": 970,
											"end": 1046,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "281"
										},
										{
											"begin": 1039,
											"end": 1045,
											"name": "DUP2",
											"source": 12
										},
										{
											"begin": 1032,
											"end": 1036,
											"name": "PUSH",
											"source": 12,
											"value": "20"
										},
										{
											"begin": 1027,
											"end": 1030,
											"name": "DUP7",
											"source": 12
										},
										{
											"begin": 1023,
											"end": 1037,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 1016,
											"end": 1020,
											"name": "PUSH",
											"source": 12,
											"value": "20"
										},
										{
											"begin": 1009,
											"end": 1014,
											"name": "DUP7",
											"source": 12
										},
										{
											"begin": 1005,
											"end": 1021,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 970,
											"end": 1046,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "265"
										},
										{
											"begin": 970,
											"end": 1046,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 970,
											"end": 1046,
											"name": "tag",
											"source": 12,
											"value": "281"
										},
										{
											"begin": 970,
											"end": 1046,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 1100,
											"end": 1102,
											"name": "PUSH",
											"source": 12,
											"value": "1F"
										},
										{
											"begin": 1079,
											"end": 1094,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1F"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "NOT",
											"source": -1
										},
										{
											"begin": 1075,
											"end": 1104,
											"name": "AND",
											"source": 12
										},
										{
											"begin": 1066,
											"end": 1105,
											"name": "SWAP3",
											"source": 12
										},
										{
											"begin": 1066,
											"end": 1105,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 1066,
											"end": 1105,
											"name": "SWAP3",
											"source": 12
										},
										{
											"begin": 1066,
											"end": 1105,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 1107,
											"end": 1111,
											"name": "PUSH",
											"source": 12,
											"value": "20"
										},
										{
											"begin": 1062,
											"end": 1112,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 1062,
											"end": 1112,
											"name": "SWAP3",
											"source": 12
										},
										{
											"begin": 847,
											"end": 1118,
											"name": "SWAP2",
											"source": 12
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 847,
											"end": 1118,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 1123,
											"end": 1343,
											"name": "tag",
											"source": 12,
											"value": "27"
										},
										{
											"begin": 1123,
											"end": 1343,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 1272,
											"end": 1274,
											"name": "PUSH",
											"source": 12,
											"value": "20"
										},
										{
											"begin": 1261,
											"end": 1270,
											"name": "DUP2",
											"source": 12
										},
										{
											"begin": 1254,
											"end": 1275,
											"name": "MSTORE",
											"source": 12
										},
										{
											"begin": 1235,
											"end": 1239,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 1292,
											"end": 1337,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "148"
										},
										{
											"begin": 1333,
											"end": 1335,
											"name": "PUSH",
											"source": 12,
											"value": "20"
										},
										{
											"begin": 1322,
											"end": 1331,
											"name": "DUP4",
											"source": 12
										},
										{
											"begin": 1318,
											"end": 1336,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 1310,
											"end": 1316,
											"name": "DUP5",
											"source": 12
										},
										{
											"begin": 1292,
											"end": 1337,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "266"
										},
										{
											"begin": 1292,
											"end": 1337,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 1348,
											"end": 1528,
											"name": "tag",
											"source": 12,
											"value": "30"
										},
										{
											"begin": 1348,
											"end": 1528,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 1407,
											"end": 1413,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 1460,
											"end": 1462,
											"name": "PUSH",
											"source": 12,
											"value": "20"
										},
										{
											"begin": 1448,
											"end": 1457,
											"name": "DUP3",
											"source": 12
										},
										{
											"begin": 1439,
											"end": 1446,
											"name": "DUP5",
											"source": 12
										},
										{
											"begin": 1435,
											"end": 1458,
											"name": "SUB",
											"source": 12
										},
										{
											"begin": 1431,
											"end": 1463,
											"name": "SLT",
											"source": 12
										},
										{
											"begin": 1428,
											"end": 1480,
											"name": "ISZERO",
											"source": 12
										},
										{
											"begin": 1428,
											"end": 1480,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "285"
										},
										{
											"begin": 1428,
											"end": 1480,
											"name": "JUMPI",
											"source": 12
										},
										{
											"begin": 1476,
											"end": 1477,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 1473,
											"end": 1474,
											"name": "DUP1",
											"source": 12
										},
										{
											"begin": 1466,
											"end": 1478,
											"name": "REVERT",
											"source": 12
										},
										{
											"begin": 1428,
											"end": 1480,
											"name": "tag",
											"source": 12,
											"value": "285"
										},
										{
											"begin": 1428,
											"end": 1480,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 1499,
											"end": 1522,
											"name": "CALLDATALOAD",
											"source": 12
										},
										{
											"begin": 1499,
											"end": 1522,
											"name": "SWAP2",
											"source": 12
										},
										{
											"begin": 1348,
											"end": 1528,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 1348,
											"end": 1528,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 1741,
											"end": 1914,
											"name": "tag",
											"source": 12,
											"value": "267"
										},
										{
											"begin": 1741,
											"end": 1914,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 1809,
											"end": 1829,
											"name": "DUP1",
											"source": 12
										},
										{
											"begin": 1809,
											"end": 1829,
											"name": "CALLDATALOAD",
											"source": 12
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 1858,
											"end": 1889,
											"name": "DUP2",
											"source": 12
										},
										{
											"begin": 1858,
											"end": 1889,
											"name": "AND",
											"source": 12
										},
										{
											"begin": 1848,
											"end": 1890,
											"name": "DUP2",
											"source": 12
										},
										{
											"begin": 1848,
											"end": 1890,
											"name": "EQ",
											"source": 12
										},
										{
											"begin": 1838,
											"end": 1908,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "288"
										},
										{
											"begin": 1838,
											"end": 1908,
											"name": "JUMPI",
											"source": 12
										},
										{
											"begin": 1904,
											"end": 1905,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 1901,
											"end": 1902,
											"name": "DUP1",
											"source": 12
										},
										{
											"begin": 1894,
											"end": 1906,
											"name": "REVERT",
											"source": 12
										},
										{
											"begin": 1838,
											"end": 1908,
											"name": "tag",
											"source": 12,
											"value": "288"
										},
										{
											"begin": 1838,
											"end": 1908,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 1741,
											"end": 1914,
											"name": "SWAP2",
											"source": 12
										},
										{
											"begin": 1741,
											"end": 1914,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 1741,
											"end": 1914,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 1741,
											"end": 1914,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 1919,
											"end": 2173,
											"name": "tag",
											"source": 12,
											"value": "36"
										},
										{
											"begin": 1919,
											"end": 2173,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 1987,
											"end": 1993,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 1995,
											"end": 2001,
											"name": "DUP1",
											"source": 12
										},
										{
											"begin": 2048,
											"end": 2050,
											"name": "PUSH",
											"source": 12,
											"value": "40"
										},
										{
											"begin": 2036,
											"end": 2045,
											"name": "DUP4",
											"source": 12
										},
										{
											"begin": 2027,
											"end": 2034,
											"name": "DUP6",
											"source": 12
										},
										{
											"begin": 2023,
											"end": 2046,
											"name": "SUB",
											"source": 12
										},
										{
											"begin": 2019,
											"end": 2051,
											"name": "SLT",
											"source": 12
										},
										{
											"begin": 2016,
											"end": 2068,
											"name": "ISZERO",
											"source": 12
										},
										{
											"begin": 2016,
											"end": 2068,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "290"
										},
										{
											"begin": 2016,
											"end": 2068,
											"name": "JUMPI",
											"source": 12
										},
										{
											"begin": 2064,
											"end": 2065,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 2061,
											"end": 2062,
											"name": "DUP1",
											"source": 12
										},
										{
											"begin": 2054,
											"end": 2066,
											"name": "REVERT",
											"source": 12
										},
										{
											"begin": 2016,
											"end": 2068,
											"name": "tag",
											"source": 12,
											"value": "290"
										},
										{
											"begin": 2016,
											"end": 2068,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 2087,
											"end": 2116,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "291"
										},
										{
											"begin": 2106,
											"end": 2115,
											"name": "DUP4",
											"source": 12
										},
										{
											"begin": 2087,
											"end": 2116,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "267"
										},
										{
											"begin": 2087,
											"end": 2116,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 2087,
											"end": 2116,
											"name": "tag",
											"source": 12,
											"value": "291"
										},
										{
											"begin": 2087,
											"end": 2116,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 2077,
											"end": 2116,
											"name": "SWAP5",
											"source": 12
										},
										{
											"begin": 2163,
											"end": 2165,
											"name": "PUSH",
											"source": 12,
											"value": "20"
										},
										{
											"begin": 2148,
											"end": 2166,
											"name": "SWAP4",
											"source": 12
										},
										{
											"begin": 2148,
											"end": 2166,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 2148,
											"end": 2166,
											"name": "SWAP4",
											"source": 12
										},
										{
											"begin": 2148,
											"end": 2166,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 2135,
											"end": 2167,
											"name": "CALLDATALOAD",
											"source": 12
										},
										{
											"begin": 2135,
											"end": 2167,
											"name": "SWAP4",
											"source": 12
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 1919,
											"end": 2173,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 2178,
											"end": 2506,
											"name": "tag",
											"source": 12,
											"value": "40"
										},
										{
											"begin": 2178,
											"end": 2506,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 2255,
											"end": 2261,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 2263,
											"end": 2269,
											"name": "DUP1",
											"source": 12
										},
										{
											"begin": 2271,
											"end": 2277,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 2324,
											"end": 2326,
											"name": "PUSH",
											"source": 12,
											"value": "60"
										},
										{
											"begin": 2312,
											"end": 2321,
											"name": "DUP5",
											"source": 12
										},
										{
											"begin": 2303,
											"end": 2310,
											"name": "DUP7",
											"source": 12
										},
										{
											"begin": 2299,
											"end": 2322,
											"name": "SUB",
											"source": 12
										},
										{
											"begin": 2295,
											"end": 2327,
											"name": "SLT",
											"source": 12
										},
										{
											"begin": 2292,
											"end": 2344,
											"name": "ISZERO",
											"source": 12
										},
										{
											"begin": 2292,
											"end": 2344,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "293"
										},
										{
											"begin": 2292,
											"end": 2344,
											"name": "JUMPI",
											"source": 12
										},
										{
											"begin": 2340,
											"end": 2341,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 2337,
											"end": 2338,
											"name": "DUP1",
											"source": 12
										},
										{
											"begin": 2330,
											"end": 2342,
											"name": "REVERT",
											"source": 12
										},
										{
											"begin": 2292,
											"end": 2344,
											"name": "tag",
											"source": 12,
											"value": "293"
										},
										{
											"begin": 2292,
											"end": 2344,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 2363,
											"end": 2392,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "294"
										},
										{
											"begin": 2382,
											"end": 2391,
											"name": "DUP5",
											"source": 12
										},
										{
											"begin": 2363,
											"end": 2392,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "267"
										},
										{
											"begin": 2363,
											"end": 2392,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 2363,
											"end": 2392,
											"name": "tag",
											"source": 12,
											"value": "294"
										},
										{
											"begin": 2363,
											"end": 2392,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 2353,
											"end": 2392,
											"name": "SWAP3",
											"source": 12
										},
										{
											"begin": 2353,
											"end": 2392,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 2411,
											"end": 2449,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "295"
										},
										{
											"begin": 2445,
											"end": 2447,
											"name": "PUSH",
											"source": 12,
											"value": "20"
										},
										{
											"begin": 2434,
											"end": 2443,
											"name": "DUP6",
											"source": 12
										},
										{
											"begin": 2430,
											"end": 2448,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 2411,
											"end": 2449,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "267"
										},
										{
											"begin": 2411,
											"end": 2449,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 2411,
											"end": 2449,
											"name": "tag",
											"source": 12,
											"value": "295"
										},
										{
											"begin": 2411,
											"end": 2449,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 2401,
											"end": 2449,
											"name": "SWAP2",
											"source": 12
										},
										{
											"begin": 2401,
											"end": 2449,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 2496,
											"end": 2498,
											"name": "PUSH",
											"source": 12,
											"value": "40"
										},
										{
											"begin": 2485,
											"end": 2494,
											"name": "DUP5",
											"source": 12
										},
										{
											"begin": 2481,
											"end": 2499,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 2468,
											"end": 2500,
											"name": "CALLDATALOAD",
											"source": 12
										},
										{
											"begin": 2458,
											"end": 2500,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 2458,
											"end": 2500,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 2178,
											"end": 2506,
											"name": "SWAP3",
											"source": 12
										},
										{
											"begin": 2178,
											"end": 2506,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 2178,
											"end": 2506,
											"name": "SWAP3",
											"source": 12
										},
										{
											"begin": 2178,
											"end": 2506,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 2178,
											"end": 2506,
											"name": "SWAP3",
											"source": 12
										},
										{
											"begin": 2178,
											"end": 2506,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 2511,
											"end": 2697,
											"name": "tag",
											"source": 12,
											"value": "51"
										},
										{
											"begin": 2511,
											"end": 2697,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 2570,
											"end": 2576,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 2623,
											"end": 2625,
											"name": "PUSH",
											"source": 12,
											"value": "20"
										},
										{
											"begin": 2611,
											"end": 2620,
											"name": "DUP3",
											"source": 12
										},
										{
											"begin": 2602,
											"end": 2609,
											"name": "DUP5",
											"source": 12
										},
										{
											"begin": 2598,
											"end": 2621,
											"name": "SUB",
											"source": 12
										},
										{
											"begin": 2594,
											"end": 2626,
											"name": "SLT",
											"source": 12
										},
										{
											"begin": 2591,
											"end": 2643,
											"name": "ISZERO",
											"source": 12
										},
										{
											"begin": 2591,
											"end": 2643,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "297"
										},
										{
											"begin": 2591,
											"end": 2643,
											"name": "JUMPI",
											"source": 12
										},
										{
											"begin": 2639,
											"end": 2640,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 2636,
											"end": 2637,
											"name": "DUP1",
											"source": 12
										},
										{
											"begin": 2629,
											"end": 2641,
											"name": "REVERT",
											"source": 12
										},
										{
											"begin": 2591,
											"end": 2643,
											"name": "tag",
											"source": 12,
											"value": "297"
										},
										{
											"begin": 2591,
											"end": 2643,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 2662,
											"end": 2691,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "148"
										},
										{
											"begin": 2681,
											"end": 2690,
											"name": "DUP3",
											"source": 12
										},
										{
											"begin": 2662,
											"end": 2691,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "267"
										},
										{
											"begin": 2662,
											"end": 2691,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 2884,
											"end": 3231,
											"name": "tag",
											"source": 12,
											"value": "60"
										},
										{
											"begin": 2884,
											"end": 3231,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 2949,
											"end": 2955,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 2957,
											"end": 2963,
											"name": "DUP1",
											"source": 12
										},
										{
											"begin": 3010,
											"end": 3012,
											"name": "PUSH",
											"source": 12,
											"value": "40"
										},
										{
											"begin": 2998,
											"end": 3007,
											"name": "DUP4",
											"source": 12
										},
										{
											"begin": 2989,
											"end": 2996,
											"name": "DUP6",
											"source": 12
										},
										{
											"begin": 2985,
											"end": 3008,
											"name": "SUB",
											"source": 12
										},
										{
											"begin": 2981,
											"end": 3013,
											"name": "SLT",
											"source": 12
										},
										{
											"begin": 2978,
											"end": 3030,
											"name": "ISZERO",
											"source": 12
										},
										{
											"begin": 2978,
											"end": 3030,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "301"
										},
										{
											"begin": 2978,
											"end": 3030,
											"name": "JUMPI",
											"source": 12
										},
										{
											"begin": 3026,
											"end": 3027,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 3023,
											"end": 3024,
											"name": "DUP1",
											"source": 12
										},
										{
											"begin": 3016,
											"end": 3028,
											"name": "REVERT",
											"source": 12
										},
										{
											"begin": 2978,
											"end": 3030,
											"name": "tag",
											"source": 12,
											"value": "301"
										},
										{
											"begin": 2978,
											"end": 3030,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 3049,
											"end": 3078,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "302"
										},
										{
											"begin": 3068,
											"end": 3077,
											"name": "DUP4",
											"source": 12
										},
										{
											"begin": 3049,
											"end": 3078,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "267"
										},
										{
											"begin": 3049,
											"end": 3078,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 3049,
											"end": 3078,
											"name": "tag",
											"source": 12,
											"value": "302"
										},
										{
											"begin": 3049,
											"end": 3078,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 3039,
											"end": 3078,
											"name": "SWAP2",
											"source": 12
										},
										{
											"begin": 3039,
											"end": 3078,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 3128,
											"end": 3130,
											"name": "PUSH",
											"source": 12,
											"value": "20"
										},
										{
											"begin": 3117,
											"end": 3126,
											"name": "DUP4",
											"source": 12
										},
										{
											"begin": 3113,
											"end": 3131,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 3100,
											"end": 3132,
											"name": "CALLDATALOAD",
											"source": 12
										},
										{
											"begin": 3175,
											"end": 3180,
											"name": "DUP1",
											"source": 12
										},
										{
											"begin": 3168,
											"end": 3181,
											"name": "ISZERO",
											"source": 12
										},
										{
											"begin": 3161,
											"end": 3182,
											"name": "ISZERO",
											"source": 12
										},
										{
											"begin": 3154,
											"end": 3159,
											"name": "DUP2",
											"source": 12
										},
										{
											"begin": 3151,
											"end": 3183,
											"name": "EQ",
											"source": 12
										},
										{
											"begin": 3141,
											"end": 3201,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "303"
										},
										{
											"begin": 3141,
											"end": 3201,
											"name": "JUMPI",
											"source": 12
										},
										{
											"begin": 3197,
											"end": 3198,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 3194,
											"end": 3195,
											"name": "DUP1",
											"source": 12
										},
										{
											"begin": 3187,
											"end": 3199,
											"name": "REVERT",
											"source": 12
										},
										{
											"begin": 3141,
											"end": 3201,
											"name": "tag",
											"source": 12,
											"value": "303"
										},
										{
											"begin": 3141,
											"end": 3201,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 3220,
											"end": 3225,
											"name": "DUP1",
											"source": 12
										},
										{
											"begin": 3210,
											"end": 3225,
											"name": "SWAP2",
											"source": 12
										},
										{
											"begin": 3210,
											"end": 3225,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 3210,
											"end": 3225,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 2884,
											"end": 3231,
											"name": "SWAP3",
											"source": 12
										},
										{
											"begin": 2884,
											"end": 3231,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 2884,
											"end": 3231,
											"name": "SWAP3",
											"source": 12
										},
										{
											"begin": 2884,
											"end": 3231,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 2884,
											"end": 3231,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 2884,
											"end": 3231,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 3236,
											"end": 3363,
											"name": "tag",
											"source": 12,
											"value": "203"
										},
										{
											"begin": 3236,
											"end": 3363,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 3297,
											"end": 3307,
											"name": "PUSH",
											"source": 12,
											"value": "4E487B71"
										},
										{
											"begin": 3292,
											"end": 3295,
											"name": "PUSH",
											"source": 12,
											"value": "E0"
										},
										{
											"begin": 3288,
											"end": 3308,
											"name": "SHL",
											"source": 12
										},
										{
											"begin": 3285,
											"end": 3286,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 3278,
											"end": 3309,
											"name": "MSTORE",
											"source": 12
										},
										{
											"begin": 3328,
											"end": 3332,
											"name": "PUSH",
											"source": 12,
											"value": "41"
										},
										{
											"begin": 3325,
											"end": 3326,
											"name": "PUSH",
											"source": 12,
											"value": "4"
										},
										{
											"begin": 3318,
											"end": 3333,
											"name": "MSTORE",
											"source": 12
										},
										{
											"begin": 3352,
											"end": 3356,
											"name": "PUSH",
											"source": 12,
											"value": "24"
										},
										{
											"begin": 3349,
											"end": 3350,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 3342,
											"end": 3357,
											"name": "REVERT",
											"source": 12
										},
										{
											"begin": 3368,
											"end": 4506,
											"name": "tag",
											"source": 12,
											"value": "64"
										},
										{
											"begin": 3368,
											"end": 4506,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 3463,
											"end": 3469,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 3471,
											"end": 3477,
											"name": "DUP1",
											"source": 12
										},
										{
											"begin": 3479,
											"end": 3485,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 3487,
											"end": 3493,
											"name": "DUP1",
											"source": 12
										},
										{
											"begin": 3540,
											"end": 3543,
											"name": "PUSH",
											"source": 12,
											"value": "80"
										},
										{
											"begin": 3528,
											"end": 3537,
											"name": "DUP6",
											"source": 12
										},
										{
											"begin": 3519,
											"end": 3526,
											"name": "DUP8",
											"source": 12
										},
										{
											"begin": 3515,
											"end": 3538,
											"name": "SUB",
											"source": 12
										},
										{
											"begin": 3511,
											"end": 3544,
											"name": "SLT",
											"source": 12
										},
										{
											"begin": 3508,
											"end": 3561,
											"name": "ISZERO",
											"source": 12
										},
										{
											"begin": 3508,
											"end": 3561,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "306"
										},
										{
											"begin": 3508,
											"end": 3561,
											"name": "JUMPI",
											"source": 12
										},
										{
											"begin": 3557,
											"end": 3558,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 3554,
											"end": 3555,
											"name": "DUP1",
											"source": 12
										},
										{
											"begin": 3547,
											"end": 3559,
											"name": "REVERT",
											"source": 12
										},
										{
											"begin": 3508,
											"end": 3561,
											"name": "tag",
											"source": 12,
											"value": "306"
										},
										{
											"begin": 3508,
											"end": 3561,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 3580,
											"end": 3609,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "307"
										},
										{
											"begin": 3599,
											"end": 3608,
											"name": "DUP6",
											"source": 12
										},
										{
											"begin": 3580,
											"end": 3609,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "267"
										},
										{
											"begin": 3580,
											"end": 3609,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 3580,
											"end": 3609,
											"name": "tag",
											"source": 12,
											"value": "307"
										},
										{
											"begin": 3580,
											"end": 3609,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 3570,
											"end": 3609,
											"name": "SWAP4",
											"source": 12
										},
										{
											"begin": 3570,
											"end": 3609,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 3628,
											"end": 3666,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "308"
										},
										{
											"begin": 3662,
											"end": 3664,
											"name": "PUSH",
											"source": 12,
											"value": "20"
										},
										{
											"begin": 3651,
											"end": 3660,
											"name": "DUP7",
											"source": 12
										},
										{
											"begin": 3647,
											"end": 3665,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 3628,
											"end": 3666,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "267"
										},
										{
											"begin": 3628,
											"end": 3666,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 3628,
											"end": 3666,
											"name": "tag",
											"source": 12,
											"value": "308"
										},
										{
											"begin": 3628,
											"end": 3666,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 3618,
											"end": 3666,
											"name": "SWAP3",
											"source": 12
										},
										{
											"begin": 3618,
											"end": 3666,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 3713,
											"end": 3715,
											"name": "PUSH",
											"source": 12,
											"value": "40"
										},
										{
											"begin": 3702,
											"end": 3711,
											"name": "DUP6",
											"source": 12
										},
										{
											"begin": 3698,
											"end": 3716,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 3685,
											"end": 3717,
											"name": "CALLDATALOAD",
											"source": 12
										},
										{
											"begin": 3675,
											"end": 3717,
											"name": "SWAP2",
											"source": 12
										},
										{
											"begin": 3675,
											"end": 3717,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 3768,
											"end": 3770,
											"name": "PUSH",
											"source": 12,
											"value": "60"
										},
										{
											"begin": 3757,
											"end": 3766,
											"name": "DUP6",
											"source": 12
										},
										{
											"begin": 3753,
											"end": 3771,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 3740,
											"end": 3772,
											"name": "CALLDATALOAD",
											"source": 12
										},
										{
											"begin": 3791,
											"end": 3809,
											"name": "PUSH",
											"source": 12,
											"value": "FFFFFFFFFFFFFFFF"
										},
										{
											"begin": 3832,
											"end": 3834,
											"name": "DUP1",
											"source": 12
										},
										{
											"begin": 3824,
											"end": 3830,
											"name": "DUP3",
											"source": 12
										},
										{
											"begin": 3821,
											"end": 3835,
											"name": "GT",
											"source": 12
										},
										{
											"begin": 3818,
											"end": 3852,
											"name": "ISZERO",
											"source": 12
										},
										{
											"begin": 3818,
											"end": 3852,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "309"
										},
										{
											"begin": 3818,
											"end": 3852,
											"name": "JUMPI",
											"source": 12
										},
										{
											"begin": 3848,
											"end": 3849,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 3845,
											"end": 3846,
											"name": "DUP1",
											"source": 12
										},
										{
											"begin": 3838,
											"end": 3850,
											"name": "REVERT",
											"source": 12
										},
										{
											"begin": 3818,
											"end": 3852,
											"name": "tag",
											"source": 12,
											"value": "309"
										},
										{
											"begin": 3818,
											"end": 3852,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 3886,
											"end": 3892,
											"name": "DUP2",
											"source": 12
										},
										{
											"begin": 3875,
											"end": 3884,
											"name": "DUP8",
											"source": 12
										},
										{
											"begin": 3871,
											"end": 3893,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 3861,
											"end": 3893,
											"name": "SWAP2",
											"source": 12
										},
										{
											"begin": 3861,
											"end": 3893,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 3931,
											"end": 3938,
											"name": "DUP8",
											"source": 12
										},
										{
											"begin": 3924,
											"end": 3928,
											"name": "PUSH",
											"source": 12,
											"value": "1F"
										},
										{
											"begin": 3920,
											"end": 3922,
											"name": "DUP4",
											"source": 12
										},
										{
											"begin": 3916,
											"end": 3929,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 3912,
											"end": 3939,
											"name": "SLT",
											"source": 12
										},
										{
											"begin": 3902,
											"end": 3957,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "310"
										},
										{
											"begin": 3902,
											"end": 3957,
											"name": "JUMPI",
											"source": 12
										},
										{
											"begin": 3953,
											"end": 3954,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 3950,
											"end": 3951,
											"name": "DUP1",
											"source": 12
										},
										{
											"begin": 3943,
											"end": 3955,
											"name": "REVERT",
											"source": 12
										},
										{
											"begin": 3902,
											"end": 3957,
											"name": "tag",
											"source": 12,
											"value": "310"
										},
										{
											"begin": 3902,
											"end": 3957,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 3989,
											"end": 3991,
											"name": "DUP2",
											"source": 12
										},
										{
											"begin": 3976,
											"end": 3992,
											"name": "CALLDATALOAD",
											"source": 12
										},
										{
											"begin": 4011,
											"end": 4013,
											"name": "DUP2",
											"source": 12
										},
										{
											"begin": 4007,
											"end": 4009,
											"name": "DUP2",
											"source": 12
										},
										{
											"begin": 4004,
											"end": 4014,
											"name": "GT",
											"source": 12
										},
										{
											"begin": 4001,
											"end": 4037,
											"name": "ISZERO",
											"source": 12
										},
										{
											"begin": 4001,
											"end": 4037,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "312"
										},
										{
											"begin": 4001,
											"end": 4037,
											"name": "JUMPI",
											"source": 12
										},
										{
											"begin": 4017,
											"end": 4035,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "312"
										},
										{
											"begin": 4017,
											"end": 4035,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "203"
										},
										{
											"begin": 4017,
											"end": 4035,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 4017,
											"end": 4035,
											"name": "tag",
											"source": 12,
											"value": "312"
										},
										{
											"begin": 4017,
											"end": 4035,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 4092,
											"end": 4094,
											"name": "PUSH",
											"source": 12,
											"value": "40"
										},
										{
											"begin": 4086,
											"end": 4095,
											"name": "MLOAD",
											"source": 12
										},
										{
											"begin": 4060,
											"end": 4062,
											"name": "PUSH",
											"source": 12,
											"value": "1F"
										},
										{
											"begin": 4146,
											"end": 4159,
											"name": "DUP3",
											"source": 12
										},
										{
											"begin": 4146,
											"end": 4159,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1F"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "NOT",
											"source": -1
										},
										{
											"begin": 4142,
											"end": 4164,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 4142,
											"end": 4164,
											"name": "DUP2",
											"source": 12
										},
										{
											"begin": 4142,
											"end": 4164,
											"name": "AND",
											"source": 12
										},
										{
											"begin": 4166,
											"end": 4168,
											"name": "PUSH",
											"source": 12,
											"value": "3F"
										},
										{
											"begin": 4138,
											"end": 4169,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 4134,
											"end": 4174,
											"name": "AND",
											"source": 12
										},
										{
											"begin": 4122,
											"end": 4175,
											"name": "DUP2",
											"source": 12
										},
										{
											"begin": 4122,
											"end": 4175,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 4122,
											"end": 4175,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 4190,
											"end": 4208,
											"name": "DUP4",
											"source": 12
										},
										{
											"begin": 4190,
											"end": 4208,
											"name": "DUP3",
											"source": 12
										},
										{
											"begin": 4190,
											"end": 4208,
											"name": "GT",
											"source": 12
										},
										{
											"begin": 4210,
											"end": 4232,
											"name": "DUP2",
											"source": 12
										},
										{
											"begin": 4210,
											"end": 4232,
											"name": "DUP4",
											"source": 12
										},
										{
											"begin": 4210,
											"end": 4232,
											"name": "LT",
											"source": 12
										},
										{
											"begin": 4187,
											"end": 4233,
											"name": "OR",
											"source": 12
										},
										{
											"begin": 4184,
											"end": 4256,
											"name": "ISZERO",
											"source": 12
										},
										{
											"begin": 4184,
											"end": 4256,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "314"
										},
										{
											"begin": 4184,
											"end": 4256,
											"name": "JUMPI",
											"source": 12
										},
										{
											"begin": 4236,
											"end": 4254,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "314"
										},
										{
											"begin": 4236,
											"end": 4254,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "203"
										},
										{
											"begin": 4236,
											"end": 4254,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 4236,
											"end": 4254,
											"name": "tag",
											"source": 12,
											"value": "314"
										},
										{
											"begin": 4236,
											"end": 4254,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 4276,
											"end": 4286,
											"name": "DUP2",
											"source": 12
										},
										{
											"begin": 4272,
											"end": 4274,
											"name": "PUSH",
											"source": 12,
											"value": "40"
										},
										{
											"begin": 4265,
											"end": 4287,
											"name": "MSTORE",
											"source": 12
										},
										{
											"begin": 4311,
											"end": 4313,
											"name": "DUP3",
											"source": 12
										},
										{
											"begin": 4303,
											"end": 4309,
											"name": "DUP2",
											"source": 12
										},
										{
											"begin": 4296,
											"end": 4314,
											"name": "MSTORE",
											"source": 12
										},
										{
											"begin": 4351,
											"end": 4358,
											"name": "DUP11",
											"source": 12
										},
										{
											"begin": 4346,
											"end": 4348,
											"name": "PUSH",
											"source": 12,
											"value": "20"
										},
										{
											"begin": 4341,
											"end": 4343,
											"name": "DUP5",
											"source": 12
										},
										{
											"begin": 4337,
											"end": 4339,
											"name": "DUP8",
											"source": 12
										},
										{
											"begin": 4333,
											"end": 4344,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 4329,
											"end": 4349,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 4326,
											"end": 4359,
											"name": "GT",
											"source": 12
										},
										{
											"begin": 4323,
											"end": 4376,
											"name": "ISZERO",
											"source": 12
										},
										{
											"begin": 4323,
											"end": 4376,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "315"
										},
										{
											"begin": 4323,
											"end": 4376,
											"name": "JUMPI",
											"source": 12
										},
										{
											"begin": 4372,
											"end": 4373,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 4369,
											"end": 4370,
											"name": "DUP1",
											"source": 12
										},
										{
											"begin": 4362,
											"end": 4374,
											"name": "REVERT",
											"source": 12
										},
										{
											"begin": 4323,
											"end": 4376,
											"name": "tag",
											"source": 12,
											"value": "315"
										},
										{
											"begin": 4323,
											"end": 4376,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 4428,
											"end": 4430,
											"name": "DUP3",
											"source": 12
										},
										{
											"begin": 4423,
											"end": 4425,
											"name": "PUSH",
											"source": 12,
											"value": "20"
										},
										{
											"begin": 4419,
											"end": 4421,
											"name": "DUP7",
											"source": 12
										},
										{
											"begin": 4415,
											"end": 4426,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 4410,
											"end": 4412,
											"name": "PUSH",
											"source": 12,
											"value": "20"
										},
										{
											"begin": 4402,
											"end": 4408,
											"name": "DUP4",
											"source": 12
										},
										{
											"begin": 4398,
											"end": 4413,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 4385,
											"end": 4431,
											"name": "CALLDATACOPY",
											"source": 12
										},
										{
											"begin": 4473,
											"end": 4474,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 4468,
											"end": 4470,
											"name": "PUSH",
											"source": 12,
											"value": "20"
										},
										{
											"begin": 4463,
											"end": 4465,
											"name": "DUP5",
											"source": 12
										},
										{
											"begin": 4455,
											"end": 4461,
											"name": "DUP4",
											"source": 12
										},
										{
											"begin": 4451,
											"end": 4466,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 4447,
											"end": 4471,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 4440,
											"end": 4475,
											"name": "MSTORE",
											"source": 12
										},
										{
											"begin": 4494,
											"end": 4500,
											"name": "DUP1",
											"source": 12
										},
										{
											"begin": 4484,
											"end": 4500,
											"name": "SWAP6",
											"source": 12
										},
										{
											"begin": 4484,
											"end": 4500,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 4484,
											"end": 4500,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 4484,
											"end": 4500,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 4484,
											"end": 4500,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 4484,
											"end": 4500,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 4484,
											"end": 4500,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 3368,
											"end": 4506,
											"name": "SWAP3",
											"source": 12
										},
										{
											"begin": 3368,
											"end": 4506,
											"name": "SWAP6",
											"source": 12
										},
										{
											"begin": 3368,
											"end": 4506,
											"name": "SWAP2",
											"source": 12
										},
										{
											"begin": 3368,
											"end": 4506,
											"name": "SWAP5",
											"source": 12
										},
										{
											"begin": 3368,
											"end": 4506,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 3368,
											"end": 4506,
											"name": "SWAP3",
											"source": 12
										},
										{
											"begin": 3368,
											"end": 4506,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 3368,
											"end": 4506,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 4511,
											"end": 4771,
											"name": "tag",
											"source": 12,
											"value": "72"
										},
										{
											"begin": 4511,
											"end": 4771,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 4579,
											"end": 4585,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 4587,
											"end": 4593,
											"name": "DUP1",
											"source": 12
										},
										{
											"begin": 4640,
											"end": 4642,
											"name": "PUSH",
											"source": 12,
											"value": "40"
										},
										{
											"begin": 4628,
											"end": 4637,
											"name": "DUP4",
											"source": 12
										},
										{
											"begin": 4619,
											"end": 4626,
											"name": "DUP6",
											"source": 12
										},
										{
											"begin": 4615,
											"end": 4638,
											"name": "SUB",
											"source": 12
										},
										{
											"begin": 4611,
											"end": 4643,
											"name": "SLT",
											"source": 12
										},
										{
											"begin": 4608,
											"end": 4660,
											"name": "ISZERO",
											"source": 12
										},
										{
											"begin": 4608,
											"end": 4660,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "317"
										},
										{
											"begin": 4608,
											"end": 4660,
											"name": "JUMPI",
											"source": 12
										},
										{
											"begin": 4656,
											"end": 4657,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 4653,
											"end": 4654,
											"name": "DUP1",
											"source": 12
										},
										{
											"begin": 4646,
											"end": 4658,
											"name": "REVERT",
											"source": 12
										},
										{
											"begin": 4608,
											"end": 4660,
											"name": "tag",
											"source": 12,
											"value": "317"
										},
										{
											"begin": 4608,
											"end": 4660,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 4679,
											"end": 4708,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "318"
										},
										{
											"begin": 4698,
											"end": 4707,
											"name": "DUP4",
											"source": 12
										},
										{
											"begin": 4679,
											"end": 4708,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "267"
										},
										{
											"begin": 4679,
											"end": 4708,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 4679,
											"end": 4708,
											"name": "tag",
											"source": 12,
											"value": "318"
										},
										{
											"begin": 4679,
											"end": 4708,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 4669,
											"end": 4708,
											"name": "SWAP2",
											"source": 12
										},
										{
											"begin": 4669,
											"end": 4708,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 4727,
											"end": 4765,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "319"
										},
										{
											"begin": 4761,
											"end": 4763,
											"name": "PUSH",
											"source": 12,
											"value": "20"
										},
										{
											"begin": 4750,
											"end": 4759,
											"name": "DUP5",
											"source": 12
										},
										{
											"begin": 4746,
											"end": 4764,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 4727,
											"end": 4765,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "267"
										},
										{
											"begin": 4727,
											"end": 4765,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 4727,
											"end": 4765,
											"name": "tag",
											"source": 12,
											"value": "319"
										},
										{
											"begin": 4727,
											"end": 4765,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 4717,
											"end": 4765,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 4717,
											"end": 4765,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 4511,
											"end": 4771,
											"name": "SWAP3",
											"source": 12
										},
										{
											"begin": 4511,
											"end": 4771,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 4511,
											"end": 4771,
											"name": "SWAP3",
											"source": 12
										},
										{
											"begin": 4511,
											"end": 4771,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 4511,
											"end": 4771,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 4511,
											"end": 4771,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 4776,
											"end": 5156,
											"name": "tag",
											"source": 12,
											"value": "82"
										},
										{
											"begin": 4776,
											"end": 5156,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 4855,
											"end": 4856,
											"name": "PUSH",
											"source": 12,
											"value": "1"
										},
										{
											"begin": 4851,
											"end": 4863,
											"name": "DUP2",
											"source": 12
										},
										{
											"begin": 4851,
											"end": 4863,
											"name": "DUP2",
											"source": 12
										},
										{
											"begin": 4851,
											"end": 4863,
											"name": "SHR",
											"source": 12
										},
										{
											"begin": 4851,
											"end": 4863,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 4898,
											"end": 4910,
											"name": "DUP3",
											"source": 12
										},
										{
											"begin": 4898,
											"end": 4910,
											"name": "AND",
											"source": 12
										},
										{
											"begin": 4898,
											"end": 4910,
											"name": "DUP1",
											"source": 12
										},
										{
											"begin": 4919,
											"end": 4980,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "321"
										},
										{
											"begin": 4919,
											"end": 4980,
											"name": "JUMPI",
											"source": 12
										},
										{
											"begin": 4973,
											"end": 4977,
											"name": "PUSH",
											"source": 12,
											"value": "7F"
										},
										{
											"begin": 4965,
											"end": 4971,
											"name": "DUP3",
											"source": 12
										},
										{
											"begin": 4961,
											"end": 4978,
											"name": "AND",
											"source": 12
										},
										{
											"begin": 4951,
											"end": 4978,
											"name": "SWAP2",
											"source": 12
										},
										{
											"begin": 4951,
											"end": 4978,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 4919,
											"end": 4980,
											"name": "tag",
											"source": 12,
											"value": "321"
										},
										{
											"begin": 4919,
											"end": 4980,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 5026,
											"end": 5028,
											"name": "PUSH",
											"source": 12,
											"value": "20"
										},
										{
											"begin": 5018,
											"end": 5024,
											"name": "DUP3",
											"source": 12
										},
										{
											"begin": 5015,
											"end": 5029,
											"name": "LT",
											"source": 12
										},
										{
											"begin": 4995,
											"end": 5013,
											"name": "DUP2",
											"source": 12
										},
										{
											"begin": 4992,
											"end": 5030,
											"name": "SUB",
											"source": 12
										},
										{
											"begin": 4989,
											"end": 5150,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "322"
										},
										{
											"begin": 4989,
											"end": 5150,
											"name": "JUMPI",
											"source": 12
										},
										{
											"begin": 5072,
											"end": 5082,
											"name": "PUSH",
											"source": 12,
											"value": "4E487B71"
										},
										{
											"begin": 5067,
											"end": 5070,
											"name": "PUSH",
											"source": 12,
											"value": "E0"
										},
										{
											"begin": 5063,
											"end": 5083,
											"name": "SHL",
											"source": 12
										},
										{
											"begin": 5060,
											"end": 5061,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 5053,
											"end": 5084,
											"name": "MSTORE",
											"source": 12
										},
										{
											"begin": 5107,
											"end": 5111,
											"name": "PUSH",
											"source": 12,
											"value": "22"
										},
										{
											"begin": 5104,
											"end": 5105,
											"name": "PUSH",
											"source": 12,
											"value": "4"
										},
										{
											"begin": 5097,
											"end": 5112,
											"name": "MSTORE",
											"source": 12
										},
										{
											"begin": 5135,
											"end": 5139,
											"name": "PUSH",
											"source": 12,
											"value": "24"
										},
										{
											"begin": 5132,
											"end": 5133,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 5125,
											"end": 5140,
											"name": "REVERT",
											"source": 12
										},
										{
											"begin": 4989,
											"end": 5150,
											"name": "tag",
											"source": 12,
											"value": "322"
										},
										{
											"begin": 4989,
											"end": 5150,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 4989,
											"end": 5150,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 4776,
											"end": 5156,
											"name": "SWAP2",
											"source": 12
										},
										{
											"begin": 4776,
											"end": 5156,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 4776,
											"end": 5156,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 4776,
											"end": 5156,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 5993,
											"end": 6402,
											"name": "tag",
											"source": 12,
											"value": "111"
										},
										{
											"begin": 5993,
											"end": 6402,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 6195,
											"end": 6197,
											"name": "PUSH",
											"source": 12,
											"value": "20"
										},
										{
											"begin": 6177,
											"end": 6198,
											"name": "DUP1",
											"source": 12
										},
										{
											"begin": 6177,
											"end": 6198,
											"name": "DUP3",
											"source": 12
										},
										{
											"begin": 6177,
											"end": 6198,
											"name": "MSTORE",
											"source": 12
										},
										{
											"begin": 6234,
											"end": 6236,
											"name": "PUSH",
											"source": 12,
											"value": "2D"
										},
										{
											"begin": 6214,
											"end": 6232,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 6214,
											"end": 6232,
											"name": "DUP3",
											"source": 12
										},
										{
											"begin": 6214,
											"end": 6232,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 6207,
											"end": 6237,
											"name": "MSTORE",
											"source": 12
										},
										{
											"begin": 6273,
											"end": 6307,
											"name": "PUSH",
											"source": 12,
											"value": "4552433732313A2063616C6C6572206973206E6F7420746F6B656E206F776E65"
										},
										{
											"begin": 6268,
											"end": 6270,
											"name": "PUSH",
											"source": 12,
											"value": "40"
										},
										{
											"begin": 6253,
											"end": 6271,
											"name": "DUP3",
											"source": 12
										},
										{
											"begin": 6253,
											"end": 6271,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 6246,
											"end": 6308,
											"name": "MSTORE",
											"source": 12
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1C881BDC88185C1C1C9BDD9959"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "9A"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 6339,
											"end": 6341,
											"name": "PUSH",
											"source": 12,
											"value": "60"
										},
										{
											"begin": 6324,
											"end": 6342,
											"name": "DUP3",
											"source": 12
										},
										{
											"begin": 6324,
											"end": 6342,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 6317,
											"end": 6360,
											"name": "MSTORE",
											"source": 12
										},
										{
											"begin": 6392,
											"end": 6395,
											"name": "PUSH",
											"source": 12,
											"value": "80"
										},
										{
											"begin": 6377,
											"end": 6396,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 6377,
											"end": 6396,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 5993,
											"end": 6402,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 7170,
											"end": 7666,
											"name": "tag",
											"source": 12,
											"value": "152"
										},
										{
											"begin": 7170,
											"end": 7666,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 7349,
											"end": 7352,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 7387,
											"end": 7393,
											"name": "DUP4",
											"source": 12
										},
										{
											"begin": 7381,
											"end": 7394,
											"name": "MLOAD",
											"source": 12
										},
										{
											"begin": 7403,
											"end": 7469,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "329"
										},
										{
											"begin": 7462,
											"end": 7468,
											"name": "DUP2",
											"source": 12
										},
										{
											"begin": 7457,
											"end": 7460,
											"name": "DUP5",
											"source": 12
										},
										{
											"begin": 7450,
											"end": 7454,
											"name": "PUSH",
											"source": 12,
											"value": "20"
										},
										{
											"begin": 7442,
											"end": 7448,
											"name": "DUP9",
											"source": 12
										},
										{
											"begin": 7438,
											"end": 7455,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 7403,
											"end": 7469,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "265"
										},
										{
											"begin": 7403,
											"end": 7469,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 7403,
											"end": 7469,
											"name": "tag",
											"source": 12,
											"value": "329"
										},
										{
											"begin": 7403,
											"end": 7469,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 7532,
											"end": 7545,
											"name": "DUP4",
											"source": 12
										},
										{
											"begin": 7532,
											"end": 7545,
											"name": "MLOAD",
											"source": 12
										},
										{
											"begin": 7491,
											"end": 7507,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 7491,
											"end": 7507,
											"name": "DUP4",
											"source": 12
										},
										{
											"begin": 7491,
											"end": 7507,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 7491,
											"end": 7507,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 7554,
											"end": 7624,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "330"
										},
										{
											"begin": 7532,
											"end": 7545,
											"name": "DUP2",
											"source": 12
										},
										{
											"begin": 7491,
											"end": 7507,
											"name": "DUP4",
											"source": 12
										},
										{
											"begin": 7601,
											"end": 7605,
											"name": "PUSH",
											"source": 12,
											"value": "20"
										},
										{
											"begin": 7589,
											"end": 7606,
											"name": "DUP9",
											"source": 12
										},
										{
											"begin": 7589,
											"end": 7606,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 7554,
											"end": 7624,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "265"
										},
										{
											"begin": 7554,
											"end": 7624,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 7554,
											"end": 7624,
											"name": "tag",
											"source": 12,
											"value": "330"
										},
										{
											"begin": 7554,
											"end": 7624,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 7640,
											"end": 7660,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 7640,
											"end": 7660,
											"name": "SWAP5",
											"source": 12
										},
										{
											"begin": 7170,
											"end": 7666,
											"name": "SWAP4",
											"source": 12
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 7170,
											"end": 7666,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 7671,
											"end": 8072,
											"name": "tag",
											"source": 12,
											"value": "173"
										},
										{
											"begin": 7671,
											"end": 8072,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 7873,
											"end": 7875,
											"name": "PUSH",
											"source": 12,
											"value": "20"
										},
										{
											"begin": 7855,
											"end": 7876,
											"name": "DUP1",
											"source": 12
										},
										{
											"begin": 7855,
											"end": 7876,
											"name": "DUP3",
											"source": 12
										},
										{
											"begin": 7855,
											"end": 7876,
											"name": "MSTORE",
											"source": 12
										},
										{
											"begin": 7912,
											"end": 7914,
											"name": "PUSH",
											"source": 12,
											"value": "25"
										},
										{
											"begin": 7892,
											"end": 7910,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 7892,
											"end": 7910,
											"name": "DUP3",
											"source": 12
										},
										{
											"begin": 7892,
											"end": 7910,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 7885,
											"end": 7915,
											"name": "MSTORE",
											"source": 12
										},
										{
											"begin": 7951,
											"end": 7985,
											"name": "PUSH",
											"source": 12,
											"value": "4552433732313A207472616E736665722066726F6D20696E636F727265637420"
										},
										{
											"begin": 7946,
											"end": 7948,
											"name": "PUSH",
											"source": 12,
											"value": "40"
										},
										{
											"begin": 7931,
											"end": 7949,
											"name": "DUP3",
											"source": 12
										},
										{
											"begin": 7931,
											"end": 7949,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 7924,
											"end": 7986,
											"name": "MSTORE",
											"source": 12
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "37BBB732B9"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "D9"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 8017,
											"end": 8019,
											"name": "PUSH",
											"source": 12,
											"value": "60"
										},
										{
											"begin": 8002,
											"end": 8020,
											"name": "DUP3",
											"source": 12
										},
										{
											"begin": 8002,
											"end": 8020,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 7995,
											"end": 8030,
											"name": "MSTORE",
											"source": 12
										},
										{
											"begin": 8062,
											"end": 8065,
											"name": "PUSH",
											"source": 12,
											"value": "80"
										},
										{
											"begin": 8047,
											"end": 8066,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 8047,
											"end": 8066,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 7671,
											"end": 8072,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 8836,
											"end": 9250,
											"name": "tag",
											"source": 12,
											"value": "196"
										},
										{
											"begin": 8836,
											"end": 9250,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 9038,
											"end": 9040,
											"name": "PUSH",
											"source": 12,
											"value": "20"
										},
										{
											"begin": 9020,
											"end": 9041,
											"name": "DUP1",
											"source": 12
										},
										{
											"begin": 9020,
											"end": 9041,
											"name": "DUP3",
											"source": 12
										},
										{
											"begin": 9020,
											"end": 9041,
											"name": "MSTORE",
											"source": 12
										},
										{
											"begin": 9077,
											"end": 9079,
											"name": "PUSH",
											"source": 12,
											"value": "32"
										},
										{
											"begin": 9057,
											"end": 9075,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 9057,
											"end": 9075,
											"name": "DUP3",
											"source": 12
										},
										{
											"begin": 9057,
											"end": 9075,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 9050,
											"end": 9080,
											"name": "MSTORE",
											"source": 12
										},
										{
											"begin": 9116,
											"end": 9150,
											"name": "PUSH",
											"source": 12,
											"value": "4552433732313A207472616E7366657220746F206E6F6E204552433732315265"
										},
										{
											"begin": 9111,
											"end": 9113,
											"name": "PUSH",
											"source": 12,
											"value": "40"
										},
										{
											"begin": 9096,
											"end": 9114,
											"name": "DUP3",
											"source": 12
										},
										{
											"begin": 9096,
											"end": 9114,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 9089,
											"end": 9151,
											"name": "MSTORE",
											"source": 12
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "31B2B4BB32B91034B6B83632B6B2B73A32B9"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "71"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 9182,
											"end": 9184,
											"name": "PUSH",
											"source": 12,
											"value": "60"
										},
										{
											"begin": 9167,
											"end": 9185,
											"name": "DUP3",
											"source": 12
										},
										{
											"begin": 9167,
											"end": 9185,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 9160,
											"end": 9208,
											"name": "MSTORE",
											"source": 12
										},
										{
											"begin": 9240,
											"end": 9243,
											"name": "PUSH",
											"source": 12,
											"value": "80"
										},
										{
											"begin": 9225,
											"end": 9244,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 9225,
											"end": 9244,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 8836,
											"end": 9250,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 9387,
											"end": 9514,
											"name": "tag",
											"source": 12,
											"value": "268"
										},
										{
											"begin": 9387,
											"end": 9514,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 9448,
											"end": 9458,
											"name": "PUSH",
											"source": 12,
											"value": "4E487B71"
										},
										{
											"begin": 9443,
											"end": 9446,
											"name": "PUSH",
											"source": 12,
											"value": "E0"
										},
										{
											"begin": 9439,
											"end": 9459,
											"name": "SHL",
											"source": 12
										},
										{
											"begin": 9436,
											"end": 9437,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 9429,
											"end": 9460,
											"name": "MSTORE",
											"source": 12
										},
										{
											"begin": 9479,
											"end": 9483,
											"name": "PUSH",
											"source": 12,
											"value": "11"
										},
										{
											"begin": 9476,
											"end": 9477,
											"name": "PUSH",
											"source": 12,
											"value": "4"
										},
										{
											"begin": 9469,
											"end": 9484,
											"name": "MSTORE",
											"source": 12
										},
										{
											"begin": 9503,
											"end": 9507,
											"name": "PUSH",
											"source": 12,
											"value": "24"
										},
										{
											"begin": 9500,
											"end": 9501,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 9493,
											"end": 9508,
											"name": "REVERT",
											"source": 12
										},
										{
											"begin": 9519,
											"end": 9647,
											"name": "tag",
											"source": 12,
											"value": "217"
										},
										{
											"begin": 9519,
											"end": 9647,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 9586,
											"end": 9595,
											"name": "DUP2",
											"source": 12
										},
										{
											"begin": 9586,
											"end": 9595,
											"name": "DUP2",
											"source": 12
										},
										{
											"begin": 9586,
											"end": 9595,
											"name": "SUB",
											"source": 12
										},
										{
											"begin": 9607,
											"end": 9618,
											"name": "DUP2",
											"source": 12
										},
										{
											"begin": 9607,
											"end": 9618,
											"name": "DUP2",
											"source": 12
										},
										{
											"begin": 9607,
											"end": 9618,
											"name": "GT",
											"source": 12
										},
										{
											"begin": 9604,
											"end": 9641,
											"name": "ISZERO",
											"source": 12
										},
										{
											"begin": 9604,
											"end": 9641,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "78"
										},
										{
											"begin": 9604,
											"end": 9641,
											"name": "JUMPI",
											"source": 12
										},
										{
											"begin": 9621,
											"end": 9639,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "78"
										},
										{
											"begin": 9621,
											"end": 9639,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "268"
										},
										{
											"begin": 9621,
											"end": 9639,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 9652,
											"end": 9777,
											"name": "tag",
											"source": 12,
											"value": "220"
										},
										{
											"begin": 9652,
											"end": 9777,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 9717,
											"end": 9726,
											"name": "DUP1",
											"source": 12
										},
										{
											"begin": 9717,
											"end": 9726,
											"name": "DUP3",
											"source": 12
										},
										{
											"begin": 9717,
											"end": 9726,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 9738,
											"end": 9748,
											"name": "DUP1",
											"source": 12
										},
										{
											"begin": 9738,
											"end": 9748,
											"name": "DUP3",
											"source": 12
										},
										{
											"begin": 9738,
											"end": 9748,
											"name": "GT",
											"source": 12
										},
										{
											"begin": 9735,
											"end": 9771,
											"name": "ISZERO",
											"source": 12
										},
										{
											"begin": 9735,
											"end": 9771,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "78"
										},
										{
											"begin": 9735,
											"end": 9771,
											"name": "JUMPI",
											"source": 12
										},
										{
											"begin": 9751,
											"end": 9769,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "78"
										},
										{
											"begin": 9751,
											"end": 9769,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "268"
										},
										{
											"begin": 9751,
											"end": 9769,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 9782,
											"end": 10271,
											"name": "tag",
											"source": 12,
											"value": "228"
										},
										{
											"begin": 9782,
											"end": 10271,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 10051,
											"end": 10066,
											"name": "DUP6",
											"source": 12
										},
										{
											"begin": 10051,
											"end": 10066,
											"name": "DUP2",
											"source": 12
										},
										{
											"begin": 10051,
											"end": 10066,
											"name": "AND",
											"source": 12
										},
										{
											"begin": 10033,
											"end": 10067,
											"name": "DUP3",
											"source": 12
										},
										{
											"begin": 10033,
											"end": 10067,
											"name": "MSTORE",
											"source": 12
										},
										{
											"begin": 10103,
											"end": 10118,
											"name": "DUP5",
											"source": 12
										},
										{
											"begin": 10103,
											"end": 10118,
											"name": "AND",
											"source": 12
										},
										{
											"begin": 10098,
											"end": 10100,
											"name": "PUSH",
											"source": 12,
											"value": "20"
										},
										{
											"begin": 10083,
											"end": 10101,
											"name": "DUP3",
											"source": 12
										},
										{
											"begin": 10083,
											"end": 10101,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 10076,
											"end": 10119,
											"name": "MSTORE",
											"source": 12
										},
										{
											"begin": 10150,
											"end": 10152,
											"name": "PUSH",
											"source": 12,
											"value": "40"
										},
										{
											"begin": 10135,
											"end": 10153,
											"name": "DUP2",
											"source": 12
										},
										{
											"begin": 10135,
											"end": 10153,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 10128,
											"end": 10162,
											"name": "DUP4",
											"source": 12
										},
										{
											"begin": 10128,
											"end": 10162,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 10128,
											"end": 10162,
											"name": "MSTORE",
											"source": 12
										},
										{
											"begin": 10198,
											"end": 10201,
											"name": "PUSH",
											"source": 12,
											"value": "80"
										},
										{
											"begin": 10193,
											"end": 10195,
											"name": "PUSH",
											"source": 12,
											"value": "60"
										},
										{
											"begin": 10178,
											"end": 10196,
											"name": "DUP3",
											"source": 12
										},
										{
											"begin": 10178,
											"end": 10196,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 10171,
											"end": 10202,
											"name": "DUP2",
											"source": 12
										},
										{
											"begin": 10171,
											"end": 10202,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 10171,
											"end": 10202,
											"name": "MSTORE",
											"source": 12
										},
										{
											"begin": 9976,
											"end": 9980,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 9976,
											"end": 9980,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 10219,
											"end": 10265,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "344"
										},
										{
											"begin": 10219,
											"end": 10265,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 10245,
											"end": 10264,
											"name": "DUP4",
											"source": 12
										},
										{
											"begin": 10245,
											"end": 10264,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 10237,
											"end": 10243,
											"name": "DUP5",
											"source": 12
										},
										{
											"begin": 10219,
											"end": 10265,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "266"
										},
										{
											"begin": 10219,
											"end": 10265,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 10219,
											"end": 10265,
											"name": "tag",
											"source": 12,
											"value": "344"
										},
										{
											"begin": 10219,
											"end": 10265,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 10211,
											"end": 10265,
											"name": "SWAP7",
											"source": 12
										},
										{
											"begin": 9782,
											"end": 10271,
											"name": "SWAP6",
											"source": 12
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 9782,
											"end": 10271,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 10276,
											"end": 10525,
											"name": "tag",
											"source": 12,
											"value": "231"
										},
										{
											"begin": 10276,
											"end": 10525,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 10345,
											"end": 10351,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 10398,
											"end": 10400,
											"name": "PUSH",
											"source": 12,
											"value": "20"
										},
										{
											"begin": 10386,
											"end": 10395,
											"name": "DUP3",
											"source": 12
										},
										{
											"begin": 10377,
											"end": 10384,
											"name": "DUP5",
											"source": 12
										},
										{
											"begin": 10373,
											"end": 10396,
											"name": "SUB",
											"source": 12
										},
										{
											"begin": 10369,
											"end": 10401,
											"name": "SLT",
											"source": 12
										},
										{
											"begin": 10366,
											"end": 10418,
											"name": "ISZERO",
											"source": 12
										},
										{
											"begin": 10366,
											"end": 10418,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "346"
										},
										{
											"begin": 10366,
											"end": 10418,
											"name": "JUMPI",
											"source": 12
										},
										{
											"begin": 10414,
											"end": 10415,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 10411,
											"end": 10412,
											"name": "DUP1",
											"source": 12
										},
										{
											"begin": 10404,
											"end": 10416,
											"name": "REVERT",
											"source": 12
										},
										{
											"begin": 10366,
											"end": 10418,
											"name": "tag",
											"source": 12,
											"value": "346"
										},
										{
											"begin": 10366,
											"end": 10418,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 10446,
											"end": 10455,
											"name": "DUP2",
											"source": 12
										},
										{
											"begin": 10440,
											"end": 10456,
											"name": "MLOAD",
											"source": 12
										},
										{
											"begin": 10465,
											"end": 10495,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "148"
										},
										{
											"begin": 10489,
											"end": 10494,
											"name": "DUP2",
											"source": 12
										},
										{
											"begin": 10465,
											"end": 10495,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "264"
										},
										{
											"begin": 10465,
											"end": 10495,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 12
										}
									]
								}
							},
							"sourceList": [
								"@openzeppelin/contracts/token/ERC721/ERC721.sol",
								"@openzeppelin/contracts/token/ERC721/IERC721.sol",
								"@openzeppelin/contracts/token/ERC721/IERC721Receiver.sol",
								"@openzeppelin/contracts/token/ERC721/extensions/IERC721Metadata.sol",
								"@openzeppelin/contracts/utils/Address.sol",
								"@openzeppelin/contracts/utils/Context.sol",
								"@openzeppelin/contracts/utils/Counters.sol",
								"@openzeppelin/contracts/utils/Strings.sol",
								"@openzeppelin/contracts/utils/introspection/ERC165.sol",
								"@openzeppelin/contracts/utils/introspection/IERC165.sol",
								"@openzeppelin/contracts/utils/math/Math.sol",
								"contracts/SingapurContract.sol",
								"#utility.yul"
							]
						},
						"methodIdentifiers": {
							"approve(address,uint256)": "095ea7b3",
							"balanceOf(address)": "70a08231",
							"getApproved(uint256)": "081812fc",
							"isApprovedForAll(address,address)": "e985e9c5",
							"name()": "06fdde03",
							"ownerOf(uint256)": "6352211e",
							"safeTransferFrom(address,address,uint256)": "42842e0e",
							"safeTransferFrom(address,address,uint256,bytes)": "b88d4fde",
							"setApprovalForAll(address,bool)": "a22cb465",
							"supportsInterface(bytes4)": "01ffc9a7",
							"symbol()": "95d89b41",
							"tokenURI(uint256)": "c87b56dd",
							"transferFrom(address,address,uint256)": "23b872dd"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.21+commit.d9974bed\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"string\",\"name\":\"name_\",\"type\":\"string\"},{\"internalType\":\"string\",\"name\":\"symbol_\",\"type\":\"string\"}],\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"approved\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"Approval\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"bool\",\"name\":\"approved\",\"type\":\"bool\"}],\"name\":\"ApprovalForAll\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"Transfer\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"approve\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"}],\"name\":\"balanceOf\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"getApproved\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"}],\"name\":\"isApprovedForAll\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"name\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"ownerOf\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"safeTransferFrom\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"},{\"internalType\":\"bytes\",\"name\":\"data\",\"type\":\"bytes\"}],\"name\":\"safeTransferFrom\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"},{\"internalType\":\"bool\",\"name\":\"approved\",\"type\":\"bool\"}],\"name\":\"setApprovalForAll\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes4\",\"name\":\"interfaceId\",\"type\":\"bytes4\"}],\"name\":\"supportsInterface\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"symbol\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"tokenURI\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"transferFrom\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"Implementation of https://eips.ethereum.org/EIPS/eip-721[ERC721] Non-Fungible Token Standard, including the Metadata extension, but not including the Enumerable extension, which is available separately as {ERC721Enumerable}.\",\"events\":{\"Approval(address,address,uint256)\":{\"details\":\"Emitted when `owner` enables `approved` to manage the `tokenId` token.\"},\"ApprovalForAll(address,address,bool)\":{\"details\":\"Emitted when `owner` enables or disables (`approved`) `operator` to manage all of its assets.\"},\"Transfer(address,address,uint256)\":{\"details\":\"Emitted when `tokenId` token is transferred from `from` to `to`.\"}},\"kind\":\"dev\",\"methods\":{\"approve(address,uint256)\":{\"details\":\"See {IERC721-approve}.\"},\"balanceOf(address)\":{\"details\":\"See {IERC721-balanceOf}.\"},\"constructor\":{\"details\":\"Initializes the contract by setting a `name` and a `symbol` to the token collection.\"},\"getApproved(uint256)\":{\"details\":\"See {IERC721-getApproved}.\"},\"isApprovedForAll(address,address)\":{\"details\":\"See {IERC721-isApprovedForAll}.\"},\"name()\":{\"details\":\"See {IERC721Metadata-name}.\"},\"ownerOf(uint256)\":{\"details\":\"See {IERC721-ownerOf}.\"},\"safeTransferFrom(address,address,uint256)\":{\"details\":\"See {IERC721-safeTransferFrom}.\"},\"safeTransferFrom(address,address,uint256,bytes)\":{\"details\":\"See {IERC721-safeTransferFrom}.\"},\"setApprovalForAll(address,bool)\":{\"details\":\"See {IERC721-setApprovalForAll}.\"},\"supportsInterface(bytes4)\":{\"details\":\"See {IERC165-supportsInterface}.\"},\"symbol()\":{\"details\":\"See {IERC721Metadata-symbol}.\"},\"tokenURI(uint256)\":{\"details\":\"See {IERC721Metadata-tokenURI}.\"},\"transferFrom(address,address,uint256)\":{\"details\":\"See {IERC721-transferFrom}.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/token/ERC721/ERC721.sol\":\"ERC721\"},\"evmVersion\":\"shanghai\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/token/ERC721/ERC721.sol\":{\"keccak256\":\"0xd89f3585b211fc9e3408384a4c4efdc3a93b2f877a3821046fa01c219d35be1b\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://5ea15ef7c8980240ccd46df13809d163f749bc0a01d8bced1875660d4872da1c\",\"dweb:/ipfs/QmbDfAT9VeCSG4cnPd6tjDMp8ED85dLHbWyMyv7wbmL4CH\"]},\"@openzeppelin/contracts/token/ERC721/IERC721.sol\":{\"keccak256\":\"0xab28a56179c1db258c9bf5235b382698cb650debecb51b23d12be9e241374b68\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://daae589a9d6fa7e55f99f86c0a16796ca490f243fb3693632c3711c0646c1d56\",\"dweb:/ipfs/QmR3zpd7wNw3rcUdekwiv6FYHJqksuTCXLVioTxu6Fbxk3\"]},\"@openzeppelin/contracts/token/ERC721/IERC721Receiver.sol\":{\"keccak256\":\"0xa82b58eca1ee256be466e536706850163d2ec7821945abd6b4778cfb3bee37da\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://6e75cf83beb757b8855791088546b8337e9d4684e169400c20d44a515353b708\",\"dweb:/ipfs/QmYvPafLfoquiDMEj7CKHtvbgHu7TJNPSVPSCjrtjV8HjV\"]},\"@openzeppelin/contracts/token/ERC721/extensions/IERC721Metadata.sol\":{\"keccak256\":\"0x75b829ff2f26c14355d1cba20e16fe7b29ca58eb5fef665ede48bc0f9c6c74b9\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://a0a107160525724f9e1bbbab031defc2f298296dd9e331f16a6f7130cec32146\",\"dweb:/ipfs/QmemujxSd7gX8A9M8UwmNbz4Ms3U9FG9QfudUgxwvTmPWf\"]},\"@openzeppelin/contracts/utils/Address.sol\":{\"keccak256\":\"0xf96f969e24029d43d0df89e59d365f277021dac62b48e1c1e3ebe0acdd7f1ca1\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://ec772b45a624be516f1c81970caa8a2e144301e9d0921cbc1a2789fef39a1269\",\"dweb:/ipfs/QmNyjwxCrGhQMyzLD93oUobJXVe9ceJvRvfXwbEtuxPiEj\"]},\"@openzeppelin/contracts/utils/Context.sol\":{\"keccak256\":\"0xe2e337e6dde9ef6b680e07338c493ebea1b5fd09b43424112868e9cc1706bca7\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://6df0ddf21ce9f58271bdfaa85cde98b200ef242a05a3f85c2bc10a8294800a92\",\"dweb:/ipfs/QmRK2Y5Yc6BK7tGKkgsgn3aJEQGi5aakeSPZvS65PV8Xp3\"]},\"@openzeppelin/contracts/utils/Strings.sol\":{\"keccak256\":\"0xa4d1d62251f8574deb032a35fc948386a9b4de74b812d4f545a1ac120486b48a\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://8c969013129ba9e651a20735ef659fef6d8a1139ea3607bd4b26ddea2d645634\",\"dweb:/ipfs/QmVhVa6LGuzAcB8qgDtVHRkucn4ihj5UZr8xBLcJkP6ucb\"]},\"@openzeppelin/contracts/utils/introspection/ERC165.sol\":{\"keccak256\":\"0xd10975de010d89fd1c78dc5e8a9a7e7f496198085c151648f20cba166b32582b\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://fb0048dee081f6fffa5f74afc3fb328483c2a30504e94a0ddd2a5114d731ec4d\",\"dweb:/ipfs/QmZptt1nmYoA5SgjwnSgWqgUSDgm4q52Yos3xhnMv3MV43\"]},\"@openzeppelin/contracts/utils/introspection/IERC165.sol\":{\"keccak256\":\"0x447a5f3ddc18419d41ff92b3773fb86471b1db25773e07f877f548918a185bf1\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://be161e54f24e5c6fae81a12db1a8ae87bc5ae1b0ddc805d82a1440a68455088f\",\"dweb:/ipfs/QmP7C3CHdY9urF4dEMb9wmsp1wMxHF6nhA2yQE5SKiPAdy\"]},\"@openzeppelin/contracts/utils/math/Math.sol\":{\"keccak256\":\"0xa1e8e83cd0087785df04ac79fb395d9f3684caeaf973d9e2c71caef723a3a5d6\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://33bbf48cc069be677705037ba7520c22b1b622c23b33e1a71495f2d36549d40b\",\"dweb:/ipfs/Qmct36zWXv3j7LZB83uwbg7TXwnZSN1fqHNDZ93GG98bGz\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [
							{
								"astId": 25,
								"contract": "@openzeppelin/contracts/token/ERC721/ERC721.sol:ERC721",
								"label": "_name",
								"offset": 0,
								"slot": "0",
								"type": "t_string_storage"
							},
							{
								"astId": 27,
								"contract": "@openzeppelin/contracts/token/ERC721/ERC721.sol:ERC721",
								"label": "_symbol",
								"offset": 0,
								"slot": "1",
								"type": "t_string_storage"
							},
							{
								"astId": 31,
								"contract": "@openzeppelin/contracts/token/ERC721/ERC721.sol:ERC721",
								"label": "_owners",
								"offset": 0,
								"slot": "2",
								"type": "t_mapping(t_uint256,t_address)"
							},
							{
								"astId": 35,
								"contract": "@openzeppelin/contracts/token/ERC721/ERC721.sol:ERC721",
								"label": "_balances",
								"offset": 0,
								"slot": "3",
								"type": "t_mapping(t_address,t_uint256)"
							},
							{
								"astId": 39,
								"contract": "@openzeppelin/contracts/token/ERC721/ERC721.sol:ERC721",
								"label": "_tokenApprovals",
								"offset": 0,
								"slot": "4",
								"type": "t_mapping(t_uint256,t_address)"
							},
							{
								"astId": 45,
								"contract": "@openzeppelin/contracts/token/ERC721/ERC721.sol:ERC721",
								"label": "_operatorApprovals",
								"offset": 0,
								"slot": "5",
								"type": "t_mapping(t_address,t_mapping(t_address,t_bool))"
							}
						],
						"types": {
							"t_address": {
								"encoding": "inplace",
								"label": "address",
								"numberOfBytes": "20"
							},
							"t_bool": {
								"encoding": "inplace",
								"label": "bool",
								"numberOfBytes": "1"
							},
							"t_mapping(t_address,t_bool)": {
								"encoding": "mapping",
								"key": "t_address",
								"label": "mapping(address => bool)",
								"numberOfBytes": "32",
								"value": "t_bool"
							},
							"t_mapping(t_address,t_mapping(t_address,t_bool))": {
								"encoding": "mapping",
								"key": "t_address",
								"label": "mapping(address => mapping(address => bool))",
								"numberOfBytes": "32",
								"value": "t_mapping(t_address,t_bool)"
							},
							"t_mapping(t_address,t_uint256)": {
								"encoding": "mapping",
								"key": "t_address",
								"label": "mapping(address => uint256)",
								"numberOfBytes": "32",
								"value": "t_uint256"
							},
							"t_mapping(t_uint256,t_address)": {
								"encoding": "mapping",
								"key": "t_uint256",
								"label": "mapping(uint256 => address)",
								"numberOfBytes": "32",
								"value": "t_address"
							},
							"t_string_storage": {
								"encoding": "bytes",
								"label": "string",
								"numberOfBytes": "32"
							},
							"t_uint256": {
								"encoding": "inplace",
								"label": "uint256",
								"numberOfBytes": "32"
							}
						}
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"@openzeppelin/contracts/token/ERC721/IERC721.sol": {
				"IERC721": {
					"abi": [
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "approved",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								}
							],
							"name": "Approval",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "operator",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "bool",
									"name": "approved",
									"type": "bool"
								}
							],
							"name": "ApprovalForAll",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								}
							],
							"name": "Transfer",
							"type": "event"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								}
							],
							"name": "approve",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "owner",
									"type": "address"
								}
							],
							"name": "balanceOf",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "balance",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								}
							],
							"name": "getApproved",
							"outputs": [
								{
									"internalType": "address",
									"name": "operator",
									"type": "address"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "operator",
									"type": "address"
								}
							],
							"name": "isApprovedForAll",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								}
							],
							"name": "ownerOf",
							"outputs": [
								{
									"internalType": "address",
									"name": "owner",
									"type": "address"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								}
							],
							"name": "safeTransferFrom",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								},
								{
									"internalType": "bytes",
									"name": "data",
									"type": "bytes"
								}
							],
							"name": "safeTransferFrom",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "operator",
									"type": "address"
								},
								{
									"internalType": "bool",
									"name": "_approved",
									"type": "bool"
								}
							],
							"name": "setApprovalForAll",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "bytes4",
									"name": "interfaceId",
									"type": "bytes4"
								}
							],
							"name": "supportsInterface",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								}
							],
							"name": "transferFrom",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						}
					],
					"devdoc": {
						"details": "Required interface of an ERC721 compliant contract.",
						"events": {
							"Approval(address,address,uint256)": {
								"details": "Emitted when `owner` enables `approved` to manage the `tokenId` token."
							},
							"ApprovalForAll(address,address,bool)": {
								"details": "Emitted when `owner` enables or disables (`approved`) `operator` to manage all of its assets."
							},
							"Transfer(address,address,uint256)": {
								"details": "Emitted when `tokenId` token is transferred from `from` to `to`."
							}
						},
						"kind": "dev",
						"methods": {
							"approve(address,uint256)": {
								"details": "Gives permission to `to` to transfer `tokenId` token to another account. The approval is cleared when the token is transferred. Only a single account can be approved at a time, so approving the zero address clears previous approvals. Requirements: - The caller must own the token or be an approved operator. - `tokenId` must exist. Emits an {Approval} event."
							},
							"balanceOf(address)": {
								"details": "Returns the number of tokens in ``owner``'s account."
							},
							"getApproved(uint256)": {
								"details": "Returns the account approved for `tokenId` token. Requirements: - `tokenId` must exist."
							},
							"isApprovedForAll(address,address)": {
								"details": "Returns if the `operator` is allowed to manage all of the assets of `owner`. See {setApprovalForAll}"
							},
							"ownerOf(uint256)": {
								"details": "Returns the owner of the `tokenId` token. Requirements: - `tokenId` must exist."
							},
							"safeTransferFrom(address,address,uint256)": {
								"details": "Safely transfers `tokenId` token from `from` to `to`, checking first that contract recipients are aware of the ERC721 protocol to prevent tokens from being forever locked. Requirements: - `from` cannot be the zero address. - `to` cannot be the zero address. - `tokenId` token must exist and be owned by `from`. - If the caller is not `from`, it must have been allowed to move this token by either {approve} or {setApprovalForAll}. - If `to` refers to a smart contract, it must implement {IERC721Receiver-onERC721Received}, which is called upon a safe transfer. Emits a {Transfer} event."
							},
							"safeTransferFrom(address,address,uint256,bytes)": {
								"details": "Safely transfers `tokenId` token from `from` to `to`. Requirements: - `from` cannot be the zero address. - `to` cannot be the zero address. - `tokenId` token must exist and be owned by `from`. - If the caller is not `from`, it must be approved to move this token by either {approve} or {setApprovalForAll}. - If `to` refers to a smart contract, it must implement {IERC721Receiver-onERC721Received}, which is called upon a safe transfer. Emits a {Transfer} event."
							},
							"setApprovalForAll(address,bool)": {
								"details": "Approve or remove `operator` as an operator for the caller. Operators can call {transferFrom} or {safeTransferFrom} for any token owned by the caller. Requirements: - The `operator` cannot be the caller. Emits an {ApprovalForAll} event."
							},
							"supportsInterface(bytes4)": {
								"details": "Returns true if this contract implements the interface defined by `interfaceId`. See the corresponding https://eips.ethereum.org/EIPS/eip-165#how-interfaces-are-identified[EIP section] to learn more about how these ids are created. This function call must use less than 30 000 gas."
							},
							"transferFrom(address,address,uint256)": {
								"details": "Transfers `tokenId` token from `from` to `to`. WARNING: Note that the caller is responsible to confirm that the recipient is capable of receiving ERC721 or else they may be permanently lost. Usage of {safeTransferFrom} prevents loss, though the caller must understand this adds an external call which potentially creates a reentrancy vulnerability. Requirements: - `from` cannot be the zero address. - `to` cannot be the zero address. - `tokenId` token must be owned by `from`. - If the caller is not `from`, it must be approved to move this token by either {approve} or {setApprovalForAll}. Emits a {Transfer} event."
							}
						},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {
							"approve(address,uint256)": "095ea7b3",
							"balanceOf(address)": "70a08231",
							"getApproved(uint256)": "081812fc",
							"isApprovedForAll(address,address)": "e985e9c5",
							"ownerOf(uint256)": "6352211e",
							"safeTransferFrom(address,address,uint256)": "42842e0e",
							"safeTransferFrom(address,address,uint256,bytes)": "b88d4fde",
							"setApprovalForAll(address,bool)": "a22cb465",
							"supportsInterface(bytes4)": "01ffc9a7",
							"transferFrom(address,address,uint256)": "23b872dd"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.21+commit.d9974bed\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"approved\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"Approval\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"bool\",\"name\":\"approved\",\"type\":\"bool\"}],\"name\":\"ApprovalForAll\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"Transfer\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"approve\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"}],\"name\":\"balanceOf\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"balance\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"getApproved\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"}],\"name\":\"isApprovedForAll\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"ownerOf\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"safeTransferFrom\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"},{\"internalType\":\"bytes\",\"name\":\"data\",\"type\":\"bytes\"}],\"name\":\"safeTransferFrom\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"},{\"internalType\":\"bool\",\"name\":\"_approved\",\"type\":\"bool\"}],\"name\":\"setApprovalForAll\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes4\",\"name\":\"interfaceId\",\"type\":\"bytes4\"}],\"name\":\"supportsInterface\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"transferFrom\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"Required interface of an ERC721 compliant contract.\",\"events\":{\"Approval(address,address,uint256)\":{\"details\":\"Emitted when `owner` enables `approved` to manage the `tokenId` token.\"},\"ApprovalForAll(address,address,bool)\":{\"details\":\"Emitted when `owner` enables or disables (`approved`) `operator` to manage all of its assets.\"},\"Transfer(address,address,uint256)\":{\"details\":\"Emitted when `tokenId` token is transferred from `from` to `to`.\"}},\"kind\":\"dev\",\"methods\":{\"approve(address,uint256)\":{\"details\":\"Gives permission to `to` to transfer `tokenId` token to another account. The approval is cleared when the token is transferred. Only a single account can be approved at a time, so approving the zero address clears previous approvals. Requirements: - The caller must own the token or be an approved operator. - `tokenId` must exist. Emits an {Approval} event.\"},\"balanceOf(address)\":{\"details\":\"Returns the number of tokens in ``owner``'s account.\"},\"getApproved(uint256)\":{\"details\":\"Returns the account approved for `tokenId` token. Requirements: - `tokenId` must exist.\"},\"isApprovedForAll(address,address)\":{\"details\":\"Returns if the `operator` is allowed to manage all of the assets of `owner`. See {setApprovalForAll}\"},\"ownerOf(uint256)\":{\"details\":\"Returns the owner of the `tokenId` token. Requirements: - `tokenId` must exist.\"},\"safeTransferFrom(address,address,uint256)\":{\"details\":\"Safely transfers `tokenId` token from `from` to `to`, checking first that contract recipients are aware of the ERC721 protocol to prevent tokens from being forever locked. Requirements: - `from` cannot be the zero address. - `to` cannot be the zero address. - `tokenId` token must exist and be owned by `from`. - If the caller is not `from`, it must have been allowed to move this token by either {approve} or {setApprovalForAll}. - If `to` refers to a smart contract, it must implement {IERC721Receiver-onERC721Received}, which is called upon a safe transfer. Emits a {Transfer} event.\"},\"safeTransferFrom(address,address,uint256,bytes)\":{\"details\":\"Safely transfers `tokenId` token from `from` to `to`. Requirements: - `from` cannot be the zero address. - `to` cannot be the zero address. - `tokenId` token must exist and be owned by `from`. - If the caller is not `from`, it must be approved to move this token by either {approve} or {setApprovalForAll}. - If `to` refers to a smart contract, it must implement {IERC721Receiver-onERC721Received}, which is called upon a safe transfer. Emits a {Transfer} event.\"},\"setApprovalForAll(address,bool)\":{\"details\":\"Approve or remove `operator` as an operator for the caller. Operators can call {transferFrom} or {safeTransferFrom} for any token owned by the caller. Requirements: - The `operator` cannot be the caller. Emits an {ApprovalForAll} event.\"},\"supportsInterface(bytes4)\":{\"details\":\"Returns true if this contract implements the interface defined by `interfaceId`. See the corresponding https://eips.ethereum.org/EIPS/eip-165#how-interfaces-are-identified[EIP section] to learn more about how these ids are created. This function call must use less than 30 000 gas.\"},\"transferFrom(address,address,uint256)\":{\"details\":\"Transfers `tokenId` token from `from` to `to`. WARNING: Note that the caller is responsible to confirm that the recipient is capable of receiving ERC721 or else they may be permanently lost. Usage of {safeTransferFrom} prevents loss, though the caller must understand this adds an external call which potentially creates a reentrancy vulnerability. Requirements: - `from` cannot be the zero address. - `to` cannot be the zero address. - `tokenId` token must be owned by `from`. - If the caller is not `from`, it must be approved to move this token by either {approve} or {setApprovalForAll}. Emits a {Transfer} event.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/token/ERC721/IERC721.sol\":\"IERC721\"},\"evmVersion\":\"shanghai\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/token/ERC721/IERC721.sol\":{\"keccak256\":\"0xab28a56179c1db258c9bf5235b382698cb650debecb51b23d12be9e241374b68\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://daae589a9d6fa7e55f99f86c0a16796ca490f243fb3693632c3711c0646c1d56\",\"dweb:/ipfs/QmR3zpd7wNw3rcUdekwiv6FYHJqksuTCXLVioTxu6Fbxk3\"]},\"@openzeppelin/contracts/utils/introspection/IERC165.sol\":{\"keccak256\":\"0x447a5f3ddc18419d41ff92b3773fb86471b1db25773e07f877f548918a185bf1\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://be161e54f24e5c6fae81a12db1a8ae87bc5ae1b0ddc805d82a1440a68455088f\",\"dweb:/ipfs/QmP7C3CHdY9urF4dEMb9wmsp1wMxHF6nhA2yQE5SKiPAdy\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"@openzeppelin/contracts/token/ERC721/IERC721Receiver.sol": {
				"IERC721Receiver": {
					"abi": [
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "operator",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								},
								{
									"internalType": "bytes",
									"name": "data",
									"type": "bytes"
								}
							],
							"name": "onERC721Received",
							"outputs": [
								{
									"internalType": "bytes4",
									"name": "",
									"type": "bytes4"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						}
					],
					"devdoc": {
						"details": "Interface for any contract that wants to support safeTransfers from ERC721 asset contracts.",
						"kind": "dev",
						"methods": {
							"onERC721Received(address,address,uint256,bytes)": {
								"details": "Whenever an {IERC721} `tokenId` token is transferred to this contract via {IERC721-safeTransferFrom} by `operator` from `from`, this function is called. It must return its Solidity selector to confirm the token transfer. If any other value is returned or the interface is not implemented by the recipient, the transfer will be reverted. The selector can be obtained in Solidity with `IERC721Receiver.onERC721Received.selector`."
							}
						},
						"title": "ERC721 token receiver interface",
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {
							"onERC721Received(address,address,uint256,bytes)": "150b7a02"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.21+commit.d9974bed\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"},{\"internalType\":\"bytes\",\"name\":\"data\",\"type\":\"bytes\"}],\"name\":\"onERC721Received\",\"outputs\":[{\"internalType\":\"bytes4\",\"name\":\"\",\"type\":\"bytes4\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"Interface for any contract that wants to support safeTransfers from ERC721 asset contracts.\",\"kind\":\"dev\",\"methods\":{\"onERC721Received(address,address,uint256,bytes)\":{\"details\":\"Whenever an {IERC721} `tokenId` token is transferred to this contract via {IERC721-safeTransferFrom} by `operator` from `from`, this function is called. It must return its Solidity selector to confirm the token transfer. If any other value is returned or the interface is not implemented by the recipient, the transfer will be reverted. The selector can be obtained in Solidity with `IERC721Receiver.onERC721Received.selector`.\"}},\"title\":\"ERC721 token receiver interface\",\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/token/ERC721/IERC721Receiver.sol\":\"IERC721Receiver\"},\"evmVersion\":\"shanghai\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/token/ERC721/IERC721Receiver.sol\":{\"keccak256\":\"0xa82b58eca1ee256be466e536706850163d2ec7821945abd6b4778cfb3bee37da\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://6e75cf83beb757b8855791088546b8337e9d4684e169400c20d44a515353b708\",\"dweb:/ipfs/QmYvPafLfoquiDMEj7CKHtvbgHu7TJNPSVPSCjrtjV8HjV\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"@openzeppelin/contracts/token/ERC721/extensions/IERC721Metadata.sol": {
				"IERC721Metadata": {
					"abi": [
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "approved",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								}
							],
							"name": "Approval",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "operator",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "bool",
									"name": "approved",
									"type": "bool"
								}
							],
							"name": "ApprovalForAll",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								}
							],
							"name": "Transfer",
							"type": "event"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								}
							],
							"name": "approve",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "owner",
									"type": "address"
								}
							],
							"name": "balanceOf",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "balance",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								}
							],
							"name": "getApproved",
							"outputs": [
								{
									"internalType": "address",
									"name": "operator",
									"type": "address"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "operator",
									"type": "address"
								}
							],
							"name": "isApprovedForAll",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "name",
							"outputs": [
								{
									"internalType": "string",
									"name": "",
									"type": "string"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								}
							],
							"name": "ownerOf",
							"outputs": [
								{
									"internalType": "address",
									"name": "owner",
									"type": "address"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								}
							],
							"name": "safeTransferFrom",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								},
								{
									"internalType": "bytes",
									"name": "data",
									"type": "bytes"
								}
							],
							"name": "safeTransferFrom",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "operator",
									"type": "address"
								},
								{
									"internalType": "bool",
									"name": "_approved",
									"type": "bool"
								}
							],
							"name": "setApprovalForAll",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "bytes4",
									"name": "interfaceId",
									"type": "bytes4"
								}
							],
							"name": "supportsInterface",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "symbol",
							"outputs": [
								{
									"internalType": "string",
									"name": "",
									"type": "string"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								}
							],
							"name": "tokenURI",
							"outputs": [
								{
									"internalType": "string",
									"name": "",
									"type": "string"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								}
							],
							"name": "transferFrom",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						}
					],
					"devdoc": {
						"details": "See https://eips.ethereum.org/EIPS/eip-721",
						"events": {
							"Approval(address,address,uint256)": {
								"details": "Emitted when `owner` enables `approved` to manage the `tokenId` token."
							},
							"ApprovalForAll(address,address,bool)": {
								"details": "Emitted when `owner` enables or disables (`approved`) `operator` to manage all of its assets."
							},
							"Transfer(address,address,uint256)": {
								"details": "Emitted when `tokenId` token is transferred from `from` to `to`."
							}
						},
						"kind": "dev",
						"methods": {
							"approve(address,uint256)": {
								"details": "Gives permission to `to` to transfer `tokenId` token to another account. The approval is cleared when the token is transferred. Only a single account can be approved at a time, so approving the zero address clears previous approvals. Requirements: - The caller must own the token or be an approved operator. - `tokenId` must exist. Emits an {Approval} event."
							},
							"balanceOf(address)": {
								"details": "Returns the number of tokens in ``owner``'s account."
							},
							"getApproved(uint256)": {
								"details": "Returns the account approved for `tokenId` token. Requirements: - `tokenId` must exist."
							},
							"isApprovedForAll(address,address)": {
								"details": "Returns if the `operator` is allowed to manage all of the assets of `owner`. See {setApprovalForAll}"
							},
							"name()": {
								"details": "Returns the token collection name."
							},
							"ownerOf(uint256)": {
								"details": "Returns the owner of the `tokenId` token. Requirements: - `tokenId` must exist."
							},
							"safeTransferFrom(address,address,uint256)": {
								"details": "Safely transfers `tokenId` token from `from` to `to`, checking first that contract recipients are aware of the ERC721 protocol to prevent tokens from being forever locked. Requirements: - `from` cannot be the zero address. - `to` cannot be the zero address. - `tokenId` token must exist and be owned by `from`. - If the caller is not `from`, it must have been allowed to move this token by either {approve} or {setApprovalForAll}. - If `to` refers to a smart contract, it must implement {IERC721Receiver-onERC721Received}, which is called upon a safe transfer. Emits a {Transfer} event."
							},
							"safeTransferFrom(address,address,uint256,bytes)": {
								"details": "Safely transfers `tokenId` token from `from` to `to`. Requirements: - `from` cannot be the zero address. - `to` cannot be the zero address. - `tokenId` token must exist and be owned by `from`. - If the caller is not `from`, it must be approved to move this token by either {approve} or {setApprovalForAll}. - If `to` refers to a smart contract, it must implement {IERC721Receiver-onERC721Received}, which is called upon a safe transfer. Emits a {Transfer} event."
							},
							"setApprovalForAll(address,bool)": {
								"details": "Approve or remove `operator` as an operator for the caller. Operators can call {transferFrom} or {safeTransferFrom} for any token owned by the caller. Requirements: - The `operator` cannot be the caller. Emits an {ApprovalForAll} event."
							},
							"supportsInterface(bytes4)": {
								"details": "Returns true if this contract implements the interface defined by `interfaceId`. See the corresponding https://eips.ethereum.org/EIPS/eip-165#how-interfaces-are-identified[EIP section] to learn more about how these ids are created. This function call must use less than 30 000 gas."
							},
							"symbol()": {
								"details": "Returns the token collection symbol."
							},
							"tokenURI(uint256)": {
								"details": "Returns the Uniform Resource Identifier (URI) for `tokenId` token."
							},
							"transferFrom(address,address,uint256)": {
								"details": "Transfers `tokenId` token from `from` to `to`. WARNING: Note that the caller is responsible to confirm that the recipient is capable of receiving ERC721 or else they may be permanently lost. Usage of {safeTransferFrom} prevents loss, though the caller must understand this adds an external call which potentially creates a reentrancy vulnerability. Requirements: - `from` cannot be the zero address. - `to` cannot be the zero address. - `tokenId` token must be owned by `from`. - If the caller is not `from`, it must be approved to move this token by either {approve} or {setApprovalForAll}. Emits a {Transfer} event."
							}
						},
						"title": "ERC-721 Non-Fungible Token Standard, optional metadata extension",
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {
							"approve(address,uint256)": "095ea7b3",
							"balanceOf(address)": "70a08231",
							"getApproved(uint256)": "081812fc",
							"isApprovedForAll(address,address)": "e985e9c5",
							"name()": "06fdde03",
							"ownerOf(uint256)": "6352211e",
							"safeTransferFrom(address,address,uint256)": "42842e0e",
							"safeTransferFrom(address,address,uint256,bytes)": "b88d4fde",
							"setApprovalForAll(address,bool)": "a22cb465",
							"supportsInterface(bytes4)": "01ffc9a7",
							"symbol()": "95d89b41",
							"tokenURI(uint256)": "c87b56dd",
							"transferFrom(address,address,uint256)": "23b872dd"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.21+commit.d9974bed\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"approved\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"Approval\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"bool\",\"name\":\"approved\",\"type\":\"bool\"}],\"name\":\"ApprovalForAll\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"Transfer\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"approve\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"}],\"name\":\"balanceOf\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"balance\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"getApproved\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"}],\"name\":\"isApprovedForAll\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"name\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"ownerOf\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"safeTransferFrom\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"},{\"internalType\":\"bytes\",\"name\":\"data\",\"type\":\"bytes\"}],\"name\":\"safeTransferFrom\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"},{\"internalType\":\"bool\",\"name\":\"_approved\",\"type\":\"bool\"}],\"name\":\"setApprovalForAll\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes4\",\"name\":\"interfaceId\",\"type\":\"bytes4\"}],\"name\":\"supportsInterface\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"symbol\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"tokenURI\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"transferFrom\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"See https://eips.ethereum.org/EIPS/eip-721\",\"events\":{\"Approval(address,address,uint256)\":{\"details\":\"Emitted when `owner` enables `approved` to manage the `tokenId` token.\"},\"ApprovalForAll(address,address,bool)\":{\"details\":\"Emitted when `owner` enables or disables (`approved`) `operator` to manage all of its assets.\"},\"Transfer(address,address,uint256)\":{\"details\":\"Emitted when `tokenId` token is transferred from `from` to `to`.\"}},\"kind\":\"dev\",\"methods\":{\"approve(address,uint256)\":{\"details\":\"Gives permission to `to` to transfer `tokenId` token to another account. The approval is cleared when the token is transferred. Only a single account can be approved at a time, so approving the zero address clears previous approvals. Requirements: - The caller must own the token or be an approved operator. - `tokenId` must exist. Emits an {Approval} event.\"},\"balanceOf(address)\":{\"details\":\"Returns the number of tokens in ``owner``'s account.\"},\"getApproved(uint256)\":{\"details\":\"Returns the account approved for `tokenId` token. Requirements: - `tokenId` must exist.\"},\"isApprovedForAll(address,address)\":{\"details\":\"Returns if the `operator` is allowed to manage all of the assets of `owner`. See {setApprovalForAll}\"},\"name()\":{\"details\":\"Returns the token collection name.\"},\"ownerOf(uint256)\":{\"details\":\"Returns the owner of the `tokenId` token. Requirements: - `tokenId` must exist.\"},\"safeTransferFrom(address,address,uint256)\":{\"details\":\"Safely transfers `tokenId` token from `from` to `to`, checking first that contract recipients are aware of the ERC721 protocol to prevent tokens from being forever locked. Requirements: - `from` cannot be the zero address. - `to` cannot be the zero address. - `tokenId` token must exist and be owned by `from`. - If the caller is not `from`, it must have been allowed to move this token by either {approve} or {setApprovalForAll}. - If `to` refers to a smart contract, it must implement {IERC721Receiver-onERC721Received}, which is called upon a safe transfer. Emits a {Transfer} event.\"},\"safeTransferFrom(address,address,uint256,bytes)\":{\"details\":\"Safely transfers `tokenId` token from `from` to `to`. Requirements: - `from` cannot be the zero address. - `to` cannot be the zero address. - `tokenId` token must exist and be owned by `from`. - If the caller is not `from`, it must be approved to move this token by either {approve} or {setApprovalForAll}. - If `to` refers to a smart contract, it must implement {IERC721Receiver-onERC721Received}, which is called upon a safe transfer. Emits a {Transfer} event.\"},\"setApprovalForAll(address,bool)\":{\"details\":\"Approve or remove `operator` as an operator for the caller. Operators can call {transferFrom} or {safeTransferFrom} for any token owned by the caller. Requirements: - The `operator` cannot be the caller. Emits an {ApprovalForAll} event.\"},\"supportsInterface(bytes4)\":{\"details\":\"Returns true if this contract implements the interface defined by `interfaceId`. See the corresponding https://eips.ethereum.org/EIPS/eip-165#how-interfaces-are-identified[EIP section] to learn more about how these ids are created. This function call must use less than 30 000 gas.\"},\"symbol()\":{\"details\":\"Returns the token collection symbol.\"},\"tokenURI(uint256)\":{\"details\":\"Returns the Uniform Resource Identifier (URI) for `tokenId` token.\"},\"transferFrom(address,address,uint256)\":{\"details\":\"Transfers `tokenId` token from `from` to `to`. WARNING: Note that the caller is responsible to confirm that the recipient is capable of receiving ERC721 or else they may be permanently lost. Usage of {safeTransferFrom} prevents loss, though the caller must understand this adds an external call which potentially creates a reentrancy vulnerability. Requirements: - `from` cannot be the zero address. - `to` cannot be the zero address. - `tokenId` token must be owned by `from`. - If the caller is not `from`, it must be approved to move this token by either {approve} or {setApprovalForAll}. Emits a {Transfer} event.\"}},\"title\":\"ERC-721 Non-Fungible Token Standard, optional metadata extension\",\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/token/ERC721/extensions/IERC721Metadata.sol\":\"IERC721Metadata\"},\"evmVersion\":\"shanghai\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/token/ERC721/IERC721.sol\":{\"keccak256\":\"0xab28a56179c1db258c9bf5235b382698cb650debecb51b23d12be9e241374b68\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://daae589a9d6fa7e55f99f86c0a16796ca490f243fb3693632c3711c0646c1d56\",\"dweb:/ipfs/QmR3zpd7wNw3rcUdekwiv6FYHJqksuTCXLVioTxu6Fbxk3\"]},\"@openzeppelin/contracts/token/ERC721/extensions/IERC721Metadata.sol\":{\"keccak256\":\"0x75b829ff2f26c14355d1cba20e16fe7b29ca58eb5fef665ede48bc0f9c6c74b9\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://a0a107160525724f9e1bbbab031defc2f298296dd9e331f16a6f7130cec32146\",\"dweb:/ipfs/QmemujxSd7gX8A9M8UwmNbz4Ms3U9FG9QfudUgxwvTmPWf\"]},\"@openzeppelin/contracts/utils/introspection/IERC165.sol\":{\"keccak256\":\"0x447a5f3ddc18419d41ff92b3773fb86471b1db25773e07f877f548918a185bf1\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://be161e54f24e5c6fae81a12db1a8ae87bc5ae1b0ddc805d82a1440a68455088f\",\"dweb:/ipfs/QmP7C3CHdY9urF4dEMb9wmsp1wMxHF6nhA2yQE5SKiPAdy\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"@openzeppelin/contracts/utils/Address.sol": {
				"Address": {
					"abi": [],
					"devdoc": {
						"details": "Collection of functions related to the address type",
						"kind": "dev",
						"methods": {},
						"version": 1
					},
					"evm": {
						"assembly": "    /* \"@openzeppelin/contracts/utils/Address.sol\":194:9158  library Address {... */\n  dataSize(sub_0)\n  dataOffset(sub_0)\n  0x0b\n  dup3\n  dup3\n  dup3\n  codecopy\n  dup1\n  mload\n  0x00\n  byte\n  0x73\n  eq\n  tag_1\n  jumpi\n  mstore(0x00, shl(0xe0, 0x4e487b71))\n  mstore(0x04, 0x00)\n  revert(0x00, 0x24)\ntag_1:\n  mstore(0x00, address)\n  0x73\n  dup2\n  mstore8\n  dup3\n  dup2\n  return\nstop\n\nsub_0: assembly {\n        /* \"@openzeppelin/contracts/utils/Address.sol\":194:9158  library Address {... */\n      eq(address, deployTimeAddress())\n      mstore(0x40, 0x80)\n      0x00\n      dup1\n      revert\n\n    auxdata: 0xa26469706673582212203cf0b5f5299e9bb2e9fa09500b8a85b67ff7da0cedc1893d41671c1bb134bc1e64736f6c63430008150033\n}\n",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "60556032600b8282823980515f1a607314602657634e487b7160e01b5f525f60045260245ffd5b305f52607381538281f3fe730000000000000000000000000000000000000000301460806040525f80fdfea26469706673582212203cf0b5f5299e9bb2e9fa09500b8a85b67ff7da0cedc1893d41671c1bb134bc1e64736f6c63430008150033",
							"opcodes": "PUSH1 0x55 PUSH1 0x32 PUSH1 0xB DUP3 DUP3 DUP3 CODECOPY DUP1 MLOAD PUSH0 BYTE PUSH1 0x73 EQ PUSH1 0x26 JUMPI PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH0 MSTORE PUSH0 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH0 REVERT JUMPDEST ADDRESS PUSH0 MSTORE PUSH1 0x73 DUP2 MSTORE8 DUP3 DUP2 RETURN INVALID PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 EXTCODECOPY CREATE 0xB5 CREATE2 0x29 SWAP15 SWAP12 0xB2 0xE9 STATICCALL MULMOD POP SIGNEXTEND DUP11 DUP6 0xB6 PUSH32 0xF7DA0CEDC1893D41671C1BB134BC1E64736F6C63430008150033000000000000 ",
							"sourceMap": "194:8964:4:-:0;;;;;;;;;;;;;;;-1:-1:-1;;;194:8964:4;;;;;;;;;;;;;;;;;"
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "730000000000000000000000000000000000000000301460806040525f80fdfea26469706673582212203cf0b5f5299e9bb2e9fa09500b8a85b67ff7da0cedc1893d41671c1bb134bc1e64736f6c63430008150033",
							"opcodes": "PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 EXTCODECOPY CREATE 0xB5 CREATE2 0x29 SWAP15 SWAP12 0xB2 0xE9 STATICCALL MULMOD POP SIGNEXTEND DUP11 DUP6 0xB6 PUSH32 0xF7DA0CEDC1893D41671C1BB134BC1E64736F6C63430008150033000000000000 ",
							"sourceMap": "194:8964:4:-:0;;;;;;;;"
						},
						"gasEstimates": {
							"creation": {
								"codeDepositCost": "17000",
								"executionCost": "96",
								"totalCost": "17096"
							},
							"internal": {
								"_revert(bytes memory,string memory)": "infinite",
								"functionCall(address,bytes memory)": "infinite",
								"functionCall(address,bytes memory,string memory)": "infinite",
								"functionCallWithValue(address,bytes memory,uint256)": "infinite",
								"functionCallWithValue(address,bytes memory,uint256,string memory)": "infinite",
								"functionDelegateCall(address,bytes memory)": "infinite",
								"functionDelegateCall(address,bytes memory,string memory)": "infinite",
								"functionStaticCall(address,bytes memory)": "infinite",
								"functionStaticCall(address,bytes memory,string memory)": "infinite",
								"isContract(address)": "infinite",
								"sendValue(address payable,uint256)": "infinite",
								"verifyCallResult(bool,bytes memory,string memory)": "infinite",
								"verifyCallResultFromTarget(address,bool,bytes memory,string memory)": "infinite"
							}
						},
						"legacyAssembly": {
							".code": [
								{
									"begin": 194,
									"end": 9158,
									"name": "PUSH #[$]",
									"source": 4,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 194,
									"end": 9158,
									"name": "PUSH [$]",
									"source": 4,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 194,
									"end": 9158,
									"name": "PUSH",
									"source": 4,
									"value": "B"
								},
								{
									"begin": 194,
									"end": 9158,
									"name": "DUP3",
									"source": 4
								},
								{
									"begin": 194,
									"end": 9158,
									"name": "DUP3",
									"source": 4
								},
								{
									"begin": 194,
									"end": 9158,
									"name": "DUP3",
									"source": 4
								},
								{
									"begin": 194,
									"end": 9158,
									"name": "CODECOPY",
									"source": 4
								},
								{
									"begin": 194,
									"end": 9158,
									"name": "DUP1",
									"source": 4
								},
								{
									"begin": 194,
									"end": 9158,
									"name": "MLOAD",
									"source": 4
								},
								{
									"begin": 194,
									"end": 9158,
									"name": "PUSH",
									"source": 4,
									"value": "0"
								},
								{
									"begin": 194,
									"end": 9158,
									"name": "BYTE",
									"source": 4
								},
								{
									"begin": 194,
									"end": 9158,
									"name": "PUSH",
									"source": 4,
									"value": "73"
								},
								{
									"begin": 194,
									"end": 9158,
									"name": "EQ",
									"source": 4
								},
								{
									"begin": 194,
									"end": 9158,
									"name": "PUSH [tag]",
									"source": 4,
									"value": "1"
								},
								{
									"begin": 194,
									"end": 9158,
									"name": "JUMPI",
									"source": 4
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "4E487B71"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "E0"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SHL",
									"source": -1
								},
								{
									"begin": 194,
									"end": 9158,
									"name": "PUSH",
									"source": 4,
									"value": "0"
								},
								{
									"begin": 194,
									"end": 9158,
									"name": "MSTORE",
									"source": 4
								},
								{
									"begin": 194,
									"end": 9158,
									"name": "PUSH",
									"source": 4,
									"value": "0"
								},
								{
									"begin": 194,
									"end": 9158,
									"name": "PUSH",
									"source": 4,
									"value": "4"
								},
								{
									"begin": 194,
									"end": 9158,
									"name": "MSTORE",
									"source": 4
								},
								{
									"begin": 194,
									"end": 9158,
									"name": "PUSH",
									"source": 4,
									"value": "24"
								},
								{
									"begin": 194,
									"end": 9158,
									"name": "PUSH",
									"source": 4,
									"value": "0"
								},
								{
									"begin": 194,
									"end": 9158,
									"name": "REVERT",
									"source": 4
								},
								{
									"begin": 194,
									"end": 9158,
									"name": "tag",
									"source": 4,
									"value": "1"
								},
								{
									"begin": 194,
									"end": 9158,
									"name": "JUMPDEST",
									"source": 4
								},
								{
									"begin": 194,
									"end": 9158,
									"name": "ADDRESS",
									"source": 4
								},
								{
									"begin": 194,
									"end": 9158,
									"name": "PUSH",
									"source": 4,
									"value": "0"
								},
								{
									"begin": 194,
									"end": 9158,
									"name": "MSTORE",
									"source": 4
								},
								{
									"begin": 194,
									"end": 9158,
									"name": "PUSH",
									"source": 4,
									"value": "73"
								},
								{
									"begin": 194,
									"end": 9158,
									"name": "DUP2",
									"source": 4
								},
								{
									"begin": 194,
									"end": 9158,
									"name": "MSTORE8",
									"source": 4
								},
								{
									"begin": 194,
									"end": 9158,
									"name": "DUP3",
									"source": 4
								},
								{
									"begin": 194,
									"end": 9158,
									"name": "DUP2",
									"source": 4
								},
								{
									"begin": 194,
									"end": 9158,
									"name": "RETURN",
									"source": 4
								}
							],
							".data": {
								"0": {
									".auxdata": "a26469706673582212203cf0b5f5299e9bb2e9fa09500b8a85b67ff7da0cedc1893d41671c1bb134bc1e64736f6c63430008150033",
									".code": [
										{
											"begin": 194,
											"end": 9158,
											"name": "PUSHDEPLOYADDRESS",
											"source": 4
										},
										{
											"begin": 194,
											"end": 9158,
											"name": "ADDRESS",
											"source": 4
										},
										{
											"begin": 194,
											"end": 9158,
											"name": "EQ",
											"source": 4
										},
										{
											"begin": 194,
											"end": 9158,
											"name": "PUSH",
											"source": 4,
											"value": "80"
										},
										{
											"begin": 194,
											"end": 9158,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 194,
											"end": 9158,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 194,
											"end": 9158,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 194,
											"end": 9158,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 194,
											"end": 9158,
											"name": "REVERT",
											"source": 4
										}
									]
								}
							},
							"sourceList": [
								"@openzeppelin/contracts/token/ERC721/ERC721.sol",
								"@openzeppelin/contracts/token/ERC721/IERC721.sol",
								"@openzeppelin/contracts/token/ERC721/IERC721Receiver.sol",
								"@openzeppelin/contracts/token/ERC721/extensions/IERC721Metadata.sol",
								"@openzeppelin/contracts/utils/Address.sol",
								"@openzeppelin/contracts/utils/Context.sol",
								"@openzeppelin/contracts/utils/Counters.sol",
								"@openzeppelin/contracts/utils/Strings.sol",
								"@openzeppelin/contracts/utils/introspection/ERC165.sol",
								"@openzeppelin/contracts/utils/introspection/IERC165.sol",
								"@openzeppelin/contracts/utils/math/Math.sol",
								"contracts/SingapurContract.sol",
								"#utility.yul"
							]
						},
						"methodIdentifiers": {}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.21+commit.d9974bed\"},\"language\":\"Solidity\",\"output\":{\"abi\":[],\"devdoc\":{\"details\":\"Collection of functions related to the address type\",\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/utils/Address.sol\":\"Address\"},\"evmVersion\":\"shanghai\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/utils/Address.sol\":{\"keccak256\":\"0xf96f969e24029d43d0df89e59d365f277021dac62b48e1c1e3ebe0acdd7f1ca1\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://ec772b45a624be516f1c81970caa8a2e144301e9d0921cbc1a2789fef39a1269\",\"dweb:/ipfs/QmNyjwxCrGhQMyzLD93oUobJXVe9ceJvRvfXwbEtuxPiEj\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"@openzeppelin/contracts/utils/Context.sol": {
				"Context": {
					"abi": [],
					"devdoc": {
						"details": "Provides information about the current execution context, including the sender of the transaction and its data. While these are generally available via msg.sender and msg.data, they should not be accessed in such a direct manner, since when dealing with meta-transactions the account sending and paying for execution may not be the actual sender (as far as an application is concerned). This contract is only required for intermediate, library-like contracts.",
						"kind": "dev",
						"methods": {},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.21+commit.d9974bed\"},\"language\":\"Solidity\",\"output\":{\"abi\":[],\"devdoc\":{\"details\":\"Provides information about the current execution context, including the sender of the transaction and its data. While these are generally available via msg.sender and msg.data, they should not be accessed in such a direct manner, since when dealing with meta-transactions the account sending and paying for execution may not be the actual sender (as far as an application is concerned). This contract is only required for intermediate, library-like contracts.\",\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/utils/Context.sol\":\"Context\"},\"evmVersion\":\"shanghai\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/utils/Context.sol\":{\"keccak256\":\"0xe2e337e6dde9ef6b680e07338c493ebea1b5fd09b43424112868e9cc1706bca7\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://6df0ddf21ce9f58271bdfaa85cde98b200ef242a05a3f85c2bc10a8294800a92\",\"dweb:/ipfs/QmRK2Y5Yc6BK7tGKkgsgn3aJEQGi5aakeSPZvS65PV8Xp3\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"@openzeppelin/contracts/utils/Counters.sol": {
				"Counters": {
					"abi": [],
					"devdoc": {
						"author": "Matt Condon (@shrugs)",
						"details": "Provides counters that can only be incremented, decremented or reset. This can be used e.g. to track the number of elements in a mapping, issuing ERC721 ids, or counting request ids. Include with `using Counters for Counters.Counter;`",
						"kind": "dev",
						"methods": {},
						"title": "Counters",
						"version": 1
					},
					"evm": {
						"assembly": "    /* \"@openzeppelin/contracts/utils/Counters.sol\":424:1395  library Counters {... */\n  dataSize(sub_0)\n  dataOffset(sub_0)\n  0x0b\n  dup3\n  dup3\n  dup3\n  codecopy\n  dup1\n  mload\n  0x00\n  byte\n  0x73\n  eq\n  tag_1\n  jumpi\n  mstore(0x00, shl(0xe0, 0x4e487b71))\n  mstore(0x04, 0x00)\n  revert(0x00, 0x24)\ntag_1:\n  mstore(0x00, address)\n  0x73\n  dup2\n  mstore8\n  dup3\n  dup2\n  return\nstop\n\nsub_0: assembly {\n        /* \"@openzeppelin/contracts/utils/Counters.sol\":424:1395  library Counters {... */\n      eq(address, deployTimeAddress())\n      mstore(0x40, 0x80)\n      0x00\n      dup1\n      revert\n\n    auxdata: 0xa26469706673582212201c5453ff7a3509235b3182f9c0009b2c073ca0c4eda2827e18d4f66f2957448664736f6c63430008150033\n}\n",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "60556032600b8282823980515f1a607314602657634e487b7160e01b5f525f60045260245ffd5b305f52607381538281f3fe730000000000000000000000000000000000000000301460806040525f80fdfea26469706673582212201c5453ff7a3509235b3182f9c0009b2c073ca0c4eda2827e18d4f66f2957448664736f6c63430008150033",
							"opcodes": "PUSH1 0x55 PUSH1 0x32 PUSH1 0xB DUP3 DUP3 DUP3 CODECOPY DUP1 MLOAD PUSH0 BYTE PUSH1 0x73 EQ PUSH1 0x26 JUMPI PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH0 MSTORE PUSH0 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH0 REVERT JUMPDEST ADDRESS PUSH0 MSTORE PUSH1 0x73 DUP2 MSTORE8 DUP3 DUP2 RETURN INVALID PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 SHR SLOAD MSTORE8 SELFDESTRUCT PUSH27 0x3509235B3182F9C0009B2C073CA0C4EDA2827E18D4F66F29574486 PUSH5 0x736F6C6343 STOP ADDMOD ISZERO STOP CALLER ",
							"sourceMap": "424:971:6:-:0;;;;;;;;;;;;;;;-1:-1:-1;;;424:971:6;;;;;;;;;;;;;;;;;"
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "730000000000000000000000000000000000000000301460806040525f80fdfea26469706673582212201c5453ff7a3509235b3182f9c0009b2c073ca0c4eda2827e18d4f66f2957448664736f6c63430008150033",
							"opcodes": "PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 SHR SLOAD MSTORE8 SELFDESTRUCT PUSH27 0x3509235B3182F9C0009B2C073CA0C4EDA2827E18D4F66F29574486 PUSH5 0x736F6C6343 STOP ADDMOD ISZERO STOP CALLER ",
							"sourceMap": "424:971:6:-:0;;;;;;;;"
						},
						"gasEstimates": {
							"creation": {
								"codeDepositCost": "17000",
								"executionCost": "96",
								"totalCost": "17096"
							},
							"internal": {
								"current(struct Counters.Counter storage pointer)": "infinite",
								"decrement(struct Counters.Counter storage pointer)": "infinite",
								"increment(struct Counters.Counter storage pointer)": "infinite",
								"reset(struct Counters.Counter storage pointer)": "infinite"
							}
						},
						"legacyAssembly": {
							".code": [
								{
									"begin": 424,
									"end": 1395,
									"name": "PUSH #[$]",
									"source": 6,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 424,
									"end": 1395,
									"name": "PUSH [$]",
									"source": 6,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 424,
									"end": 1395,
									"name": "PUSH",
									"source": 6,
									"value": "B"
								},
								{
									"begin": 424,
									"end": 1395,
									"name": "DUP3",
									"source": 6
								},
								{
									"begin": 424,
									"end": 1395,
									"name": "DUP3",
									"source": 6
								},
								{
									"begin": 424,
									"end": 1395,
									"name": "DUP3",
									"source": 6
								},
								{
									"begin": 424,
									"end": 1395,
									"name": "CODECOPY",
									"source": 6
								},
								{
									"begin": 424,
									"end": 1395,
									"name": "DUP1",
									"source": 6
								},
								{
									"begin": 424,
									"end": 1395,
									"name": "MLOAD",
									"source": 6
								},
								{
									"begin": 424,
									"end": 1395,
									"name": "PUSH",
									"source": 6,
									"value": "0"
								},
								{
									"begin": 424,
									"end": 1395,
									"name": "BYTE",
									"source": 6
								},
								{
									"begin": 424,
									"end": 1395,
									"name": "PUSH",
									"source": 6,
									"value": "73"
								},
								{
									"begin": 424,
									"end": 1395,
									"name": "EQ",
									"source": 6
								},
								{
									"begin": 424,
									"end": 1395,
									"name": "PUSH [tag]",
									"source": 6,
									"value": "1"
								},
								{
									"begin": 424,
									"end": 1395,
									"name": "JUMPI",
									"source": 6
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "4E487B71"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "E0"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SHL",
									"source": -1
								},
								{
									"begin": 424,
									"end": 1395,
									"name": "PUSH",
									"source": 6,
									"value": "0"
								},
								{
									"begin": 424,
									"end": 1395,
									"name": "MSTORE",
									"source": 6
								},
								{
									"begin": 424,
									"end": 1395,
									"name": "PUSH",
									"source": 6,
									"value": "0"
								},
								{
									"begin": 424,
									"end": 1395,
									"name": "PUSH",
									"source": 6,
									"value": "4"
								},
								{
									"begin": 424,
									"end": 1395,
									"name": "MSTORE",
									"source": 6
								},
								{
									"begin": 424,
									"end": 1395,
									"name": "PUSH",
									"source": 6,
									"value": "24"
								},
								{
									"begin": 424,
									"end": 1395,
									"name": "PUSH",
									"source": 6,
									"value": "0"
								},
								{
									"begin": 424,
									"end": 1395,
									"name": "REVERT",
									"source": 6
								},
								{
									"begin": 424,
									"end": 1395,
									"name": "tag",
									"source": 6,
									"value": "1"
								},
								{
									"begin": 424,
									"end": 1395,
									"name": "JUMPDEST",
									"source": 6
								},
								{
									"begin": 424,
									"end": 1395,
									"name": "ADDRESS",
									"source": 6
								},
								{
									"begin": 424,
									"end": 1395,
									"name": "PUSH",
									"source": 6,
									"value": "0"
								},
								{
									"begin": 424,
									"end": 1395,
									"name": "MSTORE",
									"source": 6
								},
								{
									"begin": 424,
									"end": 1395,
									"name": "PUSH",
									"source": 6,
									"value": "73"
								},
								{
									"begin": 424,
									"end": 1395,
									"name": "DUP2",
									"source": 6
								},
								{
									"begin": 424,
									"end": 1395,
									"name": "MSTORE8",
									"source": 6
								},
								{
									"begin": 424,
									"end": 1395,
									"name": "DUP3",
									"source": 6
								},
								{
									"begin": 424,
									"end": 1395,
									"name": "DUP2",
									"source": 6
								},
								{
									"begin": 424,
									"end": 1395,
									"name": "RETURN",
									"source": 6
								}
							],
							".data": {
								"0": {
									".auxdata": "a26469706673582212201c5453ff7a3509235b3182f9c0009b2c073ca0c4eda2827e18d4f66f2957448664736f6c63430008150033",
									".code": [
										{
											"begin": 424,
											"end": 1395,
											"name": "PUSHDEPLOYADDRESS",
											"source": 6
										},
										{
											"begin": 424,
											"end": 1395,
											"name": "ADDRESS",
											"source": 6
										},
										{
											"begin": 424,
											"end": 1395,
											"name": "EQ",
											"source": 6
										},
										{
											"begin": 424,
											"end": 1395,
											"name": "PUSH",
											"source": 6,
											"value": "80"
										},
										{
											"begin": 424,
											"end": 1395,
											"name": "PUSH",
											"source": 6,
											"value": "40"
										},
										{
											"begin": 424,
											"end": 1395,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 424,
											"end": 1395,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 424,
											"end": 1395,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 424,
											"end": 1395,
											"name": "REVERT",
											"source": 6
										}
									]
								}
							},
							"sourceList": [
								"@openzeppelin/contracts/token/ERC721/ERC721.sol",
								"@openzeppelin/contracts/token/ERC721/IERC721.sol",
								"@openzeppelin/contracts/token/ERC721/IERC721Receiver.sol",
								"@openzeppelin/contracts/token/ERC721/extensions/IERC721Metadata.sol",
								"@openzeppelin/contracts/utils/Address.sol",
								"@openzeppelin/contracts/utils/Context.sol",
								"@openzeppelin/contracts/utils/Counters.sol",
								"@openzeppelin/contracts/utils/Strings.sol",
								"@openzeppelin/contracts/utils/introspection/ERC165.sol",
								"@openzeppelin/contracts/utils/introspection/IERC165.sol",
								"@openzeppelin/contracts/utils/math/Math.sol",
								"contracts/SingapurContract.sol",
								"#utility.yul"
							]
						},
						"methodIdentifiers": {}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.21+commit.d9974bed\"},\"language\":\"Solidity\",\"output\":{\"abi\":[],\"devdoc\":{\"author\":\"Matt Condon (@shrugs)\",\"details\":\"Provides counters that can only be incremented, decremented or reset. This can be used e.g. to track the number of elements in a mapping, issuing ERC721 ids, or counting request ids. Include with `using Counters for Counters.Counter;`\",\"kind\":\"dev\",\"methods\":{},\"title\":\"Counters\",\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/utils/Counters.sol\":\"Counters\"},\"evmVersion\":\"shanghai\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/utils/Counters.sol\":{\"keccak256\":\"0xf0018c2440fbe238dd3a8732fa8e17a0f9dce84d31451dc8a32f6d62b349c9f1\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://59e1c62884d55b70f3ae5432b44bb3166ad71ae3acd19c57ab6ddc3c87c325ee\",\"dweb:/ipfs/QmezuXg5GK5oeA4F91EZhozBFekhq5TD966bHPH18cCqhu\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"@openzeppelin/contracts/utils/Strings.sol": {
				"Strings": {
					"abi": [],
					"devdoc": {
						"details": "String operations.",
						"kind": "dev",
						"methods": {},
						"version": 1
					},
					"evm": {
						"assembly": "    /* \"@openzeppelin/contracts/utils/Strings.sol\":188:2253  library Strings {... */\n  dataSize(sub_0)\n  dataOffset(sub_0)\n  0x0b\n  dup3\n  dup3\n  dup3\n  codecopy\n  dup1\n  mload\n  0x00\n  byte\n  0x73\n  eq\n  tag_1\n  jumpi\n  mstore(0x00, shl(0xe0, 0x4e487b71))\n  mstore(0x04, 0x00)\n  revert(0x00, 0x24)\ntag_1:\n  mstore(0x00, address)\n  0x73\n  dup2\n  mstore8\n  dup3\n  dup2\n  return\nstop\n\nsub_0: assembly {\n        /* \"@openzeppelin/contracts/utils/Strings.sol\":188:2253  library Strings {... */\n      eq(address, deployTimeAddress())\n      mstore(0x40, 0x80)\n      0x00\n      dup1\n      revert\n\n    auxdata: 0xa2646970667358221220f058fd8821580e12bf5275d34b9af1a49d50f6ee695ccd2dce005393f03e5bb764736f6c63430008150033\n}\n",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "60556032600b8282823980515f1a607314602657634e487b7160e01b5f525f60045260245ffd5b305f52607381538281f3fe730000000000000000000000000000000000000000301460806040525f80fdfea2646970667358221220f058fd8821580e12bf5275d34b9af1a49d50f6ee695ccd2dce005393f03e5bb764736f6c63430008150033",
							"opcodes": "PUSH1 0x55 PUSH1 0x32 PUSH1 0xB DUP3 DUP3 DUP3 CODECOPY DUP1 MLOAD PUSH0 BYTE PUSH1 0x73 EQ PUSH1 0x26 JUMPI PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH0 MSTORE PUSH0 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH0 REVERT JUMPDEST ADDRESS PUSH0 MSTORE PUSH1 0x73 DUP2 MSTORE8 DUP3 DUP2 RETURN INVALID PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 CREATE PC REVERT DUP9 0x21 PC 0xE SLT 0xBF MSTORE PUSH22 0xD34B9AF1A49D50F6EE695CCD2DCE005393F03E5BB764 PUSH20 0x6F6C634300081500330000000000000000000000 ",
							"sourceMap": "188:2065:7:-:0;;;;;;;;;;;;;;;-1:-1:-1;;;188:2065:7;;;;;;;;;;;;;;;;;"
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "730000000000000000000000000000000000000000301460806040525f80fdfea2646970667358221220f058fd8821580e12bf5275d34b9af1a49d50f6ee695ccd2dce005393f03e5bb764736f6c63430008150033",
							"opcodes": "PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 CREATE PC REVERT DUP9 0x21 PC 0xE SLT 0xBF MSTORE PUSH22 0xD34B9AF1A49D50F6EE695CCD2DCE005393F03E5BB764 PUSH20 0x6F6C634300081500330000000000000000000000 ",
							"sourceMap": "188:2065:7:-:0;;;;;;;;"
						},
						"gasEstimates": {
							"creation": {
								"codeDepositCost": "17000",
								"executionCost": "96",
								"totalCost": "17096"
							},
							"internal": {
								"toHexString(address)": "infinite",
								"toHexString(uint256)": "infinite",
								"toHexString(uint256,uint256)": "infinite",
								"toString(uint256)": "infinite"
							}
						},
						"legacyAssembly": {
							".code": [
								{
									"begin": 188,
									"end": 2253,
									"name": "PUSH #[$]",
									"source": 7,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 188,
									"end": 2253,
									"name": "PUSH [$]",
									"source": 7,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 188,
									"end": 2253,
									"name": "PUSH",
									"source": 7,
									"value": "B"
								},
								{
									"begin": 188,
									"end": 2253,
									"name": "DUP3",
									"source": 7
								},
								{
									"begin": 188,
									"end": 2253,
									"name": "DUP3",
									"source": 7
								},
								{
									"begin": 188,
									"end": 2253,
									"name": "DUP3",
									"source": 7
								},
								{
									"begin": 188,
									"end": 2253,
									"name": "CODECOPY",
									"source": 7
								},
								{
									"begin": 188,
									"end": 2253,
									"name": "DUP1",
									"source": 7
								},
								{
									"begin": 188,
									"end": 2253,
									"name": "MLOAD",
									"source": 7
								},
								{
									"begin": 188,
									"end": 2253,
									"name": "PUSH",
									"source": 7,
									"value": "0"
								},
								{
									"begin": 188,
									"end": 2253,
									"name": "BYTE",
									"source": 7
								},
								{
									"begin": 188,
									"end": 2253,
									"name": "PUSH",
									"source": 7,
									"value": "73"
								},
								{
									"begin": 188,
									"end": 2253,
									"name": "EQ",
									"source": 7
								},
								{
									"begin": 188,
									"end": 2253,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "1"
								},
								{
									"begin": 188,
									"end": 2253,
									"name": "JUMPI",
									"source": 7
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "4E487B71"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "E0"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SHL",
									"source": -1
								},
								{
									"begin": 188,
									"end": 2253,
									"name": "PUSH",
									"source": 7,
									"value": "0"
								},
								{
									"begin": 188,
									"end": 2253,
									"name": "MSTORE",
									"source": 7
								},
								{
									"begin": 188,
									"end": 2253,
									"name": "PUSH",
									"source": 7,
									"value": "0"
								},
								{
									"begin": 188,
									"end": 2253,
									"name": "PUSH",
									"source": 7,
									"value": "4"
								},
								{
									"begin": 188,
									"end": 2253,
									"name": "MSTORE",
									"source": 7
								},
								{
									"begin": 188,
									"end": 2253,
									"name": "PUSH",
									"source": 7,
									"value": "24"
								},
								{
									"begin": 188,
									"end": 2253,
									"name": "PUSH",
									"source": 7,
									"value": "0"
								},
								{
									"begin": 188,
									"end": 2253,
									"name": "REVERT",
									"source": 7
								},
								{
									"begin": 188,
									"end": 2253,
									"name": "tag",
									"source": 7,
									"value": "1"
								},
								{
									"begin": 188,
									"end": 2253,
									"name": "JUMPDEST",
									"source": 7
								},
								{
									"begin": 188,
									"end": 2253,
									"name": "ADDRESS",
									"source": 7
								},
								{
									"begin": 188,
									"end": 2253,
									"name": "PUSH",
									"source": 7,
									"value": "0"
								},
								{
									"begin": 188,
									"end": 2253,
									"name": "MSTORE",
									"source": 7
								},
								{
									"begin": 188,
									"end": 2253,
									"name": "PUSH",
									"source": 7,
									"value": "73"
								},
								{
									"begin": 188,
									"end": 2253,
									"name": "DUP2",
									"source": 7
								},
								{
									"begin": 188,
									"end": 2253,
									"name": "MSTORE8",
									"source": 7
								},
								{
									"begin": 188,
									"end": 2253,
									"name": "DUP3",
									"source": 7
								},
								{
									"begin": 188,
									"end": 2253,
									"name": "DUP2",
									"source": 7
								},
								{
									"begin": 188,
									"end": 2253,
									"name": "RETURN",
									"source": 7
								}
							],
							".data": {
								"0": {
									".auxdata": "a2646970667358221220f058fd8821580e12bf5275d34b9af1a49d50f6ee695ccd2dce005393f03e5bb764736f6c63430008150033",
									".code": [
										{
											"begin": 188,
											"end": 2253,
											"name": "PUSHDEPLOYADDRESS",
											"source": 7
										},
										{
											"begin": 188,
											"end": 2253,
											"name": "ADDRESS",
											"source": 7
										},
										{
											"begin": 188,
											"end": 2253,
											"name": "EQ",
											"source": 7
										},
										{
											"begin": 188,
											"end": 2253,
											"name": "PUSH",
											"source": 7,
											"value": "80"
										},
										{
											"begin": 188,
											"end": 2253,
											"name": "PUSH",
											"source": 7,
											"value": "40"
										},
										{
											"begin": 188,
											"end": 2253,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 188,
											"end": 2253,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 188,
											"end": 2253,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 188,
											"end": 2253,
											"name": "REVERT",
											"source": 7
										}
									]
								}
							},
							"sourceList": [
								"@openzeppelin/contracts/token/ERC721/ERC721.sol",
								"@openzeppelin/contracts/token/ERC721/IERC721.sol",
								"@openzeppelin/contracts/token/ERC721/IERC721Receiver.sol",
								"@openzeppelin/contracts/token/ERC721/extensions/IERC721Metadata.sol",
								"@openzeppelin/contracts/utils/Address.sol",
								"@openzeppelin/contracts/utils/Context.sol",
								"@openzeppelin/contracts/utils/Counters.sol",
								"@openzeppelin/contracts/utils/Strings.sol",
								"@openzeppelin/contracts/utils/introspection/ERC165.sol",
								"@openzeppelin/contracts/utils/introspection/IERC165.sol",
								"@openzeppelin/contracts/utils/math/Math.sol",
								"contracts/SingapurContract.sol",
								"#utility.yul"
							]
						},
						"methodIdentifiers": {}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.21+commit.d9974bed\"},\"language\":\"Solidity\",\"output\":{\"abi\":[],\"devdoc\":{\"details\":\"String operations.\",\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/utils/Strings.sol\":\"Strings\"},\"evmVersion\":\"shanghai\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/utils/Strings.sol\":{\"keccak256\":\"0xa4d1d62251f8574deb032a35fc948386a9b4de74b812d4f545a1ac120486b48a\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://8c969013129ba9e651a20735ef659fef6d8a1139ea3607bd4b26ddea2d645634\",\"dweb:/ipfs/QmVhVa6LGuzAcB8qgDtVHRkucn4ihj5UZr8xBLcJkP6ucb\"]},\"@openzeppelin/contracts/utils/math/Math.sol\":{\"keccak256\":\"0xa1e8e83cd0087785df04ac79fb395d9f3684caeaf973d9e2c71caef723a3a5d6\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://33bbf48cc069be677705037ba7520c22b1b622c23b33e1a71495f2d36549d40b\",\"dweb:/ipfs/Qmct36zWXv3j7LZB83uwbg7TXwnZSN1fqHNDZ93GG98bGz\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"@openzeppelin/contracts/utils/introspection/ERC165.sol": {
				"ERC165": {
					"abi": [
						{
							"inputs": [
								{
									"internalType": "bytes4",
									"name": "interfaceId",
									"type": "bytes4"
								}
							],
							"name": "supportsInterface",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "view",
							"type": "function"
						}
					],
					"devdoc": {
						"details": "Implementation of the {IERC165} interface. Contracts that want to implement ERC165 should inherit from this contract and override {supportsInterface} to check for the additional interface id that will be supported. For example: ```solidity function supportsInterface(bytes4 interfaceId) public view virtual override returns (bool) {     return interfaceId == type(MyInterface).interfaceId || super.supportsInterface(interfaceId); } ``` Alternatively, {ERC165Storage} provides an easier to use but more expensive implementation.",
						"kind": "dev",
						"methods": {
							"supportsInterface(bytes4)": {
								"details": "See {IERC165-supportsInterface}."
							}
						},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {
							"supportsInterface(bytes4)": "01ffc9a7"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.21+commit.d9974bed\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"bytes4\",\"name\":\"interfaceId\",\"type\":\"bytes4\"}],\"name\":\"supportsInterface\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"Implementation of the {IERC165} interface. Contracts that want to implement ERC165 should inherit from this contract and override {supportsInterface} to check for the additional interface id that will be supported. For example: ```solidity function supportsInterface(bytes4 interfaceId) public view virtual override returns (bool) {     return interfaceId == type(MyInterface).interfaceId || super.supportsInterface(interfaceId); } ``` Alternatively, {ERC165Storage} provides an easier to use but more expensive implementation.\",\"kind\":\"dev\",\"methods\":{\"supportsInterface(bytes4)\":{\"details\":\"See {IERC165-supportsInterface}.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/utils/introspection/ERC165.sol\":\"ERC165\"},\"evmVersion\":\"shanghai\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/utils/introspection/ERC165.sol\":{\"keccak256\":\"0xd10975de010d89fd1c78dc5e8a9a7e7f496198085c151648f20cba166b32582b\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://fb0048dee081f6fffa5f74afc3fb328483c2a30504e94a0ddd2a5114d731ec4d\",\"dweb:/ipfs/QmZptt1nmYoA5SgjwnSgWqgUSDgm4q52Yos3xhnMv3MV43\"]},\"@openzeppelin/contracts/utils/introspection/IERC165.sol\":{\"keccak256\":\"0x447a5f3ddc18419d41ff92b3773fb86471b1db25773e07f877f548918a185bf1\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://be161e54f24e5c6fae81a12db1a8ae87bc5ae1b0ddc805d82a1440a68455088f\",\"dweb:/ipfs/QmP7C3CHdY9urF4dEMb9wmsp1wMxHF6nhA2yQE5SKiPAdy\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"@openzeppelin/contracts/utils/introspection/IERC165.sol": {
				"IERC165": {
					"abi": [
						{
							"inputs": [
								{
									"internalType": "bytes4",
									"name": "interfaceId",
									"type": "bytes4"
								}
							],
							"name": "supportsInterface",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "view",
							"type": "function"
						}
					],
					"devdoc": {
						"details": "Interface of the ERC165 standard, as defined in the https://eips.ethereum.org/EIPS/eip-165[EIP]. Implementers can declare support of contract interfaces, which can then be queried by others ({ERC165Checker}). For an implementation, see {ERC165}.",
						"kind": "dev",
						"methods": {
							"supportsInterface(bytes4)": {
								"details": "Returns true if this contract implements the interface defined by `interfaceId`. See the corresponding https://eips.ethereum.org/EIPS/eip-165#how-interfaces-are-identified[EIP section] to learn more about how these ids are created. This function call must use less than 30 000 gas."
							}
						},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {
							"supportsInterface(bytes4)": "01ffc9a7"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.21+commit.d9974bed\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"bytes4\",\"name\":\"interfaceId\",\"type\":\"bytes4\"}],\"name\":\"supportsInterface\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"Interface of the ERC165 standard, as defined in the https://eips.ethereum.org/EIPS/eip-165[EIP]. Implementers can declare support of contract interfaces, which can then be queried by others ({ERC165Checker}). For an implementation, see {ERC165}.\",\"kind\":\"dev\",\"methods\":{\"supportsInterface(bytes4)\":{\"details\":\"Returns true if this contract implements the interface defined by `interfaceId`. See the corresponding https://eips.ethereum.org/EIPS/eip-165#how-interfaces-are-identified[EIP section] to learn more about how these ids are created. This function call must use less than 30 000 gas.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/utils/introspection/IERC165.sol\":\"IERC165\"},\"evmVersion\":\"shanghai\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/utils/introspection/IERC165.sol\":{\"keccak256\":\"0x447a5f3ddc18419d41ff92b3773fb86471b1db25773e07f877f548918a185bf1\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://be161e54f24e5c6fae81a12db1a8ae87bc5ae1b0ddc805d82a1440a68455088f\",\"dweb:/ipfs/QmP7C3CHdY9urF4dEMb9wmsp1wMxHF6nhA2yQE5SKiPAdy\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"@openzeppelin/contracts/utils/math/Math.sol": {
				"Math": {
					"abi": [],
					"devdoc": {
						"details": "Standard math utilities missing in the Solidity language.",
						"kind": "dev",
						"methods": {},
						"version": 1
					},
					"evm": {
						"assembly": "    /* \"@openzeppelin/contracts/utils/math/Math.sol\":202:12504  library Math {... */\n  dataSize(sub_0)\n  dataOffset(sub_0)\n  0x0b\n  dup3\n  dup3\n  dup3\n  codecopy\n  dup1\n  mload\n  0x00\n  byte\n  0x73\n  eq\n  tag_1\n  jumpi\n  mstore(0x00, shl(0xe0, 0x4e487b71))\n  mstore(0x04, 0x00)\n  revert(0x00, 0x24)\ntag_1:\n  mstore(0x00, address)\n  0x73\n  dup2\n  mstore8\n  dup3\n  dup2\n  return\nstop\n\nsub_0: assembly {\n        /* \"@openzeppelin/contracts/utils/math/Math.sol\":202:12504  library Math {... */\n      eq(address, deployTimeAddress())\n      mstore(0x40, 0x80)\n      0x00\n      dup1\n      revert\n\n    auxdata: 0xa2646970667358221220e14816d127c31d579455e9c75e810c366324b185c9326bab601de8d11a9a48eb64736f6c63430008150033\n}\n",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "60556032600b8282823980515f1a607314602657634e487b7160e01b5f525f60045260245ffd5b305f52607381538281f3fe730000000000000000000000000000000000000000301460806040525f80fdfea2646970667358221220e14816d127c31d579455e9c75e810c366324b185c9326bab601de8d11a9a48eb64736f6c63430008150033",
							"opcodes": "PUSH1 0x55 PUSH1 0x32 PUSH1 0xB DUP3 DUP3 DUP3 CODECOPY DUP1 MLOAD PUSH0 BYTE PUSH1 0x73 EQ PUSH1 0x26 JUMPI PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH0 MSTORE PUSH0 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH0 REVERT JUMPDEST ADDRESS PUSH0 MSTORE PUSH1 0x73 DUP2 MSTORE8 DUP3 DUP2 RETURN INVALID PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 0xE1 BASEFEE AND 0xD1 0x27 0xC3 SAR JUMPI SWAP5 SSTORE 0xE9 0xC7 0x5E DUP2 0xC CALLDATASIZE PUSH4 0x24B185C9 ORIGIN PUSH12 0xAB601DE8D11A9A48EB64736F PUSH13 0x63430008150033000000000000 ",
							"sourceMap": "202:12302:10:-:0;;;;;;;;;;;;;;;-1:-1:-1;;;202:12302:10;;;;;;;;;;;;;;;;;"
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "730000000000000000000000000000000000000000301460806040525f80fdfea2646970667358221220e14816d127c31d579455e9c75e810c366324b185c9326bab601de8d11a9a48eb64736f6c63430008150033",
							"opcodes": "PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 0xE1 BASEFEE AND 0xD1 0x27 0xC3 SAR JUMPI SWAP5 SSTORE 0xE9 0xC7 0x5E DUP2 0xC CALLDATASIZE PUSH4 0x24B185C9 ORIGIN PUSH12 0xAB601DE8D11A9A48EB64736F PUSH13 0x63430008150033000000000000 ",
							"sourceMap": "202:12302:10:-:0;;;;;;;;"
						},
						"gasEstimates": {
							"creation": {
								"codeDepositCost": "17000",
								"executionCost": "96",
								"totalCost": "17096"
							},
							"internal": {
								"average(uint256,uint256)": "infinite",
								"ceilDiv(uint256,uint256)": "infinite",
								"log10(uint256)": "infinite",
								"log10(uint256,enum Math.Rounding)": "infinite",
								"log2(uint256)": "infinite",
								"log2(uint256,enum Math.Rounding)": "infinite",
								"log256(uint256)": "infinite",
								"log256(uint256,enum Math.Rounding)": "infinite",
								"max(uint256,uint256)": "infinite",
								"min(uint256,uint256)": "infinite",
								"mulDiv(uint256,uint256,uint256)": "infinite",
								"mulDiv(uint256,uint256,uint256,enum Math.Rounding)": "infinite",
								"sqrt(uint256)": "infinite",
								"sqrt(uint256,enum Math.Rounding)": "infinite"
							}
						},
						"legacyAssembly": {
							".code": [
								{
									"begin": 202,
									"end": 12504,
									"name": "PUSH #[$]",
									"source": 10,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 202,
									"end": 12504,
									"name": "PUSH [$]",
									"source": 10,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 202,
									"end": 12504,
									"name": "PUSH",
									"source": 10,
									"value": "B"
								},
								{
									"begin": 202,
									"end": 12504,
									"name": "DUP3",
									"source": 10
								},
								{
									"begin": 202,
									"end": 12504,
									"name": "DUP3",
									"source": 10
								},
								{
									"begin": 202,
									"end": 12504,
									"name": "DUP3",
									"source": 10
								},
								{
									"begin": 202,
									"end": 12504,
									"name": "CODECOPY",
									"source": 10
								},
								{
									"begin": 202,
									"end": 12504,
									"name": "DUP1",
									"source": 10
								},
								{
									"begin": 202,
									"end": 12504,
									"name": "MLOAD",
									"source": 10
								},
								{
									"begin": 202,
									"end": 12504,
									"name": "PUSH",
									"source": 10,
									"value": "0"
								},
								{
									"begin": 202,
									"end": 12504,
									"name": "BYTE",
									"source": 10
								},
								{
									"begin": 202,
									"end": 12504,
									"name": "PUSH",
									"source": 10,
									"value": "73"
								},
								{
									"begin": 202,
									"end": 12504,
									"name": "EQ",
									"source": 10
								},
								{
									"begin": 202,
									"end": 12504,
									"name": "PUSH [tag]",
									"source": 10,
									"value": "1"
								},
								{
									"begin": 202,
									"end": 12504,
									"name": "JUMPI",
									"source": 10
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "4E487B71"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "E0"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SHL",
									"source": -1
								},
								{
									"begin": 202,
									"end": 12504,
									"name": "PUSH",
									"source": 10,
									"value": "0"
								},
								{
									"begin": 202,
									"end": 12504,
									"name": "MSTORE",
									"source": 10
								},
								{
									"begin": 202,
									"end": 12504,
									"name": "PUSH",
									"source": 10,
									"value": "0"
								},
								{
									"begin": 202,
									"end": 12504,
									"name": "PUSH",
									"source": 10,
									"value": "4"
								},
								{
									"begin": 202,
									"end": 12504,
									"name": "MSTORE",
									"source": 10
								},
								{
									"begin": 202,
									"end": 12504,
									"name": "PUSH",
									"source": 10,
									"value": "24"
								},
								{
									"begin": 202,
									"end": 12504,
									"name": "PUSH",
									"source": 10,
									"value": "0"
								},
								{
									"begin": 202,
									"end": 12504,
									"name": "REVERT",
									"source": 10
								},
								{
									"begin": 202,
									"end": 12504,
									"name": "tag",
									"source": 10,
									"value": "1"
								},
								{
									"begin": 202,
									"end": 12504,
									"name": "JUMPDEST",
									"source": 10
								},
								{
									"begin": 202,
									"end": 12504,
									"name": "ADDRESS",
									"source": 10
								},
								{
									"begin": 202,
									"end": 12504,
									"name": "PUSH",
									"source": 10,
									"value": "0"
								},
								{
									"begin": 202,
									"end": 12504,
									"name": "MSTORE",
									"source": 10
								},
								{
									"begin": 202,
									"end": 12504,
									"name": "PUSH",
									"source": 10,
									"value": "73"
								},
								{
									"begin": 202,
									"end": 12504,
									"name": "DUP2",
									"source": 10
								},
								{
									"begin": 202,
									"end": 12504,
									"name": "MSTORE8",
									"source": 10
								},
								{
									"begin": 202,
									"end": 12504,
									"name": "DUP3",
									"source": 10
								},
								{
									"begin": 202,
									"end": 12504,
									"name": "DUP2",
									"source": 10
								},
								{
									"begin": 202,
									"end": 12504,
									"name": "RETURN",
									"source": 10
								}
							],
							".data": {
								"0": {
									".auxdata": "a2646970667358221220e14816d127c31d579455e9c75e810c366324b185c9326bab601de8d11a9a48eb64736f6c63430008150033",
									".code": [
										{
											"begin": 202,
											"end": 12504,
											"name": "PUSHDEPLOYADDRESS",
											"source": 10
										},
										{
											"begin": 202,
											"end": 12504,
											"name": "ADDRESS",
											"source": 10
										},
										{
											"begin": 202,
											"end": 12504,
											"name": "EQ",
											"source": 10
										},
										{
											"begin": 202,
											"end": 12504,
											"name": "PUSH",
											"source": 10,
											"value": "80"
										},
										{
											"begin": 202,
											"end": 12504,
											"name": "PUSH",
											"source": 10,
											"value": "40"
										},
										{
											"begin": 202,
											"end": 12504,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": 202,
											"end": 12504,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 202,
											"end": 12504,
											"name": "DUP1",
											"source": 10
										},
										{
											"begin": 202,
											"end": 12504,
											"name": "REVERT",
											"source": 10
										}
									]
								}
							},
							"sourceList": [
								"@openzeppelin/contracts/token/ERC721/ERC721.sol",
								"@openzeppelin/contracts/token/ERC721/IERC721.sol",
								"@openzeppelin/contracts/token/ERC721/IERC721Receiver.sol",
								"@openzeppelin/contracts/token/ERC721/extensions/IERC721Metadata.sol",
								"@openzeppelin/contracts/utils/Address.sol",
								"@openzeppelin/contracts/utils/Context.sol",
								"@openzeppelin/contracts/utils/Counters.sol",
								"@openzeppelin/contracts/utils/Strings.sol",
								"@openzeppelin/contracts/utils/introspection/ERC165.sol",
								"@openzeppelin/contracts/utils/introspection/IERC165.sol",
								"@openzeppelin/contracts/utils/math/Math.sol",
								"contracts/SingapurContract.sol",
								"#utility.yul"
							]
						},
						"methodIdentifiers": {}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.21+commit.d9974bed\"},\"language\":\"Solidity\",\"output\":{\"abi\":[],\"devdoc\":{\"details\":\"Standard math utilities missing in the Solidity language.\",\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/utils/math/Math.sol\":\"Math\"},\"evmVersion\":\"shanghai\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/utils/math/Math.sol\":{\"keccak256\":\"0xa1e8e83cd0087785df04ac79fb395d9f3684caeaf973d9e2c71caef723a3a5d6\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://33bbf48cc069be677705037ba7520c22b1b622c23b33e1a71495f2d36549d40b\",\"dweb:/ipfs/Qmct36zWXv3j7LZB83uwbg7TXwnZSN1fqHNDZ93GG98bGz\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"contracts/SingapurContract.sol": {
				"MintNFT": {
					"abi": [
						{
							"inputs": [],
							"stateMutability": "nonpayable",
							"type": "constructor"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "approved",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								}
							],
							"name": "Approval",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "operator",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "bool",
									"name": "approved",
									"type": "bool"
								}
							],
							"name": "ApprovalForAll",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								}
							],
							"name": "Transfer",
							"type": "event"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								}
							],
							"name": "approve",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "owner",
									"type": "address"
								}
							],
							"name": "balanceOf",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								}
							],
							"name": "getApproved",
							"outputs": [
								{
									"internalType": "address",
									"name": "",
									"type": "address"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "operator",
									"type": "address"
								}
							],
							"name": "isApprovedForAll",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "name",
							"outputs": [
								{
									"internalType": "string",
									"name": "",
									"type": "string"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								}
							],
							"name": "ownerOf",
							"outputs": [
								{
									"internalType": "address",
									"name": "",
									"type": "address"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								}
							],
							"name": "safeMint",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								}
							],
							"name": "safeTransferFrom",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								},
								{
									"internalType": "bytes",
									"name": "data",
									"type": "bytes"
								}
							],
							"name": "safeTransferFrom",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "operator",
									"type": "address"
								},
								{
									"internalType": "bool",
									"name": "approved",
									"type": "bool"
								}
							],
							"name": "setApprovalForAll",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "bytes4",
									"name": "interfaceId",
									"type": "bytes4"
								}
							],
							"name": "supportsInterface",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "symbol",
							"outputs": [
								{
									"internalType": "string",
									"name": "",
									"type": "string"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								}
							],
							"name": "tokenURI",
							"outputs": [
								{
									"internalType": "string",
									"name": "",
									"type": "string"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								}
							],
							"name": "transferFrom",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						}
					],
					"devdoc": {
						"events": {
							"Approval(address,address,uint256)": {
								"details": "Emitted when `owner` enables `approved` to manage the `tokenId` token."
							},
							"ApprovalForAll(address,address,bool)": {
								"details": "Emitted when `owner` enables or disables (`approved`) `operator` to manage all of its assets."
							},
							"Transfer(address,address,uint256)": {
								"details": "Emitted when `tokenId` token is transferred from `from` to `to`."
							}
						},
						"kind": "dev",
						"methods": {
							"approve(address,uint256)": {
								"details": "See {IERC721-approve}."
							},
							"balanceOf(address)": {
								"details": "See {IERC721-balanceOf}."
							},
							"getApproved(uint256)": {
								"details": "See {IERC721-getApproved}."
							},
							"isApprovedForAll(address,address)": {
								"details": "See {IERC721-isApprovedForAll}."
							},
							"name()": {
								"details": "See {IERC721Metadata-name}."
							},
							"ownerOf(uint256)": {
								"details": "See {IERC721-ownerOf}."
							},
							"safeTransferFrom(address,address,uint256)": {
								"details": "See {IERC721-safeTransferFrom}."
							},
							"safeTransferFrom(address,address,uint256,bytes)": {
								"details": "See {IERC721-safeTransferFrom}."
							},
							"setApprovalForAll(address,bool)": {
								"details": "See {IERC721-setApprovalForAll}."
							},
							"supportsInterface(bytes4)": {
								"details": "See {IERC165-supportsInterface}."
							},
							"symbol()": {
								"details": "See {IERC721Metadata-symbol}."
							},
							"tokenURI(uint256)": {
								"details": "See {IERC721Metadata-tokenURI}."
							},
							"transferFrom(address,address,uint256)": {
								"details": "See {IERC721-transferFrom}."
							}
						},
						"version": 1
					},
					"evm": {
						"assembly": "    /* \"contracts/SingapurContract.sol\":169:506  contract MintNFT is ERC721 {... */\n  mstore(0x40, 0x80)\n    /* \"contracts/SingapurContract.sol\":291:332  constructor() ERC721(\"MyToken\", \"MTK\") {} */\n  callvalue\n  dup1\n  iszero\n  tag_1\n  jumpi\n  0x00\n  dup1\n  revert\ntag_1:\n  pop\n    /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":1390:1503  constructor(string memory name_, string memory symbol_) {... */\n  mload(0x40)\n  dup1\n  0x40\n  add\n  0x40\n  mstore\n  dup1\n  0x07\n  dup2\n  mstore\n  0x20\n  add\n  shl(0xc9, 0x26bcaa37b5b2b7)\n  dup2\n  mstore\n  pop\n  mload(0x40)\n  dup1\n  0x40\n  add\n  0x40\n  mstore\n  dup1\n  0x03\n  dup2\n  mstore\n  0x20\n  add\n  shl(0xe8, 0x4d544b)\n  dup2\n  mstore\n  pop\n    /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":1464:1469  name_ */\n  dup2\n    /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":1456:1461  _name */\n  0x00\n    /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":1456:1469  _name = name_ */\n  swap1\n  dup2\n  tag_5\n  swap2\n  swap1\n  tag_6\n  jump\t// in\ntag_5:\n  pop\n    /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":1479:1486  _symbol */\n  0x01\n    /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":1479:1496  _symbol = symbol_ */\n  tag_7\n    /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":1489:1496  symbol_ */\n  dup3\n    /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":1479:1486  _symbol */\n  dup3\n    /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":1479:1496  _symbol = symbol_ */\n  tag_6\n  jump\t// in\ntag_7:\n  pop\n    /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":1390:1503  constructor(string memory name_, string memory symbol_) {... */\n  pop\n  pop\n    /* \"contracts/SingapurContract.sol\":169:506  contract MintNFT is ERC721 {... */\n  jump(tag_15)\n    /* \"#utility.yul\":14:141   */\ntag_10:\n    /* \"#utility.yul\":75:85   */\n  0x4e487b71\n    /* \"#utility.yul\":70:73   */\n  0xe0\n    /* \"#utility.yul\":66:86   */\n  shl\n    /* \"#utility.yul\":63:64   */\n  0x00\n    /* \"#utility.yul\":56:87   */\n  mstore\n    /* \"#utility.yul\":106:110   */\n  0x41\n    /* \"#utility.yul\":103:104   */\n  0x04\n    /* \"#utility.yul\":96:111   */\n  mstore\n    /* \"#utility.yul\":130:134   */\n  0x24\n    /* \"#utility.yul\":127:128   */\n  0x00\n    /* \"#utility.yul\":120:135   */\n  revert\n    /* \"#utility.yul\":146:526   */\ntag_11:\n    /* \"#utility.yul\":225:226   */\n  0x01\n    /* \"#utility.yul\":221:233   */\n  dup2\n  dup2\n  shr\n  swap1\n    /* \"#utility.yul\":268:280   */\n  dup3\n  and\n  dup1\n    /* \"#utility.yul\":289:350   */\n  tag_18\n  jumpi\n    /* \"#utility.yul\":343:347   */\n  0x7f\n    /* \"#utility.yul\":335:341   */\n  dup3\n    /* \"#utility.yul\":331:348   */\n  and\n    /* \"#utility.yul\":321:348   */\n  swap2\n  pop\n    /* \"#utility.yul\":289:350   */\ntag_18:\n    /* \"#utility.yul\":396:398   */\n  0x20\n    /* \"#utility.yul\":388:394   */\n  dup3\n    /* \"#utility.yul\":385:399   */\n  lt\n    /* \"#utility.yul\":365:383   */\n  dup2\n    /* \"#utility.yul\":362:400   */\n  sub\n    /* \"#utility.yul\":359:520   */\n  tag_19\n  jumpi\n    /* \"#utility.yul\":442:452   */\n  0x4e487b71\n    /* \"#utility.yul\":437:440   */\n  0xe0\n    /* \"#utility.yul\":433:453   */\n  shl\n    /* \"#utility.yul\":430:431   */\n  0x00\n    /* \"#utility.yul\":423:454   */\n  mstore\n    /* \"#utility.yul\":477:481   */\n  0x22\n    /* \"#utility.yul\":474:475   */\n  0x04\n    /* \"#utility.yul\":467:482   */\n  mstore\n    /* \"#utility.yul\":505:509   */\n  0x24\n    /* \"#utility.yul\":502:503   */\n  0x00\n    /* \"#utility.yul\":495:510   */\n  revert\n    /* \"#utility.yul\":359:520   */\ntag_19:\n  pop\n    /* \"#utility.yul\":146:526   */\n  swap2\n  swap1\n  pop\n  jump\t// out\n    /* \"#utility.yul\":657:1202   */\ntag_13:\n    /* \"#utility.yul\":759:761   */\n  0x1f\n    /* \"#utility.yul\":754:757   */\n  dup3\n    /* \"#utility.yul\":751:762   */\n  gt\n    /* \"#utility.yul\":748:1196   */\n  iszero\n  tag_22\n  jumpi\n    /* \"#utility.yul\":795:796   */\n  0x00\n    /* \"#utility.yul\":820:825   */\n  dup2\n    /* \"#utility.yul\":816:818   */\n  dup2\n    /* \"#utility.yul\":809:826   */\n  mstore\n    /* \"#utility.yul\":865:869   */\n  0x20\n    /* \"#utility.yul\":861:863   */\n  dup2\n    /* \"#utility.yul\":851:870   */\n  keccak256\n    /* \"#utility.yul\":935:937   */\n  0x1f\n    /* \"#utility.yul\":923:933   */\n  dup6\n    /* \"#utility.yul\":919:938   */\n  add\n    /* \"#utility.yul\":916:917   */\n  0x05\n    /* \"#utility.yul\":912:939   */\n  shr\n    /* \"#utility.yul\":906:910   */\n  dup2\n    /* \"#utility.yul\":902:940   */\n  add\n    /* \"#utility.yul\":971:975   */\n  0x20\n    /* \"#utility.yul\":959:969   */\n  dup7\n    /* \"#utility.yul\":956:976   */\n  lt\n    /* \"#utility.yul\":953:1000   */\n  iszero\n  tag_23\n  jumpi\n  pop\n    /* \"#utility.yul\":994:998   */\n  dup1\n    /* \"#utility.yul\":953:1000   */\ntag_23:\n    /* \"#utility.yul\":1049:1051   */\n  0x1f\n    /* \"#utility.yul\":1044:1047   */\n  dup6\n    /* \"#utility.yul\":1040:1052   */\n  add\n    /* \"#utility.yul\":1037:1038   */\n  0x05\n    /* \"#utility.yul\":1033:1053   */\n  shr\n    /* \"#utility.yul\":1027:1031   */\n  dup3\n    /* \"#utility.yul\":1023:1054   */\n  add\n    /* \"#utility.yul\":1013:1054   */\n  swap2\n  pop\n    /* \"#utility.yul\":1104:1186   */\ntag_24:\n    /* \"#utility.yul\":1122:1124   */\n  dup2\n    /* \"#utility.yul\":1115:1120   */\n  dup2\n    /* \"#utility.yul\":1112:1125   */\n  lt\n    /* \"#utility.yul\":1104:1186   */\n  iszero\n  tag_26\n  jumpi\n    /* \"#utility.yul\":1167:1184   */\n  dup3\n  dup2\n  sstore\n    /* \"#utility.yul\":1148:1149   */\n  0x01\n    /* \"#utility.yul\":1137:1150   */\n  add\n    /* \"#utility.yul\":1104:1186   */\n  jump(tag_24)\ntag_26:\n    /* \"#utility.yul\":1108:1111   */\n  pop\n  pop\n  pop\n    /* \"#utility.yul\":748:1196   */\ntag_22:\n    /* \"#utility.yul\":657:1202   */\n  pop\n  pop\n  pop\n  jump\t// out\n    /* \"#utility.yul\":1378:2730   */\ntag_6:\n    /* \"#utility.yul\":1498:1508   */\n  dup2\n  mload\n  sub(shl(0x40, 0x01), 0x01)\n    /* \"#utility.yul\":1520:1550   */\n  dup2\n  gt\n    /* \"#utility.yul\":1517:1573   */\n  iszero\n  tag_30\n  jumpi\n    /* \"#utility.yul\":1553:1571   */\n  tag_30\n  tag_10\n  jump\t// in\ntag_30:\n    /* \"#utility.yul\":1582:1679   */\n  tag_31\n    /* \"#utility.yul\":1672:1678   */\n  dup2\n    /* \"#utility.yul\":1632:1670   */\n  tag_32\n    /* \"#utility.yul\":1664:1668   */\n  dup5\n    /* \"#utility.yul\":1658:1669   */\n  sload\n    /* \"#utility.yul\":1632:1670   */\n  tag_11\n  jump\t// in\ntag_32:\n    /* \"#utility.yul\":1626:1630   */\n  dup5\n    /* \"#utility.yul\":1582:1679   */\n  tag_13\n  jump\t// in\ntag_31:\n    /* \"#utility.yul\":1734:1738   */\n  0x20\n  dup1\n    /* \"#utility.yul\":1798:1800   */\n  0x1f\n    /* \"#utility.yul\":1787:1801   */\n  dup4\n  gt\n    /* \"#utility.yul\":1815:1816   */\n  0x01\n    /* \"#utility.yul\":1810:2473   */\n  dup2\n  eq\n  tag_34\n  jumpi\n    /* \"#utility.yul\":2517:2518   */\n  0x00\n    /* \"#utility.yul\":2534:2540   */\n  dup5\n    /* \"#utility.yul\":2531:2620   */\n  iszero\n  tag_35\n  jumpi\n  pop\n    /* \"#utility.yul\":2586:2605   */\n  dup6\n  dup4\n  add\n    /* \"#utility.yul\":2580:2606   */\n  mload\n    /* \"#utility.yul\":2531:2620   */\ntag_35:\n  not(0x00)\n    /* \"#utility.yul\":1335:1336   */\n  0x03\n    /* \"#utility.yul\":1331:1342   */\n  dup7\n  swap1\n  shl\n    /* \"#utility.yul\":1327:1351   */\n  shr\n    /* \"#utility.yul\":1323:1352   */\n  not\n    /* \"#utility.yul\":1313:1353   */\n  and\n    /* \"#utility.yul\":1359:1360   */\n  0x01\n    /* \"#utility.yul\":1355:1366   */\n  dup6\n  swap1\n  shl\n    /* \"#utility.yul\":1310:1367   */\n  or\n    /* \"#utility.yul\":2633:2714   */\n  dup6\n  sstore\n    /* \"#utility.yul\":1780:2724   */\n  jump(tag_26)\n    /* \"#utility.yul\":1810:2473   */\ntag_34:\n    /* \"#utility.yul\":604:605   */\n  0x00\n    /* \"#utility.yul\":597:611   */\n  dup6\n  dup2\n  mstore\n    /* \"#utility.yul\":641:645   */\n  0x20\n    /* \"#utility.yul\":628:646   */\n  dup2\n  keccak256\n  not(0x1f)\n    /* \"#utility.yul\":1846:1866   */\n  dup7\n  and\n  swap2\n    /* \"#utility.yul\":1964:2200   */\ntag_38:\n    /* \"#utility.yul\":1978:1985   */\n  dup3\n    /* \"#utility.yul\":1975:1976   */\n  dup2\n    /* \"#utility.yul\":1972:1986   */\n  lt\n    /* \"#utility.yul\":1964:2200   */\n  iszero\n  tag_40\n  jumpi\n    /* \"#utility.yul\":2067:2086   */\n  dup9\n  dup7\n  add\n    /* \"#utility.yul\":2061:2087   */\n  mload\n    /* \"#utility.yul\":2046:2088   */\n  dup3\n  sstore\n    /* \"#utility.yul\":2159:2186   */\n  swap5\n  dup5\n  add\n  swap5\n    /* \"#utility.yul\":2127:2128   */\n  0x01\n    /* \"#utility.yul\":2115:2129   */\n  swap1\n  swap2\n  add\n  swap1\n    /* \"#utility.yul\":1994:2013   */\n  dup5\n  add\n    /* \"#utility.yul\":1964:2200   */\n  jump(tag_38)\ntag_40:\n    /* \"#utility.yul\":1968:1971   */\n  pop\n    /* \"#utility.yul\":2228:2234   */\n  dup6\n    /* \"#utility.yul\":2219:2226   */\n  dup3\n    /* \"#utility.yul\":2216:2235   */\n  lt\n    /* \"#utility.yul\":2213:2414   */\n  iszero\n  tag_41\n  jumpi\n    /* \"#utility.yul\":2289:2308   */\n  dup8\n  dup6\n  add\n    /* \"#utility.yul\":2283:2309   */\n  mload\n  not(0x00)\n    /* \"#utility.yul\":2372:2373   */\n  0x03\n    /* \"#utility.yul\":2368:2382   */\n  dup9\n  swap1\n  shl\n    /* \"#utility.yul\":2384:2387   */\n  0xf8\n    /* \"#utility.yul\":2364:2388   */\n  and\n    /* \"#utility.yul\":2360:2397   */\n  shr\n    /* \"#utility.yul\":2356:2398   */\n  not\n    /* \"#utility.yul\":2341:2399   */\n  and\n    /* \"#utility.yul\":2326:2400   */\n  dup2\n  sstore\n    /* \"#utility.yul\":2213:2414   */\ntag_41:\n  pop\n  pop\n  pop\n  pop\n  pop\n    /* \"#utility.yul\":2460:2461   */\n  0x01\n    /* \"#utility.yul\":2444:2458   */\n  swap1\n  dup2\n  shl\n    /* \"#utility.yul\":2440:2462   */\n  add\n    /* \"#utility.yul\":2427:2463   */\n  swap1\n  sstore\n  pop\n    /* \"#utility.yul\":1378:2730   */\n  jump\t// out\ntag_15:\n    /* \"contracts/SingapurContract.sol\":169:506  contract MintNFT is ERC721 {... */\n  dataSize(sub_0)\n  dup1\n  dataOffset(sub_0)\n  0x00\n  codecopy\n  0x00\n  return\nstop\n\nsub_0: assembly {\n        /* \"contracts/SingapurContract.sol\":169:506  contract MintNFT is ERC721 {... */\n      mstore(0x40, 0x80)\n      callvalue\n      dup1\n      iszero\n      tag_1\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_1:\n      pop\n      jumpi(tag_2, lt(calldatasize, 0x04))\n      shr(0xe0, calldataload(0x00))\n      dup1\n      0x6352211e\n      gt\n      tag_17\n      jumpi\n      dup1\n      0xa22cb465\n      gt\n      tag_18\n      jumpi\n      dup1\n      0xa22cb465\n      eq\n      tag_13\n      jumpi\n      dup1\n      0xb88d4fde\n      eq\n      tag_14\n      jumpi\n      dup1\n      0xc87b56dd\n      eq\n      tag_15\n      jumpi\n      dup1\n      0xe985e9c5\n      eq\n      tag_16\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_18:\n      dup1\n      0x6352211e\n      eq\n      tag_10\n      jumpi\n      dup1\n      0x70a08231\n      eq\n      tag_11\n      jumpi\n      dup1\n      0x95d89b41\n      eq\n      tag_12\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_17:\n      dup1\n      0x095ea7b3\n      gt\n      tag_19\n      jumpi\n      dup1\n      0x095ea7b3\n      eq\n      tag_6\n      jumpi\n      dup1\n      0x23b872dd\n      eq\n      tag_7\n      jumpi\n      dup1\n      0x40d097c3\n      eq\n      tag_8\n      jumpi\n      dup1\n      0x42842e0e\n      eq\n      tag_9\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_19:\n      dup1\n      0x01ffc9a7\n      eq\n      tag_3\n      jumpi\n      dup1\n      0x06fdde03\n      eq\n      tag_4\n      jumpi\n      dup1\n      0x081812fc\n      eq\n      tag_5\n      jumpi\n    tag_2:\n      0x00\n      dup1\n      revert\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":1570:1870  function supportsInterface(bytes4 interfaceId) public view virtual override(ERC165, IERC165) returns (bool) {... */\n    tag_3:\n      tag_20\n      tag_21\n      calldatasize\n      0x04\n      tag_22\n      jump\t// in\n    tag_21:\n      tag_23\n      jump\t// in\n    tag_20:\n      mload(0x40)\n        /* \"#utility.yul\":565:579   */\n      swap1\n      iszero\n        /* \"#utility.yul\":558:580   */\n      iszero\n        /* \"#utility.yul\":540:581   */\n      dup2\n      mstore\n        /* \"#utility.yul\":528:530   */\n      0x20\n        /* \"#utility.yul\":513:531   */\n      add\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":1570:1870  function supportsInterface(bytes4 interfaceId) public view virtual override(ERC165, IERC165) returns (bool) {... */\n    tag_24:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":2471:2569  function name() public view virtual override returns (string memory) {... */\n    tag_4:\n      tag_26\n      tag_27\n      jump\t// in\n    tag_26:\n      mload(0x40)\n      tag_24\n      swap2\n      swap1\n      tag_29\n      jump\t// in\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":3935:4102  function getApproved(uint256 tokenId) public view virtual override returns (address) {... */\n    tag_5:\n      tag_30\n      tag_31\n      calldatasize\n      0x04\n      tag_32\n      jump\t// in\n    tag_31:\n      tag_33\n      jump\t// in\n    tag_30:\n      mload(0x40)\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"#utility.yul\":1697:1729   */\n      swap1\n      swap2\n      and\n        /* \"#utility.yul\":1679:1730   */\n      dup2\n      mstore\n        /* \"#utility.yul\":1667:1669   */\n      0x20\n        /* \"#utility.yul\":1652:1670   */\n      add\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":3935:4102  function getApproved(uint256 tokenId) public view virtual override returns (address) {... */\n      tag_24\n        /* \"#utility.yul\":1533:1736   */\n      jump\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":3468:3874  function approve(address to, uint256 tokenId) public virtual override {... */\n    tag_6:\n      tag_36\n      tag_37\n      calldatasize\n      0x04\n      tag_38\n      jump\t// in\n    tag_37:\n      tag_39\n      jump\t// in\n    tag_36:\n      stop\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":4612:4938  function transferFrom(... */\n    tag_7:\n      tag_36\n      tag_41\n      calldatasize\n      0x04\n      tag_42\n      jump\t// in\n    tag_41:\n      tag_43\n      jump\t// in\n        /* \"contracts/SingapurContract.sol\":338:504  function safeMint(address to) public {... */\n    tag_8:\n      tag_36\n      tag_45\n      calldatasize\n      0x04\n      tag_46\n      jump\t// in\n    tag_45:\n      tag_47\n      jump\t// in\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":5004:5183  function safeTransferFrom(... */\n    tag_9:\n      tag_36\n      tag_49\n      calldatasize\n      0x04\n      tag_42\n      jump\t// in\n    tag_49:\n      tag_50\n      jump\t// in\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":2190:2409  function ownerOf(uint256 tokenId) public view virtual override returns (address) {... */\n    tag_10:\n      tag_30\n      tag_52\n      calldatasize\n      0x04\n      tag_32\n      jump\t// in\n    tag_52:\n      tag_53\n      jump\t// in\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":1929:2133  function balanceOf(address owner) public view virtual override returns (uint256) {... */\n    tag_11:\n      tag_55\n      tag_56\n      calldatasize\n      0x04\n      tag_46\n      jump\t// in\n    tag_56:\n      tag_57\n      jump\t// in\n    tag_55:\n      mload(0x40)\n        /* \"#utility.yul\":2848:2873   */\n      swap1\n      dup2\n      mstore\n        /* \"#utility.yul\":2836:2838   */\n      0x20\n        /* \"#utility.yul\":2821:2839   */\n      add\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":1929:2133  function balanceOf(address owner) public view virtual override returns (uint256) {... */\n      tag_24\n        /* \"#utility.yul\":2702:2879   */\n      jump\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":2633:2735  function symbol() public view virtual override returns (string memory) {... */\n    tag_12:\n      tag_26\n      tag_61\n      jump\t// in\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":4169:4322  function setApprovalForAll(address operator, bool approved) public virtual override {... */\n    tag_13:\n      tag_36\n      tag_64\n      calldatasize\n      0x04\n      tag_65\n      jump\t// in\n    tag_64:\n      tag_66\n      jump\t// in\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":5249:5563  function safeTransferFrom(... */\n    tag_14:\n      tag_36\n      tag_68\n      calldatasize\n      0x04\n      tag_69\n      jump\t// in\n    tag_68:\n      tag_70\n      jump\t// in\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":2801:3077  function tokenURI(uint256 tokenId) public view virtual override returns (string memory) {... */\n    tag_15:\n      tag_26\n      tag_72\n      calldatasize\n      0x04\n      tag_32\n      jump\t// in\n    tag_72:\n      tag_73\n      jump\t// in\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":4388:4550  function isApprovedForAll(address owner, address operator) public view virtual override returns (bool) {... */\n    tag_16:\n      tag_20\n      tag_76\n      calldatasize\n      0x04\n      tag_77\n      jump\t// in\n    tag_76:\n      tag_78\n      jump\t// in\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":1570:1870  function supportsInterface(bytes4 interfaceId) public view virtual override(ERC165, IERC165) returns (bool) {... */\n    tag_23:\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":1672:1676  bool */\n      0x00\n      not(sub(shl(0xe0, 0x01), 0x01))\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":1707:1747  interfaceId == type(IERC721).interfaceId */\n      dup3\n      and\n      shl(0xe0, 0x80ac58cd)\n      eq\n      dup1\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":1707:1811  interfaceId == type(IERC721).interfaceId ||... */\n      tag_81\n      jumpi\n      pop\n      not(sub(shl(0xe0, 0x01), 0x01))\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":1763:1811  interfaceId == type(IERC721Metadata).interfaceId */\n      dup3\n      and\n      shl(0xe0, 0x5b5e139f)\n      eq\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":1707:1811  interfaceId == type(IERC721).interfaceId ||... */\n    tag_81:\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":1707:1863  interfaceId == type(IERC721).interfaceId ||... */\n      dup1\n      tag_83\n      jumpi\n      pop\n      shl(0xe0, 0x01ffc9a7)\n      not(sub(shl(0xe0, 0x01), 0x01))\n        /* \"@openzeppelin/contracts/utils/introspection/ERC165.sol\":937:977  interfaceId == type(IERC165).interfaceId */\n      dup4\n      and\n      eq\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":1827:1863  super.supportsInterface(interfaceId) */\n    tag_83:\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":1688:1863  return... */\n      swap3\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":1570:1870  function supportsInterface(bytes4 interfaceId) public view virtual override(ERC165, IERC165) returns (bool) {... */\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":2471:2569  function name() public view virtual override returns (string memory) {... */\n    tag_27:\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":2525:2538  string memory */\n      0x60\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":2557:2562  _name */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":2550:2562  return _name */\n      dup1\n      sload\n      tag_86\n      swap1\n      tag_87\n      jump\t// in\n    tag_86:\n      dup1\n      0x1f\n      add\n      0x20\n      dup1\n      swap2\n      div\n      mul\n      0x20\n      add\n      mload(0x40)\n      swap1\n      dup2\n      add\n      0x40\n      mstore\n      dup1\n      swap3\n      swap2\n      swap1\n      dup2\n      dup2\n      mstore\n      0x20\n      add\n      dup3\n      dup1\n      sload\n      tag_88\n      swap1\n      tag_87\n      jump\t// in\n    tag_88:\n      dup1\n      iszero\n      tag_89\n      jumpi\n      dup1\n      0x1f\n      lt\n      tag_90\n      jumpi\n      0x0100\n      dup1\n      dup4\n      sload\n      div\n      mul\n      dup4\n      mstore\n      swap2\n      0x20\n      add\n      swap2\n      jump(tag_89)\n    tag_90:\n      dup3\n      add\n      swap2\n      swap1\n      0x00\n      mstore\n      keccak256(0x00, 0x20)\n      swap1\n    tag_91:\n      dup2\n      sload\n      dup2\n      mstore\n      swap1\n      0x01\n      add\n      swap1\n      0x20\n      add\n      dup1\n      dup4\n      gt\n      tag_91\n      jumpi\n      dup3\n      swap1\n      sub\n      0x1f\n      and\n      dup3\n      add\n      swap2\n    tag_89:\n      pop\n      pop\n      pop\n      pop\n      pop\n      swap1\n      pop\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":2471:2569  function name() public view virtual override returns (string memory) {... */\n      swap1\n      jump\t// out\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":3935:4102  function getApproved(uint256 tokenId) public view virtual override returns (address) {... */\n    tag_33:\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":4011:4018  address */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":4030:4053  _requireMinted(tokenId) */\n      tag_93\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":4045:4052  tokenId */\n      dup3\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":4030:4044  _requireMinted */\n      tag_94\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":4030:4053  _requireMinted(tokenId) */\n      jump\t// in\n    tag_93:\n      pop\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":4071:4095  _tokenApprovals[tokenId] */\n      0x00\n      swap1\n      dup2\n      mstore\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":4071:4086  _tokenApprovals */\n      0x04\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":4071:4095  _tokenApprovals[tokenId] */\n      0x20\n      mstore\n      0x40\n      swap1\n      keccak256\n      sload\n      sub(shl(0xa0, 0x01), 0x01)\n      and\n      swap1\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":3935:4102  function getApproved(uint256 tokenId) public view virtual override returns (address) {... */\n      jump\t// out\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":3468:3874  function approve(address to, uint256 tokenId) public virtual override {... */\n    tag_39:\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":3548:3561  address owner */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":3564:3587  ERC721.ownerOf(tokenId) */\n      tag_96\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":3579:3586  tokenId */\n      dup3\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":3564:3578  ERC721.ownerOf */\n      tag_53\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":3564:3587  ERC721.ownerOf(tokenId) */\n      jump\t// in\n    tag_96:\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":3548:3587  address owner = ERC721.ownerOf(tokenId) */\n      swap1\n      pop\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":3611:3616  owner */\n      dup1\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":3605:3616  to != owner */\n      and\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":3605:3607  to */\n      dup4\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":3605:3616  to != owner */\n      and\n      sub\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":3597:3654  require(to != owner, \"ERC721: approval to current owner\") */\n      tag_97\n      jumpi\n      mload(0x40)\n      shl(0xe5, 0x461bcd)\n      dup2\n      mstore\n        /* \"#utility.yul\":5363:5365   */\n      0x20\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":3597:3654  require(to != owner, \"ERC721: approval to current owner\") */\n      0x04\n      dup3\n      add\n        /* \"#utility.yul\":5345:5366   */\n      mstore\n        /* \"#utility.yul\":5402:5404   */\n      0x21\n        /* \"#utility.yul\":5382:5400   */\n      0x24\n      dup3\n      add\n        /* \"#utility.yul\":5375:5405   */\n      mstore\n        /* \"#utility.yul\":5441:5475   */\n      0x4552433732313a20617070726f76616c20746f2063757272656e74206f776e65\n        /* \"#utility.yul\":5421:5439   */\n      0x44\n      dup3\n      add\n        /* \"#utility.yul\":5414:5476   */\n      mstore\n      shl(0xf9, 0x39)\n        /* \"#utility.yul\":5492:5510   */\n      0x64\n      dup3\n      add\n        /* \"#utility.yul\":5485:5516   */\n      mstore\n        /* \"#utility.yul\":5533:5552   */\n      0x84\n      add\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":3597:3654  require(to != owner, \"ERC721: approval to current owner\") */\n    tag_98:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n    tag_97:\n        /* \"@openzeppelin/contracts/utils/Context.sol\":719:729  msg.sender */\n      caller\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":3686:3707  _msgSender() == owner */\n      dup3\n      and\n      eq\n      dup1\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":3686:3748  _msgSender() == owner || isApprovedForAll(owner, _msgSender()) */\n      tag_103\n      jumpi\n      pop\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":3711:3748  isApprovedForAll(owner, _msgSender()) */\n      tag_103\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":3728:3733  owner */\n      dup2\n        /* \"@openzeppelin/contracts/utils/Context.sol\":719:729  msg.sender */\n      caller\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":4388:4550  function isApprovedForAll(address owner, address operator) public view virtual override returns (bool) {... */\n      tag_78\n      jump\t// in\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":3711:3748  isApprovedForAll(owner, _msgSender()) */\n    tag_103:\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":3665:3835  require(... */\n      tag_105\n      jumpi\n      mload(0x40)\n      shl(0xe5, 0x461bcd)\n      dup2\n      mstore\n        /* \"#utility.yul\":5765:5767   */\n      0x20\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":3665:3835  require(... */\n      0x04\n      dup3\n      add\n        /* \"#utility.yul\":5747:5768   */\n      mstore\n        /* \"#utility.yul\":5804:5806   */\n      0x3d\n        /* \"#utility.yul\":5784:5802   */\n      0x24\n      dup3\n      add\n        /* \"#utility.yul\":5777:5807   */\n      mstore\n        /* \"#utility.yul\":5843:5877   */\n      0x4552433732313a20617070726f76652063616c6c6572206973206e6f7420746f\n        /* \"#utility.yul\":5823:5841   */\n      0x44\n      dup3\n      add\n        /* \"#utility.yul\":5816:5878   */\n      mstore\n        /* \"#utility.yul\":5914:5945   */\n      0x6b656e206f776e6572206f7220617070726f76656420666f7220616c6c000000\n        /* \"#utility.yul\":5894:5912   */\n      0x64\n      dup3\n      add\n        /* \"#utility.yul\":5887:5946   */\n      mstore\n        /* \"#utility.yul\":5963:5982   */\n      0x84\n      add\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":3665:3835  require(... */\n      tag_98\n        /* \"#utility.yul\":5563:5988   */\n      jump\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":3665:3835  require(... */\n    tag_105:\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":3846:3867  _approve(to, tokenId) */\n      tag_108\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":3855:3857  to */\n      dup4\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":3859:3866  tokenId */\n      dup4\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":3846:3854  _approve */\n      tag_109\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":3846:3867  _approve(to, tokenId) */\n      jump\t// in\n    tag_108:\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":3538:3874  {... */\n      pop\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":3468:3874  function approve(address to, uint256 tokenId) public virtual override {... */\n      pop\n      pop\n      jump\t// out\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":4612:4938  function transferFrom(... */\n    tag_43:\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":4801:4842  _isApprovedOrOwner(_msgSender(), tokenId) */\n      tag_111\n        /* \"@openzeppelin/contracts/utils/Context.sol\":719:729  msg.sender */\n      caller\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":4834:4841  tokenId */\n      dup3\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":4801:4819  _isApprovedOrOwner */\n      tag_113\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":4801:4842  _isApprovedOrOwner(_msgSender(), tokenId) */\n      jump\t// in\n    tag_111:\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":4793:4892  require(_isApprovedOrOwner(_msgSender(), tokenId), \"ERC721: caller is not token owner or approved\") */\n      tag_114\n      jumpi\n      mload(0x40)\n      shl(0xe5, 0x461bcd)\n      dup2\n      mstore\n      0x04\n      add\n      tag_98\n      swap1\n      tag_116\n      jump\t// in\n    tag_114:\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":4903:4931  _transfer(from, to, tokenId) */\n      tag_108\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":4913:4917  from */\n      dup4\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":4919:4921  to */\n      dup4\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":4923:4930  tokenId */\n      dup4\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":4903:4912  _transfer */\n      tag_118\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":4903:4931  _transfer(from, to, tokenId) */\n      jump\t// in\n        /* \"contracts/SingapurContract.sol\":338:504  function safeMint(address to) public {... */\n    tag_47:\n        /* \"contracts/SingapurContract.sol\":385:400  uint256 tokenId */\n      0x00\n        /* \"contracts/SingapurContract.sol\":403:428  _tokenIdCounter.current() */\n      tag_120\n        /* \"contracts/SingapurContract.sol\":403:418  _tokenIdCounter */\n      0x06\n        /* \"@openzeppelin/contracts/utils/Counters.sol\":918:932  counter._value */\n      sload\n      swap1\n        /* \"@openzeppelin/contracts/utils/Counters.sol\":827:939  function current(Counter storage counter) internal view returns (uint256) {... */\n      jump\n        /* \"contracts/SingapurContract.sol\":403:428  _tokenIdCounter.current() */\n    tag_120:\n        /* \"contracts/SingapurContract.sol\":385:428  uint256 tokenId = _tokenIdCounter.current() */\n      swap1\n      pop\n        /* \"contracts/SingapurContract.sol\":438:465  _tokenIdCounter.increment() */\n      tag_122\n        /* \"contracts/SingapurContract.sol\":438:453  _tokenIdCounter */\n      0x06\n        /* \"@openzeppelin/contracts/utils/Counters.sol\":1032:1051  counter._value += 1 */\n      dup1\n      sload\n        /* \"@openzeppelin/contracts/utils/Counters.sol\":1050:1051  1 */\n      0x01\n        /* \"@openzeppelin/contracts/utils/Counters.sol\":1032:1051  counter._value += 1 */\n      add\n      swap1\n      sstore\n        /* \"@openzeppelin/contracts/utils/Counters.sol\":945:1068  function increment(Counter storage counter) internal {... */\n      jump\n        /* \"contracts/SingapurContract.sol\":438:465  _tokenIdCounter.increment() */\n    tag_122:\n        /* \"contracts/SingapurContract.sol\":475:497  _safeMint(to, tokenId) */\n      tag_124\n        /* \"contracts/SingapurContract.sol\":485:487  to */\n      dup3\n        /* \"contracts/SingapurContract.sol\":489:496  tokenId */\n      dup3\n        /* \"contracts/SingapurContract.sol\":475:484  _safeMint */\n      tag_125\n        /* \"contracts/SingapurContract.sol\":475:497  _safeMint(to, tokenId) */\n      jump\t// in\n    tag_124:\n        /* \"contracts/SingapurContract.sol\":375:504  {... */\n      pop\n        /* \"contracts/SingapurContract.sol\":338:504  function safeMint(address to) public {... */\n      pop\n      jump\t// out\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":5004:5183  function safeTransferFrom(... */\n    tag_50:\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":5137:5176  safeTransferFrom(from, to, tokenId, \"\") */\n      tag_108\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":5154:5158  from */\n      dup4\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":5160:5162  to */\n      dup4\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":5164:5171  tokenId */\n      dup4\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":5137:5176  safeTransferFrom(from, to, tokenId, \"\") */\n      mload(0x40)\n      dup1\n      0x20\n      add\n      0x40\n      mstore\n      dup1\n      0x00\n      dup2\n      mstore\n      pop\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":5137:5153  safeTransferFrom */\n      tag_70\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":5137:5176  safeTransferFrom(from, to, tokenId, \"\") */\n      jump\t// in\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":2190:2409  function ownerOf(uint256 tokenId) public view virtual override returns (address) {... */\n    tag_53:\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":2262:2269  address */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":6930:6946  _owners[tokenId] */\n      dup2\n      dup2\n      mstore\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":6930:6937  _owners */\n      0x02\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":6930:6946  _owners[tokenId] */\n      0x20\n      mstore\n      0x40\n      dup2\n      keccak256\n      sload\n      sub(shl(0xa0, 0x01), 0x01)\n      and\n      dup1\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":2324:2380  require(owner != address(0), \"ERC721: invalid token ID\") */\n      tag_83\n      jumpi\n      mload(0x40)\n      shl(0xe5, 0x461bcd)\n      dup2\n      mstore\n        /* \"#utility.yul\":6609:6611   */\n      0x20\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":2324:2380  require(owner != address(0), \"ERC721: invalid token ID\") */\n      0x04\n      dup3\n      add\n        /* \"#utility.yul\":6591:6612   */\n      mstore\n        /* \"#utility.yul\":6648:6650   */\n      0x18\n        /* \"#utility.yul\":6628:6646   */\n      0x24\n      dup3\n      add\n        /* \"#utility.yul\":6621:6651   */\n      mstore\n      shl(0x42, 0x115490cdcc8c4e881a5b9d985b1a59081d1bdad95b881251)\n        /* \"#utility.yul\":6667:6685   */\n      0x44\n      dup3\n      add\n        /* \"#utility.yul\":6660:6714   */\n      mstore\n        /* \"#utility.yul\":6731:6749   */\n      0x64\n      add\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":2324:2380  require(owner != address(0), \"ERC721: invalid token ID\") */\n      tag_98\n        /* \"#utility.yul\":6407:6755   */\n      jump\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":1929:2133  function balanceOf(address owner) public view virtual override returns (uint256) {... */\n    tag_57:\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":2001:2008  uint256 */\n      0x00\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":2028:2047  owner != address(0) */\n      dup3\n      and\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":2020:2093  require(owner != address(0), \"ERC721: address zero is not a valid owner\") */\n      tag_135\n      jumpi\n      mload(0x40)\n      shl(0xe5, 0x461bcd)\n      dup2\n      mstore\n        /* \"#utility.yul\":6962:6964   */\n      0x20\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":2020:2093  require(owner != address(0), \"ERC721: address zero is not a valid owner\") */\n      0x04\n      dup3\n      add\n        /* \"#utility.yul\":6944:6965   */\n      mstore\n        /* \"#utility.yul\":7001:7003   */\n      0x29\n        /* \"#utility.yul\":6981:6999   */\n      0x24\n      dup3\n      add\n        /* \"#utility.yul\":6974:7004   */\n      mstore\n        /* \"#utility.yul\":7040:7074   */\n      0x4552433732313a2061646472657373207a65726f206973206e6f742061207661\n        /* \"#utility.yul\":7020:7038   */\n      0x44\n      dup3\n      add\n        /* \"#utility.yul\":7013:7075   */\n      mstore\n      shl(0xb9, 0x3634b21037bbb732b9)\n        /* \"#utility.yul\":7091:7109   */\n      0x64\n      dup3\n      add\n        /* \"#utility.yul\":7084:7123   */\n      mstore\n        /* \"#utility.yul\":7140:7159   */\n      0x84\n      add\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":2020:2093  require(owner != address(0), \"ERC721: address zero is not a valid owner\") */\n      tag_98\n        /* \"#utility.yul\":6760:7165   */\n      jump\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":2020:2093  require(owner != address(0), \"ERC721: address zero is not a valid owner\") */\n    tag_135:\n      pop\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":2110:2126  _balances[owner] */\n      and\n      0x00\n      swap1\n      dup2\n      mstore\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":2110:2119  _balances */\n      0x03\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":2110:2126  _balances[owner] */\n      0x20\n      mstore\n      0x40\n      swap1\n      keccak256\n      sload\n      swap1\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":1929:2133  function balanceOf(address owner) public view virtual override returns (uint256) {... */\n      jump\t// out\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":2633:2735  function symbol() public view virtual override returns (string memory) {... */\n    tag_61:\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":2689:2702  string memory */\n      0x60\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":2721:2728  _symbol */\n      0x01\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":2714:2728  return _symbol */\n      dup1\n      sload\n      tag_86\n      swap1\n      tag_87\n      jump\t// in\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":4169:4322  function setApprovalForAll(address operator, bool approved) public virtual override {... */\n    tag_66:\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":4263:4315  _setApprovalForAll(_msgSender(), operator, approved) */\n      tag_124\n        /* \"@openzeppelin/contracts/utils/Context.sol\":719:729  msg.sender */\n      caller\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":4296:4304  operator */\n      dup4\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":4306:4314  approved */\n      dup4\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":4263:4281  _setApprovalForAll */\n      tag_147\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":4263:4315  _setApprovalForAll(_msgSender(), operator, approved) */\n      jump\t// in\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":5249:5563  function safeTransferFrom(... */\n    tag_70:\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":5417:5458  _isApprovedOrOwner(_msgSender(), tokenId) */\n      tag_149\n        /* \"@openzeppelin/contracts/utils/Context.sol\":719:729  msg.sender */\n      caller\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":5450:5457  tokenId */\n      dup4\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":5417:5435  _isApprovedOrOwner */\n      tag_113\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":5417:5458  _isApprovedOrOwner(_msgSender(), tokenId) */\n      jump\t// in\n    tag_149:\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":5409:5508  require(_isApprovedOrOwner(_msgSender(), tokenId), \"ERC721: caller is not token owner or approved\") */\n      tag_151\n      jumpi\n      mload(0x40)\n      shl(0xe5, 0x461bcd)\n      dup2\n      mstore\n      0x04\n      add\n      tag_98\n      swap1\n      tag_116\n      jump\t// in\n    tag_151:\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":5518:5556  _safeTransfer(from, to, tokenId, data) */\n      tag_153\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":5532:5536  from */\n      dup5\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":5538:5540  to */\n      dup5\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":5542:5549  tokenId */\n      dup5\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":5551:5555  data */\n      dup5\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":5518:5531  _safeTransfer */\n      tag_154\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":5518:5556  _safeTransfer(from, to, tokenId, data) */\n      jump\t// in\n    tag_153:\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":5249:5563  function safeTransferFrom(... */\n      pop\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":2801:3077  function tokenURI(uint256 tokenId) public view virtual override returns (string memory) {... */\n    tag_73:\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":2874:2887  string memory */\n      0x60\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":2899:2922  _requireMinted(tokenId) */\n      tag_156\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":2914:2921  tokenId */\n      dup3\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":2899:2913  _requireMinted */\n      tag_94\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":2899:2922  _requireMinted(tokenId) */\n      jump\t// in\n    tag_156:\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":2933:2954  string memory baseURI */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":2957:2967  _baseURI() */\n      tag_157\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":3395:3404  return \"\" */\n      0x40\n      dup1\n      mload\n      0x20\n      dup2\n      add\n      swap1\n      swap2\n      mstore\n      0x00\n      dup2\n      mstore\n      swap1\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":3319:3411  function _baseURI() internal view virtual returns (string memory) {... */\n      jump\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":2957:2967  _baseURI() */\n    tag_157:\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":2933:2967  string memory baseURI = _baseURI() */\n      swap1\n      pop\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":3008:3009  0 */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":2990:2997  baseURI */\n      dup2\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":2984:3005  bytes(baseURI).length */\n      mload\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":2984:3009  bytes(baseURI).length > 0 */\n      gt\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":2984:3070  bytes(baseURI).length > 0 ? string(abi.encodePacked(baseURI, tokenId.toString())) : \"\" */\n      tag_159\n      jumpi\n      mload(0x40)\n      dup1\n      0x20\n      add\n      0x40\n      mstore\n      dup1\n      0x00\n      dup2\n      mstore\n      pop\n      jump(tag_160)\n    tag_159:\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":3036:3043  baseURI */\n      dup1\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":3045:3063  tokenId.toString() */\n      tag_161\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":3045:3052  tokenId */\n      dup5\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":3045:3061  tokenId.toString */\n      tag_162\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":3045:3063  tokenId.toString() */\n      jump\t// in\n    tag_161:\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":3019:3064  abi.encodePacked(baseURI, tokenId.toString()) */\n      add(0x20, mload(0x40))\n      tag_163\n      swap3\n      swap2\n      swap1\n      tag_164\n      jump\t// in\n    tag_163:\n      mload(0x40)\n      0x20\n      dup2\n      dup4\n      sub\n      sub\n      dup2\n      mstore\n      swap1\n      0x40\n      mstore\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":2984:3070  bytes(baseURI).length > 0 ? string(abi.encodePacked(baseURI, tokenId.toString())) : \"\" */\n    tag_160:\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":2977:3070  return bytes(baseURI).length > 0 ? string(abi.encodePacked(baseURI, tokenId.toString())) : \"\" */\n      swap4\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":2801:3077  function tokenURI(uint256 tokenId) public view virtual override returns (string memory) {... */\n      swap3\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":4388:4550  function isApprovedForAll(address owner, address operator) public view virtual override returns (bool) {... */\n    tag_78:\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":4508:4533  _operatorApprovals[owner] */\n      swap2\n      dup3\n      and\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":4485:4489  bool */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":4508:4533  _operatorApprovals[owner] */\n      swap1\n      dup2\n      mstore\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":4508:4526  _operatorApprovals */\n      0x05\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":4508:4533  _operatorApprovals[owner] */\n      0x20\n      swap1\n      dup2\n      mstore\n      0x40\n      dup1\n      dup4\n      keccak256\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":4508:4543  _operatorApprovals[owner][operator] */\n      swap4\n      swap1\n      swap5\n      and\n      dup3\n      mstore\n      swap2\n      swap1\n      swap2\n      mstore\n      keccak256\n      sload\n      0xff\n      and\n      swap1\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":4388:4550  function isApprovedForAll(address owner, address operator) public view virtual override returns (bool) {... */\n      jump\t// out\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":13466:13599  function _requireMinted(uint256 tokenId) internal view virtual {... */\n    tag_94:\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":7321:7325  bool */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":6930:6946  _owners[tokenId] */\n      dup2\n      dup2\n      mstore\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":6930:6937  _owners */\n      0x02\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":6930:6946  _owners[tokenId] */\n      0x20\n      mstore\n      0x40\n      swap1\n      keccak256\n      sload\n      sub(shl(0xa0, 0x01), 0x01)\n      and\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":13539:13592  require(_exists(tokenId), \"ERC721: invalid token ID\") */\n      tag_170\n      jumpi\n      mload(0x40)\n      shl(0xe5, 0x461bcd)\n      dup2\n      mstore\n        /* \"#utility.yul\":6609:6611   */\n      0x20\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":13539:13592  require(_exists(tokenId), \"ERC721: invalid token ID\") */\n      0x04\n      dup3\n      add\n        /* \"#utility.yul\":6591:6612   */\n      mstore\n        /* \"#utility.yul\":6648:6650   */\n      0x18\n        /* \"#utility.yul\":6628:6646   */\n      0x24\n      dup3\n      add\n        /* \"#utility.yul\":6621:6651   */\n      mstore\n      shl(0x42, 0x115490cdcc8c4e881a5b9d985b1a59081d1bdad95b881251)\n        /* \"#utility.yul\":6667:6685   */\n      0x44\n      dup3\n      add\n        /* \"#utility.yul\":6660:6714   */\n      mstore\n        /* \"#utility.yul\":6731:6749   */\n      0x64\n      add\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":13539:13592  require(_exists(tokenId), \"ERC721: invalid token ID\") */\n      tag_98\n        /* \"#utility.yul\":6407:6755   */\n      jump\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":13539:13592  require(_exists(tokenId), \"ERC721: invalid token ID\") */\n    tag_170:\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":13466:13599  function _requireMinted(uint256 tokenId) internal view virtual {... */\n      pop\n      jump\t// out\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":12768:12939  function _approve(address to, uint256 tokenId) internal virtual {... */\n    tag_109:\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":12842:12866  _tokenApprovals[tokenId] */\n      0x00\n      dup2\n      dup2\n      mstore\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":12842:12857  _tokenApprovals */\n      0x04\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":12842:12866  _tokenApprovals[tokenId] */\n      0x20\n      mstore\n      0x40\n      swap1\n      keccak256\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":12842:12871  _tokenApprovals[tokenId] = to */\n      dup1\n      sload\n      not(sub(shl(0xa0, 0x01), 0x01))\n      and\n      sub(shl(0xa0, 0x01), 0x01)\n      dup5\n      and\n      swap1\n      dup2\n      or\n      swap1\n      swap2\n      sstore\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":12842:12866  _tokenApprovals[tokenId] */\n      dup2\n      swap1\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":12895:12918  ERC721.ownerOf(tokenId) */\n      tag_174\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":12842:12866  _tokenApprovals[tokenId] */\n      dup3\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":12895:12909  ERC721.ownerOf */\n      tag_53\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":12895:12918  ERC721.ownerOf(tokenId) */\n      jump\t// in\n    tag_174:\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":12886:12932  Approval(ERC721.ownerOf(tokenId), to, tokenId) */\n      and\n      0x8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b925\n      mload(0x40)\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      log4\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":12768:12939  function _approve(address to, uint256 tokenId) internal virtual {... */\n      pop\n      pop\n      jump\t// out\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":7540:7801  function _isApprovedOrOwner(address spender, uint256 tokenId) internal view virtual returns (bool) {... */\n    tag_113:\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":7633:7637  bool */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":7649:7662  address owner */\n      dup1\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":7665:7688  ERC721.ownerOf(tokenId) */\n      tag_176\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":7680:7687  tokenId */\n      dup4\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":7665:7679  ERC721.ownerOf */\n      tag_53\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":7665:7688  ERC721.ownerOf(tokenId) */\n      jump\t// in\n    tag_176:\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":7649:7688  address owner = ERC721.ownerOf(tokenId) */\n      swap1\n      pop\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":7717:7722  owner */\n      dup1\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":7706:7722  spender == owner */\n      and\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":7706:7713  spender */\n      dup5\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":7706:7722  spender == owner */\n      and\n      eq\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":7706:7758  spender == owner || isApprovedForAll(owner, spender) */\n      dup1\n      tag_178\n      jumpi\n      pop\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":7726:7758  isApprovedForAll(owner, spender) */\n      tag_178\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":7743:7748  owner */\n      dup2\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":7750:7757  spender */\n      dup6\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":7726:7742  isApprovedForAll */\n      tag_78\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":7726:7758  isApprovedForAll(owner, spender) */\n      jump\t// in\n    tag_178:\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":7706:7793  spender == owner || isApprovedForAll(owner, spender) || getApproved(tokenId) == spender */\n      dup1\n      tag_179\n      jumpi\n      pop\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":7786:7793  spender */\n      dup4\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":7762:7793  getApproved(tokenId) == spender */\n      and\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":7762:7782  getApproved(tokenId) */\n      tag_180\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":7774:7781  tokenId */\n      dup5\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":7762:7773  getApproved */\n      tag_33\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":7762:7782  getApproved(tokenId) */\n      jump\t// in\n    tag_180:\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":7762:7793  getApproved(tokenId) == spender */\n      and\n      eq\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":7706:7793  spender == owner || isApprovedForAll(owner, spender) || getApproved(tokenId) == spender */\n    tag_179:\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":7698:7794  return (spender == owner || isApprovedForAll(owner, spender) || getApproved(tokenId) == spender) */\n      swap5\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":7540:7801  function _isApprovedOrOwner(address spender, uint256 tokenId) internal view virtual returns (bool) {... */\n      swap4\n      pop\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":11423:12656  function _transfer(... */\n    tag_118:\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":11577:11581  from */\n      dup3\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":11550:11581  ERC721.ownerOf(tokenId) == from */\n      and\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":11550:11573  ERC721.ownerOf(tokenId) */\n      tag_182\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":11565:11572  tokenId */\n      dup3\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":11550:11564  ERC721.ownerOf */\n      tag_53\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":11550:11573  ERC721.ownerOf(tokenId) */\n      jump\t// in\n    tag_182:\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":11550:11581  ERC721.ownerOf(tokenId) == from */\n      and\n      eq\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":11542:11623  require(ERC721.ownerOf(tokenId) == from, \"ERC721: transfer from incorrect owner\") */\n      tag_183\n      jumpi\n      mload(0x40)\n      shl(0xe5, 0x461bcd)\n      dup2\n      mstore\n      0x04\n      add\n      tag_98\n      swap1\n      tag_185\n      jump\t// in\n    tag_183:\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":11641:11657  to != address(0) */\n      dup3\n      and\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":11633:11698  require(to != address(0), \"ERC721: transfer to the zero address\") */\n      tag_186\n      jumpi\n      mload(0x40)\n      shl(0xe5, 0x461bcd)\n      dup2\n      mstore\n        /* \"#utility.yul\":8279:8281   */\n      0x20\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":11633:11698  require(to != address(0), \"ERC721: transfer to the zero address\") */\n      0x04\n      dup3\n      add\n        /* \"#utility.yul\":8261:8282   */\n      mstore\n        /* \"#utility.yul\":8318:8320   */\n      0x24\n        /* \"#utility.yul\":8298:8316   */\n      dup1\n      dup3\n      add\n        /* \"#utility.yul\":8291:8321   */\n      mstore\n        /* \"#utility.yul\":8357:8391   */\n      0x4552433732313a207472616e7366657220746f20746865207a65726f20616464\n        /* \"#utility.yul\":8337:8355   */\n      0x44\n      dup3\n      add\n        /* \"#utility.yul\":8330:8392   */\n      mstore\n      shl(0xe0, 0x72657373)\n        /* \"#utility.yul\":8408:8426   */\n      0x64\n      dup3\n      add\n        /* \"#utility.yul\":8401:8435   */\n      mstore\n        /* \"#utility.yul\":8452:8471   */\n      0x84\n      add\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":11633:11698  require(to != address(0), \"ERC721: transfer to the zero address\") */\n      tag_98\n        /* \"#utility.yul\":8077:8477   */\n      jump\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":11633:11698  require(to != address(0), \"ERC721: transfer to the zero address\") */\n    tag_186:\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":11709:11751  _beforeTokenTransfer(from, to, tokenId, 1) */\n      tag_189\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":11730:11734  from */\n      dup4\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":11736:11738  to */\n      dup4\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":11740:11747  tokenId */\n      dup4\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":11749:11750  1 */\n      0x01\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":11709:11729  _beforeTokenTransfer */\n      tag_190\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":11709:11751  _beforeTokenTransfer(from, to, tokenId, 1) */\n      jump\t// in\n    tag_189:\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":11878:11882  from */\n      dup3\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":11851:11882  ERC721.ownerOf(tokenId) == from */\n      and\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":11851:11874  ERC721.ownerOf(tokenId) */\n      tag_191\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":11866:11873  tokenId */\n      dup3\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":11851:11865  ERC721.ownerOf */\n      tag_53\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":11851:11874  ERC721.ownerOf(tokenId) */\n      jump\t// in\n    tag_191:\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":11851:11882  ERC721.ownerOf(tokenId) == from */\n      and\n      eq\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":11843:11924  require(ERC721.ownerOf(tokenId) == from, \"ERC721: transfer from incorrect owner\") */\n      tag_192\n      jumpi\n      mload(0x40)\n      shl(0xe5, 0x461bcd)\n      dup2\n      mstore\n      0x04\n      add\n      tag_98\n      swap1\n      tag_185\n      jump\t// in\n    tag_192:\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":11993:12017  _tokenApprovals[tokenId] */\n      0x00\n      dup2\n      dup2\n      mstore\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":11993:12008  _tokenApprovals */\n      0x04\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":11993:12017  _tokenApprovals[tokenId] */\n      0x20\n      swap1\n      dup2\n      mstore\n      0x40\n      dup1\n      dup4\n      keccak256\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":11986:12017  delete _tokenApprovals[tokenId] */\n      dup1\n      sload\n      not(sub(shl(0xa0, 0x01), 0x01))\n      swap1\n      dup2\n      and\n      swap1\n      swap2\n      sstore\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":12461:12476  _balances[from] */\n      dup8\n      dup2\n      and\n      dup1\n      dup7\n      mstore\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":12461:12470  _balances */\n      0x03\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":12461:12476  _balances[from] */\n      dup6\n      mstore\n      dup4\n      dup7\n      keccak256\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":12461:12481  _balances[from] -= 1 */\n      dup1\n      sload\n      not(0x00)\n      add\n      swap1\n      sstore\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":12495:12508  _balances[to] */\n      swap1\n      dup8\n      and\n      dup1\n      dup7\n      mstore\n      dup4\n      dup7\n      keccak256\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":12495:12513  _balances[to] += 1 */\n      dup1\n      sload\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":11986:12017  delete _tokenApprovals[tokenId] */\n      0x01\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":12495:12513  _balances[to] += 1 */\n      add\n      swap1\n      sstore\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":12533:12549  _owners[tokenId] */\n      dup7\n      dup7\n      mstore\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":12533:12540  _owners */\n      0x02\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":12533:12549  _owners[tokenId] */\n      swap1\n      swap5\n      mstore\n      dup3\n      dup6\n      keccak256\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":12533:12554  _owners[tokenId] = to */\n      dup1\n      sload\n      swap1\n      swap3\n      and\n      dup5\n      or\n      swap1\n      swap2\n      sstore\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":12570:12597  Transfer(from, to, tokenId) */\n      swap1\n      mload\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":12009:12016  tokenId */\n      dup5\n      swap4\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":12570:12597  Transfer(from, to, tokenId) */\n      0xddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef\n      swap2\n      log4\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":3538:3874  {... */\n      pop\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":3468:3874  function approve(address to, uint256 tokenId) public virtual override {... */\n      pop\n      pop\n      jump\t// out\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":8131:8239  function _safeMint(address to, uint256 tokenId) internal virtual {... */\n    tag_125:\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":8206:8232  _safeMint(to, tokenId, \"\") */\n      tag_124\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":8216:8218  to */\n      dup3\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":8220:8227  tokenId */\n      dup3\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":8206:8232  _safeMint(to, tokenId, \"\") */\n      mload(0x40)\n      dup1\n      0x20\n      add\n      0x40\n      mstore\n      dup1\n      0x00\n      dup2\n      mstore\n      pop\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":8206:8215  _safeMint */\n      tag_200\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":8206:8232  _safeMint(to, tokenId, \"\") */\n      jump\t// in\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":13075:13382  function _setApprovalForAll(... */\n    tag_147:\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":13225:13233  operator */\n      dup2\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":13216:13233  owner != operator */\n      and\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":13216:13221  owner */\n      dup4\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":13216:13233  owner != operator */\n      and\n      sub\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":13208:13263  require(owner != operator, \"ERC721: approve to caller\") */\n      tag_203\n      jumpi\n      mload(0x40)\n      shl(0xe5, 0x461bcd)\n      dup2\n      mstore\n        /* \"#utility.yul\":8684:8686   */\n      0x20\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":13208:13263  require(owner != operator, \"ERC721: approve to caller\") */\n      0x04\n      dup3\n      add\n        /* \"#utility.yul\":8666:8687   */\n      mstore\n        /* \"#utility.yul\":8723:8725   */\n      0x19\n        /* \"#utility.yul\":8703:8721   */\n      0x24\n      dup3\n      add\n        /* \"#utility.yul\":8696:8726   */\n      mstore\n        /* \"#utility.yul\":8762:8789   */\n      0x4552433732313a20617070726f766520746f2063616c6c657200000000000000\n        /* \"#utility.yul\":8742:8760   */\n      0x44\n      dup3\n      add\n        /* \"#utility.yul\":8735:8790   */\n      mstore\n        /* \"#utility.yul\":8807:8825   */\n      0x64\n      add\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":13208:13263  require(owner != operator, \"ERC721: approve to caller\") */\n      tag_98\n        /* \"#utility.yul\":8482:8831   */\n      jump\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":13208:13263  require(owner != operator, \"ERC721: approve to caller\") */\n    tag_203:\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":13273:13298  _operatorApprovals[owner] */\n      dup4\n      dup2\n      and\n      0x00\n      dup2\n      dup2\n      mstore\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":13273:13291  _operatorApprovals */\n      0x05\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":13273:13298  _operatorApprovals[owner] */\n      0x20\n      swap1\n      dup2\n      mstore\n      0x40\n      dup1\n      dup4\n      keccak256\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":13273:13308  _operatorApprovals[owner][operator] */\n      swap5\n      dup8\n      and\n      dup1\n      dup5\n      mstore\n      swap5\n      dup3\n      mstore\n      swap2\n      dup3\n      swap1\n      keccak256\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":13273:13319  _operatorApprovals[owner][operator] = approved */\n      dup1\n      sload\n      not(0xff)\n      and\n      dup7\n      iszero\n      iszero\n      swap1\n      dup2\n      or\n      swap1\n      swap2\n      sstore\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":13334:13375  ApprovalForAll(owner, operator, approved) */\n      swap2\n      mload\n        /* \"#utility.yul\":540:581   */\n      swap2\n      dup3\n      mstore\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":13334:13375  ApprovalForAll(owner, operator, approved) */\n      0x17307eab39ab6107e8899845ad3d59bd9653f200f220920489ca2b5937696c31\n      swap2\n        /* \"#utility.yul\":513:531   */\n      add\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":13334:13375  ApprovalForAll(owner, operator, approved) */\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      log3\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":13075:13382  function _setApprovalForAll(... */\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":6424:6729  function _safeTransfer(... */\n    tag_154:\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":6574:6602  _transfer(from, to, tokenId) */\n      tag_208\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":6584:6588  from */\n      dup5\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":6590:6592  to */\n      dup5\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":6594:6601  tokenId */\n      dup5\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":6574:6583  _transfer */\n      tag_118\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":6574:6602  _transfer(from, to, tokenId) */\n      jump\t// in\n    tag_208:\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":6620:6667  _checkOnERC721Received(from, to, tokenId, data) */\n      tag_209\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":6643:6647  from */\n      dup5\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":6649:6651  to */\n      dup5\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":6653:6660  tokenId */\n      dup5\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":6662:6666  data */\n      dup5\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":6620:6642  _checkOnERC721Received */\n      tag_210\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":6620:6667  _checkOnERC721Received(from, to, tokenId, data) */\n      jump\t// in\n    tag_209:\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":6612:6722  require(_checkOnERC721Received(from, to, tokenId, data), \"ERC721: transfer to non ERC721Receiver implementer\") */\n      tag_153\n      jumpi\n      mload(0x40)\n      shl(0xe5, 0x461bcd)\n      dup2\n      mstore\n      0x04\n      add\n      tag_98\n      swap1\n      tag_213\n      jump\t// in\n        /* \"@openzeppelin/contracts/utils/Strings.sol\":415:1111  function toString(uint256 value) internal pure returns (string memory) {... */\n    tag_162:\n        /* \"@openzeppelin/contracts/utils/Strings.sol\":471:484  string memory */\n      0x60\n        /* \"@openzeppelin/contracts/utils/Strings.sol\":520:534  uint256 length */\n      0x00\n        /* \"@openzeppelin/contracts/utils/Strings.sol\":537:554  Math.log10(value) */\n      tag_216\n        /* \"@openzeppelin/contracts/utils/Strings.sol\":548:553  value */\n      dup4\n        /* \"@openzeppelin/contracts/utils/Strings.sol\":537:547  Math.log10 */\n      tag_217\n        /* \"@openzeppelin/contracts/utils/Strings.sol\":537:554  Math.log10(value) */\n      jump\t// in\n    tag_216:\n        /* \"@openzeppelin/contracts/utils/Strings.sol\":557:558  1 */\n      0x01\n        /* \"@openzeppelin/contracts/utils/Strings.sol\":537:558  Math.log10(value) + 1 */\n      add\n        /* \"@openzeppelin/contracts/utils/Strings.sol\":520:558  uint256 length = Math.log10(value) + 1 */\n      swap1\n      pop\n        /* \"@openzeppelin/contracts/utils/Strings.sol\":572:592  string memory buffer */\n      0x00\n        /* \"@openzeppelin/contracts/utils/Strings.sol\":606:612  length */\n      dup2\n        /* \"@openzeppelin/contracts/utils/Strings.sol\":595:613  new string(length) */\n      0xffffffffffffffff\n      dup2\n      gt\n      iszero\n      tag_219\n      jumpi\n      tag_219\n      tag_220\n      jump\t// in\n    tag_219:\n      mload(0x40)\n      swap1\n      dup1\n      dup3\n      mstore\n      dup1\n      0x1f\n      add\n      not(0x1f)\n      and\n      0x20\n      add\n      dup3\n      add\n      0x40\n      mstore\n      dup1\n      iszero\n      tag_221\n      jumpi\n      0x20\n      dup3\n      add\n      dup2\n      dup1\n      calldatasize\n      dup4\n      calldatacopy\n      add\n      swap1\n      pop\n    tag_221:\n      pop\n        /* \"@openzeppelin/contracts/utils/Strings.sol\":572:613  string memory buffer = new string(length) */\n      swap1\n      pop\n        /* \"@openzeppelin/contracts/utils/Strings.sol\":733:761  add(buffer, add(32, length)) */\n      dup2\n      dup2\n      add\n        /* \"@openzeppelin/contracts/utils/Strings.sol\":749:751  32 */\n      0x20\n        /* \"@openzeppelin/contracts/utils/Strings.sol\":733:761  add(buffer, add(32, length)) */\n      add\n        /* \"@openzeppelin/contracts/utils/Strings.sol\":788:1068  while (true) {... */\n    tag_222:\n      not(0x00)\n        /* \"@openzeppelin/contracts/utils/Strings.sol\":819:824  ptr-- */\n      add\n      shl(0x81, 0x181899199a1a9b1b9c1cb0b131b232b3)\n        /* \"@openzeppelin/contracts/utils/Strings.sol\":953:955  10 */\n      0x0a\n        /* \"@openzeppelin/contracts/utils/Strings.sol\":942:956  mod(value, 10) */\n      dup7\n      mod\n        /* \"@openzeppelin/contracts/utils/Strings.sol\":937:967  byte(mod(value, 10), _SYMBOLS) */\n      byte\n        /* \"@openzeppelin/contracts/utils/Strings.sol\":819:824  ptr-- */\n      dup2\n        /* \"@openzeppelin/contracts/utils/Strings.sol\":924:968  mstore8(ptr, byte(mod(value, 10), _SYMBOLS)) */\n      mstore8\n        /* \"@openzeppelin/contracts/utils/Strings.sol\":1012:1014  10 */\n      0x0a\n        /* \"@openzeppelin/contracts/utils/Strings.sol\":1003:1014  value /= 10 */\n      dup6\n      div\n      swap5\n      pop\n        /* \"@openzeppelin/contracts/utils/Strings.sol\":1032:1053  if (value == 0) break */\n      dup5\n        /* \"@openzeppelin/contracts/utils/Strings.sol\":788:1068  while (true) {... */\n      tag_222\n        /* \"@openzeppelin/contracts/utils/Strings.sol\":1032:1053  if (value == 0) break */\n      jumpi\n      pop\n        /* \"@openzeppelin/contracts/utils/Strings.sol\":1088:1094  buffer */\n      swap4\n        /* \"@openzeppelin/contracts/utils/Strings.sol\":415:1111  function toString(uint256 value) internal pure returns (string memory) {... */\n      swap3\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":15698:16094  function _beforeTokenTransfer(... */\n    tag_190:\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":15882:15883  1 */\n      0x01\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":15870:15879  batchSize */\n      dup2\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":15870:15883  batchSize > 1 */\n      gt\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":15866:16088  if (batchSize > 1) {... */\n      iszero\n      tag_153\n      jumpi\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":15903:15921  from != address(0) */\n      dup5\n      and\n      iszero\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":15899:15984  if (from != address(0)) {... */\n      tag_232\n      jumpi\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":15941:15956  _balances[from] */\n      dup5\n      and\n      0x00\n      swap1\n      dup2\n      mstore\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":15941:15950  _balances */\n      0x03\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":15941:15956  _balances[from] */\n      0x20\n      mstore\n      0x40\n      dup2\n      keccak256\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":15941:15969  _balances[from] -= batchSize */\n      dup1\n      sload\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":15960:15969  batchSize */\n      dup4\n      swap3\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":15941:15956  _balances[from] */\n      swap1\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":15941:15969  _balances[from] -= batchSize */\n      tag_233\n      swap1\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":15960:15969  batchSize */\n      dup5\n      swap1\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":15941:15969  _balances[from] -= batchSize */\n      tag_234\n      jump\t// in\n    tag_233:\n      swap1\n      swap2\n      sstore\n      pop\n      pop\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":15899:15984  if (from != address(0)) {... */\n    tag_232:\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":16001:16017  to != address(0) */\n      dup4\n      and\n      iszero\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":15997:16078  if (to != address(0)) {... */\n      tag_153\n      jumpi\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":16037:16050  _balances[to] */\n      dup4\n      and\n      0x00\n      swap1\n      dup2\n      mstore\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":16037:16046  _balances */\n      0x03\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":16037:16050  _balances[to] */\n      0x20\n      mstore\n      0x40\n      dup2\n      keccak256\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":16037:16063  _balances[to] += batchSize */\n      dup1\n      sload\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":16054:16063  batchSize */\n      dup4\n      swap3\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":16037:16050  _balances[to] */\n      swap1\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":16037:16063  _balances[to] += batchSize */\n      tag_236\n      swap1\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":16054:16063  batchSize */\n      dup5\n      swap1\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":16037:16063  _balances[to] += batchSize */\n      tag_237\n      jump\t// in\n    tag_236:\n      swap1\n      swap2\n      sstore\n      pop\n      pop\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":15698:16094  function _beforeTokenTransfer(... */\n      pop\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":8460:8769  function _safeMint(... */\n    tag_200:\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":8584:8602  _mint(to, tokenId) */\n      tag_240\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":8590:8592  to */\n      dup4\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":8594:8601  tokenId */\n      dup4\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":8584:8589  _mint */\n      tag_241\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":8584:8602  _mint(to, tokenId) */\n      jump\t// in\n    tag_240:\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":8633:8686  _checkOnERC721Received(address(0), to, tokenId, data) */\n      tag_242\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":8664:8665  0 */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":8668:8670  to */\n      dup5\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":8672:8679  tokenId */\n      dup5\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":8681:8685  data */\n      dup5\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":8633:8655  _checkOnERC721Received */\n      tag_210\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":8633:8686  _checkOnERC721Received(address(0), to, tokenId, data) */\n      jump\t// in\n    tag_242:\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":8612:8762  require(... */\n      tag_108\n      jumpi\n      mload(0x40)\n      shl(0xe5, 0x461bcd)\n      dup2\n      mstore\n      0x04\n      add\n      tag_98\n      swap1\n      tag_213\n      jump\t// in\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":14151:14982  function _checkOnERC721Received(... */\n    tag_210:\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":14300:14304  bool */\n      0x00\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":14320:14333  to.isContract */\n      dup5\n      and\n        /* \"@openzeppelin/contracts/utils/Address.sol\":1465:1484  account.code.length */\n      extcodesize\n        /* \"@openzeppelin/contracts/utils/Address.sol\":1465:1488  account.code.length > 0 */\n      iszero\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":14316:14976  if (to.isContract()) {... */\n      tag_248\n      jumpi\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":14355:14426  IERC721Receiver(to).onERC721Received(_msgSender(), from, tokenId, data) */\n      mload(0x40)\n      shl(0xe1, 0x0a85bd01)\n      dup2\n      mstore\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":14355:14391  IERC721Receiver(to).onERC721Received */\n      dup6\n      and\n      swap1\n      0x150b7a02\n      swap1\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":14355:14426  IERC721Receiver(to).onERC721Received(_msgSender(), from, tokenId, data) */\n      tag_250\n      swap1\n        /* \"@openzeppelin/contracts/utils/Context.sol\":719:729  msg.sender */\n      caller\n      swap1\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":14406:14410  from */\n      dup10\n      swap1\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":14412:14419  tokenId */\n      dup9\n      swap1\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":14421:14425  data */\n      dup9\n      swap1\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":14355:14426  IERC721Receiver(to).onERC721Received(_msgSender(), from, tokenId, data) */\n      0x04\n      add\n      tag_251\n      jump\t// in\n    tag_250:\n      0x20\n      mload(0x40)\n      dup1\n      dup4\n      sub\n      dup2\n      0x00\n      dup8\n      gas\n      call\n      swap3\n      pop\n      pop\n      pop\n      dup1\n      iszero\n      tag_252\n      jumpi\n      pop\n      0x40\n      dup1\n      mload\n      0x1f\n      returndatasize\n      swap1\n      dup2\n      add\n      not(0x1f)\n      and\n      dup3\n      add\n      swap1\n      swap3\n      mstore\n      tag_253\n      swap2\n      dup2\n      add\n      swap1\n      tag_254\n      jump\t// in\n    tag_253:\n      0x01\n    tag_252:\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":14351:14924  try IERC721Receiver(to).onERC721Received(_msgSender(), from, tokenId, data) returns (bytes4 retval) {... */\n      tag_255\n      jumpi\n      returndatasize\n      dup1\n      dup1\n      iszero\n      tag_260\n      jumpi\n      mload(0x40)\n      swap2\n      pop\n      and(add(returndatasize, 0x3f), not(0x1f))\n      dup3\n      add\n      0x40\n      mstore\n      returndatasize\n      dup3\n      mstore\n      returndatasize\n      0x00\n      0x20\n      dup5\n      add\n      returndatacopy\n      jump(tag_259)\n    tag_260:\n      0x60\n      swap2\n      pop\n    tag_259:\n      pop\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":14593:14599  reason */\n      dup1\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":14593:14606  reason.length */\n      mload\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":14610:14611  0 */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":14593:14611  reason.length == 0 */\n      sub\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":14589:14910  if (reason.length == 0) {... */\n      tag_261\n      jumpi\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":14635:14695  revert(\"ERC721: transfer to non ERC721Receiver implementer\") */\n      mload(0x40)\n      shl(0xe5, 0x461bcd)\n      dup2\n      mstore\n      0x04\n      add\n      tag_98\n      swap1\n      tag_213\n      jump\t// in\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":14589:14910  if (reason.length == 0) {... */\n    tag_261:\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":14862:14868  reason */\n      dup1\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":14856:14869  mload(reason) */\n      mload\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":14847:14853  reason */\n      dup2\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":14843:14845  32 */\n      0x20\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":14839:14854  add(32, reason) */\n      add\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":14832:14870  revert(add(32, reason), mload(reason)) */\n      revert\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":14351:14924  try IERC721Receiver(to).onERC721Received(_msgSender(), from, tokenId, data) returns (bytes4 retval) {... */\n    tag_255:\n      not(sub(shl(0xe0, 0x01), 0x01))\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":14476:14527  retval == IERC721Receiver.onERC721Received.selector */\n      and\n      shl(0xe1, 0x0a85bd01)\n      eq\n      swap1\n      pop\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":14469:14527  return retval == IERC721Receiver.onERC721Received.selector */\n      jump(tag_179)\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":14316:14976  if (to.isContract()) {... */\n    tag_248:\n      pop\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":14961:14965  true */\n      0x01\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":14151:14982  function _checkOnERC721Received(... */\n      swap5\n      swap4\n      pop\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"@openzeppelin/contracts/utils/math/Math.sol\":9889:10779  function log10(uint256 value) internal pure returns (uint256) {... */\n    tag_217:\n        /* \"@openzeppelin/contracts/utils/math/Math.sol\":9942:9949  uint256 */\n      0x00\n      dup1\n      shl(0x40, 0x184f03e93ff9f4daa797ed6e38ed64bf6a1f01)\n        /* \"@openzeppelin/contracts/utils/math/Math.sol\":10017:10032  value >= 10**64 */\n      dup4\n      lt\n        /* \"@openzeppelin/contracts/utils/math/Math.sol\":10013:10112  if (value >= 10**64) {... */\n      tag_267\n      jumpi\n      shl(0x40, 0x184f03e93ff9f4daa797ed6e38ed64bf6a1f01)\n        /* \"@openzeppelin/contracts/utils/math/Math.sol\":10052:10067  value /= 10**64 */\n      dup4\n      div\n      swap3\n      pop\n        /* \"@openzeppelin/contracts/utils/math/Math.sol\":10095:10097  64 */\n      0x40\n        /* \"@openzeppelin/contracts/utils/math/Math.sol\":10085:10097  result += 64 */\n      add\n        /* \"@openzeppelin/contracts/utils/math/Math.sol\":10013:10112  if (value >= 10**64) {... */\n    tag_267:\n        /* \"@openzeppelin/contracts/utils/math/Math.sol\":10138:10144  10**32 */\n      0x04ee2d6d415b85acef8100000000\n        /* \"@openzeppelin/contracts/utils/math/Math.sol\":10129:10134  value */\n      dup4\n        /* \"@openzeppelin/contracts/utils/math/Math.sol\":10129:10144  value >= 10**32 */\n      lt\n        /* \"@openzeppelin/contracts/utils/math/Math.sol\":10125:10224  if (value >= 10**32) {... */\n      tag_270\n      jumpi\n        /* \"@openzeppelin/contracts/utils/math/Math.sol\":10173:10179  10**32 */\n      0x04ee2d6d415b85acef8100000000\n        /* \"@openzeppelin/contracts/utils/math/Math.sol\":10164:10179  value /= 10**32 */\n      dup4\n      div\n      swap3\n      pop\n        /* \"@openzeppelin/contracts/utils/math/Math.sol\":10207:10209  32 */\n      0x20\n        /* \"@openzeppelin/contracts/utils/math/Math.sol\":10197:10209  result += 32 */\n      add\n        /* \"@openzeppelin/contracts/utils/math/Math.sol\":10125:10224  if (value >= 10**32) {... */\n    tag_270:\n        /* \"@openzeppelin/contracts/utils/math/Math.sol\":10250:10256  10**16 */\n      0x2386f26fc10000\n        /* \"@openzeppelin/contracts/utils/math/Math.sol\":10241:10246  value */\n      dup4\n        /* \"@openzeppelin/contracts/utils/math/Math.sol\":10241:10256  value >= 10**16 */\n      lt\n        /* \"@openzeppelin/contracts/utils/math/Math.sol\":10237:10336  if (value >= 10**16) {... */\n      tag_273\n      jumpi\n        /* \"@openzeppelin/contracts/utils/math/Math.sol\":10285:10291  10**16 */\n      0x2386f26fc10000\n        /* \"@openzeppelin/contracts/utils/math/Math.sol\":10276:10291  value /= 10**16 */\n      dup4\n      div\n      swap3\n      pop\n        /* \"@openzeppelin/contracts/utils/math/Math.sol\":10319:10321  16 */\n      0x10\n        /* \"@openzeppelin/contracts/utils/math/Math.sol\":10309:10321  result += 16 */\n      add\n        /* \"@openzeppelin/contracts/utils/math/Math.sol\":10237:10336  if (value >= 10**16) {... */\n    tag_273:\n        /* \"@openzeppelin/contracts/utils/math/Math.sol\":10362:10367  10**8 */\n      0x05f5e100\n        /* \"@openzeppelin/contracts/utils/math/Math.sol\":10353:10358  value */\n      dup4\n        /* \"@openzeppelin/contracts/utils/math/Math.sol\":10353:10367  value >= 10**8 */\n      lt\n        /* \"@openzeppelin/contracts/utils/math/Math.sol\":10349:10445  if (value >= 10**8) {... */\n      tag_276\n      jumpi\n        /* \"@openzeppelin/contracts/utils/math/Math.sol\":10396:10401  10**8 */\n      0x05f5e100\n        /* \"@openzeppelin/contracts/utils/math/Math.sol\":10387:10401  value /= 10**8 */\n      dup4\n      div\n      swap3\n      pop\n        /* \"@openzeppelin/contracts/utils/math/Math.sol\":10429:10430  8 */\n      0x08\n        /* \"@openzeppelin/contracts/utils/math/Math.sol\":10419:10430  result += 8 */\n      add\n        /* \"@openzeppelin/contracts/utils/math/Math.sol\":10349:10445  if (value >= 10**8) {... */\n    tag_276:\n        /* \"@openzeppelin/contracts/utils/math/Math.sol\":10471:10476  10**4 */\n      0x2710\n        /* \"@openzeppelin/contracts/utils/math/Math.sol\":10462:10467  value */\n      dup4\n        /* \"@openzeppelin/contracts/utils/math/Math.sol\":10462:10476  value >= 10**4 */\n      lt\n        /* \"@openzeppelin/contracts/utils/math/Math.sol\":10458:10554  if (value >= 10**4) {... */\n      tag_279\n      jumpi\n        /* \"@openzeppelin/contracts/utils/math/Math.sol\":10505:10510  10**4 */\n      0x2710\n        /* \"@openzeppelin/contracts/utils/math/Math.sol\":10496:10510  value /= 10**4 */\n      dup4\n      div\n      swap3\n      pop\n        /* \"@openzeppelin/contracts/utils/math/Math.sol\":10538:10539  4 */\n      0x04\n        /* \"@openzeppelin/contracts/utils/math/Math.sol\":10528:10539  result += 4 */\n      add\n        /* \"@openzeppelin/contracts/utils/math/Math.sol\":10458:10554  if (value >= 10**4) {... */\n    tag_279:\n        /* \"@openzeppelin/contracts/utils/math/Math.sol\":10580:10585  10**2 */\n      0x64\n        /* \"@openzeppelin/contracts/utils/math/Math.sol\":10571:10576  value */\n      dup4\n        /* \"@openzeppelin/contracts/utils/math/Math.sol\":10571:10585  value >= 10**2 */\n      lt\n        /* \"@openzeppelin/contracts/utils/math/Math.sol\":10567:10663  if (value >= 10**2) {... */\n      tag_282\n      jumpi\n        /* \"@openzeppelin/contracts/utils/math/Math.sol\":10614:10619  10**2 */\n      0x64\n        /* \"@openzeppelin/contracts/utils/math/Math.sol\":10605:10619  value /= 10**2 */\n      dup4\n      div\n      swap3\n      pop\n        /* \"@openzeppelin/contracts/utils/math/Math.sol\":10647:10648  2 */\n      0x02\n        /* \"@openzeppelin/contracts/utils/math/Math.sol\":10637:10648  result += 2 */\n      add\n        /* \"@openzeppelin/contracts/utils/math/Math.sol\":10567:10663  if (value >= 10**2) {... */\n    tag_282:\n        /* \"@openzeppelin/contracts/utils/math/Math.sol\":10689:10694  10**1 */\n      0x0a\n        /* \"@openzeppelin/contracts/utils/math/Math.sol\":10680:10685  value */\n      dup4\n        /* \"@openzeppelin/contracts/utils/math/Math.sol\":10680:10694  value >= 10**1 */\n      lt\n        /* \"@openzeppelin/contracts/utils/math/Math.sol\":10676:10740  if (value >= 10**1) {... */\n      tag_83\n      jumpi\n        /* \"@openzeppelin/contracts/utils/math/Math.sol\":10724:10725  1 */\n      0x01\n        /* \"@openzeppelin/contracts/utils/math/Math.sol\":10714:10725  result += 1 */\n      add\n        /* \"@openzeppelin/contracts/utils/math/Math.sol\":10766:10772  result */\n      swap3\n        /* \"@openzeppelin/contracts/utils/math/Math.sol\":9889:10779  function log10(uint256 value) internal pure returns (uint256) {... */\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":9091:10011  function _mint(address to, uint256 tokenId) internal virtual {... */\n    tag_241:\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":9170:9186  to != address(0) */\n      dup3\n      and\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":9162:9223  require(to != address(0), \"ERC721: mint to the zero address\") */\n      tag_287\n      jumpi\n      mload(0x40)\n      shl(0xe5, 0x461bcd)\n      dup2\n      mstore\n        /* \"#utility.yul\":10732:10734   */\n      0x20\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":9162:9223  require(to != address(0), \"ERC721: mint to the zero address\") */\n      0x04\n      dup3\n      add\n        /* \"#utility.yul\":10714:10735   */\n      dup2\n      swap1\n      mstore\n        /* \"#utility.yul\":10751:10769   */\n      0x24\n      dup3\n      add\n        /* \"#utility.yul\":10744:10774   */\n      mstore\n        /* \"#utility.yul\":10810:10844   */\n      0x4552433732313a206d696e7420746f20746865207a65726f2061646472657373\n        /* \"#utility.yul\":10790:10808   */\n      0x44\n      dup3\n      add\n        /* \"#utility.yul\":10783:10845   */\n      mstore\n        /* \"#utility.yul\":10862:10880   */\n      0x64\n      add\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":9162:9223  require(to != address(0), \"ERC721: mint to the zero address\") */\n      tag_98\n        /* \"#utility.yul\":10530:10886   */\n      jump\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":9162:9223  require(to != address(0), \"ERC721: mint to the zero address\") */\n    tag_287:\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":7321:7325  bool */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":6930:6946  _owners[tokenId] */\n      dup2\n      dup2\n      mstore\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":6930:6937  _owners */\n      0x02\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":6930:6946  _owners[tokenId] */\n      0x20\n      mstore\n      0x40\n      swap1\n      keccak256\n      sload\n      sub(shl(0xa0, 0x01), 0x01)\n      and\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":7344:7375  _ownerOf(tokenId) != address(0) */\n      iszero\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":9233:9291  require(!_exists(tokenId), \"ERC721: token already minted\") */\n      tag_291\n      jumpi\n      mload(0x40)\n      shl(0xe5, 0x461bcd)\n      dup2\n      mstore\n        /* \"#utility.yul\":11093:11095   */\n      0x20\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":9233:9291  require(!_exists(tokenId), \"ERC721: token already minted\") */\n      0x04\n      dup3\n      add\n        /* \"#utility.yul\":11075:11096   */\n      mstore\n        /* \"#utility.yul\":11132:11134   */\n      0x1c\n        /* \"#utility.yul\":11112:11130   */\n      0x24\n      dup3\n      add\n        /* \"#utility.yul\":11105:11135   */\n      mstore\n        /* \"#utility.yul\":11171:11201   */\n      0x4552433732313a20746f6b656e20616c7265616479206d696e74656400000000\n        /* \"#utility.yul\":11151:11169   */\n      0x44\n      dup3\n      add\n        /* \"#utility.yul\":11144:11202   */\n      mstore\n        /* \"#utility.yul\":11219:11237   */\n      0x64\n      add\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":9233:9291  require(!_exists(tokenId), \"ERC721: token already minted\") */\n      tag_98\n        /* \"#utility.yul\":10891:11243   */\n      jump\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":9233:9291  require(!_exists(tokenId), \"ERC721: token already minted\") */\n    tag_291:\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":9302:9350  _beforeTokenTransfer(address(0), to, tokenId, 1) */\n      tag_294\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":9331:9332  0 */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":9335:9337  to */\n      dup4\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":9339:9346  tokenId */\n      dup4\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":9348:9349  1 */\n      0x01\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":9302:9322  _beforeTokenTransfer */\n      tag_190\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":9302:9350  _beforeTokenTransfer(address(0), to, tokenId, 1) */\n      jump\t// in\n    tag_294:\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":7321:7325  bool */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":6930:6946  _owners[tokenId] */\n      dup2\n      dup2\n      mstore\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":6930:6937  _owners */\n      0x02\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":6930:6946  _owners[tokenId] */\n      0x20\n      mstore\n      0x40\n      swap1\n      keccak256\n      sload\n      sub(shl(0xa0, 0x01), 0x01)\n      and\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":7344:7375  _ownerOf(tokenId) != address(0) */\n      iszero\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":9437:9495  require(!_exists(tokenId), \"ERC721: token already minted\") */\n      tag_296\n      jumpi\n      mload(0x40)\n      shl(0xe5, 0x461bcd)\n      dup2\n      mstore\n        /* \"#utility.yul\":11093:11095   */\n      0x20\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":9437:9495  require(!_exists(tokenId), \"ERC721: token already minted\") */\n      0x04\n      dup3\n      add\n        /* \"#utility.yul\":11075:11096   */\n      mstore\n        /* \"#utility.yul\":11132:11134   */\n      0x1c\n        /* \"#utility.yul\":11112:11130   */\n      0x24\n      dup3\n      add\n        /* \"#utility.yul\":11105:11135   */\n      mstore\n        /* \"#utility.yul\":11171:11201   */\n      0x4552433732313a20746f6b656e20616c7265616479206d696e74656400000000\n        /* \"#utility.yul\":11151:11169   */\n      0x44\n      dup3\n      add\n        /* \"#utility.yul\":11144:11202   */\n      mstore\n        /* \"#utility.yul\":11219:11237   */\n      0x64\n      add\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":9437:9495  require(!_exists(tokenId), \"ERC721: token already minted\") */\n      tag_98\n        /* \"#utility.yul\":10891:11243   */\n      jump\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":9437:9495  require(!_exists(tokenId), \"ERC721: token already minted\") */\n    tag_296:\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":9837:9850  _balances[to] */\n      dup3\n      and\n      0x00\n      dup2\n      dup2\n      mstore\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":9837:9846  _balances */\n      0x03\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":9837:9850  _balances[to] */\n      0x20\n      swap1\n      dup2\n      mstore\n      0x40\n      dup1\n      dup4\n      keccak256\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":9837:9855  _balances[to] += 1 */\n      dup1\n      sload\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":9854:9855  1 */\n      0x01\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":9837:9855  _balances[to] += 1 */\n      add\n      swap1\n      sstore\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":9876:9892  _owners[tokenId] */\n      dup5\n      dup4\n      mstore\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":9876:9883  _owners */\n      0x02\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":9876:9892  _owners[tokenId] */\n      swap1\n      swap2\n      mstore\n      dup1\n      dup3\n      keccak256\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":9876:9897  _owners[tokenId] = to */\n      dup1\n      sload\n      not(sub(shl(0xa0, 0x01), 0x01))\n      and\n      dup5\n      or\n      swap1\n      sstore\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":9913:9946  Transfer(address(0), to, tokenId) */\n      mload\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":9884:9891  tokenId */\n      dup4\n      swap3\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":9837:9850  _balances[to] */\n      swap2\n      swap1\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":9913:9946  Transfer(address(0), to, tokenId) */\n      0xddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef\n      swap1\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":9837:9850  _balances[to] */\n      dup3\n      swap1\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":9913:9946  Transfer(address(0), to, tokenId) */\n      log4\n        /* \"contracts/SingapurContract.sol\":375:504  {... */\n      pop\n        /* \"contracts/SingapurContract.sol\":338:504  function safeMint(address to) public {... */\n      pop\n      jump\t// out\n        /* \"#utility.yul\":14:145   */\n    tag_300:\n      not(sub(shl(0xe0, 0x01), 0x01))\n        /* \"#utility.yul\":88:120   */\n      dup2\n      and\n        /* \"#utility.yul\":78:121   */\n      dup2\n      eq\n        /* \"#utility.yul\":68:139   */\n      tag_170\n      jumpi\n        /* \"#utility.yul\":135:136   */\n      0x00\n        /* \"#utility.yul\":132:133   */\n      dup1\n        /* \"#utility.yul\":125:137   */\n      revert\n        /* \"#utility.yul\":150:395   */\n    tag_22:\n        /* \"#utility.yul\":208:214   */\n      0x00\n        /* \"#utility.yul\":261:263   */\n      0x20\n        /* \"#utility.yul\":249:258   */\n      dup3\n        /* \"#utility.yul\":240:247   */\n      dup5\n        /* \"#utility.yul\":236:259   */\n      sub\n        /* \"#utility.yul\":232:264   */\n      slt\n        /* \"#utility.yul\":229:281   */\n      iszero\n      tag_309\n      jumpi\n        /* \"#utility.yul\":277:278   */\n      0x00\n        /* \"#utility.yul\":274:275   */\n      dup1\n        /* \"#utility.yul\":267:279   */\n      revert\n        /* \"#utility.yul\":229:281   */\n    tag_309:\n        /* \"#utility.yul\":316:325   */\n      dup2\n        /* \"#utility.yul\":303:326   */\n      calldataload\n        /* \"#utility.yul\":335:365   */\n      tag_160\n        /* \"#utility.yul\":359:364   */\n      dup2\n        /* \"#utility.yul\":335:365   */\n      tag_300\n      jump\t// in\n        /* \"#utility.yul\":592:842   */\n    tag_301:\n        /* \"#utility.yul\":677:678   */\n      0x00\n        /* \"#utility.yul\":687:800   */\n    tag_313:\n        /* \"#utility.yul\":701:707   */\n      dup4\n        /* \"#utility.yul\":698:699   */\n      dup2\n        /* \"#utility.yul\":695:708   */\n      lt\n        /* \"#utility.yul\":687:800   */\n      iszero\n      tag_315\n      jumpi\n        /* \"#utility.yul\":777:788   */\n      dup2\n      dup2\n      add\n        /* \"#utility.yul\":771:789   */\n      mload\n        /* \"#utility.yul\":758:769   */\n      dup4\n      dup3\n      add\n        /* \"#utility.yul\":751:790   */\n      mstore\n        /* \"#utility.yul\":723:725   */\n      0x20\n        /* \"#utility.yul\":716:726   */\n      add\n        /* \"#utility.yul\":687:800   */\n      jump(tag_313)\n    tag_315:\n      pop\n      pop\n        /* \"#utility.yul\":834:835   */\n      0x00\n        /* \"#utility.yul\":816:832   */\n      swap2\n      add\n        /* \"#utility.yul\":809:836   */\n      mstore\n        /* \"#utility.yul\":592:842   */\n      jump\t// out\n        /* \"#utility.yul\":847:1118   */\n    tag_302:\n        /* \"#utility.yul\":889:892   */\n      0x00\n        /* \"#utility.yul\":927:932   */\n      dup2\n        /* \"#utility.yul\":921:933   */\n      mload\n        /* \"#utility.yul\":954:960   */\n      dup1\n        /* \"#utility.yul\":949:952   */\n      dup5\n        /* \"#utility.yul\":942:961   */\n      mstore\n        /* \"#utility.yul\":970:1046   */\n      tag_317\n        /* \"#utility.yul\":1039:1045   */\n      dup2\n        /* \"#utility.yul\":1032:1036   */\n      0x20\n        /* \"#utility.yul\":1027:1030   */\n      dup7\n        /* \"#utility.yul\":1023:1037   */\n      add\n        /* \"#utility.yul\":1016:1020   */\n      0x20\n        /* \"#utility.yul\":1009:1014   */\n      dup7\n        /* \"#utility.yul\":1005:1021   */\n      add\n        /* \"#utility.yul\":970:1046   */\n      tag_301\n      jump\t// in\n    tag_317:\n        /* \"#utility.yul\":1100:1102   */\n      0x1f\n        /* \"#utility.yul\":1079:1094   */\n      add\n      not(0x1f)\n        /* \"#utility.yul\":1075:1104   */\n      and\n        /* \"#utility.yul\":1066:1105   */\n      swap3\n      swap1\n      swap3\n      add\n        /* \"#utility.yul\":1107:1111   */\n      0x20\n        /* \"#utility.yul\":1062:1112   */\n      add\n      swap3\n        /* \"#utility.yul\":847:1118   */\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":1123:1343   */\n    tag_29:\n        /* \"#utility.yul\":1272:1274   */\n      0x20\n        /* \"#utility.yul\":1261:1270   */\n      dup2\n        /* \"#utility.yul\":1254:1275   */\n      mstore\n        /* \"#utility.yul\":1235:1239   */\n      0x00\n        /* \"#utility.yul\":1292:1337   */\n      tag_160\n        /* \"#utility.yul\":1333:1335   */\n      0x20\n        /* \"#utility.yul\":1322:1331   */\n      dup4\n        /* \"#utility.yul\":1318:1336   */\n      add\n        /* \"#utility.yul\":1310:1316   */\n      dup5\n        /* \"#utility.yul\":1292:1337   */\n      tag_302\n      jump\t// in\n        /* \"#utility.yul\":1348:1528   */\n    tag_32:\n        /* \"#utility.yul\":1407:1413   */\n      0x00\n        /* \"#utility.yul\":1460:1462   */\n      0x20\n        /* \"#utility.yul\":1448:1457   */\n      dup3\n        /* \"#utility.yul\":1439:1446   */\n      dup5\n        /* \"#utility.yul\":1435:1458   */\n      sub\n        /* \"#utility.yul\":1431:1463   */\n      slt\n        /* \"#utility.yul\":1428:1480   */\n      iszero\n      tag_321\n      jumpi\n        /* \"#utility.yul\":1476:1477   */\n      0x00\n        /* \"#utility.yul\":1473:1474   */\n      dup1\n        /* \"#utility.yul\":1466:1478   */\n      revert\n        /* \"#utility.yul\":1428:1480   */\n    tag_321:\n      pop\n        /* \"#utility.yul\":1499:1522   */\n      calldataload\n      swap2\n        /* \"#utility.yul\":1348:1528   */\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":1741:1914   */\n    tag_303:\n        /* \"#utility.yul\":1809:1829   */\n      dup1\n      calldataload\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"#utility.yul\":1858:1889   */\n      dup2\n      and\n        /* \"#utility.yul\":1848:1890   */\n      dup2\n      eq\n        /* \"#utility.yul\":1838:1908   */\n      tag_324\n      jumpi\n        /* \"#utility.yul\":1904:1905   */\n      0x00\n        /* \"#utility.yul\":1901:1902   */\n      dup1\n        /* \"#utility.yul\":1894:1906   */\n      revert\n        /* \"#utility.yul\":1838:1908   */\n    tag_324:\n        /* \"#utility.yul\":1741:1914   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":1919:2173   */\n    tag_38:\n        /* \"#utility.yul\":1987:1993   */\n      0x00\n        /* \"#utility.yul\":1995:2001   */\n      dup1\n        /* \"#utility.yul\":2048:2050   */\n      0x40\n        /* \"#utility.yul\":2036:2045   */\n      dup4\n        /* \"#utility.yul\":2027:2034   */\n      dup6\n        /* \"#utility.yul\":2023:2046   */\n      sub\n        /* \"#utility.yul\":2019:2051   */\n      slt\n        /* \"#utility.yul\":2016:2068   */\n      iszero\n      tag_326\n      jumpi\n        /* \"#utility.yul\":2064:2065   */\n      0x00\n        /* \"#utility.yul\":2061:2062   */\n      dup1\n        /* \"#utility.yul\":2054:2066   */\n      revert\n        /* \"#utility.yul\":2016:2068   */\n    tag_326:\n        /* \"#utility.yul\":2087:2116   */\n      tag_327\n        /* \"#utility.yul\":2106:2115   */\n      dup4\n        /* \"#utility.yul\":2087:2116   */\n      tag_303\n      jump\t// in\n    tag_327:\n        /* \"#utility.yul\":2077:2116   */\n      swap5\n        /* \"#utility.yul\":2163:2165   */\n      0x20\n        /* \"#utility.yul\":2148:2166   */\n      swap4\n      swap1\n      swap4\n      add\n        /* \"#utility.yul\":2135:2167   */\n      calldataload\n      swap4\n      pop\n      pop\n      pop\n        /* \"#utility.yul\":1919:2173   */\n      jump\t// out\n        /* \"#utility.yul\":2178:2506   */\n    tag_42:\n        /* \"#utility.yul\":2255:2261   */\n      0x00\n        /* \"#utility.yul\":2263:2269   */\n      dup1\n        /* \"#utility.yul\":2271:2277   */\n      0x00\n        /* \"#utility.yul\":2324:2326   */\n      0x60\n        /* \"#utility.yul\":2312:2321   */\n      dup5\n        /* \"#utility.yul\":2303:2310   */\n      dup7\n        /* \"#utility.yul\":2299:2322   */\n      sub\n        /* \"#utility.yul\":2295:2327   */\n      slt\n        /* \"#utility.yul\":2292:2344   */\n      iszero\n      tag_329\n      jumpi\n        /* \"#utility.yul\":2340:2341   */\n      0x00\n        /* \"#utility.yul\":2337:2338   */\n      dup1\n        /* \"#utility.yul\":2330:2342   */\n      revert\n        /* \"#utility.yul\":2292:2344   */\n    tag_329:\n        /* \"#utility.yul\":2363:2392   */\n      tag_330\n        /* \"#utility.yul\":2382:2391   */\n      dup5\n        /* \"#utility.yul\":2363:2392   */\n      tag_303\n      jump\t// in\n    tag_330:\n        /* \"#utility.yul\":2353:2392   */\n      swap3\n      pop\n        /* \"#utility.yul\":2411:2449   */\n      tag_331\n        /* \"#utility.yul\":2445:2447   */\n      0x20\n        /* \"#utility.yul\":2434:2443   */\n      dup6\n        /* \"#utility.yul\":2430:2448   */\n      add\n        /* \"#utility.yul\":2411:2449   */\n      tag_303\n      jump\t// in\n    tag_331:\n        /* \"#utility.yul\":2401:2449   */\n      swap2\n      pop\n        /* \"#utility.yul\":2496:2498   */\n      0x40\n        /* \"#utility.yul\":2485:2494   */\n      dup5\n        /* \"#utility.yul\":2481:2499   */\n      add\n        /* \"#utility.yul\":2468:2500   */\n      calldataload\n        /* \"#utility.yul\":2458:2500   */\n      swap1\n      pop\n        /* \"#utility.yul\":2178:2506   */\n      swap3\n      pop\n      swap3\n      pop\n      swap3\n      jump\t// out\n        /* \"#utility.yul\":2511:2697   */\n    tag_46:\n        /* \"#utility.yul\":2570:2576   */\n      0x00\n        /* \"#utility.yul\":2623:2625   */\n      0x20\n        /* \"#utility.yul\":2611:2620   */\n      dup3\n        /* \"#utility.yul\":2602:2609   */\n      dup5\n        /* \"#utility.yul\":2598:2621   */\n      sub\n        /* \"#utility.yul\":2594:2626   */\n      slt\n        /* \"#utility.yul\":2591:2643   */\n      iszero\n      tag_333\n      jumpi\n        /* \"#utility.yul\":2639:2640   */\n      0x00\n        /* \"#utility.yul\":2636:2637   */\n      dup1\n        /* \"#utility.yul\":2629:2641   */\n      revert\n        /* \"#utility.yul\":2591:2643   */\n    tag_333:\n        /* \"#utility.yul\":2662:2691   */\n      tag_160\n        /* \"#utility.yul\":2681:2690   */\n      dup3\n        /* \"#utility.yul\":2662:2691   */\n      tag_303\n      jump\t// in\n        /* \"#utility.yul\":2884:3231   */\n    tag_65:\n        /* \"#utility.yul\":2949:2955   */\n      0x00\n        /* \"#utility.yul\":2957:2963   */\n      dup1\n        /* \"#utility.yul\":3010:3012   */\n      0x40\n        /* \"#utility.yul\":2998:3007   */\n      dup4\n        /* \"#utility.yul\":2989:2996   */\n      dup6\n        /* \"#utility.yul\":2985:3008   */\n      sub\n        /* \"#utility.yul\":2981:3013   */\n      slt\n        /* \"#utility.yul\":2978:3030   */\n      iszero\n      tag_337\n      jumpi\n        /* \"#utility.yul\":3026:3027   */\n      0x00\n        /* \"#utility.yul\":3023:3024   */\n      dup1\n        /* \"#utility.yul\":3016:3028   */\n      revert\n        /* \"#utility.yul\":2978:3030   */\n    tag_337:\n        /* \"#utility.yul\":3049:3078   */\n      tag_338\n        /* \"#utility.yul\":3068:3077   */\n      dup4\n        /* \"#utility.yul\":3049:3078   */\n      tag_303\n      jump\t// in\n    tag_338:\n        /* \"#utility.yul\":3039:3078   */\n      swap2\n      pop\n        /* \"#utility.yul\":3128:3130   */\n      0x20\n        /* \"#utility.yul\":3117:3126   */\n      dup4\n        /* \"#utility.yul\":3113:3131   */\n      add\n        /* \"#utility.yul\":3100:3132   */\n      calldataload\n        /* \"#utility.yul\":3175:3180   */\n      dup1\n        /* \"#utility.yul\":3168:3181   */\n      iszero\n        /* \"#utility.yul\":3161:3182   */\n      iszero\n        /* \"#utility.yul\":3154:3159   */\n      dup2\n        /* \"#utility.yul\":3151:3183   */\n      eq\n        /* \"#utility.yul\":3141:3201   */\n      tag_339\n      jumpi\n        /* \"#utility.yul\":3197:3198   */\n      0x00\n        /* \"#utility.yul\":3194:3195   */\n      dup1\n        /* \"#utility.yul\":3187:3199   */\n      revert\n        /* \"#utility.yul\":3141:3201   */\n    tag_339:\n        /* \"#utility.yul\":3220:3225   */\n      dup1\n        /* \"#utility.yul\":3210:3225   */\n      swap2\n      pop\n      pop\n        /* \"#utility.yul\":2884:3231   */\n      swap3\n      pop\n      swap3\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":3236:3363   */\n    tag_220:\n        /* \"#utility.yul\":3297:3307   */\n      0x4e487b71\n        /* \"#utility.yul\":3292:3295   */\n      0xe0\n        /* \"#utility.yul\":3288:3308   */\n      shl\n        /* \"#utility.yul\":3285:3286   */\n      0x00\n        /* \"#utility.yul\":3278:3309   */\n      mstore\n        /* \"#utility.yul\":3328:3332   */\n      0x41\n        /* \"#utility.yul\":3325:3326   */\n      0x04\n        /* \"#utility.yul\":3318:3333   */\n      mstore\n        /* \"#utility.yul\":3352:3356   */\n      0x24\n        /* \"#utility.yul\":3349:3350   */\n      0x00\n        /* \"#utility.yul\":3342:3357   */\n      revert\n        /* \"#utility.yul\":3368:4506   */\n    tag_69:\n        /* \"#utility.yul\":3463:3469   */\n      0x00\n        /* \"#utility.yul\":3471:3477   */\n      dup1\n        /* \"#utility.yul\":3479:3485   */\n      0x00\n        /* \"#utility.yul\":3487:3493   */\n      dup1\n        /* \"#utility.yul\":3540:3543   */\n      0x80\n        /* \"#utility.yul\":3528:3537   */\n      dup6\n        /* \"#utility.yul\":3519:3526   */\n      dup8\n        /* \"#utility.yul\":3515:3538   */\n      sub\n        /* \"#utility.yul\":3511:3544   */\n      slt\n        /* \"#utility.yul\":3508:3561   */\n      iszero\n      tag_342\n      jumpi\n        /* \"#utility.yul\":3557:3558   */\n      0x00\n        /* \"#utility.yul\":3554:3555   */\n      dup1\n        /* \"#utility.yul\":3547:3559   */\n      revert\n        /* \"#utility.yul\":3508:3561   */\n    tag_342:\n        /* \"#utility.yul\":3580:3609   */\n      tag_343\n        /* \"#utility.yul\":3599:3608   */\n      dup6\n        /* \"#utility.yul\":3580:3609   */\n      tag_303\n      jump\t// in\n    tag_343:\n        /* \"#utility.yul\":3570:3609   */\n      swap4\n      pop\n        /* \"#utility.yul\":3628:3666   */\n      tag_344\n        /* \"#utility.yul\":3662:3664   */\n      0x20\n        /* \"#utility.yul\":3651:3660   */\n      dup7\n        /* \"#utility.yul\":3647:3665   */\n      add\n        /* \"#utility.yul\":3628:3666   */\n      tag_303\n      jump\t// in\n    tag_344:\n        /* \"#utility.yul\":3618:3666   */\n      swap3\n      pop\n        /* \"#utility.yul\":3713:3715   */\n      0x40\n        /* \"#utility.yul\":3702:3711   */\n      dup6\n        /* \"#utility.yul\":3698:3716   */\n      add\n        /* \"#utility.yul\":3685:3717   */\n      calldataload\n        /* \"#utility.yul\":3675:3717   */\n      swap2\n      pop\n        /* \"#utility.yul\":3768:3770   */\n      0x60\n        /* \"#utility.yul\":3757:3766   */\n      dup6\n        /* \"#utility.yul\":3753:3771   */\n      add\n        /* \"#utility.yul\":3740:3772   */\n      calldataload\n        /* \"#utility.yul\":3791:3809   */\n      0xffffffffffffffff\n        /* \"#utility.yul\":3832:3834   */\n      dup1\n        /* \"#utility.yul\":3824:3830   */\n      dup3\n        /* \"#utility.yul\":3821:3835   */\n      gt\n        /* \"#utility.yul\":3818:3852   */\n      iszero\n      tag_345\n      jumpi\n        /* \"#utility.yul\":3848:3849   */\n      0x00\n        /* \"#utility.yul\":3845:3846   */\n      dup1\n        /* \"#utility.yul\":3838:3850   */\n      revert\n        /* \"#utility.yul\":3818:3852   */\n    tag_345:\n        /* \"#utility.yul\":3886:3892   */\n      dup2\n        /* \"#utility.yul\":3875:3884   */\n      dup8\n        /* \"#utility.yul\":3871:3893   */\n      add\n        /* \"#utility.yul\":3861:3893   */\n      swap2\n      pop\n        /* \"#utility.yul\":3931:3938   */\n      dup8\n        /* \"#utility.yul\":3924:3928   */\n      0x1f\n        /* \"#utility.yul\":3920:3922   */\n      dup4\n        /* \"#utility.yul\":3916:3929   */\n      add\n        /* \"#utility.yul\":3912:3939   */\n      slt\n        /* \"#utility.yul\":3902:3957   */\n      tag_346\n      jumpi\n        /* \"#utility.yul\":3953:3954   */\n      0x00\n        /* \"#utility.yul\":3950:3951   */\n      dup1\n        /* \"#utility.yul\":3943:3955   */\n      revert\n        /* \"#utility.yul\":3902:3957   */\n    tag_346:\n        /* \"#utility.yul\":3989:3991   */\n      dup2\n        /* \"#utility.yul\":3976:3992   */\n      calldataload\n        /* \"#utility.yul\":4011:4013   */\n      dup2\n        /* \"#utility.yul\":4007:4009   */\n      dup2\n        /* \"#utility.yul\":4004:4014   */\n      gt\n        /* \"#utility.yul\":4001:4037   */\n      iszero\n      tag_348\n      jumpi\n        /* \"#utility.yul\":4017:4035   */\n      tag_348\n      tag_220\n      jump\t// in\n    tag_348:\n        /* \"#utility.yul\":4092:4094   */\n      0x40\n        /* \"#utility.yul\":4086:4095   */\n      mload\n        /* \"#utility.yul\":4060:4062   */\n      0x1f\n        /* \"#utility.yul\":4146:4159   */\n      dup3\n      add\n      not(0x1f)\n        /* \"#utility.yul\":4142:4164   */\n      swap1\n      dup2\n      and\n        /* \"#utility.yul\":4166:4168   */\n      0x3f\n        /* \"#utility.yul\":4138:4169   */\n      add\n        /* \"#utility.yul\":4134:4174   */\n      and\n        /* \"#utility.yul\":4122:4175   */\n      dup2\n      add\n      swap1\n        /* \"#utility.yul\":4190:4208   */\n      dup4\n      dup3\n      gt\n        /* \"#utility.yul\":4210:4232   */\n      dup2\n      dup4\n      lt\n        /* \"#utility.yul\":4187:4233   */\n      or\n        /* \"#utility.yul\":4184:4256   */\n      iszero\n      tag_350\n      jumpi\n        /* \"#utility.yul\":4236:4254   */\n      tag_350\n      tag_220\n      jump\t// in\n    tag_350:\n        /* \"#utility.yul\":4276:4286   */\n      dup2\n        /* \"#utility.yul\":4272:4274   */\n      0x40\n        /* \"#utility.yul\":4265:4287   */\n      mstore\n        /* \"#utility.yul\":4311:4313   */\n      dup3\n        /* \"#utility.yul\":4303:4309   */\n      dup2\n        /* \"#utility.yul\":4296:4314   */\n      mstore\n        /* \"#utility.yul\":4351:4358   */\n      dup11\n        /* \"#utility.yul\":4346:4348   */\n      0x20\n        /* \"#utility.yul\":4341:4343   */\n      dup5\n        /* \"#utility.yul\":4337:4339   */\n      dup8\n        /* \"#utility.yul\":4333:4344   */\n      add\n        /* \"#utility.yul\":4329:4349   */\n      add\n        /* \"#utility.yul\":4326:4359   */\n      gt\n        /* \"#utility.yul\":4323:4376   */\n      iszero\n      tag_351\n      jumpi\n        /* \"#utility.yul\":4372:4373   */\n      0x00\n        /* \"#utility.yul\":4369:4370   */\n      dup1\n        /* \"#utility.yul\":4362:4374   */\n      revert\n        /* \"#utility.yul\":4323:4376   */\n    tag_351:\n        /* \"#utility.yul\":4428:4430   */\n      dup3\n        /* \"#utility.yul\":4423:4425   */\n      0x20\n        /* \"#utility.yul\":4419:4421   */\n      dup7\n        /* \"#utility.yul\":4415:4426   */\n      add\n        /* \"#utility.yul\":4410:4412   */\n      0x20\n        /* \"#utility.yul\":4402:4408   */\n      dup4\n        /* \"#utility.yul\":4398:4413   */\n      add\n        /* \"#utility.yul\":4385:4431   */\n      calldatacopy\n        /* \"#utility.yul\":4473:4474   */\n      0x00\n        /* \"#utility.yul\":4468:4470   */\n      0x20\n        /* \"#utility.yul\":4463:4465   */\n      dup5\n        /* \"#utility.yul\":4455:4461   */\n      dup4\n        /* \"#utility.yul\":4451:4466   */\n      add\n        /* \"#utility.yul\":4447:4471   */\n      add\n        /* \"#utility.yul\":4440:4475   */\n      mstore\n        /* \"#utility.yul\":4494:4500   */\n      dup1\n        /* \"#utility.yul\":4484:4500   */\n      swap6\n      pop\n      pop\n      pop\n      pop\n      pop\n      pop\n        /* \"#utility.yul\":3368:4506   */\n      swap3\n      swap6\n      swap2\n      swap5\n      pop\n      swap3\n      pop\n      jump\t// out\n        /* \"#utility.yul\":4511:4771   */\n    tag_77:\n        /* \"#utility.yul\":4579:4585   */\n      0x00\n        /* \"#utility.yul\":4587:4593   */\n      dup1\n        /* \"#utility.yul\":4640:4642   */\n      0x40\n        /* \"#utility.yul\":4628:4637   */\n      dup4\n        /* \"#utility.yul\":4619:4626   */\n      dup6\n        /* \"#utility.yul\":4615:4638   */\n      sub\n        /* \"#utility.yul\":4611:4643   */\n      slt\n        /* \"#utility.yul\":4608:4660   */\n      iszero\n      tag_353\n      jumpi\n        /* \"#utility.yul\":4656:4657   */\n      0x00\n        /* \"#utility.yul\":4653:4654   */\n      dup1\n        /* \"#utility.yul\":4646:4658   */\n      revert\n        /* \"#utility.yul\":4608:4660   */\n    tag_353:\n        /* \"#utility.yul\":4679:4708   */\n      tag_354\n        /* \"#utility.yul\":4698:4707   */\n      dup4\n        /* \"#utility.yul\":4679:4708   */\n      tag_303\n      jump\t// in\n    tag_354:\n        /* \"#utility.yul\":4669:4708   */\n      swap2\n      pop\n        /* \"#utility.yul\":4727:4765   */\n      tag_355\n        /* \"#utility.yul\":4761:4763   */\n      0x20\n        /* \"#utility.yul\":4750:4759   */\n      dup5\n        /* \"#utility.yul\":4746:4764   */\n      add\n        /* \"#utility.yul\":4727:4765   */\n      tag_303\n      jump\t// in\n    tag_355:\n        /* \"#utility.yul\":4717:4765   */\n      swap1\n      pop\n        /* \"#utility.yul\":4511:4771   */\n      swap3\n      pop\n      swap3\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":4776:5156   */\n    tag_87:\n        /* \"#utility.yul\":4855:4856   */\n      0x01\n        /* \"#utility.yul\":4851:4863   */\n      dup2\n      dup2\n      shr\n      swap1\n        /* \"#utility.yul\":4898:4910   */\n      dup3\n      and\n      dup1\n        /* \"#utility.yul\":4919:4980   */\n      tag_357\n      jumpi\n        /* \"#utility.yul\":4973:4977   */\n      0x7f\n        /* \"#utility.yul\":4965:4971   */\n      dup3\n        /* \"#utility.yul\":4961:4978   */\n      and\n        /* \"#utility.yul\":4951:4978   */\n      swap2\n      pop\n        /* \"#utility.yul\":4919:4980   */\n    tag_357:\n        /* \"#utility.yul\":5026:5028   */\n      0x20\n        /* \"#utility.yul\":5018:5024   */\n      dup3\n        /* \"#utility.yul\":5015:5029   */\n      lt\n        /* \"#utility.yul\":4995:5013   */\n      dup2\n        /* \"#utility.yul\":4992:5030   */\n      sub\n        /* \"#utility.yul\":4989:5150   */\n      tag_358\n      jumpi\n        /* \"#utility.yul\":5072:5082   */\n      0x4e487b71\n        /* \"#utility.yul\":5067:5070   */\n      0xe0\n        /* \"#utility.yul\":5063:5083   */\n      shl\n        /* \"#utility.yul\":5060:5061   */\n      0x00\n        /* \"#utility.yul\":5053:5084   */\n      mstore\n        /* \"#utility.yul\":5107:5111   */\n      0x22\n        /* \"#utility.yul\":5104:5105   */\n      0x04\n        /* \"#utility.yul\":5097:5112   */\n      mstore\n        /* \"#utility.yul\":5135:5139   */\n      0x24\n        /* \"#utility.yul\":5132:5133   */\n      0x00\n        /* \"#utility.yul\":5125:5140   */\n      revert\n        /* \"#utility.yul\":4989:5150   */\n    tag_358:\n      pop\n        /* \"#utility.yul\":4776:5156   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":5993:6402   */\n    tag_116:\n        /* \"#utility.yul\":6195:6197   */\n      0x20\n        /* \"#utility.yul\":6177:6198   */\n      dup1\n      dup3\n      mstore\n        /* \"#utility.yul\":6234:6236   */\n      0x2d\n        /* \"#utility.yul\":6214:6232   */\n      swap1\n      dup3\n      add\n        /* \"#utility.yul\":6207:6237   */\n      mstore\n        /* \"#utility.yul\":6273:6307   */\n      0x4552433732313a2063616c6c6572206973206e6f7420746f6b656e206f776e65\n        /* \"#utility.yul\":6268:6270   */\n      0x40\n        /* \"#utility.yul\":6253:6271   */\n      dup3\n      add\n        /* \"#utility.yul\":6246:6308   */\n      mstore\n      shl(0x9a, 0x1c881bdc88185c1c1c9bdd9959)\n        /* \"#utility.yul\":6339:6341   */\n      0x60\n        /* \"#utility.yul\":6324:6342   */\n      dup3\n      add\n        /* \"#utility.yul\":6317:6360   */\n      mstore\n        /* \"#utility.yul\":6392:6395   */\n      0x80\n        /* \"#utility.yul\":6377:6396   */\n      add\n      swap1\n        /* \"#utility.yul\":5993:6402   */\n      jump\t// out\n        /* \"#utility.yul\":7170:7666   */\n    tag_164:\n        /* \"#utility.yul\":7349:7352   */\n      0x00\n        /* \"#utility.yul\":7387:7393   */\n      dup4\n        /* \"#utility.yul\":7381:7394   */\n      mload\n        /* \"#utility.yul\":7403:7469   */\n      tag_365\n        /* \"#utility.yul\":7462:7468   */\n      dup2\n        /* \"#utility.yul\":7457:7460   */\n      dup5\n        /* \"#utility.yul\":7450:7454   */\n      0x20\n        /* \"#utility.yul\":7442:7448   */\n      dup9\n        /* \"#utility.yul\":7438:7455   */\n      add\n        /* \"#utility.yul\":7403:7469   */\n      tag_301\n      jump\t// in\n    tag_365:\n        /* \"#utility.yul\":7532:7545   */\n      dup4\n      mload\n        /* \"#utility.yul\":7491:7507   */\n      swap1\n      dup4\n      add\n      swap1\n        /* \"#utility.yul\":7554:7624   */\n      tag_366\n        /* \"#utility.yul\":7532:7545   */\n      dup2\n        /* \"#utility.yul\":7491:7507   */\n      dup4\n        /* \"#utility.yul\":7601:7605   */\n      0x20\n        /* \"#utility.yul\":7589:7606   */\n      dup9\n      add\n        /* \"#utility.yul\":7554:7624   */\n      tag_301\n      jump\t// in\n    tag_366:\n        /* \"#utility.yul\":7640:7660   */\n      add\n      swap5\n        /* \"#utility.yul\":7170:7666   */\n      swap4\n      pop\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":7671:8072   */\n    tag_185:\n        /* \"#utility.yul\":7873:7875   */\n      0x20\n        /* \"#utility.yul\":7855:7876   */\n      dup1\n      dup3\n      mstore\n        /* \"#utility.yul\":7912:7914   */\n      0x25\n        /* \"#utility.yul\":7892:7910   */\n      swap1\n      dup3\n      add\n        /* \"#utility.yul\":7885:7915   */\n      mstore\n        /* \"#utility.yul\":7951:7985   */\n      0x4552433732313a207472616e736665722066726f6d20696e636f727265637420\n        /* \"#utility.yul\":7946:7948   */\n      0x40\n        /* \"#utility.yul\":7931:7949   */\n      dup3\n      add\n        /* \"#utility.yul\":7924:7986   */\n      mstore\n      shl(0xd9, 0x37bbb732b9)\n        /* \"#utility.yul\":8017:8019   */\n      0x60\n        /* \"#utility.yul\":8002:8020   */\n      dup3\n      add\n        /* \"#utility.yul\":7995:8030   */\n      mstore\n        /* \"#utility.yul\":8062:8065   */\n      0x80\n        /* \"#utility.yul\":8047:8066   */\n      add\n      swap1\n        /* \"#utility.yul\":7671:8072   */\n      jump\t// out\n        /* \"#utility.yul\":8836:9250   */\n    tag_213:\n        /* \"#utility.yul\":9038:9040   */\n      0x20\n        /* \"#utility.yul\":9020:9041   */\n      dup1\n      dup3\n      mstore\n        /* \"#utility.yul\":9077:9079   */\n      0x32\n        /* \"#utility.yul\":9057:9075   */\n      swap1\n      dup3\n      add\n        /* \"#utility.yul\":9050:9080   */\n      mstore\n        /* \"#utility.yul\":9116:9150   */\n      0x4552433732313a207472616e7366657220746f206e6f6e204552433732315265\n        /* \"#utility.yul\":9111:9113   */\n      0x40\n        /* \"#utility.yul\":9096:9114   */\n      dup3\n      add\n        /* \"#utility.yul\":9089:9151   */\n      mstore\n      shl(0x71, 0x31b2b4bb32b91034b6b83632b6b2b73a32b9)\n        /* \"#utility.yul\":9182:9184   */\n      0x60\n        /* \"#utility.yul\":9167:9185   */\n      dup3\n      add\n        /* \"#utility.yul\":9160:9208   */\n      mstore\n        /* \"#utility.yul\":9240:9243   */\n      0x80\n        /* \"#utility.yul\":9225:9244   */\n      add\n      swap1\n        /* \"#utility.yul\":8836:9250   */\n      jump\t// out\n        /* \"#utility.yul\":9387:9514   */\n    tag_304:\n        /* \"#utility.yul\":9448:9458   */\n      0x4e487b71\n        /* \"#utility.yul\":9443:9446   */\n      0xe0\n        /* \"#utility.yul\":9439:9459   */\n      shl\n        /* \"#utility.yul\":9436:9437   */\n      0x00\n        /* \"#utility.yul\":9429:9460   */\n      mstore\n        /* \"#utility.yul\":9479:9483   */\n      0x11\n        /* \"#utility.yul\":9476:9477   */\n      0x04\n        /* \"#utility.yul\":9469:9484   */\n      mstore\n        /* \"#utility.yul\":9503:9507   */\n      0x24\n        /* \"#utility.yul\":9500:9501   */\n      0x00\n        /* \"#utility.yul\":9493:9508   */\n      revert\n        /* \"#utility.yul\":9519:9647   */\n    tag_234:\n        /* \"#utility.yul\":9586:9595   */\n      dup2\n      dup2\n      sub\n        /* \"#utility.yul\":9607:9618   */\n      dup2\n      dup2\n      gt\n        /* \"#utility.yul\":9604:9641   */\n      iszero\n      tag_83\n      jumpi\n        /* \"#utility.yul\":9621:9639   */\n      tag_83\n      tag_304\n      jump\t// in\n        /* \"#utility.yul\":9652:9777   */\n    tag_237:\n        /* \"#utility.yul\":9717:9726   */\n      dup1\n      dup3\n      add\n        /* \"#utility.yul\":9738:9748   */\n      dup1\n      dup3\n      gt\n        /* \"#utility.yul\":9735:9771   */\n      iszero\n      tag_83\n      jumpi\n        /* \"#utility.yul\":9751:9769   */\n      tag_83\n      tag_304\n      jump\t// in\n        /* \"#utility.yul\":9782:10271   */\n    tag_251:\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"#utility.yul\":10051:10066   */\n      dup6\n      dup2\n      and\n        /* \"#utility.yul\":10033:10067   */\n      dup3\n      mstore\n        /* \"#utility.yul\":10103:10118   */\n      dup5\n      and\n        /* \"#utility.yul\":10098:10100   */\n      0x20\n        /* \"#utility.yul\":10083:10101   */\n      dup3\n      add\n        /* \"#utility.yul\":10076:10119   */\n      mstore\n        /* \"#utility.yul\":10150:10152   */\n      0x40\n        /* \"#utility.yul\":10135:10153   */\n      dup2\n      add\n        /* \"#utility.yul\":10128:10162   */\n      dup4\n      swap1\n      mstore\n        /* \"#utility.yul\":10198:10201   */\n      0x80\n        /* \"#utility.yul\":10193:10195   */\n      0x60\n        /* \"#utility.yul\":10178:10196   */\n      dup3\n      add\n        /* \"#utility.yul\":10171:10202   */\n      dup2\n      swap1\n      mstore\n        /* \"#utility.yul\":9976:9980   */\n      0x00\n      swap1\n        /* \"#utility.yul\":10219:10265   */\n      tag_380\n      swap1\n        /* \"#utility.yul\":10245:10264   */\n      dup4\n      add\n        /* \"#utility.yul\":10237:10243   */\n      dup5\n        /* \"#utility.yul\":10219:10265   */\n      tag_302\n      jump\t// in\n    tag_380:\n        /* \"#utility.yul\":10211:10265   */\n      swap7\n        /* \"#utility.yul\":9782:10271   */\n      swap6\n      pop\n      pop\n      pop\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":10276:10525   */\n    tag_254:\n        /* \"#utility.yul\":10345:10351   */\n      0x00\n        /* \"#utility.yul\":10398:10400   */\n      0x20\n        /* \"#utility.yul\":10386:10395   */\n      dup3\n        /* \"#utility.yul\":10377:10384   */\n      dup5\n        /* \"#utility.yul\":10373:10396   */\n      sub\n        /* \"#utility.yul\":10369:10401   */\n      slt\n        /* \"#utility.yul\":10366:10418   */\n      iszero\n      tag_382\n      jumpi\n        /* \"#utility.yul\":10414:10415   */\n      0x00\n        /* \"#utility.yul\":10411:10412   */\n      dup1\n        /* \"#utility.yul\":10404:10416   */\n      revert\n        /* \"#utility.yul\":10366:10418   */\n    tag_382:\n        /* \"#utility.yul\":10446:10455   */\n      dup2\n        /* \"#utility.yul\":10440:10456   */\n      mload\n        /* \"#utility.yul\":10465:10495   */\n      tag_160\n        /* \"#utility.yul\":10489:10494   */\n      dup2\n        /* \"#utility.yul\":10465:10495   */\n      tag_300\n      jump\t// in\n\n    auxdata: 0xa2646970667358221220bd25f036120a0eb18ca2aa079e080161b5a8416abc94a75dde62dca155667f6c64736f6c63430008150033\n}\n",
						"bytecode": {
							"functionDebugData": {
								"@_2628": {
									"entryPoint": null,
									"id": 2628,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@_62": {
									"entryPoint": null,
									"id": 62,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"array_dataslot_string_storage": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"clean_up_bytearray_end_slots_string_storage": {
									"entryPoint": 195,
									"id": null,
									"parameterSlots": 3,
									"returnSlots": 0
								},
								"copy_byte_array_to_storage_from_t_string_memory_ptr_to_t_string_storage": {
									"entryPoint": 277,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"extract_byte_array_length": {
									"entryPoint": 137,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"extract_used_part_and_set_length_of_short_byte_array": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"panic_error_0x41": {
									"entryPoint": 117,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								}
							},
							"generatedSources": [
								{
									"ast": {
										"nativeSrc": "0:2732:12",
										"nodeType": "YulBlock",
										"src": "0:2732:12",
										"statements": [
											{
												"nativeSrc": "6:3:12",
												"nodeType": "YulBlock",
												"src": "6:3:12",
												"statements": []
											},
											{
												"body": {
													"nativeSrc": "46:95:12",
													"nodeType": "YulBlock",
													"src": "46:95:12",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "63:1:12",
																		"nodeType": "YulLiteral",
																		"src": "63:1:12",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"arguments": [
																			{
																				"kind": "number",
																				"nativeSrc": "70:3:12",
																				"nodeType": "YulLiteral",
																				"src": "70:3:12",
																				"type": "",
																				"value": "224"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "75:10:12",
																				"nodeType": "YulLiteral",
																				"src": "75:10:12",
																				"type": "",
																				"value": "0x4e487b71"
																			}
																		],
																		"functionName": {
																			"name": "shl",
																			"nativeSrc": "66:3:12",
																			"nodeType": "YulIdentifier",
																			"src": "66:3:12"
																		},
																		"nativeSrc": "66:20:12",
																		"nodeType": "YulFunctionCall",
																		"src": "66:20:12"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "56:6:12",
																	"nodeType": "YulIdentifier",
																	"src": "56:6:12"
																},
																"nativeSrc": "56:31:12",
																"nodeType": "YulFunctionCall",
																"src": "56:31:12"
															},
															"nativeSrc": "56:31:12",
															"nodeType": "YulExpressionStatement",
															"src": "56:31:12"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "103:1:12",
																		"nodeType": "YulLiteral",
																		"src": "103:1:12",
																		"type": "",
																		"value": "4"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "106:4:12",
																		"nodeType": "YulLiteral",
																		"src": "106:4:12",
																		"type": "",
																		"value": "0x41"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "96:6:12",
																	"nodeType": "YulIdentifier",
																	"src": "96:6:12"
																},
																"nativeSrc": "96:15:12",
																"nodeType": "YulFunctionCall",
																"src": "96:15:12"
															},
															"nativeSrc": "96:15:12",
															"nodeType": "YulExpressionStatement",
															"src": "96:15:12"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "127:1:12",
																		"nodeType": "YulLiteral",
																		"src": "127:1:12",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "130:4:12",
																		"nodeType": "YulLiteral",
																		"src": "130:4:12",
																		"type": "",
																		"value": "0x24"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nativeSrc": "120:6:12",
																	"nodeType": "YulIdentifier",
																	"src": "120:6:12"
																},
																"nativeSrc": "120:15:12",
																"nodeType": "YulFunctionCall",
																"src": "120:15:12"
															},
															"nativeSrc": "120:15:12",
															"nodeType": "YulExpressionStatement",
															"src": "120:15:12"
														}
													]
												},
												"name": "panic_error_0x41",
												"nativeSrc": "14:127:12",
												"nodeType": "YulFunctionDefinition",
												"src": "14:127:12"
											},
											{
												"body": {
													"nativeSrc": "201:325:12",
													"nodeType": "YulBlock",
													"src": "201:325:12",
													"statements": [
														{
															"nativeSrc": "211:22:12",
															"nodeType": "YulAssignment",
															"src": "211:22:12",
															"value": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "225:1:12",
																		"nodeType": "YulLiteral",
																		"src": "225:1:12",
																		"type": "",
																		"value": "1"
																	},
																	{
																		"name": "data",
																		"nativeSrc": "228:4:12",
																		"nodeType": "YulIdentifier",
																		"src": "228:4:12"
																	}
																],
																"functionName": {
																	"name": "shr",
																	"nativeSrc": "221:3:12",
																	"nodeType": "YulIdentifier",
																	"src": "221:3:12"
																},
																"nativeSrc": "221:12:12",
																"nodeType": "YulFunctionCall",
																"src": "221:12:12"
															},
															"variableNames": [
																{
																	"name": "length",
																	"nativeSrc": "211:6:12",
																	"nodeType": "YulIdentifier",
																	"src": "211:6:12"
																}
															]
														},
														{
															"nativeSrc": "242:38:12",
															"nodeType": "YulVariableDeclaration",
															"src": "242:38:12",
															"value": {
																"arguments": [
																	{
																		"name": "data",
																		"nativeSrc": "272:4:12",
																		"nodeType": "YulIdentifier",
																		"src": "272:4:12"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "278:1:12",
																		"nodeType": "YulLiteral",
																		"src": "278:1:12",
																		"type": "",
																		"value": "1"
																	}
																],
																"functionName": {
																	"name": "and",
																	"nativeSrc": "268:3:12",
																	"nodeType": "YulIdentifier",
																	"src": "268:3:12"
																},
																"nativeSrc": "268:12:12",
																"nodeType": "YulFunctionCall",
																"src": "268:12:12"
															},
															"variables": [
																{
																	"name": "outOfPlaceEncoding",
																	"nativeSrc": "246:18:12",
																	"nodeType": "YulTypedName",
																	"src": "246:18:12",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nativeSrc": "319:31:12",
																"nodeType": "YulBlock",
																"src": "319:31:12",
																"statements": [
																	{
																		"nativeSrc": "321:27:12",
																		"nodeType": "YulAssignment",
																		"src": "321:27:12",
																		"value": {
																			"arguments": [
																				{
																					"name": "length",
																					"nativeSrc": "335:6:12",
																					"nodeType": "YulIdentifier",
																					"src": "335:6:12"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "343:4:12",
																					"nodeType": "YulLiteral",
																					"src": "343:4:12",
																					"type": "",
																					"value": "0x7f"
																				}
																			],
																			"functionName": {
																				"name": "and",
																				"nativeSrc": "331:3:12",
																				"nodeType": "YulIdentifier",
																				"src": "331:3:12"
																			},
																			"nativeSrc": "331:17:12",
																			"nodeType": "YulFunctionCall",
																			"src": "331:17:12"
																		},
																		"variableNames": [
																			{
																				"name": "length",
																				"nativeSrc": "321:6:12",
																				"nodeType": "YulIdentifier",
																				"src": "321:6:12"
																			}
																		]
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "outOfPlaceEncoding",
																		"nativeSrc": "299:18:12",
																		"nodeType": "YulIdentifier",
																		"src": "299:18:12"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nativeSrc": "292:6:12",
																	"nodeType": "YulIdentifier",
																	"src": "292:6:12"
																},
																"nativeSrc": "292:26:12",
																"nodeType": "YulFunctionCall",
																"src": "292:26:12"
															},
															"nativeSrc": "289:61:12",
															"nodeType": "YulIf",
															"src": "289:61:12"
														},
														{
															"body": {
																"nativeSrc": "409:111:12",
																"nodeType": "YulBlock",
																"src": "409:111:12",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nativeSrc": "430:1:12",
																					"nodeType": "YulLiteral",
																					"src": "430:1:12",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"arguments": [
																						{
																							"kind": "number",
																							"nativeSrc": "437:3:12",
																							"nodeType": "YulLiteral",
																							"src": "437:3:12",
																							"type": "",
																							"value": "224"
																						},
																						{
																							"kind": "number",
																							"nativeSrc": "442:10:12",
																							"nodeType": "YulLiteral",
																							"src": "442:10:12",
																							"type": "",
																							"value": "0x4e487b71"
																						}
																					],
																					"functionName": {
																						"name": "shl",
																						"nativeSrc": "433:3:12",
																						"nodeType": "YulIdentifier",
																						"src": "433:3:12"
																					},
																					"nativeSrc": "433:20:12",
																					"nodeType": "YulFunctionCall",
																					"src": "433:20:12"
																				}
																			],
																			"functionName": {
																				"name": "mstore",
																				"nativeSrc": "423:6:12",
																				"nodeType": "YulIdentifier",
																				"src": "423:6:12"
																			},
																			"nativeSrc": "423:31:12",
																			"nodeType": "YulFunctionCall",
																			"src": "423:31:12"
																		},
																		"nativeSrc": "423:31:12",
																		"nodeType": "YulExpressionStatement",
																		"src": "423:31:12"
																	},
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nativeSrc": "474:1:12",
																					"nodeType": "YulLiteral",
																					"src": "474:1:12",
																					"type": "",
																					"value": "4"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "477:4:12",
																					"nodeType": "YulLiteral",
																					"src": "477:4:12",
																					"type": "",
																					"value": "0x22"
																				}
																			],
																			"functionName": {
																				"name": "mstore",
																				"nativeSrc": "467:6:12",
																				"nodeType": "YulIdentifier",
																				"src": "467:6:12"
																			},
																			"nativeSrc": "467:15:12",
																			"nodeType": "YulFunctionCall",
																			"src": "467:15:12"
																		},
																		"nativeSrc": "467:15:12",
																		"nodeType": "YulExpressionStatement",
																		"src": "467:15:12"
																	},
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nativeSrc": "502:1:12",
																					"nodeType": "YulLiteral",
																					"src": "502:1:12",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "505:4:12",
																					"nodeType": "YulLiteral",
																					"src": "505:4:12",
																					"type": "",
																					"value": "0x24"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nativeSrc": "495:6:12",
																				"nodeType": "YulIdentifier",
																				"src": "495:6:12"
																			},
																			"nativeSrc": "495:15:12",
																			"nodeType": "YulFunctionCall",
																			"src": "495:15:12"
																		},
																		"nativeSrc": "495:15:12",
																		"nodeType": "YulExpressionStatement",
																		"src": "495:15:12"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "outOfPlaceEncoding",
																		"nativeSrc": "365:18:12",
																		"nodeType": "YulIdentifier",
																		"src": "365:18:12"
																	},
																	{
																		"arguments": [
																			{
																				"name": "length",
																				"nativeSrc": "388:6:12",
																				"nodeType": "YulIdentifier",
																				"src": "388:6:12"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "396:2:12",
																				"nodeType": "YulLiteral",
																				"src": "396:2:12",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "lt",
																			"nativeSrc": "385:2:12",
																			"nodeType": "YulIdentifier",
																			"src": "385:2:12"
																		},
																		"nativeSrc": "385:14:12",
																		"nodeType": "YulFunctionCall",
																		"src": "385:14:12"
																	}
																],
																"functionName": {
																	"name": "eq",
																	"nativeSrc": "362:2:12",
																	"nodeType": "YulIdentifier",
																	"src": "362:2:12"
																},
																"nativeSrc": "362:38:12",
																"nodeType": "YulFunctionCall",
																"src": "362:38:12"
															},
															"nativeSrc": "359:161:12",
															"nodeType": "YulIf",
															"src": "359:161:12"
														}
													]
												},
												"name": "extract_byte_array_length",
												"nativeSrc": "146:380:12",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "data",
														"nativeSrc": "181:4:12",
														"nodeType": "YulTypedName",
														"src": "181:4:12",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "length",
														"nativeSrc": "190:6:12",
														"nodeType": "YulTypedName",
														"src": "190:6:12",
														"type": ""
													}
												],
												"src": "146:380:12"
											},
											{
												"body": {
													"nativeSrc": "587:65:12",
													"nodeType": "YulBlock",
													"src": "587:65:12",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "604:1:12",
																		"nodeType": "YulLiteral",
																		"src": "604:1:12",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"name": "ptr",
																		"nativeSrc": "607:3:12",
																		"nodeType": "YulIdentifier",
																		"src": "607:3:12"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "597:6:12",
																	"nodeType": "YulIdentifier",
																	"src": "597:6:12"
																},
																"nativeSrc": "597:14:12",
																"nodeType": "YulFunctionCall",
																"src": "597:14:12"
															},
															"nativeSrc": "597:14:12",
															"nodeType": "YulExpressionStatement",
															"src": "597:14:12"
														},
														{
															"nativeSrc": "620:26:12",
															"nodeType": "YulAssignment",
															"src": "620:26:12",
															"value": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "638:1:12",
																		"nodeType": "YulLiteral",
																		"src": "638:1:12",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "641:4:12",
																		"nodeType": "YulLiteral",
																		"src": "641:4:12",
																		"type": "",
																		"value": "0x20"
																	}
																],
																"functionName": {
																	"name": "keccak256",
																	"nativeSrc": "628:9:12",
																	"nodeType": "YulIdentifier",
																	"src": "628:9:12"
																},
																"nativeSrc": "628:18:12",
																"nodeType": "YulFunctionCall",
																"src": "628:18:12"
															},
															"variableNames": [
																{
																	"name": "data",
																	"nativeSrc": "620:4:12",
																	"nodeType": "YulIdentifier",
																	"src": "620:4:12"
																}
															]
														}
													]
												},
												"name": "array_dataslot_string_storage",
												"nativeSrc": "531:121:12",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "ptr",
														"nativeSrc": "570:3:12",
														"nodeType": "YulTypedName",
														"src": "570:3:12",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "data",
														"nativeSrc": "578:4:12",
														"nodeType": "YulTypedName",
														"src": "578:4:12",
														"type": ""
													}
												],
												"src": "531:121:12"
											},
											{
												"body": {
													"nativeSrc": "738:464:12",
													"nodeType": "YulBlock",
													"src": "738:464:12",
													"statements": [
														{
															"body": {
																"nativeSrc": "771:425:12",
																"nodeType": "YulBlock",
																"src": "771:425:12",
																"statements": [
																	{
																		"nativeSrc": "785:11:12",
																		"nodeType": "YulVariableDeclaration",
																		"src": "785:11:12",
																		"value": {
																			"kind": "number",
																			"nativeSrc": "795:1:12",
																			"nodeType": "YulLiteral",
																			"src": "795:1:12",
																			"type": "",
																			"value": "0"
																		},
																		"variables": [
																			{
																				"name": "_1",
																				"nativeSrc": "789:2:12",
																				"nodeType": "YulTypedName",
																				"src": "789:2:12",
																				"type": ""
																			}
																		]
																	},
																	{
																		"expression": {
																			"arguments": [
																				{
																					"name": "_1",
																					"nativeSrc": "816:2:12",
																					"nodeType": "YulIdentifier",
																					"src": "816:2:12"
																				},
																				{
																					"name": "array",
																					"nativeSrc": "820:5:12",
																					"nodeType": "YulIdentifier",
																					"src": "820:5:12"
																				}
																			],
																			"functionName": {
																				"name": "mstore",
																				"nativeSrc": "809:6:12",
																				"nodeType": "YulIdentifier",
																				"src": "809:6:12"
																			},
																			"nativeSrc": "809:17:12",
																			"nodeType": "YulFunctionCall",
																			"src": "809:17:12"
																		},
																		"nativeSrc": "809:17:12",
																		"nodeType": "YulExpressionStatement",
																		"src": "809:17:12"
																	},
																	{
																		"nativeSrc": "839:31:12",
																		"nodeType": "YulVariableDeclaration",
																		"src": "839:31:12",
																		"value": {
																			"arguments": [
																				{
																					"name": "_1",
																					"nativeSrc": "861:2:12",
																					"nodeType": "YulIdentifier",
																					"src": "861:2:12"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "865:4:12",
																					"nodeType": "YulLiteral",
																					"src": "865:4:12",
																					"type": "",
																					"value": "0x20"
																				}
																			],
																			"functionName": {
																				"name": "keccak256",
																				"nativeSrc": "851:9:12",
																				"nodeType": "YulIdentifier",
																				"src": "851:9:12"
																			},
																			"nativeSrc": "851:19:12",
																			"nodeType": "YulFunctionCall",
																			"src": "851:19:12"
																		},
																		"variables": [
																			{
																				"name": "data",
																				"nativeSrc": "843:4:12",
																				"nodeType": "YulTypedName",
																				"src": "843:4:12",
																				"type": ""
																			}
																		]
																	},
																	{
																		"nativeSrc": "883:57:12",
																		"nodeType": "YulVariableDeclaration",
																		"src": "883:57:12",
																		"value": {
																			"arguments": [
																				{
																					"name": "data",
																					"nativeSrc": "906:4:12",
																					"nodeType": "YulIdentifier",
																					"src": "906:4:12"
																				},
																				{
																					"arguments": [
																						{
																							"kind": "number",
																							"nativeSrc": "916:1:12",
																							"nodeType": "YulLiteral",
																							"src": "916:1:12",
																							"type": "",
																							"value": "5"
																						},
																						{
																							"arguments": [
																								{
																									"name": "startIndex",
																									"nativeSrc": "923:10:12",
																									"nodeType": "YulIdentifier",
																									"src": "923:10:12"
																								},
																								{
																									"kind": "number",
																									"nativeSrc": "935:2:12",
																									"nodeType": "YulLiteral",
																									"src": "935:2:12",
																									"type": "",
																									"value": "31"
																								}
																							],
																							"functionName": {
																								"name": "add",
																								"nativeSrc": "919:3:12",
																								"nodeType": "YulIdentifier",
																								"src": "919:3:12"
																							},
																							"nativeSrc": "919:19:12",
																							"nodeType": "YulFunctionCall",
																							"src": "919:19:12"
																						}
																					],
																					"functionName": {
																						"name": "shr",
																						"nativeSrc": "912:3:12",
																						"nodeType": "YulIdentifier",
																						"src": "912:3:12"
																					},
																					"nativeSrc": "912:27:12",
																					"nodeType": "YulFunctionCall",
																					"src": "912:27:12"
																				}
																			],
																			"functionName": {
																				"name": "add",
																				"nativeSrc": "902:3:12",
																				"nodeType": "YulIdentifier",
																				"src": "902:3:12"
																			},
																			"nativeSrc": "902:38:12",
																			"nodeType": "YulFunctionCall",
																			"src": "902:38:12"
																		},
																		"variables": [
																			{
																				"name": "deleteStart",
																				"nativeSrc": "887:11:12",
																				"nodeType": "YulTypedName",
																				"src": "887:11:12",
																				"type": ""
																			}
																		]
																	},
																	{
																		"body": {
																			"nativeSrc": "977:23:12",
																			"nodeType": "YulBlock",
																			"src": "977:23:12",
																			"statements": [
																				{
																					"nativeSrc": "979:19:12",
																					"nodeType": "YulAssignment",
																					"src": "979:19:12",
																					"value": {
																						"name": "data",
																						"nativeSrc": "994:4:12",
																						"nodeType": "YulIdentifier",
																						"src": "994:4:12"
																					},
																					"variableNames": [
																						{
																							"name": "deleteStart",
																							"nativeSrc": "979:11:12",
																							"nodeType": "YulIdentifier",
																							"src": "979:11:12"
																						}
																					]
																				}
																			]
																		},
																		"condition": {
																			"arguments": [
																				{
																					"name": "startIndex",
																					"nativeSrc": "959:10:12",
																					"nodeType": "YulIdentifier",
																					"src": "959:10:12"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "971:4:12",
																					"nodeType": "YulLiteral",
																					"src": "971:4:12",
																					"type": "",
																					"value": "0x20"
																				}
																			],
																			"functionName": {
																				"name": "lt",
																				"nativeSrc": "956:2:12",
																				"nodeType": "YulIdentifier",
																				"src": "956:2:12"
																			},
																			"nativeSrc": "956:20:12",
																			"nodeType": "YulFunctionCall",
																			"src": "956:20:12"
																		},
																		"nativeSrc": "953:47:12",
																		"nodeType": "YulIf",
																		"src": "953:47:12"
																	},
																	{
																		"nativeSrc": "1013:41:12",
																		"nodeType": "YulVariableDeclaration",
																		"src": "1013:41:12",
																		"value": {
																			"arguments": [
																				{
																					"name": "data",
																					"nativeSrc": "1027:4:12",
																					"nodeType": "YulIdentifier",
																					"src": "1027:4:12"
																				},
																				{
																					"arguments": [
																						{
																							"kind": "number",
																							"nativeSrc": "1037:1:12",
																							"nodeType": "YulLiteral",
																							"src": "1037:1:12",
																							"type": "",
																							"value": "5"
																						},
																						{
																							"arguments": [
																								{
																									"name": "len",
																									"nativeSrc": "1044:3:12",
																									"nodeType": "YulIdentifier",
																									"src": "1044:3:12"
																								},
																								{
																									"kind": "number",
																									"nativeSrc": "1049:2:12",
																									"nodeType": "YulLiteral",
																									"src": "1049:2:12",
																									"type": "",
																									"value": "31"
																								}
																							],
																							"functionName": {
																								"name": "add",
																								"nativeSrc": "1040:3:12",
																								"nodeType": "YulIdentifier",
																								"src": "1040:3:12"
																							},
																							"nativeSrc": "1040:12:12",
																							"nodeType": "YulFunctionCall",
																							"src": "1040:12:12"
																						}
																					],
																					"functionName": {
																						"name": "shr",
																						"nativeSrc": "1033:3:12",
																						"nodeType": "YulIdentifier",
																						"src": "1033:3:12"
																					},
																					"nativeSrc": "1033:20:12",
																					"nodeType": "YulFunctionCall",
																					"src": "1033:20:12"
																				}
																			],
																			"functionName": {
																				"name": "add",
																				"nativeSrc": "1023:3:12",
																				"nodeType": "YulIdentifier",
																				"src": "1023:3:12"
																			},
																			"nativeSrc": "1023:31:12",
																			"nodeType": "YulFunctionCall",
																			"src": "1023:31:12"
																		},
																		"variables": [
																			{
																				"name": "_2",
																				"nativeSrc": "1017:2:12",
																				"nodeType": "YulTypedName",
																				"src": "1017:2:12",
																				"type": ""
																			}
																		]
																	},
																	{
																		"nativeSrc": "1067:24:12",
																		"nodeType": "YulVariableDeclaration",
																		"src": "1067:24:12",
																		"value": {
																			"name": "deleteStart",
																			"nativeSrc": "1080:11:12",
																			"nodeType": "YulIdentifier",
																			"src": "1080:11:12"
																		},
																		"variables": [
																			{
																				"name": "start",
																				"nativeSrc": "1071:5:12",
																				"nodeType": "YulTypedName",
																				"src": "1071:5:12",
																				"type": ""
																			}
																		]
																	},
																	{
																		"body": {
																			"nativeSrc": "1165:21:12",
																			"nodeType": "YulBlock",
																			"src": "1165:21:12",
																			"statements": [
																				{
																					"expression": {
																						"arguments": [
																							{
																								"name": "start",
																								"nativeSrc": "1174:5:12",
																								"nodeType": "YulIdentifier",
																								"src": "1174:5:12"
																							},
																							{
																								"name": "_1",
																								"nativeSrc": "1181:2:12",
																								"nodeType": "YulIdentifier",
																								"src": "1181:2:12"
																							}
																						],
																						"functionName": {
																							"name": "sstore",
																							"nativeSrc": "1167:6:12",
																							"nodeType": "YulIdentifier",
																							"src": "1167:6:12"
																						},
																						"nativeSrc": "1167:17:12",
																						"nodeType": "YulFunctionCall",
																						"src": "1167:17:12"
																					},
																					"nativeSrc": "1167:17:12",
																					"nodeType": "YulExpressionStatement",
																					"src": "1167:17:12"
																				}
																			]
																		},
																		"condition": {
																			"arguments": [
																				{
																					"name": "start",
																					"nativeSrc": "1115:5:12",
																					"nodeType": "YulIdentifier",
																					"src": "1115:5:12"
																				},
																				{
																					"name": "_2",
																					"nativeSrc": "1122:2:12",
																					"nodeType": "YulIdentifier",
																					"src": "1122:2:12"
																				}
																			],
																			"functionName": {
																				"name": "lt",
																				"nativeSrc": "1112:2:12",
																				"nodeType": "YulIdentifier",
																				"src": "1112:2:12"
																			},
																			"nativeSrc": "1112:13:12",
																			"nodeType": "YulFunctionCall",
																			"src": "1112:13:12"
																		},
																		"nativeSrc": "1104:82:12",
																		"nodeType": "YulForLoop",
																		"post": {
																			"nativeSrc": "1126:26:12",
																			"nodeType": "YulBlock",
																			"src": "1126:26:12",
																			"statements": [
																				{
																					"nativeSrc": "1128:22:12",
																					"nodeType": "YulAssignment",
																					"src": "1128:22:12",
																					"value": {
																						"arguments": [
																							{
																								"name": "start",
																								"nativeSrc": "1141:5:12",
																								"nodeType": "YulIdentifier",
																								"src": "1141:5:12"
																							},
																							{
																								"kind": "number",
																								"nativeSrc": "1148:1:12",
																								"nodeType": "YulLiteral",
																								"src": "1148:1:12",
																								"type": "",
																								"value": "1"
																							}
																						],
																						"functionName": {
																							"name": "add",
																							"nativeSrc": "1137:3:12",
																							"nodeType": "YulIdentifier",
																							"src": "1137:3:12"
																						},
																						"nativeSrc": "1137:13:12",
																						"nodeType": "YulFunctionCall",
																						"src": "1137:13:12"
																					},
																					"variableNames": [
																						{
																							"name": "start",
																							"nativeSrc": "1128:5:12",
																							"nodeType": "YulIdentifier",
																							"src": "1128:5:12"
																						}
																					]
																				}
																			]
																		},
																		"pre": {
																			"nativeSrc": "1108:3:12",
																			"nodeType": "YulBlock",
																			"src": "1108:3:12",
																			"statements": []
																		},
																		"src": "1104:82:12"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "len",
																		"nativeSrc": "754:3:12",
																		"nodeType": "YulIdentifier",
																		"src": "754:3:12"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "759:2:12",
																		"nodeType": "YulLiteral",
																		"src": "759:2:12",
																		"type": "",
																		"value": "31"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nativeSrc": "751:2:12",
																	"nodeType": "YulIdentifier",
																	"src": "751:2:12"
																},
																"nativeSrc": "751:11:12",
																"nodeType": "YulFunctionCall",
																"src": "751:11:12"
															},
															"nativeSrc": "748:448:12",
															"nodeType": "YulIf",
															"src": "748:448:12"
														}
													]
												},
												"name": "clean_up_bytearray_end_slots_string_storage",
												"nativeSrc": "657:545:12",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "array",
														"nativeSrc": "710:5:12",
														"nodeType": "YulTypedName",
														"src": "710:5:12",
														"type": ""
													},
													{
														"name": "len",
														"nativeSrc": "717:3:12",
														"nodeType": "YulTypedName",
														"src": "717:3:12",
														"type": ""
													},
													{
														"name": "startIndex",
														"nativeSrc": "722:10:12",
														"nodeType": "YulTypedName",
														"src": "722:10:12",
														"type": ""
													}
												],
												"src": "657:545:12"
											},
											{
												"body": {
													"nativeSrc": "1292:81:12",
													"nodeType": "YulBlock",
													"src": "1292:81:12",
													"statements": [
														{
															"nativeSrc": "1302:65:12",
															"nodeType": "YulAssignment",
															"src": "1302:65:12",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "data",
																				"nativeSrc": "1317:4:12",
																				"nodeType": "YulIdentifier",
																				"src": "1317:4:12"
																			},
																			{
																				"arguments": [
																					{
																						"arguments": [
																							{
																								"arguments": [
																									{
																										"kind": "number",
																										"nativeSrc": "1335:1:12",
																										"nodeType": "YulLiteral",
																										"src": "1335:1:12",
																										"type": "",
																										"value": "3"
																									},
																									{
																										"name": "len",
																										"nativeSrc": "1338:3:12",
																										"nodeType": "YulIdentifier",
																										"src": "1338:3:12"
																									}
																								],
																								"functionName": {
																									"name": "shl",
																									"nativeSrc": "1331:3:12",
																									"nodeType": "YulIdentifier",
																									"src": "1331:3:12"
																								},
																								"nativeSrc": "1331:11:12",
																								"nodeType": "YulFunctionCall",
																								"src": "1331:11:12"
																							},
																							{
																								"arguments": [
																									{
																										"kind": "number",
																										"nativeSrc": "1348:1:12",
																										"nodeType": "YulLiteral",
																										"src": "1348:1:12",
																										"type": "",
																										"value": "0"
																									}
																								],
																								"functionName": {
																									"name": "not",
																									"nativeSrc": "1344:3:12",
																									"nodeType": "YulIdentifier",
																									"src": "1344:3:12"
																								},
																								"nativeSrc": "1344:6:12",
																								"nodeType": "YulFunctionCall",
																								"src": "1344:6:12"
																							}
																						],
																						"functionName": {
																							"name": "shr",
																							"nativeSrc": "1327:3:12",
																							"nodeType": "YulIdentifier",
																							"src": "1327:3:12"
																						},
																						"nativeSrc": "1327:24:12",
																						"nodeType": "YulFunctionCall",
																						"src": "1327:24:12"
																					}
																				],
																				"functionName": {
																					"name": "not",
																					"nativeSrc": "1323:3:12",
																					"nodeType": "YulIdentifier",
																					"src": "1323:3:12"
																				},
																				"nativeSrc": "1323:29:12",
																				"nodeType": "YulFunctionCall",
																				"src": "1323:29:12"
																			}
																		],
																		"functionName": {
																			"name": "and",
																			"nativeSrc": "1313:3:12",
																			"nodeType": "YulIdentifier",
																			"src": "1313:3:12"
																		},
																		"nativeSrc": "1313:40:12",
																		"nodeType": "YulFunctionCall",
																		"src": "1313:40:12"
																	},
																	{
																		"arguments": [
																			{
																				"kind": "number",
																				"nativeSrc": "1359:1:12",
																				"nodeType": "YulLiteral",
																				"src": "1359:1:12",
																				"type": "",
																				"value": "1"
																			},
																			{
																				"name": "len",
																				"nativeSrc": "1362:3:12",
																				"nodeType": "YulIdentifier",
																				"src": "1362:3:12"
																			}
																		],
																		"functionName": {
																			"name": "shl",
																			"nativeSrc": "1355:3:12",
																			"nodeType": "YulIdentifier",
																			"src": "1355:3:12"
																		},
																		"nativeSrc": "1355:11:12",
																		"nodeType": "YulFunctionCall",
																		"src": "1355:11:12"
																	}
																],
																"functionName": {
																	"name": "or",
																	"nativeSrc": "1310:2:12",
																	"nodeType": "YulIdentifier",
																	"src": "1310:2:12"
																},
																"nativeSrc": "1310:57:12",
																"nodeType": "YulFunctionCall",
																"src": "1310:57:12"
															},
															"variableNames": [
																{
																	"name": "used",
																	"nativeSrc": "1302:4:12",
																	"nodeType": "YulIdentifier",
																	"src": "1302:4:12"
																}
															]
														}
													]
												},
												"name": "extract_used_part_and_set_length_of_short_byte_array",
												"nativeSrc": "1207:166:12",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "data",
														"nativeSrc": "1269:4:12",
														"nodeType": "YulTypedName",
														"src": "1269:4:12",
														"type": ""
													},
													{
														"name": "len",
														"nativeSrc": "1275:3:12",
														"nodeType": "YulTypedName",
														"src": "1275:3:12",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "used",
														"nativeSrc": "1283:4:12",
														"nodeType": "YulTypedName",
														"src": "1283:4:12",
														"type": ""
													}
												],
												"src": "1207:166:12"
											},
											{
												"body": {
													"nativeSrc": "1474:1256:12",
													"nodeType": "YulBlock",
													"src": "1474:1256:12",
													"statements": [
														{
															"nativeSrc": "1484:24:12",
															"nodeType": "YulVariableDeclaration",
															"src": "1484:24:12",
															"value": {
																"arguments": [
																	{
																		"name": "src",
																		"nativeSrc": "1504:3:12",
																		"nodeType": "YulIdentifier",
																		"src": "1504:3:12"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nativeSrc": "1498:5:12",
																	"nodeType": "YulIdentifier",
																	"src": "1498:5:12"
																},
																"nativeSrc": "1498:10:12",
																"nodeType": "YulFunctionCall",
																"src": "1498:10:12"
															},
															"variables": [
																{
																	"name": "newLen",
																	"nativeSrc": "1488:6:12",
																	"nodeType": "YulTypedName",
																	"src": "1488:6:12",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nativeSrc": "1551:22:12",
																"nodeType": "YulBlock",
																"src": "1551:22:12",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "panic_error_0x41",
																				"nativeSrc": "1553:16:12",
																				"nodeType": "YulIdentifier",
																				"src": "1553:16:12"
																			},
																			"nativeSrc": "1553:18:12",
																			"nodeType": "YulFunctionCall",
																			"src": "1553:18:12"
																		},
																		"nativeSrc": "1553:18:12",
																		"nodeType": "YulExpressionStatement",
																		"src": "1553:18:12"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "newLen",
																		"nativeSrc": "1523:6:12",
																		"nodeType": "YulIdentifier",
																		"src": "1523:6:12"
																	},
																	{
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"kind": "number",
																						"nativeSrc": "1539:2:12",
																						"nodeType": "YulLiteral",
																						"src": "1539:2:12",
																						"type": "",
																						"value": "64"
																					},
																					{
																						"kind": "number",
																						"nativeSrc": "1543:1:12",
																						"nodeType": "YulLiteral",
																						"src": "1543:1:12",
																						"type": "",
																						"value": "1"
																					}
																				],
																				"functionName": {
																					"name": "shl",
																					"nativeSrc": "1535:3:12",
																					"nodeType": "YulIdentifier",
																					"src": "1535:3:12"
																				},
																				"nativeSrc": "1535:10:12",
																				"nodeType": "YulFunctionCall",
																				"src": "1535:10:12"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "1547:1:12",
																				"nodeType": "YulLiteral",
																				"src": "1547:1:12",
																				"type": "",
																				"value": "1"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "1531:3:12",
																			"nodeType": "YulIdentifier",
																			"src": "1531:3:12"
																		},
																		"nativeSrc": "1531:18:12",
																		"nodeType": "YulFunctionCall",
																		"src": "1531:18:12"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nativeSrc": "1520:2:12",
																	"nodeType": "YulIdentifier",
																	"src": "1520:2:12"
																},
																"nativeSrc": "1520:30:12",
																"nodeType": "YulFunctionCall",
																"src": "1520:30:12"
															},
															"nativeSrc": "1517:56:12",
															"nodeType": "YulIf",
															"src": "1517:56:12"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "slot",
																		"nativeSrc": "1626:4:12",
																		"nodeType": "YulIdentifier",
																		"src": "1626:4:12"
																	},
																	{
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "slot",
																						"nativeSrc": "1664:4:12",
																						"nodeType": "YulIdentifier",
																						"src": "1664:4:12"
																					}
																				],
																				"functionName": {
																					"name": "sload",
																					"nativeSrc": "1658:5:12",
																					"nodeType": "YulIdentifier",
																					"src": "1658:5:12"
																				},
																				"nativeSrc": "1658:11:12",
																				"nodeType": "YulFunctionCall",
																				"src": "1658:11:12"
																			}
																		],
																		"functionName": {
																			"name": "extract_byte_array_length",
																			"nativeSrc": "1632:25:12",
																			"nodeType": "YulIdentifier",
																			"src": "1632:25:12"
																		},
																		"nativeSrc": "1632:38:12",
																		"nodeType": "YulFunctionCall",
																		"src": "1632:38:12"
																	},
																	{
																		"name": "newLen",
																		"nativeSrc": "1672:6:12",
																		"nodeType": "YulIdentifier",
																		"src": "1672:6:12"
																	}
																],
																"functionName": {
																	"name": "clean_up_bytearray_end_slots_string_storage",
																	"nativeSrc": "1582:43:12",
																	"nodeType": "YulIdentifier",
																	"src": "1582:43:12"
																},
																"nativeSrc": "1582:97:12",
																"nodeType": "YulFunctionCall",
																"src": "1582:97:12"
															},
															"nativeSrc": "1582:97:12",
															"nodeType": "YulExpressionStatement",
															"src": "1582:97:12"
														},
														{
															"nativeSrc": "1688:18:12",
															"nodeType": "YulVariableDeclaration",
															"src": "1688:18:12",
															"value": {
																"kind": "number",
																"nativeSrc": "1705:1:12",
																"nodeType": "YulLiteral",
																"src": "1705:1:12",
																"type": "",
																"value": "0"
															},
															"variables": [
																{
																	"name": "srcOffset",
																	"nativeSrc": "1692:9:12",
																	"nodeType": "YulTypedName",
																	"src": "1692:9:12",
																	"type": ""
																}
															]
														},
														{
															"nativeSrc": "1715:23:12",
															"nodeType": "YulVariableDeclaration",
															"src": "1715:23:12",
															"value": {
																"kind": "number",
																"nativeSrc": "1734:4:12",
																"nodeType": "YulLiteral",
																"src": "1734:4:12",
																"type": "",
																"value": "0x20"
															},
															"variables": [
																{
																	"name": "srcOffset_1",
																	"nativeSrc": "1719:11:12",
																	"nodeType": "YulTypedName",
																	"src": "1719:11:12",
																	"type": ""
																}
															]
														},
														{
															"nativeSrc": "1747:24:12",
															"nodeType": "YulAssignment",
															"src": "1747:24:12",
															"value": {
																"name": "srcOffset_1",
																"nativeSrc": "1760:11:12",
																"nodeType": "YulIdentifier",
																"src": "1760:11:12"
															},
															"variableNames": [
																{
																	"name": "srcOffset",
																	"nativeSrc": "1747:9:12",
																	"nodeType": "YulIdentifier",
																	"src": "1747:9:12"
																}
															]
														},
														{
															"cases": [
																{
																	"body": {
																		"nativeSrc": "1817:656:12",
																		"nodeType": "YulBlock",
																		"src": "1817:656:12",
																		"statements": [
																			{
																				"nativeSrc": "1831:35:12",
																				"nodeType": "YulVariableDeclaration",
																				"src": "1831:35:12",
																				"value": {
																					"arguments": [
																						{
																							"name": "newLen",
																							"nativeSrc": "1850:6:12",
																							"nodeType": "YulIdentifier",
																							"src": "1850:6:12"
																						},
																						{
																							"arguments": [
																								{
																									"kind": "number",
																									"nativeSrc": "1862:2:12",
																									"nodeType": "YulLiteral",
																									"src": "1862:2:12",
																									"type": "",
																									"value": "31"
																								}
																							],
																							"functionName": {
																								"name": "not",
																								"nativeSrc": "1858:3:12",
																								"nodeType": "YulIdentifier",
																								"src": "1858:3:12"
																							},
																							"nativeSrc": "1858:7:12",
																							"nodeType": "YulFunctionCall",
																							"src": "1858:7:12"
																						}
																					],
																					"functionName": {
																						"name": "and",
																						"nativeSrc": "1846:3:12",
																						"nodeType": "YulIdentifier",
																						"src": "1846:3:12"
																					},
																					"nativeSrc": "1846:20:12",
																					"nodeType": "YulFunctionCall",
																					"src": "1846:20:12"
																				},
																				"variables": [
																					{
																						"name": "loopEnd",
																						"nativeSrc": "1835:7:12",
																						"nodeType": "YulTypedName",
																						"src": "1835:7:12",
																						"type": ""
																					}
																				]
																			},
																			{
																				"nativeSrc": "1879:49:12",
																				"nodeType": "YulVariableDeclaration",
																				"src": "1879:49:12",
																				"value": {
																					"arguments": [
																						{
																							"name": "slot",
																							"nativeSrc": "1923:4:12",
																							"nodeType": "YulIdentifier",
																							"src": "1923:4:12"
																						}
																					],
																					"functionName": {
																						"name": "array_dataslot_string_storage",
																						"nativeSrc": "1893:29:12",
																						"nodeType": "YulIdentifier",
																						"src": "1893:29:12"
																					},
																					"nativeSrc": "1893:35:12",
																					"nodeType": "YulFunctionCall",
																					"src": "1893:35:12"
																				},
																				"variables": [
																					{
																						"name": "dstPtr",
																						"nativeSrc": "1883:6:12",
																						"nodeType": "YulTypedName",
																						"src": "1883:6:12",
																						"type": ""
																					}
																				]
																			},
																			{
																				"nativeSrc": "1941:10:12",
																				"nodeType": "YulVariableDeclaration",
																				"src": "1941:10:12",
																				"value": {
																					"kind": "number",
																					"nativeSrc": "1950:1:12",
																					"nodeType": "YulLiteral",
																					"src": "1950:1:12",
																					"type": "",
																					"value": "0"
																				},
																				"variables": [
																					{
																						"name": "i",
																						"nativeSrc": "1945:1:12",
																						"nodeType": "YulTypedName",
																						"src": "1945:1:12",
																						"type": ""
																					}
																				]
																			},
																			{
																				"body": {
																					"nativeSrc": "2028:172:12",
																					"nodeType": "YulBlock",
																					"src": "2028:172:12",
																					"statements": [
																						{
																							"expression": {
																								"arguments": [
																									{
																										"name": "dstPtr",
																										"nativeSrc": "2053:6:12",
																										"nodeType": "YulIdentifier",
																										"src": "2053:6:12"
																									},
																									{
																										"arguments": [
																											{
																												"arguments": [
																													{
																														"name": "src",
																														"nativeSrc": "2071:3:12",
																														"nodeType": "YulIdentifier",
																														"src": "2071:3:12"
																													},
																													{
																														"name": "srcOffset",
																														"nativeSrc": "2076:9:12",
																														"nodeType": "YulIdentifier",
																														"src": "2076:9:12"
																													}
																												],
																												"functionName": {
																													"name": "add",
																													"nativeSrc": "2067:3:12",
																													"nodeType": "YulIdentifier",
																													"src": "2067:3:12"
																												},
																												"nativeSrc": "2067:19:12",
																												"nodeType": "YulFunctionCall",
																												"src": "2067:19:12"
																											}
																										],
																										"functionName": {
																											"name": "mload",
																											"nativeSrc": "2061:5:12",
																											"nodeType": "YulIdentifier",
																											"src": "2061:5:12"
																										},
																										"nativeSrc": "2061:26:12",
																										"nodeType": "YulFunctionCall",
																										"src": "2061:26:12"
																									}
																								],
																								"functionName": {
																									"name": "sstore",
																									"nativeSrc": "2046:6:12",
																									"nodeType": "YulIdentifier",
																									"src": "2046:6:12"
																								},
																								"nativeSrc": "2046:42:12",
																								"nodeType": "YulFunctionCall",
																								"src": "2046:42:12"
																							},
																							"nativeSrc": "2046:42:12",
																							"nodeType": "YulExpressionStatement",
																							"src": "2046:42:12"
																						},
																						{
																							"nativeSrc": "2105:24:12",
																							"nodeType": "YulAssignment",
																							"src": "2105:24:12",
																							"value": {
																								"arguments": [
																									{
																										"name": "dstPtr",
																										"nativeSrc": "2119:6:12",
																										"nodeType": "YulIdentifier",
																										"src": "2119:6:12"
																									},
																									{
																										"kind": "number",
																										"nativeSrc": "2127:1:12",
																										"nodeType": "YulLiteral",
																										"src": "2127:1:12",
																										"type": "",
																										"value": "1"
																									}
																								],
																								"functionName": {
																									"name": "add",
																									"nativeSrc": "2115:3:12",
																									"nodeType": "YulIdentifier",
																									"src": "2115:3:12"
																								},
																								"nativeSrc": "2115:14:12",
																								"nodeType": "YulFunctionCall",
																								"src": "2115:14:12"
																							},
																							"variableNames": [
																								{
																									"name": "dstPtr",
																									"nativeSrc": "2105:6:12",
																									"nodeType": "YulIdentifier",
																									"src": "2105:6:12"
																								}
																							]
																						},
																						{
																							"nativeSrc": "2146:40:12",
																							"nodeType": "YulAssignment",
																							"src": "2146:40:12",
																							"value": {
																								"arguments": [
																									{
																										"name": "srcOffset",
																										"nativeSrc": "2163:9:12",
																										"nodeType": "YulIdentifier",
																										"src": "2163:9:12"
																									},
																									{
																										"name": "srcOffset_1",
																										"nativeSrc": "2174:11:12",
																										"nodeType": "YulIdentifier",
																										"src": "2174:11:12"
																									}
																								],
																								"functionName": {
																									"name": "add",
																									"nativeSrc": "2159:3:12",
																									"nodeType": "YulIdentifier",
																									"src": "2159:3:12"
																								},
																								"nativeSrc": "2159:27:12",
																								"nodeType": "YulFunctionCall",
																								"src": "2159:27:12"
																							},
																							"variableNames": [
																								{
																									"name": "srcOffset",
																									"nativeSrc": "2146:9:12",
																									"nodeType": "YulIdentifier",
																									"src": "2146:9:12"
																								}
																							]
																						}
																					]
																				},
																				"condition": {
																					"arguments": [
																						{
																							"name": "i",
																							"nativeSrc": "1975:1:12",
																							"nodeType": "YulIdentifier",
																							"src": "1975:1:12"
																						},
																						{
																							"name": "loopEnd",
																							"nativeSrc": "1978:7:12",
																							"nodeType": "YulIdentifier",
																							"src": "1978:7:12"
																						}
																					],
																					"functionName": {
																						"name": "lt",
																						"nativeSrc": "1972:2:12",
																						"nodeType": "YulIdentifier",
																						"src": "1972:2:12"
																					},
																					"nativeSrc": "1972:14:12",
																					"nodeType": "YulFunctionCall",
																					"src": "1972:14:12"
																				},
																				"nativeSrc": "1964:236:12",
																				"nodeType": "YulForLoop",
																				"post": {
																					"nativeSrc": "1987:28:12",
																					"nodeType": "YulBlock",
																					"src": "1987:28:12",
																					"statements": [
																						{
																							"nativeSrc": "1989:24:12",
																							"nodeType": "YulAssignment",
																							"src": "1989:24:12",
																							"value": {
																								"arguments": [
																									{
																										"name": "i",
																										"nativeSrc": "1998:1:12",
																										"nodeType": "YulIdentifier",
																										"src": "1998:1:12"
																									},
																									{
																										"name": "srcOffset_1",
																										"nativeSrc": "2001:11:12",
																										"nodeType": "YulIdentifier",
																										"src": "2001:11:12"
																									}
																								],
																								"functionName": {
																									"name": "add",
																									"nativeSrc": "1994:3:12",
																									"nodeType": "YulIdentifier",
																									"src": "1994:3:12"
																								},
																								"nativeSrc": "1994:19:12",
																								"nodeType": "YulFunctionCall",
																								"src": "1994:19:12"
																							},
																							"variableNames": [
																								{
																									"name": "i",
																									"nativeSrc": "1989:1:12",
																									"nodeType": "YulIdentifier",
																									"src": "1989:1:12"
																								}
																							]
																						}
																					]
																				},
																				"pre": {
																					"nativeSrc": "1968:3:12",
																					"nodeType": "YulBlock",
																					"src": "1968:3:12",
																					"statements": []
																				},
																				"src": "1964:236:12"
																			},
																			{
																				"body": {
																					"nativeSrc": "2248:166:12",
																					"nodeType": "YulBlock",
																					"src": "2248:166:12",
																					"statements": [
																						{
																							"nativeSrc": "2266:43:12",
																							"nodeType": "YulVariableDeclaration",
																							"src": "2266:43:12",
																							"value": {
																								"arguments": [
																									{
																										"arguments": [
																											{
																												"name": "src",
																												"nativeSrc": "2293:3:12",
																												"nodeType": "YulIdentifier",
																												"src": "2293:3:12"
																											},
																											{
																												"name": "srcOffset",
																												"nativeSrc": "2298:9:12",
																												"nodeType": "YulIdentifier",
																												"src": "2298:9:12"
																											}
																										],
																										"functionName": {
																											"name": "add",
																											"nativeSrc": "2289:3:12",
																											"nodeType": "YulIdentifier",
																											"src": "2289:3:12"
																										},
																										"nativeSrc": "2289:19:12",
																										"nodeType": "YulFunctionCall",
																										"src": "2289:19:12"
																									}
																								],
																								"functionName": {
																									"name": "mload",
																									"nativeSrc": "2283:5:12",
																									"nodeType": "YulIdentifier",
																									"src": "2283:5:12"
																								},
																								"nativeSrc": "2283:26:12",
																								"nodeType": "YulFunctionCall",
																								"src": "2283:26:12"
																							},
																							"variables": [
																								{
																									"name": "lastValue",
																									"nativeSrc": "2270:9:12",
																									"nodeType": "YulTypedName",
																									"src": "2270:9:12",
																									"type": ""
																								}
																							]
																						},
																						{
																							"expression": {
																								"arguments": [
																									{
																										"name": "dstPtr",
																										"nativeSrc": "2333:6:12",
																										"nodeType": "YulIdentifier",
																										"src": "2333:6:12"
																									},
																									{
																										"arguments": [
																											{
																												"name": "lastValue",
																												"nativeSrc": "2345:9:12",
																												"nodeType": "YulIdentifier",
																												"src": "2345:9:12"
																											},
																											{
																												"arguments": [
																													{
																														"arguments": [
																															{
																																"arguments": [
																																	{
																																		"arguments": [
																																			{
																																				"kind": "number",
																																				"nativeSrc": "2372:1:12",
																																				"nodeType": "YulLiteral",
																																				"src": "2372:1:12",
																																				"type": "",
																																				"value": "3"
																																			},
																																			{
																																				"name": "newLen",
																																				"nativeSrc": "2375:6:12",
																																				"nodeType": "YulIdentifier",
																																				"src": "2375:6:12"
																																			}
																																		],
																																		"functionName": {
																																			"name": "shl",
																																			"nativeSrc": "2368:3:12",
																																			"nodeType": "YulIdentifier",
																																			"src": "2368:3:12"
																																		},
																																		"nativeSrc": "2368:14:12",
																																		"nodeType": "YulFunctionCall",
																																		"src": "2368:14:12"
																																	},
																																	{
																																		"kind": "number",
																																		"nativeSrc": "2384:3:12",
																																		"nodeType": "YulLiteral",
																																		"src": "2384:3:12",
																																		"type": "",
																																		"value": "248"
																																	}
																																],
																																"functionName": {
																																	"name": "and",
																																	"nativeSrc": "2364:3:12",
																																	"nodeType": "YulIdentifier",
																																	"src": "2364:3:12"
																																},
																																"nativeSrc": "2364:24:12",
																																"nodeType": "YulFunctionCall",
																																"src": "2364:24:12"
																															},
																															{
																																"arguments": [
																																	{
																																		"kind": "number",
																																		"nativeSrc": "2394:1:12",
																																		"nodeType": "YulLiteral",
																																		"src": "2394:1:12",
																																		"type": "",
																																		"value": "0"
																																	}
																																],
																																"functionName": {
																																	"name": "not",
																																	"nativeSrc": "2390:3:12",
																																	"nodeType": "YulIdentifier",
																																	"src": "2390:3:12"
																																},
																																"nativeSrc": "2390:6:12",
																																"nodeType": "YulFunctionCall",
																																"src": "2390:6:12"
																															}
																														],
																														"functionName": {
																															"name": "shr",
																															"nativeSrc": "2360:3:12",
																															"nodeType": "YulIdentifier",
																															"src": "2360:3:12"
																														},
																														"nativeSrc": "2360:37:12",
																														"nodeType": "YulFunctionCall",
																														"src": "2360:37:12"
																													}
																												],
																												"functionName": {
																													"name": "not",
																													"nativeSrc": "2356:3:12",
																													"nodeType": "YulIdentifier",
																													"src": "2356:3:12"
																												},
																												"nativeSrc": "2356:42:12",
																												"nodeType": "YulFunctionCall",
																												"src": "2356:42:12"
																											}
																										],
																										"functionName": {
																											"name": "and",
																											"nativeSrc": "2341:3:12",
																											"nodeType": "YulIdentifier",
																											"src": "2341:3:12"
																										},
																										"nativeSrc": "2341:58:12",
																										"nodeType": "YulFunctionCall",
																										"src": "2341:58:12"
																									}
																								],
																								"functionName": {
																									"name": "sstore",
																									"nativeSrc": "2326:6:12",
																									"nodeType": "YulIdentifier",
																									"src": "2326:6:12"
																								},
																								"nativeSrc": "2326:74:12",
																								"nodeType": "YulFunctionCall",
																								"src": "2326:74:12"
																							},
																							"nativeSrc": "2326:74:12",
																							"nodeType": "YulExpressionStatement",
																							"src": "2326:74:12"
																						}
																					]
																				},
																				"condition": {
																					"arguments": [
																						{
																							"name": "loopEnd",
																							"nativeSrc": "2219:7:12",
																							"nodeType": "YulIdentifier",
																							"src": "2219:7:12"
																						},
																						{
																							"name": "newLen",
																							"nativeSrc": "2228:6:12",
																							"nodeType": "YulIdentifier",
																							"src": "2228:6:12"
																						}
																					],
																					"functionName": {
																						"name": "lt",
																						"nativeSrc": "2216:2:12",
																						"nodeType": "YulIdentifier",
																						"src": "2216:2:12"
																					},
																					"nativeSrc": "2216:19:12",
																					"nodeType": "YulFunctionCall",
																					"src": "2216:19:12"
																				},
																				"nativeSrc": "2213:201:12",
																				"nodeType": "YulIf",
																				"src": "2213:201:12"
																			},
																			{
																				"expression": {
																					"arguments": [
																						{
																							"name": "slot",
																							"nativeSrc": "2434:4:12",
																							"nodeType": "YulIdentifier",
																							"src": "2434:4:12"
																						},
																						{
																							"arguments": [
																								{
																									"arguments": [
																										{
																											"kind": "number",
																											"nativeSrc": "2448:1:12",
																											"nodeType": "YulLiteral",
																											"src": "2448:1:12",
																											"type": "",
																											"value": "1"
																										},
																										{
																											"name": "newLen",
																											"nativeSrc": "2451:6:12",
																											"nodeType": "YulIdentifier",
																											"src": "2451:6:12"
																										}
																									],
																									"functionName": {
																										"name": "shl",
																										"nativeSrc": "2444:3:12",
																										"nodeType": "YulIdentifier",
																										"src": "2444:3:12"
																									},
																									"nativeSrc": "2444:14:12",
																									"nodeType": "YulFunctionCall",
																									"src": "2444:14:12"
																								},
																								{
																									"kind": "number",
																									"nativeSrc": "2460:1:12",
																									"nodeType": "YulLiteral",
																									"src": "2460:1:12",
																									"type": "",
																									"value": "1"
																								}
																							],
																							"functionName": {
																								"name": "add",
																								"nativeSrc": "2440:3:12",
																								"nodeType": "YulIdentifier",
																								"src": "2440:3:12"
																							},
																							"nativeSrc": "2440:22:12",
																							"nodeType": "YulFunctionCall",
																							"src": "2440:22:12"
																						}
																					],
																					"functionName": {
																						"name": "sstore",
																						"nativeSrc": "2427:6:12",
																						"nodeType": "YulIdentifier",
																						"src": "2427:6:12"
																					},
																					"nativeSrc": "2427:36:12",
																					"nodeType": "YulFunctionCall",
																					"src": "2427:36:12"
																				},
																				"nativeSrc": "2427:36:12",
																				"nodeType": "YulExpressionStatement",
																				"src": "2427:36:12"
																			}
																		]
																	},
																	"nativeSrc": "1810:663:12",
																	"nodeType": "YulCase",
																	"src": "1810:663:12",
																	"value": {
																		"kind": "number",
																		"nativeSrc": "1815:1:12",
																		"nodeType": "YulLiteral",
																		"src": "1815:1:12",
																		"type": "",
																		"value": "1"
																	}
																},
																{
																	"body": {
																		"nativeSrc": "2490:234:12",
																		"nodeType": "YulBlock",
																		"src": "2490:234:12",
																		"statements": [
																			{
																				"nativeSrc": "2504:14:12",
																				"nodeType": "YulVariableDeclaration",
																				"src": "2504:14:12",
																				"value": {
																					"kind": "number",
																					"nativeSrc": "2517:1:12",
																					"nodeType": "YulLiteral",
																					"src": "2517:1:12",
																					"type": "",
																					"value": "0"
																				},
																				"variables": [
																					{
																						"name": "value",
																						"nativeSrc": "2508:5:12",
																						"nodeType": "YulTypedName",
																						"src": "2508:5:12",
																						"type": ""
																					}
																				]
																			},
																			{
																				"body": {
																					"nativeSrc": "2553:67:12",
																					"nodeType": "YulBlock",
																					"src": "2553:67:12",
																					"statements": [
																						{
																							"nativeSrc": "2571:35:12",
																							"nodeType": "YulAssignment",
																							"src": "2571:35:12",
																							"value": {
																								"arguments": [
																									{
																										"arguments": [
																											{
																												"name": "src",
																												"nativeSrc": "2590:3:12",
																												"nodeType": "YulIdentifier",
																												"src": "2590:3:12"
																											},
																											{
																												"name": "srcOffset",
																												"nativeSrc": "2595:9:12",
																												"nodeType": "YulIdentifier",
																												"src": "2595:9:12"
																											}
																										],
																										"functionName": {
																											"name": "add",
																											"nativeSrc": "2586:3:12",
																											"nodeType": "YulIdentifier",
																											"src": "2586:3:12"
																										},
																										"nativeSrc": "2586:19:12",
																										"nodeType": "YulFunctionCall",
																										"src": "2586:19:12"
																									}
																								],
																								"functionName": {
																									"name": "mload",
																									"nativeSrc": "2580:5:12",
																									"nodeType": "YulIdentifier",
																									"src": "2580:5:12"
																								},
																								"nativeSrc": "2580:26:12",
																								"nodeType": "YulFunctionCall",
																								"src": "2580:26:12"
																							},
																							"variableNames": [
																								{
																									"name": "value",
																									"nativeSrc": "2571:5:12",
																									"nodeType": "YulIdentifier",
																									"src": "2571:5:12"
																								}
																							]
																						}
																					]
																				},
																				"condition": {
																					"name": "newLen",
																					"nativeSrc": "2534:6:12",
																					"nodeType": "YulIdentifier",
																					"src": "2534:6:12"
																				},
																				"nativeSrc": "2531:89:12",
																				"nodeType": "YulIf",
																				"src": "2531:89:12"
																			},
																			{
																				"expression": {
																					"arguments": [
																						{
																							"name": "slot",
																							"nativeSrc": "2640:4:12",
																							"nodeType": "YulIdentifier",
																							"src": "2640:4:12"
																						},
																						{
																							"arguments": [
																								{
																									"name": "value",
																									"nativeSrc": "2699:5:12",
																									"nodeType": "YulIdentifier",
																									"src": "2699:5:12"
																								},
																								{
																									"name": "newLen",
																									"nativeSrc": "2706:6:12",
																									"nodeType": "YulIdentifier",
																									"src": "2706:6:12"
																								}
																							],
																							"functionName": {
																								"name": "extract_used_part_and_set_length_of_short_byte_array",
																								"nativeSrc": "2646:52:12",
																								"nodeType": "YulIdentifier",
																								"src": "2646:52:12"
																							},
																							"nativeSrc": "2646:67:12",
																							"nodeType": "YulFunctionCall",
																							"src": "2646:67:12"
																						}
																					],
																					"functionName": {
																						"name": "sstore",
																						"nativeSrc": "2633:6:12",
																						"nodeType": "YulIdentifier",
																						"src": "2633:6:12"
																					},
																					"nativeSrc": "2633:81:12",
																					"nodeType": "YulFunctionCall",
																					"src": "2633:81:12"
																				},
																				"nativeSrc": "2633:81:12",
																				"nodeType": "YulExpressionStatement",
																				"src": "2633:81:12"
																			}
																		]
																	},
																	"nativeSrc": "2482:242:12",
																	"nodeType": "YulCase",
																	"src": "2482:242:12",
																	"value": "default"
																}
															],
															"expression": {
																"arguments": [
																	{
																		"name": "newLen",
																		"nativeSrc": "1790:6:12",
																		"nodeType": "YulIdentifier",
																		"src": "1790:6:12"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "1798:2:12",
																		"nodeType": "YulLiteral",
																		"src": "1798:2:12",
																		"type": "",
																		"value": "31"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nativeSrc": "1787:2:12",
																	"nodeType": "YulIdentifier",
																	"src": "1787:2:12"
																},
																"nativeSrc": "1787:14:12",
																"nodeType": "YulFunctionCall",
																"src": "1787:14:12"
															},
															"nativeSrc": "1780:944:12",
															"nodeType": "YulSwitch",
															"src": "1780:944:12"
														}
													]
												},
												"name": "copy_byte_array_to_storage_from_t_string_memory_ptr_to_t_string_storage",
												"nativeSrc": "1378:1352:12",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "slot",
														"nativeSrc": "1459:4:12",
														"nodeType": "YulTypedName",
														"src": "1459:4:12",
														"type": ""
													},
													{
														"name": "src",
														"nativeSrc": "1465:3:12",
														"nodeType": "YulTypedName",
														"src": "1465:3:12",
														"type": ""
													}
												],
												"src": "1378:1352:12"
											}
										]
									},
									"contents": "{\n    { }\n    function panic_error_0x41()\n    {\n        mstore(0, shl(224, 0x4e487b71))\n        mstore(4, 0x41)\n        revert(0, 0x24)\n    }\n    function extract_byte_array_length(data) -> length\n    {\n        length := shr(1, data)\n        let outOfPlaceEncoding := and(data, 1)\n        if iszero(outOfPlaceEncoding) { length := and(length, 0x7f) }\n        if eq(outOfPlaceEncoding, lt(length, 32))\n        {\n            mstore(0, shl(224, 0x4e487b71))\n            mstore(4, 0x22)\n            revert(0, 0x24)\n        }\n    }\n    function array_dataslot_string_storage(ptr) -> data\n    {\n        mstore(0, ptr)\n        data := keccak256(0, 0x20)\n    }\n    function clean_up_bytearray_end_slots_string_storage(array, len, startIndex)\n    {\n        if gt(len, 31)\n        {\n            let _1 := 0\n            mstore(_1, array)\n            let data := keccak256(_1, 0x20)\n            let deleteStart := add(data, shr(5, add(startIndex, 31)))\n            if lt(startIndex, 0x20) { deleteStart := data }\n            let _2 := add(data, shr(5, add(len, 31)))\n            let start := deleteStart\n            for { } lt(start, _2) { start := add(start, 1) }\n            { sstore(start, _1) }\n        }\n    }\n    function extract_used_part_and_set_length_of_short_byte_array(data, len) -> used\n    {\n        used := or(and(data, not(shr(shl(3, len), not(0)))), shl(1, len))\n    }\n    function copy_byte_array_to_storage_from_t_string_memory_ptr_to_t_string_storage(slot, src)\n    {\n        let newLen := mload(src)\n        if gt(newLen, sub(shl(64, 1), 1)) { panic_error_0x41() }\n        clean_up_bytearray_end_slots_string_storage(slot, extract_byte_array_length(sload(slot)), newLen)\n        let srcOffset := 0\n        let srcOffset_1 := 0x20\n        srcOffset := srcOffset_1\n        switch gt(newLen, 31)\n        case 1 {\n            let loopEnd := and(newLen, not(31))\n            let dstPtr := array_dataslot_string_storage(slot)\n            let i := 0\n            for { } lt(i, loopEnd) { i := add(i, srcOffset_1) }\n            {\n                sstore(dstPtr, mload(add(src, srcOffset)))\n                dstPtr := add(dstPtr, 1)\n                srcOffset := add(srcOffset, srcOffset_1)\n            }\n            if lt(loopEnd, newLen)\n            {\n                let lastValue := mload(add(src, srcOffset))\n                sstore(dstPtr, and(lastValue, not(shr(and(shl(3, newLen), 248), not(0)))))\n            }\n            sstore(slot, add(shl(1, newLen), 1))\n        }\n        default {\n            let value := 0\n            if newLen\n            {\n                value := mload(add(src, srcOffset))\n            }\n            sstore(slot, extract_used_part_and_set_length_of_short_byte_array(value, newLen))\n        }\n    }\n}",
									"id": 12,
									"language": "Yul",
									"name": "#utility.yul"
								}
							],
							"linkReferences": {},
							"object": "608060405234801562000010575f80fd5b506040518060400160405280600781526020016626bcaa37b5b2b760c91b815250604051806040016040528060038152602001624d544b60e81b815250815f90816200005d919062000115565b5060016200006c828262000115565b505050620001dd565b634e487b7160e01b5f52604160045260245ffd5b600181811c908216806200009e57607f821691505b602082108103620000bd57634e487b7160e01b5f52602260045260245ffd5b50919050565b601f82111562000110575f81815260208120601f850160051c81016020861015620000eb5750805b601f850160051c820191505b818110156200010c57828155600101620000f7565b5050505b505050565b81516001600160401b0381111562000131576200013162000075565b620001498162000142845462000089565b84620000c3565b602080601f8311600181146200017f575f8415620001675750858301515b5f19600386901b1c1916600185901b1785556200010c565b5f85815260208120601f198616915b82811015620001af578886015182559484019460019091019084016200018e565b5085821015620001cd57878501515f19600388901b60f8161c191681555b5050505050600190811b01905550565b61138e80620001eb5f395ff3fe608060405234801561000f575f80fd5b50600436106100e5575f3560e01c80636352211e11610088578063a22cb46511610063578063a22cb465146101db578063b88d4fde146101ee578063c87b56dd14610201578063e985e9c514610214575f80fd5b80636352211e1461019f57806370a08231146101b257806395d89b41146101d3575f80fd5b8063095ea7b3116100c3578063095ea7b31461015157806323b872dd1461016657806340d097c31461017957806342842e0e1461018c575f80fd5b806301ffc9a7146100e957806306fdde0314610111578063081812fc14610126575b5f80fd5b6100fc6100f7366004610f04565b610227565b60405190151581526020015b60405180910390f35b610119610278565b6040516101089190610f6c565b610139610134366004610f7e565b610307565b6040516001600160a01b039091168152602001610108565b61016461015f366004610fb0565b61032c565b005b610164610174366004610fd8565b610445565b610164610187366004611011565b610476565b61016461019a366004610fd8565b61049e565b6101396101ad366004610f7e565b6104b8565b6101c56101c0366004611011565b610517565b604051908152602001610108565b61011961059b565b6101646101e936600461102a565b6105aa565b6101646101fc366004611077565b6105b5565b61011961020f366004610f7e565b6105ed565b6100fc61022236600461114c565b61065d565b5f6001600160e01b031982166380ac58cd60e01b148061025757506001600160e01b03198216635b5e139f60e01b145b8061027257506301ffc9a760e01b6001600160e01b03198316145b92915050565b60605f80546102869061117d565b80601f01602080910402602001604051908101604052809291908181526020018280546102b29061117d565b80156102fd5780601f106102d4576101008083540402835291602001916102fd565b820191905f5260205f20905b8154815290600101906020018083116102e057829003601f168201915b5050505050905090565b5f6103118261068a565b505f908152600460205260409020546001600160a01b031690565b5f610336826104b8565b9050806001600160a01b0316836001600160a01b0316036103a85760405162461bcd60e51b815260206004820152602160248201527f4552433732313a20617070726f76616c20746f2063757272656e74206f776e656044820152603960f91b60648201526084015b60405180910390fd5b336001600160a01b03821614806103c457506103c4813361065d565b6104365760405162461bcd60e51b815260206004820152603d60248201527f4552433732313a20617070726f76652063616c6c6572206973206e6f7420746f60448201527f6b656e206f776e6572206f7220617070726f76656420666f7220616c6c000000606482015260840161039f565b61044083836106eb565b505050565b61044f3382610758565b61046b5760405162461bcd60e51b815260040161039f906111b5565b6104408383836107b6565b5f61048060065490565b9050610490600680546001019055565b61049a8282610925565b5050565b61044083838360405180602001604052805f8152506105b5565b5f818152600260205260408120546001600160a01b0316806102725760405162461bcd60e51b8152602060048201526018602482015277115490cdcc8c4e881a5b9d985b1a59081d1bdad95b88125160421b604482015260640161039f565b5f6001600160a01b0382166105805760405162461bcd60e51b815260206004820152602960248201527f4552433732313a2061646472657373207a65726f206973206e6f7420612076616044820152683634b21037bbb732b960b91b606482015260840161039f565b506001600160a01b03165f9081526003602052604090205490565b6060600180546102869061117d565b61049a33838361093e565b6105bf3383610758565b6105db5760405162461bcd60e51b815260040161039f906111b5565b6105e784848484610a0b565b50505050565b60606105f88261068a565b5f61060d60408051602081019091525f815290565b90505f81511161062b5760405180602001604052805f815250610656565b8061063584610a3e565b604051602001610646929190611202565b6040516020818303038152906040525b9392505050565b6001600160a01b039182165f90815260056020908152604080832093909416825291909152205460ff1690565b5f818152600260205260409020546001600160a01b03166106e85760405162461bcd60e51b8152602060048201526018602482015277115490cdcc8c4e881a5b9d985b1a59081d1bdad95b88125160421b604482015260640161039f565b50565b5f81815260046020526040902080546001600160a01b0319166001600160a01b038416908117909155819061071f826104b8565b6001600160a01b03167f8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b92560405160405180910390a45050565b5f80610763836104b8565b9050806001600160a01b0316846001600160a01b0316148061078a575061078a818561065d565b806107ae5750836001600160a01b03166107a384610307565b6001600160a01b0316145b949350505050565b826001600160a01b03166107c9826104b8565b6001600160a01b0316146107ef5760405162461bcd60e51b815260040161039f90611230565b6001600160a01b0382166108515760405162461bcd60e51b8152602060048201526024808201527f4552433732313a207472616e7366657220746f20746865207a65726f206164646044820152637265737360e01b606482015260840161039f565b61085e8383836001610ace565b826001600160a01b0316610871826104b8565b6001600160a01b0316146108975760405162461bcd60e51b815260040161039f90611230565b5f81815260046020908152604080832080546001600160a01b03199081169091556001600160a01b038781168086526003855283862080545f1901905590871680865283862080546001019055868652600290945282852080549092168417909155905184937fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef91a4505050565b61049a828260405180602001604052805f815250610b54565b816001600160a01b0316836001600160a01b03160361099f5760405162461bcd60e51b815260206004820152601960248201527f4552433732313a20617070726f766520746f2063616c6c657200000000000000604482015260640161039f565b6001600160a01b038381165f81815260056020908152604080832094871680845294825291829020805460ff191686151590811790915591519182527f17307eab39ab6107e8899845ad3d59bd9653f200f220920489ca2b5937696c31910160405180910390a3505050565b610a168484846107b6565b610a2284848484610b86565b6105e75760405162461bcd60e51b815260040161039f90611275565b60605f610a4a83610c83565b60010190505f8167ffffffffffffffff811115610a6957610a69611063565b6040519080825280601f01601f191660200182016040528015610a93576020820181803683370190505b5090508181016020015b5f19016f181899199a1a9b1b9c1cb0b131b232b360811b600a86061a8153600a8504945084610a9d57509392505050565b60018111156105e7576001600160a01b03841615610b13576001600160a01b0384165f9081526003602052604081208054839290610b0d9084906112db565b90915550505b6001600160a01b038316156105e7576001600160a01b0383165f9081526003602052604081208054839290610b499084906112ee565b909155505050505050565b610b5e8383610d5a565b610b6a5f848484610b86565b6104405760405162461bcd60e51b815260040161039f90611275565b5f6001600160a01b0384163b15610c7857604051630a85bd0160e11b81526001600160a01b0385169063150b7a0290610bc9903390899088908890600401611301565b6020604051808303815f875af1925050508015610c03575060408051601f3d908101601f19168201909252610c009181019061133d565b60015b610c5e573d808015610c30576040519150601f19603f3d011682016040523d82523d5f602084013e610c35565b606091505b5080515f03610c565760405162461bcd60e51b815260040161039f90611275565b805181602001fd5b6001600160e01b031916630a85bd0160e11b1490506107ae565b506001949350505050565b5f8072184f03e93ff9f4daa797ed6e38ed64bf6a1f0160401b8310610cc15772184f03e93ff9f4daa797ed6e38ed64bf6a1f0160401b830492506040015b6d04ee2d6d415b85acef81000000008310610ced576d04ee2d6d415b85acef8100000000830492506020015b662386f26fc100008310610d0b57662386f26fc10000830492506010015b6305f5e1008310610d23576305f5e100830492506008015b6127108310610d3757612710830492506004015b60648310610d49576064830492506002015b600a83106102725760010192915050565b6001600160a01b038216610db05760405162461bcd60e51b815260206004820181905260248201527f4552433732313a206d696e7420746f20746865207a65726f2061646472657373604482015260640161039f565b5f818152600260205260409020546001600160a01b031615610e145760405162461bcd60e51b815260206004820152601c60248201527f4552433732313a20746f6b656e20616c7265616479206d696e74656400000000604482015260640161039f565b610e215f83836001610ace565b5f818152600260205260409020546001600160a01b031615610e855760405162461bcd60e51b815260206004820152601c60248201527f4552433732313a20746f6b656e20616c7265616479206d696e74656400000000604482015260640161039f565b6001600160a01b0382165f81815260036020908152604080832080546001019055848352600290915280822080546001600160a01b0319168417905551839291907fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef908290a45050565b6001600160e01b0319811681146106e8575f80fd5b5f60208284031215610f14575f80fd5b813561065681610eef565b5f5b83811015610f39578181015183820152602001610f21565b50505f910152565b5f8151808452610f58816020860160208601610f1f565b601f01601f19169290920160200192915050565b602081525f6106566020830184610f41565b5f60208284031215610f8e575f80fd5b5035919050565b80356001600160a01b0381168114610fab575f80fd5b919050565b5f8060408385031215610fc1575f80fd5b610fca83610f95565b946020939093013593505050565b5f805f60608486031215610fea575f80fd5b610ff384610f95565b925061100160208501610f95565b9150604084013590509250925092565b5f60208284031215611021575f80fd5b61065682610f95565b5f806040838503121561103b575f80fd5b61104483610f95565b915060208301358015158114611058575f80fd5b809150509250929050565b634e487b7160e01b5f52604160045260245ffd5b5f805f806080858703121561108a575f80fd5b61109385610f95565b93506110a160208601610f95565b925060408501359150606085013567ffffffffffffffff808211156110c4575f80fd5b818701915087601f8301126110d7575f80fd5b8135818111156110e9576110e9611063565b604051601f8201601f19908116603f0116810190838211818310171561111157611111611063565b816040528281528a6020848701011115611129575f80fd5b826020860160208301375f60208483010152809550505050505092959194509250565b5f806040838503121561115d575f80fd5b61116683610f95565b915061117460208401610f95565b90509250929050565b600181811c9082168061119157607f821691505b6020821081036111af57634e487b7160e01b5f52602260045260245ffd5b50919050565b6020808252602d908201527f4552433732313a2063616c6c6572206973206e6f7420746f6b656e206f776e6560408201526c1c881bdc88185c1c1c9bdd9959609a1b606082015260800190565b5f8351611213818460208801610f1f565b835190830190611227818360208801610f1f565b01949350505050565b60208082526025908201527f4552433732313a207472616e736665722066726f6d20696e636f72726563742060408201526437bbb732b960d91b606082015260800190565b60208082526032908201527f4552433732313a207472616e7366657220746f206e6f6e20455243373231526560408201527131b2b4bb32b91034b6b83632b6b2b73a32b960711b606082015260800190565b634e487b7160e01b5f52601160045260245ffd5b81810381811115610272576102726112c7565b80820180821115610272576102726112c7565b6001600160a01b03858116825284166020820152604081018390526080606082018190525f9061133390830184610f41565b9695505050505050565b5f6020828403121561134d575f80fd5b815161065681610eef56fea2646970667358221220bd25f036120a0eb18ca2aa079e080161b5a8416abc94a75dde62dca155667f6c64736f6c63430008150033",
							"opcodes": "PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH3 0x10 JUMPI PUSH0 DUP1 REVERT JUMPDEST POP PUSH1 0x40 MLOAD DUP1 PUSH1 0x40 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0x7 DUP2 MSTORE PUSH1 0x20 ADD PUSH7 0x26BCAA37B5B2B7 PUSH1 0xC9 SHL DUP2 MSTORE POP PUSH1 0x40 MLOAD DUP1 PUSH1 0x40 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0x3 DUP2 MSTORE PUSH1 0x20 ADD PUSH3 0x4D544B PUSH1 0xE8 SHL DUP2 MSTORE POP DUP2 PUSH0 SWAP1 DUP2 PUSH3 0x5D SWAP2 SWAP1 PUSH3 0x115 JUMP JUMPDEST POP PUSH1 0x1 PUSH3 0x6C DUP3 DUP3 PUSH3 0x115 JUMP JUMPDEST POP POP POP PUSH3 0x1DD JUMP JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH0 MSTORE PUSH1 0x41 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH0 REVERT JUMPDEST PUSH1 0x1 DUP2 DUP2 SHR SWAP1 DUP3 AND DUP1 PUSH3 0x9E JUMPI PUSH1 0x7F DUP3 AND SWAP2 POP JUMPDEST PUSH1 0x20 DUP3 LT DUP2 SUB PUSH3 0xBD JUMPI PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH0 MSTORE PUSH1 0x22 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH0 REVERT JUMPDEST POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x1F DUP3 GT ISZERO PUSH3 0x110 JUMPI PUSH0 DUP2 DUP2 MSTORE PUSH1 0x20 DUP2 KECCAK256 PUSH1 0x1F DUP6 ADD PUSH1 0x5 SHR DUP2 ADD PUSH1 0x20 DUP7 LT ISZERO PUSH3 0xEB JUMPI POP DUP1 JUMPDEST PUSH1 0x1F DUP6 ADD PUSH1 0x5 SHR DUP3 ADD SWAP2 POP JUMPDEST DUP2 DUP2 LT ISZERO PUSH3 0x10C JUMPI DUP3 DUP2 SSTORE PUSH1 0x1 ADD PUSH3 0xF7 JUMP JUMPDEST POP POP POP JUMPDEST POP POP POP JUMP JUMPDEST DUP2 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0x40 SHL SUB DUP2 GT ISZERO PUSH3 0x131 JUMPI PUSH3 0x131 PUSH3 0x75 JUMP JUMPDEST PUSH3 0x149 DUP2 PUSH3 0x142 DUP5 SLOAD PUSH3 0x89 JUMP JUMPDEST DUP5 PUSH3 0xC3 JUMP JUMPDEST PUSH1 0x20 DUP1 PUSH1 0x1F DUP4 GT PUSH1 0x1 DUP2 EQ PUSH3 0x17F JUMPI PUSH0 DUP5 ISZERO PUSH3 0x167 JUMPI POP DUP6 DUP4 ADD MLOAD JUMPDEST PUSH0 NOT PUSH1 0x3 DUP7 SWAP1 SHL SHR NOT AND PUSH1 0x1 DUP6 SWAP1 SHL OR DUP6 SSTORE PUSH3 0x10C JUMP JUMPDEST PUSH0 DUP6 DUP2 MSTORE PUSH1 0x20 DUP2 KECCAK256 PUSH1 0x1F NOT DUP7 AND SWAP2 JUMPDEST DUP3 DUP2 LT ISZERO PUSH3 0x1AF JUMPI DUP9 DUP7 ADD MLOAD DUP3 SSTORE SWAP5 DUP5 ADD SWAP5 PUSH1 0x1 SWAP1 SWAP2 ADD SWAP1 DUP5 ADD PUSH3 0x18E JUMP JUMPDEST POP DUP6 DUP3 LT ISZERO PUSH3 0x1CD JUMPI DUP8 DUP6 ADD MLOAD PUSH0 NOT PUSH1 0x3 DUP9 SWAP1 SHL PUSH1 0xF8 AND SHR NOT AND DUP2 SSTORE JUMPDEST POP POP POP POP POP PUSH1 0x1 SWAP1 DUP2 SHL ADD SWAP1 SSTORE POP JUMP JUMPDEST PUSH2 0x138E DUP1 PUSH3 0x1EB PUSH0 CODECOPY PUSH0 RETURN INVALID PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH2 0xF JUMPI PUSH0 DUP1 REVERT JUMPDEST POP PUSH1 0x4 CALLDATASIZE LT PUSH2 0xE5 JUMPI PUSH0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0x6352211E GT PUSH2 0x88 JUMPI DUP1 PUSH4 0xA22CB465 GT PUSH2 0x63 JUMPI DUP1 PUSH4 0xA22CB465 EQ PUSH2 0x1DB JUMPI DUP1 PUSH4 0xB88D4FDE EQ PUSH2 0x1EE JUMPI DUP1 PUSH4 0xC87B56DD EQ PUSH2 0x201 JUMPI DUP1 PUSH4 0xE985E9C5 EQ PUSH2 0x214 JUMPI PUSH0 DUP1 REVERT JUMPDEST DUP1 PUSH4 0x6352211E EQ PUSH2 0x19F JUMPI DUP1 PUSH4 0x70A08231 EQ PUSH2 0x1B2 JUMPI DUP1 PUSH4 0x95D89B41 EQ PUSH2 0x1D3 JUMPI PUSH0 DUP1 REVERT JUMPDEST DUP1 PUSH4 0x95EA7B3 GT PUSH2 0xC3 JUMPI DUP1 PUSH4 0x95EA7B3 EQ PUSH2 0x151 JUMPI DUP1 PUSH4 0x23B872DD EQ PUSH2 0x166 JUMPI DUP1 PUSH4 0x40D097C3 EQ PUSH2 0x179 JUMPI DUP1 PUSH4 0x42842E0E EQ PUSH2 0x18C JUMPI PUSH0 DUP1 REVERT JUMPDEST DUP1 PUSH4 0x1FFC9A7 EQ PUSH2 0xE9 JUMPI DUP1 PUSH4 0x6FDDE03 EQ PUSH2 0x111 JUMPI DUP1 PUSH4 0x81812FC EQ PUSH2 0x126 JUMPI JUMPDEST PUSH0 DUP1 REVERT JUMPDEST PUSH2 0xFC PUSH2 0xF7 CALLDATASIZE PUSH1 0x4 PUSH2 0xF04 JUMP JUMPDEST PUSH2 0x227 JUMP JUMPDEST PUSH1 0x40 MLOAD SWAP1 ISZERO ISZERO DUP2 MSTORE PUSH1 0x20 ADD JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x119 PUSH2 0x278 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x108 SWAP2 SWAP1 PUSH2 0xF6C JUMP JUMPDEST PUSH2 0x139 PUSH2 0x134 CALLDATASIZE PUSH1 0x4 PUSH2 0xF7E JUMP JUMPDEST PUSH2 0x307 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 SWAP2 AND DUP2 MSTORE PUSH1 0x20 ADD PUSH2 0x108 JUMP JUMPDEST PUSH2 0x164 PUSH2 0x15F CALLDATASIZE PUSH1 0x4 PUSH2 0xFB0 JUMP JUMPDEST PUSH2 0x32C JUMP JUMPDEST STOP JUMPDEST PUSH2 0x164 PUSH2 0x174 CALLDATASIZE PUSH1 0x4 PUSH2 0xFD8 JUMP JUMPDEST PUSH2 0x445 JUMP JUMPDEST PUSH2 0x164 PUSH2 0x187 CALLDATASIZE PUSH1 0x4 PUSH2 0x1011 JUMP JUMPDEST PUSH2 0x476 JUMP JUMPDEST PUSH2 0x164 PUSH2 0x19A CALLDATASIZE PUSH1 0x4 PUSH2 0xFD8 JUMP JUMPDEST PUSH2 0x49E JUMP JUMPDEST PUSH2 0x139 PUSH2 0x1AD CALLDATASIZE PUSH1 0x4 PUSH2 0xF7E JUMP JUMPDEST PUSH2 0x4B8 JUMP JUMPDEST PUSH2 0x1C5 PUSH2 0x1C0 CALLDATASIZE PUSH1 0x4 PUSH2 0x1011 JUMP JUMPDEST PUSH2 0x517 JUMP JUMPDEST PUSH1 0x40 MLOAD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH2 0x108 JUMP JUMPDEST PUSH2 0x119 PUSH2 0x59B JUMP JUMPDEST PUSH2 0x164 PUSH2 0x1E9 CALLDATASIZE PUSH1 0x4 PUSH2 0x102A JUMP JUMPDEST PUSH2 0x5AA JUMP JUMPDEST PUSH2 0x164 PUSH2 0x1FC CALLDATASIZE PUSH1 0x4 PUSH2 0x1077 JUMP JUMPDEST PUSH2 0x5B5 JUMP JUMPDEST PUSH2 0x119 PUSH2 0x20F CALLDATASIZE PUSH1 0x4 PUSH2 0xF7E JUMP JUMPDEST PUSH2 0x5ED JUMP JUMPDEST PUSH2 0xFC PUSH2 0x222 CALLDATASIZE PUSH1 0x4 PUSH2 0x114C JUMP JUMPDEST PUSH2 0x65D JUMP JUMPDEST PUSH0 PUSH1 0x1 PUSH1 0x1 PUSH1 0xE0 SHL SUB NOT DUP3 AND PUSH4 0x80AC58CD PUSH1 0xE0 SHL EQ DUP1 PUSH2 0x257 JUMPI POP PUSH1 0x1 PUSH1 0x1 PUSH1 0xE0 SHL SUB NOT DUP3 AND PUSH4 0x5B5E139F PUSH1 0xE0 SHL EQ JUMPDEST DUP1 PUSH2 0x272 JUMPI POP PUSH4 0x1FFC9A7 PUSH1 0xE0 SHL PUSH1 0x1 PUSH1 0x1 PUSH1 0xE0 SHL SUB NOT DUP4 AND EQ JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x60 PUSH0 DUP1 SLOAD PUSH2 0x286 SWAP1 PUSH2 0x117D JUMP JUMPDEST DUP1 PUSH1 0x1F ADD PUSH1 0x20 DUP1 SWAP2 DIV MUL PUSH1 0x20 ADD PUSH1 0x40 MLOAD SWAP1 DUP2 ADD PUSH1 0x40 MSTORE DUP1 SWAP3 SWAP2 SWAP1 DUP2 DUP2 MSTORE PUSH1 0x20 ADD DUP3 DUP1 SLOAD PUSH2 0x2B2 SWAP1 PUSH2 0x117D JUMP JUMPDEST DUP1 ISZERO PUSH2 0x2FD JUMPI DUP1 PUSH1 0x1F LT PUSH2 0x2D4 JUMPI PUSH2 0x100 DUP1 DUP4 SLOAD DIV MUL DUP4 MSTORE SWAP2 PUSH1 0x20 ADD SWAP2 PUSH2 0x2FD JUMP JUMPDEST DUP3 ADD SWAP2 SWAP1 PUSH0 MSTORE PUSH1 0x20 PUSH0 KECCAK256 SWAP1 JUMPDEST DUP2 SLOAD DUP2 MSTORE SWAP1 PUSH1 0x1 ADD SWAP1 PUSH1 0x20 ADD DUP1 DUP4 GT PUSH2 0x2E0 JUMPI DUP3 SWAP1 SUB PUSH1 0x1F AND DUP3 ADD SWAP2 JUMPDEST POP POP POP POP POP SWAP1 POP SWAP1 JUMP JUMPDEST PUSH0 PUSH2 0x311 DUP3 PUSH2 0x68A JUMP JUMPDEST POP PUSH0 SWAP1 DUP2 MSTORE PUSH1 0x4 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND SWAP1 JUMP JUMPDEST PUSH0 PUSH2 0x336 DUP3 PUSH2 0x4B8 JUMP JUMPDEST SWAP1 POP DUP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP4 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND SUB PUSH2 0x3A8 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x21 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x4552433732313A20617070726F76616C20746F2063757272656E74206F776E65 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x39 PUSH1 0xF9 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST CALLER PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 AND EQ DUP1 PUSH2 0x3C4 JUMPI POP PUSH2 0x3C4 DUP2 CALLER PUSH2 0x65D JUMP JUMPDEST PUSH2 0x436 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x3D PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x4552433732313A20617070726F76652063616C6C6572206973206E6F7420746F PUSH1 0x44 DUP3 ADD MSTORE PUSH32 0x6B656E206F776E6572206F7220617070726F76656420666F7220616C6C000000 PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0x39F JUMP JUMPDEST PUSH2 0x440 DUP4 DUP4 PUSH2 0x6EB JUMP JUMPDEST POP POP POP JUMP JUMPDEST PUSH2 0x44F CALLER DUP3 PUSH2 0x758 JUMP JUMPDEST PUSH2 0x46B JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x39F SWAP1 PUSH2 0x11B5 JUMP JUMPDEST PUSH2 0x440 DUP4 DUP4 DUP4 PUSH2 0x7B6 JUMP JUMPDEST PUSH0 PUSH2 0x480 PUSH1 0x6 SLOAD SWAP1 JUMP JUMPDEST SWAP1 POP PUSH2 0x490 PUSH1 0x6 DUP1 SLOAD PUSH1 0x1 ADD SWAP1 SSTORE JUMP JUMPDEST PUSH2 0x49A DUP3 DUP3 PUSH2 0x925 JUMP JUMPDEST POP POP JUMP JUMPDEST PUSH2 0x440 DUP4 DUP4 DUP4 PUSH1 0x40 MLOAD DUP1 PUSH1 0x20 ADD PUSH1 0x40 MSTORE DUP1 PUSH0 DUP2 MSTORE POP PUSH2 0x5B5 JUMP JUMPDEST PUSH0 DUP2 DUP2 MSTORE PUSH1 0x2 PUSH1 0x20 MSTORE PUSH1 0x40 DUP2 KECCAK256 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP1 PUSH2 0x272 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x18 PUSH1 0x24 DUP3 ADD MSTORE PUSH24 0x115490CDCC8C4E881A5B9D985B1A59081D1BDAD95B881251 PUSH1 0x42 SHL PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x39F JUMP JUMPDEST PUSH0 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 AND PUSH2 0x580 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x29 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x4552433732313A2061646472657373207A65726F206973206E6F742061207661 PUSH1 0x44 DUP3 ADD MSTORE PUSH9 0x3634B21037BBB732B9 PUSH1 0xB9 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0x39F JUMP JUMPDEST POP PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH0 SWAP1 DUP2 MSTORE PUSH1 0x3 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD SWAP1 JUMP JUMPDEST PUSH1 0x60 PUSH1 0x1 DUP1 SLOAD PUSH2 0x286 SWAP1 PUSH2 0x117D JUMP JUMPDEST PUSH2 0x49A CALLER DUP4 DUP4 PUSH2 0x93E JUMP JUMPDEST PUSH2 0x5BF CALLER DUP4 PUSH2 0x758 JUMP JUMPDEST PUSH2 0x5DB JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x39F SWAP1 PUSH2 0x11B5 JUMP JUMPDEST PUSH2 0x5E7 DUP5 DUP5 DUP5 DUP5 PUSH2 0xA0B JUMP JUMPDEST POP POP POP POP JUMP JUMPDEST PUSH1 0x60 PUSH2 0x5F8 DUP3 PUSH2 0x68A JUMP JUMPDEST PUSH0 PUSH2 0x60D PUSH1 0x40 DUP1 MLOAD PUSH1 0x20 DUP2 ADD SWAP1 SWAP2 MSTORE PUSH0 DUP2 MSTORE SWAP1 JUMP JUMPDEST SWAP1 POP PUSH0 DUP2 MLOAD GT PUSH2 0x62B JUMPI PUSH1 0x40 MLOAD DUP1 PUSH1 0x20 ADD PUSH1 0x40 MSTORE DUP1 PUSH0 DUP2 MSTORE POP PUSH2 0x656 JUMP JUMPDEST DUP1 PUSH2 0x635 DUP5 PUSH2 0xA3E JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x20 ADD PUSH2 0x646 SWAP3 SWAP2 SWAP1 PUSH2 0x1202 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x20 DUP2 DUP4 SUB SUB DUP2 MSTORE SWAP1 PUSH1 0x40 MSTORE JUMPDEST SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP2 DUP3 AND PUSH0 SWAP1 DUP2 MSTORE PUSH1 0x5 PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 SWAP4 SWAP1 SWAP5 AND DUP3 MSTORE SWAP2 SWAP1 SWAP2 MSTORE KECCAK256 SLOAD PUSH1 0xFF AND SWAP1 JUMP JUMPDEST PUSH0 DUP2 DUP2 MSTORE PUSH1 0x2 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH2 0x6E8 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x18 PUSH1 0x24 DUP3 ADD MSTORE PUSH24 0x115490CDCC8C4E881A5B9D985B1A59081D1BDAD95B881251 PUSH1 0x42 SHL PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x39F JUMP JUMPDEST POP JUMP JUMPDEST PUSH0 DUP2 DUP2 MSTORE PUSH1 0x4 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 DUP1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB NOT AND PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP5 AND SWAP1 DUP2 OR SWAP1 SWAP2 SSTORE DUP2 SWAP1 PUSH2 0x71F DUP3 PUSH2 0x4B8 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH32 0x8C5BE1E5EBEC7D5BD14F71427D1E84F3DD0314C0F7B2291E5B200AC8C7C3B925 PUSH1 0x40 MLOAD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG4 POP POP JUMP JUMPDEST PUSH0 DUP1 PUSH2 0x763 DUP4 PUSH2 0x4B8 JUMP JUMPDEST SWAP1 POP DUP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP5 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND EQ DUP1 PUSH2 0x78A JUMPI POP PUSH2 0x78A DUP2 DUP6 PUSH2 0x65D JUMP JUMPDEST DUP1 PUSH2 0x7AE JUMPI POP DUP4 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH2 0x7A3 DUP5 PUSH2 0x307 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND EQ JUMPDEST SWAP5 SWAP4 POP POP POP POP JUMP JUMPDEST DUP3 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH2 0x7C9 DUP3 PUSH2 0x4B8 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND EQ PUSH2 0x7EF JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x39F SWAP1 PUSH2 0x1230 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 AND PUSH2 0x851 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x24 DUP1 DUP3 ADD MSTORE PUSH32 0x4552433732313A207472616E7366657220746F20746865207A65726F20616464 PUSH1 0x44 DUP3 ADD MSTORE PUSH4 0x72657373 PUSH1 0xE0 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0x39F JUMP JUMPDEST PUSH2 0x85E DUP4 DUP4 DUP4 PUSH1 0x1 PUSH2 0xACE JUMP JUMPDEST DUP3 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH2 0x871 DUP3 PUSH2 0x4B8 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND EQ PUSH2 0x897 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x39F SWAP1 PUSH2 0x1230 JUMP JUMPDEST PUSH0 DUP2 DUP2 MSTORE PUSH1 0x4 PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 DUP1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB NOT SWAP1 DUP2 AND SWAP1 SWAP2 SSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP8 DUP2 AND DUP1 DUP7 MSTORE PUSH1 0x3 DUP6 MSTORE DUP4 DUP7 KECCAK256 DUP1 SLOAD PUSH0 NOT ADD SWAP1 SSTORE SWAP1 DUP8 AND DUP1 DUP7 MSTORE DUP4 DUP7 KECCAK256 DUP1 SLOAD PUSH1 0x1 ADD SWAP1 SSTORE DUP7 DUP7 MSTORE PUSH1 0x2 SWAP1 SWAP5 MSTORE DUP3 DUP6 KECCAK256 DUP1 SLOAD SWAP1 SWAP3 AND DUP5 OR SWAP1 SWAP2 SSTORE SWAP1 MLOAD DUP5 SWAP4 PUSH32 0xDDF252AD1BE2C89B69C2B068FC378DAA952BA7F163C4A11628F55A4DF523B3EF SWAP2 LOG4 POP POP POP JUMP JUMPDEST PUSH2 0x49A DUP3 DUP3 PUSH1 0x40 MLOAD DUP1 PUSH1 0x20 ADD PUSH1 0x40 MSTORE DUP1 PUSH0 DUP2 MSTORE POP PUSH2 0xB54 JUMP JUMPDEST DUP2 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP4 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND SUB PUSH2 0x99F JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x19 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x4552433732313A20617070726F766520746F2063616C6C657200000000000000 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x39F JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 DUP2 AND PUSH0 DUP2 DUP2 MSTORE PUSH1 0x5 PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 SWAP5 DUP8 AND DUP1 DUP5 MSTORE SWAP5 DUP3 MSTORE SWAP2 DUP3 SWAP1 KECCAK256 DUP1 SLOAD PUSH1 0xFF NOT AND DUP7 ISZERO ISZERO SWAP1 DUP2 OR SWAP1 SWAP2 SSTORE SWAP2 MLOAD SWAP2 DUP3 MSTORE PUSH32 0x17307EAB39AB6107E8899845AD3D59BD9653F200F220920489CA2B5937696C31 SWAP2 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 POP POP POP JUMP JUMPDEST PUSH2 0xA16 DUP5 DUP5 DUP5 PUSH2 0x7B6 JUMP JUMPDEST PUSH2 0xA22 DUP5 DUP5 DUP5 DUP5 PUSH2 0xB86 JUMP JUMPDEST PUSH2 0x5E7 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x39F SWAP1 PUSH2 0x1275 JUMP JUMPDEST PUSH1 0x60 PUSH0 PUSH2 0xA4A DUP4 PUSH2 0xC83 JUMP JUMPDEST PUSH1 0x1 ADD SWAP1 POP PUSH0 DUP2 PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0xA69 JUMPI PUSH2 0xA69 PUSH2 0x1063 JUMP JUMPDEST PUSH1 0x40 MLOAD SWAP1 DUP1 DUP3 MSTORE DUP1 PUSH1 0x1F ADD PUSH1 0x1F NOT AND PUSH1 0x20 ADD DUP3 ADD PUSH1 0x40 MSTORE DUP1 ISZERO PUSH2 0xA93 JUMPI PUSH1 0x20 DUP3 ADD DUP2 DUP1 CALLDATASIZE DUP4 CALLDATACOPY ADD SWAP1 POP JUMPDEST POP SWAP1 POP DUP2 DUP2 ADD PUSH1 0x20 ADD JUMPDEST PUSH0 NOT ADD PUSH16 0x181899199A1A9B1B9C1CB0B131B232B3 PUSH1 0x81 SHL PUSH1 0xA DUP7 MOD BYTE DUP2 MSTORE8 PUSH1 0xA DUP6 DIV SWAP5 POP DUP5 PUSH2 0xA9D JUMPI POP SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x1 DUP2 GT ISZERO PUSH2 0x5E7 JUMPI PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP5 AND ISZERO PUSH2 0xB13 JUMPI PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP5 AND PUSH0 SWAP1 DUP2 MSTORE PUSH1 0x3 PUSH1 0x20 MSTORE PUSH1 0x40 DUP2 KECCAK256 DUP1 SLOAD DUP4 SWAP3 SWAP1 PUSH2 0xB0D SWAP1 DUP5 SWAP1 PUSH2 0x12DB JUMP JUMPDEST SWAP1 SWAP2 SSTORE POP POP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 AND ISZERO PUSH2 0x5E7 JUMPI PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 AND PUSH0 SWAP1 DUP2 MSTORE PUSH1 0x3 PUSH1 0x20 MSTORE PUSH1 0x40 DUP2 KECCAK256 DUP1 SLOAD DUP4 SWAP3 SWAP1 PUSH2 0xB49 SWAP1 DUP5 SWAP1 PUSH2 0x12EE JUMP JUMPDEST SWAP1 SWAP2 SSTORE POP POP POP POP POP POP JUMP JUMPDEST PUSH2 0xB5E DUP4 DUP4 PUSH2 0xD5A JUMP JUMPDEST PUSH2 0xB6A PUSH0 DUP5 DUP5 DUP5 PUSH2 0xB86 JUMP JUMPDEST PUSH2 0x440 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x39F SWAP1 PUSH2 0x1275 JUMP JUMPDEST PUSH0 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP5 AND EXTCODESIZE ISZERO PUSH2 0xC78 JUMPI PUSH1 0x40 MLOAD PUSH4 0xA85BD01 PUSH1 0xE1 SHL DUP2 MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP6 AND SWAP1 PUSH4 0x150B7A02 SWAP1 PUSH2 0xBC9 SWAP1 CALLER SWAP1 DUP10 SWAP1 DUP9 SWAP1 DUP9 SWAP1 PUSH1 0x4 ADD PUSH2 0x1301 JUMP JUMPDEST PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH0 DUP8 GAS CALL SWAP3 POP POP POP DUP1 ISZERO PUSH2 0xC03 JUMPI POP PUSH1 0x40 DUP1 MLOAD PUSH1 0x1F RETURNDATASIZE SWAP1 DUP2 ADD PUSH1 0x1F NOT AND DUP3 ADD SWAP1 SWAP3 MSTORE PUSH2 0xC00 SWAP2 DUP2 ADD SWAP1 PUSH2 0x133D JUMP JUMPDEST PUSH1 0x1 JUMPDEST PUSH2 0xC5E JUMPI RETURNDATASIZE DUP1 DUP1 ISZERO PUSH2 0xC30 JUMPI PUSH1 0x40 MLOAD SWAP2 POP PUSH1 0x1F NOT PUSH1 0x3F RETURNDATASIZE ADD AND DUP3 ADD PUSH1 0x40 MSTORE RETURNDATASIZE DUP3 MSTORE RETURNDATASIZE PUSH0 PUSH1 0x20 DUP5 ADD RETURNDATACOPY PUSH2 0xC35 JUMP JUMPDEST PUSH1 0x60 SWAP2 POP JUMPDEST POP DUP1 MLOAD PUSH0 SUB PUSH2 0xC56 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x39F SWAP1 PUSH2 0x1275 JUMP JUMPDEST DUP1 MLOAD DUP2 PUSH1 0x20 ADD REVERT JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xE0 SHL SUB NOT AND PUSH4 0xA85BD01 PUSH1 0xE1 SHL EQ SWAP1 POP PUSH2 0x7AE JUMP JUMPDEST POP PUSH1 0x1 SWAP5 SWAP4 POP POP POP POP JUMP JUMPDEST PUSH0 DUP1 PUSH19 0x184F03E93FF9F4DAA797ED6E38ED64BF6A1F01 PUSH1 0x40 SHL DUP4 LT PUSH2 0xCC1 JUMPI PUSH19 0x184F03E93FF9F4DAA797ED6E38ED64BF6A1F01 PUSH1 0x40 SHL DUP4 DIV SWAP3 POP PUSH1 0x40 ADD JUMPDEST PUSH14 0x4EE2D6D415B85ACEF8100000000 DUP4 LT PUSH2 0xCED JUMPI PUSH14 0x4EE2D6D415B85ACEF8100000000 DUP4 DIV SWAP3 POP PUSH1 0x20 ADD JUMPDEST PUSH7 0x2386F26FC10000 DUP4 LT PUSH2 0xD0B JUMPI PUSH7 0x2386F26FC10000 DUP4 DIV SWAP3 POP PUSH1 0x10 ADD JUMPDEST PUSH4 0x5F5E100 DUP4 LT PUSH2 0xD23 JUMPI PUSH4 0x5F5E100 DUP4 DIV SWAP3 POP PUSH1 0x8 ADD JUMPDEST PUSH2 0x2710 DUP4 LT PUSH2 0xD37 JUMPI PUSH2 0x2710 DUP4 DIV SWAP3 POP PUSH1 0x4 ADD JUMPDEST PUSH1 0x64 DUP4 LT PUSH2 0xD49 JUMPI PUSH1 0x64 DUP4 DIV SWAP3 POP PUSH1 0x2 ADD JUMPDEST PUSH1 0xA DUP4 LT PUSH2 0x272 JUMPI PUSH1 0x1 ADD SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 AND PUSH2 0xDB0 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD DUP2 SWAP1 MSTORE PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x4552433732313A206D696E7420746F20746865207A65726F2061646472657373 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x39F JUMP JUMPDEST PUSH0 DUP2 DUP2 MSTORE PUSH1 0x2 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND ISZERO PUSH2 0xE14 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x1C PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x4552433732313A20746F6B656E20616C7265616479206D696E74656400000000 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x39F JUMP JUMPDEST PUSH2 0xE21 PUSH0 DUP4 DUP4 PUSH1 0x1 PUSH2 0xACE JUMP JUMPDEST PUSH0 DUP2 DUP2 MSTORE PUSH1 0x2 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND ISZERO PUSH2 0xE85 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x1C PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x4552433732313A20746F6B656E20616C7265616479206D696E74656400000000 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x39F JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 AND PUSH0 DUP2 DUP2 MSTORE PUSH1 0x3 PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 DUP1 SLOAD PUSH1 0x1 ADD SWAP1 SSTORE DUP5 DUP4 MSTORE PUSH1 0x2 SWAP1 SWAP2 MSTORE DUP1 DUP3 KECCAK256 DUP1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB NOT AND DUP5 OR SWAP1 SSTORE MLOAD DUP4 SWAP3 SWAP2 SWAP1 PUSH32 0xDDF252AD1BE2C89B69C2B068FC378DAA952BA7F163C4A11628F55A4DF523B3EF SWAP1 DUP3 SWAP1 LOG4 POP POP JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xE0 SHL SUB NOT DUP2 AND DUP2 EQ PUSH2 0x6E8 JUMPI PUSH0 DUP1 REVERT JUMPDEST PUSH0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0xF14 JUMPI PUSH0 DUP1 REVERT JUMPDEST DUP2 CALLDATALOAD PUSH2 0x656 DUP2 PUSH2 0xEEF JUMP JUMPDEST PUSH0 JUMPDEST DUP4 DUP2 LT ISZERO PUSH2 0xF39 JUMPI DUP2 DUP2 ADD MLOAD DUP4 DUP3 ADD MSTORE PUSH1 0x20 ADD PUSH2 0xF21 JUMP JUMPDEST POP POP PUSH0 SWAP2 ADD MSTORE JUMP JUMPDEST PUSH0 DUP2 MLOAD DUP1 DUP5 MSTORE PUSH2 0xF58 DUP2 PUSH1 0x20 DUP7 ADD PUSH1 0x20 DUP7 ADD PUSH2 0xF1F JUMP JUMPDEST PUSH1 0x1F ADD PUSH1 0x1F NOT AND SWAP3 SWAP1 SWAP3 ADD PUSH1 0x20 ADD SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x20 DUP2 MSTORE PUSH0 PUSH2 0x656 PUSH1 0x20 DUP4 ADD DUP5 PUSH2 0xF41 JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0xF8E JUMPI PUSH0 DUP1 REVERT JUMPDEST POP CALLDATALOAD SWAP2 SWAP1 POP JUMP JUMPDEST DUP1 CALLDATALOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND DUP2 EQ PUSH2 0xFAB JUMPI PUSH0 DUP1 REVERT JUMPDEST SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0xFC1 JUMPI PUSH0 DUP1 REVERT JUMPDEST PUSH2 0xFCA DUP4 PUSH2 0xF95 JUMP JUMPDEST SWAP5 PUSH1 0x20 SWAP4 SWAP1 SWAP4 ADD CALLDATALOAD SWAP4 POP POP POP JUMP JUMPDEST PUSH0 DUP1 PUSH0 PUSH1 0x60 DUP5 DUP7 SUB SLT ISZERO PUSH2 0xFEA JUMPI PUSH0 DUP1 REVERT JUMPDEST PUSH2 0xFF3 DUP5 PUSH2 0xF95 JUMP JUMPDEST SWAP3 POP PUSH2 0x1001 PUSH1 0x20 DUP6 ADD PUSH2 0xF95 JUMP JUMPDEST SWAP2 POP PUSH1 0x40 DUP5 ADD CALLDATALOAD SWAP1 POP SWAP3 POP SWAP3 POP SWAP3 JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x1021 JUMPI PUSH0 DUP1 REVERT JUMPDEST PUSH2 0x656 DUP3 PUSH2 0xF95 JUMP JUMPDEST PUSH0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x103B JUMPI PUSH0 DUP1 REVERT JUMPDEST PUSH2 0x1044 DUP4 PUSH2 0xF95 JUMP JUMPDEST SWAP2 POP PUSH1 0x20 DUP4 ADD CALLDATALOAD DUP1 ISZERO ISZERO DUP2 EQ PUSH2 0x1058 JUMPI PUSH0 DUP1 REVERT JUMPDEST DUP1 SWAP2 POP POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH0 MSTORE PUSH1 0x41 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH0 REVERT JUMPDEST PUSH0 DUP1 PUSH0 DUP1 PUSH1 0x80 DUP6 DUP8 SUB SLT ISZERO PUSH2 0x108A JUMPI PUSH0 DUP1 REVERT JUMPDEST PUSH2 0x1093 DUP6 PUSH2 0xF95 JUMP JUMPDEST SWAP4 POP PUSH2 0x10A1 PUSH1 0x20 DUP7 ADD PUSH2 0xF95 JUMP JUMPDEST SWAP3 POP PUSH1 0x40 DUP6 ADD CALLDATALOAD SWAP2 POP PUSH1 0x60 DUP6 ADD CALLDATALOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP1 DUP3 GT ISZERO PUSH2 0x10C4 JUMPI PUSH0 DUP1 REVERT JUMPDEST DUP2 DUP8 ADD SWAP2 POP DUP8 PUSH1 0x1F DUP4 ADD SLT PUSH2 0x10D7 JUMPI PUSH0 DUP1 REVERT JUMPDEST DUP2 CALLDATALOAD DUP2 DUP2 GT ISZERO PUSH2 0x10E9 JUMPI PUSH2 0x10E9 PUSH2 0x1063 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x1F DUP3 ADD PUSH1 0x1F NOT SWAP1 DUP2 AND PUSH1 0x3F ADD AND DUP2 ADD SWAP1 DUP4 DUP3 GT DUP2 DUP4 LT OR ISZERO PUSH2 0x1111 JUMPI PUSH2 0x1111 PUSH2 0x1063 JUMP JUMPDEST DUP2 PUSH1 0x40 MSTORE DUP3 DUP2 MSTORE DUP11 PUSH1 0x20 DUP5 DUP8 ADD ADD GT ISZERO PUSH2 0x1129 JUMPI PUSH0 DUP1 REVERT JUMPDEST DUP3 PUSH1 0x20 DUP7 ADD PUSH1 0x20 DUP4 ADD CALLDATACOPY PUSH0 PUSH1 0x20 DUP5 DUP4 ADD ADD MSTORE DUP1 SWAP6 POP POP POP POP POP POP SWAP3 SWAP6 SWAP2 SWAP5 POP SWAP3 POP JUMP JUMPDEST PUSH0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x115D JUMPI PUSH0 DUP1 REVERT JUMPDEST PUSH2 0x1166 DUP4 PUSH2 0xF95 JUMP JUMPDEST SWAP2 POP PUSH2 0x1174 PUSH1 0x20 DUP5 ADD PUSH2 0xF95 JUMP JUMPDEST SWAP1 POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH1 0x1 DUP2 DUP2 SHR SWAP1 DUP3 AND DUP1 PUSH2 0x1191 JUMPI PUSH1 0x7F DUP3 AND SWAP2 POP JUMPDEST PUSH1 0x20 DUP3 LT DUP2 SUB PUSH2 0x11AF JUMPI PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH0 MSTORE PUSH1 0x22 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH0 REVERT JUMPDEST POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x20 DUP1 DUP3 MSTORE PUSH1 0x2D SWAP1 DUP3 ADD MSTORE PUSH32 0x4552433732313A2063616C6C6572206973206E6F7420746F6B656E206F776E65 PUSH1 0x40 DUP3 ADD MSTORE PUSH13 0x1C881BDC88185C1C1C9BDD9959 PUSH1 0x9A SHL PUSH1 0x60 DUP3 ADD MSTORE PUSH1 0x80 ADD SWAP1 JUMP JUMPDEST PUSH0 DUP4 MLOAD PUSH2 0x1213 DUP2 DUP5 PUSH1 0x20 DUP9 ADD PUSH2 0xF1F JUMP JUMPDEST DUP4 MLOAD SWAP1 DUP4 ADD SWAP1 PUSH2 0x1227 DUP2 DUP4 PUSH1 0x20 DUP9 ADD PUSH2 0xF1F JUMP JUMPDEST ADD SWAP5 SWAP4 POP POP POP POP JUMP JUMPDEST PUSH1 0x20 DUP1 DUP3 MSTORE PUSH1 0x25 SWAP1 DUP3 ADD MSTORE PUSH32 0x4552433732313A207472616E736665722066726F6D20696E636F727265637420 PUSH1 0x40 DUP3 ADD MSTORE PUSH5 0x37BBB732B9 PUSH1 0xD9 SHL PUSH1 0x60 DUP3 ADD MSTORE PUSH1 0x80 ADD SWAP1 JUMP JUMPDEST PUSH1 0x20 DUP1 DUP3 MSTORE PUSH1 0x32 SWAP1 DUP3 ADD MSTORE PUSH32 0x4552433732313A207472616E7366657220746F206E6F6E204552433732315265 PUSH1 0x40 DUP3 ADD MSTORE PUSH18 0x31B2B4BB32B91034B6B83632B6B2B73A32B9 PUSH1 0x71 SHL PUSH1 0x60 DUP3 ADD MSTORE PUSH1 0x80 ADD SWAP1 JUMP JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH0 MSTORE PUSH1 0x11 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH0 REVERT JUMPDEST DUP2 DUP2 SUB DUP2 DUP2 GT ISZERO PUSH2 0x272 JUMPI PUSH2 0x272 PUSH2 0x12C7 JUMP JUMPDEST DUP1 DUP3 ADD DUP1 DUP3 GT ISZERO PUSH2 0x272 JUMPI PUSH2 0x272 PUSH2 0x12C7 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP6 DUP2 AND DUP3 MSTORE DUP5 AND PUSH1 0x20 DUP3 ADD MSTORE PUSH1 0x40 DUP2 ADD DUP4 SWAP1 MSTORE PUSH1 0x80 PUSH1 0x60 DUP3 ADD DUP2 SWAP1 MSTORE PUSH0 SWAP1 PUSH2 0x1333 SWAP1 DUP4 ADD DUP5 PUSH2 0xF41 JUMP JUMPDEST SWAP7 SWAP6 POP POP POP POP POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x134D JUMPI PUSH0 DUP1 REVERT JUMPDEST DUP2 MLOAD PUSH2 0x656 DUP2 PUSH2 0xEEF JUMP INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 0xBD 0x25 CREATE CALLDATASIZE SLT EXP 0xE 0xB1 DUP13 LOG2 0xAA SMOD SWAP15 ADDMOD ADD PUSH2 0xB5A8 COINBASE PUSH11 0xBC94A75DDE62DCA155667F PUSH13 0x64736F6C634300081500330000 ",
							"sourceMap": "169:337:11:-:0;;;291:41;;;;;;;;;;1390:113:0;;;;;;;;;;;;;-1:-1:-1;;;1390:113:0;;;;;;;;;;;;;;;;-1:-1:-1;;;1390:113:0;;;1464:5;1456;:13;;;;;;:::i;:::-;-1:-1:-1;1479:7:0;:17;1489:7;1479;:17;:::i;:::-;;1390:113;;169:337:11;;14:127:12;75:10;70:3;66:20;63:1;56:31;106:4;103:1;96:15;130:4;127:1;120:15;146:380;225:1;221:12;;;;268;;;289:61;;343:4;335:6;331:17;321:27;;289:61;396:2;388:6;385:14;365:18;362:38;359:161;;442:10;437:3;433:20;430:1;423:31;477:4;474:1;467:15;505:4;502:1;495:15;359:161;;146:380;;;:::o;657:545::-;759:2;754:3;751:11;748:448;;;795:1;820:5;816:2;809:17;865:4;861:2;851:19;935:2;923:10;919:19;916:1;912:27;906:4;902:38;971:4;959:10;956:20;953:47;;;-1:-1:-1;994:4:12;953:47;1049:2;1044:3;1040:12;1037:1;1033:20;1027:4;1023:31;1013:41;;1104:82;1122:2;1115:5;1112:13;1104:82;;;1167:17;;;1148:1;1137:13;1104:82;;;1108:3;;;748:448;657:545;;;:::o;1378:1352::-;1498:10;;-1:-1:-1;;;;;1520:30:12;;1517:56;;;1553:18;;:::i;:::-;1582:97;1672:6;1632:38;1664:4;1658:11;1632:38;:::i;:::-;1626:4;1582:97;:::i;:::-;1734:4;;1798:2;1787:14;;1815:1;1810:663;;;;2517:1;2534:6;2531:89;;;-1:-1:-1;2586:19:12;;;2580:26;2531:89;-1:-1:-1;;1335:1:12;1331:11;;;1327:24;1323:29;1313:40;1359:1;1355:11;;;1310:57;2633:81;;1780:944;;1810:663;604:1;597:14;;;641:4;628:18;;-1:-1:-1;;1846:20:12;;;1964:236;1978:7;1975:1;1972:14;1964:236;;;2067:19;;;2061:26;2046:42;;2159:27;;;;2127:1;2115:14;;;;1994:19;;1964:236;;;1968:3;2228:6;2219:7;2216:19;2213:201;;;2289:19;;;2283:26;-1:-1:-1;;2372:1:12;2368:14;;;2384:3;2364:24;2360:37;2356:42;2341:58;2326:74;;2213:201;-1:-1:-1;;;;;2460:1:12;2444:14;;;2440:22;2427:36;;-1:-1:-1;1378:1352:12:o;:::-;169:337:11;;;;;;"
						},
						"deployedBytecode": {
							"functionDebugData": {
								"@_afterTokenTransfer_943": {
									"entryPoint": null,
									"id": 943,
									"parameterSlots": 4,
									"returnSlots": 0
								},
								"@_approve_776": {
									"entryPoint": 1771,
									"id": 776,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"@_baseURI_213": {
									"entryPoint": null,
									"id": 213,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"@_beforeTokenTransfer_930": {
									"entryPoint": 2766,
									"id": 930,
									"parameterSlots": 4,
									"returnSlots": 0
								},
								"@_checkOnERC721Received_884": {
									"entryPoint": 2950,
									"id": 884,
									"parameterSlots": 4,
									"returnSlots": 1
								},
								"@_exists_445": {
									"entryPoint": null,
									"id": 445,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"@_isApprovedOrOwner_479": {
									"entryPoint": 1880,
									"id": 479,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"@_mint_600": {
									"entryPoint": 3418,
									"id": 600,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"@_msgSender_1447": {
									"entryPoint": null,
									"id": 1447,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"@_ownerOf_427": {
									"entryPoint": null,
									"id": 427,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"@_requireMinted_822": {
									"entryPoint": 1674,
									"id": 822,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"@_safeMint_494": {
									"entryPoint": 2341,
									"id": 494,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"@_safeMint_523": {
									"entryPoint": 2900,
									"id": 523,
									"parameterSlots": 3,
									"returnSlots": 0
								},
								"@_safeTransfer_414": {
									"entryPoint": 2571,
									"id": 414,
									"parameterSlots": 4,
									"returnSlots": 0
								},
								"@_setApprovalForAll_808": {
									"entryPoint": 2366,
									"id": 808,
									"parameterSlots": 3,
									"returnSlots": 0
								},
								"@_transfer_752": {
									"entryPoint": 1974,
									"id": 752,
									"parameterSlots": 3,
									"returnSlots": 0
								},
								"@approve_256": {
									"entryPoint": 812,
									"id": 256,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"@balanceOf_117": {
									"entryPoint": 1303,
									"id": 117,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"@current_1475": {
									"entryPoint": null,
									"id": 1475,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"@getApproved_274": {
									"entryPoint": 775,
									"id": 274,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"@increment_1489": {
									"entryPoint": null,
									"id": 1489,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"@isApprovedForAll_309": {
									"entryPoint": 1629,
									"id": 309,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"@isContract_1123": {
									"entryPoint": null,
									"id": 1123,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"@log10_2444": {
									"entryPoint": 3203,
									"id": 2444,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"@name_155": {
									"entryPoint": 632,
									"id": 155,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"@ownerOf_145": {
									"entryPoint": 1208,
									"id": 145,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"@safeMint_2650": {
									"entryPoint": 1142,
									"id": 2650,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"@safeTransferFrom_355": {
									"entryPoint": 1182,
									"id": 355,
									"parameterSlots": 3,
									"returnSlots": 0
								},
								"@safeTransferFrom_385": {
									"entryPoint": 1461,
									"id": 385,
									"parameterSlots": 4,
									"returnSlots": 0
								},
								"@setApprovalForAll_291": {
									"entryPoint": 1450,
									"id": 291,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"@supportsInterface_1729": {
									"entryPoint": null,
									"id": 1729,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"@supportsInterface_93": {
									"entryPoint": 551,
									"id": 93,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"@symbol_165": {
									"entryPoint": 1435,
									"id": 165,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"@toString_1589": {
									"entryPoint": 2622,
									"id": 1589,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"@tokenURI_204": {
									"entryPoint": 1517,
									"id": 204,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"@transferFrom_336": {
									"entryPoint": 1093,
									"id": 336,
									"parameterSlots": 3,
									"returnSlots": 0
								},
								"abi_decode_address": {
									"entryPoint": 3989,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_decode_tuple_t_address": {
									"entryPoint": 4113,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_tuple_t_addresst_address": {
									"entryPoint": 4428,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 2
								},
								"abi_decode_tuple_t_addresst_addresst_uint256": {
									"entryPoint": 4056,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 3
								},
								"abi_decode_tuple_t_addresst_addresst_uint256t_bytes_memory_ptr": {
									"entryPoint": 4215,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 4
								},
								"abi_decode_tuple_t_addresst_bool": {
									"entryPoint": 4138,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 2
								},
								"abi_decode_tuple_t_addresst_uint256": {
									"entryPoint": 4016,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 2
								},
								"abi_decode_tuple_t_bytes4": {
									"entryPoint": 3844,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_tuple_t_bytes4_fromMemory": {
									"entryPoint": 4925,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_tuple_t_uint256": {
									"entryPoint": 3966,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_string": {
									"entryPoint": 3905,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_tuple_packed_t_string_memory_ptr_t_string_memory_ptr__to_t_string_memory_ptr_t_string_memory_ptr__nonPadded_inplace_fromStack_reversed": {
									"entryPoint": 4610,
									"id": null,
									"parameterSlots": 3,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_address__to_t_address__fromStack_reversed": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_address_t_address_t_uint256_t_bytes_memory_ptr__to_t_address_t_address_t_uint256_t_bytes_memory_ptr__fromStack_reversed": {
									"entryPoint": 4865,
									"id": null,
									"parameterSlots": 5,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_bool__to_t_bool__fromStack_reversed": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_string_memory_ptr__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": 3948,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_12a8e5623d251e191fe4a291d9a59bcc01a4db7a1f5c20fc8de44358c18308af__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": 4533,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_1e766a06da43a53d0f4c380e06e5a342e14d5af1bf8501996c844905530ca84e__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": 4725,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_277f8ee9d5b4fc3c4149386f24de0fc1bbc63a8210e2197bfd1c0376a2ac5f48__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": 4656,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_2a63ce106ef95058ed21fd07c42a10f11dc5c32ac13a4e847923f7759f635d57__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_455fea98ea03c32d7dd1a6f1426917d80529bf47b3ccbde74e7206e889e709f4__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_45fe4329685be5ecd250fd0e6a25aea0ea4d0e30fb6a73c118b95749e6d70d05__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_6d05c90094f31cfeb8f0eb86f0a513af3f7f8992991fbde41b08aa7960677159__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_8a66f4bb6512ffbfcc3db9b42318eb65f26ac15163eaa9a1e5cfa7bee9d1c7c6__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_b08d2b0fec7cc108ab049809a8beb42779d969a49299d0c317c907d9db22974f__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_b51b4875eede07862961e8f9365c6749f5fe55c6ee5d7a9e42b6912ad0b15942__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_c6e14a63ffb144eeef7cce6988e5dce07c60a7e0a7b1ef25dbe18c61483e0a83__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"checked_add_t_uint256": {
									"entryPoint": 4846,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"checked_sub_t_uint256": {
									"entryPoint": 4827,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"copy_memory_to_memory_with_cleanup": {
									"entryPoint": 3871,
									"id": null,
									"parameterSlots": 3,
									"returnSlots": 0
								},
								"extract_byte_array_length": {
									"entryPoint": 4477,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"panic_error_0x11": {
									"entryPoint": 4807,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"panic_error_0x12": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"panic_error_0x41": {
									"entryPoint": 4195,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"validator_revert_bytes4": {
									"entryPoint": 3823,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								}
							},
							"generatedSources": [
								{
									"ast": {
										"nativeSrc": "0:11245:12",
										"nodeType": "YulBlock",
										"src": "0:11245:12",
										"statements": [
											{
												"nativeSrc": "6:3:12",
												"nodeType": "YulBlock",
												"src": "6:3:12",
												"statements": []
											},
											{
												"body": {
													"nativeSrc": "58:87:12",
													"nodeType": "YulBlock",
													"src": "58:87:12",
													"statements": [
														{
															"body": {
																"nativeSrc": "123:16:12",
																"nodeType": "YulBlock",
																"src": "123:16:12",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nativeSrc": "132:1:12",
																					"nodeType": "YulLiteral",
																					"src": "132:1:12",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "135:1:12",
																					"nodeType": "YulLiteral",
																					"src": "135:1:12",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nativeSrc": "125:6:12",
																				"nodeType": "YulIdentifier",
																				"src": "125:6:12"
																			},
																			"nativeSrc": "125:12:12",
																			"nodeType": "YulFunctionCall",
																			"src": "125:12:12"
																		},
																		"nativeSrc": "125:12:12",
																		"nodeType": "YulExpressionStatement",
																		"src": "125:12:12"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nativeSrc": "81:5:12",
																				"nodeType": "YulIdentifier",
																				"src": "81:5:12"
																			},
																			{
																				"arguments": [
																					{
																						"name": "value",
																						"nativeSrc": "92:5:12",
																						"nodeType": "YulIdentifier",
																						"src": "92:5:12"
																					},
																					{
																						"arguments": [
																							{
																								"kind": "number",
																								"nativeSrc": "103:3:12",
																								"nodeType": "YulLiteral",
																								"src": "103:3:12",
																								"type": "",
																								"value": "224"
																							},
																							{
																								"kind": "number",
																								"nativeSrc": "108:10:12",
																								"nodeType": "YulLiteral",
																								"src": "108:10:12",
																								"type": "",
																								"value": "0xffffffff"
																							}
																						],
																						"functionName": {
																							"name": "shl",
																							"nativeSrc": "99:3:12",
																							"nodeType": "YulIdentifier",
																							"src": "99:3:12"
																						},
																						"nativeSrc": "99:20:12",
																						"nodeType": "YulFunctionCall",
																						"src": "99:20:12"
																					}
																				],
																				"functionName": {
																					"name": "and",
																					"nativeSrc": "88:3:12",
																					"nodeType": "YulIdentifier",
																					"src": "88:3:12"
																				},
																				"nativeSrc": "88:32:12",
																				"nodeType": "YulFunctionCall",
																				"src": "88:32:12"
																			}
																		],
																		"functionName": {
																			"name": "eq",
																			"nativeSrc": "78:2:12",
																			"nodeType": "YulIdentifier",
																			"src": "78:2:12"
																		},
																		"nativeSrc": "78:43:12",
																		"nodeType": "YulFunctionCall",
																		"src": "78:43:12"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nativeSrc": "71:6:12",
																	"nodeType": "YulIdentifier",
																	"src": "71:6:12"
																},
																"nativeSrc": "71:51:12",
																"nodeType": "YulFunctionCall",
																"src": "71:51:12"
															},
															"nativeSrc": "68:71:12",
															"nodeType": "YulIf",
															"src": "68:71:12"
														}
													]
												},
												"name": "validator_revert_bytes4",
												"nativeSrc": "14:131:12",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "47:5:12",
														"nodeType": "YulTypedName",
														"src": "47:5:12",
														"type": ""
													}
												],
												"src": "14:131:12"
											},
											{
												"body": {
													"nativeSrc": "219:176:12",
													"nodeType": "YulBlock",
													"src": "219:176:12",
													"statements": [
														{
															"body": {
																"nativeSrc": "265:16:12",
																"nodeType": "YulBlock",
																"src": "265:16:12",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nativeSrc": "274:1:12",
																					"nodeType": "YulLiteral",
																					"src": "274:1:12",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "277:1:12",
																					"nodeType": "YulLiteral",
																					"src": "277:1:12",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nativeSrc": "267:6:12",
																				"nodeType": "YulIdentifier",
																				"src": "267:6:12"
																			},
																			"nativeSrc": "267:12:12",
																			"nodeType": "YulFunctionCall",
																			"src": "267:12:12"
																		},
																		"nativeSrc": "267:12:12",
																		"nodeType": "YulExpressionStatement",
																		"src": "267:12:12"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nativeSrc": "240:7:12",
																				"nodeType": "YulIdentifier",
																				"src": "240:7:12"
																			},
																			{
																				"name": "headStart",
																				"nativeSrc": "249:9:12",
																				"nodeType": "YulIdentifier",
																				"src": "249:9:12"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "236:3:12",
																			"nodeType": "YulIdentifier",
																			"src": "236:3:12"
																		},
																		"nativeSrc": "236:23:12",
																		"nodeType": "YulFunctionCall",
																		"src": "236:23:12"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "261:2:12",
																		"nodeType": "YulLiteral",
																		"src": "261:2:12",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nativeSrc": "232:3:12",
																	"nodeType": "YulIdentifier",
																	"src": "232:3:12"
																},
																"nativeSrc": "232:32:12",
																"nodeType": "YulFunctionCall",
																"src": "232:32:12"
															},
															"nativeSrc": "229:52:12",
															"nodeType": "YulIf",
															"src": "229:52:12"
														},
														{
															"nativeSrc": "290:36:12",
															"nodeType": "YulVariableDeclaration",
															"src": "290:36:12",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "316:9:12",
																		"nodeType": "YulIdentifier",
																		"src": "316:9:12"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nativeSrc": "303:12:12",
																	"nodeType": "YulIdentifier",
																	"src": "303:12:12"
																},
																"nativeSrc": "303:23:12",
																"nodeType": "YulFunctionCall",
																"src": "303:23:12"
															},
															"variables": [
																{
																	"name": "value",
																	"nativeSrc": "294:5:12",
																	"nodeType": "YulTypedName",
																	"src": "294:5:12",
																	"type": ""
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "359:5:12",
																		"nodeType": "YulIdentifier",
																		"src": "359:5:12"
																	}
																],
																"functionName": {
																	"name": "validator_revert_bytes4",
																	"nativeSrc": "335:23:12",
																	"nodeType": "YulIdentifier",
																	"src": "335:23:12"
																},
																"nativeSrc": "335:30:12",
																"nodeType": "YulFunctionCall",
																"src": "335:30:12"
															},
															"nativeSrc": "335:30:12",
															"nodeType": "YulExpressionStatement",
															"src": "335:30:12"
														},
														{
															"nativeSrc": "374:15:12",
															"nodeType": "YulAssignment",
															"src": "374:15:12",
															"value": {
																"name": "value",
																"nativeSrc": "384:5:12",
																"nodeType": "YulIdentifier",
																"src": "384:5:12"
															},
															"variableNames": [
																{
																	"name": "value0",
																	"nativeSrc": "374:6:12",
																	"nodeType": "YulIdentifier",
																	"src": "374:6:12"
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_bytes4",
												"nativeSrc": "150:245:12",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "185:9:12",
														"nodeType": "YulTypedName",
														"src": "185:9:12",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nativeSrc": "196:7:12",
														"nodeType": "YulTypedName",
														"src": "196:7:12",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nativeSrc": "208:6:12",
														"nodeType": "YulTypedName",
														"src": "208:6:12",
														"type": ""
													}
												],
												"src": "150:245:12"
											},
											{
												"body": {
													"nativeSrc": "495:92:12",
													"nodeType": "YulBlock",
													"src": "495:92:12",
													"statements": [
														{
															"nativeSrc": "505:26:12",
															"nodeType": "YulAssignment",
															"src": "505:26:12",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "517:9:12",
																		"nodeType": "YulIdentifier",
																		"src": "517:9:12"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "528:2:12",
																		"nodeType": "YulLiteral",
																		"src": "528:2:12",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "513:3:12",
																	"nodeType": "YulIdentifier",
																	"src": "513:3:12"
																},
																"nativeSrc": "513:18:12",
																"nodeType": "YulFunctionCall",
																"src": "513:18:12"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "505:4:12",
																	"nodeType": "YulIdentifier",
																	"src": "505:4:12"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "547:9:12",
																		"nodeType": "YulIdentifier",
																		"src": "547:9:12"
																	},
																	{
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "value0",
																						"nativeSrc": "572:6:12",
																						"nodeType": "YulIdentifier",
																						"src": "572:6:12"
																					}
																				],
																				"functionName": {
																					"name": "iszero",
																					"nativeSrc": "565:6:12",
																					"nodeType": "YulIdentifier",
																					"src": "565:6:12"
																				},
																				"nativeSrc": "565:14:12",
																				"nodeType": "YulFunctionCall",
																				"src": "565:14:12"
																			}
																		],
																		"functionName": {
																			"name": "iszero",
																			"nativeSrc": "558:6:12",
																			"nodeType": "YulIdentifier",
																			"src": "558:6:12"
																		},
																		"nativeSrc": "558:22:12",
																		"nodeType": "YulFunctionCall",
																		"src": "558:22:12"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "540:6:12",
																	"nodeType": "YulIdentifier",
																	"src": "540:6:12"
																},
																"nativeSrc": "540:41:12",
																"nodeType": "YulFunctionCall",
																"src": "540:41:12"
															},
															"nativeSrc": "540:41:12",
															"nodeType": "YulExpressionStatement",
															"src": "540:41:12"
														}
													]
												},
												"name": "abi_encode_tuple_t_bool__to_t_bool__fromStack_reversed",
												"nativeSrc": "400:187:12",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "464:9:12",
														"nodeType": "YulTypedName",
														"src": "464:9:12",
														"type": ""
													},
													{
														"name": "value0",
														"nativeSrc": "475:6:12",
														"nodeType": "YulTypedName",
														"src": "475:6:12",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "486:4:12",
														"nodeType": "YulTypedName",
														"src": "486:4:12",
														"type": ""
													}
												],
												"src": "400:187:12"
											},
											{
												"body": {
													"nativeSrc": "658:184:12",
													"nodeType": "YulBlock",
													"src": "658:184:12",
													"statements": [
														{
															"nativeSrc": "668:10:12",
															"nodeType": "YulVariableDeclaration",
															"src": "668:10:12",
															"value": {
																"kind": "number",
																"nativeSrc": "677:1:12",
																"nodeType": "YulLiteral",
																"src": "677:1:12",
																"type": "",
																"value": "0"
															},
															"variables": [
																{
																	"name": "i",
																	"nativeSrc": "672:1:12",
																	"nodeType": "YulTypedName",
																	"src": "672:1:12",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nativeSrc": "737:63:12",
																"nodeType": "YulBlock",
																"src": "737:63:12",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"arguments": [
																						{
																							"name": "dst",
																							"nativeSrc": "762:3:12",
																							"nodeType": "YulIdentifier",
																							"src": "762:3:12"
																						},
																						{
																							"name": "i",
																							"nativeSrc": "767:1:12",
																							"nodeType": "YulIdentifier",
																							"src": "767:1:12"
																						}
																					],
																					"functionName": {
																						"name": "add",
																						"nativeSrc": "758:3:12",
																						"nodeType": "YulIdentifier",
																						"src": "758:3:12"
																					},
																					"nativeSrc": "758:11:12",
																					"nodeType": "YulFunctionCall",
																					"src": "758:11:12"
																				},
																				{
																					"arguments": [
																						{
																							"arguments": [
																								{
																									"name": "src",
																									"nativeSrc": "781:3:12",
																									"nodeType": "YulIdentifier",
																									"src": "781:3:12"
																								},
																								{
																									"name": "i",
																									"nativeSrc": "786:1:12",
																									"nodeType": "YulIdentifier",
																									"src": "786:1:12"
																								}
																							],
																							"functionName": {
																								"name": "add",
																								"nativeSrc": "777:3:12",
																								"nodeType": "YulIdentifier",
																								"src": "777:3:12"
																							},
																							"nativeSrc": "777:11:12",
																							"nodeType": "YulFunctionCall",
																							"src": "777:11:12"
																						}
																					],
																					"functionName": {
																						"name": "mload",
																						"nativeSrc": "771:5:12",
																						"nodeType": "YulIdentifier",
																						"src": "771:5:12"
																					},
																					"nativeSrc": "771:18:12",
																					"nodeType": "YulFunctionCall",
																					"src": "771:18:12"
																				}
																			],
																			"functionName": {
																				"name": "mstore",
																				"nativeSrc": "751:6:12",
																				"nodeType": "YulIdentifier",
																				"src": "751:6:12"
																			},
																			"nativeSrc": "751:39:12",
																			"nodeType": "YulFunctionCall",
																			"src": "751:39:12"
																		},
																		"nativeSrc": "751:39:12",
																		"nodeType": "YulExpressionStatement",
																		"src": "751:39:12"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "i",
																		"nativeSrc": "698:1:12",
																		"nodeType": "YulIdentifier",
																		"src": "698:1:12"
																	},
																	{
																		"name": "length",
																		"nativeSrc": "701:6:12",
																		"nodeType": "YulIdentifier",
																		"src": "701:6:12"
																	}
																],
																"functionName": {
																	"name": "lt",
																	"nativeSrc": "695:2:12",
																	"nodeType": "YulIdentifier",
																	"src": "695:2:12"
																},
																"nativeSrc": "695:13:12",
																"nodeType": "YulFunctionCall",
																"src": "695:13:12"
															},
															"nativeSrc": "687:113:12",
															"nodeType": "YulForLoop",
															"post": {
																"nativeSrc": "709:19:12",
																"nodeType": "YulBlock",
																"src": "709:19:12",
																"statements": [
																	{
																		"nativeSrc": "711:15:12",
																		"nodeType": "YulAssignment",
																		"src": "711:15:12",
																		"value": {
																			"arguments": [
																				{
																					"name": "i",
																					"nativeSrc": "720:1:12",
																					"nodeType": "YulIdentifier",
																					"src": "720:1:12"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "723:2:12",
																					"nodeType": "YulLiteral",
																					"src": "723:2:12",
																					"type": "",
																					"value": "32"
																				}
																			],
																			"functionName": {
																				"name": "add",
																				"nativeSrc": "716:3:12",
																				"nodeType": "YulIdentifier",
																				"src": "716:3:12"
																			},
																			"nativeSrc": "716:10:12",
																			"nodeType": "YulFunctionCall",
																			"src": "716:10:12"
																		},
																		"variableNames": [
																			{
																				"name": "i",
																				"nativeSrc": "711:1:12",
																				"nodeType": "YulIdentifier",
																				"src": "711:1:12"
																			}
																		]
																	}
																]
															},
															"pre": {
																"nativeSrc": "691:3:12",
																"nodeType": "YulBlock",
																"src": "691:3:12",
																"statements": []
															},
															"src": "687:113:12"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dst",
																				"nativeSrc": "820:3:12",
																				"nodeType": "YulIdentifier",
																				"src": "820:3:12"
																			},
																			{
																				"name": "length",
																				"nativeSrc": "825:6:12",
																				"nodeType": "YulIdentifier",
																				"src": "825:6:12"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "816:3:12",
																			"nodeType": "YulIdentifier",
																			"src": "816:3:12"
																		},
																		"nativeSrc": "816:16:12",
																		"nodeType": "YulFunctionCall",
																		"src": "816:16:12"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "834:1:12",
																		"nodeType": "YulLiteral",
																		"src": "834:1:12",
																		"type": "",
																		"value": "0"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "809:6:12",
																	"nodeType": "YulIdentifier",
																	"src": "809:6:12"
																},
																"nativeSrc": "809:27:12",
																"nodeType": "YulFunctionCall",
																"src": "809:27:12"
															},
															"nativeSrc": "809:27:12",
															"nodeType": "YulExpressionStatement",
															"src": "809:27:12"
														}
													]
												},
												"name": "copy_memory_to_memory_with_cleanup",
												"nativeSrc": "592:250:12",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "src",
														"nativeSrc": "636:3:12",
														"nodeType": "YulTypedName",
														"src": "636:3:12",
														"type": ""
													},
													{
														"name": "dst",
														"nativeSrc": "641:3:12",
														"nodeType": "YulTypedName",
														"src": "641:3:12",
														"type": ""
													},
													{
														"name": "length",
														"nativeSrc": "646:6:12",
														"nodeType": "YulTypedName",
														"src": "646:6:12",
														"type": ""
													}
												],
												"src": "592:250:12"
											},
											{
												"body": {
													"nativeSrc": "897:221:12",
													"nodeType": "YulBlock",
													"src": "897:221:12",
													"statements": [
														{
															"nativeSrc": "907:26:12",
															"nodeType": "YulVariableDeclaration",
															"src": "907:26:12",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "927:5:12",
																		"nodeType": "YulIdentifier",
																		"src": "927:5:12"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nativeSrc": "921:5:12",
																	"nodeType": "YulIdentifier",
																	"src": "921:5:12"
																},
																"nativeSrc": "921:12:12",
																"nodeType": "YulFunctionCall",
																"src": "921:12:12"
															},
															"variables": [
																{
																	"name": "length",
																	"nativeSrc": "911:6:12",
																	"nodeType": "YulTypedName",
																	"src": "911:6:12",
																	"type": ""
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "949:3:12",
																		"nodeType": "YulIdentifier",
																		"src": "949:3:12"
																	},
																	{
																		"name": "length",
																		"nativeSrc": "954:6:12",
																		"nodeType": "YulIdentifier",
																		"src": "954:6:12"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "942:6:12",
																	"nodeType": "YulIdentifier",
																	"src": "942:6:12"
																},
																"nativeSrc": "942:19:12",
																"nodeType": "YulFunctionCall",
																"src": "942:19:12"
															},
															"nativeSrc": "942:19:12",
															"nodeType": "YulExpressionStatement",
															"src": "942:19:12"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nativeSrc": "1009:5:12",
																				"nodeType": "YulIdentifier",
																				"src": "1009:5:12"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "1016:4:12",
																				"nodeType": "YulLiteral",
																				"src": "1016:4:12",
																				"type": "",
																				"value": "0x20"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "1005:3:12",
																			"nodeType": "YulIdentifier",
																			"src": "1005:3:12"
																		},
																		"nativeSrc": "1005:16:12",
																		"nodeType": "YulFunctionCall",
																		"src": "1005:16:12"
																	},
																	{
																		"arguments": [
																			{
																				"name": "pos",
																				"nativeSrc": "1027:3:12",
																				"nodeType": "YulIdentifier",
																				"src": "1027:3:12"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "1032:4:12",
																				"nodeType": "YulLiteral",
																				"src": "1032:4:12",
																				"type": "",
																				"value": "0x20"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "1023:3:12",
																			"nodeType": "YulIdentifier",
																			"src": "1023:3:12"
																		},
																		"nativeSrc": "1023:14:12",
																		"nodeType": "YulFunctionCall",
																		"src": "1023:14:12"
																	},
																	{
																		"name": "length",
																		"nativeSrc": "1039:6:12",
																		"nodeType": "YulIdentifier",
																		"src": "1039:6:12"
																	}
																],
																"functionName": {
																	"name": "copy_memory_to_memory_with_cleanup",
																	"nativeSrc": "970:34:12",
																	"nodeType": "YulIdentifier",
																	"src": "970:34:12"
																},
																"nativeSrc": "970:76:12",
																"nodeType": "YulFunctionCall",
																"src": "970:76:12"
															},
															"nativeSrc": "970:76:12",
															"nodeType": "YulExpressionStatement",
															"src": "970:76:12"
														},
														{
															"nativeSrc": "1055:57:12",
															"nodeType": "YulAssignment",
															"src": "1055:57:12",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "pos",
																				"nativeSrc": "1070:3:12",
																				"nodeType": "YulIdentifier",
																				"src": "1070:3:12"
																			},
																			{
																				"arguments": [
																					{
																						"arguments": [
																							{
																								"name": "length",
																								"nativeSrc": "1083:6:12",
																								"nodeType": "YulIdentifier",
																								"src": "1083:6:12"
																							},
																							{
																								"kind": "number",
																								"nativeSrc": "1091:2:12",
																								"nodeType": "YulLiteral",
																								"src": "1091:2:12",
																								"type": "",
																								"value": "31"
																							}
																						],
																						"functionName": {
																							"name": "add",
																							"nativeSrc": "1079:3:12",
																							"nodeType": "YulIdentifier",
																							"src": "1079:3:12"
																						},
																						"nativeSrc": "1079:15:12",
																						"nodeType": "YulFunctionCall",
																						"src": "1079:15:12"
																					},
																					{
																						"arguments": [
																							{
																								"kind": "number",
																								"nativeSrc": "1100:2:12",
																								"nodeType": "YulLiteral",
																								"src": "1100:2:12",
																								"type": "",
																								"value": "31"
																							}
																						],
																						"functionName": {
																							"name": "not",
																							"nativeSrc": "1096:3:12",
																							"nodeType": "YulIdentifier",
																							"src": "1096:3:12"
																						},
																						"nativeSrc": "1096:7:12",
																						"nodeType": "YulFunctionCall",
																						"src": "1096:7:12"
																					}
																				],
																				"functionName": {
																					"name": "and",
																					"nativeSrc": "1075:3:12",
																					"nodeType": "YulIdentifier",
																					"src": "1075:3:12"
																				},
																				"nativeSrc": "1075:29:12",
																				"nodeType": "YulFunctionCall",
																				"src": "1075:29:12"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "1066:3:12",
																			"nodeType": "YulIdentifier",
																			"src": "1066:3:12"
																		},
																		"nativeSrc": "1066:39:12",
																		"nodeType": "YulFunctionCall",
																		"src": "1066:39:12"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "1107:4:12",
																		"nodeType": "YulLiteral",
																		"src": "1107:4:12",
																		"type": "",
																		"value": "0x20"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "1062:3:12",
																	"nodeType": "YulIdentifier",
																	"src": "1062:3:12"
																},
																"nativeSrc": "1062:50:12",
																"nodeType": "YulFunctionCall",
																"src": "1062:50:12"
															},
															"variableNames": [
																{
																	"name": "end",
																	"nativeSrc": "1055:3:12",
																	"nodeType": "YulIdentifier",
																	"src": "1055:3:12"
																}
															]
														}
													]
												},
												"name": "abi_encode_string",
												"nativeSrc": "847:271:12",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "874:5:12",
														"nodeType": "YulTypedName",
														"src": "874:5:12",
														"type": ""
													},
													{
														"name": "pos",
														"nativeSrc": "881:3:12",
														"nodeType": "YulTypedName",
														"src": "881:3:12",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "end",
														"nativeSrc": "889:3:12",
														"nodeType": "YulTypedName",
														"src": "889:3:12",
														"type": ""
													}
												],
												"src": "847:271:12"
											},
											{
												"body": {
													"nativeSrc": "1244:99:12",
													"nodeType": "YulBlock",
													"src": "1244:99:12",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "1261:9:12",
																		"nodeType": "YulIdentifier",
																		"src": "1261:9:12"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "1272:2:12",
																		"nodeType": "YulLiteral",
																		"src": "1272:2:12",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "1254:6:12",
																	"nodeType": "YulIdentifier",
																	"src": "1254:6:12"
																},
																"nativeSrc": "1254:21:12",
																"nodeType": "YulFunctionCall",
																"src": "1254:21:12"
															},
															"nativeSrc": "1254:21:12",
															"nodeType": "YulExpressionStatement",
															"src": "1254:21:12"
														},
														{
															"nativeSrc": "1284:53:12",
															"nodeType": "YulAssignment",
															"src": "1284:53:12",
															"value": {
																"arguments": [
																	{
																		"name": "value0",
																		"nativeSrc": "1310:6:12",
																		"nodeType": "YulIdentifier",
																		"src": "1310:6:12"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "1322:9:12",
																				"nodeType": "YulIdentifier",
																				"src": "1322:9:12"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "1333:2:12",
																				"nodeType": "YulLiteral",
																				"src": "1333:2:12",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "1318:3:12",
																			"nodeType": "YulIdentifier",
																			"src": "1318:3:12"
																		},
																		"nativeSrc": "1318:18:12",
																		"nodeType": "YulFunctionCall",
																		"src": "1318:18:12"
																	}
																],
																"functionName": {
																	"name": "abi_encode_string",
																	"nativeSrc": "1292:17:12",
																	"nodeType": "YulIdentifier",
																	"src": "1292:17:12"
																},
																"nativeSrc": "1292:45:12",
																"nodeType": "YulFunctionCall",
																"src": "1292:45:12"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "1284:4:12",
																	"nodeType": "YulIdentifier",
																	"src": "1284:4:12"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_string_memory_ptr__to_t_string_memory_ptr__fromStack_reversed",
												"nativeSrc": "1123:220:12",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "1213:9:12",
														"nodeType": "YulTypedName",
														"src": "1213:9:12",
														"type": ""
													},
													{
														"name": "value0",
														"nativeSrc": "1224:6:12",
														"nodeType": "YulTypedName",
														"src": "1224:6:12",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "1235:4:12",
														"nodeType": "YulTypedName",
														"src": "1235:4:12",
														"type": ""
													}
												],
												"src": "1123:220:12"
											},
											{
												"body": {
													"nativeSrc": "1418:110:12",
													"nodeType": "YulBlock",
													"src": "1418:110:12",
													"statements": [
														{
															"body": {
																"nativeSrc": "1464:16:12",
																"nodeType": "YulBlock",
																"src": "1464:16:12",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nativeSrc": "1473:1:12",
																					"nodeType": "YulLiteral",
																					"src": "1473:1:12",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "1476:1:12",
																					"nodeType": "YulLiteral",
																					"src": "1476:1:12",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nativeSrc": "1466:6:12",
																				"nodeType": "YulIdentifier",
																				"src": "1466:6:12"
																			},
																			"nativeSrc": "1466:12:12",
																			"nodeType": "YulFunctionCall",
																			"src": "1466:12:12"
																		},
																		"nativeSrc": "1466:12:12",
																		"nodeType": "YulExpressionStatement",
																		"src": "1466:12:12"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nativeSrc": "1439:7:12",
																				"nodeType": "YulIdentifier",
																				"src": "1439:7:12"
																			},
																			{
																				"name": "headStart",
																				"nativeSrc": "1448:9:12",
																				"nodeType": "YulIdentifier",
																				"src": "1448:9:12"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "1435:3:12",
																			"nodeType": "YulIdentifier",
																			"src": "1435:3:12"
																		},
																		"nativeSrc": "1435:23:12",
																		"nodeType": "YulFunctionCall",
																		"src": "1435:23:12"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "1460:2:12",
																		"nodeType": "YulLiteral",
																		"src": "1460:2:12",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nativeSrc": "1431:3:12",
																	"nodeType": "YulIdentifier",
																	"src": "1431:3:12"
																},
																"nativeSrc": "1431:32:12",
																"nodeType": "YulFunctionCall",
																"src": "1431:32:12"
															},
															"nativeSrc": "1428:52:12",
															"nodeType": "YulIf",
															"src": "1428:52:12"
														},
														{
															"nativeSrc": "1489:33:12",
															"nodeType": "YulAssignment",
															"src": "1489:33:12",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "1512:9:12",
																		"nodeType": "YulIdentifier",
																		"src": "1512:9:12"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nativeSrc": "1499:12:12",
																	"nodeType": "YulIdentifier",
																	"src": "1499:12:12"
																},
																"nativeSrc": "1499:23:12",
																"nodeType": "YulFunctionCall",
																"src": "1499:23:12"
															},
															"variableNames": [
																{
																	"name": "value0",
																	"nativeSrc": "1489:6:12",
																	"nodeType": "YulIdentifier",
																	"src": "1489:6:12"
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_uint256",
												"nativeSrc": "1348:180:12",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "1384:9:12",
														"nodeType": "YulTypedName",
														"src": "1384:9:12",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nativeSrc": "1395:7:12",
														"nodeType": "YulTypedName",
														"src": "1395:7:12",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nativeSrc": "1407:6:12",
														"nodeType": "YulTypedName",
														"src": "1407:6:12",
														"type": ""
													}
												],
												"src": "1348:180:12"
											},
											{
												"body": {
													"nativeSrc": "1634:102:12",
													"nodeType": "YulBlock",
													"src": "1634:102:12",
													"statements": [
														{
															"nativeSrc": "1644:26:12",
															"nodeType": "YulAssignment",
															"src": "1644:26:12",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "1656:9:12",
																		"nodeType": "YulIdentifier",
																		"src": "1656:9:12"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "1667:2:12",
																		"nodeType": "YulLiteral",
																		"src": "1667:2:12",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "1652:3:12",
																	"nodeType": "YulIdentifier",
																	"src": "1652:3:12"
																},
																"nativeSrc": "1652:18:12",
																"nodeType": "YulFunctionCall",
																"src": "1652:18:12"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "1644:4:12",
																	"nodeType": "YulIdentifier",
																	"src": "1644:4:12"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "1686:9:12",
																		"nodeType": "YulIdentifier",
																		"src": "1686:9:12"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value0",
																				"nativeSrc": "1701:6:12",
																				"nodeType": "YulIdentifier",
																				"src": "1701:6:12"
																			},
																			{
																				"arguments": [
																					{
																						"arguments": [
																							{
																								"kind": "number",
																								"nativeSrc": "1717:3:12",
																								"nodeType": "YulLiteral",
																								"src": "1717:3:12",
																								"type": "",
																								"value": "160"
																							},
																							{
																								"kind": "number",
																								"nativeSrc": "1722:1:12",
																								"nodeType": "YulLiteral",
																								"src": "1722:1:12",
																								"type": "",
																								"value": "1"
																							}
																						],
																						"functionName": {
																							"name": "shl",
																							"nativeSrc": "1713:3:12",
																							"nodeType": "YulIdentifier",
																							"src": "1713:3:12"
																						},
																						"nativeSrc": "1713:11:12",
																						"nodeType": "YulFunctionCall",
																						"src": "1713:11:12"
																					},
																					{
																						"kind": "number",
																						"nativeSrc": "1726:1:12",
																						"nodeType": "YulLiteral",
																						"src": "1726:1:12",
																						"type": "",
																						"value": "1"
																					}
																				],
																				"functionName": {
																					"name": "sub",
																					"nativeSrc": "1709:3:12",
																					"nodeType": "YulIdentifier",
																					"src": "1709:3:12"
																				},
																				"nativeSrc": "1709:19:12",
																				"nodeType": "YulFunctionCall",
																				"src": "1709:19:12"
																			}
																		],
																		"functionName": {
																			"name": "and",
																			"nativeSrc": "1697:3:12",
																			"nodeType": "YulIdentifier",
																			"src": "1697:3:12"
																		},
																		"nativeSrc": "1697:32:12",
																		"nodeType": "YulFunctionCall",
																		"src": "1697:32:12"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "1679:6:12",
																	"nodeType": "YulIdentifier",
																	"src": "1679:6:12"
																},
																"nativeSrc": "1679:51:12",
																"nodeType": "YulFunctionCall",
																"src": "1679:51:12"
															},
															"nativeSrc": "1679:51:12",
															"nodeType": "YulExpressionStatement",
															"src": "1679:51:12"
														}
													]
												},
												"name": "abi_encode_tuple_t_address__to_t_address__fromStack_reversed",
												"nativeSrc": "1533:203:12",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "1603:9:12",
														"nodeType": "YulTypedName",
														"src": "1603:9:12",
														"type": ""
													},
													{
														"name": "value0",
														"nativeSrc": "1614:6:12",
														"nodeType": "YulTypedName",
														"src": "1614:6:12",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "1625:4:12",
														"nodeType": "YulTypedName",
														"src": "1625:4:12",
														"type": ""
													}
												],
												"src": "1533:203:12"
											},
											{
												"body": {
													"nativeSrc": "1790:124:12",
													"nodeType": "YulBlock",
													"src": "1790:124:12",
													"statements": [
														{
															"nativeSrc": "1800:29:12",
															"nodeType": "YulAssignment",
															"src": "1800:29:12",
															"value": {
																"arguments": [
																	{
																		"name": "offset",
																		"nativeSrc": "1822:6:12",
																		"nodeType": "YulIdentifier",
																		"src": "1822:6:12"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nativeSrc": "1809:12:12",
																	"nodeType": "YulIdentifier",
																	"src": "1809:12:12"
																},
																"nativeSrc": "1809:20:12",
																"nodeType": "YulFunctionCall",
																"src": "1809:20:12"
															},
															"variableNames": [
																{
																	"name": "value",
																	"nativeSrc": "1800:5:12",
																	"nodeType": "YulIdentifier",
																	"src": "1800:5:12"
																}
															]
														},
														{
															"body": {
																"nativeSrc": "1892:16:12",
																"nodeType": "YulBlock",
																"src": "1892:16:12",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nativeSrc": "1901:1:12",
																					"nodeType": "YulLiteral",
																					"src": "1901:1:12",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "1904:1:12",
																					"nodeType": "YulLiteral",
																					"src": "1904:1:12",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nativeSrc": "1894:6:12",
																				"nodeType": "YulIdentifier",
																				"src": "1894:6:12"
																			},
																			"nativeSrc": "1894:12:12",
																			"nodeType": "YulFunctionCall",
																			"src": "1894:12:12"
																		},
																		"nativeSrc": "1894:12:12",
																		"nodeType": "YulExpressionStatement",
																		"src": "1894:12:12"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nativeSrc": "1851:5:12",
																				"nodeType": "YulIdentifier",
																				"src": "1851:5:12"
																			},
																			{
																				"arguments": [
																					{
																						"name": "value",
																						"nativeSrc": "1862:5:12",
																						"nodeType": "YulIdentifier",
																						"src": "1862:5:12"
																					},
																					{
																						"arguments": [
																							{
																								"arguments": [
																									{
																										"kind": "number",
																										"nativeSrc": "1877:3:12",
																										"nodeType": "YulLiteral",
																										"src": "1877:3:12",
																										"type": "",
																										"value": "160"
																									},
																									{
																										"kind": "number",
																										"nativeSrc": "1882:1:12",
																										"nodeType": "YulLiteral",
																										"src": "1882:1:12",
																										"type": "",
																										"value": "1"
																									}
																								],
																								"functionName": {
																									"name": "shl",
																									"nativeSrc": "1873:3:12",
																									"nodeType": "YulIdentifier",
																									"src": "1873:3:12"
																								},
																								"nativeSrc": "1873:11:12",
																								"nodeType": "YulFunctionCall",
																								"src": "1873:11:12"
																							},
																							{
																								"kind": "number",
																								"nativeSrc": "1886:1:12",
																								"nodeType": "YulLiteral",
																								"src": "1886:1:12",
																								"type": "",
																								"value": "1"
																							}
																						],
																						"functionName": {
																							"name": "sub",
																							"nativeSrc": "1869:3:12",
																							"nodeType": "YulIdentifier",
																							"src": "1869:3:12"
																						},
																						"nativeSrc": "1869:19:12",
																						"nodeType": "YulFunctionCall",
																						"src": "1869:19:12"
																					}
																				],
																				"functionName": {
																					"name": "and",
																					"nativeSrc": "1858:3:12",
																					"nodeType": "YulIdentifier",
																					"src": "1858:3:12"
																				},
																				"nativeSrc": "1858:31:12",
																				"nodeType": "YulFunctionCall",
																				"src": "1858:31:12"
																			}
																		],
																		"functionName": {
																			"name": "eq",
																			"nativeSrc": "1848:2:12",
																			"nodeType": "YulIdentifier",
																			"src": "1848:2:12"
																		},
																		"nativeSrc": "1848:42:12",
																		"nodeType": "YulFunctionCall",
																		"src": "1848:42:12"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nativeSrc": "1841:6:12",
																	"nodeType": "YulIdentifier",
																	"src": "1841:6:12"
																},
																"nativeSrc": "1841:50:12",
																"nodeType": "YulFunctionCall",
																"src": "1841:50:12"
															},
															"nativeSrc": "1838:70:12",
															"nodeType": "YulIf",
															"src": "1838:70:12"
														}
													]
												},
												"name": "abi_decode_address",
												"nativeSrc": "1741:173:12",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "offset",
														"nativeSrc": "1769:6:12",
														"nodeType": "YulTypedName",
														"src": "1769:6:12",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value",
														"nativeSrc": "1780:5:12",
														"nodeType": "YulTypedName",
														"src": "1780:5:12",
														"type": ""
													}
												],
												"src": "1741:173:12"
											},
											{
												"body": {
													"nativeSrc": "2006:167:12",
													"nodeType": "YulBlock",
													"src": "2006:167:12",
													"statements": [
														{
															"body": {
																"nativeSrc": "2052:16:12",
																"nodeType": "YulBlock",
																"src": "2052:16:12",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nativeSrc": "2061:1:12",
																					"nodeType": "YulLiteral",
																					"src": "2061:1:12",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "2064:1:12",
																					"nodeType": "YulLiteral",
																					"src": "2064:1:12",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nativeSrc": "2054:6:12",
																				"nodeType": "YulIdentifier",
																				"src": "2054:6:12"
																			},
																			"nativeSrc": "2054:12:12",
																			"nodeType": "YulFunctionCall",
																			"src": "2054:12:12"
																		},
																		"nativeSrc": "2054:12:12",
																		"nodeType": "YulExpressionStatement",
																		"src": "2054:12:12"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nativeSrc": "2027:7:12",
																				"nodeType": "YulIdentifier",
																				"src": "2027:7:12"
																			},
																			{
																				"name": "headStart",
																				"nativeSrc": "2036:9:12",
																				"nodeType": "YulIdentifier",
																				"src": "2036:9:12"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "2023:3:12",
																			"nodeType": "YulIdentifier",
																			"src": "2023:3:12"
																		},
																		"nativeSrc": "2023:23:12",
																		"nodeType": "YulFunctionCall",
																		"src": "2023:23:12"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "2048:2:12",
																		"nodeType": "YulLiteral",
																		"src": "2048:2:12",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nativeSrc": "2019:3:12",
																	"nodeType": "YulIdentifier",
																	"src": "2019:3:12"
																},
																"nativeSrc": "2019:32:12",
																"nodeType": "YulFunctionCall",
																"src": "2019:32:12"
															},
															"nativeSrc": "2016:52:12",
															"nodeType": "YulIf",
															"src": "2016:52:12"
														},
														{
															"nativeSrc": "2077:39:12",
															"nodeType": "YulAssignment",
															"src": "2077:39:12",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "2106:9:12",
																		"nodeType": "YulIdentifier",
																		"src": "2106:9:12"
																	}
																],
																"functionName": {
																	"name": "abi_decode_address",
																	"nativeSrc": "2087:18:12",
																	"nodeType": "YulIdentifier",
																	"src": "2087:18:12"
																},
																"nativeSrc": "2087:29:12",
																"nodeType": "YulFunctionCall",
																"src": "2087:29:12"
															},
															"variableNames": [
																{
																	"name": "value0",
																	"nativeSrc": "2077:6:12",
																	"nodeType": "YulIdentifier",
																	"src": "2077:6:12"
																}
															]
														},
														{
															"nativeSrc": "2125:42:12",
															"nodeType": "YulAssignment",
															"src": "2125:42:12",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "2152:9:12",
																				"nodeType": "YulIdentifier",
																				"src": "2152:9:12"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "2163:2:12",
																				"nodeType": "YulLiteral",
																				"src": "2163:2:12",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "2148:3:12",
																			"nodeType": "YulIdentifier",
																			"src": "2148:3:12"
																		},
																		"nativeSrc": "2148:18:12",
																		"nodeType": "YulFunctionCall",
																		"src": "2148:18:12"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nativeSrc": "2135:12:12",
																	"nodeType": "YulIdentifier",
																	"src": "2135:12:12"
																},
																"nativeSrc": "2135:32:12",
																"nodeType": "YulFunctionCall",
																"src": "2135:32:12"
															},
															"variableNames": [
																{
																	"name": "value1",
																	"nativeSrc": "2125:6:12",
																	"nodeType": "YulIdentifier",
																	"src": "2125:6:12"
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_addresst_uint256",
												"nativeSrc": "1919:254:12",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "1964:9:12",
														"nodeType": "YulTypedName",
														"src": "1964:9:12",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nativeSrc": "1975:7:12",
														"nodeType": "YulTypedName",
														"src": "1975:7:12",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nativeSrc": "1987:6:12",
														"nodeType": "YulTypedName",
														"src": "1987:6:12",
														"type": ""
													},
													{
														"name": "value1",
														"nativeSrc": "1995:6:12",
														"nodeType": "YulTypedName",
														"src": "1995:6:12",
														"type": ""
													}
												],
												"src": "1919:254:12"
											},
											{
												"body": {
													"nativeSrc": "2282:224:12",
													"nodeType": "YulBlock",
													"src": "2282:224:12",
													"statements": [
														{
															"body": {
																"nativeSrc": "2328:16:12",
																"nodeType": "YulBlock",
																"src": "2328:16:12",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nativeSrc": "2337:1:12",
																					"nodeType": "YulLiteral",
																					"src": "2337:1:12",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "2340:1:12",
																					"nodeType": "YulLiteral",
																					"src": "2340:1:12",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nativeSrc": "2330:6:12",
																				"nodeType": "YulIdentifier",
																				"src": "2330:6:12"
																			},
																			"nativeSrc": "2330:12:12",
																			"nodeType": "YulFunctionCall",
																			"src": "2330:12:12"
																		},
																		"nativeSrc": "2330:12:12",
																		"nodeType": "YulExpressionStatement",
																		"src": "2330:12:12"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nativeSrc": "2303:7:12",
																				"nodeType": "YulIdentifier",
																				"src": "2303:7:12"
																			},
																			{
																				"name": "headStart",
																				"nativeSrc": "2312:9:12",
																				"nodeType": "YulIdentifier",
																				"src": "2312:9:12"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "2299:3:12",
																			"nodeType": "YulIdentifier",
																			"src": "2299:3:12"
																		},
																		"nativeSrc": "2299:23:12",
																		"nodeType": "YulFunctionCall",
																		"src": "2299:23:12"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "2324:2:12",
																		"nodeType": "YulLiteral",
																		"src": "2324:2:12",
																		"type": "",
																		"value": "96"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nativeSrc": "2295:3:12",
																	"nodeType": "YulIdentifier",
																	"src": "2295:3:12"
																},
																"nativeSrc": "2295:32:12",
																"nodeType": "YulFunctionCall",
																"src": "2295:32:12"
															},
															"nativeSrc": "2292:52:12",
															"nodeType": "YulIf",
															"src": "2292:52:12"
														},
														{
															"nativeSrc": "2353:39:12",
															"nodeType": "YulAssignment",
															"src": "2353:39:12",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "2382:9:12",
																		"nodeType": "YulIdentifier",
																		"src": "2382:9:12"
																	}
																],
																"functionName": {
																	"name": "abi_decode_address",
																	"nativeSrc": "2363:18:12",
																	"nodeType": "YulIdentifier",
																	"src": "2363:18:12"
																},
																"nativeSrc": "2363:29:12",
																"nodeType": "YulFunctionCall",
																"src": "2363:29:12"
															},
															"variableNames": [
																{
																	"name": "value0",
																	"nativeSrc": "2353:6:12",
																	"nodeType": "YulIdentifier",
																	"src": "2353:6:12"
																}
															]
														},
														{
															"nativeSrc": "2401:48:12",
															"nodeType": "YulAssignment",
															"src": "2401:48:12",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "2434:9:12",
																				"nodeType": "YulIdentifier",
																				"src": "2434:9:12"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "2445:2:12",
																				"nodeType": "YulLiteral",
																				"src": "2445:2:12",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "2430:3:12",
																			"nodeType": "YulIdentifier",
																			"src": "2430:3:12"
																		},
																		"nativeSrc": "2430:18:12",
																		"nodeType": "YulFunctionCall",
																		"src": "2430:18:12"
																	}
																],
																"functionName": {
																	"name": "abi_decode_address",
																	"nativeSrc": "2411:18:12",
																	"nodeType": "YulIdentifier",
																	"src": "2411:18:12"
																},
																"nativeSrc": "2411:38:12",
																"nodeType": "YulFunctionCall",
																"src": "2411:38:12"
															},
															"variableNames": [
																{
																	"name": "value1",
																	"nativeSrc": "2401:6:12",
																	"nodeType": "YulIdentifier",
																	"src": "2401:6:12"
																}
															]
														},
														{
															"nativeSrc": "2458:42:12",
															"nodeType": "YulAssignment",
															"src": "2458:42:12",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "2485:9:12",
																				"nodeType": "YulIdentifier",
																				"src": "2485:9:12"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "2496:2:12",
																				"nodeType": "YulLiteral",
																				"src": "2496:2:12",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "2481:3:12",
																			"nodeType": "YulIdentifier",
																			"src": "2481:3:12"
																		},
																		"nativeSrc": "2481:18:12",
																		"nodeType": "YulFunctionCall",
																		"src": "2481:18:12"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nativeSrc": "2468:12:12",
																	"nodeType": "YulIdentifier",
																	"src": "2468:12:12"
																},
																"nativeSrc": "2468:32:12",
																"nodeType": "YulFunctionCall",
																"src": "2468:32:12"
															},
															"variableNames": [
																{
																	"name": "value2",
																	"nativeSrc": "2458:6:12",
																	"nodeType": "YulIdentifier",
																	"src": "2458:6:12"
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_addresst_addresst_uint256",
												"nativeSrc": "2178:328:12",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "2232:9:12",
														"nodeType": "YulTypedName",
														"src": "2232:9:12",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nativeSrc": "2243:7:12",
														"nodeType": "YulTypedName",
														"src": "2243:7:12",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nativeSrc": "2255:6:12",
														"nodeType": "YulTypedName",
														"src": "2255:6:12",
														"type": ""
													},
													{
														"name": "value1",
														"nativeSrc": "2263:6:12",
														"nodeType": "YulTypedName",
														"src": "2263:6:12",
														"type": ""
													},
													{
														"name": "value2",
														"nativeSrc": "2271:6:12",
														"nodeType": "YulTypedName",
														"src": "2271:6:12",
														"type": ""
													}
												],
												"src": "2178:328:12"
											},
											{
												"body": {
													"nativeSrc": "2581:116:12",
													"nodeType": "YulBlock",
													"src": "2581:116:12",
													"statements": [
														{
															"body": {
																"nativeSrc": "2627:16:12",
																"nodeType": "YulBlock",
																"src": "2627:16:12",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nativeSrc": "2636:1:12",
																					"nodeType": "YulLiteral",
																					"src": "2636:1:12",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "2639:1:12",
																					"nodeType": "YulLiteral",
																					"src": "2639:1:12",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nativeSrc": "2629:6:12",
																				"nodeType": "YulIdentifier",
																				"src": "2629:6:12"
																			},
																			"nativeSrc": "2629:12:12",
																			"nodeType": "YulFunctionCall",
																			"src": "2629:12:12"
																		},
																		"nativeSrc": "2629:12:12",
																		"nodeType": "YulExpressionStatement",
																		"src": "2629:12:12"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nativeSrc": "2602:7:12",
																				"nodeType": "YulIdentifier",
																				"src": "2602:7:12"
																			},
																			{
																				"name": "headStart",
																				"nativeSrc": "2611:9:12",
																				"nodeType": "YulIdentifier",
																				"src": "2611:9:12"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "2598:3:12",
																			"nodeType": "YulIdentifier",
																			"src": "2598:3:12"
																		},
																		"nativeSrc": "2598:23:12",
																		"nodeType": "YulFunctionCall",
																		"src": "2598:23:12"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "2623:2:12",
																		"nodeType": "YulLiteral",
																		"src": "2623:2:12",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nativeSrc": "2594:3:12",
																	"nodeType": "YulIdentifier",
																	"src": "2594:3:12"
																},
																"nativeSrc": "2594:32:12",
																"nodeType": "YulFunctionCall",
																"src": "2594:32:12"
															},
															"nativeSrc": "2591:52:12",
															"nodeType": "YulIf",
															"src": "2591:52:12"
														},
														{
															"nativeSrc": "2652:39:12",
															"nodeType": "YulAssignment",
															"src": "2652:39:12",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "2681:9:12",
																		"nodeType": "YulIdentifier",
																		"src": "2681:9:12"
																	}
																],
																"functionName": {
																	"name": "abi_decode_address",
																	"nativeSrc": "2662:18:12",
																	"nodeType": "YulIdentifier",
																	"src": "2662:18:12"
																},
																"nativeSrc": "2662:29:12",
																"nodeType": "YulFunctionCall",
																"src": "2662:29:12"
															},
															"variableNames": [
																{
																	"name": "value0",
																	"nativeSrc": "2652:6:12",
																	"nodeType": "YulIdentifier",
																	"src": "2652:6:12"
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_address",
												"nativeSrc": "2511:186:12",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "2547:9:12",
														"nodeType": "YulTypedName",
														"src": "2547:9:12",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nativeSrc": "2558:7:12",
														"nodeType": "YulTypedName",
														"src": "2558:7:12",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nativeSrc": "2570:6:12",
														"nodeType": "YulTypedName",
														"src": "2570:6:12",
														"type": ""
													}
												],
												"src": "2511:186:12"
											},
											{
												"body": {
													"nativeSrc": "2803:76:12",
													"nodeType": "YulBlock",
													"src": "2803:76:12",
													"statements": [
														{
															"nativeSrc": "2813:26:12",
															"nodeType": "YulAssignment",
															"src": "2813:26:12",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "2825:9:12",
																		"nodeType": "YulIdentifier",
																		"src": "2825:9:12"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "2836:2:12",
																		"nodeType": "YulLiteral",
																		"src": "2836:2:12",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "2821:3:12",
																	"nodeType": "YulIdentifier",
																	"src": "2821:3:12"
																},
																"nativeSrc": "2821:18:12",
																"nodeType": "YulFunctionCall",
																"src": "2821:18:12"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "2813:4:12",
																	"nodeType": "YulIdentifier",
																	"src": "2813:4:12"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "2855:9:12",
																		"nodeType": "YulIdentifier",
																		"src": "2855:9:12"
																	},
																	{
																		"name": "value0",
																		"nativeSrc": "2866:6:12",
																		"nodeType": "YulIdentifier",
																		"src": "2866:6:12"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "2848:6:12",
																	"nodeType": "YulIdentifier",
																	"src": "2848:6:12"
																},
																"nativeSrc": "2848:25:12",
																"nodeType": "YulFunctionCall",
																"src": "2848:25:12"
															},
															"nativeSrc": "2848:25:12",
															"nodeType": "YulExpressionStatement",
															"src": "2848:25:12"
														}
													]
												},
												"name": "abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed",
												"nativeSrc": "2702:177:12",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "2772:9:12",
														"nodeType": "YulTypedName",
														"src": "2772:9:12",
														"type": ""
													},
													{
														"name": "value0",
														"nativeSrc": "2783:6:12",
														"nodeType": "YulTypedName",
														"src": "2783:6:12",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "2794:4:12",
														"nodeType": "YulTypedName",
														"src": "2794:4:12",
														"type": ""
													}
												],
												"src": "2702:177:12"
											},
											{
												"body": {
													"nativeSrc": "2968:263:12",
													"nodeType": "YulBlock",
													"src": "2968:263:12",
													"statements": [
														{
															"body": {
																"nativeSrc": "3014:16:12",
																"nodeType": "YulBlock",
																"src": "3014:16:12",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nativeSrc": "3023:1:12",
																					"nodeType": "YulLiteral",
																					"src": "3023:1:12",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "3026:1:12",
																					"nodeType": "YulLiteral",
																					"src": "3026:1:12",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nativeSrc": "3016:6:12",
																				"nodeType": "YulIdentifier",
																				"src": "3016:6:12"
																			},
																			"nativeSrc": "3016:12:12",
																			"nodeType": "YulFunctionCall",
																			"src": "3016:12:12"
																		},
																		"nativeSrc": "3016:12:12",
																		"nodeType": "YulExpressionStatement",
																		"src": "3016:12:12"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nativeSrc": "2989:7:12",
																				"nodeType": "YulIdentifier",
																				"src": "2989:7:12"
																			},
																			{
																				"name": "headStart",
																				"nativeSrc": "2998:9:12",
																				"nodeType": "YulIdentifier",
																				"src": "2998:9:12"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "2985:3:12",
																			"nodeType": "YulIdentifier",
																			"src": "2985:3:12"
																		},
																		"nativeSrc": "2985:23:12",
																		"nodeType": "YulFunctionCall",
																		"src": "2985:23:12"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "3010:2:12",
																		"nodeType": "YulLiteral",
																		"src": "3010:2:12",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nativeSrc": "2981:3:12",
																	"nodeType": "YulIdentifier",
																	"src": "2981:3:12"
																},
																"nativeSrc": "2981:32:12",
																"nodeType": "YulFunctionCall",
																"src": "2981:32:12"
															},
															"nativeSrc": "2978:52:12",
															"nodeType": "YulIf",
															"src": "2978:52:12"
														},
														{
															"nativeSrc": "3039:39:12",
															"nodeType": "YulAssignment",
															"src": "3039:39:12",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "3068:9:12",
																		"nodeType": "YulIdentifier",
																		"src": "3068:9:12"
																	}
																],
																"functionName": {
																	"name": "abi_decode_address",
																	"nativeSrc": "3049:18:12",
																	"nodeType": "YulIdentifier",
																	"src": "3049:18:12"
																},
																"nativeSrc": "3049:29:12",
																"nodeType": "YulFunctionCall",
																"src": "3049:29:12"
															},
															"variableNames": [
																{
																	"name": "value0",
																	"nativeSrc": "3039:6:12",
																	"nodeType": "YulIdentifier",
																	"src": "3039:6:12"
																}
															]
														},
														{
															"nativeSrc": "3087:45:12",
															"nodeType": "YulVariableDeclaration",
															"src": "3087:45:12",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "3117:9:12",
																				"nodeType": "YulIdentifier",
																				"src": "3117:9:12"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "3128:2:12",
																				"nodeType": "YulLiteral",
																				"src": "3128:2:12",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "3113:3:12",
																			"nodeType": "YulIdentifier",
																			"src": "3113:3:12"
																		},
																		"nativeSrc": "3113:18:12",
																		"nodeType": "YulFunctionCall",
																		"src": "3113:18:12"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nativeSrc": "3100:12:12",
																	"nodeType": "YulIdentifier",
																	"src": "3100:12:12"
																},
																"nativeSrc": "3100:32:12",
																"nodeType": "YulFunctionCall",
																"src": "3100:32:12"
															},
															"variables": [
																{
																	"name": "value",
																	"nativeSrc": "3091:5:12",
																	"nodeType": "YulTypedName",
																	"src": "3091:5:12",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nativeSrc": "3185:16:12",
																"nodeType": "YulBlock",
																"src": "3185:16:12",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nativeSrc": "3194:1:12",
																					"nodeType": "YulLiteral",
																					"src": "3194:1:12",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "3197:1:12",
																					"nodeType": "YulLiteral",
																					"src": "3197:1:12",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nativeSrc": "3187:6:12",
																				"nodeType": "YulIdentifier",
																				"src": "3187:6:12"
																			},
																			"nativeSrc": "3187:12:12",
																			"nodeType": "YulFunctionCall",
																			"src": "3187:12:12"
																		},
																		"nativeSrc": "3187:12:12",
																		"nodeType": "YulExpressionStatement",
																		"src": "3187:12:12"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nativeSrc": "3154:5:12",
																				"nodeType": "YulIdentifier",
																				"src": "3154:5:12"
																			},
																			{
																				"arguments": [
																					{
																						"arguments": [
																							{
																								"name": "value",
																								"nativeSrc": "3175:5:12",
																								"nodeType": "YulIdentifier",
																								"src": "3175:5:12"
																							}
																						],
																						"functionName": {
																							"name": "iszero",
																							"nativeSrc": "3168:6:12",
																							"nodeType": "YulIdentifier",
																							"src": "3168:6:12"
																						},
																						"nativeSrc": "3168:13:12",
																						"nodeType": "YulFunctionCall",
																						"src": "3168:13:12"
																					}
																				],
																				"functionName": {
																					"name": "iszero",
																					"nativeSrc": "3161:6:12",
																					"nodeType": "YulIdentifier",
																					"src": "3161:6:12"
																				},
																				"nativeSrc": "3161:21:12",
																				"nodeType": "YulFunctionCall",
																				"src": "3161:21:12"
																			}
																		],
																		"functionName": {
																			"name": "eq",
																			"nativeSrc": "3151:2:12",
																			"nodeType": "YulIdentifier",
																			"src": "3151:2:12"
																		},
																		"nativeSrc": "3151:32:12",
																		"nodeType": "YulFunctionCall",
																		"src": "3151:32:12"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nativeSrc": "3144:6:12",
																	"nodeType": "YulIdentifier",
																	"src": "3144:6:12"
																},
																"nativeSrc": "3144:40:12",
																"nodeType": "YulFunctionCall",
																"src": "3144:40:12"
															},
															"nativeSrc": "3141:60:12",
															"nodeType": "YulIf",
															"src": "3141:60:12"
														},
														{
															"nativeSrc": "3210:15:12",
															"nodeType": "YulAssignment",
															"src": "3210:15:12",
															"value": {
																"name": "value",
																"nativeSrc": "3220:5:12",
																"nodeType": "YulIdentifier",
																"src": "3220:5:12"
															},
															"variableNames": [
																{
																	"name": "value1",
																	"nativeSrc": "3210:6:12",
																	"nodeType": "YulIdentifier",
																	"src": "3210:6:12"
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_addresst_bool",
												"nativeSrc": "2884:347:12",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "2926:9:12",
														"nodeType": "YulTypedName",
														"src": "2926:9:12",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nativeSrc": "2937:7:12",
														"nodeType": "YulTypedName",
														"src": "2937:7:12",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nativeSrc": "2949:6:12",
														"nodeType": "YulTypedName",
														"src": "2949:6:12",
														"type": ""
													},
													{
														"name": "value1",
														"nativeSrc": "2957:6:12",
														"nodeType": "YulTypedName",
														"src": "2957:6:12",
														"type": ""
													}
												],
												"src": "2884:347:12"
											},
											{
												"body": {
													"nativeSrc": "3268:95:12",
													"nodeType": "YulBlock",
													"src": "3268:95:12",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "3285:1:12",
																		"nodeType": "YulLiteral",
																		"src": "3285:1:12",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"arguments": [
																			{
																				"kind": "number",
																				"nativeSrc": "3292:3:12",
																				"nodeType": "YulLiteral",
																				"src": "3292:3:12",
																				"type": "",
																				"value": "224"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "3297:10:12",
																				"nodeType": "YulLiteral",
																				"src": "3297:10:12",
																				"type": "",
																				"value": "0x4e487b71"
																			}
																		],
																		"functionName": {
																			"name": "shl",
																			"nativeSrc": "3288:3:12",
																			"nodeType": "YulIdentifier",
																			"src": "3288:3:12"
																		},
																		"nativeSrc": "3288:20:12",
																		"nodeType": "YulFunctionCall",
																		"src": "3288:20:12"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "3278:6:12",
																	"nodeType": "YulIdentifier",
																	"src": "3278:6:12"
																},
																"nativeSrc": "3278:31:12",
																"nodeType": "YulFunctionCall",
																"src": "3278:31:12"
															},
															"nativeSrc": "3278:31:12",
															"nodeType": "YulExpressionStatement",
															"src": "3278:31:12"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "3325:1:12",
																		"nodeType": "YulLiteral",
																		"src": "3325:1:12",
																		"type": "",
																		"value": "4"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "3328:4:12",
																		"nodeType": "YulLiteral",
																		"src": "3328:4:12",
																		"type": "",
																		"value": "0x41"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "3318:6:12",
																	"nodeType": "YulIdentifier",
																	"src": "3318:6:12"
																},
																"nativeSrc": "3318:15:12",
																"nodeType": "YulFunctionCall",
																"src": "3318:15:12"
															},
															"nativeSrc": "3318:15:12",
															"nodeType": "YulExpressionStatement",
															"src": "3318:15:12"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "3349:1:12",
																		"nodeType": "YulLiteral",
																		"src": "3349:1:12",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "3352:4:12",
																		"nodeType": "YulLiteral",
																		"src": "3352:4:12",
																		"type": "",
																		"value": "0x24"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nativeSrc": "3342:6:12",
																	"nodeType": "YulIdentifier",
																	"src": "3342:6:12"
																},
																"nativeSrc": "3342:15:12",
																"nodeType": "YulFunctionCall",
																"src": "3342:15:12"
															},
															"nativeSrc": "3342:15:12",
															"nodeType": "YulExpressionStatement",
															"src": "3342:15:12"
														}
													]
												},
												"name": "panic_error_0x41",
												"nativeSrc": "3236:127:12",
												"nodeType": "YulFunctionDefinition",
												"src": "3236:127:12"
											},
											{
												"body": {
													"nativeSrc": "3498:1008:12",
													"nodeType": "YulBlock",
													"src": "3498:1008:12",
													"statements": [
														{
															"body": {
																"nativeSrc": "3545:16:12",
																"nodeType": "YulBlock",
																"src": "3545:16:12",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nativeSrc": "3554:1:12",
																					"nodeType": "YulLiteral",
																					"src": "3554:1:12",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "3557:1:12",
																					"nodeType": "YulLiteral",
																					"src": "3557:1:12",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nativeSrc": "3547:6:12",
																				"nodeType": "YulIdentifier",
																				"src": "3547:6:12"
																			},
																			"nativeSrc": "3547:12:12",
																			"nodeType": "YulFunctionCall",
																			"src": "3547:12:12"
																		},
																		"nativeSrc": "3547:12:12",
																		"nodeType": "YulExpressionStatement",
																		"src": "3547:12:12"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nativeSrc": "3519:7:12",
																				"nodeType": "YulIdentifier",
																				"src": "3519:7:12"
																			},
																			{
																				"name": "headStart",
																				"nativeSrc": "3528:9:12",
																				"nodeType": "YulIdentifier",
																				"src": "3528:9:12"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "3515:3:12",
																			"nodeType": "YulIdentifier",
																			"src": "3515:3:12"
																		},
																		"nativeSrc": "3515:23:12",
																		"nodeType": "YulFunctionCall",
																		"src": "3515:23:12"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "3540:3:12",
																		"nodeType": "YulLiteral",
																		"src": "3540:3:12",
																		"type": "",
																		"value": "128"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nativeSrc": "3511:3:12",
																	"nodeType": "YulIdentifier",
																	"src": "3511:3:12"
																},
																"nativeSrc": "3511:33:12",
																"nodeType": "YulFunctionCall",
																"src": "3511:33:12"
															},
															"nativeSrc": "3508:53:12",
															"nodeType": "YulIf",
															"src": "3508:53:12"
														},
														{
															"nativeSrc": "3570:39:12",
															"nodeType": "YulAssignment",
															"src": "3570:39:12",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "3599:9:12",
																		"nodeType": "YulIdentifier",
																		"src": "3599:9:12"
																	}
																],
																"functionName": {
																	"name": "abi_decode_address",
																	"nativeSrc": "3580:18:12",
																	"nodeType": "YulIdentifier",
																	"src": "3580:18:12"
																},
																"nativeSrc": "3580:29:12",
																"nodeType": "YulFunctionCall",
																"src": "3580:29:12"
															},
															"variableNames": [
																{
																	"name": "value0",
																	"nativeSrc": "3570:6:12",
																	"nodeType": "YulIdentifier",
																	"src": "3570:6:12"
																}
															]
														},
														{
															"nativeSrc": "3618:48:12",
															"nodeType": "YulAssignment",
															"src": "3618:48:12",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "3651:9:12",
																				"nodeType": "YulIdentifier",
																				"src": "3651:9:12"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "3662:2:12",
																				"nodeType": "YulLiteral",
																				"src": "3662:2:12",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "3647:3:12",
																			"nodeType": "YulIdentifier",
																			"src": "3647:3:12"
																		},
																		"nativeSrc": "3647:18:12",
																		"nodeType": "YulFunctionCall",
																		"src": "3647:18:12"
																	}
																],
																"functionName": {
																	"name": "abi_decode_address",
																	"nativeSrc": "3628:18:12",
																	"nodeType": "YulIdentifier",
																	"src": "3628:18:12"
																},
																"nativeSrc": "3628:38:12",
																"nodeType": "YulFunctionCall",
																"src": "3628:38:12"
															},
															"variableNames": [
																{
																	"name": "value1",
																	"nativeSrc": "3618:6:12",
																	"nodeType": "YulIdentifier",
																	"src": "3618:6:12"
																}
															]
														},
														{
															"nativeSrc": "3675:42:12",
															"nodeType": "YulAssignment",
															"src": "3675:42:12",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "3702:9:12",
																				"nodeType": "YulIdentifier",
																				"src": "3702:9:12"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "3713:2:12",
																				"nodeType": "YulLiteral",
																				"src": "3713:2:12",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "3698:3:12",
																			"nodeType": "YulIdentifier",
																			"src": "3698:3:12"
																		},
																		"nativeSrc": "3698:18:12",
																		"nodeType": "YulFunctionCall",
																		"src": "3698:18:12"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nativeSrc": "3685:12:12",
																	"nodeType": "YulIdentifier",
																	"src": "3685:12:12"
																},
																"nativeSrc": "3685:32:12",
																"nodeType": "YulFunctionCall",
																"src": "3685:32:12"
															},
															"variableNames": [
																{
																	"name": "value2",
																	"nativeSrc": "3675:6:12",
																	"nodeType": "YulIdentifier",
																	"src": "3675:6:12"
																}
															]
														},
														{
															"nativeSrc": "3726:46:12",
															"nodeType": "YulVariableDeclaration",
															"src": "3726:46:12",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "3757:9:12",
																				"nodeType": "YulIdentifier",
																				"src": "3757:9:12"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "3768:2:12",
																				"nodeType": "YulLiteral",
																				"src": "3768:2:12",
																				"type": "",
																				"value": "96"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "3753:3:12",
																			"nodeType": "YulIdentifier",
																			"src": "3753:3:12"
																		},
																		"nativeSrc": "3753:18:12",
																		"nodeType": "YulFunctionCall",
																		"src": "3753:18:12"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nativeSrc": "3740:12:12",
																	"nodeType": "YulIdentifier",
																	"src": "3740:12:12"
																},
																"nativeSrc": "3740:32:12",
																"nodeType": "YulFunctionCall",
																"src": "3740:32:12"
															},
															"variables": [
																{
																	"name": "offset",
																	"nativeSrc": "3730:6:12",
																	"nodeType": "YulTypedName",
																	"src": "3730:6:12",
																	"type": ""
																}
															]
														},
														{
															"nativeSrc": "3781:28:12",
															"nodeType": "YulVariableDeclaration",
															"src": "3781:28:12",
															"value": {
																"kind": "number",
																"nativeSrc": "3791:18:12",
																"nodeType": "YulLiteral",
																"src": "3791:18:12",
																"type": "",
																"value": "0xffffffffffffffff"
															},
															"variables": [
																{
																	"name": "_1",
																	"nativeSrc": "3785:2:12",
																	"nodeType": "YulTypedName",
																	"src": "3785:2:12",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nativeSrc": "3836:16:12",
																"nodeType": "YulBlock",
																"src": "3836:16:12",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nativeSrc": "3845:1:12",
																					"nodeType": "YulLiteral",
																					"src": "3845:1:12",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "3848:1:12",
																					"nodeType": "YulLiteral",
																					"src": "3848:1:12",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nativeSrc": "3838:6:12",
																				"nodeType": "YulIdentifier",
																				"src": "3838:6:12"
																			},
																			"nativeSrc": "3838:12:12",
																			"nodeType": "YulFunctionCall",
																			"src": "3838:12:12"
																		},
																		"nativeSrc": "3838:12:12",
																		"nodeType": "YulExpressionStatement",
																		"src": "3838:12:12"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "offset",
																		"nativeSrc": "3824:6:12",
																		"nodeType": "YulIdentifier",
																		"src": "3824:6:12"
																	},
																	{
																		"name": "_1",
																		"nativeSrc": "3832:2:12",
																		"nodeType": "YulIdentifier",
																		"src": "3832:2:12"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nativeSrc": "3821:2:12",
																	"nodeType": "YulIdentifier",
																	"src": "3821:2:12"
																},
																"nativeSrc": "3821:14:12",
																"nodeType": "YulFunctionCall",
																"src": "3821:14:12"
															},
															"nativeSrc": "3818:34:12",
															"nodeType": "YulIf",
															"src": "3818:34:12"
														},
														{
															"nativeSrc": "3861:32:12",
															"nodeType": "YulVariableDeclaration",
															"src": "3861:32:12",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "3875:9:12",
																		"nodeType": "YulIdentifier",
																		"src": "3875:9:12"
																	},
																	{
																		"name": "offset",
																		"nativeSrc": "3886:6:12",
																		"nodeType": "YulIdentifier",
																		"src": "3886:6:12"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "3871:3:12",
																	"nodeType": "YulIdentifier",
																	"src": "3871:3:12"
																},
																"nativeSrc": "3871:22:12",
																"nodeType": "YulFunctionCall",
																"src": "3871:22:12"
															},
															"variables": [
																{
																	"name": "_2",
																	"nativeSrc": "3865:2:12",
																	"nodeType": "YulTypedName",
																	"src": "3865:2:12",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nativeSrc": "3941:16:12",
																"nodeType": "YulBlock",
																"src": "3941:16:12",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nativeSrc": "3950:1:12",
																					"nodeType": "YulLiteral",
																					"src": "3950:1:12",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "3953:1:12",
																					"nodeType": "YulLiteral",
																					"src": "3953:1:12",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nativeSrc": "3943:6:12",
																				"nodeType": "YulIdentifier",
																				"src": "3943:6:12"
																			},
																			"nativeSrc": "3943:12:12",
																			"nodeType": "YulFunctionCall",
																			"src": "3943:12:12"
																		},
																		"nativeSrc": "3943:12:12",
																		"nodeType": "YulExpressionStatement",
																		"src": "3943:12:12"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "_2",
																						"nativeSrc": "3920:2:12",
																						"nodeType": "YulIdentifier",
																						"src": "3920:2:12"
																					},
																					{
																						"kind": "number",
																						"nativeSrc": "3924:4:12",
																						"nodeType": "YulLiteral",
																						"src": "3924:4:12",
																						"type": "",
																						"value": "0x1f"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "3916:3:12",
																					"nodeType": "YulIdentifier",
																					"src": "3916:3:12"
																				},
																				"nativeSrc": "3916:13:12",
																				"nodeType": "YulFunctionCall",
																				"src": "3916:13:12"
																			},
																			{
																				"name": "dataEnd",
																				"nativeSrc": "3931:7:12",
																				"nodeType": "YulIdentifier",
																				"src": "3931:7:12"
																			}
																		],
																		"functionName": {
																			"name": "slt",
																			"nativeSrc": "3912:3:12",
																			"nodeType": "YulIdentifier",
																			"src": "3912:3:12"
																		},
																		"nativeSrc": "3912:27:12",
																		"nodeType": "YulFunctionCall",
																		"src": "3912:27:12"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nativeSrc": "3905:6:12",
																	"nodeType": "YulIdentifier",
																	"src": "3905:6:12"
																},
																"nativeSrc": "3905:35:12",
																"nodeType": "YulFunctionCall",
																"src": "3905:35:12"
															},
															"nativeSrc": "3902:55:12",
															"nodeType": "YulIf",
															"src": "3902:55:12"
														},
														{
															"nativeSrc": "3966:26:12",
															"nodeType": "YulVariableDeclaration",
															"src": "3966:26:12",
															"value": {
																"arguments": [
																	{
																		"name": "_2",
																		"nativeSrc": "3989:2:12",
																		"nodeType": "YulIdentifier",
																		"src": "3989:2:12"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nativeSrc": "3976:12:12",
																	"nodeType": "YulIdentifier",
																	"src": "3976:12:12"
																},
																"nativeSrc": "3976:16:12",
																"nodeType": "YulFunctionCall",
																"src": "3976:16:12"
															},
															"variables": [
																{
																	"name": "_3",
																	"nativeSrc": "3970:2:12",
																	"nodeType": "YulTypedName",
																	"src": "3970:2:12",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nativeSrc": "4015:22:12",
																"nodeType": "YulBlock",
																"src": "4015:22:12",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "panic_error_0x41",
																				"nativeSrc": "4017:16:12",
																				"nodeType": "YulIdentifier",
																				"src": "4017:16:12"
																			},
																			"nativeSrc": "4017:18:12",
																			"nodeType": "YulFunctionCall",
																			"src": "4017:18:12"
																		},
																		"nativeSrc": "4017:18:12",
																		"nodeType": "YulExpressionStatement",
																		"src": "4017:18:12"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "_3",
																		"nativeSrc": "4007:2:12",
																		"nodeType": "YulIdentifier",
																		"src": "4007:2:12"
																	},
																	{
																		"name": "_1",
																		"nativeSrc": "4011:2:12",
																		"nodeType": "YulIdentifier",
																		"src": "4011:2:12"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nativeSrc": "4004:2:12",
																	"nodeType": "YulIdentifier",
																	"src": "4004:2:12"
																},
																"nativeSrc": "4004:10:12",
																"nodeType": "YulFunctionCall",
																"src": "4004:10:12"
															},
															"nativeSrc": "4001:36:12",
															"nodeType": "YulIf",
															"src": "4001:36:12"
														},
														{
															"nativeSrc": "4046:17:12",
															"nodeType": "YulVariableDeclaration",
															"src": "4046:17:12",
															"value": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "4060:2:12",
																		"nodeType": "YulLiteral",
																		"src": "4060:2:12",
																		"type": "",
																		"value": "31"
																	}
																],
																"functionName": {
																	"name": "not",
																	"nativeSrc": "4056:3:12",
																	"nodeType": "YulIdentifier",
																	"src": "4056:3:12"
																},
																"nativeSrc": "4056:7:12",
																"nodeType": "YulFunctionCall",
																"src": "4056:7:12"
															},
															"variables": [
																{
																	"name": "_4",
																	"nativeSrc": "4050:2:12",
																	"nodeType": "YulTypedName",
																	"src": "4050:2:12",
																	"type": ""
																}
															]
														},
														{
															"nativeSrc": "4072:23:12",
															"nodeType": "YulVariableDeclaration",
															"src": "4072:23:12",
															"value": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "4092:2:12",
																		"nodeType": "YulLiteral",
																		"src": "4092:2:12",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nativeSrc": "4086:5:12",
																	"nodeType": "YulIdentifier",
																	"src": "4086:5:12"
																},
																"nativeSrc": "4086:9:12",
																"nodeType": "YulFunctionCall",
																"src": "4086:9:12"
															},
															"variables": [
																{
																	"name": "memPtr",
																	"nativeSrc": "4076:6:12",
																	"nodeType": "YulTypedName",
																	"src": "4076:6:12",
																	"type": ""
																}
															]
														},
														{
															"nativeSrc": "4104:71:12",
															"nodeType": "YulVariableDeclaration",
															"src": "4104:71:12",
															"value": {
																"arguments": [
																	{
																		"name": "memPtr",
																		"nativeSrc": "4126:6:12",
																		"nodeType": "YulIdentifier",
																		"src": "4126:6:12"
																	},
																	{
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"arguments": [
																							{
																								"arguments": [
																									{
																										"name": "_3",
																										"nativeSrc": "4150:2:12",
																										"nodeType": "YulIdentifier",
																										"src": "4150:2:12"
																									},
																									{
																										"kind": "number",
																										"nativeSrc": "4154:4:12",
																										"nodeType": "YulLiteral",
																										"src": "4154:4:12",
																										"type": "",
																										"value": "0x1f"
																									}
																								],
																								"functionName": {
																									"name": "add",
																									"nativeSrc": "4146:3:12",
																									"nodeType": "YulIdentifier",
																									"src": "4146:3:12"
																								},
																								"nativeSrc": "4146:13:12",
																								"nodeType": "YulFunctionCall",
																								"src": "4146:13:12"
																							},
																							{
																								"name": "_4",
																								"nativeSrc": "4161:2:12",
																								"nodeType": "YulIdentifier",
																								"src": "4161:2:12"
																							}
																						],
																						"functionName": {
																							"name": "and",
																							"nativeSrc": "4142:3:12",
																							"nodeType": "YulIdentifier",
																							"src": "4142:3:12"
																						},
																						"nativeSrc": "4142:22:12",
																						"nodeType": "YulFunctionCall",
																						"src": "4142:22:12"
																					},
																					{
																						"kind": "number",
																						"nativeSrc": "4166:2:12",
																						"nodeType": "YulLiteral",
																						"src": "4166:2:12",
																						"type": "",
																						"value": "63"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "4138:3:12",
																					"nodeType": "YulIdentifier",
																					"src": "4138:3:12"
																				},
																				"nativeSrc": "4138:31:12",
																				"nodeType": "YulFunctionCall",
																				"src": "4138:31:12"
																			},
																			{
																				"name": "_4",
																				"nativeSrc": "4171:2:12",
																				"nodeType": "YulIdentifier",
																				"src": "4171:2:12"
																			}
																		],
																		"functionName": {
																			"name": "and",
																			"nativeSrc": "4134:3:12",
																			"nodeType": "YulIdentifier",
																			"src": "4134:3:12"
																		},
																		"nativeSrc": "4134:40:12",
																		"nodeType": "YulFunctionCall",
																		"src": "4134:40:12"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "4122:3:12",
																	"nodeType": "YulIdentifier",
																	"src": "4122:3:12"
																},
																"nativeSrc": "4122:53:12",
																"nodeType": "YulFunctionCall",
																"src": "4122:53:12"
															},
															"variables": [
																{
																	"name": "newFreePtr",
																	"nativeSrc": "4108:10:12",
																	"nodeType": "YulTypedName",
																	"src": "4108:10:12",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nativeSrc": "4234:22:12",
																"nodeType": "YulBlock",
																"src": "4234:22:12",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "panic_error_0x41",
																				"nativeSrc": "4236:16:12",
																				"nodeType": "YulIdentifier",
																				"src": "4236:16:12"
																			},
																			"nativeSrc": "4236:18:12",
																			"nodeType": "YulFunctionCall",
																			"src": "4236:18:12"
																		},
																		"nativeSrc": "4236:18:12",
																		"nodeType": "YulExpressionStatement",
																		"src": "4236:18:12"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "newFreePtr",
																				"nativeSrc": "4193:10:12",
																				"nodeType": "YulIdentifier",
																				"src": "4193:10:12"
																			},
																			{
																				"name": "_1",
																				"nativeSrc": "4205:2:12",
																				"nodeType": "YulIdentifier",
																				"src": "4205:2:12"
																			}
																		],
																		"functionName": {
																			"name": "gt",
																			"nativeSrc": "4190:2:12",
																			"nodeType": "YulIdentifier",
																			"src": "4190:2:12"
																		},
																		"nativeSrc": "4190:18:12",
																		"nodeType": "YulFunctionCall",
																		"src": "4190:18:12"
																	},
																	{
																		"arguments": [
																			{
																				"name": "newFreePtr",
																				"nativeSrc": "4213:10:12",
																				"nodeType": "YulIdentifier",
																				"src": "4213:10:12"
																			},
																			{
																				"name": "memPtr",
																				"nativeSrc": "4225:6:12",
																				"nodeType": "YulIdentifier",
																				"src": "4225:6:12"
																			}
																		],
																		"functionName": {
																			"name": "lt",
																			"nativeSrc": "4210:2:12",
																			"nodeType": "YulIdentifier",
																			"src": "4210:2:12"
																		},
																		"nativeSrc": "4210:22:12",
																		"nodeType": "YulFunctionCall",
																		"src": "4210:22:12"
																	}
																],
																"functionName": {
																	"name": "or",
																	"nativeSrc": "4187:2:12",
																	"nodeType": "YulIdentifier",
																	"src": "4187:2:12"
																},
																"nativeSrc": "4187:46:12",
																"nodeType": "YulFunctionCall",
																"src": "4187:46:12"
															},
															"nativeSrc": "4184:72:12",
															"nodeType": "YulIf",
															"src": "4184:72:12"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "4272:2:12",
																		"nodeType": "YulLiteral",
																		"src": "4272:2:12",
																		"type": "",
																		"value": "64"
																	},
																	{
																		"name": "newFreePtr",
																		"nativeSrc": "4276:10:12",
																		"nodeType": "YulIdentifier",
																		"src": "4276:10:12"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "4265:6:12",
																	"nodeType": "YulIdentifier",
																	"src": "4265:6:12"
																},
																"nativeSrc": "4265:22:12",
																"nodeType": "YulFunctionCall",
																"src": "4265:22:12"
															},
															"nativeSrc": "4265:22:12",
															"nodeType": "YulExpressionStatement",
															"src": "4265:22:12"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "memPtr",
																		"nativeSrc": "4303:6:12",
																		"nodeType": "YulIdentifier",
																		"src": "4303:6:12"
																	},
																	{
																		"name": "_3",
																		"nativeSrc": "4311:2:12",
																		"nodeType": "YulIdentifier",
																		"src": "4311:2:12"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "4296:6:12",
																	"nodeType": "YulIdentifier",
																	"src": "4296:6:12"
																},
																"nativeSrc": "4296:18:12",
																"nodeType": "YulFunctionCall",
																"src": "4296:18:12"
															},
															"nativeSrc": "4296:18:12",
															"nodeType": "YulExpressionStatement",
															"src": "4296:18:12"
														},
														{
															"body": {
																"nativeSrc": "4360:16:12",
																"nodeType": "YulBlock",
																"src": "4360:16:12",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nativeSrc": "4369:1:12",
																					"nodeType": "YulLiteral",
																					"src": "4369:1:12",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "4372:1:12",
																					"nodeType": "YulLiteral",
																					"src": "4372:1:12",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nativeSrc": "4362:6:12",
																				"nodeType": "YulIdentifier",
																				"src": "4362:6:12"
																			},
																			"nativeSrc": "4362:12:12",
																			"nodeType": "YulFunctionCall",
																			"src": "4362:12:12"
																		},
																		"nativeSrc": "4362:12:12",
																		"nodeType": "YulExpressionStatement",
																		"src": "4362:12:12"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "_2",
																						"nativeSrc": "4337:2:12",
																						"nodeType": "YulIdentifier",
																						"src": "4337:2:12"
																					},
																					{
																						"name": "_3",
																						"nativeSrc": "4341:2:12",
																						"nodeType": "YulIdentifier",
																						"src": "4341:2:12"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "4333:3:12",
																					"nodeType": "YulIdentifier",
																					"src": "4333:3:12"
																				},
																				"nativeSrc": "4333:11:12",
																				"nodeType": "YulFunctionCall",
																				"src": "4333:11:12"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "4346:2:12",
																				"nodeType": "YulLiteral",
																				"src": "4346:2:12",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "4329:3:12",
																			"nodeType": "YulIdentifier",
																			"src": "4329:3:12"
																		},
																		"nativeSrc": "4329:20:12",
																		"nodeType": "YulFunctionCall",
																		"src": "4329:20:12"
																	},
																	{
																		"name": "dataEnd",
																		"nativeSrc": "4351:7:12",
																		"nodeType": "YulIdentifier",
																		"src": "4351:7:12"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nativeSrc": "4326:2:12",
																	"nodeType": "YulIdentifier",
																	"src": "4326:2:12"
																},
																"nativeSrc": "4326:33:12",
																"nodeType": "YulFunctionCall",
																"src": "4326:33:12"
															},
															"nativeSrc": "4323:53:12",
															"nodeType": "YulIf",
															"src": "4323:53:12"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "memPtr",
																				"nativeSrc": "4402:6:12",
																				"nodeType": "YulIdentifier",
																				"src": "4402:6:12"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "4410:2:12",
																				"nodeType": "YulLiteral",
																				"src": "4410:2:12",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "4398:3:12",
																			"nodeType": "YulIdentifier",
																			"src": "4398:3:12"
																		},
																		"nativeSrc": "4398:15:12",
																		"nodeType": "YulFunctionCall",
																		"src": "4398:15:12"
																	},
																	{
																		"arguments": [
																			{
																				"name": "_2",
																				"nativeSrc": "4419:2:12",
																				"nodeType": "YulIdentifier",
																				"src": "4419:2:12"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "4423:2:12",
																				"nodeType": "YulLiteral",
																				"src": "4423:2:12",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "4415:3:12",
																			"nodeType": "YulIdentifier",
																			"src": "4415:3:12"
																		},
																		"nativeSrc": "4415:11:12",
																		"nodeType": "YulFunctionCall",
																		"src": "4415:11:12"
																	},
																	{
																		"name": "_3",
																		"nativeSrc": "4428:2:12",
																		"nodeType": "YulIdentifier",
																		"src": "4428:2:12"
																	}
																],
																"functionName": {
																	"name": "calldatacopy",
																	"nativeSrc": "4385:12:12",
																	"nodeType": "YulIdentifier",
																	"src": "4385:12:12"
																},
																"nativeSrc": "4385:46:12",
																"nodeType": "YulFunctionCall",
																"src": "4385:46:12"
															},
															"nativeSrc": "4385:46:12",
															"nodeType": "YulExpressionStatement",
															"src": "4385:46:12"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "memPtr",
																						"nativeSrc": "4455:6:12",
																						"nodeType": "YulIdentifier",
																						"src": "4455:6:12"
																					},
																					{
																						"name": "_3",
																						"nativeSrc": "4463:2:12",
																						"nodeType": "YulIdentifier",
																						"src": "4463:2:12"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "4451:3:12",
																					"nodeType": "YulIdentifier",
																					"src": "4451:3:12"
																				},
																				"nativeSrc": "4451:15:12",
																				"nodeType": "YulFunctionCall",
																				"src": "4451:15:12"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "4468:2:12",
																				"nodeType": "YulLiteral",
																				"src": "4468:2:12",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "4447:3:12",
																			"nodeType": "YulIdentifier",
																			"src": "4447:3:12"
																		},
																		"nativeSrc": "4447:24:12",
																		"nodeType": "YulFunctionCall",
																		"src": "4447:24:12"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "4473:1:12",
																		"nodeType": "YulLiteral",
																		"src": "4473:1:12",
																		"type": "",
																		"value": "0"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "4440:6:12",
																	"nodeType": "YulIdentifier",
																	"src": "4440:6:12"
																},
																"nativeSrc": "4440:35:12",
																"nodeType": "YulFunctionCall",
																"src": "4440:35:12"
															},
															"nativeSrc": "4440:35:12",
															"nodeType": "YulExpressionStatement",
															"src": "4440:35:12"
														},
														{
															"nativeSrc": "4484:16:12",
															"nodeType": "YulAssignment",
															"src": "4484:16:12",
															"value": {
																"name": "memPtr",
																"nativeSrc": "4494:6:12",
																"nodeType": "YulIdentifier",
																"src": "4494:6:12"
															},
															"variableNames": [
																{
																	"name": "value3",
																	"nativeSrc": "4484:6:12",
																	"nodeType": "YulIdentifier",
																	"src": "4484:6:12"
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_addresst_addresst_uint256t_bytes_memory_ptr",
												"nativeSrc": "3368:1138:12",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "3440:9:12",
														"nodeType": "YulTypedName",
														"src": "3440:9:12",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nativeSrc": "3451:7:12",
														"nodeType": "YulTypedName",
														"src": "3451:7:12",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nativeSrc": "3463:6:12",
														"nodeType": "YulTypedName",
														"src": "3463:6:12",
														"type": ""
													},
													{
														"name": "value1",
														"nativeSrc": "3471:6:12",
														"nodeType": "YulTypedName",
														"src": "3471:6:12",
														"type": ""
													},
													{
														"name": "value2",
														"nativeSrc": "3479:6:12",
														"nodeType": "YulTypedName",
														"src": "3479:6:12",
														"type": ""
													},
													{
														"name": "value3",
														"nativeSrc": "3487:6:12",
														"nodeType": "YulTypedName",
														"src": "3487:6:12",
														"type": ""
													}
												],
												"src": "3368:1138:12"
											},
											{
												"body": {
													"nativeSrc": "4598:173:12",
													"nodeType": "YulBlock",
													"src": "4598:173:12",
													"statements": [
														{
															"body": {
																"nativeSrc": "4644:16:12",
																"nodeType": "YulBlock",
																"src": "4644:16:12",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nativeSrc": "4653:1:12",
																					"nodeType": "YulLiteral",
																					"src": "4653:1:12",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "4656:1:12",
																					"nodeType": "YulLiteral",
																					"src": "4656:1:12",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nativeSrc": "4646:6:12",
																				"nodeType": "YulIdentifier",
																				"src": "4646:6:12"
																			},
																			"nativeSrc": "4646:12:12",
																			"nodeType": "YulFunctionCall",
																			"src": "4646:12:12"
																		},
																		"nativeSrc": "4646:12:12",
																		"nodeType": "YulExpressionStatement",
																		"src": "4646:12:12"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nativeSrc": "4619:7:12",
																				"nodeType": "YulIdentifier",
																				"src": "4619:7:12"
																			},
																			{
																				"name": "headStart",
																				"nativeSrc": "4628:9:12",
																				"nodeType": "YulIdentifier",
																				"src": "4628:9:12"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "4615:3:12",
																			"nodeType": "YulIdentifier",
																			"src": "4615:3:12"
																		},
																		"nativeSrc": "4615:23:12",
																		"nodeType": "YulFunctionCall",
																		"src": "4615:23:12"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "4640:2:12",
																		"nodeType": "YulLiteral",
																		"src": "4640:2:12",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nativeSrc": "4611:3:12",
																	"nodeType": "YulIdentifier",
																	"src": "4611:3:12"
																},
																"nativeSrc": "4611:32:12",
																"nodeType": "YulFunctionCall",
																"src": "4611:32:12"
															},
															"nativeSrc": "4608:52:12",
															"nodeType": "YulIf",
															"src": "4608:52:12"
														},
														{
															"nativeSrc": "4669:39:12",
															"nodeType": "YulAssignment",
															"src": "4669:39:12",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "4698:9:12",
																		"nodeType": "YulIdentifier",
																		"src": "4698:9:12"
																	}
																],
																"functionName": {
																	"name": "abi_decode_address",
																	"nativeSrc": "4679:18:12",
																	"nodeType": "YulIdentifier",
																	"src": "4679:18:12"
																},
																"nativeSrc": "4679:29:12",
																"nodeType": "YulFunctionCall",
																"src": "4679:29:12"
															},
															"variableNames": [
																{
																	"name": "value0",
																	"nativeSrc": "4669:6:12",
																	"nodeType": "YulIdentifier",
																	"src": "4669:6:12"
																}
															]
														},
														{
															"nativeSrc": "4717:48:12",
															"nodeType": "YulAssignment",
															"src": "4717:48:12",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "4750:9:12",
																				"nodeType": "YulIdentifier",
																				"src": "4750:9:12"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "4761:2:12",
																				"nodeType": "YulLiteral",
																				"src": "4761:2:12",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "4746:3:12",
																			"nodeType": "YulIdentifier",
																			"src": "4746:3:12"
																		},
																		"nativeSrc": "4746:18:12",
																		"nodeType": "YulFunctionCall",
																		"src": "4746:18:12"
																	}
																],
																"functionName": {
																	"name": "abi_decode_address",
																	"nativeSrc": "4727:18:12",
																	"nodeType": "YulIdentifier",
																	"src": "4727:18:12"
																},
																"nativeSrc": "4727:38:12",
																"nodeType": "YulFunctionCall",
																"src": "4727:38:12"
															},
															"variableNames": [
																{
																	"name": "value1",
																	"nativeSrc": "4717:6:12",
																	"nodeType": "YulIdentifier",
																	"src": "4717:6:12"
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_addresst_address",
												"nativeSrc": "4511:260:12",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "4556:9:12",
														"nodeType": "YulTypedName",
														"src": "4556:9:12",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nativeSrc": "4567:7:12",
														"nodeType": "YulTypedName",
														"src": "4567:7:12",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nativeSrc": "4579:6:12",
														"nodeType": "YulTypedName",
														"src": "4579:6:12",
														"type": ""
													},
													{
														"name": "value1",
														"nativeSrc": "4587:6:12",
														"nodeType": "YulTypedName",
														"src": "4587:6:12",
														"type": ""
													}
												],
												"src": "4511:260:12"
											},
											{
												"body": {
													"nativeSrc": "4831:325:12",
													"nodeType": "YulBlock",
													"src": "4831:325:12",
													"statements": [
														{
															"nativeSrc": "4841:22:12",
															"nodeType": "YulAssignment",
															"src": "4841:22:12",
															"value": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "4855:1:12",
																		"nodeType": "YulLiteral",
																		"src": "4855:1:12",
																		"type": "",
																		"value": "1"
																	},
																	{
																		"name": "data",
																		"nativeSrc": "4858:4:12",
																		"nodeType": "YulIdentifier",
																		"src": "4858:4:12"
																	}
																],
																"functionName": {
																	"name": "shr",
																	"nativeSrc": "4851:3:12",
																	"nodeType": "YulIdentifier",
																	"src": "4851:3:12"
																},
																"nativeSrc": "4851:12:12",
																"nodeType": "YulFunctionCall",
																"src": "4851:12:12"
															},
															"variableNames": [
																{
																	"name": "length",
																	"nativeSrc": "4841:6:12",
																	"nodeType": "YulIdentifier",
																	"src": "4841:6:12"
																}
															]
														},
														{
															"nativeSrc": "4872:38:12",
															"nodeType": "YulVariableDeclaration",
															"src": "4872:38:12",
															"value": {
																"arguments": [
																	{
																		"name": "data",
																		"nativeSrc": "4902:4:12",
																		"nodeType": "YulIdentifier",
																		"src": "4902:4:12"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "4908:1:12",
																		"nodeType": "YulLiteral",
																		"src": "4908:1:12",
																		"type": "",
																		"value": "1"
																	}
																],
																"functionName": {
																	"name": "and",
																	"nativeSrc": "4898:3:12",
																	"nodeType": "YulIdentifier",
																	"src": "4898:3:12"
																},
																"nativeSrc": "4898:12:12",
																"nodeType": "YulFunctionCall",
																"src": "4898:12:12"
															},
															"variables": [
																{
																	"name": "outOfPlaceEncoding",
																	"nativeSrc": "4876:18:12",
																	"nodeType": "YulTypedName",
																	"src": "4876:18:12",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nativeSrc": "4949:31:12",
																"nodeType": "YulBlock",
																"src": "4949:31:12",
																"statements": [
																	{
																		"nativeSrc": "4951:27:12",
																		"nodeType": "YulAssignment",
																		"src": "4951:27:12",
																		"value": {
																			"arguments": [
																				{
																					"name": "length",
																					"nativeSrc": "4965:6:12",
																					"nodeType": "YulIdentifier",
																					"src": "4965:6:12"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "4973:4:12",
																					"nodeType": "YulLiteral",
																					"src": "4973:4:12",
																					"type": "",
																					"value": "0x7f"
																				}
																			],
																			"functionName": {
																				"name": "and",
																				"nativeSrc": "4961:3:12",
																				"nodeType": "YulIdentifier",
																				"src": "4961:3:12"
																			},
																			"nativeSrc": "4961:17:12",
																			"nodeType": "YulFunctionCall",
																			"src": "4961:17:12"
																		},
																		"variableNames": [
																			{
																				"name": "length",
																				"nativeSrc": "4951:6:12",
																				"nodeType": "YulIdentifier",
																				"src": "4951:6:12"
																			}
																		]
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "outOfPlaceEncoding",
																		"nativeSrc": "4929:18:12",
																		"nodeType": "YulIdentifier",
																		"src": "4929:18:12"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nativeSrc": "4922:6:12",
																	"nodeType": "YulIdentifier",
																	"src": "4922:6:12"
																},
																"nativeSrc": "4922:26:12",
																"nodeType": "YulFunctionCall",
																"src": "4922:26:12"
															},
															"nativeSrc": "4919:61:12",
															"nodeType": "YulIf",
															"src": "4919:61:12"
														},
														{
															"body": {
																"nativeSrc": "5039:111:12",
																"nodeType": "YulBlock",
																"src": "5039:111:12",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nativeSrc": "5060:1:12",
																					"nodeType": "YulLiteral",
																					"src": "5060:1:12",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"arguments": [
																						{
																							"kind": "number",
																							"nativeSrc": "5067:3:12",
																							"nodeType": "YulLiteral",
																							"src": "5067:3:12",
																							"type": "",
																							"value": "224"
																						},
																						{
																							"kind": "number",
																							"nativeSrc": "5072:10:12",
																							"nodeType": "YulLiteral",
																							"src": "5072:10:12",
																							"type": "",
																							"value": "0x4e487b71"
																						}
																					],
																					"functionName": {
																						"name": "shl",
																						"nativeSrc": "5063:3:12",
																						"nodeType": "YulIdentifier",
																						"src": "5063:3:12"
																					},
																					"nativeSrc": "5063:20:12",
																					"nodeType": "YulFunctionCall",
																					"src": "5063:20:12"
																				}
																			],
																			"functionName": {
																				"name": "mstore",
																				"nativeSrc": "5053:6:12",
																				"nodeType": "YulIdentifier",
																				"src": "5053:6:12"
																			},
																			"nativeSrc": "5053:31:12",
																			"nodeType": "YulFunctionCall",
																			"src": "5053:31:12"
																		},
																		"nativeSrc": "5053:31:12",
																		"nodeType": "YulExpressionStatement",
																		"src": "5053:31:12"
																	},
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nativeSrc": "5104:1:12",
																					"nodeType": "YulLiteral",
																					"src": "5104:1:12",
																					"type": "",
																					"value": "4"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "5107:4:12",
																					"nodeType": "YulLiteral",
																					"src": "5107:4:12",
																					"type": "",
																					"value": "0x22"
																				}
																			],
																			"functionName": {
																				"name": "mstore",
																				"nativeSrc": "5097:6:12",
																				"nodeType": "YulIdentifier",
																				"src": "5097:6:12"
																			},
																			"nativeSrc": "5097:15:12",
																			"nodeType": "YulFunctionCall",
																			"src": "5097:15:12"
																		},
																		"nativeSrc": "5097:15:12",
																		"nodeType": "YulExpressionStatement",
																		"src": "5097:15:12"
																	},
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nativeSrc": "5132:1:12",
																					"nodeType": "YulLiteral",
																					"src": "5132:1:12",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "5135:4:12",
																					"nodeType": "YulLiteral",
																					"src": "5135:4:12",
																					"type": "",
																					"value": "0x24"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nativeSrc": "5125:6:12",
																				"nodeType": "YulIdentifier",
																				"src": "5125:6:12"
																			},
																			"nativeSrc": "5125:15:12",
																			"nodeType": "YulFunctionCall",
																			"src": "5125:15:12"
																		},
																		"nativeSrc": "5125:15:12",
																		"nodeType": "YulExpressionStatement",
																		"src": "5125:15:12"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "outOfPlaceEncoding",
																		"nativeSrc": "4995:18:12",
																		"nodeType": "YulIdentifier",
																		"src": "4995:18:12"
																	},
																	{
																		"arguments": [
																			{
																				"name": "length",
																				"nativeSrc": "5018:6:12",
																				"nodeType": "YulIdentifier",
																				"src": "5018:6:12"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "5026:2:12",
																				"nodeType": "YulLiteral",
																				"src": "5026:2:12",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "lt",
																			"nativeSrc": "5015:2:12",
																			"nodeType": "YulIdentifier",
																			"src": "5015:2:12"
																		},
																		"nativeSrc": "5015:14:12",
																		"nodeType": "YulFunctionCall",
																		"src": "5015:14:12"
																	}
																],
																"functionName": {
																	"name": "eq",
																	"nativeSrc": "4992:2:12",
																	"nodeType": "YulIdentifier",
																	"src": "4992:2:12"
																},
																"nativeSrc": "4992:38:12",
																"nodeType": "YulFunctionCall",
																"src": "4992:38:12"
															},
															"nativeSrc": "4989:161:12",
															"nodeType": "YulIf",
															"src": "4989:161:12"
														}
													]
												},
												"name": "extract_byte_array_length",
												"nativeSrc": "4776:380:12",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "data",
														"nativeSrc": "4811:4:12",
														"nodeType": "YulTypedName",
														"src": "4811:4:12",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "length",
														"nativeSrc": "4820:6:12",
														"nodeType": "YulTypedName",
														"src": "4820:6:12",
														"type": ""
													}
												],
												"src": "4776:380:12"
											},
											{
												"body": {
													"nativeSrc": "5335:223:12",
													"nodeType": "YulBlock",
													"src": "5335:223:12",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "5352:9:12",
																		"nodeType": "YulIdentifier",
																		"src": "5352:9:12"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "5363:2:12",
																		"nodeType": "YulLiteral",
																		"src": "5363:2:12",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "5345:6:12",
																	"nodeType": "YulIdentifier",
																	"src": "5345:6:12"
																},
																"nativeSrc": "5345:21:12",
																"nodeType": "YulFunctionCall",
																"src": "5345:21:12"
															},
															"nativeSrc": "5345:21:12",
															"nodeType": "YulExpressionStatement",
															"src": "5345:21:12"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "5386:9:12",
																				"nodeType": "YulIdentifier",
																				"src": "5386:9:12"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "5397:2:12",
																				"nodeType": "YulLiteral",
																				"src": "5397:2:12",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "5382:3:12",
																			"nodeType": "YulIdentifier",
																			"src": "5382:3:12"
																		},
																		"nativeSrc": "5382:18:12",
																		"nodeType": "YulFunctionCall",
																		"src": "5382:18:12"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "5402:2:12",
																		"nodeType": "YulLiteral",
																		"src": "5402:2:12",
																		"type": "",
																		"value": "33"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "5375:6:12",
																	"nodeType": "YulIdentifier",
																	"src": "5375:6:12"
																},
																"nativeSrc": "5375:30:12",
																"nodeType": "YulFunctionCall",
																"src": "5375:30:12"
															},
															"nativeSrc": "5375:30:12",
															"nodeType": "YulExpressionStatement",
															"src": "5375:30:12"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "5425:9:12",
																				"nodeType": "YulIdentifier",
																				"src": "5425:9:12"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "5436:2:12",
																				"nodeType": "YulLiteral",
																				"src": "5436:2:12",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "5421:3:12",
																			"nodeType": "YulIdentifier",
																			"src": "5421:3:12"
																		},
																		"nativeSrc": "5421:18:12",
																		"nodeType": "YulFunctionCall",
																		"src": "5421:18:12"
																	},
																	{
																		"hexValue": "4552433732313a20617070726f76616c20746f2063757272656e74206f776e65",
																		"kind": "string",
																		"nativeSrc": "5441:34:12",
																		"nodeType": "YulLiteral",
																		"src": "5441:34:12",
																		"type": "",
																		"value": "ERC721: approval to current owne"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "5414:6:12",
																	"nodeType": "YulIdentifier",
																	"src": "5414:6:12"
																},
																"nativeSrc": "5414:62:12",
																"nodeType": "YulFunctionCall",
																"src": "5414:62:12"
															},
															"nativeSrc": "5414:62:12",
															"nodeType": "YulExpressionStatement",
															"src": "5414:62:12"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "5496:9:12",
																				"nodeType": "YulIdentifier",
																				"src": "5496:9:12"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "5507:2:12",
																				"nodeType": "YulLiteral",
																				"src": "5507:2:12",
																				"type": "",
																				"value": "96"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "5492:3:12",
																			"nodeType": "YulIdentifier",
																			"src": "5492:3:12"
																		},
																		"nativeSrc": "5492:18:12",
																		"nodeType": "YulFunctionCall",
																		"src": "5492:18:12"
																	},
																	{
																		"hexValue": "72",
																		"kind": "string",
																		"nativeSrc": "5512:3:12",
																		"nodeType": "YulLiteral",
																		"src": "5512:3:12",
																		"type": "",
																		"value": "r"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "5485:6:12",
																	"nodeType": "YulIdentifier",
																	"src": "5485:6:12"
																},
																"nativeSrc": "5485:31:12",
																"nodeType": "YulFunctionCall",
																"src": "5485:31:12"
															},
															"nativeSrc": "5485:31:12",
															"nodeType": "YulExpressionStatement",
															"src": "5485:31:12"
														},
														{
															"nativeSrc": "5525:27:12",
															"nodeType": "YulAssignment",
															"src": "5525:27:12",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "5537:9:12",
																		"nodeType": "YulIdentifier",
																		"src": "5537:9:12"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "5548:3:12",
																		"nodeType": "YulLiteral",
																		"src": "5548:3:12",
																		"type": "",
																		"value": "128"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "5533:3:12",
																	"nodeType": "YulIdentifier",
																	"src": "5533:3:12"
																},
																"nativeSrc": "5533:19:12",
																"nodeType": "YulFunctionCall",
																"src": "5533:19:12"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "5525:4:12",
																	"nodeType": "YulIdentifier",
																	"src": "5525:4:12"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_b51b4875eede07862961e8f9365c6749f5fe55c6ee5d7a9e42b6912ad0b15942__to_t_string_memory_ptr__fromStack_reversed",
												"nativeSrc": "5161:397:12",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "5312:9:12",
														"nodeType": "YulTypedName",
														"src": "5312:9:12",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "5326:4:12",
														"nodeType": "YulTypedName",
														"src": "5326:4:12",
														"type": ""
													}
												],
												"src": "5161:397:12"
											},
											{
												"body": {
													"nativeSrc": "5737:251:12",
													"nodeType": "YulBlock",
													"src": "5737:251:12",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "5754:9:12",
																		"nodeType": "YulIdentifier",
																		"src": "5754:9:12"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "5765:2:12",
																		"nodeType": "YulLiteral",
																		"src": "5765:2:12",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "5747:6:12",
																	"nodeType": "YulIdentifier",
																	"src": "5747:6:12"
																},
																"nativeSrc": "5747:21:12",
																"nodeType": "YulFunctionCall",
																"src": "5747:21:12"
															},
															"nativeSrc": "5747:21:12",
															"nodeType": "YulExpressionStatement",
															"src": "5747:21:12"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "5788:9:12",
																				"nodeType": "YulIdentifier",
																				"src": "5788:9:12"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "5799:2:12",
																				"nodeType": "YulLiteral",
																				"src": "5799:2:12",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "5784:3:12",
																			"nodeType": "YulIdentifier",
																			"src": "5784:3:12"
																		},
																		"nativeSrc": "5784:18:12",
																		"nodeType": "YulFunctionCall",
																		"src": "5784:18:12"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "5804:2:12",
																		"nodeType": "YulLiteral",
																		"src": "5804:2:12",
																		"type": "",
																		"value": "61"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "5777:6:12",
																	"nodeType": "YulIdentifier",
																	"src": "5777:6:12"
																},
																"nativeSrc": "5777:30:12",
																"nodeType": "YulFunctionCall",
																"src": "5777:30:12"
															},
															"nativeSrc": "5777:30:12",
															"nodeType": "YulExpressionStatement",
															"src": "5777:30:12"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "5827:9:12",
																				"nodeType": "YulIdentifier",
																				"src": "5827:9:12"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "5838:2:12",
																				"nodeType": "YulLiteral",
																				"src": "5838:2:12",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "5823:3:12",
																			"nodeType": "YulIdentifier",
																			"src": "5823:3:12"
																		},
																		"nativeSrc": "5823:18:12",
																		"nodeType": "YulFunctionCall",
																		"src": "5823:18:12"
																	},
																	{
																		"hexValue": "4552433732313a20617070726f76652063616c6c6572206973206e6f7420746f",
																		"kind": "string",
																		"nativeSrc": "5843:34:12",
																		"nodeType": "YulLiteral",
																		"src": "5843:34:12",
																		"type": "",
																		"value": "ERC721: approve caller is not to"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "5816:6:12",
																	"nodeType": "YulIdentifier",
																	"src": "5816:6:12"
																},
																"nativeSrc": "5816:62:12",
																"nodeType": "YulFunctionCall",
																"src": "5816:62:12"
															},
															"nativeSrc": "5816:62:12",
															"nodeType": "YulExpressionStatement",
															"src": "5816:62:12"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "5898:9:12",
																				"nodeType": "YulIdentifier",
																				"src": "5898:9:12"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "5909:2:12",
																				"nodeType": "YulLiteral",
																				"src": "5909:2:12",
																				"type": "",
																				"value": "96"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "5894:3:12",
																			"nodeType": "YulIdentifier",
																			"src": "5894:3:12"
																		},
																		"nativeSrc": "5894:18:12",
																		"nodeType": "YulFunctionCall",
																		"src": "5894:18:12"
																	},
																	{
																		"hexValue": "6b656e206f776e6572206f7220617070726f76656420666f7220616c6c",
																		"kind": "string",
																		"nativeSrc": "5914:31:12",
																		"nodeType": "YulLiteral",
																		"src": "5914:31:12",
																		"type": "",
																		"value": "ken owner or approved for all"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "5887:6:12",
																	"nodeType": "YulIdentifier",
																	"src": "5887:6:12"
																},
																"nativeSrc": "5887:59:12",
																"nodeType": "YulFunctionCall",
																"src": "5887:59:12"
															},
															"nativeSrc": "5887:59:12",
															"nodeType": "YulExpressionStatement",
															"src": "5887:59:12"
														},
														{
															"nativeSrc": "5955:27:12",
															"nodeType": "YulAssignment",
															"src": "5955:27:12",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "5967:9:12",
																		"nodeType": "YulIdentifier",
																		"src": "5967:9:12"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "5978:3:12",
																		"nodeType": "YulLiteral",
																		"src": "5978:3:12",
																		"type": "",
																		"value": "128"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "5963:3:12",
																	"nodeType": "YulIdentifier",
																	"src": "5963:3:12"
																},
																"nativeSrc": "5963:19:12",
																"nodeType": "YulFunctionCall",
																"src": "5963:19:12"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "5955:4:12",
																	"nodeType": "YulIdentifier",
																	"src": "5955:4:12"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_c6e14a63ffb144eeef7cce6988e5dce07c60a7e0a7b1ef25dbe18c61483e0a83__to_t_string_memory_ptr__fromStack_reversed",
												"nativeSrc": "5563:425:12",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "5714:9:12",
														"nodeType": "YulTypedName",
														"src": "5714:9:12",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "5728:4:12",
														"nodeType": "YulTypedName",
														"src": "5728:4:12",
														"type": ""
													}
												],
												"src": "5563:425:12"
											},
											{
												"body": {
													"nativeSrc": "6167:235:12",
													"nodeType": "YulBlock",
													"src": "6167:235:12",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "6184:9:12",
																		"nodeType": "YulIdentifier",
																		"src": "6184:9:12"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "6195:2:12",
																		"nodeType": "YulLiteral",
																		"src": "6195:2:12",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "6177:6:12",
																	"nodeType": "YulIdentifier",
																	"src": "6177:6:12"
																},
																"nativeSrc": "6177:21:12",
																"nodeType": "YulFunctionCall",
																"src": "6177:21:12"
															},
															"nativeSrc": "6177:21:12",
															"nodeType": "YulExpressionStatement",
															"src": "6177:21:12"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "6218:9:12",
																				"nodeType": "YulIdentifier",
																				"src": "6218:9:12"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "6229:2:12",
																				"nodeType": "YulLiteral",
																				"src": "6229:2:12",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "6214:3:12",
																			"nodeType": "YulIdentifier",
																			"src": "6214:3:12"
																		},
																		"nativeSrc": "6214:18:12",
																		"nodeType": "YulFunctionCall",
																		"src": "6214:18:12"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "6234:2:12",
																		"nodeType": "YulLiteral",
																		"src": "6234:2:12",
																		"type": "",
																		"value": "45"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "6207:6:12",
																	"nodeType": "YulIdentifier",
																	"src": "6207:6:12"
																},
																"nativeSrc": "6207:30:12",
																"nodeType": "YulFunctionCall",
																"src": "6207:30:12"
															},
															"nativeSrc": "6207:30:12",
															"nodeType": "YulExpressionStatement",
															"src": "6207:30:12"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "6257:9:12",
																				"nodeType": "YulIdentifier",
																				"src": "6257:9:12"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "6268:2:12",
																				"nodeType": "YulLiteral",
																				"src": "6268:2:12",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "6253:3:12",
																			"nodeType": "YulIdentifier",
																			"src": "6253:3:12"
																		},
																		"nativeSrc": "6253:18:12",
																		"nodeType": "YulFunctionCall",
																		"src": "6253:18:12"
																	},
																	{
																		"hexValue": "4552433732313a2063616c6c6572206973206e6f7420746f6b656e206f776e65",
																		"kind": "string",
																		"nativeSrc": "6273:34:12",
																		"nodeType": "YulLiteral",
																		"src": "6273:34:12",
																		"type": "",
																		"value": "ERC721: caller is not token owne"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "6246:6:12",
																	"nodeType": "YulIdentifier",
																	"src": "6246:6:12"
																},
																"nativeSrc": "6246:62:12",
																"nodeType": "YulFunctionCall",
																"src": "6246:62:12"
															},
															"nativeSrc": "6246:62:12",
															"nodeType": "YulExpressionStatement",
															"src": "6246:62:12"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "6328:9:12",
																				"nodeType": "YulIdentifier",
																				"src": "6328:9:12"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "6339:2:12",
																				"nodeType": "YulLiteral",
																				"src": "6339:2:12",
																				"type": "",
																				"value": "96"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "6324:3:12",
																			"nodeType": "YulIdentifier",
																			"src": "6324:3:12"
																		},
																		"nativeSrc": "6324:18:12",
																		"nodeType": "YulFunctionCall",
																		"src": "6324:18:12"
																	},
																	{
																		"hexValue": "72206f7220617070726f766564",
																		"kind": "string",
																		"nativeSrc": "6344:15:12",
																		"nodeType": "YulLiteral",
																		"src": "6344:15:12",
																		"type": "",
																		"value": "r or approved"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "6317:6:12",
																	"nodeType": "YulIdentifier",
																	"src": "6317:6:12"
																},
																"nativeSrc": "6317:43:12",
																"nodeType": "YulFunctionCall",
																"src": "6317:43:12"
															},
															"nativeSrc": "6317:43:12",
															"nodeType": "YulExpressionStatement",
															"src": "6317:43:12"
														},
														{
															"nativeSrc": "6369:27:12",
															"nodeType": "YulAssignment",
															"src": "6369:27:12",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "6381:9:12",
																		"nodeType": "YulIdentifier",
																		"src": "6381:9:12"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "6392:3:12",
																		"nodeType": "YulLiteral",
																		"src": "6392:3:12",
																		"type": "",
																		"value": "128"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "6377:3:12",
																	"nodeType": "YulIdentifier",
																	"src": "6377:3:12"
																},
																"nativeSrc": "6377:19:12",
																"nodeType": "YulFunctionCall",
																"src": "6377:19:12"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "6369:4:12",
																	"nodeType": "YulIdentifier",
																	"src": "6369:4:12"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_12a8e5623d251e191fe4a291d9a59bcc01a4db7a1f5c20fc8de44358c18308af__to_t_string_memory_ptr__fromStack_reversed",
												"nativeSrc": "5993:409:12",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "6144:9:12",
														"nodeType": "YulTypedName",
														"src": "6144:9:12",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "6158:4:12",
														"nodeType": "YulTypedName",
														"src": "6158:4:12",
														"type": ""
													}
												],
												"src": "5993:409:12"
											},
											{
												"body": {
													"nativeSrc": "6581:174:12",
													"nodeType": "YulBlock",
													"src": "6581:174:12",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "6598:9:12",
																		"nodeType": "YulIdentifier",
																		"src": "6598:9:12"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "6609:2:12",
																		"nodeType": "YulLiteral",
																		"src": "6609:2:12",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "6591:6:12",
																	"nodeType": "YulIdentifier",
																	"src": "6591:6:12"
																},
																"nativeSrc": "6591:21:12",
																"nodeType": "YulFunctionCall",
																"src": "6591:21:12"
															},
															"nativeSrc": "6591:21:12",
															"nodeType": "YulExpressionStatement",
															"src": "6591:21:12"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "6632:9:12",
																				"nodeType": "YulIdentifier",
																				"src": "6632:9:12"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "6643:2:12",
																				"nodeType": "YulLiteral",
																				"src": "6643:2:12",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "6628:3:12",
																			"nodeType": "YulIdentifier",
																			"src": "6628:3:12"
																		},
																		"nativeSrc": "6628:18:12",
																		"nodeType": "YulFunctionCall",
																		"src": "6628:18:12"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "6648:2:12",
																		"nodeType": "YulLiteral",
																		"src": "6648:2:12",
																		"type": "",
																		"value": "24"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "6621:6:12",
																	"nodeType": "YulIdentifier",
																	"src": "6621:6:12"
																},
																"nativeSrc": "6621:30:12",
																"nodeType": "YulFunctionCall",
																"src": "6621:30:12"
															},
															"nativeSrc": "6621:30:12",
															"nodeType": "YulExpressionStatement",
															"src": "6621:30:12"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "6671:9:12",
																				"nodeType": "YulIdentifier",
																				"src": "6671:9:12"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "6682:2:12",
																				"nodeType": "YulLiteral",
																				"src": "6682:2:12",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "6667:3:12",
																			"nodeType": "YulIdentifier",
																			"src": "6667:3:12"
																		},
																		"nativeSrc": "6667:18:12",
																		"nodeType": "YulFunctionCall",
																		"src": "6667:18:12"
																	},
																	{
																		"hexValue": "4552433732313a20696e76616c696420746f6b656e204944",
																		"kind": "string",
																		"nativeSrc": "6687:26:12",
																		"nodeType": "YulLiteral",
																		"src": "6687:26:12",
																		"type": "",
																		"value": "ERC721: invalid token ID"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "6660:6:12",
																	"nodeType": "YulIdentifier",
																	"src": "6660:6:12"
																},
																"nativeSrc": "6660:54:12",
																"nodeType": "YulFunctionCall",
																"src": "6660:54:12"
															},
															"nativeSrc": "6660:54:12",
															"nodeType": "YulExpressionStatement",
															"src": "6660:54:12"
														},
														{
															"nativeSrc": "6723:26:12",
															"nodeType": "YulAssignment",
															"src": "6723:26:12",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "6735:9:12",
																		"nodeType": "YulIdentifier",
																		"src": "6735:9:12"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "6746:2:12",
																		"nodeType": "YulLiteral",
																		"src": "6746:2:12",
																		"type": "",
																		"value": "96"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "6731:3:12",
																	"nodeType": "YulIdentifier",
																	"src": "6731:3:12"
																},
																"nativeSrc": "6731:18:12",
																"nodeType": "YulFunctionCall",
																"src": "6731:18:12"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "6723:4:12",
																	"nodeType": "YulIdentifier",
																	"src": "6723:4:12"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_b08d2b0fec7cc108ab049809a8beb42779d969a49299d0c317c907d9db22974f__to_t_string_memory_ptr__fromStack_reversed",
												"nativeSrc": "6407:348:12",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "6558:9:12",
														"nodeType": "YulTypedName",
														"src": "6558:9:12",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "6572:4:12",
														"nodeType": "YulTypedName",
														"src": "6572:4:12",
														"type": ""
													}
												],
												"src": "6407:348:12"
											},
											{
												"body": {
													"nativeSrc": "6934:231:12",
													"nodeType": "YulBlock",
													"src": "6934:231:12",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "6951:9:12",
																		"nodeType": "YulIdentifier",
																		"src": "6951:9:12"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "6962:2:12",
																		"nodeType": "YulLiteral",
																		"src": "6962:2:12",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "6944:6:12",
																	"nodeType": "YulIdentifier",
																	"src": "6944:6:12"
																},
																"nativeSrc": "6944:21:12",
																"nodeType": "YulFunctionCall",
																"src": "6944:21:12"
															},
															"nativeSrc": "6944:21:12",
															"nodeType": "YulExpressionStatement",
															"src": "6944:21:12"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "6985:9:12",
																				"nodeType": "YulIdentifier",
																				"src": "6985:9:12"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "6996:2:12",
																				"nodeType": "YulLiteral",
																				"src": "6996:2:12",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "6981:3:12",
																			"nodeType": "YulIdentifier",
																			"src": "6981:3:12"
																		},
																		"nativeSrc": "6981:18:12",
																		"nodeType": "YulFunctionCall",
																		"src": "6981:18:12"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "7001:2:12",
																		"nodeType": "YulLiteral",
																		"src": "7001:2:12",
																		"type": "",
																		"value": "41"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "6974:6:12",
																	"nodeType": "YulIdentifier",
																	"src": "6974:6:12"
																},
																"nativeSrc": "6974:30:12",
																"nodeType": "YulFunctionCall",
																"src": "6974:30:12"
															},
															"nativeSrc": "6974:30:12",
															"nodeType": "YulExpressionStatement",
															"src": "6974:30:12"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "7024:9:12",
																				"nodeType": "YulIdentifier",
																				"src": "7024:9:12"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "7035:2:12",
																				"nodeType": "YulLiteral",
																				"src": "7035:2:12",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "7020:3:12",
																			"nodeType": "YulIdentifier",
																			"src": "7020:3:12"
																		},
																		"nativeSrc": "7020:18:12",
																		"nodeType": "YulFunctionCall",
																		"src": "7020:18:12"
																	},
																	{
																		"hexValue": "4552433732313a2061646472657373207a65726f206973206e6f742061207661",
																		"kind": "string",
																		"nativeSrc": "7040:34:12",
																		"nodeType": "YulLiteral",
																		"src": "7040:34:12",
																		"type": "",
																		"value": "ERC721: address zero is not a va"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "7013:6:12",
																	"nodeType": "YulIdentifier",
																	"src": "7013:6:12"
																},
																"nativeSrc": "7013:62:12",
																"nodeType": "YulFunctionCall",
																"src": "7013:62:12"
															},
															"nativeSrc": "7013:62:12",
															"nodeType": "YulExpressionStatement",
															"src": "7013:62:12"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "7095:9:12",
																				"nodeType": "YulIdentifier",
																				"src": "7095:9:12"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "7106:2:12",
																				"nodeType": "YulLiteral",
																				"src": "7106:2:12",
																				"type": "",
																				"value": "96"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "7091:3:12",
																			"nodeType": "YulIdentifier",
																			"src": "7091:3:12"
																		},
																		"nativeSrc": "7091:18:12",
																		"nodeType": "YulFunctionCall",
																		"src": "7091:18:12"
																	},
																	{
																		"hexValue": "6c6964206f776e6572",
																		"kind": "string",
																		"nativeSrc": "7111:11:12",
																		"nodeType": "YulLiteral",
																		"src": "7111:11:12",
																		"type": "",
																		"value": "lid owner"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "7084:6:12",
																	"nodeType": "YulIdentifier",
																	"src": "7084:6:12"
																},
																"nativeSrc": "7084:39:12",
																"nodeType": "YulFunctionCall",
																"src": "7084:39:12"
															},
															"nativeSrc": "7084:39:12",
															"nodeType": "YulExpressionStatement",
															"src": "7084:39:12"
														},
														{
															"nativeSrc": "7132:27:12",
															"nodeType": "YulAssignment",
															"src": "7132:27:12",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "7144:9:12",
																		"nodeType": "YulIdentifier",
																		"src": "7144:9:12"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "7155:3:12",
																		"nodeType": "YulLiteral",
																		"src": "7155:3:12",
																		"type": "",
																		"value": "128"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "7140:3:12",
																	"nodeType": "YulIdentifier",
																	"src": "7140:3:12"
																},
																"nativeSrc": "7140:19:12",
																"nodeType": "YulFunctionCall",
																"src": "7140:19:12"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "7132:4:12",
																	"nodeType": "YulIdentifier",
																	"src": "7132:4:12"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_6d05c90094f31cfeb8f0eb86f0a513af3f7f8992991fbde41b08aa7960677159__to_t_string_memory_ptr__fromStack_reversed",
												"nativeSrc": "6760:405:12",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "6911:9:12",
														"nodeType": "YulTypedName",
														"src": "6911:9:12",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "6925:4:12",
														"nodeType": "YulTypedName",
														"src": "6925:4:12",
														"type": ""
													}
												],
												"src": "6760:405:12"
											},
											{
												"body": {
													"nativeSrc": "7357:309:12",
													"nodeType": "YulBlock",
													"src": "7357:309:12",
													"statements": [
														{
															"nativeSrc": "7367:27:12",
															"nodeType": "YulVariableDeclaration",
															"src": "7367:27:12",
															"value": {
																"arguments": [
																	{
																		"name": "value0",
																		"nativeSrc": "7387:6:12",
																		"nodeType": "YulIdentifier",
																		"src": "7387:6:12"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nativeSrc": "7381:5:12",
																	"nodeType": "YulIdentifier",
																	"src": "7381:5:12"
																},
																"nativeSrc": "7381:13:12",
																"nodeType": "YulFunctionCall",
																"src": "7381:13:12"
															},
															"variables": [
																{
																	"name": "length",
																	"nativeSrc": "7371:6:12",
																	"nodeType": "YulTypedName",
																	"src": "7371:6:12",
																	"type": ""
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value0",
																				"nativeSrc": "7442:6:12",
																				"nodeType": "YulIdentifier",
																				"src": "7442:6:12"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "7450:4:12",
																				"nodeType": "YulLiteral",
																				"src": "7450:4:12",
																				"type": "",
																				"value": "0x20"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "7438:3:12",
																			"nodeType": "YulIdentifier",
																			"src": "7438:3:12"
																		},
																		"nativeSrc": "7438:17:12",
																		"nodeType": "YulFunctionCall",
																		"src": "7438:17:12"
																	},
																	{
																		"name": "pos",
																		"nativeSrc": "7457:3:12",
																		"nodeType": "YulIdentifier",
																		"src": "7457:3:12"
																	},
																	{
																		"name": "length",
																		"nativeSrc": "7462:6:12",
																		"nodeType": "YulIdentifier",
																		"src": "7462:6:12"
																	}
																],
																"functionName": {
																	"name": "copy_memory_to_memory_with_cleanup",
																	"nativeSrc": "7403:34:12",
																	"nodeType": "YulIdentifier",
																	"src": "7403:34:12"
																},
																"nativeSrc": "7403:66:12",
																"nodeType": "YulFunctionCall",
																"src": "7403:66:12"
															},
															"nativeSrc": "7403:66:12",
															"nodeType": "YulExpressionStatement",
															"src": "7403:66:12"
														},
														{
															"nativeSrc": "7478:29:12",
															"nodeType": "YulVariableDeclaration",
															"src": "7478:29:12",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "7495:3:12",
																		"nodeType": "YulIdentifier",
																		"src": "7495:3:12"
																	},
																	{
																		"name": "length",
																		"nativeSrc": "7500:6:12",
																		"nodeType": "YulIdentifier",
																		"src": "7500:6:12"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "7491:3:12",
																	"nodeType": "YulIdentifier",
																	"src": "7491:3:12"
																},
																"nativeSrc": "7491:16:12",
																"nodeType": "YulFunctionCall",
																"src": "7491:16:12"
															},
															"variables": [
																{
																	"name": "end_1",
																	"nativeSrc": "7482:5:12",
																	"nodeType": "YulTypedName",
																	"src": "7482:5:12",
																	"type": ""
																}
															]
														},
														{
															"nativeSrc": "7516:29:12",
															"nodeType": "YulVariableDeclaration",
															"src": "7516:29:12",
															"value": {
																"arguments": [
																	{
																		"name": "value1",
																		"nativeSrc": "7538:6:12",
																		"nodeType": "YulIdentifier",
																		"src": "7538:6:12"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nativeSrc": "7532:5:12",
																	"nodeType": "YulIdentifier",
																	"src": "7532:5:12"
																},
																"nativeSrc": "7532:13:12",
																"nodeType": "YulFunctionCall",
																"src": "7532:13:12"
															},
															"variables": [
																{
																	"name": "length_1",
																	"nativeSrc": "7520:8:12",
																	"nodeType": "YulTypedName",
																	"src": "7520:8:12",
																	"type": ""
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value1",
																				"nativeSrc": "7593:6:12",
																				"nodeType": "YulIdentifier",
																				"src": "7593:6:12"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "7601:4:12",
																				"nodeType": "YulLiteral",
																				"src": "7601:4:12",
																				"type": "",
																				"value": "0x20"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "7589:3:12",
																			"nodeType": "YulIdentifier",
																			"src": "7589:3:12"
																		},
																		"nativeSrc": "7589:17:12",
																		"nodeType": "YulFunctionCall",
																		"src": "7589:17:12"
																	},
																	{
																		"name": "end_1",
																		"nativeSrc": "7608:5:12",
																		"nodeType": "YulIdentifier",
																		"src": "7608:5:12"
																	},
																	{
																		"name": "length_1",
																		"nativeSrc": "7615:8:12",
																		"nodeType": "YulIdentifier",
																		"src": "7615:8:12"
																	}
																],
																"functionName": {
																	"name": "copy_memory_to_memory_with_cleanup",
																	"nativeSrc": "7554:34:12",
																	"nodeType": "YulIdentifier",
																	"src": "7554:34:12"
																},
																"nativeSrc": "7554:70:12",
																"nodeType": "YulFunctionCall",
																"src": "7554:70:12"
															},
															"nativeSrc": "7554:70:12",
															"nodeType": "YulExpressionStatement",
															"src": "7554:70:12"
														},
														{
															"nativeSrc": "7633:27:12",
															"nodeType": "YulAssignment",
															"src": "7633:27:12",
															"value": {
																"arguments": [
																	{
																		"name": "end_1",
																		"nativeSrc": "7644:5:12",
																		"nodeType": "YulIdentifier",
																		"src": "7644:5:12"
																	},
																	{
																		"name": "length_1",
																		"nativeSrc": "7651:8:12",
																		"nodeType": "YulIdentifier",
																		"src": "7651:8:12"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "7640:3:12",
																	"nodeType": "YulIdentifier",
																	"src": "7640:3:12"
																},
																"nativeSrc": "7640:20:12",
																"nodeType": "YulFunctionCall",
																"src": "7640:20:12"
															},
															"variableNames": [
																{
																	"name": "end",
																	"nativeSrc": "7633:3:12",
																	"nodeType": "YulIdentifier",
																	"src": "7633:3:12"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_packed_t_string_memory_ptr_t_string_memory_ptr__to_t_string_memory_ptr_t_string_memory_ptr__nonPadded_inplace_fromStack_reversed",
												"nativeSrc": "7170:496:12",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "pos",
														"nativeSrc": "7325:3:12",
														"nodeType": "YulTypedName",
														"src": "7325:3:12",
														"type": ""
													},
													{
														"name": "value1",
														"nativeSrc": "7330:6:12",
														"nodeType": "YulTypedName",
														"src": "7330:6:12",
														"type": ""
													},
													{
														"name": "value0",
														"nativeSrc": "7338:6:12",
														"nodeType": "YulTypedName",
														"src": "7338:6:12",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "end",
														"nativeSrc": "7349:3:12",
														"nodeType": "YulTypedName",
														"src": "7349:3:12",
														"type": ""
													}
												],
												"src": "7170:496:12"
											},
											{
												"body": {
													"nativeSrc": "7845:227:12",
													"nodeType": "YulBlock",
													"src": "7845:227:12",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "7862:9:12",
																		"nodeType": "YulIdentifier",
																		"src": "7862:9:12"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "7873:2:12",
																		"nodeType": "YulLiteral",
																		"src": "7873:2:12",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "7855:6:12",
																	"nodeType": "YulIdentifier",
																	"src": "7855:6:12"
																},
																"nativeSrc": "7855:21:12",
																"nodeType": "YulFunctionCall",
																"src": "7855:21:12"
															},
															"nativeSrc": "7855:21:12",
															"nodeType": "YulExpressionStatement",
															"src": "7855:21:12"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "7896:9:12",
																				"nodeType": "YulIdentifier",
																				"src": "7896:9:12"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "7907:2:12",
																				"nodeType": "YulLiteral",
																				"src": "7907:2:12",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "7892:3:12",
																			"nodeType": "YulIdentifier",
																			"src": "7892:3:12"
																		},
																		"nativeSrc": "7892:18:12",
																		"nodeType": "YulFunctionCall",
																		"src": "7892:18:12"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "7912:2:12",
																		"nodeType": "YulLiteral",
																		"src": "7912:2:12",
																		"type": "",
																		"value": "37"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "7885:6:12",
																	"nodeType": "YulIdentifier",
																	"src": "7885:6:12"
																},
																"nativeSrc": "7885:30:12",
																"nodeType": "YulFunctionCall",
																"src": "7885:30:12"
															},
															"nativeSrc": "7885:30:12",
															"nodeType": "YulExpressionStatement",
															"src": "7885:30:12"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "7935:9:12",
																				"nodeType": "YulIdentifier",
																				"src": "7935:9:12"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "7946:2:12",
																				"nodeType": "YulLiteral",
																				"src": "7946:2:12",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "7931:3:12",
																			"nodeType": "YulIdentifier",
																			"src": "7931:3:12"
																		},
																		"nativeSrc": "7931:18:12",
																		"nodeType": "YulFunctionCall",
																		"src": "7931:18:12"
																	},
																	{
																		"hexValue": "4552433732313a207472616e736665722066726f6d20696e636f727265637420",
																		"kind": "string",
																		"nativeSrc": "7951:34:12",
																		"nodeType": "YulLiteral",
																		"src": "7951:34:12",
																		"type": "",
																		"value": "ERC721: transfer from incorrect "
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "7924:6:12",
																	"nodeType": "YulIdentifier",
																	"src": "7924:6:12"
																},
																"nativeSrc": "7924:62:12",
																"nodeType": "YulFunctionCall",
																"src": "7924:62:12"
															},
															"nativeSrc": "7924:62:12",
															"nodeType": "YulExpressionStatement",
															"src": "7924:62:12"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "8006:9:12",
																				"nodeType": "YulIdentifier",
																				"src": "8006:9:12"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "8017:2:12",
																				"nodeType": "YulLiteral",
																				"src": "8017:2:12",
																				"type": "",
																				"value": "96"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "8002:3:12",
																			"nodeType": "YulIdentifier",
																			"src": "8002:3:12"
																		},
																		"nativeSrc": "8002:18:12",
																		"nodeType": "YulFunctionCall",
																		"src": "8002:18:12"
																	},
																	{
																		"hexValue": "6f776e6572",
																		"kind": "string",
																		"nativeSrc": "8022:7:12",
																		"nodeType": "YulLiteral",
																		"src": "8022:7:12",
																		"type": "",
																		"value": "owner"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "7995:6:12",
																	"nodeType": "YulIdentifier",
																	"src": "7995:6:12"
																},
																"nativeSrc": "7995:35:12",
																"nodeType": "YulFunctionCall",
																"src": "7995:35:12"
															},
															"nativeSrc": "7995:35:12",
															"nodeType": "YulExpressionStatement",
															"src": "7995:35:12"
														},
														{
															"nativeSrc": "8039:27:12",
															"nodeType": "YulAssignment",
															"src": "8039:27:12",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "8051:9:12",
																		"nodeType": "YulIdentifier",
																		"src": "8051:9:12"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "8062:3:12",
																		"nodeType": "YulLiteral",
																		"src": "8062:3:12",
																		"type": "",
																		"value": "128"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "8047:3:12",
																	"nodeType": "YulIdentifier",
																	"src": "8047:3:12"
																},
																"nativeSrc": "8047:19:12",
																"nodeType": "YulFunctionCall",
																"src": "8047:19:12"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "8039:4:12",
																	"nodeType": "YulIdentifier",
																	"src": "8039:4:12"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_277f8ee9d5b4fc3c4149386f24de0fc1bbc63a8210e2197bfd1c0376a2ac5f48__to_t_string_memory_ptr__fromStack_reversed",
												"nativeSrc": "7671:401:12",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "7822:9:12",
														"nodeType": "YulTypedName",
														"src": "7822:9:12",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "7836:4:12",
														"nodeType": "YulTypedName",
														"src": "7836:4:12",
														"type": ""
													}
												],
												"src": "7671:401:12"
											},
											{
												"body": {
													"nativeSrc": "8251:226:12",
													"nodeType": "YulBlock",
													"src": "8251:226:12",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "8268:9:12",
																		"nodeType": "YulIdentifier",
																		"src": "8268:9:12"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "8279:2:12",
																		"nodeType": "YulLiteral",
																		"src": "8279:2:12",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "8261:6:12",
																	"nodeType": "YulIdentifier",
																	"src": "8261:6:12"
																},
																"nativeSrc": "8261:21:12",
																"nodeType": "YulFunctionCall",
																"src": "8261:21:12"
															},
															"nativeSrc": "8261:21:12",
															"nodeType": "YulExpressionStatement",
															"src": "8261:21:12"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "8302:9:12",
																				"nodeType": "YulIdentifier",
																				"src": "8302:9:12"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "8313:2:12",
																				"nodeType": "YulLiteral",
																				"src": "8313:2:12",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "8298:3:12",
																			"nodeType": "YulIdentifier",
																			"src": "8298:3:12"
																		},
																		"nativeSrc": "8298:18:12",
																		"nodeType": "YulFunctionCall",
																		"src": "8298:18:12"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "8318:2:12",
																		"nodeType": "YulLiteral",
																		"src": "8318:2:12",
																		"type": "",
																		"value": "36"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "8291:6:12",
																	"nodeType": "YulIdentifier",
																	"src": "8291:6:12"
																},
																"nativeSrc": "8291:30:12",
																"nodeType": "YulFunctionCall",
																"src": "8291:30:12"
															},
															"nativeSrc": "8291:30:12",
															"nodeType": "YulExpressionStatement",
															"src": "8291:30:12"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "8341:9:12",
																				"nodeType": "YulIdentifier",
																				"src": "8341:9:12"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "8352:2:12",
																				"nodeType": "YulLiteral",
																				"src": "8352:2:12",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "8337:3:12",
																			"nodeType": "YulIdentifier",
																			"src": "8337:3:12"
																		},
																		"nativeSrc": "8337:18:12",
																		"nodeType": "YulFunctionCall",
																		"src": "8337:18:12"
																	},
																	{
																		"hexValue": "4552433732313a207472616e7366657220746f20746865207a65726f20616464",
																		"kind": "string",
																		"nativeSrc": "8357:34:12",
																		"nodeType": "YulLiteral",
																		"src": "8357:34:12",
																		"type": "",
																		"value": "ERC721: transfer to the zero add"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "8330:6:12",
																	"nodeType": "YulIdentifier",
																	"src": "8330:6:12"
																},
																"nativeSrc": "8330:62:12",
																"nodeType": "YulFunctionCall",
																"src": "8330:62:12"
															},
															"nativeSrc": "8330:62:12",
															"nodeType": "YulExpressionStatement",
															"src": "8330:62:12"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "8412:9:12",
																				"nodeType": "YulIdentifier",
																				"src": "8412:9:12"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "8423:2:12",
																				"nodeType": "YulLiteral",
																				"src": "8423:2:12",
																				"type": "",
																				"value": "96"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "8408:3:12",
																			"nodeType": "YulIdentifier",
																			"src": "8408:3:12"
																		},
																		"nativeSrc": "8408:18:12",
																		"nodeType": "YulFunctionCall",
																		"src": "8408:18:12"
																	},
																	{
																		"hexValue": "72657373",
																		"kind": "string",
																		"nativeSrc": "8428:6:12",
																		"nodeType": "YulLiteral",
																		"src": "8428:6:12",
																		"type": "",
																		"value": "ress"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "8401:6:12",
																	"nodeType": "YulIdentifier",
																	"src": "8401:6:12"
																},
																"nativeSrc": "8401:34:12",
																"nodeType": "YulFunctionCall",
																"src": "8401:34:12"
															},
															"nativeSrc": "8401:34:12",
															"nodeType": "YulExpressionStatement",
															"src": "8401:34:12"
														},
														{
															"nativeSrc": "8444:27:12",
															"nodeType": "YulAssignment",
															"src": "8444:27:12",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "8456:9:12",
																		"nodeType": "YulIdentifier",
																		"src": "8456:9:12"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "8467:3:12",
																		"nodeType": "YulLiteral",
																		"src": "8467:3:12",
																		"type": "",
																		"value": "128"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "8452:3:12",
																	"nodeType": "YulIdentifier",
																	"src": "8452:3:12"
																},
																"nativeSrc": "8452:19:12",
																"nodeType": "YulFunctionCall",
																"src": "8452:19:12"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "8444:4:12",
																	"nodeType": "YulIdentifier",
																	"src": "8444:4:12"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_455fea98ea03c32d7dd1a6f1426917d80529bf47b3ccbde74e7206e889e709f4__to_t_string_memory_ptr__fromStack_reversed",
												"nativeSrc": "8077:400:12",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "8228:9:12",
														"nodeType": "YulTypedName",
														"src": "8228:9:12",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "8242:4:12",
														"nodeType": "YulTypedName",
														"src": "8242:4:12",
														"type": ""
													}
												],
												"src": "8077:400:12"
											},
											{
												"body": {
													"nativeSrc": "8656:175:12",
													"nodeType": "YulBlock",
													"src": "8656:175:12",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "8673:9:12",
																		"nodeType": "YulIdentifier",
																		"src": "8673:9:12"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "8684:2:12",
																		"nodeType": "YulLiteral",
																		"src": "8684:2:12",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "8666:6:12",
																	"nodeType": "YulIdentifier",
																	"src": "8666:6:12"
																},
																"nativeSrc": "8666:21:12",
																"nodeType": "YulFunctionCall",
																"src": "8666:21:12"
															},
															"nativeSrc": "8666:21:12",
															"nodeType": "YulExpressionStatement",
															"src": "8666:21:12"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "8707:9:12",
																				"nodeType": "YulIdentifier",
																				"src": "8707:9:12"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "8718:2:12",
																				"nodeType": "YulLiteral",
																				"src": "8718:2:12",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "8703:3:12",
																			"nodeType": "YulIdentifier",
																			"src": "8703:3:12"
																		},
																		"nativeSrc": "8703:18:12",
																		"nodeType": "YulFunctionCall",
																		"src": "8703:18:12"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "8723:2:12",
																		"nodeType": "YulLiteral",
																		"src": "8723:2:12",
																		"type": "",
																		"value": "25"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "8696:6:12",
																	"nodeType": "YulIdentifier",
																	"src": "8696:6:12"
																},
																"nativeSrc": "8696:30:12",
																"nodeType": "YulFunctionCall",
																"src": "8696:30:12"
															},
															"nativeSrc": "8696:30:12",
															"nodeType": "YulExpressionStatement",
															"src": "8696:30:12"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "8746:9:12",
																				"nodeType": "YulIdentifier",
																				"src": "8746:9:12"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "8757:2:12",
																				"nodeType": "YulLiteral",
																				"src": "8757:2:12",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "8742:3:12",
																			"nodeType": "YulIdentifier",
																			"src": "8742:3:12"
																		},
																		"nativeSrc": "8742:18:12",
																		"nodeType": "YulFunctionCall",
																		"src": "8742:18:12"
																	},
																	{
																		"hexValue": "4552433732313a20617070726f766520746f2063616c6c6572",
																		"kind": "string",
																		"nativeSrc": "8762:27:12",
																		"nodeType": "YulLiteral",
																		"src": "8762:27:12",
																		"type": "",
																		"value": "ERC721: approve to caller"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "8735:6:12",
																	"nodeType": "YulIdentifier",
																	"src": "8735:6:12"
																},
																"nativeSrc": "8735:55:12",
																"nodeType": "YulFunctionCall",
																"src": "8735:55:12"
															},
															"nativeSrc": "8735:55:12",
															"nodeType": "YulExpressionStatement",
															"src": "8735:55:12"
														},
														{
															"nativeSrc": "8799:26:12",
															"nodeType": "YulAssignment",
															"src": "8799:26:12",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "8811:9:12",
																		"nodeType": "YulIdentifier",
																		"src": "8811:9:12"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "8822:2:12",
																		"nodeType": "YulLiteral",
																		"src": "8822:2:12",
																		"type": "",
																		"value": "96"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "8807:3:12",
																	"nodeType": "YulIdentifier",
																	"src": "8807:3:12"
																},
																"nativeSrc": "8807:18:12",
																"nodeType": "YulFunctionCall",
																"src": "8807:18:12"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "8799:4:12",
																	"nodeType": "YulIdentifier",
																	"src": "8799:4:12"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_45fe4329685be5ecd250fd0e6a25aea0ea4d0e30fb6a73c118b95749e6d70d05__to_t_string_memory_ptr__fromStack_reversed",
												"nativeSrc": "8482:349:12",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "8633:9:12",
														"nodeType": "YulTypedName",
														"src": "8633:9:12",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "8647:4:12",
														"nodeType": "YulTypedName",
														"src": "8647:4:12",
														"type": ""
													}
												],
												"src": "8482:349:12"
											},
											{
												"body": {
													"nativeSrc": "9010:240:12",
													"nodeType": "YulBlock",
													"src": "9010:240:12",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "9027:9:12",
																		"nodeType": "YulIdentifier",
																		"src": "9027:9:12"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "9038:2:12",
																		"nodeType": "YulLiteral",
																		"src": "9038:2:12",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "9020:6:12",
																	"nodeType": "YulIdentifier",
																	"src": "9020:6:12"
																},
																"nativeSrc": "9020:21:12",
																"nodeType": "YulFunctionCall",
																"src": "9020:21:12"
															},
															"nativeSrc": "9020:21:12",
															"nodeType": "YulExpressionStatement",
															"src": "9020:21:12"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "9061:9:12",
																				"nodeType": "YulIdentifier",
																				"src": "9061:9:12"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "9072:2:12",
																				"nodeType": "YulLiteral",
																				"src": "9072:2:12",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "9057:3:12",
																			"nodeType": "YulIdentifier",
																			"src": "9057:3:12"
																		},
																		"nativeSrc": "9057:18:12",
																		"nodeType": "YulFunctionCall",
																		"src": "9057:18:12"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "9077:2:12",
																		"nodeType": "YulLiteral",
																		"src": "9077:2:12",
																		"type": "",
																		"value": "50"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "9050:6:12",
																	"nodeType": "YulIdentifier",
																	"src": "9050:6:12"
																},
																"nativeSrc": "9050:30:12",
																"nodeType": "YulFunctionCall",
																"src": "9050:30:12"
															},
															"nativeSrc": "9050:30:12",
															"nodeType": "YulExpressionStatement",
															"src": "9050:30:12"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "9100:9:12",
																				"nodeType": "YulIdentifier",
																				"src": "9100:9:12"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "9111:2:12",
																				"nodeType": "YulLiteral",
																				"src": "9111:2:12",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "9096:3:12",
																			"nodeType": "YulIdentifier",
																			"src": "9096:3:12"
																		},
																		"nativeSrc": "9096:18:12",
																		"nodeType": "YulFunctionCall",
																		"src": "9096:18:12"
																	},
																	{
																		"hexValue": "4552433732313a207472616e7366657220746f206e6f6e204552433732315265",
																		"kind": "string",
																		"nativeSrc": "9116:34:12",
																		"nodeType": "YulLiteral",
																		"src": "9116:34:12",
																		"type": "",
																		"value": "ERC721: transfer to non ERC721Re"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "9089:6:12",
																	"nodeType": "YulIdentifier",
																	"src": "9089:6:12"
																},
																"nativeSrc": "9089:62:12",
																"nodeType": "YulFunctionCall",
																"src": "9089:62:12"
															},
															"nativeSrc": "9089:62:12",
															"nodeType": "YulExpressionStatement",
															"src": "9089:62:12"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "9171:9:12",
																				"nodeType": "YulIdentifier",
																				"src": "9171:9:12"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "9182:2:12",
																				"nodeType": "YulLiteral",
																				"src": "9182:2:12",
																				"type": "",
																				"value": "96"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "9167:3:12",
																			"nodeType": "YulIdentifier",
																			"src": "9167:3:12"
																		},
																		"nativeSrc": "9167:18:12",
																		"nodeType": "YulFunctionCall",
																		"src": "9167:18:12"
																	},
																	{
																		"hexValue": "63656976657220696d706c656d656e746572",
																		"kind": "string",
																		"nativeSrc": "9187:20:12",
																		"nodeType": "YulLiteral",
																		"src": "9187:20:12",
																		"type": "",
																		"value": "ceiver implementer"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "9160:6:12",
																	"nodeType": "YulIdentifier",
																	"src": "9160:6:12"
																},
																"nativeSrc": "9160:48:12",
																"nodeType": "YulFunctionCall",
																"src": "9160:48:12"
															},
															"nativeSrc": "9160:48:12",
															"nodeType": "YulExpressionStatement",
															"src": "9160:48:12"
														},
														{
															"nativeSrc": "9217:27:12",
															"nodeType": "YulAssignment",
															"src": "9217:27:12",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "9229:9:12",
																		"nodeType": "YulIdentifier",
																		"src": "9229:9:12"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "9240:3:12",
																		"nodeType": "YulLiteral",
																		"src": "9240:3:12",
																		"type": "",
																		"value": "128"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "9225:3:12",
																	"nodeType": "YulIdentifier",
																	"src": "9225:3:12"
																},
																"nativeSrc": "9225:19:12",
																"nodeType": "YulFunctionCall",
																"src": "9225:19:12"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "9217:4:12",
																	"nodeType": "YulIdentifier",
																	"src": "9217:4:12"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_1e766a06da43a53d0f4c380e06e5a342e14d5af1bf8501996c844905530ca84e__to_t_string_memory_ptr__fromStack_reversed",
												"nativeSrc": "8836:414:12",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "8987:9:12",
														"nodeType": "YulTypedName",
														"src": "8987:9:12",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "9001:4:12",
														"nodeType": "YulTypedName",
														"src": "9001:4:12",
														"type": ""
													}
												],
												"src": "8836:414:12"
											},
											{
												"body": {
													"nativeSrc": "9287:95:12",
													"nodeType": "YulBlock",
													"src": "9287:95:12",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "9304:1:12",
																		"nodeType": "YulLiteral",
																		"src": "9304:1:12",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"arguments": [
																			{
																				"kind": "number",
																				"nativeSrc": "9311:3:12",
																				"nodeType": "YulLiteral",
																				"src": "9311:3:12",
																				"type": "",
																				"value": "224"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "9316:10:12",
																				"nodeType": "YulLiteral",
																				"src": "9316:10:12",
																				"type": "",
																				"value": "0x4e487b71"
																			}
																		],
																		"functionName": {
																			"name": "shl",
																			"nativeSrc": "9307:3:12",
																			"nodeType": "YulIdentifier",
																			"src": "9307:3:12"
																		},
																		"nativeSrc": "9307:20:12",
																		"nodeType": "YulFunctionCall",
																		"src": "9307:20:12"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "9297:6:12",
																	"nodeType": "YulIdentifier",
																	"src": "9297:6:12"
																},
																"nativeSrc": "9297:31:12",
																"nodeType": "YulFunctionCall",
																"src": "9297:31:12"
															},
															"nativeSrc": "9297:31:12",
															"nodeType": "YulExpressionStatement",
															"src": "9297:31:12"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "9344:1:12",
																		"nodeType": "YulLiteral",
																		"src": "9344:1:12",
																		"type": "",
																		"value": "4"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "9347:4:12",
																		"nodeType": "YulLiteral",
																		"src": "9347:4:12",
																		"type": "",
																		"value": "0x12"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "9337:6:12",
																	"nodeType": "YulIdentifier",
																	"src": "9337:6:12"
																},
																"nativeSrc": "9337:15:12",
																"nodeType": "YulFunctionCall",
																"src": "9337:15:12"
															},
															"nativeSrc": "9337:15:12",
															"nodeType": "YulExpressionStatement",
															"src": "9337:15:12"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "9368:1:12",
																		"nodeType": "YulLiteral",
																		"src": "9368:1:12",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "9371:4:12",
																		"nodeType": "YulLiteral",
																		"src": "9371:4:12",
																		"type": "",
																		"value": "0x24"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nativeSrc": "9361:6:12",
																	"nodeType": "YulIdentifier",
																	"src": "9361:6:12"
																},
																"nativeSrc": "9361:15:12",
																"nodeType": "YulFunctionCall",
																"src": "9361:15:12"
															},
															"nativeSrc": "9361:15:12",
															"nodeType": "YulExpressionStatement",
															"src": "9361:15:12"
														}
													]
												},
												"name": "panic_error_0x12",
												"nativeSrc": "9255:127:12",
												"nodeType": "YulFunctionDefinition",
												"src": "9255:127:12"
											},
											{
												"body": {
													"nativeSrc": "9419:95:12",
													"nodeType": "YulBlock",
													"src": "9419:95:12",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "9436:1:12",
																		"nodeType": "YulLiteral",
																		"src": "9436:1:12",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"arguments": [
																			{
																				"kind": "number",
																				"nativeSrc": "9443:3:12",
																				"nodeType": "YulLiteral",
																				"src": "9443:3:12",
																				"type": "",
																				"value": "224"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "9448:10:12",
																				"nodeType": "YulLiteral",
																				"src": "9448:10:12",
																				"type": "",
																				"value": "0x4e487b71"
																			}
																		],
																		"functionName": {
																			"name": "shl",
																			"nativeSrc": "9439:3:12",
																			"nodeType": "YulIdentifier",
																			"src": "9439:3:12"
																		},
																		"nativeSrc": "9439:20:12",
																		"nodeType": "YulFunctionCall",
																		"src": "9439:20:12"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "9429:6:12",
																	"nodeType": "YulIdentifier",
																	"src": "9429:6:12"
																},
																"nativeSrc": "9429:31:12",
																"nodeType": "YulFunctionCall",
																"src": "9429:31:12"
															},
															"nativeSrc": "9429:31:12",
															"nodeType": "YulExpressionStatement",
															"src": "9429:31:12"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "9476:1:12",
																		"nodeType": "YulLiteral",
																		"src": "9476:1:12",
																		"type": "",
																		"value": "4"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "9479:4:12",
																		"nodeType": "YulLiteral",
																		"src": "9479:4:12",
																		"type": "",
																		"value": "0x11"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "9469:6:12",
																	"nodeType": "YulIdentifier",
																	"src": "9469:6:12"
																},
																"nativeSrc": "9469:15:12",
																"nodeType": "YulFunctionCall",
																"src": "9469:15:12"
															},
															"nativeSrc": "9469:15:12",
															"nodeType": "YulExpressionStatement",
															"src": "9469:15:12"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "9500:1:12",
																		"nodeType": "YulLiteral",
																		"src": "9500:1:12",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "9503:4:12",
																		"nodeType": "YulLiteral",
																		"src": "9503:4:12",
																		"type": "",
																		"value": "0x24"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nativeSrc": "9493:6:12",
																	"nodeType": "YulIdentifier",
																	"src": "9493:6:12"
																},
																"nativeSrc": "9493:15:12",
																"nodeType": "YulFunctionCall",
																"src": "9493:15:12"
															},
															"nativeSrc": "9493:15:12",
															"nodeType": "YulExpressionStatement",
															"src": "9493:15:12"
														}
													]
												},
												"name": "panic_error_0x11",
												"nativeSrc": "9387:127:12",
												"nodeType": "YulFunctionDefinition",
												"src": "9387:127:12"
											},
											{
												"body": {
													"nativeSrc": "9568:79:12",
													"nodeType": "YulBlock",
													"src": "9568:79:12",
													"statements": [
														{
															"nativeSrc": "9578:17:12",
															"nodeType": "YulAssignment",
															"src": "9578:17:12",
															"value": {
																"arguments": [
																	{
																		"name": "x",
																		"nativeSrc": "9590:1:12",
																		"nodeType": "YulIdentifier",
																		"src": "9590:1:12"
																	},
																	{
																		"name": "y",
																		"nativeSrc": "9593:1:12",
																		"nodeType": "YulIdentifier",
																		"src": "9593:1:12"
																	}
																],
																"functionName": {
																	"name": "sub",
																	"nativeSrc": "9586:3:12",
																	"nodeType": "YulIdentifier",
																	"src": "9586:3:12"
																},
																"nativeSrc": "9586:9:12",
																"nodeType": "YulFunctionCall",
																"src": "9586:9:12"
															},
															"variableNames": [
																{
																	"name": "diff",
																	"nativeSrc": "9578:4:12",
																	"nodeType": "YulIdentifier",
																	"src": "9578:4:12"
																}
															]
														},
														{
															"body": {
																"nativeSrc": "9619:22:12",
																"nodeType": "YulBlock",
																"src": "9619:22:12",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "panic_error_0x11",
																				"nativeSrc": "9621:16:12",
																				"nodeType": "YulIdentifier",
																				"src": "9621:16:12"
																			},
																			"nativeSrc": "9621:18:12",
																			"nodeType": "YulFunctionCall",
																			"src": "9621:18:12"
																		},
																		"nativeSrc": "9621:18:12",
																		"nodeType": "YulExpressionStatement",
																		"src": "9621:18:12"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "diff",
																		"nativeSrc": "9610:4:12",
																		"nodeType": "YulIdentifier",
																		"src": "9610:4:12"
																	},
																	{
																		"name": "x",
																		"nativeSrc": "9616:1:12",
																		"nodeType": "YulIdentifier",
																		"src": "9616:1:12"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nativeSrc": "9607:2:12",
																	"nodeType": "YulIdentifier",
																	"src": "9607:2:12"
																},
																"nativeSrc": "9607:11:12",
																"nodeType": "YulFunctionCall",
																"src": "9607:11:12"
															},
															"nativeSrc": "9604:37:12",
															"nodeType": "YulIf",
															"src": "9604:37:12"
														}
													]
												},
												"name": "checked_sub_t_uint256",
												"nativeSrc": "9519:128:12",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "x",
														"nativeSrc": "9550:1:12",
														"nodeType": "YulTypedName",
														"src": "9550:1:12",
														"type": ""
													},
													{
														"name": "y",
														"nativeSrc": "9553:1:12",
														"nodeType": "YulTypedName",
														"src": "9553:1:12",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "diff",
														"nativeSrc": "9559:4:12",
														"nodeType": "YulTypedName",
														"src": "9559:4:12",
														"type": ""
													}
												],
												"src": "9519:128:12"
											},
											{
												"body": {
													"nativeSrc": "9700:77:12",
													"nodeType": "YulBlock",
													"src": "9700:77:12",
													"statements": [
														{
															"nativeSrc": "9710:16:12",
															"nodeType": "YulAssignment",
															"src": "9710:16:12",
															"value": {
																"arguments": [
																	{
																		"name": "x",
																		"nativeSrc": "9721:1:12",
																		"nodeType": "YulIdentifier",
																		"src": "9721:1:12"
																	},
																	{
																		"name": "y",
																		"nativeSrc": "9724:1:12",
																		"nodeType": "YulIdentifier",
																		"src": "9724:1:12"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "9717:3:12",
																	"nodeType": "YulIdentifier",
																	"src": "9717:3:12"
																},
																"nativeSrc": "9717:9:12",
																"nodeType": "YulFunctionCall",
																"src": "9717:9:12"
															},
															"variableNames": [
																{
																	"name": "sum",
																	"nativeSrc": "9710:3:12",
																	"nodeType": "YulIdentifier",
																	"src": "9710:3:12"
																}
															]
														},
														{
															"body": {
																"nativeSrc": "9749:22:12",
																"nodeType": "YulBlock",
																"src": "9749:22:12",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "panic_error_0x11",
																				"nativeSrc": "9751:16:12",
																				"nodeType": "YulIdentifier",
																				"src": "9751:16:12"
																			},
																			"nativeSrc": "9751:18:12",
																			"nodeType": "YulFunctionCall",
																			"src": "9751:18:12"
																		},
																		"nativeSrc": "9751:18:12",
																		"nodeType": "YulExpressionStatement",
																		"src": "9751:18:12"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "x",
																		"nativeSrc": "9741:1:12",
																		"nodeType": "YulIdentifier",
																		"src": "9741:1:12"
																	},
																	{
																		"name": "sum",
																		"nativeSrc": "9744:3:12",
																		"nodeType": "YulIdentifier",
																		"src": "9744:3:12"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nativeSrc": "9738:2:12",
																	"nodeType": "YulIdentifier",
																	"src": "9738:2:12"
																},
																"nativeSrc": "9738:10:12",
																"nodeType": "YulFunctionCall",
																"src": "9738:10:12"
															},
															"nativeSrc": "9735:36:12",
															"nodeType": "YulIf",
															"src": "9735:36:12"
														}
													]
												},
												"name": "checked_add_t_uint256",
												"nativeSrc": "9652:125:12",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "x",
														"nativeSrc": "9683:1:12",
														"nodeType": "YulTypedName",
														"src": "9683:1:12",
														"type": ""
													},
													{
														"name": "y",
														"nativeSrc": "9686:1:12",
														"nodeType": "YulTypedName",
														"src": "9686:1:12",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "sum",
														"nativeSrc": "9692:3:12",
														"nodeType": "YulTypedName",
														"src": "9692:3:12",
														"type": ""
													}
												],
												"src": "9652:125:12"
											},
											{
												"body": {
													"nativeSrc": "9985:286:12",
													"nodeType": "YulBlock",
													"src": "9985:286:12",
													"statements": [
														{
															"nativeSrc": "9995:29:12",
															"nodeType": "YulVariableDeclaration",
															"src": "9995:29:12",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"kind": "number",
																				"nativeSrc": "10013:3:12",
																				"nodeType": "YulLiteral",
																				"src": "10013:3:12",
																				"type": "",
																				"value": "160"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "10018:1:12",
																				"nodeType": "YulLiteral",
																				"src": "10018:1:12",
																				"type": "",
																				"value": "1"
																			}
																		],
																		"functionName": {
																			"name": "shl",
																			"nativeSrc": "10009:3:12",
																			"nodeType": "YulIdentifier",
																			"src": "10009:3:12"
																		},
																		"nativeSrc": "10009:11:12",
																		"nodeType": "YulFunctionCall",
																		"src": "10009:11:12"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "10022:1:12",
																		"nodeType": "YulLiteral",
																		"src": "10022:1:12",
																		"type": "",
																		"value": "1"
																	}
																],
																"functionName": {
																	"name": "sub",
																	"nativeSrc": "10005:3:12",
																	"nodeType": "YulIdentifier",
																	"src": "10005:3:12"
																},
																"nativeSrc": "10005:19:12",
																"nodeType": "YulFunctionCall",
																"src": "10005:19:12"
															},
															"variables": [
																{
																	"name": "_1",
																	"nativeSrc": "9999:2:12",
																	"nodeType": "YulTypedName",
																	"src": "9999:2:12",
																	"type": ""
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "10040:9:12",
																		"nodeType": "YulIdentifier",
																		"src": "10040:9:12"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value0",
																				"nativeSrc": "10055:6:12",
																				"nodeType": "YulIdentifier",
																				"src": "10055:6:12"
																			},
																			{
																				"name": "_1",
																				"nativeSrc": "10063:2:12",
																				"nodeType": "YulIdentifier",
																				"src": "10063:2:12"
																			}
																		],
																		"functionName": {
																			"name": "and",
																			"nativeSrc": "10051:3:12",
																			"nodeType": "YulIdentifier",
																			"src": "10051:3:12"
																		},
																		"nativeSrc": "10051:15:12",
																		"nodeType": "YulFunctionCall",
																		"src": "10051:15:12"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "10033:6:12",
																	"nodeType": "YulIdentifier",
																	"src": "10033:6:12"
																},
																"nativeSrc": "10033:34:12",
																"nodeType": "YulFunctionCall",
																"src": "10033:34:12"
															},
															"nativeSrc": "10033:34:12",
															"nodeType": "YulExpressionStatement",
															"src": "10033:34:12"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "10087:9:12",
																				"nodeType": "YulIdentifier",
																				"src": "10087:9:12"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "10098:2:12",
																				"nodeType": "YulLiteral",
																				"src": "10098:2:12",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "10083:3:12",
																			"nodeType": "YulIdentifier",
																			"src": "10083:3:12"
																		},
																		"nativeSrc": "10083:18:12",
																		"nodeType": "YulFunctionCall",
																		"src": "10083:18:12"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value1",
																				"nativeSrc": "10107:6:12",
																				"nodeType": "YulIdentifier",
																				"src": "10107:6:12"
																			},
																			{
																				"name": "_1",
																				"nativeSrc": "10115:2:12",
																				"nodeType": "YulIdentifier",
																				"src": "10115:2:12"
																			}
																		],
																		"functionName": {
																			"name": "and",
																			"nativeSrc": "10103:3:12",
																			"nodeType": "YulIdentifier",
																			"src": "10103:3:12"
																		},
																		"nativeSrc": "10103:15:12",
																		"nodeType": "YulFunctionCall",
																		"src": "10103:15:12"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "10076:6:12",
																	"nodeType": "YulIdentifier",
																	"src": "10076:6:12"
																},
																"nativeSrc": "10076:43:12",
																"nodeType": "YulFunctionCall",
																"src": "10076:43:12"
															},
															"nativeSrc": "10076:43:12",
															"nodeType": "YulExpressionStatement",
															"src": "10076:43:12"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "10139:9:12",
																				"nodeType": "YulIdentifier",
																				"src": "10139:9:12"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "10150:2:12",
																				"nodeType": "YulLiteral",
																				"src": "10150:2:12",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "10135:3:12",
																			"nodeType": "YulIdentifier",
																			"src": "10135:3:12"
																		},
																		"nativeSrc": "10135:18:12",
																		"nodeType": "YulFunctionCall",
																		"src": "10135:18:12"
																	},
																	{
																		"name": "value2",
																		"nativeSrc": "10155:6:12",
																		"nodeType": "YulIdentifier",
																		"src": "10155:6:12"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "10128:6:12",
																	"nodeType": "YulIdentifier",
																	"src": "10128:6:12"
																},
																"nativeSrc": "10128:34:12",
																"nodeType": "YulFunctionCall",
																"src": "10128:34:12"
															},
															"nativeSrc": "10128:34:12",
															"nodeType": "YulExpressionStatement",
															"src": "10128:34:12"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "10182:9:12",
																				"nodeType": "YulIdentifier",
																				"src": "10182:9:12"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "10193:2:12",
																				"nodeType": "YulLiteral",
																				"src": "10193:2:12",
																				"type": "",
																				"value": "96"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "10178:3:12",
																			"nodeType": "YulIdentifier",
																			"src": "10178:3:12"
																		},
																		"nativeSrc": "10178:18:12",
																		"nodeType": "YulFunctionCall",
																		"src": "10178:18:12"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "10198:3:12",
																		"nodeType": "YulLiteral",
																		"src": "10198:3:12",
																		"type": "",
																		"value": "128"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "10171:6:12",
																	"nodeType": "YulIdentifier",
																	"src": "10171:6:12"
																},
																"nativeSrc": "10171:31:12",
																"nodeType": "YulFunctionCall",
																"src": "10171:31:12"
															},
															"nativeSrc": "10171:31:12",
															"nodeType": "YulExpressionStatement",
															"src": "10171:31:12"
														},
														{
															"nativeSrc": "10211:54:12",
															"nodeType": "YulAssignment",
															"src": "10211:54:12",
															"value": {
																"arguments": [
																	{
																		"name": "value3",
																		"nativeSrc": "10237:6:12",
																		"nodeType": "YulIdentifier",
																		"src": "10237:6:12"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "10249:9:12",
																				"nodeType": "YulIdentifier",
																				"src": "10249:9:12"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "10260:3:12",
																				"nodeType": "YulLiteral",
																				"src": "10260:3:12",
																				"type": "",
																				"value": "128"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "10245:3:12",
																			"nodeType": "YulIdentifier",
																			"src": "10245:3:12"
																		},
																		"nativeSrc": "10245:19:12",
																		"nodeType": "YulFunctionCall",
																		"src": "10245:19:12"
																	}
																],
																"functionName": {
																	"name": "abi_encode_string",
																	"nativeSrc": "10219:17:12",
																	"nodeType": "YulIdentifier",
																	"src": "10219:17:12"
																},
																"nativeSrc": "10219:46:12",
																"nodeType": "YulFunctionCall",
																"src": "10219:46:12"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "10211:4:12",
																	"nodeType": "YulIdentifier",
																	"src": "10211:4:12"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_address_t_address_t_uint256_t_bytes_memory_ptr__to_t_address_t_address_t_uint256_t_bytes_memory_ptr__fromStack_reversed",
												"nativeSrc": "9782:489:12",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "9930:9:12",
														"nodeType": "YulTypedName",
														"src": "9930:9:12",
														"type": ""
													},
													{
														"name": "value3",
														"nativeSrc": "9941:6:12",
														"nodeType": "YulTypedName",
														"src": "9941:6:12",
														"type": ""
													},
													{
														"name": "value2",
														"nativeSrc": "9949:6:12",
														"nodeType": "YulTypedName",
														"src": "9949:6:12",
														"type": ""
													},
													{
														"name": "value1",
														"nativeSrc": "9957:6:12",
														"nodeType": "YulTypedName",
														"src": "9957:6:12",
														"type": ""
													},
													{
														"name": "value0",
														"nativeSrc": "9965:6:12",
														"nodeType": "YulTypedName",
														"src": "9965:6:12",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "9976:4:12",
														"nodeType": "YulTypedName",
														"src": "9976:4:12",
														"type": ""
													}
												],
												"src": "9782:489:12"
											},
											{
												"body": {
													"nativeSrc": "10356:169:12",
													"nodeType": "YulBlock",
													"src": "10356:169:12",
													"statements": [
														{
															"body": {
																"nativeSrc": "10402:16:12",
																"nodeType": "YulBlock",
																"src": "10402:16:12",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nativeSrc": "10411:1:12",
																					"nodeType": "YulLiteral",
																					"src": "10411:1:12",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "10414:1:12",
																					"nodeType": "YulLiteral",
																					"src": "10414:1:12",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nativeSrc": "10404:6:12",
																				"nodeType": "YulIdentifier",
																				"src": "10404:6:12"
																			},
																			"nativeSrc": "10404:12:12",
																			"nodeType": "YulFunctionCall",
																			"src": "10404:12:12"
																		},
																		"nativeSrc": "10404:12:12",
																		"nodeType": "YulExpressionStatement",
																		"src": "10404:12:12"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nativeSrc": "10377:7:12",
																				"nodeType": "YulIdentifier",
																				"src": "10377:7:12"
																			},
																			{
																				"name": "headStart",
																				"nativeSrc": "10386:9:12",
																				"nodeType": "YulIdentifier",
																				"src": "10386:9:12"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "10373:3:12",
																			"nodeType": "YulIdentifier",
																			"src": "10373:3:12"
																		},
																		"nativeSrc": "10373:23:12",
																		"nodeType": "YulFunctionCall",
																		"src": "10373:23:12"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "10398:2:12",
																		"nodeType": "YulLiteral",
																		"src": "10398:2:12",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nativeSrc": "10369:3:12",
																	"nodeType": "YulIdentifier",
																	"src": "10369:3:12"
																},
																"nativeSrc": "10369:32:12",
																"nodeType": "YulFunctionCall",
																"src": "10369:32:12"
															},
															"nativeSrc": "10366:52:12",
															"nodeType": "YulIf",
															"src": "10366:52:12"
														},
														{
															"nativeSrc": "10427:29:12",
															"nodeType": "YulVariableDeclaration",
															"src": "10427:29:12",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "10446:9:12",
																		"nodeType": "YulIdentifier",
																		"src": "10446:9:12"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nativeSrc": "10440:5:12",
																	"nodeType": "YulIdentifier",
																	"src": "10440:5:12"
																},
																"nativeSrc": "10440:16:12",
																"nodeType": "YulFunctionCall",
																"src": "10440:16:12"
															},
															"variables": [
																{
																	"name": "value",
																	"nativeSrc": "10431:5:12",
																	"nodeType": "YulTypedName",
																	"src": "10431:5:12",
																	"type": ""
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "10489:5:12",
																		"nodeType": "YulIdentifier",
																		"src": "10489:5:12"
																	}
																],
																"functionName": {
																	"name": "validator_revert_bytes4",
																	"nativeSrc": "10465:23:12",
																	"nodeType": "YulIdentifier",
																	"src": "10465:23:12"
																},
																"nativeSrc": "10465:30:12",
																"nodeType": "YulFunctionCall",
																"src": "10465:30:12"
															},
															"nativeSrc": "10465:30:12",
															"nodeType": "YulExpressionStatement",
															"src": "10465:30:12"
														},
														{
															"nativeSrc": "10504:15:12",
															"nodeType": "YulAssignment",
															"src": "10504:15:12",
															"value": {
																"name": "value",
																"nativeSrc": "10514:5:12",
																"nodeType": "YulIdentifier",
																"src": "10514:5:12"
															},
															"variableNames": [
																{
																	"name": "value0",
																	"nativeSrc": "10504:6:12",
																	"nodeType": "YulIdentifier",
																	"src": "10504:6:12"
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_bytes4_fromMemory",
												"nativeSrc": "10276:249:12",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "10322:9:12",
														"nodeType": "YulTypedName",
														"src": "10322:9:12",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nativeSrc": "10333:7:12",
														"nodeType": "YulTypedName",
														"src": "10333:7:12",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nativeSrc": "10345:6:12",
														"nodeType": "YulTypedName",
														"src": "10345:6:12",
														"type": ""
													}
												],
												"src": "10276:249:12"
											},
											{
												"body": {
													"nativeSrc": "10704:182:12",
													"nodeType": "YulBlock",
													"src": "10704:182:12",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "10721:9:12",
																		"nodeType": "YulIdentifier",
																		"src": "10721:9:12"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "10732:2:12",
																		"nodeType": "YulLiteral",
																		"src": "10732:2:12",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "10714:6:12",
																	"nodeType": "YulIdentifier",
																	"src": "10714:6:12"
																},
																"nativeSrc": "10714:21:12",
																"nodeType": "YulFunctionCall",
																"src": "10714:21:12"
															},
															"nativeSrc": "10714:21:12",
															"nodeType": "YulExpressionStatement",
															"src": "10714:21:12"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "10755:9:12",
																				"nodeType": "YulIdentifier",
																				"src": "10755:9:12"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "10766:2:12",
																				"nodeType": "YulLiteral",
																				"src": "10766:2:12",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "10751:3:12",
																			"nodeType": "YulIdentifier",
																			"src": "10751:3:12"
																		},
																		"nativeSrc": "10751:18:12",
																		"nodeType": "YulFunctionCall",
																		"src": "10751:18:12"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "10771:2:12",
																		"nodeType": "YulLiteral",
																		"src": "10771:2:12",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "10744:6:12",
																	"nodeType": "YulIdentifier",
																	"src": "10744:6:12"
																},
																"nativeSrc": "10744:30:12",
																"nodeType": "YulFunctionCall",
																"src": "10744:30:12"
															},
															"nativeSrc": "10744:30:12",
															"nodeType": "YulExpressionStatement",
															"src": "10744:30:12"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "10794:9:12",
																				"nodeType": "YulIdentifier",
																				"src": "10794:9:12"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "10805:2:12",
																				"nodeType": "YulLiteral",
																				"src": "10805:2:12",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "10790:3:12",
																			"nodeType": "YulIdentifier",
																			"src": "10790:3:12"
																		},
																		"nativeSrc": "10790:18:12",
																		"nodeType": "YulFunctionCall",
																		"src": "10790:18:12"
																	},
																	{
																		"hexValue": "4552433732313a206d696e7420746f20746865207a65726f2061646472657373",
																		"kind": "string",
																		"nativeSrc": "10810:34:12",
																		"nodeType": "YulLiteral",
																		"src": "10810:34:12",
																		"type": "",
																		"value": "ERC721: mint to the zero address"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "10783:6:12",
																	"nodeType": "YulIdentifier",
																	"src": "10783:6:12"
																},
																"nativeSrc": "10783:62:12",
																"nodeType": "YulFunctionCall",
																"src": "10783:62:12"
															},
															"nativeSrc": "10783:62:12",
															"nodeType": "YulExpressionStatement",
															"src": "10783:62:12"
														},
														{
															"nativeSrc": "10854:26:12",
															"nodeType": "YulAssignment",
															"src": "10854:26:12",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "10866:9:12",
																		"nodeType": "YulIdentifier",
																		"src": "10866:9:12"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "10877:2:12",
																		"nodeType": "YulLiteral",
																		"src": "10877:2:12",
																		"type": "",
																		"value": "96"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "10862:3:12",
																	"nodeType": "YulIdentifier",
																	"src": "10862:3:12"
																},
																"nativeSrc": "10862:18:12",
																"nodeType": "YulFunctionCall",
																"src": "10862:18:12"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "10854:4:12",
																	"nodeType": "YulIdentifier",
																	"src": "10854:4:12"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_8a66f4bb6512ffbfcc3db9b42318eb65f26ac15163eaa9a1e5cfa7bee9d1c7c6__to_t_string_memory_ptr__fromStack_reversed",
												"nativeSrc": "10530:356:12",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "10681:9:12",
														"nodeType": "YulTypedName",
														"src": "10681:9:12",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "10695:4:12",
														"nodeType": "YulTypedName",
														"src": "10695:4:12",
														"type": ""
													}
												],
												"src": "10530:356:12"
											},
											{
												"body": {
													"nativeSrc": "11065:178:12",
													"nodeType": "YulBlock",
													"src": "11065:178:12",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "11082:9:12",
																		"nodeType": "YulIdentifier",
																		"src": "11082:9:12"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "11093:2:12",
																		"nodeType": "YulLiteral",
																		"src": "11093:2:12",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "11075:6:12",
																	"nodeType": "YulIdentifier",
																	"src": "11075:6:12"
																},
																"nativeSrc": "11075:21:12",
																"nodeType": "YulFunctionCall",
																"src": "11075:21:12"
															},
															"nativeSrc": "11075:21:12",
															"nodeType": "YulExpressionStatement",
															"src": "11075:21:12"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "11116:9:12",
																				"nodeType": "YulIdentifier",
																				"src": "11116:9:12"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "11127:2:12",
																				"nodeType": "YulLiteral",
																				"src": "11127:2:12",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "11112:3:12",
																			"nodeType": "YulIdentifier",
																			"src": "11112:3:12"
																		},
																		"nativeSrc": "11112:18:12",
																		"nodeType": "YulFunctionCall",
																		"src": "11112:18:12"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "11132:2:12",
																		"nodeType": "YulLiteral",
																		"src": "11132:2:12",
																		"type": "",
																		"value": "28"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "11105:6:12",
																	"nodeType": "YulIdentifier",
																	"src": "11105:6:12"
																},
																"nativeSrc": "11105:30:12",
																"nodeType": "YulFunctionCall",
																"src": "11105:30:12"
															},
															"nativeSrc": "11105:30:12",
															"nodeType": "YulExpressionStatement",
															"src": "11105:30:12"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "11155:9:12",
																				"nodeType": "YulIdentifier",
																				"src": "11155:9:12"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "11166:2:12",
																				"nodeType": "YulLiteral",
																				"src": "11166:2:12",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "11151:3:12",
																			"nodeType": "YulIdentifier",
																			"src": "11151:3:12"
																		},
																		"nativeSrc": "11151:18:12",
																		"nodeType": "YulFunctionCall",
																		"src": "11151:18:12"
																	},
																	{
																		"hexValue": "4552433732313a20746f6b656e20616c7265616479206d696e746564",
																		"kind": "string",
																		"nativeSrc": "11171:30:12",
																		"nodeType": "YulLiteral",
																		"src": "11171:30:12",
																		"type": "",
																		"value": "ERC721: token already minted"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "11144:6:12",
																	"nodeType": "YulIdentifier",
																	"src": "11144:6:12"
																},
																"nativeSrc": "11144:58:12",
																"nodeType": "YulFunctionCall",
																"src": "11144:58:12"
															},
															"nativeSrc": "11144:58:12",
															"nodeType": "YulExpressionStatement",
															"src": "11144:58:12"
														},
														{
															"nativeSrc": "11211:26:12",
															"nodeType": "YulAssignment",
															"src": "11211:26:12",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "11223:9:12",
																		"nodeType": "YulIdentifier",
																		"src": "11223:9:12"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "11234:2:12",
																		"nodeType": "YulLiteral",
																		"src": "11234:2:12",
																		"type": "",
																		"value": "96"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "11219:3:12",
																	"nodeType": "YulIdentifier",
																	"src": "11219:3:12"
																},
																"nativeSrc": "11219:18:12",
																"nodeType": "YulFunctionCall",
																"src": "11219:18:12"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "11211:4:12",
																	"nodeType": "YulIdentifier",
																	"src": "11211:4:12"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_2a63ce106ef95058ed21fd07c42a10f11dc5c32ac13a4e847923f7759f635d57__to_t_string_memory_ptr__fromStack_reversed",
												"nativeSrc": "10891:352:12",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "11042:9:12",
														"nodeType": "YulTypedName",
														"src": "11042:9:12",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "11056:4:12",
														"nodeType": "YulTypedName",
														"src": "11056:4:12",
														"type": ""
													}
												],
												"src": "10891:352:12"
											}
										]
									},
									"contents": "{\n    { }\n    function validator_revert_bytes4(value)\n    {\n        if iszero(eq(value, and(value, shl(224, 0xffffffff)))) { revert(0, 0) }\n    }\n    function abi_decode_tuple_t_bytes4(headStart, dataEnd) -> value0\n    {\n        if slt(sub(dataEnd, headStart), 32) { revert(0, 0) }\n        let value := calldataload(headStart)\n        validator_revert_bytes4(value)\n        value0 := value\n    }\n    function abi_encode_tuple_t_bool__to_t_bool__fromStack_reversed(headStart, value0) -> tail\n    {\n        tail := add(headStart, 32)\n        mstore(headStart, iszero(iszero(value0)))\n    }\n    function copy_memory_to_memory_with_cleanup(src, dst, length)\n    {\n        let i := 0\n        for { } lt(i, length) { i := add(i, 32) }\n        {\n            mstore(add(dst, i), mload(add(src, i)))\n        }\n        mstore(add(dst, length), 0)\n    }\n    function abi_encode_string(value, pos) -> end\n    {\n        let length := mload(value)\n        mstore(pos, length)\n        copy_memory_to_memory_with_cleanup(add(value, 0x20), add(pos, 0x20), length)\n        end := add(add(pos, and(add(length, 31), not(31))), 0x20)\n    }\n    function abi_encode_tuple_t_string_memory_ptr__to_t_string_memory_ptr__fromStack_reversed(headStart, value0) -> tail\n    {\n        mstore(headStart, 32)\n        tail := abi_encode_string(value0, add(headStart, 32))\n    }\n    function abi_decode_tuple_t_uint256(headStart, dataEnd) -> value0\n    {\n        if slt(sub(dataEnd, headStart), 32) { revert(0, 0) }\n        value0 := calldataload(headStart)\n    }\n    function abi_encode_tuple_t_address__to_t_address__fromStack_reversed(headStart, value0) -> tail\n    {\n        tail := add(headStart, 32)\n        mstore(headStart, and(value0, sub(shl(160, 1), 1)))\n    }\n    function abi_decode_address(offset) -> value\n    {\n        value := calldataload(offset)\n        if iszero(eq(value, and(value, sub(shl(160, 1), 1)))) { revert(0, 0) }\n    }\n    function abi_decode_tuple_t_addresst_uint256(headStart, dataEnd) -> value0, value1\n    {\n        if slt(sub(dataEnd, headStart), 64) { revert(0, 0) }\n        value0 := abi_decode_address(headStart)\n        value1 := calldataload(add(headStart, 32))\n    }\n    function abi_decode_tuple_t_addresst_addresst_uint256(headStart, dataEnd) -> value0, value1, value2\n    {\n        if slt(sub(dataEnd, headStart), 96) { revert(0, 0) }\n        value0 := abi_decode_address(headStart)\n        value1 := abi_decode_address(add(headStart, 32))\n        value2 := calldataload(add(headStart, 64))\n    }\n    function abi_decode_tuple_t_address(headStart, dataEnd) -> value0\n    {\n        if slt(sub(dataEnd, headStart), 32) { revert(0, 0) }\n        value0 := abi_decode_address(headStart)\n    }\n    function abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed(headStart, value0) -> tail\n    {\n        tail := add(headStart, 32)\n        mstore(headStart, value0)\n    }\n    function abi_decode_tuple_t_addresst_bool(headStart, dataEnd) -> value0, value1\n    {\n        if slt(sub(dataEnd, headStart), 64) { revert(0, 0) }\n        value0 := abi_decode_address(headStart)\n        let value := calldataload(add(headStart, 32))\n        if iszero(eq(value, iszero(iszero(value)))) { revert(0, 0) }\n        value1 := value\n    }\n    function panic_error_0x41()\n    {\n        mstore(0, shl(224, 0x4e487b71))\n        mstore(4, 0x41)\n        revert(0, 0x24)\n    }\n    function abi_decode_tuple_t_addresst_addresst_uint256t_bytes_memory_ptr(headStart, dataEnd) -> value0, value1, value2, value3\n    {\n        if slt(sub(dataEnd, headStart), 128) { revert(0, 0) }\n        value0 := abi_decode_address(headStart)\n        value1 := abi_decode_address(add(headStart, 32))\n        value2 := calldataload(add(headStart, 64))\n        let offset := calldataload(add(headStart, 96))\n        let _1 := 0xffffffffffffffff\n        if gt(offset, _1) { revert(0, 0) }\n        let _2 := add(headStart, offset)\n        if iszero(slt(add(_2, 0x1f), dataEnd)) { revert(0, 0) }\n        let _3 := calldataload(_2)\n        if gt(_3, _1) { panic_error_0x41() }\n        let _4 := not(31)\n        let memPtr := mload(64)\n        let newFreePtr := add(memPtr, and(add(and(add(_3, 0x1f), _4), 63), _4))\n        if or(gt(newFreePtr, _1), lt(newFreePtr, memPtr)) { panic_error_0x41() }\n        mstore(64, newFreePtr)\n        mstore(memPtr, _3)\n        if gt(add(add(_2, _3), 32), dataEnd) { revert(0, 0) }\n        calldatacopy(add(memPtr, 32), add(_2, 32), _3)\n        mstore(add(add(memPtr, _3), 32), 0)\n        value3 := memPtr\n    }\n    function abi_decode_tuple_t_addresst_address(headStart, dataEnd) -> value0, value1\n    {\n        if slt(sub(dataEnd, headStart), 64) { revert(0, 0) }\n        value0 := abi_decode_address(headStart)\n        value1 := abi_decode_address(add(headStart, 32))\n    }\n    function extract_byte_array_length(data) -> length\n    {\n        length := shr(1, data)\n        let outOfPlaceEncoding := and(data, 1)\n        if iszero(outOfPlaceEncoding) { length := and(length, 0x7f) }\n        if eq(outOfPlaceEncoding, lt(length, 32))\n        {\n            mstore(0, shl(224, 0x4e487b71))\n            mstore(4, 0x22)\n            revert(0, 0x24)\n        }\n    }\n    function abi_encode_tuple_t_stringliteral_b51b4875eede07862961e8f9365c6749f5fe55c6ee5d7a9e42b6912ad0b15942__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 33)\n        mstore(add(headStart, 64), \"ERC721: approval to current owne\")\n        mstore(add(headStart, 96), \"r\")\n        tail := add(headStart, 128)\n    }\n    function abi_encode_tuple_t_stringliteral_c6e14a63ffb144eeef7cce6988e5dce07c60a7e0a7b1ef25dbe18c61483e0a83__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 61)\n        mstore(add(headStart, 64), \"ERC721: approve caller is not to\")\n        mstore(add(headStart, 96), \"ken owner or approved for all\")\n        tail := add(headStart, 128)\n    }\n    function abi_encode_tuple_t_stringliteral_12a8e5623d251e191fe4a291d9a59bcc01a4db7a1f5c20fc8de44358c18308af__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 45)\n        mstore(add(headStart, 64), \"ERC721: caller is not token owne\")\n        mstore(add(headStart, 96), \"r or approved\")\n        tail := add(headStart, 128)\n    }\n    function abi_encode_tuple_t_stringliteral_b08d2b0fec7cc108ab049809a8beb42779d969a49299d0c317c907d9db22974f__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 24)\n        mstore(add(headStart, 64), \"ERC721: invalid token ID\")\n        tail := add(headStart, 96)\n    }\n    function abi_encode_tuple_t_stringliteral_6d05c90094f31cfeb8f0eb86f0a513af3f7f8992991fbde41b08aa7960677159__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 41)\n        mstore(add(headStart, 64), \"ERC721: address zero is not a va\")\n        mstore(add(headStart, 96), \"lid owner\")\n        tail := add(headStart, 128)\n    }\n    function abi_encode_tuple_packed_t_string_memory_ptr_t_string_memory_ptr__to_t_string_memory_ptr_t_string_memory_ptr__nonPadded_inplace_fromStack_reversed(pos, value1, value0) -> end\n    {\n        let length := mload(value0)\n        copy_memory_to_memory_with_cleanup(add(value0, 0x20), pos, length)\n        let end_1 := add(pos, length)\n        let length_1 := mload(value1)\n        copy_memory_to_memory_with_cleanup(add(value1, 0x20), end_1, length_1)\n        end := add(end_1, length_1)\n    }\n    function abi_encode_tuple_t_stringliteral_277f8ee9d5b4fc3c4149386f24de0fc1bbc63a8210e2197bfd1c0376a2ac5f48__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 37)\n        mstore(add(headStart, 64), \"ERC721: transfer from incorrect \")\n        mstore(add(headStart, 96), \"owner\")\n        tail := add(headStart, 128)\n    }\n    function abi_encode_tuple_t_stringliteral_455fea98ea03c32d7dd1a6f1426917d80529bf47b3ccbde74e7206e889e709f4__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 36)\n        mstore(add(headStart, 64), \"ERC721: transfer to the zero add\")\n        mstore(add(headStart, 96), \"ress\")\n        tail := add(headStart, 128)\n    }\n    function abi_encode_tuple_t_stringliteral_45fe4329685be5ecd250fd0e6a25aea0ea4d0e30fb6a73c118b95749e6d70d05__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 25)\n        mstore(add(headStart, 64), \"ERC721: approve to caller\")\n        tail := add(headStart, 96)\n    }\n    function abi_encode_tuple_t_stringliteral_1e766a06da43a53d0f4c380e06e5a342e14d5af1bf8501996c844905530ca84e__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 50)\n        mstore(add(headStart, 64), \"ERC721: transfer to non ERC721Re\")\n        mstore(add(headStart, 96), \"ceiver implementer\")\n        tail := add(headStart, 128)\n    }\n    function panic_error_0x12()\n    {\n        mstore(0, shl(224, 0x4e487b71))\n        mstore(4, 0x12)\n        revert(0, 0x24)\n    }\n    function panic_error_0x11()\n    {\n        mstore(0, shl(224, 0x4e487b71))\n        mstore(4, 0x11)\n        revert(0, 0x24)\n    }\n    function checked_sub_t_uint256(x, y) -> diff\n    {\n        diff := sub(x, y)\n        if gt(diff, x) { panic_error_0x11() }\n    }\n    function checked_add_t_uint256(x, y) -> sum\n    {\n        sum := add(x, y)\n        if gt(x, sum) { panic_error_0x11() }\n    }\n    function abi_encode_tuple_t_address_t_address_t_uint256_t_bytes_memory_ptr__to_t_address_t_address_t_uint256_t_bytes_memory_ptr__fromStack_reversed(headStart, value3, value2, value1, value0) -> tail\n    {\n        let _1 := sub(shl(160, 1), 1)\n        mstore(headStart, and(value0, _1))\n        mstore(add(headStart, 32), and(value1, _1))\n        mstore(add(headStart, 64), value2)\n        mstore(add(headStart, 96), 128)\n        tail := abi_encode_string(value3, add(headStart, 128))\n    }\n    function abi_decode_tuple_t_bytes4_fromMemory(headStart, dataEnd) -> value0\n    {\n        if slt(sub(dataEnd, headStart), 32) { revert(0, 0) }\n        let value := mload(headStart)\n        validator_revert_bytes4(value)\n        value0 := value\n    }\n    function abi_encode_tuple_t_stringliteral_8a66f4bb6512ffbfcc3db9b42318eb65f26ac15163eaa9a1e5cfa7bee9d1c7c6__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 32)\n        mstore(add(headStart, 64), \"ERC721: mint to the zero address\")\n        tail := add(headStart, 96)\n    }\n    function abi_encode_tuple_t_stringliteral_2a63ce106ef95058ed21fd07c42a10f11dc5c32ac13a4e847923f7759f635d57__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 28)\n        mstore(add(headStart, 64), \"ERC721: token already minted\")\n        tail := add(headStart, 96)\n    }\n}",
									"id": 12,
									"language": "Yul",
									"name": "#utility.yul"
								}
							],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH2 0xF JUMPI PUSH0 DUP1 REVERT JUMPDEST POP PUSH1 0x4 CALLDATASIZE LT PUSH2 0xE5 JUMPI PUSH0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0x6352211E GT PUSH2 0x88 JUMPI DUP1 PUSH4 0xA22CB465 GT PUSH2 0x63 JUMPI DUP1 PUSH4 0xA22CB465 EQ PUSH2 0x1DB JUMPI DUP1 PUSH4 0xB88D4FDE EQ PUSH2 0x1EE JUMPI DUP1 PUSH4 0xC87B56DD EQ PUSH2 0x201 JUMPI DUP1 PUSH4 0xE985E9C5 EQ PUSH2 0x214 JUMPI PUSH0 DUP1 REVERT JUMPDEST DUP1 PUSH4 0x6352211E EQ PUSH2 0x19F JUMPI DUP1 PUSH4 0x70A08231 EQ PUSH2 0x1B2 JUMPI DUP1 PUSH4 0x95D89B41 EQ PUSH2 0x1D3 JUMPI PUSH0 DUP1 REVERT JUMPDEST DUP1 PUSH4 0x95EA7B3 GT PUSH2 0xC3 JUMPI DUP1 PUSH4 0x95EA7B3 EQ PUSH2 0x151 JUMPI DUP1 PUSH4 0x23B872DD EQ PUSH2 0x166 JUMPI DUP1 PUSH4 0x40D097C3 EQ PUSH2 0x179 JUMPI DUP1 PUSH4 0x42842E0E EQ PUSH2 0x18C JUMPI PUSH0 DUP1 REVERT JUMPDEST DUP1 PUSH4 0x1FFC9A7 EQ PUSH2 0xE9 JUMPI DUP1 PUSH4 0x6FDDE03 EQ PUSH2 0x111 JUMPI DUP1 PUSH4 0x81812FC EQ PUSH2 0x126 JUMPI JUMPDEST PUSH0 DUP1 REVERT JUMPDEST PUSH2 0xFC PUSH2 0xF7 CALLDATASIZE PUSH1 0x4 PUSH2 0xF04 JUMP JUMPDEST PUSH2 0x227 JUMP JUMPDEST PUSH1 0x40 MLOAD SWAP1 ISZERO ISZERO DUP2 MSTORE PUSH1 0x20 ADD JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x119 PUSH2 0x278 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x108 SWAP2 SWAP1 PUSH2 0xF6C JUMP JUMPDEST PUSH2 0x139 PUSH2 0x134 CALLDATASIZE PUSH1 0x4 PUSH2 0xF7E JUMP JUMPDEST PUSH2 0x307 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 SWAP2 AND DUP2 MSTORE PUSH1 0x20 ADD PUSH2 0x108 JUMP JUMPDEST PUSH2 0x164 PUSH2 0x15F CALLDATASIZE PUSH1 0x4 PUSH2 0xFB0 JUMP JUMPDEST PUSH2 0x32C JUMP JUMPDEST STOP JUMPDEST PUSH2 0x164 PUSH2 0x174 CALLDATASIZE PUSH1 0x4 PUSH2 0xFD8 JUMP JUMPDEST PUSH2 0x445 JUMP JUMPDEST PUSH2 0x164 PUSH2 0x187 CALLDATASIZE PUSH1 0x4 PUSH2 0x1011 JUMP JUMPDEST PUSH2 0x476 JUMP JUMPDEST PUSH2 0x164 PUSH2 0x19A CALLDATASIZE PUSH1 0x4 PUSH2 0xFD8 JUMP JUMPDEST PUSH2 0x49E JUMP JUMPDEST PUSH2 0x139 PUSH2 0x1AD CALLDATASIZE PUSH1 0x4 PUSH2 0xF7E JUMP JUMPDEST PUSH2 0x4B8 JUMP JUMPDEST PUSH2 0x1C5 PUSH2 0x1C0 CALLDATASIZE PUSH1 0x4 PUSH2 0x1011 JUMP JUMPDEST PUSH2 0x517 JUMP JUMPDEST PUSH1 0x40 MLOAD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH2 0x108 JUMP JUMPDEST PUSH2 0x119 PUSH2 0x59B JUMP JUMPDEST PUSH2 0x164 PUSH2 0x1E9 CALLDATASIZE PUSH1 0x4 PUSH2 0x102A JUMP JUMPDEST PUSH2 0x5AA JUMP JUMPDEST PUSH2 0x164 PUSH2 0x1FC CALLDATASIZE PUSH1 0x4 PUSH2 0x1077 JUMP JUMPDEST PUSH2 0x5B5 JUMP JUMPDEST PUSH2 0x119 PUSH2 0x20F CALLDATASIZE PUSH1 0x4 PUSH2 0xF7E JUMP JUMPDEST PUSH2 0x5ED JUMP JUMPDEST PUSH2 0xFC PUSH2 0x222 CALLDATASIZE PUSH1 0x4 PUSH2 0x114C JUMP JUMPDEST PUSH2 0x65D JUMP JUMPDEST PUSH0 PUSH1 0x1 PUSH1 0x1 PUSH1 0xE0 SHL SUB NOT DUP3 AND PUSH4 0x80AC58CD PUSH1 0xE0 SHL EQ DUP1 PUSH2 0x257 JUMPI POP PUSH1 0x1 PUSH1 0x1 PUSH1 0xE0 SHL SUB NOT DUP3 AND PUSH4 0x5B5E139F PUSH1 0xE0 SHL EQ JUMPDEST DUP1 PUSH2 0x272 JUMPI POP PUSH4 0x1FFC9A7 PUSH1 0xE0 SHL PUSH1 0x1 PUSH1 0x1 PUSH1 0xE0 SHL SUB NOT DUP4 AND EQ JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x60 PUSH0 DUP1 SLOAD PUSH2 0x286 SWAP1 PUSH2 0x117D JUMP JUMPDEST DUP1 PUSH1 0x1F ADD PUSH1 0x20 DUP1 SWAP2 DIV MUL PUSH1 0x20 ADD PUSH1 0x40 MLOAD SWAP1 DUP2 ADD PUSH1 0x40 MSTORE DUP1 SWAP3 SWAP2 SWAP1 DUP2 DUP2 MSTORE PUSH1 0x20 ADD DUP3 DUP1 SLOAD PUSH2 0x2B2 SWAP1 PUSH2 0x117D JUMP JUMPDEST DUP1 ISZERO PUSH2 0x2FD JUMPI DUP1 PUSH1 0x1F LT PUSH2 0x2D4 JUMPI PUSH2 0x100 DUP1 DUP4 SLOAD DIV MUL DUP4 MSTORE SWAP2 PUSH1 0x20 ADD SWAP2 PUSH2 0x2FD JUMP JUMPDEST DUP3 ADD SWAP2 SWAP1 PUSH0 MSTORE PUSH1 0x20 PUSH0 KECCAK256 SWAP1 JUMPDEST DUP2 SLOAD DUP2 MSTORE SWAP1 PUSH1 0x1 ADD SWAP1 PUSH1 0x20 ADD DUP1 DUP4 GT PUSH2 0x2E0 JUMPI DUP3 SWAP1 SUB PUSH1 0x1F AND DUP3 ADD SWAP2 JUMPDEST POP POP POP POP POP SWAP1 POP SWAP1 JUMP JUMPDEST PUSH0 PUSH2 0x311 DUP3 PUSH2 0x68A JUMP JUMPDEST POP PUSH0 SWAP1 DUP2 MSTORE PUSH1 0x4 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND SWAP1 JUMP JUMPDEST PUSH0 PUSH2 0x336 DUP3 PUSH2 0x4B8 JUMP JUMPDEST SWAP1 POP DUP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP4 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND SUB PUSH2 0x3A8 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x21 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x4552433732313A20617070726F76616C20746F2063757272656E74206F776E65 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x39 PUSH1 0xF9 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST CALLER PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 AND EQ DUP1 PUSH2 0x3C4 JUMPI POP PUSH2 0x3C4 DUP2 CALLER PUSH2 0x65D JUMP JUMPDEST PUSH2 0x436 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x3D PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x4552433732313A20617070726F76652063616C6C6572206973206E6F7420746F PUSH1 0x44 DUP3 ADD MSTORE PUSH32 0x6B656E206F776E6572206F7220617070726F76656420666F7220616C6C000000 PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0x39F JUMP JUMPDEST PUSH2 0x440 DUP4 DUP4 PUSH2 0x6EB JUMP JUMPDEST POP POP POP JUMP JUMPDEST PUSH2 0x44F CALLER DUP3 PUSH2 0x758 JUMP JUMPDEST PUSH2 0x46B JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x39F SWAP1 PUSH2 0x11B5 JUMP JUMPDEST PUSH2 0x440 DUP4 DUP4 DUP4 PUSH2 0x7B6 JUMP JUMPDEST PUSH0 PUSH2 0x480 PUSH1 0x6 SLOAD SWAP1 JUMP JUMPDEST SWAP1 POP PUSH2 0x490 PUSH1 0x6 DUP1 SLOAD PUSH1 0x1 ADD SWAP1 SSTORE JUMP JUMPDEST PUSH2 0x49A DUP3 DUP3 PUSH2 0x925 JUMP JUMPDEST POP POP JUMP JUMPDEST PUSH2 0x440 DUP4 DUP4 DUP4 PUSH1 0x40 MLOAD DUP1 PUSH1 0x20 ADD PUSH1 0x40 MSTORE DUP1 PUSH0 DUP2 MSTORE POP PUSH2 0x5B5 JUMP JUMPDEST PUSH0 DUP2 DUP2 MSTORE PUSH1 0x2 PUSH1 0x20 MSTORE PUSH1 0x40 DUP2 KECCAK256 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP1 PUSH2 0x272 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x18 PUSH1 0x24 DUP3 ADD MSTORE PUSH24 0x115490CDCC8C4E881A5B9D985B1A59081D1BDAD95B881251 PUSH1 0x42 SHL PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x39F JUMP JUMPDEST PUSH0 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 AND PUSH2 0x580 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x29 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x4552433732313A2061646472657373207A65726F206973206E6F742061207661 PUSH1 0x44 DUP3 ADD MSTORE PUSH9 0x3634B21037BBB732B9 PUSH1 0xB9 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0x39F JUMP JUMPDEST POP PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH0 SWAP1 DUP2 MSTORE PUSH1 0x3 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD SWAP1 JUMP JUMPDEST PUSH1 0x60 PUSH1 0x1 DUP1 SLOAD PUSH2 0x286 SWAP1 PUSH2 0x117D JUMP JUMPDEST PUSH2 0x49A CALLER DUP4 DUP4 PUSH2 0x93E JUMP JUMPDEST PUSH2 0x5BF CALLER DUP4 PUSH2 0x758 JUMP JUMPDEST PUSH2 0x5DB JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x39F SWAP1 PUSH2 0x11B5 JUMP JUMPDEST PUSH2 0x5E7 DUP5 DUP5 DUP5 DUP5 PUSH2 0xA0B JUMP JUMPDEST POP POP POP POP JUMP JUMPDEST PUSH1 0x60 PUSH2 0x5F8 DUP3 PUSH2 0x68A JUMP JUMPDEST PUSH0 PUSH2 0x60D PUSH1 0x40 DUP1 MLOAD PUSH1 0x20 DUP2 ADD SWAP1 SWAP2 MSTORE PUSH0 DUP2 MSTORE SWAP1 JUMP JUMPDEST SWAP1 POP PUSH0 DUP2 MLOAD GT PUSH2 0x62B JUMPI PUSH1 0x40 MLOAD DUP1 PUSH1 0x20 ADD PUSH1 0x40 MSTORE DUP1 PUSH0 DUP2 MSTORE POP PUSH2 0x656 JUMP JUMPDEST DUP1 PUSH2 0x635 DUP5 PUSH2 0xA3E JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x20 ADD PUSH2 0x646 SWAP3 SWAP2 SWAP1 PUSH2 0x1202 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x20 DUP2 DUP4 SUB SUB DUP2 MSTORE SWAP1 PUSH1 0x40 MSTORE JUMPDEST SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP2 DUP3 AND PUSH0 SWAP1 DUP2 MSTORE PUSH1 0x5 PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 SWAP4 SWAP1 SWAP5 AND DUP3 MSTORE SWAP2 SWAP1 SWAP2 MSTORE KECCAK256 SLOAD PUSH1 0xFF AND SWAP1 JUMP JUMPDEST PUSH0 DUP2 DUP2 MSTORE PUSH1 0x2 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH2 0x6E8 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x18 PUSH1 0x24 DUP3 ADD MSTORE PUSH24 0x115490CDCC8C4E881A5B9D985B1A59081D1BDAD95B881251 PUSH1 0x42 SHL PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x39F JUMP JUMPDEST POP JUMP JUMPDEST PUSH0 DUP2 DUP2 MSTORE PUSH1 0x4 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 DUP1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB NOT AND PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP5 AND SWAP1 DUP2 OR SWAP1 SWAP2 SSTORE DUP2 SWAP1 PUSH2 0x71F DUP3 PUSH2 0x4B8 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH32 0x8C5BE1E5EBEC7D5BD14F71427D1E84F3DD0314C0F7B2291E5B200AC8C7C3B925 PUSH1 0x40 MLOAD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG4 POP POP JUMP JUMPDEST PUSH0 DUP1 PUSH2 0x763 DUP4 PUSH2 0x4B8 JUMP JUMPDEST SWAP1 POP DUP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP5 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND EQ DUP1 PUSH2 0x78A JUMPI POP PUSH2 0x78A DUP2 DUP6 PUSH2 0x65D JUMP JUMPDEST DUP1 PUSH2 0x7AE JUMPI POP DUP4 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH2 0x7A3 DUP5 PUSH2 0x307 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND EQ JUMPDEST SWAP5 SWAP4 POP POP POP POP JUMP JUMPDEST DUP3 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH2 0x7C9 DUP3 PUSH2 0x4B8 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND EQ PUSH2 0x7EF JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x39F SWAP1 PUSH2 0x1230 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 AND PUSH2 0x851 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x24 DUP1 DUP3 ADD MSTORE PUSH32 0x4552433732313A207472616E7366657220746F20746865207A65726F20616464 PUSH1 0x44 DUP3 ADD MSTORE PUSH4 0x72657373 PUSH1 0xE0 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0x39F JUMP JUMPDEST PUSH2 0x85E DUP4 DUP4 DUP4 PUSH1 0x1 PUSH2 0xACE JUMP JUMPDEST DUP3 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH2 0x871 DUP3 PUSH2 0x4B8 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND EQ PUSH2 0x897 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x39F SWAP1 PUSH2 0x1230 JUMP JUMPDEST PUSH0 DUP2 DUP2 MSTORE PUSH1 0x4 PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 DUP1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB NOT SWAP1 DUP2 AND SWAP1 SWAP2 SSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP8 DUP2 AND DUP1 DUP7 MSTORE PUSH1 0x3 DUP6 MSTORE DUP4 DUP7 KECCAK256 DUP1 SLOAD PUSH0 NOT ADD SWAP1 SSTORE SWAP1 DUP8 AND DUP1 DUP7 MSTORE DUP4 DUP7 KECCAK256 DUP1 SLOAD PUSH1 0x1 ADD SWAP1 SSTORE DUP7 DUP7 MSTORE PUSH1 0x2 SWAP1 SWAP5 MSTORE DUP3 DUP6 KECCAK256 DUP1 SLOAD SWAP1 SWAP3 AND DUP5 OR SWAP1 SWAP2 SSTORE SWAP1 MLOAD DUP5 SWAP4 PUSH32 0xDDF252AD1BE2C89B69C2B068FC378DAA952BA7F163C4A11628F55A4DF523B3EF SWAP2 LOG4 POP POP POP JUMP JUMPDEST PUSH2 0x49A DUP3 DUP3 PUSH1 0x40 MLOAD DUP1 PUSH1 0x20 ADD PUSH1 0x40 MSTORE DUP1 PUSH0 DUP2 MSTORE POP PUSH2 0xB54 JUMP JUMPDEST DUP2 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP4 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND SUB PUSH2 0x99F JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x19 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x4552433732313A20617070726F766520746F2063616C6C657200000000000000 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x39F JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 DUP2 AND PUSH0 DUP2 DUP2 MSTORE PUSH1 0x5 PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 SWAP5 DUP8 AND DUP1 DUP5 MSTORE SWAP5 DUP3 MSTORE SWAP2 DUP3 SWAP1 KECCAK256 DUP1 SLOAD PUSH1 0xFF NOT AND DUP7 ISZERO ISZERO SWAP1 DUP2 OR SWAP1 SWAP2 SSTORE SWAP2 MLOAD SWAP2 DUP3 MSTORE PUSH32 0x17307EAB39AB6107E8899845AD3D59BD9653F200F220920489CA2B5937696C31 SWAP2 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 POP POP POP JUMP JUMPDEST PUSH2 0xA16 DUP5 DUP5 DUP5 PUSH2 0x7B6 JUMP JUMPDEST PUSH2 0xA22 DUP5 DUP5 DUP5 DUP5 PUSH2 0xB86 JUMP JUMPDEST PUSH2 0x5E7 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x39F SWAP1 PUSH2 0x1275 JUMP JUMPDEST PUSH1 0x60 PUSH0 PUSH2 0xA4A DUP4 PUSH2 0xC83 JUMP JUMPDEST PUSH1 0x1 ADD SWAP1 POP PUSH0 DUP2 PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0xA69 JUMPI PUSH2 0xA69 PUSH2 0x1063 JUMP JUMPDEST PUSH1 0x40 MLOAD SWAP1 DUP1 DUP3 MSTORE DUP1 PUSH1 0x1F ADD PUSH1 0x1F NOT AND PUSH1 0x20 ADD DUP3 ADD PUSH1 0x40 MSTORE DUP1 ISZERO PUSH2 0xA93 JUMPI PUSH1 0x20 DUP3 ADD DUP2 DUP1 CALLDATASIZE DUP4 CALLDATACOPY ADD SWAP1 POP JUMPDEST POP SWAP1 POP DUP2 DUP2 ADD PUSH1 0x20 ADD JUMPDEST PUSH0 NOT ADD PUSH16 0x181899199A1A9B1B9C1CB0B131B232B3 PUSH1 0x81 SHL PUSH1 0xA DUP7 MOD BYTE DUP2 MSTORE8 PUSH1 0xA DUP6 DIV SWAP5 POP DUP5 PUSH2 0xA9D JUMPI POP SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x1 DUP2 GT ISZERO PUSH2 0x5E7 JUMPI PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP5 AND ISZERO PUSH2 0xB13 JUMPI PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP5 AND PUSH0 SWAP1 DUP2 MSTORE PUSH1 0x3 PUSH1 0x20 MSTORE PUSH1 0x40 DUP2 KECCAK256 DUP1 SLOAD DUP4 SWAP3 SWAP1 PUSH2 0xB0D SWAP1 DUP5 SWAP1 PUSH2 0x12DB JUMP JUMPDEST SWAP1 SWAP2 SSTORE POP POP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 AND ISZERO PUSH2 0x5E7 JUMPI PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 AND PUSH0 SWAP1 DUP2 MSTORE PUSH1 0x3 PUSH1 0x20 MSTORE PUSH1 0x40 DUP2 KECCAK256 DUP1 SLOAD DUP4 SWAP3 SWAP1 PUSH2 0xB49 SWAP1 DUP5 SWAP1 PUSH2 0x12EE JUMP JUMPDEST SWAP1 SWAP2 SSTORE POP POP POP POP POP POP JUMP JUMPDEST PUSH2 0xB5E DUP4 DUP4 PUSH2 0xD5A JUMP JUMPDEST PUSH2 0xB6A PUSH0 DUP5 DUP5 DUP5 PUSH2 0xB86 JUMP JUMPDEST PUSH2 0x440 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x39F SWAP1 PUSH2 0x1275 JUMP JUMPDEST PUSH0 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP5 AND EXTCODESIZE ISZERO PUSH2 0xC78 JUMPI PUSH1 0x40 MLOAD PUSH4 0xA85BD01 PUSH1 0xE1 SHL DUP2 MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP6 AND SWAP1 PUSH4 0x150B7A02 SWAP1 PUSH2 0xBC9 SWAP1 CALLER SWAP1 DUP10 SWAP1 DUP9 SWAP1 DUP9 SWAP1 PUSH1 0x4 ADD PUSH2 0x1301 JUMP JUMPDEST PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH0 DUP8 GAS CALL SWAP3 POP POP POP DUP1 ISZERO PUSH2 0xC03 JUMPI POP PUSH1 0x40 DUP1 MLOAD PUSH1 0x1F RETURNDATASIZE SWAP1 DUP2 ADD PUSH1 0x1F NOT AND DUP3 ADD SWAP1 SWAP3 MSTORE PUSH2 0xC00 SWAP2 DUP2 ADD SWAP1 PUSH2 0x133D JUMP JUMPDEST PUSH1 0x1 JUMPDEST PUSH2 0xC5E JUMPI RETURNDATASIZE DUP1 DUP1 ISZERO PUSH2 0xC30 JUMPI PUSH1 0x40 MLOAD SWAP2 POP PUSH1 0x1F NOT PUSH1 0x3F RETURNDATASIZE ADD AND DUP3 ADD PUSH1 0x40 MSTORE RETURNDATASIZE DUP3 MSTORE RETURNDATASIZE PUSH0 PUSH1 0x20 DUP5 ADD RETURNDATACOPY PUSH2 0xC35 JUMP JUMPDEST PUSH1 0x60 SWAP2 POP JUMPDEST POP DUP1 MLOAD PUSH0 SUB PUSH2 0xC56 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x39F SWAP1 PUSH2 0x1275 JUMP JUMPDEST DUP1 MLOAD DUP2 PUSH1 0x20 ADD REVERT JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xE0 SHL SUB NOT AND PUSH4 0xA85BD01 PUSH1 0xE1 SHL EQ SWAP1 POP PUSH2 0x7AE JUMP JUMPDEST POP PUSH1 0x1 SWAP5 SWAP4 POP POP POP POP JUMP JUMPDEST PUSH0 DUP1 PUSH19 0x184F03E93FF9F4DAA797ED6E38ED64BF6A1F01 PUSH1 0x40 SHL DUP4 LT PUSH2 0xCC1 JUMPI PUSH19 0x184F03E93FF9F4DAA797ED6E38ED64BF6A1F01 PUSH1 0x40 SHL DUP4 DIV SWAP3 POP PUSH1 0x40 ADD JUMPDEST PUSH14 0x4EE2D6D415B85ACEF8100000000 DUP4 LT PUSH2 0xCED JUMPI PUSH14 0x4EE2D6D415B85ACEF8100000000 DUP4 DIV SWAP3 POP PUSH1 0x20 ADD JUMPDEST PUSH7 0x2386F26FC10000 DUP4 LT PUSH2 0xD0B JUMPI PUSH7 0x2386F26FC10000 DUP4 DIV SWAP3 POP PUSH1 0x10 ADD JUMPDEST PUSH4 0x5F5E100 DUP4 LT PUSH2 0xD23 JUMPI PUSH4 0x5F5E100 DUP4 DIV SWAP3 POP PUSH1 0x8 ADD JUMPDEST PUSH2 0x2710 DUP4 LT PUSH2 0xD37 JUMPI PUSH2 0x2710 DUP4 DIV SWAP3 POP PUSH1 0x4 ADD JUMPDEST PUSH1 0x64 DUP4 LT PUSH2 0xD49 JUMPI PUSH1 0x64 DUP4 DIV SWAP3 POP PUSH1 0x2 ADD JUMPDEST PUSH1 0xA DUP4 LT PUSH2 0x272 JUMPI PUSH1 0x1 ADD SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 AND PUSH2 0xDB0 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD DUP2 SWAP1 MSTORE PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x4552433732313A206D696E7420746F20746865207A65726F2061646472657373 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x39F JUMP JUMPDEST PUSH0 DUP2 DUP2 MSTORE PUSH1 0x2 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND ISZERO PUSH2 0xE14 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x1C PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x4552433732313A20746F6B656E20616C7265616479206D696E74656400000000 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x39F JUMP JUMPDEST PUSH2 0xE21 PUSH0 DUP4 DUP4 PUSH1 0x1 PUSH2 0xACE JUMP JUMPDEST PUSH0 DUP2 DUP2 MSTORE PUSH1 0x2 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND ISZERO PUSH2 0xE85 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x1C PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x4552433732313A20746F6B656E20616C7265616479206D696E74656400000000 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x39F JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 AND PUSH0 DUP2 DUP2 MSTORE PUSH1 0x3 PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 DUP1 SLOAD PUSH1 0x1 ADD SWAP1 SSTORE DUP5 DUP4 MSTORE PUSH1 0x2 SWAP1 SWAP2 MSTORE DUP1 DUP3 KECCAK256 DUP1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB NOT AND DUP5 OR SWAP1 SSTORE MLOAD DUP4 SWAP3 SWAP2 SWAP1 PUSH32 0xDDF252AD1BE2C89B69C2B068FC378DAA952BA7F163C4A11628F55A4DF523B3EF SWAP1 DUP3 SWAP1 LOG4 POP POP JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xE0 SHL SUB NOT DUP2 AND DUP2 EQ PUSH2 0x6E8 JUMPI PUSH0 DUP1 REVERT JUMPDEST PUSH0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0xF14 JUMPI PUSH0 DUP1 REVERT JUMPDEST DUP2 CALLDATALOAD PUSH2 0x656 DUP2 PUSH2 0xEEF JUMP JUMPDEST PUSH0 JUMPDEST DUP4 DUP2 LT ISZERO PUSH2 0xF39 JUMPI DUP2 DUP2 ADD MLOAD DUP4 DUP3 ADD MSTORE PUSH1 0x20 ADD PUSH2 0xF21 JUMP JUMPDEST POP POP PUSH0 SWAP2 ADD MSTORE JUMP JUMPDEST PUSH0 DUP2 MLOAD DUP1 DUP5 MSTORE PUSH2 0xF58 DUP2 PUSH1 0x20 DUP7 ADD PUSH1 0x20 DUP7 ADD PUSH2 0xF1F JUMP JUMPDEST PUSH1 0x1F ADD PUSH1 0x1F NOT AND SWAP3 SWAP1 SWAP3 ADD PUSH1 0x20 ADD SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x20 DUP2 MSTORE PUSH0 PUSH2 0x656 PUSH1 0x20 DUP4 ADD DUP5 PUSH2 0xF41 JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0xF8E JUMPI PUSH0 DUP1 REVERT JUMPDEST POP CALLDATALOAD SWAP2 SWAP1 POP JUMP JUMPDEST DUP1 CALLDATALOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND DUP2 EQ PUSH2 0xFAB JUMPI PUSH0 DUP1 REVERT JUMPDEST SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0xFC1 JUMPI PUSH0 DUP1 REVERT JUMPDEST PUSH2 0xFCA DUP4 PUSH2 0xF95 JUMP JUMPDEST SWAP5 PUSH1 0x20 SWAP4 SWAP1 SWAP4 ADD CALLDATALOAD SWAP4 POP POP POP JUMP JUMPDEST PUSH0 DUP1 PUSH0 PUSH1 0x60 DUP5 DUP7 SUB SLT ISZERO PUSH2 0xFEA JUMPI PUSH0 DUP1 REVERT JUMPDEST PUSH2 0xFF3 DUP5 PUSH2 0xF95 JUMP JUMPDEST SWAP3 POP PUSH2 0x1001 PUSH1 0x20 DUP6 ADD PUSH2 0xF95 JUMP JUMPDEST SWAP2 POP PUSH1 0x40 DUP5 ADD CALLDATALOAD SWAP1 POP SWAP3 POP SWAP3 POP SWAP3 JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x1021 JUMPI PUSH0 DUP1 REVERT JUMPDEST PUSH2 0x656 DUP3 PUSH2 0xF95 JUMP JUMPDEST PUSH0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x103B JUMPI PUSH0 DUP1 REVERT JUMPDEST PUSH2 0x1044 DUP4 PUSH2 0xF95 JUMP JUMPDEST SWAP2 POP PUSH1 0x20 DUP4 ADD CALLDATALOAD DUP1 ISZERO ISZERO DUP2 EQ PUSH2 0x1058 JUMPI PUSH0 DUP1 REVERT JUMPDEST DUP1 SWAP2 POP POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH0 MSTORE PUSH1 0x41 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH0 REVERT JUMPDEST PUSH0 DUP1 PUSH0 DUP1 PUSH1 0x80 DUP6 DUP8 SUB SLT ISZERO PUSH2 0x108A JUMPI PUSH0 DUP1 REVERT JUMPDEST PUSH2 0x1093 DUP6 PUSH2 0xF95 JUMP JUMPDEST SWAP4 POP PUSH2 0x10A1 PUSH1 0x20 DUP7 ADD PUSH2 0xF95 JUMP JUMPDEST SWAP3 POP PUSH1 0x40 DUP6 ADD CALLDATALOAD SWAP2 POP PUSH1 0x60 DUP6 ADD CALLDATALOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP1 DUP3 GT ISZERO PUSH2 0x10C4 JUMPI PUSH0 DUP1 REVERT JUMPDEST DUP2 DUP8 ADD SWAP2 POP DUP8 PUSH1 0x1F DUP4 ADD SLT PUSH2 0x10D7 JUMPI PUSH0 DUP1 REVERT JUMPDEST DUP2 CALLDATALOAD DUP2 DUP2 GT ISZERO PUSH2 0x10E9 JUMPI PUSH2 0x10E9 PUSH2 0x1063 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x1F DUP3 ADD PUSH1 0x1F NOT SWAP1 DUP2 AND PUSH1 0x3F ADD AND DUP2 ADD SWAP1 DUP4 DUP3 GT DUP2 DUP4 LT OR ISZERO PUSH2 0x1111 JUMPI PUSH2 0x1111 PUSH2 0x1063 JUMP JUMPDEST DUP2 PUSH1 0x40 MSTORE DUP3 DUP2 MSTORE DUP11 PUSH1 0x20 DUP5 DUP8 ADD ADD GT ISZERO PUSH2 0x1129 JUMPI PUSH0 DUP1 REVERT JUMPDEST DUP3 PUSH1 0x20 DUP7 ADD PUSH1 0x20 DUP4 ADD CALLDATACOPY PUSH0 PUSH1 0x20 DUP5 DUP4 ADD ADD MSTORE DUP1 SWAP6 POP POP POP POP POP POP SWAP3 SWAP6 SWAP2 SWAP5 POP SWAP3 POP JUMP JUMPDEST PUSH0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x115D JUMPI PUSH0 DUP1 REVERT JUMPDEST PUSH2 0x1166 DUP4 PUSH2 0xF95 JUMP JUMPDEST SWAP2 POP PUSH2 0x1174 PUSH1 0x20 DUP5 ADD PUSH2 0xF95 JUMP JUMPDEST SWAP1 POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH1 0x1 DUP2 DUP2 SHR SWAP1 DUP3 AND DUP1 PUSH2 0x1191 JUMPI PUSH1 0x7F DUP3 AND SWAP2 POP JUMPDEST PUSH1 0x20 DUP3 LT DUP2 SUB PUSH2 0x11AF JUMPI PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH0 MSTORE PUSH1 0x22 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH0 REVERT JUMPDEST POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x20 DUP1 DUP3 MSTORE PUSH1 0x2D SWAP1 DUP3 ADD MSTORE PUSH32 0x4552433732313A2063616C6C6572206973206E6F7420746F6B656E206F776E65 PUSH1 0x40 DUP3 ADD MSTORE PUSH13 0x1C881BDC88185C1C1C9BDD9959 PUSH1 0x9A SHL PUSH1 0x60 DUP3 ADD MSTORE PUSH1 0x80 ADD SWAP1 JUMP JUMPDEST PUSH0 DUP4 MLOAD PUSH2 0x1213 DUP2 DUP5 PUSH1 0x20 DUP9 ADD PUSH2 0xF1F JUMP JUMPDEST DUP4 MLOAD SWAP1 DUP4 ADD SWAP1 PUSH2 0x1227 DUP2 DUP4 PUSH1 0x20 DUP9 ADD PUSH2 0xF1F JUMP JUMPDEST ADD SWAP5 SWAP4 POP POP POP POP JUMP JUMPDEST PUSH1 0x20 DUP1 DUP3 MSTORE PUSH1 0x25 SWAP1 DUP3 ADD MSTORE PUSH32 0x4552433732313A207472616E736665722066726F6D20696E636F727265637420 PUSH1 0x40 DUP3 ADD MSTORE PUSH5 0x37BBB732B9 PUSH1 0xD9 SHL PUSH1 0x60 DUP3 ADD MSTORE PUSH1 0x80 ADD SWAP1 JUMP JUMPDEST PUSH1 0x20 DUP1 DUP3 MSTORE PUSH1 0x32 SWAP1 DUP3 ADD MSTORE PUSH32 0x4552433732313A207472616E7366657220746F206E6F6E204552433732315265 PUSH1 0x40 DUP3 ADD MSTORE PUSH18 0x31B2B4BB32B91034B6B83632B6B2B73A32B9 PUSH1 0x71 SHL PUSH1 0x60 DUP3 ADD MSTORE PUSH1 0x80 ADD SWAP1 JUMP JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH0 MSTORE PUSH1 0x11 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH0 REVERT JUMPDEST DUP2 DUP2 SUB DUP2 DUP2 GT ISZERO PUSH2 0x272 JUMPI PUSH2 0x272 PUSH2 0x12C7 JUMP JUMPDEST DUP1 DUP3 ADD DUP1 DUP3 GT ISZERO PUSH2 0x272 JUMPI PUSH2 0x272 PUSH2 0x12C7 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP6 DUP2 AND DUP3 MSTORE DUP5 AND PUSH1 0x20 DUP3 ADD MSTORE PUSH1 0x40 DUP2 ADD DUP4 SWAP1 MSTORE PUSH1 0x80 PUSH1 0x60 DUP3 ADD DUP2 SWAP1 MSTORE PUSH0 SWAP1 PUSH2 0x1333 SWAP1 DUP4 ADD DUP5 PUSH2 0xF41 JUMP JUMPDEST SWAP7 SWAP6 POP POP POP POP POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x134D JUMPI PUSH0 DUP1 REVERT JUMPDEST DUP2 MLOAD PUSH2 0x656 DUP2 PUSH2 0xEEF JUMP INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 0xBD 0x25 CREATE CALLDATASIZE SLT EXP 0xE 0xB1 DUP13 LOG2 0xAA SMOD SWAP15 ADDMOD ADD PUSH2 0xB5A8 COINBASE PUSH11 0xBC94A75DDE62DCA155667F PUSH13 0x64736F6C634300081500330000 ",
							"sourceMap": "169:337:11:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1570:300:0;;;;;;:::i;:::-;;:::i;:::-;;;565:14:12;;558:22;540:41;;528:2;513:18;1570:300:0;;;;;;;;2471:98;;;:::i;:::-;;;;;;;:::i;3935:167::-;;;;;;:::i;:::-;;:::i;:::-;;;-1:-1:-1;;;;;1697:32:12;;;1679:51;;1667:2;1652:18;3935:167:0;1533:203:12;3468:406:0;;;;;;:::i;:::-;;:::i;:::-;;4612:326;;;;;;:::i;:::-;;:::i;338:166:11:-;;;;;;:::i;:::-;;:::i;5004:179:0:-;;;;;;:::i;:::-;;:::i;2190:219::-;;;;;;:::i;:::-;;:::i;1929:204::-;;;;;;:::i;:::-;;:::i;:::-;;;2848:25:12;;;2836:2;2821:18;1929:204:0;2702:177:12;2633:102:0;;;:::i;4169:153::-;;;;;;:::i;:::-;;:::i;5249:314::-;;;;;;:::i;:::-;;:::i;2801:276::-;;;;;;:::i;:::-;;:::i;4388:162::-;;;;;;:::i;:::-;;:::i;1570:300::-;1672:4;-1:-1:-1;;;;;;1707:40:0;;-1:-1:-1;;;1707:40:0;;:104;;-1:-1:-1;;;;;;;1763:48:0;;-1:-1:-1;;;1763:48:0;1707:104;:156;;;-1:-1:-1;;;;;;;;;;937:40:8;;;1827:36:0;1688:175;1570:300;-1:-1:-1;;1570:300:0:o;2471:98::-;2525:13;2557:5;2550:12;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;2471:98;:::o;3935:167::-;4011:7;4030:23;4045:7;4030:14;:23::i;:::-;-1:-1:-1;4071:24:0;;;;:15;:24;;;;;;-1:-1:-1;;;;;4071:24:0;;3935:167::o;3468:406::-;3548:13;3564:23;3579:7;3564:14;:23::i;:::-;3548:39;;3611:5;-1:-1:-1;;;;;3605:11:0;:2;-1:-1:-1;;;;;3605:11:0;;3597:57;;;;-1:-1:-1;;;3597:57:0;;5363:2:12;3597:57:0;;;5345:21:12;5402:2;5382:18;;;5375:30;5441:34;5421:18;;;5414:62;-1:-1:-1;;;5492:18:12;;;5485:31;5533:19;;3597:57:0;;;;;;;;;719:10:5;-1:-1:-1;;;;;3686:21:0;;;;:62;;-1:-1:-1;3711:37:0;3728:5;719:10:5;4388:162:0;:::i;3711:37::-;3665:170;;;;-1:-1:-1;;;3665:170:0;;5765:2:12;3665:170:0;;;5747:21:12;5804:2;5784:18;;;5777:30;5843:34;5823:18;;;5816:62;5914:31;5894:18;;;5887:59;5963:19;;3665:170:0;5563:425:12;3665:170:0;3846:21;3855:2;3859:7;3846:8;:21::i;:::-;3538:336;3468:406;;:::o;4612:326::-;4801:41;719:10:5;4834:7:0;4801:18;:41::i;:::-;4793:99;;;;-1:-1:-1;;;4793:99:0;;;;;;;:::i;:::-;4903:28;4913:4;4919:2;4923:7;4903:9;:28::i;338:166:11:-;385:15;403:25;:15;918:14:6;;827:112;403:25:11;385:43;;438:27;:15;1032:19:6;;1050:1;1032:19;;;945:123;438:27:11;475:22;485:2;489:7;475:9;:22::i;:::-;375:129;338:166;:::o;5004:179:0:-;5137:39;5154:4;5160:2;5164:7;5137:39;;;;;;;;;;;;:16;:39::i;2190:219::-;2262:7;6930:16;;;:7;:16;;;;;;-1:-1:-1;;;;;6930:16:0;;2324:56;;;;-1:-1:-1;;;2324:56:0;;6609:2:12;2324:56:0;;;6591:21:12;6648:2;6628:18;;;6621:30;-1:-1:-1;;;6667:18:12;;;6660:54;6731:18;;2324:56:0;6407:348:12;1929:204:0;2001:7;-1:-1:-1;;;;;2028:19:0;;2020:73;;;;-1:-1:-1;;;2020:73:0;;6962:2:12;2020:73:0;;;6944:21:12;7001:2;6981:18;;;6974:30;7040:34;7020:18;;;7013:62;-1:-1:-1;;;7091:18:12;;;7084:39;7140:19;;2020:73:0;6760:405:12;2020:73:0;-1:-1:-1;;;;;;2110:16:0;;;;;:9;:16;;;;;;;1929:204::o;2633:102::-;2689:13;2721:7;2714:14;;;;;:::i;4169:153::-;4263:52;719:10:5;4296:8:0;4306;4263:18;:52::i;5249:314::-;5417:41;719:10:5;5450:7:0;5417:18;:41::i;:::-;5409:99;;;;-1:-1:-1;;;5409:99:0;;;;;;;:::i;:::-;5518:38;5532:4;5538:2;5542:7;5551:4;5518:13;:38::i;:::-;5249:314;;;;:::o;2801:276::-;2874:13;2899:23;2914:7;2899:14;:23::i;:::-;2933:21;2957:10;3395:9;;;;;;;;;-1:-1:-1;3395:9:0;;;3319:92;2957:10;2933:34;;3008:1;2990:7;2984:21;:25;:86;;;;;;;;;;;;;;;;;3036:7;3045:18;:7;:16;:18::i;:::-;3019:45;;;;;;;;;:::i;:::-;;;;;;;;;;;;;2984:86;2977:93;2801:276;-1:-1:-1;;;2801:276:0:o;4388:162::-;-1:-1:-1;;;;;4508:25:0;;;4485:4;4508:25;;;:18;:25;;;;;;;;:35;;;;;;;;;;;;;;;4388:162::o;13466:133::-;7321:4;6930:16;;;:7;:16;;;;;;-1:-1:-1;;;;;6930:16:0;13539:53;;;;-1:-1:-1;;;13539:53:0;;6609:2:12;13539:53:0;;;6591:21:12;6648:2;6628:18;;;6621:30;-1:-1:-1;;;6667:18:12;;;6660:54;6731:18;;13539:53:0;6407:348:12;13539:53:0;13466:133;:::o;12768:171::-;12842:24;;;;:15;:24;;;;;:29;;-1:-1:-1;;;;;;12842:29:0;-1:-1:-1;;;;;12842:29:0;;;;;;;;:24;;12895:23;12842:24;12895:14;:23::i;:::-;-1:-1:-1;;;;;12886:46:0;;;;;;;;;;;12768:171;;:::o;7540:261::-;7633:4;7649:13;7665:23;7680:7;7665:14;:23::i;:::-;7649:39;;7717:5;-1:-1:-1;;;;;7706:16:0;:7;-1:-1:-1;;;;;7706:16:0;;:52;;;;7726:32;7743:5;7750:7;7726:16;:32::i;:::-;7706:87;;;;7786:7;-1:-1:-1;;;;;7762:31:0;:20;7774:7;7762:11;:20::i;:::-;-1:-1:-1;;;;;7762:31:0;;7706:87;7698:96;7540:261;-1:-1:-1;;;;7540:261:0:o;11423:1233::-;11577:4;-1:-1:-1;;;;;11550:31:0;:23;11565:7;11550:14;:23::i;:::-;-1:-1:-1;;;;;11550:31:0;;11542:81;;;;-1:-1:-1;;;11542:81:0;;;;;;;:::i;:::-;-1:-1:-1;;;;;11641:16:0;;11633:65;;;;-1:-1:-1;;;11633:65:0;;8279:2:12;11633:65:0;;;8261:21:12;8318:2;8298:18;;;8291:30;8357:34;8337:18;;;8330:62;-1:-1:-1;;;8408:18:12;;;8401:34;8452:19;;11633:65:0;8077:400:12;11633:65:0;11709:42;11730:4;11736:2;11740:7;11749:1;11709:20;:42::i;:::-;11878:4;-1:-1:-1;;;;;11851:31:0;:23;11866:7;11851:14;:23::i;:::-;-1:-1:-1;;;;;11851:31:0;;11843:81;;;;-1:-1:-1;;;11843:81:0;;;;;;;:::i;:::-;11993:24;;;;:15;:24;;;;;;;;11986:31;;-1:-1:-1;;;;;;11986:31:0;;;;;;-1:-1:-1;;;;;12461:15:0;;;;;;:9;:15;;;;;:20;;-1:-1:-1;;12461:20:0;;;12495:13;;;;;;;;;:18;;11986:31;12495:18;;;12533:16;;;:7;:16;;;;;;:21;;;;;;;;;;12570:27;;12009:7;;12570:27;;;3538:336;3468:406;;:::o;8131:108::-;8206:26;8216:2;8220:7;8206:26;;;;;;;;;;;;:9;:26::i;13075:307::-;13225:8;-1:-1:-1;;;;;13216:17:0;:5;-1:-1:-1;;;;;13216:17:0;;13208:55;;;;-1:-1:-1;;;13208:55:0;;8684:2:12;13208:55:0;;;8666:21:12;8723:2;8703:18;;;8696:30;8762:27;8742:18;;;8735:55;8807:18;;13208:55:0;8482:349:12;13208:55:0;-1:-1:-1;;;;;13273:25:0;;;;;;;:18;:25;;;;;;;;:35;;;;;;;;;;;;;:46;;-1:-1:-1;;13273:46:0;;;;;;;;;;13334:41;;540::12;;;13334::0;;513:18:12;13334:41:0;;;;;;;13075:307;;;:::o;6424:305::-;6574:28;6584:4;6590:2;6594:7;6574:9;:28::i;:::-;6620:47;6643:4;6649:2;6653:7;6662:4;6620:22;:47::i;:::-;6612:110;;;;-1:-1:-1;;;6612:110:0;;;;;;;:::i;415:696:7:-;471:13;520:14;537:17;548:5;537:10;:17::i;:::-;557:1;537:21;520:38;;572:20;606:6;595:18;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;595:18:7;-1:-1:-1;572:41:7;-1:-1:-1;733:28:7;;;749:2;733:28;788:280;-1:-1:-1;;819:5:7;-1:-1:-1;;;953:2:7;942:14;;937:30;819:5;924:44;1012:2;1003:11;;;-1:-1:-1;1032:21:7;788:280;1032:21;-1:-1:-1;1088:6:7;415:696;-1:-1:-1;;;415:696:7:o;15698:396:0:-;15882:1;15870:9;:13;15866:222;;;-1:-1:-1;;;;;15903:18:0;;;15899:85;;-1:-1:-1;;;;;15941:15:0;;;;;;:9;:15;;;;;:28;;15960:9;;15941:15;:28;;15960:9;;15941:28;:::i;:::-;;;;-1:-1:-1;;15899:85:0;-1:-1:-1;;;;;16001:16:0;;;15997:81;;-1:-1:-1;;;;;16037:13:0;;;;;;:9;:13;;;;;:26;;16054:9;;16037:13;:26;;16054:9;;16037:26;:::i;:::-;;;;-1:-1:-1;;15698:396:0;;;;:::o;8460:309::-;8584:18;8590:2;8594:7;8584:5;:18::i;:::-;8633:53;8664:1;8668:2;8672:7;8681:4;8633:22;:53::i;:::-;8612:150;;;;-1:-1:-1;;;8612:150:0;;;;;;;:::i;14151:831::-;14300:4;-1:-1:-1;;;;;14320:13:0;;1465:19:4;:23;14316:660:0;;14355:71;;-1:-1:-1;;;14355:71:0;;-1:-1:-1;;;;;14355:36:0;;;;;:71;;719:10:5;;14406:4:0;;14412:7;;14421:4;;14355:71;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;-1:-1:-1;14355:71:0;;;;;;;;-1:-1:-1;;14355:71:0;;;;;;;;;;;;:::i;:::-;;;14351:573;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;14593:6;:13;14610:1;14593:18;14589:321;;14635:60;;-1:-1:-1;;;14635:60:0;;;;;;;:::i;14589:321::-;14862:6;14856:13;14847:6;14843:2;14839:15;14832:38;14351:573;-1:-1:-1;;;;;;14476:51:0;-1:-1:-1;;;14476:51:0;;-1:-1:-1;14469:58:0;;14316:660;-1:-1:-1;14961:4:0;14151:831;;;;;;:::o;9889:890:10:-;9942:7;;-1:-1:-1;;;10017:15:10;;10013:99;;-1:-1:-1;;;10052:15:10;;;-1:-1:-1;10095:2:10;10085:12;10013:99;10138:6;10129:5;:15;10125:99;;10173:6;10164:15;;;-1:-1:-1;10207:2:10;10197:12;10125:99;10250:6;10241:5;:15;10237:99;;10285:6;10276:15;;;-1:-1:-1;10319:2:10;10309:12;10237:99;10362:5;10353;:14;10349:96;;10396:5;10387:14;;;-1:-1:-1;10429:1:10;10419:11;10349:96;10471:5;10462;:14;10458:96;;10505:5;10496:14;;;-1:-1:-1;10538:1:10;10528:11;10458:96;10580:5;10571;:14;10567:96;;10614:5;10605:14;;;-1:-1:-1;10647:1:10;10637:11;10567:96;10689:5;10680;:14;10676:64;;10724:1;10714:11;10766:6;9889:890;-1:-1:-1;;9889:890:10:o;9091:920:0:-;-1:-1:-1;;;;;9170:16:0;;9162:61;;;;-1:-1:-1;;;9162:61:0;;10732:2:12;9162:61:0;;;10714:21:12;;;10751:18;;;10744:30;10810:34;10790:18;;;10783:62;10862:18;;9162:61:0;10530:356:12;9162:61:0;7321:4;6930:16;;;:7;:16;;;;;;-1:-1:-1;;;;;6930:16:0;7344:31;9233:58;;;;-1:-1:-1;;;9233:58:0;;11093:2:12;9233:58:0;;;11075:21:12;11132:2;11112:18;;;11105:30;11171;11151:18;;;11144:58;11219:18;;9233:58:0;10891:352:12;9233:58:0;9302:48;9331:1;9335:2;9339:7;9348:1;9302:20;:48::i;:::-;7321:4;6930:16;;;:7;:16;;;;;;-1:-1:-1;;;;;6930:16:0;7344:31;9437:58;;;;-1:-1:-1;;;9437:58:0;;11093:2:12;9437:58:0;;;11075:21:12;11132:2;11112:18;;;11105:30;11171;11151:18;;;11144:58;11219:18;;9437:58:0;10891:352:12;9437:58:0;-1:-1:-1;;;;;9837:13:0;;;;;;:9;:13;;;;;;;;:18;;9854:1;9837:18;;;9876:16;;;:7;:16;;;;;;:21;;-1:-1:-1;;;;;;9876:21:0;;;;;9913:33;9884:7;;9837:13;;9913:33;;9837:13;;9913:33;375:129:11;338:166;:::o;14:131:12:-;-1:-1:-1;;;;;;88:32:12;;78:43;;68:71;;135:1;132;125:12;150:245;208:6;261:2;249:9;240:7;236:23;232:32;229:52;;;277:1;274;267:12;229:52;316:9;303:23;335:30;359:5;335:30;:::i;592:250::-;677:1;687:113;701:6;698:1;695:13;687:113;;;777:11;;;771:18;758:11;;;751:39;723:2;716:10;687:113;;;-1:-1:-1;;834:1:12;816:16;;809:27;592:250::o;847:271::-;889:3;927:5;921:12;954:6;949:3;942:19;970:76;1039:6;1032:4;1027:3;1023:14;1016:4;1009:5;1005:16;970:76;:::i;:::-;1100:2;1079:15;-1:-1:-1;;1075:29:12;1066:39;;;;1107:4;1062:50;;847:271;-1:-1:-1;;847:271:12:o;1123:220::-;1272:2;1261:9;1254:21;1235:4;1292:45;1333:2;1322:9;1318:18;1310:6;1292:45;:::i;1348:180::-;1407:6;1460:2;1448:9;1439:7;1435:23;1431:32;1428:52;;;1476:1;1473;1466:12;1428:52;-1:-1:-1;1499:23:12;;1348:180;-1:-1:-1;1348:180:12:o;1741:173::-;1809:20;;-1:-1:-1;;;;;1858:31:12;;1848:42;;1838:70;;1904:1;1901;1894:12;1838:70;1741:173;;;:::o;1919:254::-;1987:6;1995;2048:2;2036:9;2027:7;2023:23;2019:32;2016:52;;;2064:1;2061;2054:12;2016:52;2087:29;2106:9;2087:29;:::i;:::-;2077:39;2163:2;2148:18;;;;2135:32;;-1:-1:-1;;;1919:254:12:o;2178:328::-;2255:6;2263;2271;2324:2;2312:9;2303:7;2299:23;2295:32;2292:52;;;2340:1;2337;2330:12;2292:52;2363:29;2382:9;2363:29;:::i;:::-;2353:39;;2411:38;2445:2;2434:9;2430:18;2411:38;:::i;:::-;2401:48;;2496:2;2485:9;2481:18;2468:32;2458:42;;2178:328;;;;;:::o;2511:186::-;2570:6;2623:2;2611:9;2602:7;2598:23;2594:32;2591:52;;;2639:1;2636;2629:12;2591:52;2662:29;2681:9;2662:29;:::i;2884:347::-;2949:6;2957;3010:2;2998:9;2989:7;2985:23;2981:32;2978:52;;;3026:1;3023;3016:12;2978:52;3049:29;3068:9;3049:29;:::i;:::-;3039:39;;3128:2;3117:9;3113:18;3100:32;3175:5;3168:13;3161:21;3154:5;3151:32;3141:60;;3197:1;3194;3187:12;3141:60;3220:5;3210:15;;;2884:347;;;;;:::o;3236:127::-;3297:10;3292:3;3288:20;3285:1;3278:31;3328:4;3325:1;3318:15;3352:4;3349:1;3342:15;3368:1138;3463:6;3471;3479;3487;3540:3;3528:9;3519:7;3515:23;3511:33;3508:53;;;3557:1;3554;3547:12;3508:53;3580:29;3599:9;3580:29;:::i;:::-;3570:39;;3628:38;3662:2;3651:9;3647:18;3628:38;:::i;:::-;3618:48;;3713:2;3702:9;3698:18;3685:32;3675:42;;3768:2;3757:9;3753:18;3740:32;3791:18;3832:2;3824:6;3821:14;3818:34;;;3848:1;3845;3838:12;3818:34;3886:6;3875:9;3871:22;3861:32;;3931:7;3924:4;3920:2;3916:13;3912:27;3902:55;;3953:1;3950;3943:12;3902:55;3989:2;3976:16;4011:2;4007;4004:10;4001:36;;;4017:18;;:::i;:::-;4092:2;4086:9;4060:2;4146:13;;-1:-1:-1;;4142:22:12;;;4166:2;4138:31;4134:40;4122:53;;;4190:18;;;4210:22;;;4187:46;4184:72;;;4236:18;;:::i;:::-;4276:10;4272:2;4265:22;4311:2;4303:6;4296:18;4351:7;4346:2;4341;4337;4333:11;4329:20;4326:33;4323:53;;;4372:1;4369;4362:12;4323:53;4428:2;4423;4419;4415:11;4410:2;4402:6;4398:15;4385:46;4473:1;4468:2;4463;4455:6;4451:15;4447:24;4440:35;4494:6;4484:16;;;;;;;3368:1138;;;;;;;:::o;4511:260::-;4579:6;4587;4640:2;4628:9;4619:7;4615:23;4611:32;4608:52;;;4656:1;4653;4646:12;4608:52;4679:29;4698:9;4679:29;:::i;:::-;4669:39;;4727:38;4761:2;4750:9;4746:18;4727:38;:::i;:::-;4717:48;;4511:260;;;;;:::o;4776:380::-;4855:1;4851:12;;;;4898;;;4919:61;;4973:4;4965:6;4961:17;4951:27;;4919:61;5026:2;5018:6;5015:14;4995:18;4992:38;4989:161;;5072:10;5067:3;5063:20;5060:1;5053:31;5107:4;5104:1;5097:15;5135:4;5132:1;5125:15;4989:161;;4776:380;;;:::o;5993:409::-;6195:2;6177:21;;;6234:2;6214:18;;;6207:30;6273:34;6268:2;6253:18;;6246:62;-1:-1:-1;;;6339:2:12;6324:18;;6317:43;6392:3;6377:19;;5993:409::o;7170:496::-;7349:3;7387:6;7381:13;7403:66;7462:6;7457:3;7450:4;7442:6;7438:17;7403:66;:::i;:::-;7532:13;;7491:16;;;;7554:70;7532:13;7491:16;7601:4;7589:17;;7554:70;:::i;:::-;7640:20;;7170:496;-1:-1:-1;;;;7170:496:12:o;7671:401::-;7873:2;7855:21;;;7912:2;7892:18;;;7885:30;7951:34;7946:2;7931:18;;7924:62;-1:-1:-1;;;8017:2:12;8002:18;;7995:35;8062:3;8047:19;;7671:401::o;8836:414::-;9038:2;9020:21;;;9077:2;9057:18;;;9050:30;9116:34;9111:2;9096:18;;9089:62;-1:-1:-1;;;9182:2:12;9167:18;;9160:48;9240:3;9225:19;;8836:414::o;9387:127::-;9448:10;9443:3;9439:20;9436:1;9429:31;9479:4;9476:1;9469:15;9503:4;9500:1;9493:15;9519:128;9586:9;;;9607:11;;;9604:37;;;9621:18;;:::i;9652:125::-;9717:9;;;9738:10;;;9735:36;;;9751:18;;:::i;9782:489::-;-1:-1:-1;;;;;10051:15:12;;;10033:34;;10103:15;;10098:2;10083:18;;10076:43;10150:2;10135:18;;10128:34;;;10198:3;10193:2;10178:18;;10171:31;;;9976:4;;10219:46;;10245:19;;10237:6;10219:46;:::i;:::-;10211:54;9782:489;-1:-1:-1;;;;;;9782:489:12:o;10276:249::-;10345:6;10398:2;10386:9;10377:7;10373:23;10369:32;10366:52;;;10414:1;10411;10404:12;10366:52;10446:9;10440:16;10465:30;10489:5;10465:30;:::i"
						},
						"gasEstimates": {
							"creation": {
								"codeDepositCost": "1001200",
								"executionCost": "infinite",
								"totalCost": "infinite"
							},
							"external": {
								"approve(address,uint256)": "infinite",
								"balanceOf(address)": "2630",
								"getApproved(uint256)": "4787",
								"isApprovedForAll(address,address)": "infinite",
								"name()": "infinite",
								"ownerOf(uint256)": "2558",
								"safeMint(address)": "infinite",
								"safeTransferFrom(address,address,uint256)": "infinite",
								"safeTransferFrom(address,address,uint256,bytes)": "infinite",
								"setApprovalForAll(address,bool)": "26702",
								"supportsInterface(bytes4)": "531",
								"symbol()": "infinite",
								"tokenURI(uint256)": "infinite",
								"transferFrom(address,address,uint256)": "infinite"
							}
						},
						"legacyAssembly": {
							".code": [
								{
									"begin": 169,
									"end": 506,
									"name": "PUSH",
									"source": 11,
									"value": "80"
								},
								{
									"begin": 169,
									"end": 506,
									"name": "PUSH",
									"source": 11,
									"value": "40"
								},
								{
									"begin": 169,
									"end": 506,
									"name": "MSTORE",
									"source": 11
								},
								{
									"begin": 291,
									"end": 332,
									"name": "CALLVALUE",
									"source": 11
								},
								{
									"begin": 291,
									"end": 332,
									"name": "DUP1",
									"source": 11
								},
								{
									"begin": 291,
									"end": 332,
									"name": "ISZERO",
									"source": 11
								},
								{
									"begin": 291,
									"end": 332,
									"name": "PUSH [tag]",
									"source": 11,
									"value": "1"
								},
								{
									"begin": 291,
									"end": 332,
									"name": "JUMPI",
									"source": 11
								},
								{
									"begin": 291,
									"end": 332,
									"name": "PUSH",
									"source": 11,
									"value": "0"
								},
								{
									"begin": 291,
									"end": 332,
									"name": "DUP1",
									"source": 11
								},
								{
									"begin": 291,
									"end": 332,
									"name": "REVERT",
									"source": 11
								},
								{
									"begin": 291,
									"end": 332,
									"name": "tag",
									"source": 11,
									"value": "1"
								},
								{
									"begin": 291,
									"end": 332,
									"name": "JUMPDEST",
									"source": 11
								},
								{
									"begin": 291,
									"end": 332,
									"name": "POP",
									"source": 11
								},
								{
									"begin": 1390,
									"end": 1503,
									"name": "PUSH",
									"source": 0,
									"value": "40"
								},
								{
									"begin": 1390,
									"end": 1503,
									"name": "MLOAD",
									"source": 0
								},
								{
									"begin": 1390,
									"end": 1503,
									"name": "DUP1",
									"source": 0
								},
								{
									"begin": 1390,
									"end": 1503,
									"name": "PUSH",
									"source": 0,
									"value": "40"
								},
								{
									"begin": 1390,
									"end": 1503,
									"name": "ADD",
									"source": 0
								},
								{
									"begin": 1390,
									"end": 1503,
									"name": "PUSH",
									"source": 0,
									"value": "40"
								},
								{
									"begin": 1390,
									"end": 1503,
									"name": "MSTORE",
									"source": 0
								},
								{
									"begin": 1390,
									"end": 1503,
									"name": "DUP1",
									"source": 0
								},
								{
									"begin": 1390,
									"end": 1503,
									"name": "PUSH",
									"source": 0,
									"value": "7"
								},
								{
									"begin": 1390,
									"end": 1503,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 1390,
									"end": 1503,
									"name": "MSTORE",
									"source": 0
								},
								{
									"begin": 1390,
									"end": 1503,
									"name": "PUSH",
									"source": 0,
									"value": "20"
								},
								{
									"begin": 1390,
									"end": 1503,
									"name": "ADD",
									"source": 0
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "26BCAA37B5B2B7"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "C9"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SHL",
									"source": -1
								},
								{
									"begin": 1390,
									"end": 1503,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 1390,
									"end": 1503,
									"name": "MSTORE",
									"source": 0
								},
								{
									"begin": 1390,
									"end": 1503,
									"name": "POP",
									"source": 0
								},
								{
									"begin": 1390,
									"end": 1503,
									"name": "PUSH",
									"source": 0,
									"value": "40"
								},
								{
									"begin": 1390,
									"end": 1503,
									"name": "MLOAD",
									"source": 0
								},
								{
									"begin": 1390,
									"end": 1503,
									"name": "DUP1",
									"source": 0
								},
								{
									"begin": 1390,
									"end": 1503,
									"name": "PUSH",
									"source": 0,
									"value": "40"
								},
								{
									"begin": 1390,
									"end": 1503,
									"name": "ADD",
									"source": 0
								},
								{
									"begin": 1390,
									"end": 1503,
									"name": "PUSH",
									"source": 0,
									"value": "40"
								},
								{
									"begin": 1390,
									"end": 1503,
									"name": "MSTORE",
									"source": 0
								},
								{
									"begin": 1390,
									"end": 1503,
									"name": "DUP1",
									"source": 0
								},
								{
									"begin": 1390,
									"end": 1503,
									"name": "PUSH",
									"source": 0,
									"value": "3"
								},
								{
									"begin": 1390,
									"end": 1503,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 1390,
									"end": 1503,
									"name": "MSTORE",
									"source": 0
								},
								{
									"begin": 1390,
									"end": 1503,
									"name": "PUSH",
									"source": 0,
									"value": "20"
								},
								{
									"begin": 1390,
									"end": 1503,
									"name": "ADD",
									"source": 0
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "4D544B"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "E8"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SHL",
									"source": -1
								},
								{
									"begin": 1390,
									"end": 1503,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 1390,
									"end": 1503,
									"name": "MSTORE",
									"source": 0
								},
								{
									"begin": 1390,
									"end": 1503,
									"name": "POP",
									"source": 0
								},
								{
									"begin": 1464,
									"end": 1469,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 1456,
									"end": 1461,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 1456,
									"end": 1469,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 1456,
									"end": 1469,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 1456,
									"end": 1469,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "5"
								},
								{
									"begin": 1456,
									"end": 1469,
									"name": "SWAP2",
									"source": 0
								},
								{
									"begin": 1456,
									"end": 1469,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 1456,
									"end": 1469,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "6"
								},
								{
									"begin": 1456,
									"end": 1469,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 0
								},
								{
									"begin": 1456,
									"end": 1469,
									"name": "tag",
									"source": 0,
									"value": "5"
								},
								{
									"begin": 1456,
									"end": 1469,
									"name": "JUMPDEST",
									"source": 0
								},
								{
									"begin": -1,
									"end": -1,
									"name": "POP",
									"source": -1
								},
								{
									"begin": 1479,
									"end": 1486,
									"name": "PUSH",
									"source": 0,
									"value": "1"
								},
								{
									"begin": 1479,
									"end": 1496,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "7"
								},
								{
									"begin": 1489,
									"end": 1496,
									"name": "DUP3",
									"source": 0
								},
								{
									"begin": 1479,
									"end": 1486,
									"name": "DUP3",
									"source": 0
								},
								{
									"begin": 1479,
									"end": 1496,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "6"
								},
								{
									"begin": 1479,
									"end": 1496,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 0
								},
								{
									"begin": 1479,
									"end": 1496,
									"name": "tag",
									"source": 0,
									"value": "7"
								},
								{
									"begin": 1479,
									"end": 1496,
									"name": "JUMPDEST",
									"source": 0
								},
								{
									"begin": 1479,
									"end": 1496,
									"name": "POP",
									"source": 0
								},
								{
									"begin": 1390,
									"end": 1503,
									"name": "POP",
									"source": 0
								},
								{
									"begin": 1390,
									"end": 1503,
									"name": "POP",
									"source": 0
								},
								{
									"begin": 169,
									"end": 506,
									"name": "PUSH [tag]",
									"source": 11,
									"value": "15"
								},
								{
									"begin": 169,
									"end": 506,
									"name": "JUMP",
									"source": 11
								},
								{
									"begin": 14,
									"end": 141,
									"name": "tag",
									"source": 12,
									"value": "10"
								},
								{
									"begin": 14,
									"end": 141,
									"name": "JUMPDEST",
									"source": 12
								},
								{
									"begin": 75,
									"end": 85,
									"name": "PUSH",
									"source": 12,
									"value": "4E487B71"
								},
								{
									"begin": 70,
									"end": 73,
									"name": "PUSH",
									"source": 12,
									"value": "E0"
								},
								{
									"begin": 66,
									"end": 86,
									"name": "SHL",
									"source": 12
								},
								{
									"begin": 63,
									"end": 64,
									"name": "PUSH",
									"source": 12,
									"value": "0"
								},
								{
									"begin": 56,
									"end": 87,
									"name": "MSTORE",
									"source": 12
								},
								{
									"begin": 106,
									"end": 110,
									"name": "PUSH",
									"source": 12,
									"value": "41"
								},
								{
									"begin": 103,
									"end": 104,
									"name": "PUSH",
									"source": 12,
									"value": "4"
								},
								{
									"begin": 96,
									"end": 111,
									"name": "MSTORE",
									"source": 12
								},
								{
									"begin": 130,
									"end": 134,
									"name": "PUSH",
									"source": 12,
									"value": "24"
								},
								{
									"begin": 127,
									"end": 128,
									"name": "PUSH",
									"source": 12,
									"value": "0"
								},
								{
									"begin": 120,
									"end": 135,
									"name": "REVERT",
									"source": 12
								},
								{
									"begin": 146,
									"end": 526,
									"name": "tag",
									"source": 12,
									"value": "11"
								},
								{
									"begin": 146,
									"end": 526,
									"name": "JUMPDEST",
									"source": 12
								},
								{
									"begin": 225,
									"end": 226,
									"name": "PUSH",
									"source": 12,
									"value": "1"
								},
								{
									"begin": 221,
									"end": 233,
									"name": "DUP2",
									"source": 12
								},
								{
									"begin": 221,
									"end": 233,
									"name": "DUP2",
									"source": 12
								},
								{
									"begin": 221,
									"end": 233,
									"name": "SHR",
									"source": 12
								},
								{
									"begin": 221,
									"end": 233,
									"name": "SWAP1",
									"source": 12
								},
								{
									"begin": 268,
									"end": 280,
									"name": "DUP3",
									"source": 12
								},
								{
									"begin": 268,
									"end": 280,
									"name": "AND",
									"source": 12
								},
								{
									"begin": 268,
									"end": 280,
									"name": "DUP1",
									"source": 12
								},
								{
									"begin": 289,
									"end": 350,
									"name": "PUSH [tag]",
									"source": 12,
									"value": "18"
								},
								{
									"begin": 289,
									"end": 350,
									"name": "JUMPI",
									"source": 12
								},
								{
									"begin": 343,
									"end": 347,
									"name": "PUSH",
									"source": 12,
									"value": "7F"
								},
								{
									"begin": 335,
									"end": 341,
									"name": "DUP3",
									"source": 12
								},
								{
									"begin": 331,
									"end": 348,
									"name": "AND",
									"source": 12
								},
								{
									"begin": 321,
									"end": 348,
									"name": "SWAP2",
									"source": 12
								},
								{
									"begin": 321,
									"end": 348,
									"name": "POP",
									"source": 12
								},
								{
									"begin": 289,
									"end": 350,
									"name": "tag",
									"source": 12,
									"value": "18"
								},
								{
									"begin": 289,
									"end": 350,
									"name": "JUMPDEST",
									"source": 12
								},
								{
									"begin": 396,
									"end": 398,
									"name": "PUSH",
									"source": 12,
									"value": "20"
								},
								{
									"begin": 388,
									"end": 394,
									"name": "DUP3",
									"source": 12
								},
								{
									"begin": 385,
									"end": 399,
									"name": "LT",
									"source": 12
								},
								{
									"begin": 365,
									"end": 383,
									"name": "DUP2",
									"source": 12
								},
								{
									"begin": 362,
									"end": 400,
									"name": "SUB",
									"source": 12
								},
								{
									"begin": 359,
									"end": 520,
									"name": "PUSH [tag]",
									"source": 12,
									"value": "19"
								},
								{
									"begin": 359,
									"end": 520,
									"name": "JUMPI",
									"source": 12
								},
								{
									"begin": 442,
									"end": 452,
									"name": "PUSH",
									"source": 12,
									"value": "4E487B71"
								},
								{
									"begin": 437,
									"end": 440,
									"name": "PUSH",
									"source": 12,
									"value": "E0"
								},
								{
									"begin": 433,
									"end": 453,
									"name": "SHL",
									"source": 12
								},
								{
									"begin": 430,
									"end": 431,
									"name": "PUSH",
									"source": 12,
									"value": "0"
								},
								{
									"begin": 423,
									"end": 454,
									"name": "MSTORE",
									"source": 12
								},
								{
									"begin": 477,
									"end": 481,
									"name": "PUSH",
									"source": 12,
									"value": "22"
								},
								{
									"begin": 474,
									"end": 475,
									"name": "PUSH",
									"source": 12,
									"value": "4"
								},
								{
									"begin": 467,
									"end": 482,
									"name": "MSTORE",
									"source": 12
								},
								{
									"begin": 505,
									"end": 509,
									"name": "PUSH",
									"source": 12,
									"value": "24"
								},
								{
									"begin": 502,
									"end": 503,
									"name": "PUSH",
									"source": 12,
									"value": "0"
								},
								{
									"begin": 495,
									"end": 510,
									"name": "REVERT",
									"source": 12
								},
								{
									"begin": 359,
									"end": 520,
									"name": "tag",
									"source": 12,
									"value": "19"
								},
								{
									"begin": 359,
									"end": 520,
									"name": "JUMPDEST",
									"source": 12
								},
								{
									"begin": 359,
									"end": 520,
									"name": "POP",
									"source": 12
								},
								{
									"begin": 146,
									"end": 526,
									"name": "SWAP2",
									"source": 12
								},
								{
									"begin": 146,
									"end": 526,
									"name": "SWAP1",
									"source": 12
								},
								{
									"begin": 146,
									"end": 526,
									"name": "POP",
									"source": 12
								},
								{
									"begin": 146,
									"end": 526,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 12
								},
								{
									"begin": 657,
									"end": 1202,
									"name": "tag",
									"source": 12,
									"value": "13"
								},
								{
									"begin": 657,
									"end": 1202,
									"name": "JUMPDEST",
									"source": 12
								},
								{
									"begin": 759,
									"end": 761,
									"name": "PUSH",
									"source": 12,
									"value": "1F"
								},
								{
									"begin": 754,
									"end": 757,
									"name": "DUP3",
									"source": 12
								},
								{
									"begin": 751,
									"end": 762,
									"name": "GT",
									"source": 12
								},
								{
									"begin": 748,
									"end": 1196,
									"name": "ISZERO",
									"source": 12
								},
								{
									"begin": 748,
									"end": 1196,
									"name": "PUSH [tag]",
									"source": 12,
									"value": "22"
								},
								{
									"begin": 748,
									"end": 1196,
									"name": "JUMPI",
									"source": 12
								},
								{
									"begin": 795,
									"end": 796,
									"name": "PUSH",
									"source": 12,
									"value": "0"
								},
								{
									"begin": 820,
									"end": 825,
									"name": "DUP2",
									"source": 12
								},
								{
									"begin": 816,
									"end": 818,
									"name": "DUP2",
									"source": 12
								},
								{
									"begin": 809,
									"end": 826,
									"name": "MSTORE",
									"source": 12
								},
								{
									"begin": 865,
									"end": 869,
									"name": "PUSH",
									"source": 12,
									"value": "20"
								},
								{
									"begin": 861,
									"end": 863,
									"name": "DUP2",
									"source": 12
								},
								{
									"begin": 851,
									"end": 870,
									"name": "KECCAK256",
									"source": 12
								},
								{
									"begin": 935,
									"end": 937,
									"name": "PUSH",
									"source": 12,
									"value": "1F"
								},
								{
									"begin": 923,
									"end": 933,
									"name": "DUP6",
									"source": 12
								},
								{
									"begin": 919,
									"end": 938,
									"name": "ADD",
									"source": 12
								},
								{
									"begin": 916,
									"end": 917,
									"name": "PUSH",
									"source": 12,
									"value": "5"
								},
								{
									"begin": 912,
									"end": 939,
									"name": "SHR",
									"source": 12
								},
								{
									"begin": 906,
									"end": 910,
									"name": "DUP2",
									"source": 12
								},
								{
									"begin": 902,
									"end": 940,
									"name": "ADD",
									"source": 12
								},
								{
									"begin": 971,
									"end": 975,
									"name": "PUSH",
									"source": 12,
									"value": "20"
								},
								{
									"begin": 959,
									"end": 969,
									"name": "DUP7",
									"source": 12
								},
								{
									"begin": 956,
									"end": 976,
									"name": "LT",
									"source": 12
								},
								{
									"begin": 953,
									"end": 1000,
									"name": "ISZERO",
									"source": 12
								},
								{
									"begin": 953,
									"end": 1000,
									"name": "PUSH [tag]",
									"source": 12,
									"value": "23"
								},
								{
									"begin": 953,
									"end": 1000,
									"name": "JUMPI",
									"source": 12
								},
								{
									"begin": -1,
									"end": -1,
									"name": "POP",
									"source": -1
								},
								{
									"begin": 994,
									"end": 998,
									"name": "DUP1",
									"source": 12
								},
								{
									"begin": 953,
									"end": 1000,
									"name": "tag",
									"source": 12,
									"value": "23"
								},
								{
									"begin": 953,
									"end": 1000,
									"name": "JUMPDEST",
									"source": 12
								},
								{
									"begin": 1049,
									"end": 1051,
									"name": "PUSH",
									"source": 12,
									"value": "1F"
								},
								{
									"begin": 1044,
									"end": 1047,
									"name": "DUP6",
									"source": 12
								},
								{
									"begin": 1040,
									"end": 1052,
									"name": "ADD",
									"source": 12
								},
								{
									"begin": 1037,
									"end": 1038,
									"name": "PUSH",
									"source": 12,
									"value": "5"
								},
								{
									"begin": 1033,
									"end": 1053,
									"name": "SHR",
									"source": 12
								},
								{
									"begin": 1027,
									"end": 1031,
									"name": "DUP3",
									"source": 12
								},
								{
									"begin": 1023,
									"end": 1054,
									"name": "ADD",
									"source": 12
								},
								{
									"begin": 1013,
									"end": 1054,
									"name": "SWAP2",
									"source": 12
								},
								{
									"begin": 1013,
									"end": 1054,
									"name": "POP",
									"source": 12
								},
								{
									"begin": 1104,
									"end": 1186,
									"name": "tag",
									"source": 12,
									"value": "24"
								},
								{
									"begin": 1104,
									"end": 1186,
									"name": "JUMPDEST",
									"source": 12
								},
								{
									"begin": 1122,
									"end": 1124,
									"name": "DUP2",
									"source": 12
								},
								{
									"begin": 1115,
									"end": 1120,
									"name": "DUP2",
									"source": 12
								},
								{
									"begin": 1112,
									"end": 1125,
									"name": "LT",
									"source": 12
								},
								{
									"begin": 1104,
									"end": 1186,
									"name": "ISZERO",
									"source": 12
								},
								{
									"begin": 1104,
									"end": 1186,
									"name": "PUSH [tag]",
									"source": 12,
									"value": "26"
								},
								{
									"begin": 1104,
									"end": 1186,
									"name": "JUMPI",
									"source": 12
								},
								{
									"begin": 1167,
									"end": 1184,
									"name": "DUP3",
									"source": 12
								},
								{
									"begin": 1167,
									"end": 1184,
									"name": "DUP2",
									"source": 12
								},
								{
									"begin": 1167,
									"end": 1184,
									"name": "SSTORE",
									"source": 12
								},
								{
									"begin": 1148,
									"end": 1149,
									"name": "PUSH",
									"source": 12,
									"value": "1"
								},
								{
									"begin": 1137,
									"end": 1150,
									"name": "ADD",
									"source": 12
								},
								{
									"begin": 1104,
									"end": 1186,
									"name": "PUSH [tag]",
									"source": 12,
									"value": "24"
								},
								{
									"begin": 1104,
									"end": 1186,
									"name": "JUMP",
									"source": 12
								},
								{
									"begin": 1104,
									"end": 1186,
									"name": "tag",
									"source": 12,
									"value": "26"
								},
								{
									"begin": 1104,
									"end": 1186,
									"name": "JUMPDEST",
									"source": 12
								},
								{
									"begin": 1108,
									"end": 1111,
									"name": "POP",
									"source": 12
								},
								{
									"begin": 1108,
									"end": 1111,
									"name": "POP",
									"source": 12
								},
								{
									"begin": 1108,
									"end": 1111,
									"name": "POP",
									"source": 12
								},
								{
									"begin": 748,
									"end": 1196,
									"name": "tag",
									"source": 12,
									"value": "22"
								},
								{
									"begin": 748,
									"end": 1196,
									"name": "JUMPDEST",
									"source": 12
								},
								{
									"begin": 657,
									"end": 1202,
									"name": "POP",
									"source": 12
								},
								{
									"begin": 657,
									"end": 1202,
									"name": "POP",
									"source": 12
								},
								{
									"begin": 657,
									"end": 1202,
									"name": "POP",
									"source": 12
								},
								{
									"begin": 657,
									"end": 1202,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 12
								},
								{
									"begin": 1378,
									"end": 2730,
									"name": "tag",
									"source": 12,
									"value": "6"
								},
								{
									"begin": 1378,
									"end": 2730,
									"name": "JUMPDEST",
									"source": 12
								},
								{
									"begin": 1498,
									"end": 1508,
									"name": "DUP2",
									"source": 12
								},
								{
									"begin": 1498,
									"end": 1508,
									"name": "MLOAD",
									"source": 12
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "1"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "1"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "40"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SHL",
									"source": -1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SUB",
									"source": -1
								},
								{
									"begin": 1520,
									"end": 1550,
									"name": "DUP2",
									"source": 12
								},
								{
									"begin": 1520,
									"end": 1550,
									"name": "GT",
									"source": 12
								},
								{
									"begin": 1517,
									"end": 1573,
									"name": "ISZERO",
									"source": 12
								},
								{
									"begin": 1517,
									"end": 1573,
									"name": "PUSH [tag]",
									"source": 12,
									"value": "30"
								},
								{
									"begin": 1517,
									"end": 1573,
									"name": "JUMPI",
									"source": 12
								},
								{
									"begin": 1553,
									"end": 1571,
									"name": "PUSH [tag]",
									"source": 12,
									"value": "30"
								},
								{
									"begin": 1553,
									"end": 1571,
									"name": "PUSH [tag]",
									"source": 12,
									"value": "10"
								},
								{
									"begin": 1553,
									"end": 1571,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 12
								},
								{
									"begin": 1553,
									"end": 1571,
									"name": "tag",
									"source": 12,
									"value": "30"
								},
								{
									"begin": 1553,
									"end": 1571,
									"name": "JUMPDEST",
									"source": 12
								},
								{
									"begin": 1582,
									"end": 1679,
									"name": "PUSH [tag]",
									"source": 12,
									"value": "31"
								},
								{
									"begin": 1672,
									"end": 1678,
									"name": "DUP2",
									"source": 12
								},
								{
									"begin": 1632,
									"end": 1670,
									"name": "PUSH [tag]",
									"source": 12,
									"value": "32"
								},
								{
									"begin": 1664,
									"end": 1668,
									"name": "DUP5",
									"source": 12
								},
								{
									"begin": 1658,
									"end": 1669,
									"name": "SLOAD",
									"source": 12
								},
								{
									"begin": 1632,
									"end": 1670,
									"name": "PUSH [tag]",
									"source": 12,
									"value": "11"
								},
								{
									"begin": 1632,
									"end": 1670,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 12
								},
								{
									"begin": 1632,
									"end": 1670,
									"name": "tag",
									"source": 12,
									"value": "32"
								},
								{
									"begin": 1632,
									"end": 1670,
									"name": "JUMPDEST",
									"source": 12
								},
								{
									"begin": 1626,
									"end": 1630,
									"name": "DUP5",
									"source": 12
								},
								{
									"begin": 1582,
									"end": 1679,
									"name": "PUSH [tag]",
									"source": 12,
									"value": "13"
								},
								{
									"begin": 1582,
									"end": 1679,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 12
								},
								{
									"begin": 1582,
									"end": 1679,
									"name": "tag",
									"source": 12,
									"value": "31"
								},
								{
									"begin": 1582,
									"end": 1679,
									"name": "JUMPDEST",
									"source": 12
								},
								{
									"begin": 1734,
									"end": 1738,
									"name": "PUSH",
									"source": 12,
									"value": "20"
								},
								{
									"begin": 1734,
									"end": 1738,
									"name": "DUP1",
									"source": 12
								},
								{
									"begin": 1798,
									"end": 1800,
									"name": "PUSH",
									"source": 12,
									"value": "1F"
								},
								{
									"begin": 1787,
									"end": 1801,
									"name": "DUP4",
									"source": 12
								},
								{
									"begin": 1787,
									"end": 1801,
									"name": "GT",
									"source": 12
								},
								{
									"begin": 1815,
									"end": 1816,
									"name": "PUSH",
									"source": 12,
									"value": "1"
								},
								{
									"begin": 1810,
									"end": 2473,
									"name": "DUP2",
									"source": 12
								},
								{
									"begin": 1810,
									"end": 2473,
									"name": "EQ",
									"source": 12
								},
								{
									"begin": 1810,
									"end": 2473,
									"name": "PUSH [tag]",
									"source": 12,
									"value": "34"
								},
								{
									"begin": 1810,
									"end": 2473,
									"name": "JUMPI",
									"source": 12
								},
								{
									"begin": 2517,
									"end": 2518,
									"name": "PUSH",
									"source": 12,
									"value": "0"
								},
								{
									"begin": 2534,
									"end": 2540,
									"name": "DUP5",
									"source": 12
								},
								{
									"begin": 2531,
									"end": 2620,
									"name": "ISZERO",
									"source": 12
								},
								{
									"begin": 2531,
									"end": 2620,
									"name": "PUSH [tag]",
									"source": 12,
									"value": "35"
								},
								{
									"begin": 2531,
									"end": 2620,
									"name": "JUMPI",
									"source": 12
								},
								{
									"begin": -1,
									"end": -1,
									"name": "POP",
									"source": -1
								},
								{
									"begin": 2586,
									"end": 2605,
									"name": "DUP6",
									"source": 12
								},
								{
									"begin": 2586,
									"end": 2605,
									"name": "DUP4",
									"source": 12
								},
								{
									"begin": 2586,
									"end": 2605,
									"name": "ADD",
									"source": 12
								},
								{
									"begin": 2580,
									"end": 2606,
									"name": "MLOAD",
									"source": 12
								},
								{
									"begin": 2531,
									"end": 2620,
									"name": "tag",
									"source": 12,
									"value": "35"
								},
								{
									"begin": 2531,
									"end": 2620,
									"name": "JUMPDEST",
									"source": 12
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "0"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "NOT",
									"source": -1
								},
								{
									"begin": 1335,
									"end": 1336,
									"name": "PUSH",
									"source": 12,
									"value": "3"
								},
								{
									"begin": 1331,
									"end": 1342,
									"name": "DUP7",
									"source": 12
								},
								{
									"begin": 1331,
									"end": 1342,
									"name": "SWAP1",
									"source": 12
								},
								{
									"begin": 1331,
									"end": 1342,
									"name": "SHL",
									"source": 12
								},
								{
									"begin": 1327,
									"end": 1351,
									"name": "SHR",
									"source": 12
								},
								{
									"begin": 1323,
									"end": 1352,
									"name": "NOT",
									"source": 12
								},
								{
									"begin": 1313,
									"end": 1353,
									"name": "AND",
									"source": 12
								},
								{
									"begin": 1359,
									"end": 1360,
									"name": "PUSH",
									"source": 12,
									"value": "1"
								},
								{
									"begin": 1355,
									"end": 1366,
									"name": "DUP6",
									"source": 12
								},
								{
									"begin": 1355,
									"end": 1366,
									"name": "SWAP1",
									"source": 12
								},
								{
									"begin": 1355,
									"end": 1366,
									"name": "SHL",
									"source": 12
								},
								{
									"begin": 1310,
									"end": 1367,
									"name": "OR",
									"source": 12
								},
								{
									"begin": 2633,
									"end": 2714,
									"name": "DUP6",
									"source": 12
								},
								{
									"begin": 2633,
									"end": 2714,
									"name": "SSTORE",
									"source": 12
								},
								{
									"begin": 1780,
									"end": 2724,
									"name": "PUSH [tag]",
									"source": 12,
									"value": "26"
								},
								{
									"begin": 1780,
									"end": 2724,
									"name": "JUMP",
									"source": 12
								},
								{
									"begin": 1810,
									"end": 2473,
									"name": "tag",
									"source": 12,
									"value": "34"
								},
								{
									"begin": 1810,
									"end": 2473,
									"name": "JUMPDEST",
									"source": 12
								},
								{
									"begin": 604,
									"end": 605,
									"name": "PUSH",
									"source": 12,
									"value": "0"
								},
								{
									"begin": 597,
									"end": 611,
									"name": "DUP6",
									"source": 12
								},
								{
									"begin": 597,
									"end": 611,
									"name": "DUP2",
									"source": 12
								},
								{
									"begin": 597,
									"end": 611,
									"name": "MSTORE",
									"source": 12
								},
								{
									"begin": 641,
									"end": 645,
									"name": "PUSH",
									"source": 12,
									"value": "20"
								},
								{
									"begin": 628,
									"end": 646,
									"name": "DUP2",
									"source": 12
								},
								{
									"begin": 628,
									"end": 646,
									"name": "KECCAK256",
									"source": 12
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "1F"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "NOT",
									"source": -1
								},
								{
									"begin": 1846,
									"end": 1866,
									"name": "DUP7",
									"source": 12
								},
								{
									"begin": 1846,
									"end": 1866,
									"name": "AND",
									"source": 12
								},
								{
									"begin": 1846,
									"end": 1866,
									"name": "SWAP2",
									"source": 12
								},
								{
									"begin": 1964,
									"end": 2200,
									"name": "tag",
									"source": 12,
									"value": "38"
								},
								{
									"begin": 1964,
									"end": 2200,
									"name": "JUMPDEST",
									"source": 12
								},
								{
									"begin": 1978,
									"end": 1985,
									"name": "DUP3",
									"source": 12
								},
								{
									"begin": 1975,
									"end": 1976,
									"name": "DUP2",
									"source": 12
								},
								{
									"begin": 1972,
									"end": 1986,
									"name": "LT",
									"source": 12
								},
								{
									"begin": 1964,
									"end": 2200,
									"name": "ISZERO",
									"source": 12
								},
								{
									"begin": 1964,
									"end": 2200,
									"name": "PUSH [tag]",
									"source": 12,
									"value": "40"
								},
								{
									"begin": 1964,
									"end": 2200,
									"name": "JUMPI",
									"source": 12
								},
								{
									"begin": 2067,
									"end": 2086,
									"name": "DUP9",
									"source": 12
								},
								{
									"begin": 2067,
									"end": 2086,
									"name": "DUP7",
									"source": 12
								},
								{
									"begin": 2067,
									"end": 2086,
									"name": "ADD",
									"source": 12
								},
								{
									"begin": 2061,
									"end": 2087,
									"name": "MLOAD",
									"source": 12
								},
								{
									"begin": 2046,
									"end": 2088,
									"name": "DUP3",
									"source": 12
								},
								{
									"begin": 2046,
									"end": 2088,
									"name": "SSTORE",
									"source": 12
								},
								{
									"begin": 2159,
									"end": 2186,
									"name": "SWAP5",
									"source": 12
								},
								{
									"begin": 2159,
									"end": 2186,
									"name": "DUP5",
									"source": 12
								},
								{
									"begin": 2159,
									"end": 2186,
									"name": "ADD",
									"source": 12
								},
								{
									"begin": 2159,
									"end": 2186,
									"name": "SWAP5",
									"source": 12
								},
								{
									"begin": 2127,
									"end": 2128,
									"name": "PUSH",
									"source": 12,
									"value": "1"
								},
								{
									"begin": 2115,
									"end": 2129,
									"name": "SWAP1",
									"source": 12
								},
								{
									"begin": 2115,
									"end": 2129,
									"name": "SWAP2",
									"source": 12
								},
								{
									"begin": 2115,
									"end": 2129,
									"name": "ADD",
									"source": 12
								},
								{
									"begin": 2115,
									"end": 2129,
									"name": "SWAP1",
									"source": 12
								},
								{
									"begin": 1994,
									"end": 2013,
									"name": "DUP5",
									"source": 12
								},
								{
									"begin": 1994,
									"end": 2013,
									"name": "ADD",
									"source": 12
								},
								{
									"begin": 1964,
									"end": 2200,
									"name": "PUSH [tag]",
									"source": 12,
									"value": "38"
								},
								{
									"begin": 1964,
									"end": 2200,
									"name": "JUMP",
									"source": 12
								},
								{
									"begin": 1964,
									"end": 2200,
									"name": "tag",
									"source": 12,
									"value": "40"
								},
								{
									"begin": 1964,
									"end": 2200,
									"name": "JUMPDEST",
									"source": 12
								},
								{
									"begin": 1968,
									"end": 1971,
									"name": "POP",
									"source": 12
								},
								{
									"begin": 2228,
									"end": 2234,
									"name": "DUP6",
									"source": 12
								},
								{
									"begin": 2219,
									"end": 2226,
									"name": "DUP3",
									"source": 12
								},
								{
									"begin": 2216,
									"end": 2235,
									"name": "LT",
									"source": 12
								},
								{
									"begin": 2213,
									"end": 2414,
									"name": "ISZERO",
									"source": 12
								},
								{
									"begin": 2213,
									"end": 2414,
									"name": "PUSH [tag]",
									"source": 12,
									"value": "41"
								},
								{
									"begin": 2213,
									"end": 2414,
									"name": "JUMPI",
									"source": 12
								},
								{
									"begin": 2289,
									"end": 2308,
									"name": "DUP8",
									"source": 12
								},
								{
									"begin": 2289,
									"end": 2308,
									"name": "DUP6",
									"source": 12
								},
								{
									"begin": 2289,
									"end": 2308,
									"name": "ADD",
									"source": 12
								},
								{
									"begin": 2283,
									"end": 2309,
									"name": "MLOAD",
									"source": 12
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "0"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "NOT",
									"source": -1
								},
								{
									"begin": 2372,
									"end": 2373,
									"name": "PUSH",
									"source": 12,
									"value": "3"
								},
								{
									"begin": 2368,
									"end": 2382,
									"name": "DUP9",
									"source": 12
								},
								{
									"begin": 2368,
									"end": 2382,
									"name": "SWAP1",
									"source": 12
								},
								{
									"begin": 2368,
									"end": 2382,
									"name": "SHL",
									"source": 12
								},
								{
									"begin": 2384,
									"end": 2387,
									"name": "PUSH",
									"source": 12,
									"value": "F8"
								},
								{
									"begin": 2364,
									"end": 2388,
									"name": "AND",
									"source": 12
								},
								{
									"begin": 2360,
									"end": 2397,
									"name": "SHR",
									"source": 12
								},
								{
									"begin": 2356,
									"end": 2398,
									"name": "NOT",
									"source": 12
								},
								{
									"begin": 2341,
									"end": 2399,
									"name": "AND",
									"source": 12
								},
								{
									"begin": 2326,
									"end": 2400,
									"name": "DUP2",
									"source": 12
								},
								{
									"begin": 2326,
									"end": 2400,
									"name": "SSTORE",
									"source": 12
								},
								{
									"begin": 2213,
									"end": 2414,
									"name": "tag",
									"source": 12,
									"value": "41"
								},
								{
									"begin": 2213,
									"end": 2414,
									"name": "JUMPDEST",
									"source": 12
								},
								{
									"begin": -1,
									"end": -1,
									"name": "POP",
									"source": -1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "POP",
									"source": -1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "POP",
									"source": -1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "POP",
									"source": -1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "POP",
									"source": -1
								},
								{
									"begin": 2460,
									"end": 2461,
									"name": "PUSH",
									"source": 12,
									"value": "1"
								},
								{
									"begin": 2444,
									"end": 2458,
									"name": "SWAP1",
									"source": 12
								},
								{
									"begin": 2444,
									"end": 2458,
									"name": "DUP2",
									"source": 12
								},
								{
									"begin": 2444,
									"end": 2458,
									"name": "SHL",
									"source": 12
								},
								{
									"begin": 2440,
									"end": 2462,
									"name": "ADD",
									"source": 12
								},
								{
									"begin": 2427,
									"end": 2463,
									"name": "SWAP1",
									"source": 12
								},
								{
									"begin": 2427,
									"end": 2463,
									"name": "SSTORE",
									"source": 12
								},
								{
									"begin": -1,
									"end": -1,
									"name": "POP",
									"source": -1
								},
								{
									"begin": 1378,
									"end": 2730,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 12
								},
								{
									"begin": 1378,
									"end": 2730,
									"name": "tag",
									"source": 12,
									"value": "15"
								},
								{
									"begin": 1378,
									"end": 2730,
									"name": "JUMPDEST",
									"source": 12
								},
								{
									"begin": 169,
									"end": 506,
									"name": "PUSH #[$]",
									"source": 11,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 169,
									"end": 506,
									"name": "DUP1",
									"source": 11
								},
								{
									"begin": 169,
									"end": 506,
									"name": "PUSH [$]",
									"source": 11,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 169,
									"end": 506,
									"name": "PUSH",
									"source": 11,
									"value": "0"
								},
								{
									"begin": 169,
									"end": 506,
									"name": "CODECOPY",
									"source": 11
								},
								{
									"begin": 169,
									"end": 506,
									"name": "PUSH",
									"source": 11,
									"value": "0"
								},
								{
									"begin": 169,
									"end": 506,
									"name": "RETURN",
									"source": 11
								}
							],
							".data": {
								"0": {
									".auxdata": "a2646970667358221220bd25f036120a0eb18ca2aa079e080161b5a8416abc94a75dde62dca155667f6c64736f6c63430008150033",
									".code": [
										{
											"begin": 169,
											"end": 506,
											"name": "PUSH",
											"source": 11,
											"value": "80"
										},
										{
											"begin": 169,
											"end": 506,
											"name": "PUSH",
											"source": 11,
											"value": "40"
										},
										{
											"begin": 169,
											"end": 506,
											"name": "MSTORE",
											"source": 11
										},
										{
											"begin": 169,
											"end": 506,
											"name": "CALLVALUE",
											"source": 11
										},
										{
											"begin": 169,
											"end": 506,
											"name": "DUP1",
											"source": 11
										},
										{
											"begin": 169,
											"end": 506,
											"name": "ISZERO",
											"source": 11
										},
										{
											"begin": 169,
											"end": 506,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "1"
										},
										{
											"begin": 169,
											"end": 506,
											"name": "JUMPI",
											"source": 11
										},
										{
											"begin": 169,
											"end": 506,
											"name": "PUSH",
											"source": 11,
											"value": "0"
										},
										{
											"begin": 169,
											"end": 506,
											"name": "DUP1",
											"source": 11
										},
										{
											"begin": 169,
											"end": 506,
											"name": "REVERT",
											"source": 11
										},
										{
											"begin": 169,
											"end": 506,
											"name": "tag",
											"source": 11,
											"value": "1"
										},
										{
											"begin": 169,
											"end": 506,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 169,
											"end": 506,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 169,
											"end": 506,
											"name": "PUSH",
											"source": 11,
											"value": "4"
										},
										{
											"begin": 169,
											"end": 506,
											"name": "CALLDATASIZE",
											"source": 11
										},
										{
											"begin": 169,
											"end": 506,
											"name": "LT",
											"source": 11
										},
										{
											"begin": 169,
											"end": 506,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "2"
										},
										{
											"begin": 169,
											"end": 506,
											"name": "JUMPI",
											"source": 11
										},
										{
											"begin": 169,
											"end": 506,
											"name": "PUSH",
											"source": 11,
											"value": "0"
										},
										{
											"begin": 169,
											"end": 506,
											"name": "CALLDATALOAD",
											"source": 11
										},
										{
											"begin": 169,
											"end": 506,
											"name": "PUSH",
											"source": 11,
											"value": "E0"
										},
										{
											"begin": 169,
											"end": 506,
											"name": "SHR",
											"source": 11
										},
										{
											"begin": 169,
											"end": 506,
											"name": "DUP1",
											"source": 11
										},
										{
											"begin": 169,
											"end": 506,
											"name": "PUSH",
											"source": 11,
											"value": "6352211E"
										},
										{
											"begin": 169,
											"end": 506,
											"name": "GT",
											"source": 11
										},
										{
											"begin": 169,
											"end": 506,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "17"
										},
										{
											"begin": 169,
											"end": 506,
											"name": "JUMPI",
											"source": 11
										},
										{
											"begin": 169,
											"end": 506,
											"name": "DUP1",
											"source": 11
										},
										{
											"begin": 169,
											"end": 506,
											"name": "PUSH",
											"source": 11,
											"value": "A22CB465"
										},
										{
											"begin": 169,
											"end": 506,
											"name": "GT",
											"source": 11
										},
										{
											"begin": 169,
											"end": 506,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "18"
										},
										{
											"begin": 169,
											"end": 506,
											"name": "JUMPI",
											"source": 11
										},
										{
											"begin": 169,
											"end": 506,
											"name": "DUP1",
											"source": 11
										},
										{
											"begin": 169,
											"end": 506,
											"name": "PUSH",
											"source": 11,
											"value": "A22CB465"
										},
										{
											"begin": 169,
											"end": 506,
											"name": "EQ",
											"source": 11
										},
										{
											"begin": 169,
											"end": 506,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "13"
										},
										{
											"begin": 169,
											"end": 506,
											"name": "JUMPI",
											"source": 11
										},
										{
											"begin": 169,
											"end": 506,
											"name": "DUP1",
											"source": 11
										},
										{
											"begin": 169,
											"end": 506,
											"name": "PUSH",
											"source": 11,
											"value": "B88D4FDE"
										},
										{
											"begin": 169,
											"end": 506,
											"name": "EQ",
											"source": 11
										},
										{
											"begin": 169,
											"end": 506,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "14"
										},
										{
											"begin": 169,
											"end": 506,
											"name": "JUMPI",
											"source": 11
										},
										{
											"begin": 169,
											"end": 506,
											"name": "DUP1",
											"source": 11
										},
										{
											"begin": 169,
											"end": 506,
											"name": "PUSH",
											"source": 11,
											"value": "C87B56DD"
										},
										{
											"begin": 169,
											"end": 506,
											"name": "EQ",
											"source": 11
										},
										{
											"begin": 169,
											"end": 506,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "15"
										},
										{
											"begin": 169,
											"end": 506,
											"name": "JUMPI",
											"source": 11
										},
										{
											"begin": 169,
											"end": 506,
											"name": "DUP1",
											"source": 11
										},
										{
											"begin": 169,
											"end": 506,
											"name": "PUSH",
											"source": 11,
											"value": "E985E9C5"
										},
										{
											"begin": 169,
											"end": 506,
											"name": "EQ",
											"source": 11
										},
										{
											"begin": 169,
											"end": 506,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "16"
										},
										{
											"begin": 169,
											"end": 506,
											"name": "JUMPI",
											"source": 11
										},
										{
											"begin": 169,
											"end": 506,
											"name": "PUSH",
											"source": 11,
											"value": "0"
										},
										{
											"begin": 169,
											"end": 506,
											"name": "DUP1",
											"source": 11
										},
										{
											"begin": 169,
											"end": 506,
											"name": "REVERT",
											"source": 11
										},
										{
											"begin": 169,
											"end": 506,
											"name": "tag",
											"source": 11,
											"value": "18"
										},
										{
											"begin": 169,
											"end": 506,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 169,
											"end": 506,
											"name": "DUP1",
											"source": 11
										},
										{
											"begin": 169,
											"end": 506,
											"name": "PUSH",
											"source": 11,
											"value": "6352211E"
										},
										{
											"begin": 169,
											"end": 506,
											"name": "EQ",
											"source": 11
										},
										{
											"begin": 169,
											"end": 506,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "10"
										},
										{
											"begin": 169,
											"end": 506,
											"name": "JUMPI",
											"source": 11
										},
										{
											"begin": 169,
											"end": 506,
											"name": "DUP1",
											"source": 11
										},
										{
											"begin": 169,
											"end": 506,
											"name": "PUSH",
											"source": 11,
											"value": "70A08231"
										},
										{
											"begin": 169,
											"end": 506,
											"name": "EQ",
											"source": 11
										},
										{
											"begin": 169,
											"end": 506,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "11"
										},
										{
											"begin": 169,
											"end": 506,
											"name": "JUMPI",
											"source": 11
										},
										{
											"begin": 169,
											"end": 506,
											"name": "DUP1",
											"source": 11
										},
										{
											"begin": 169,
											"end": 506,
											"name": "PUSH",
											"source": 11,
											"value": "95D89B41"
										},
										{
											"begin": 169,
											"end": 506,
											"name": "EQ",
											"source": 11
										},
										{
											"begin": 169,
											"end": 506,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "12"
										},
										{
											"begin": 169,
											"end": 506,
											"name": "JUMPI",
											"source": 11
										},
										{
											"begin": 169,
											"end": 506,
											"name": "PUSH",
											"source": 11,
											"value": "0"
										},
										{
											"begin": 169,
											"end": 506,
											"name": "DUP1",
											"source": 11
										},
										{
											"begin": 169,
											"end": 506,
											"name": "REVERT",
											"source": 11
										},
										{
											"begin": 169,
											"end": 506,
											"name": "tag",
											"source": 11,
											"value": "17"
										},
										{
											"begin": 169,
											"end": 506,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 169,
											"end": 506,
											"name": "DUP1",
											"source": 11
										},
										{
											"begin": 169,
											"end": 506,
											"name": "PUSH",
											"source": 11,
											"value": "95EA7B3"
										},
										{
											"begin": 169,
											"end": 506,
											"name": "GT",
											"source": 11
										},
										{
											"begin": 169,
											"end": 506,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "19"
										},
										{
											"begin": 169,
											"end": 506,
											"name": "JUMPI",
											"source": 11
										},
										{
											"begin": 169,
											"end": 506,
											"name": "DUP1",
											"source": 11
										},
										{
											"begin": 169,
											"end": 506,
											"name": "PUSH",
											"source": 11,
											"value": "95EA7B3"
										},
										{
											"begin": 169,
											"end": 506,
											"name": "EQ",
											"source": 11
										},
										{
											"begin": 169,
											"end": 506,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "6"
										},
										{
											"begin": 169,
											"end": 506,
											"name": "JUMPI",
											"source": 11
										},
										{
											"begin": 169,
											"end": 506,
											"name": "DUP1",
											"source": 11
										},
										{
											"begin": 169,
											"end": 506,
											"name": "PUSH",
											"source": 11,
											"value": "23B872DD"
										},
										{
											"begin": 169,
											"end": 506,
											"name": "EQ",
											"source": 11
										},
										{
											"begin": 169,
											"end": 506,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "7"
										},
										{
											"begin": 169,
											"end": 506,
											"name": "JUMPI",
											"source": 11
										},
										{
											"begin": 169,
											"end": 506,
											"name": "DUP1",
											"source": 11
										},
										{
											"begin": 169,
											"end": 506,
											"name": "PUSH",
											"source": 11,
											"value": "40D097C3"
										},
										{
											"begin": 169,
											"end": 506,
											"name": "EQ",
											"source": 11
										},
										{
											"begin": 169,
											"end": 506,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "8"
										},
										{
											"begin": 169,
											"end": 506,
											"name": "JUMPI",
											"source": 11
										},
										{
											"begin": 169,
											"end": 506,
											"name": "DUP1",
											"source": 11
										},
										{
											"begin": 169,
											"end": 506,
											"name": "PUSH",
											"source": 11,
											"value": "42842E0E"
										},
										{
											"begin": 169,
											"end": 506,
											"name": "EQ",
											"source": 11
										},
										{
											"begin": 169,
											"end": 506,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "9"
										},
										{
											"begin": 169,
											"end": 506,
											"name": "JUMPI",
											"source": 11
										},
										{
											"begin": 169,
											"end": 506,
											"name": "PUSH",
											"source": 11,
											"value": "0"
										},
										{
											"begin": 169,
											"end": 506,
											"name": "DUP1",
											"source": 11
										},
										{
											"begin": 169,
											"end": 506,
											"name": "REVERT",
											"source": 11
										},
										{
											"begin": 169,
											"end": 506,
											"name": "tag",
											"source": 11,
											"value": "19"
										},
										{
											"begin": 169,
											"end": 506,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 169,
											"end": 506,
											"name": "DUP1",
											"source": 11
										},
										{
											"begin": 169,
											"end": 506,
											"name": "PUSH",
											"source": 11,
											"value": "1FFC9A7"
										},
										{
											"begin": 169,
											"end": 506,
											"name": "EQ",
											"source": 11
										},
										{
											"begin": 169,
											"end": 506,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "3"
										},
										{
											"begin": 169,
											"end": 506,
											"name": "JUMPI",
											"source": 11
										},
										{
											"begin": 169,
											"end": 506,
											"name": "DUP1",
											"source": 11
										},
										{
											"begin": 169,
											"end": 506,
											"name": "PUSH",
											"source": 11,
											"value": "6FDDE03"
										},
										{
											"begin": 169,
											"end": 506,
											"name": "EQ",
											"source": 11
										},
										{
											"begin": 169,
											"end": 506,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "4"
										},
										{
											"begin": 169,
											"end": 506,
											"name": "JUMPI",
											"source": 11
										},
										{
											"begin": 169,
											"end": 506,
											"name": "DUP1",
											"source": 11
										},
										{
											"begin": 169,
											"end": 506,
											"name": "PUSH",
											"source": 11,
											"value": "81812FC"
										},
										{
											"begin": 169,
											"end": 506,
											"name": "EQ",
											"source": 11
										},
										{
											"begin": 169,
											"end": 506,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "5"
										},
										{
											"begin": 169,
											"end": 506,
											"name": "JUMPI",
											"source": 11
										},
										{
											"begin": 169,
											"end": 506,
											"name": "tag",
											"source": 11,
											"value": "2"
										},
										{
											"begin": 169,
											"end": 506,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 169,
											"end": 506,
											"name": "PUSH",
											"source": 11,
											"value": "0"
										},
										{
											"begin": 169,
											"end": 506,
											"name": "DUP1",
											"source": 11
										},
										{
											"begin": 169,
											"end": 506,
											"name": "REVERT",
											"source": 11
										},
										{
											"begin": 1570,
											"end": 1870,
											"name": "tag",
											"source": 0,
											"value": "3"
										},
										{
											"begin": 1570,
											"end": 1870,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1570,
											"end": 1870,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 1570,
											"end": 1870,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "21"
										},
										{
											"begin": 1570,
											"end": 1870,
											"name": "CALLDATASIZE",
											"source": 0
										},
										{
											"begin": 1570,
											"end": 1870,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 1570,
											"end": 1870,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "22"
										},
										{
											"begin": 1570,
											"end": 1870,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 1570,
											"end": 1870,
											"name": "tag",
											"source": 0,
											"value": "21"
										},
										{
											"begin": 1570,
											"end": 1870,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1570,
											"end": 1870,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "23"
										},
										{
											"begin": 1570,
											"end": 1870,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 1570,
											"end": 1870,
											"name": "tag",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 1570,
											"end": 1870,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1570,
											"end": 1870,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 1570,
											"end": 1870,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 565,
											"end": 579,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 565,
											"end": 579,
											"name": "ISZERO",
											"source": 12
										},
										{
											"begin": 558,
											"end": 580,
											"name": "ISZERO",
											"source": 12
										},
										{
											"begin": 540,
											"end": 581,
											"name": "DUP2",
											"source": 12
										},
										{
											"begin": 540,
											"end": 581,
											"name": "MSTORE",
											"source": 12
										},
										{
											"begin": 528,
											"end": 530,
											"name": "PUSH",
											"source": 12,
											"value": "20"
										},
										{
											"begin": 513,
											"end": 531,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 1570,
											"end": 1870,
											"name": "tag",
											"source": 0,
											"value": "24"
										},
										{
											"begin": 1570,
											"end": 1870,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1570,
											"end": 1870,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 1570,
											"end": 1870,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 1570,
											"end": 1870,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 1570,
											"end": 1870,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 1570,
											"end": 1870,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 1570,
											"end": 1870,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 1570,
											"end": 1870,
											"name": "RETURN",
											"source": 0
										},
										{
											"begin": 2471,
											"end": 2569,
											"name": "tag",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 2471,
											"end": 2569,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2471,
											"end": 2569,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "26"
										},
										{
											"begin": 2471,
											"end": 2569,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "27"
										},
										{
											"begin": 2471,
											"end": 2569,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 2471,
											"end": 2569,
											"name": "tag",
											"source": 0,
											"value": "26"
										},
										{
											"begin": 2471,
											"end": 2569,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2471,
											"end": 2569,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 2471,
											"end": 2569,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 2471,
											"end": 2569,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "24"
										},
										{
											"begin": 2471,
											"end": 2569,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 2471,
											"end": 2569,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 2471,
											"end": 2569,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "29"
										},
										{
											"begin": 2471,
											"end": 2569,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 3935,
											"end": 4102,
											"name": "tag",
											"source": 0,
											"value": "5"
										},
										{
											"begin": 3935,
											"end": 4102,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 3935,
											"end": 4102,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "30"
										},
										{
											"begin": 3935,
											"end": 4102,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "31"
										},
										{
											"begin": 3935,
											"end": 4102,
											"name": "CALLDATASIZE",
											"source": 0
										},
										{
											"begin": 3935,
											"end": 4102,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 3935,
											"end": 4102,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "32"
										},
										{
											"begin": 3935,
											"end": 4102,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 3935,
											"end": 4102,
											"name": "tag",
											"source": 0,
											"value": "31"
										},
										{
											"begin": 3935,
											"end": 4102,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 3935,
											"end": 4102,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "33"
										},
										{
											"begin": 3935,
											"end": 4102,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 3935,
											"end": 4102,
											"name": "tag",
											"source": 0,
											"value": "30"
										},
										{
											"begin": 3935,
											"end": 4102,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 3935,
											"end": 4102,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 3935,
											"end": 4102,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 1697,
											"end": 1729,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 1697,
											"end": 1729,
											"name": "SWAP2",
											"source": 12
										},
										{
											"begin": 1697,
											"end": 1729,
											"name": "AND",
											"source": 12
										},
										{
											"begin": 1679,
											"end": 1730,
											"name": "DUP2",
											"source": 12
										},
										{
											"begin": 1679,
											"end": 1730,
											"name": "MSTORE",
											"source": 12
										},
										{
											"begin": 1667,
											"end": 1669,
											"name": "PUSH",
											"source": 12,
											"value": "20"
										},
										{
											"begin": 1652,
											"end": 1670,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 3935,
											"end": 4102,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "24"
										},
										{
											"begin": 1533,
											"end": 1736,
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 3468,
											"end": 3874,
											"name": "tag",
											"source": 0,
											"value": "6"
										},
										{
											"begin": 3468,
											"end": 3874,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 3468,
											"end": 3874,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "36"
										},
										{
											"begin": 3468,
											"end": 3874,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "37"
										},
										{
											"begin": 3468,
											"end": 3874,
											"name": "CALLDATASIZE",
											"source": 0
										},
										{
											"begin": 3468,
											"end": 3874,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 3468,
											"end": 3874,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "38"
										},
										{
											"begin": 3468,
											"end": 3874,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 3468,
											"end": 3874,
											"name": "tag",
											"source": 0,
											"value": "37"
										},
										{
											"begin": 3468,
											"end": 3874,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 3468,
											"end": 3874,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "39"
										},
										{
											"begin": 3468,
											"end": 3874,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 3468,
											"end": 3874,
											"name": "tag",
											"source": 0,
											"value": "36"
										},
										{
											"begin": 3468,
											"end": 3874,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 3468,
											"end": 3874,
											"name": "STOP",
											"source": 0
										},
										{
											"begin": 4612,
											"end": 4938,
											"name": "tag",
											"source": 0,
											"value": "7"
										},
										{
											"begin": 4612,
											"end": 4938,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 4612,
											"end": 4938,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "36"
										},
										{
											"begin": 4612,
											"end": 4938,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "41"
										},
										{
											"begin": 4612,
											"end": 4938,
											"name": "CALLDATASIZE",
											"source": 0
										},
										{
											"begin": 4612,
											"end": 4938,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 4612,
											"end": 4938,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "42"
										},
										{
											"begin": 4612,
											"end": 4938,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 4612,
											"end": 4938,
											"name": "tag",
											"source": 0,
											"value": "41"
										},
										{
											"begin": 4612,
											"end": 4938,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 4612,
											"end": 4938,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "43"
										},
										{
											"begin": 4612,
											"end": 4938,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 338,
											"end": 504,
											"name": "tag",
											"source": 11,
											"value": "8"
										},
										{
											"begin": 338,
											"end": 504,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 338,
											"end": 504,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "36"
										},
										{
											"begin": 338,
											"end": 504,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "45"
										},
										{
											"begin": 338,
											"end": 504,
											"name": "CALLDATASIZE",
											"source": 11
										},
										{
											"begin": 338,
											"end": 504,
											"name": "PUSH",
											"source": 11,
											"value": "4"
										},
										{
											"begin": 338,
											"end": 504,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "46"
										},
										{
											"begin": 338,
											"end": 504,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 338,
											"end": 504,
											"name": "tag",
											"source": 11,
											"value": "45"
										},
										{
											"begin": 338,
											"end": 504,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 338,
											"end": 504,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "47"
										},
										{
											"begin": 338,
											"end": 504,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 5004,
											"end": 5183,
											"name": "tag",
											"source": 0,
											"value": "9"
										},
										{
											"begin": 5004,
											"end": 5183,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 5004,
											"end": 5183,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "36"
										},
										{
											"begin": 5004,
											"end": 5183,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "49"
										},
										{
											"begin": 5004,
											"end": 5183,
											"name": "CALLDATASIZE",
											"source": 0
										},
										{
											"begin": 5004,
											"end": 5183,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 5004,
											"end": 5183,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "42"
										},
										{
											"begin": 5004,
											"end": 5183,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 5004,
											"end": 5183,
											"name": "tag",
											"source": 0,
											"value": "49"
										},
										{
											"begin": 5004,
											"end": 5183,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 5004,
											"end": 5183,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "50"
										},
										{
											"begin": 5004,
											"end": 5183,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 2190,
											"end": 2409,
											"name": "tag",
											"source": 0,
											"value": "10"
										},
										{
											"begin": 2190,
											"end": 2409,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2190,
											"end": 2409,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "30"
										},
										{
											"begin": 2190,
											"end": 2409,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "52"
										},
										{
											"begin": 2190,
											"end": 2409,
											"name": "CALLDATASIZE",
											"source": 0
										},
										{
											"begin": 2190,
											"end": 2409,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 2190,
											"end": 2409,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "32"
										},
										{
											"begin": 2190,
											"end": 2409,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 2190,
											"end": 2409,
											"name": "tag",
											"source": 0,
											"value": "52"
										},
										{
											"begin": 2190,
											"end": 2409,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2190,
											"end": 2409,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "53"
										},
										{
											"begin": 2190,
											"end": 2409,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 1929,
											"end": 2133,
											"name": "tag",
											"source": 0,
											"value": "11"
										},
										{
											"begin": 1929,
											"end": 2133,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1929,
											"end": 2133,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "55"
										},
										{
											"begin": 1929,
											"end": 2133,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "56"
										},
										{
											"begin": 1929,
											"end": 2133,
											"name": "CALLDATASIZE",
											"source": 0
										},
										{
											"begin": 1929,
											"end": 2133,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 1929,
											"end": 2133,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "46"
										},
										{
											"begin": 1929,
											"end": 2133,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 1929,
											"end": 2133,
											"name": "tag",
											"source": 0,
											"value": "56"
										},
										{
											"begin": 1929,
											"end": 2133,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1929,
											"end": 2133,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "57"
										},
										{
											"begin": 1929,
											"end": 2133,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 1929,
											"end": 2133,
											"name": "tag",
											"source": 0,
											"value": "55"
										},
										{
											"begin": 1929,
											"end": 2133,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1929,
											"end": 2133,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 1929,
											"end": 2133,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 2848,
											"end": 2873,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 2848,
											"end": 2873,
											"name": "DUP2",
											"source": 12
										},
										{
											"begin": 2848,
											"end": 2873,
											"name": "MSTORE",
											"source": 12
										},
										{
											"begin": 2836,
											"end": 2838,
											"name": "PUSH",
											"source": 12,
											"value": "20"
										},
										{
											"begin": 2821,
											"end": 2839,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 1929,
											"end": 2133,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "24"
										},
										{
											"begin": 2702,
											"end": 2879,
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 2633,
											"end": 2735,
											"name": "tag",
											"source": 0,
											"value": "12"
										},
										{
											"begin": 2633,
											"end": 2735,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2633,
											"end": 2735,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "26"
										},
										{
											"begin": 2633,
											"end": 2735,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "61"
										},
										{
											"begin": 2633,
											"end": 2735,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 4169,
											"end": 4322,
											"name": "tag",
											"source": 0,
											"value": "13"
										},
										{
											"begin": 4169,
											"end": 4322,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 4169,
											"end": 4322,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "36"
										},
										{
											"begin": 4169,
											"end": 4322,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "64"
										},
										{
											"begin": 4169,
											"end": 4322,
											"name": "CALLDATASIZE",
											"source": 0
										},
										{
											"begin": 4169,
											"end": 4322,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 4169,
											"end": 4322,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "65"
										},
										{
											"begin": 4169,
											"end": 4322,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 4169,
											"end": 4322,
											"name": "tag",
											"source": 0,
											"value": "64"
										},
										{
											"begin": 4169,
											"end": 4322,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 4169,
											"end": 4322,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "66"
										},
										{
											"begin": 4169,
											"end": 4322,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 5249,
											"end": 5563,
											"name": "tag",
											"source": 0,
											"value": "14"
										},
										{
											"begin": 5249,
											"end": 5563,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 5249,
											"end": 5563,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "36"
										},
										{
											"begin": 5249,
											"end": 5563,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "68"
										},
										{
											"begin": 5249,
											"end": 5563,
											"name": "CALLDATASIZE",
											"source": 0
										},
										{
											"begin": 5249,
											"end": 5563,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 5249,
											"end": 5563,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "69"
										},
										{
											"begin": 5249,
											"end": 5563,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 5249,
											"end": 5563,
											"name": "tag",
											"source": 0,
											"value": "68"
										},
										{
											"begin": 5249,
											"end": 5563,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 5249,
											"end": 5563,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "70"
										},
										{
											"begin": 5249,
											"end": 5563,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 2801,
											"end": 3077,
											"name": "tag",
											"source": 0,
											"value": "15"
										},
										{
											"begin": 2801,
											"end": 3077,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2801,
											"end": 3077,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "26"
										},
										{
											"begin": 2801,
											"end": 3077,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "72"
										},
										{
											"begin": 2801,
											"end": 3077,
											"name": "CALLDATASIZE",
											"source": 0
										},
										{
											"begin": 2801,
											"end": 3077,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 2801,
											"end": 3077,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "32"
										},
										{
											"begin": 2801,
											"end": 3077,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 2801,
											"end": 3077,
											"name": "tag",
											"source": 0,
											"value": "72"
										},
										{
											"begin": 2801,
											"end": 3077,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2801,
											"end": 3077,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "73"
										},
										{
											"begin": 2801,
											"end": 3077,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 4388,
											"end": 4550,
											"name": "tag",
											"source": 0,
											"value": "16"
										},
										{
											"begin": 4388,
											"end": 4550,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 4388,
											"end": 4550,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 4388,
											"end": 4550,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "76"
										},
										{
											"begin": 4388,
											"end": 4550,
											"name": "CALLDATASIZE",
											"source": 0
										},
										{
											"begin": 4388,
											"end": 4550,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 4388,
											"end": 4550,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "77"
										},
										{
											"begin": 4388,
											"end": 4550,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 4388,
											"end": 4550,
											"name": "tag",
											"source": 0,
											"value": "76"
										},
										{
											"begin": 4388,
											"end": 4550,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 4388,
											"end": 4550,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "78"
										},
										{
											"begin": 4388,
											"end": 4550,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 1570,
											"end": 1870,
											"name": "tag",
											"source": 0,
											"value": "23"
										},
										{
											"begin": 1570,
											"end": 1870,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1672,
											"end": 1676,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "NOT",
											"source": -1
										},
										{
											"begin": 1707,
											"end": 1747,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 1707,
											"end": 1747,
											"name": "AND",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "80AC58CD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 1707,
											"end": 1747,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 1707,
											"end": 1747,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 1707,
											"end": 1811,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "81"
										},
										{
											"begin": 1707,
											"end": 1811,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "NOT",
											"source": -1
										},
										{
											"begin": 1763,
											"end": 1811,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 1763,
											"end": 1811,
											"name": "AND",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "5B5E139F"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 1763,
											"end": 1811,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 1707,
											"end": 1811,
											"name": "tag",
											"source": 0,
											"value": "81"
										},
										{
											"begin": 1707,
											"end": 1811,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1707,
											"end": 1863,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 1707,
											"end": 1863,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "83"
										},
										{
											"begin": 1707,
											"end": 1863,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1FFC9A7"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "NOT",
											"source": -1
										},
										{
											"begin": 937,
											"end": 977,
											"name": "DUP4",
											"source": 8
										},
										{
											"begin": 937,
											"end": 977,
											"name": "AND",
											"source": 8
										},
										{
											"begin": 937,
											"end": 977,
											"name": "EQ",
											"source": 8
										},
										{
											"begin": 1827,
											"end": 1863,
											"name": "tag",
											"source": 0,
											"value": "83"
										},
										{
											"begin": 1827,
											"end": 1863,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1688,
											"end": 1863,
											"name": "SWAP3",
											"source": 0
										},
										{
											"begin": 1570,
											"end": 1870,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 1570,
											"end": 1870,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 2471,
											"end": 2569,
											"name": "tag",
											"source": 0,
											"value": "27"
										},
										{
											"begin": 2471,
											"end": 2569,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2525,
											"end": 2538,
											"name": "PUSH",
											"source": 0,
											"value": "60"
										},
										{
											"begin": 2557,
											"end": 2562,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 2550,
											"end": 2562,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 2550,
											"end": 2562,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 2550,
											"end": 2562,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "86"
										},
										{
											"begin": 2550,
											"end": 2562,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 2550,
											"end": 2562,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "87"
										},
										{
											"begin": 2550,
											"end": 2562,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 2550,
											"end": 2562,
											"name": "tag",
											"source": 0,
											"value": "86"
										},
										{
											"begin": 2550,
											"end": 2562,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2550,
											"end": 2562,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 2550,
											"end": 2562,
											"name": "PUSH",
											"source": 0,
											"value": "1F"
										},
										{
											"begin": 2550,
											"end": 2562,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 2550,
											"end": 2562,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 2550,
											"end": 2562,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 2550,
											"end": 2562,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 2550,
											"end": 2562,
											"name": "DIV",
											"source": 0
										},
										{
											"begin": 2550,
											"end": 2562,
											"name": "MUL",
											"source": 0
										},
										{
											"begin": 2550,
											"end": 2562,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 2550,
											"end": 2562,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 2550,
											"end": 2562,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 2550,
											"end": 2562,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 2550,
											"end": 2562,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 2550,
											"end": 2562,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 2550,
											"end": 2562,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 2550,
											"end": 2562,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 2550,
											"end": 2562,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 2550,
											"end": 2562,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 2550,
											"end": 2562,
											"name": "SWAP3",
											"source": 0
										},
										{
											"begin": 2550,
											"end": 2562,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 2550,
											"end": 2562,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 2550,
											"end": 2562,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 2550,
											"end": 2562,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 2550,
											"end": 2562,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 2550,
											"end": 2562,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 2550,
											"end": 2562,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 2550,
											"end": 2562,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 2550,
											"end": 2562,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 2550,
											"end": 2562,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 2550,
											"end": 2562,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "88"
										},
										{
											"begin": 2550,
											"end": 2562,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 2550,
											"end": 2562,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "87"
										},
										{
											"begin": 2550,
											"end": 2562,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 2550,
											"end": 2562,
											"name": "tag",
											"source": 0,
											"value": "88"
										},
										{
											"begin": 2550,
											"end": 2562,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2550,
											"end": 2562,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 2550,
											"end": 2562,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 2550,
											"end": 2562,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "89"
										},
										{
											"begin": 2550,
											"end": 2562,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 2550,
											"end": 2562,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 2550,
											"end": 2562,
											"name": "PUSH",
											"source": 0,
											"value": "1F"
										},
										{
											"begin": 2550,
											"end": 2562,
											"name": "LT",
											"source": 0
										},
										{
											"begin": 2550,
											"end": 2562,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "90"
										},
										{
											"begin": 2550,
											"end": 2562,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 2550,
											"end": 2562,
											"name": "PUSH",
											"source": 0,
											"value": "100"
										},
										{
											"begin": 2550,
											"end": 2562,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 2550,
											"end": 2562,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 2550,
											"end": 2562,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 2550,
											"end": 2562,
											"name": "DIV",
											"source": 0
										},
										{
											"begin": 2550,
											"end": 2562,
											"name": "MUL",
											"source": 0
										},
										{
											"begin": 2550,
											"end": 2562,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 2550,
											"end": 2562,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 2550,
											"end": 2562,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 2550,
											"end": 2562,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 2550,
											"end": 2562,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 2550,
											"end": 2562,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 2550,
											"end": 2562,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "89"
										},
										{
											"begin": 2550,
											"end": 2562,
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 2550,
											"end": 2562,
											"name": "tag",
											"source": 0,
											"value": "90"
										},
										{
											"begin": 2550,
											"end": 2562,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2550,
											"end": 2562,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 2550,
											"end": 2562,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 2550,
											"end": 2562,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 2550,
											"end": 2562,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 2550,
											"end": 2562,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 2550,
											"end": 2562,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 2550,
											"end": 2562,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 2550,
											"end": 2562,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 2550,
											"end": 2562,
											"name": "KECCAK256",
											"source": 0
										},
										{
											"begin": 2550,
											"end": 2562,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 2550,
											"end": 2562,
											"name": "tag",
											"source": 0,
											"value": "91"
										},
										{
											"begin": 2550,
											"end": 2562,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2550,
											"end": 2562,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 2550,
											"end": 2562,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 2550,
											"end": 2562,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 2550,
											"end": 2562,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 2550,
											"end": 2562,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 2550,
											"end": 2562,
											"name": "PUSH",
											"source": 0,
											"value": "1"
										},
										{
											"begin": 2550,
											"end": 2562,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 2550,
											"end": 2562,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 2550,
											"end": 2562,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 2550,
											"end": 2562,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 2550,
											"end": 2562,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 2550,
											"end": 2562,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 2550,
											"end": 2562,
											"name": "GT",
											"source": 0
										},
										{
											"begin": 2550,
											"end": 2562,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "91"
										},
										{
											"begin": 2550,
											"end": 2562,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 2550,
											"end": 2562,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 2550,
											"end": 2562,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 2550,
											"end": 2562,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 2550,
											"end": 2562,
											"name": "PUSH",
											"source": 0,
											"value": "1F"
										},
										{
											"begin": 2550,
											"end": 2562,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 2550,
											"end": 2562,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 2550,
											"end": 2562,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 2550,
											"end": 2562,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 2550,
											"end": 2562,
											"name": "tag",
											"source": 0,
											"value": "89"
										},
										{
											"begin": 2550,
											"end": 2562,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2550,
											"end": 2562,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 2550,
											"end": 2562,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 2550,
											"end": 2562,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 2550,
											"end": 2562,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 2550,
											"end": 2562,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 2550,
											"end": 2562,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 2550,
											"end": 2562,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 2471,
											"end": 2569,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 2471,
											"end": 2569,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 3935,
											"end": 4102,
											"name": "tag",
											"source": 0,
											"value": "33"
										},
										{
											"begin": 3935,
											"end": 4102,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 4011,
											"end": 4018,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 4030,
											"end": 4053,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "93"
										},
										{
											"begin": 4045,
											"end": 4052,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 4030,
											"end": 4044,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "94"
										},
										{
											"begin": 4030,
											"end": 4053,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 4030,
											"end": 4053,
											"name": "tag",
											"source": 0,
											"value": "93"
										},
										{
											"begin": 4030,
											"end": 4053,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 4071,
											"end": 4095,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 4071,
											"end": 4095,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 4071,
											"end": 4095,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 4071,
											"end": 4095,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 4071,
											"end": 4086,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 4071,
											"end": 4095,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 4071,
											"end": 4095,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 4071,
											"end": 4095,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 4071,
											"end": 4095,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 4071,
											"end": 4095,
											"name": "KECCAK256",
											"source": 0
										},
										{
											"begin": 4071,
											"end": 4095,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 4071,
											"end": 4095,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 4071,
											"end": 4095,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 3935,
											"end": 4102,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 3468,
											"end": 3874,
											"name": "tag",
											"source": 0,
											"value": "39"
										},
										{
											"begin": 3468,
											"end": 3874,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 3548,
											"end": 3561,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 3564,
											"end": 3587,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "96"
										},
										{
											"begin": 3579,
											"end": 3586,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 3564,
											"end": 3578,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "53"
										},
										{
											"begin": 3564,
											"end": 3587,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 3564,
											"end": 3587,
											"name": "tag",
											"source": 0,
											"value": "96"
										},
										{
											"begin": 3564,
											"end": 3587,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 3548,
											"end": 3587,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 3548,
											"end": 3587,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 3611,
											"end": 3616,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 3605,
											"end": 3616,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 3605,
											"end": 3607,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 3605,
											"end": 3616,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 3605,
											"end": 3616,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 3597,
											"end": 3654,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "97"
										},
										{
											"begin": 3597,
											"end": 3654,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 3597,
											"end": 3654,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 3597,
											"end": 3654,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "461BCD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E5"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 3597,
											"end": 3654,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 3597,
											"end": 3654,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 5363,
											"end": 5365,
											"name": "PUSH",
											"source": 12,
											"value": "20"
										},
										{
											"begin": 3597,
											"end": 3654,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 3597,
											"end": 3654,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 3597,
											"end": 3654,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 5345,
											"end": 5366,
											"name": "MSTORE",
											"source": 12
										},
										{
											"begin": 5402,
											"end": 5404,
											"name": "PUSH",
											"source": 12,
											"value": "21"
										},
										{
											"begin": 5382,
											"end": 5400,
											"name": "PUSH",
											"source": 12,
											"value": "24"
										},
										{
											"begin": 5382,
											"end": 5400,
											"name": "DUP3",
											"source": 12
										},
										{
											"begin": 5382,
											"end": 5400,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 5375,
											"end": 5405,
											"name": "MSTORE",
											"source": 12
										},
										{
											"begin": 5441,
											"end": 5475,
											"name": "PUSH",
											"source": 12,
											"value": "4552433732313A20617070726F76616C20746F2063757272656E74206F776E65"
										},
										{
											"begin": 5421,
											"end": 5439,
											"name": "PUSH",
											"source": 12,
											"value": "44"
										},
										{
											"begin": 5421,
											"end": 5439,
											"name": "DUP3",
											"source": 12
										},
										{
											"begin": 5421,
											"end": 5439,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 5414,
											"end": 5476,
											"name": "MSTORE",
											"source": 12
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "39"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "F9"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 5492,
											"end": 5510,
											"name": "PUSH",
											"source": 12,
											"value": "64"
										},
										{
											"begin": 5492,
											"end": 5510,
											"name": "DUP3",
											"source": 12
										},
										{
											"begin": 5492,
											"end": 5510,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 5485,
											"end": 5516,
											"name": "MSTORE",
											"source": 12
										},
										{
											"begin": 5533,
											"end": 5552,
											"name": "PUSH",
											"source": 12,
											"value": "84"
										},
										{
											"begin": 5533,
											"end": 5552,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 3597,
											"end": 3654,
											"name": "tag",
											"source": 0,
											"value": "98"
										},
										{
											"begin": 3597,
											"end": 3654,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 3597,
											"end": 3654,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 3597,
											"end": 3654,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 3597,
											"end": 3654,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 3597,
											"end": 3654,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 3597,
											"end": 3654,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 3597,
											"end": 3654,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 3597,
											"end": 3654,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 3597,
											"end": 3654,
											"name": "tag",
											"source": 0,
											"value": "97"
										},
										{
											"begin": 3597,
											"end": 3654,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 719,
											"end": 729,
											"name": "CALLER",
											"source": 5
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 3686,
											"end": 3707,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 3686,
											"end": 3707,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 3686,
											"end": 3707,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 3686,
											"end": 3707,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 3686,
											"end": 3748,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "103"
										},
										{
											"begin": 3686,
											"end": 3748,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 3711,
											"end": 3748,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "103"
										},
										{
											"begin": 3728,
											"end": 3733,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 719,
											"end": 729,
											"name": "CALLER",
											"source": 5
										},
										{
											"begin": 4388,
											"end": 4550,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "78"
										},
										{
											"begin": 4388,
											"end": 4550,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 3711,
											"end": 3748,
											"name": "tag",
											"source": 0,
											"value": "103"
										},
										{
											"begin": 3711,
											"end": 3748,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 3665,
											"end": 3835,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "105"
										},
										{
											"begin": 3665,
											"end": 3835,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 3665,
											"end": 3835,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 3665,
											"end": 3835,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "461BCD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E5"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 3665,
											"end": 3835,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 3665,
											"end": 3835,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 5765,
											"end": 5767,
											"name": "PUSH",
											"source": 12,
											"value": "20"
										},
										{
											"begin": 3665,
											"end": 3835,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 3665,
											"end": 3835,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 3665,
											"end": 3835,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 5747,
											"end": 5768,
											"name": "MSTORE",
											"source": 12
										},
										{
											"begin": 5804,
											"end": 5806,
											"name": "PUSH",
											"source": 12,
											"value": "3D"
										},
										{
											"begin": 5784,
											"end": 5802,
											"name": "PUSH",
											"source": 12,
											"value": "24"
										},
										{
											"begin": 5784,
											"end": 5802,
											"name": "DUP3",
											"source": 12
										},
										{
											"begin": 5784,
											"end": 5802,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 5777,
											"end": 5807,
											"name": "MSTORE",
											"source": 12
										},
										{
											"begin": 5843,
											"end": 5877,
											"name": "PUSH",
											"source": 12,
											"value": "4552433732313A20617070726F76652063616C6C6572206973206E6F7420746F"
										},
										{
											"begin": 5823,
											"end": 5841,
											"name": "PUSH",
											"source": 12,
											"value": "44"
										},
										{
											"begin": 5823,
											"end": 5841,
											"name": "DUP3",
											"source": 12
										},
										{
											"begin": 5823,
											"end": 5841,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 5816,
											"end": 5878,
											"name": "MSTORE",
											"source": 12
										},
										{
											"begin": 5914,
											"end": 5945,
											"name": "PUSH",
											"source": 12,
											"value": "6B656E206F776E6572206F7220617070726F76656420666F7220616C6C000000"
										},
										{
											"begin": 5894,
											"end": 5912,
											"name": "PUSH",
											"source": 12,
											"value": "64"
										},
										{
											"begin": 5894,
											"end": 5912,
											"name": "DUP3",
											"source": 12
										},
										{
											"begin": 5894,
											"end": 5912,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 5887,
											"end": 5946,
											"name": "MSTORE",
											"source": 12
										},
										{
											"begin": 5963,
											"end": 5982,
											"name": "PUSH",
											"source": 12,
											"value": "84"
										},
										{
											"begin": 5963,
											"end": 5982,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 3665,
											"end": 3835,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "98"
										},
										{
											"begin": 5563,
											"end": 5988,
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 3665,
											"end": 3835,
											"name": "tag",
											"source": 0,
											"value": "105"
										},
										{
											"begin": 3665,
											"end": 3835,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 3846,
											"end": 3867,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "108"
										},
										{
											"begin": 3855,
											"end": 3857,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 3859,
											"end": 3866,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 3846,
											"end": 3854,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "109"
										},
										{
											"begin": 3846,
											"end": 3867,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 3846,
											"end": 3867,
											"name": "tag",
											"source": 0,
											"value": "108"
										},
										{
											"begin": 3846,
											"end": 3867,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 3538,
											"end": 3874,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 3468,
											"end": 3874,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 3468,
											"end": 3874,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 3468,
											"end": 3874,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 4612,
											"end": 4938,
											"name": "tag",
											"source": 0,
											"value": "43"
										},
										{
											"begin": 4612,
											"end": 4938,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 4801,
											"end": 4842,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "111"
										},
										{
											"begin": 719,
											"end": 729,
											"name": "CALLER",
											"source": 5
										},
										{
											"begin": 4834,
											"end": 4841,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 4801,
											"end": 4819,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "113"
										},
										{
											"begin": 4801,
											"end": 4842,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 4801,
											"end": 4842,
											"name": "tag",
											"source": 0,
											"value": "111"
										},
										{
											"begin": 4801,
											"end": 4842,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 4793,
											"end": 4892,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "114"
										},
										{
											"begin": 4793,
											"end": 4892,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 4793,
											"end": 4892,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 4793,
											"end": 4892,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "461BCD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E5"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 4793,
											"end": 4892,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 4793,
											"end": 4892,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 4793,
											"end": 4892,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 4793,
											"end": 4892,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 4793,
											"end": 4892,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "98"
										},
										{
											"begin": 4793,
											"end": 4892,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 4793,
											"end": 4892,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "116"
										},
										{
											"begin": 4793,
											"end": 4892,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 4793,
											"end": 4892,
											"name": "tag",
											"source": 0,
											"value": "114"
										},
										{
											"begin": 4793,
											"end": 4892,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 4903,
											"end": 4931,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "108"
										},
										{
											"begin": 4913,
											"end": 4917,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 4919,
											"end": 4921,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 4923,
											"end": 4930,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 4903,
											"end": 4912,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "118"
										},
										{
											"begin": 4903,
											"end": 4931,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 338,
											"end": 504,
											"name": "tag",
											"source": 11,
											"value": "47"
										},
										{
											"begin": 338,
											"end": 504,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 385,
											"end": 400,
											"name": "PUSH",
											"source": 11,
											"value": "0"
										},
										{
											"begin": 403,
											"end": 428,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "120"
										},
										{
											"begin": 403,
											"end": 418,
											"name": "PUSH",
											"source": 11,
											"value": "6"
										},
										{
											"begin": 918,
											"end": 932,
											"name": "SLOAD",
											"source": 6
										},
										{
											"begin": 918,
											"end": 932,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 827,
											"end": 939,
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 403,
											"end": 428,
											"name": "tag",
											"source": 11,
											"value": "120"
										},
										{
											"begin": 403,
											"end": 428,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 385,
											"end": 428,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 385,
											"end": 428,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 438,
											"end": 465,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "122"
										},
										{
											"begin": 438,
											"end": 453,
											"name": "PUSH",
											"source": 11,
											"value": "6"
										},
										{
											"begin": 1032,
											"end": 1051,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 1032,
											"end": 1051,
											"name": "SLOAD",
											"source": 6
										},
										{
											"begin": 1050,
											"end": 1051,
											"name": "PUSH",
											"source": 6,
											"value": "1"
										},
										{
											"begin": 1032,
											"end": 1051,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 1032,
											"end": 1051,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 1032,
											"end": 1051,
											"name": "SSTORE",
											"source": 6
										},
										{
											"begin": 945,
											"end": 1068,
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 438,
											"end": 465,
											"name": "tag",
											"source": 11,
											"value": "122"
										},
										{
											"begin": 438,
											"end": 465,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 475,
											"end": 497,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "124"
										},
										{
											"begin": 485,
											"end": 487,
											"name": "DUP3",
											"source": 11
										},
										{
											"begin": 489,
											"end": 496,
											"name": "DUP3",
											"source": 11
										},
										{
											"begin": 475,
											"end": 484,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "125"
										},
										{
											"begin": 475,
											"end": 497,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 475,
											"end": 497,
											"name": "tag",
											"source": 11,
											"value": "124"
										},
										{
											"begin": 475,
											"end": 497,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 375,
											"end": 504,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 338,
											"end": 504,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 338,
											"end": 504,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 5004,
											"end": 5183,
											"name": "tag",
											"source": 0,
											"value": "50"
										},
										{
											"begin": 5004,
											"end": 5183,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 5137,
											"end": 5176,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "108"
										},
										{
											"begin": 5154,
											"end": 5158,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 5160,
											"end": 5162,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 5164,
											"end": 5171,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 5137,
											"end": 5176,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 5137,
											"end": 5176,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 5137,
											"end": 5176,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 5137,
											"end": 5176,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 5137,
											"end": 5176,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 5137,
											"end": 5176,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 5137,
											"end": 5176,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 5137,
											"end": 5176,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 5137,
											"end": 5176,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 5137,
											"end": 5176,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 5137,
											"end": 5176,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 5137,
											"end": 5176,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 5137,
											"end": 5153,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "70"
										},
										{
											"begin": 5137,
											"end": 5176,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 2190,
											"end": 2409,
											"name": "tag",
											"source": 0,
											"value": "53"
										},
										{
											"begin": 2190,
											"end": 2409,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2262,
											"end": 2269,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 6930,
											"end": 6946,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 6930,
											"end": 6946,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 6930,
											"end": 6946,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 6930,
											"end": 6937,
											"name": "PUSH",
											"source": 0,
											"value": "2"
										},
										{
											"begin": 6930,
											"end": 6946,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 6930,
											"end": 6946,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 6930,
											"end": 6946,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 6930,
											"end": 6946,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 6930,
											"end": 6946,
											"name": "KECCAK256",
											"source": 0
										},
										{
											"begin": 6930,
											"end": 6946,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 6930,
											"end": 6946,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 6930,
											"end": 6946,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 2324,
											"end": 2380,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "83"
										},
										{
											"begin": 2324,
											"end": 2380,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 2324,
											"end": 2380,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 2324,
											"end": 2380,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "461BCD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E5"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 2324,
											"end": 2380,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 2324,
											"end": 2380,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 6609,
											"end": 6611,
											"name": "PUSH",
											"source": 12,
											"value": "20"
										},
										{
											"begin": 2324,
											"end": 2380,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 2324,
											"end": 2380,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 2324,
											"end": 2380,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 6591,
											"end": 6612,
											"name": "MSTORE",
											"source": 12
										},
										{
											"begin": 6648,
											"end": 6650,
											"name": "PUSH",
											"source": 12,
											"value": "18"
										},
										{
											"begin": 6628,
											"end": 6646,
											"name": "PUSH",
											"source": 12,
											"value": "24"
										},
										{
											"begin": 6628,
											"end": 6646,
											"name": "DUP3",
											"source": 12
										},
										{
											"begin": 6628,
											"end": 6646,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 6621,
											"end": 6651,
											"name": "MSTORE",
											"source": 12
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "115490CDCC8C4E881A5B9D985B1A59081D1BDAD95B881251"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "42"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 6667,
											"end": 6685,
											"name": "PUSH",
											"source": 12,
											"value": "44"
										},
										{
											"begin": 6667,
											"end": 6685,
											"name": "DUP3",
											"source": 12
										},
										{
											"begin": 6667,
											"end": 6685,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 6660,
											"end": 6714,
											"name": "MSTORE",
											"source": 12
										},
										{
											"begin": 6731,
											"end": 6749,
											"name": "PUSH",
											"source": 12,
											"value": "64"
										},
										{
											"begin": 6731,
											"end": 6749,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 2324,
											"end": 2380,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "98"
										},
										{
											"begin": 6407,
											"end": 6755,
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 1929,
											"end": 2133,
											"name": "tag",
											"source": 0,
											"value": "57"
										},
										{
											"begin": 1929,
											"end": 2133,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2001,
											"end": 2008,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 2028,
											"end": 2047,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 2028,
											"end": 2047,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 2020,
											"end": 2093,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "135"
										},
										{
											"begin": 2020,
											"end": 2093,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 2020,
											"end": 2093,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 2020,
											"end": 2093,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "461BCD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E5"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 2020,
											"end": 2093,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 2020,
											"end": 2093,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 6962,
											"end": 6964,
											"name": "PUSH",
											"source": 12,
											"value": "20"
										},
										{
											"begin": 2020,
											"end": 2093,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 2020,
											"end": 2093,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 2020,
											"end": 2093,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 6944,
											"end": 6965,
											"name": "MSTORE",
											"source": 12
										},
										{
											"begin": 7001,
											"end": 7003,
											"name": "PUSH",
											"source": 12,
											"value": "29"
										},
										{
											"begin": 6981,
											"end": 6999,
											"name": "PUSH",
											"source": 12,
											"value": "24"
										},
										{
											"begin": 6981,
											"end": 6999,
											"name": "DUP3",
											"source": 12
										},
										{
											"begin": 6981,
											"end": 6999,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 6974,
											"end": 7004,
											"name": "MSTORE",
											"source": 12
										},
										{
											"begin": 7040,
											"end": 7074,
											"name": "PUSH",
											"source": 12,
											"value": "4552433732313A2061646472657373207A65726F206973206E6F742061207661"
										},
										{
											"begin": 7020,
											"end": 7038,
											"name": "PUSH",
											"source": 12,
											"value": "44"
										},
										{
											"begin": 7020,
											"end": 7038,
											"name": "DUP3",
											"source": 12
										},
										{
											"begin": 7020,
											"end": 7038,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 7013,
											"end": 7075,
											"name": "MSTORE",
											"source": 12
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "3634B21037BBB732B9"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "B9"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 7091,
											"end": 7109,
											"name": "PUSH",
											"source": 12,
											"value": "64"
										},
										{
											"begin": 7091,
											"end": 7109,
											"name": "DUP3",
											"source": 12
										},
										{
											"begin": 7091,
											"end": 7109,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 7084,
											"end": 7123,
											"name": "MSTORE",
											"source": 12
										},
										{
											"begin": 7140,
											"end": 7159,
											"name": "PUSH",
											"source": 12,
											"value": "84"
										},
										{
											"begin": 7140,
											"end": 7159,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 2020,
											"end": 2093,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "98"
										},
										{
											"begin": 6760,
											"end": 7165,
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 2020,
											"end": 2093,
											"name": "tag",
											"source": 0,
											"value": "135"
										},
										{
											"begin": 2020,
											"end": 2093,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 2110,
											"end": 2126,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 2110,
											"end": 2126,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 2110,
											"end": 2126,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 2110,
											"end": 2126,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 2110,
											"end": 2126,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 2110,
											"end": 2119,
											"name": "PUSH",
											"source": 0,
											"value": "3"
										},
										{
											"begin": 2110,
											"end": 2126,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 2110,
											"end": 2126,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 2110,
											"end": 2126,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 2110,
											"end": 2126,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 2110,
											"end": 2126,
											"name": "KECCAK256",
											"source": 0
										},
										{
											"begin": 2110,
											"end": 2126,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 2110,
											"end": 2126,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 1929,
											"end": 2133,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 2633,
											"end": 2735,
											"name": "tag",
											"source": 0,
											"value": "61"
										},
										{
											"begin": 2633,
											"end": 2735,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2689,
											"end": 2702,
											"name": "PUSH",
											"source": 0,
											"value": "60"
										},
										{
											"begin": 2721,
											"end": 2728,
											"name": "PUSH",
											"source": 0,
											"value": "1"
										},
										{
											"begin": 2714,
											"end": 2728,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 2714,
											"end": 2728,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 2714,
											"end": 2728,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "86"
										},
										{
											"begin": 2714,
											"end": 2728,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 2714,
											"end": 2728,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "87"
										},
										{
											"begin": 2714,
											"end": 2728,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 4169,
											"end": 4322,
											"name": "tag",
											"source": 0,
											"value": "66"
										},
										{
											"begin": 4169,
											"end": 4322,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 4263,
											"end": 4315,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "124"
										},
										{
											"begin": 719,
											"end": 729,
											"name": "CALLER",
											"source": 5
										},
										{
											"begin": 4296,
											"end": 4304,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 4306,
											"end": 4314,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 4263,
											"end": 4281,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "147"
										},
										{
											"begin": 4263,
											"end": 4315,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 5249,
											"end": 5563,
											"name": "tag",
											"source": 0,
											"value": "70"
										},
										{
											"begin": 5249,
											"end": 5563,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 5417,
											"end": 5458,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "149"
										},
										{
											"begin": 719,
											"end": 729,
											"name": "CALLER",
											"source": 5
										},
										{
											"begin": 5450,
											"end": 5457,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 5417,
											"end": 5435,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "113"
										},
										{
											"begin": 5417,
											"end": 5458,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 5417,
											"end": 5458,
											"name": "tag",
											"source": 0,
											"value": "149"
										},
										{
											"begin": 5417,
											"end": 5458,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 5409,
											"end": 5508,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "151"
										},
										{
											"begin": 5409,
											"end": 5508,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 5409,
											"end": 5508,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 5409,
											"end": 5508,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "461BCD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E5"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 5409,
											"end": 5508,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 5409,
											"end": 5508,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 5409,
											"end": 5508,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 5409,
											"end": 5508,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 5409,
											"end": 5508,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "98"
										},
										{
											"begin": 5409,
											"end": 5508,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 5409,
											"end": 5508,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "116"
										},
										{
											"begin": 5409,
											"end": 5508,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 5409,
											"end": 5508,
											"name": "tag",
											"source": 0,
											"value": "151"
										},
										{
											"begin": 5409,
											"end": 5508,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 5518,
											"end": 5556,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "153"
										},
										{
											"begin": 5532,
											"end": 5536,
											"name": "DUP5",
											"source": 0
										},
										{
											"begin": 5538,
											"end": 5540,
											"name": "DUP5",
											"source": 0
										},
										{
											"begin": 5542,
											"end": 5549,
											"name": "DUP5",
											"source": 0
										},
										{
											"begin": 5551,
											"end": 5555,
											"name": "DUP5",
											"source": 0
										},
										{
											"begin": 5518,
											"end": 5531,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "154"
										},
										{
											"begin": 5518,
											"end": 5556,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 5518,
											"end": 5556,
											"name": "tag",
											"source": 0,
											"value": "153"
										},
										{
											"begin": 5518,
											"end": 5556,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 5249,
											"end": 5563,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 5249,
											"end": 5563,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 5249,
											"end": 5563,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 5249,
											"end": 5563,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 5249,
											"end": 5563,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 2801,
											"end": 3077,
											"name": "tag",
											"source": 0,
											"value": "73"
										},
										{
											"begin": 2801,
											"end": 3077,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2874,
											"end": 2887,
											"name": "PUSH",
											"source": 0,
											"value": "60"
										},
										{
											"begin": 2899,
											"end": 2922,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "156"
										},
										{
											"begin": 2914,
											"end": 2921,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 2899,
											"end": 2913,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "94"
										},
										{
											"begin": 2899,
											"end": 2922,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 2899,
											"end": 2922,
											"name": "tag",
											"source": 0,
											"value": "156"
										},
										{
											"begin": 2899,
											"end": 2922,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2933,
											"end": 2954,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 2957,
											"end": 2967,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "157"
										},
										{
											"begin": 3395,
											"end": 3404,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 3395,
											"end": 3404,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 3395,
											"end": 3404,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 3395,
											"end": 3404,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 3395,
											"end": 3404,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 3395,
											"end": 3404,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 3395,
											"end": 3404,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 3395,
											"end": 3404,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 3395,
											"end": 3404,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "0"
										},
										{
											"begin": 3395,
											"end": 3404,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 3395,
											"end": 3404,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 3395,
											"end": 3404,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 3319,
											"end": 3411,
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 2957,
											"end": 2967,
											"name": "tag",
											"source": 0,
											"value": "157"
										},
										{
											"begin": 2957,
											"end": 2967,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2933,
											"end": 2967,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 2933,
											"end": 2967,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 3008,
											"end": 3009,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 2990,
											"end": 2997,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 2984,
											"end": 3005,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 2984,
											"end": 3009,
											"name": "GT",
											"source": 0
										},
										{
											"begin": 2984,
											"end": 3070,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "159"
										},
										{
											"begin": 2984,
											"end": 3070,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 2984,
											"end": 3070,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 2984,
											"end": 3070,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 2984,
											"end": 3070,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 2984,
											"end": 3070,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 2984,
											"end": 3070,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 2984,
											"end": 3070,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 2984,
											"end": 3070,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 2984,
											"end": 3070,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 2984,
											"end": 3070,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 2984,
											"end": 3070,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 2984,
											"end": 3070,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 2984,
											"end": 3070,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 2984,
											"end": 3070,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "160"
										},
										{
											"begin": 2984,
											"end": 3070,
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 2984,
											"end": 3070,
											"name": "tag",
											"source": 0,
											"value": "159"
										},
										{
											"begin": 2984,
											"end": 3070,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 3036,
											"end": 3043,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 3045,
											"end": 3063,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "161"
										},
										{
											"begin": 3045,
											"end": 3052,
											"name": "DUP5",
											"source": 0
										},
										{
											"begin": 3045,
											"end": 3061,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "162"
										},
										{
											"begin": 3045,
											"end": 3063,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 3045,
											"end": 3063,
											"name": "tag",
											"source": 0,
											"value": "161"
										},
										{
											"begin": 3045,
											"end": 3063,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 3019,
											"end": 3064,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 3019,
											"end": 3064,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 3019,
											"end": 3064,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 3019,
											"end": 3064,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 3019,
											"end": 3064,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "163"
										},
										{
											"begin": 3019,
											"end": 3064,
											"name": "SWAP3",
											"source": 0
										},
										{
											"begin": 3019,
											"end": 3064,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 3019,
											"end": 3064,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 3019,
											"end": 3064,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "164"
										},
										{
											"begin": 3019,
											"end": 3064,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 3019,
											"end": 3064,
											"name": "tag",
											"source": 0,
											"value": "163"
										},
										{
											"begin": 3019,
											"end": 3064,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 3019,
											"end": 3064,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 3019,
											"end": 3064,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 3019,
											"end": 3064,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 3019,
											"end": 3064,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 3019,
											"end": 3064,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 3019,
											"end": 3064,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 3019,
											"end": 3064,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 3019,
											"end": 3064,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 3019,
											"end": 3064,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 3019,
											"end": 3064,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 3019,
											"end": 3064,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 3019,
											"end": 3064,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 2984,
											"end": 3070,
											"name": "tag",
											"source": 0,
											"value": "160"
										},
										{
											"begin": 2984,
											"end": 3070,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2977,
											"end": 3070,
											"name": "SWAP4",
											"source": 0
										},
										{
											"begin": 2801,
											"end": 3077,
											"name": "SWAP3",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 2801,
											"end": 3077,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 4388,
											"end": 4550,
											"name": "tag",
											"source": 0,
											"value": "78"
										},
										{
											"begin": 4388,
											"end": 4550,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 4508,
											"end": 4533,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 4508,
											"end": 4533,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 4508,
											"end": 4533,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 4485,
											"end": 4489,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 4508,
											"end": 4533,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 4508,
											"end": 4533,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 4508,
											"end": 4533,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 4508,
											"end": 4526,
											"name": "PUSH",
											"source": 0,
											"value": "5"
										},
										{
											"begin": 4508,
											"end": 4533,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 4508,
											"end": 4533,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 4508,
											"end": 4533,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 4508,
											"end": 4533,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 4508,
											"end": 4533,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 4508,
											"end": 4533,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 4508,
											"end": 4533,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 4508,
											"end": 4533,
											"name": "KECCAK256",
											"source": 0
										},
										{
											"begin": 4508,
											"end": 4543,
											"name": "SWAP4",
											"source": 0
										},
										{
											"begin": 4508,
											"end": 4543,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 4508,
											"end": 4543,
											"name": "SWAP5",
											"source": 0
										},
										{
											"begin": 4508,
											"end": 4543,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 4508,
											"end": 4543,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 4508,
											"end": 4543,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 4508,
											"end": 4543,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 4508,
											"end": 4543,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 4508,
											"end": 4543,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 4508,
											"end": 4543,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 4508,
											"end": 4543,
											"name": "KECCAK256",
											"source": 0
										},
										{
											"begin": 4508,
											"end": 4543,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 4508,
											"end": 4543,
											"name": "PUSH",
											"source": 0,
											"value": "FF"
										},
										{
											"begin": 4508,
											"end": 4543,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 4508,
											"end": 4543,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 4388,
											"end": 4550,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 13466,
											"end": 13599,
											"name": "tag",
											"source": 0,
											"value": "94"
										},
										{
											"begin": 13466,
											"end": 13599,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 7321,
											"end": 7325,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 6930,
											"end": 6946,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 6930,
											"end": 6946,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 6930,
											"end": 6946,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 6930,
											"end": 6937,
											"name": "PUSH",
											"source": 0,
											"value": "2"
										},
										{
											"begin": 6930,
											"end": 6946,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 6930,
											"end": 6946,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 6930,
											"end": 6946,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 6930,
											"end": 6946,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 6930,
											"end": 6946,
											"name": "KECCAK256",
											"source": 0
										},
										{
											"begin": 6930,
											"end": 6946,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 6930,
											"end": 6946,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 13539,
											"end": 13592,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "170"
										},
										{
											"begin": 13539,
											"end": 13592,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 13539,
											"end": 13592,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 13539,
											"end": 13592,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "461BCD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E5"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 13539,
											"end": 13592,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 13539,
											"end": 13592,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 6609,
											"end": 6611,
											"name": "PUSH",
											"source": 12,
											"value": "20"
										},
										{
											"begin": 13539,
											"end": 13592,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 13539,
											"end": 13592,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 13539,
											"end": 13592,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 6591,
											"end": 6612,
											"name": "MSTORE",
											"source": 12
										},
										{
											"begin": 6648,
											"end": 6650,
											"name": "PUSH",
											"source": 12,
											"value": "18"
										},
										{
											"begin": 6628,
											"end": 6646,
											"name": "PUSH",
											"source": 12,
											"value": "24"
										},
										{
											"begin": 6628,
											"end": 6646,
											"name": "DUP3",
											"source": 12
										},
										{
											"begin": 6628,
											"end": 6646,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 6621,
											"end": 6651,
											"name": "MSTORE",
											"source": 12
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "115490CDCC8C4E881A5B9D985B1A59081D1BDAD95B881251"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "42"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 6667,
											"end": 6685,
											"name": "PUSH",
											"source": 12,
											"value": "44"
										},
										{
											"begin": 6667,
											"end": 6685,
											"name": "DUP3",
											"source": 12
										},
										{
											"begin": 6667,
											"end": 6685,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 6660,
											"end": 6714,
											"name": "MSTORE",
											"source": 12
										},
										{
											"begin": 6731,
											"end": 6749,
											"name": "PUSH",
											"source": 12,
											"value": "64"
										},
										{
											"begin": 6731,
											"end": 6749,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 13539,
											"end": 13592,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "98"
										},
										{
											"begin": 6407,
											"end": 6755,
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 13539,
											"end": 13592,
											"name": "tag",
											"source": 0,
											"value": "170"
										},
										{
											"begin": 13539,
											"end": 13592,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 13466,
											"end": 13599,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 13466,
											"end": 13599,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 12768,
											"end": 12939,
											"name": "tag",
											"source": 0,
											"value": "109"
										},
										{
											"begin": 12768,
											"end": 12939,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 12842,
											"end": 12866,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 12842,
											"end": 12866,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 12842,
											"end": 12866,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 12842,
											"end": 12866,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 12842,
											"end": 12857,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 12842,
											"end": 12866,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 12842,
											"end": 12866,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 12842,
											"end": 12866,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 12842,
											"end": 12866,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 12842,
											"end": 12866,
											"name": "KECCAK256",
											"source": 0
										},
										{
											"begin": 12842,
											"end": 12871,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 12842,
											"end": 12871,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "NOT",
											"source": -1
										},
										{
											"begin": 12842,
											"end": 12871,
											"name": "AND",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 12842,
											"end": 12871,
											"name": "DUP5",
											"source": 0
										},
										{
											"begin": 12842,
											"end": 12871,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 12842,
											"end": 12871,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 12842,
											"end": 12871,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 12842,
											"end": 12871,
											"name": "OR",
											"source": 0
										},
										{
											"begin": 12842,
											"end": 12871,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 12842,
											"end": 12871,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 12842,
											"end": 12871,
											"name": "SSTORE",
											"source": 0
										},
										{
											"begin": 12842,
											"end": 12866,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 12842,
											"end": 12866,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 12895,
											"end": 12918,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "174"
										},
										{
											"begin": 12842,
											"end": 12866,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 12895,
											"end": 12909,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "53"
										},
										{
											"begin": 12895,
											"end": 12918,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 12895,
											"end": 12918,
											"name": "tag",
											"source": 0,
											"value": "174"
										},
										{
											"begin": 12895,
											"end": 12918,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 12886,
											"end": 12932,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 12886,
											"end": 12932,
											"name": "PUSH",
											"source": 0,
											"value": "8C5BE1E5EBEC7D5BD14F71427D1E84F3DD0314C0F7B2291E5B200AC8C7C3B925"
										},
										{
											"begin": 12886,
											"end": 12932,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 12886,
											"end": 12932,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 12886,
											"end": 12932,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 12886,
											"end": 12932,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 12886,
											"end": 12932,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 12886,
											"end": 12932,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 12886,
											"end": 12932,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 12886,
											"end": 12932,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 12886,
											"end": 12932,
											"name": "LOG4",
											"source": 0
										},
										{
											"begin": 12768,
											"end": 12939,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 12768,
											"end": 12939,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 12768,
											"end": 12939,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 7540,
											"end": 7801,
											"name": "tag",
											"source": 0,
											"value": "113"
										},
										{
											"begin": 7540,
											"end": 7801,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 7633,
											"end": 7637,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 7649,
											"end": 7662,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 7665,
											"end": 7688,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "176"
										},
										{
											"begin": 7680,
											"end": 7687,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 7665,
											"end": 7679,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "53"
										},
										{
											"begin": 7665,
											"end": 7688,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 7665,
											"end": 7688,
											"name": "tag",
											"source": 0,
											"value": "176"
										},
										{
											"begin": 7665,
											"end": 7688,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 7649,
											"end": 7688,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 7649,
											"end": 7688,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 7717,
											"end": 7722,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 7706,
											"end": 7722,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 7706,
											"end": 7713,
											"name": "DUP5",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 7706,
											"end": 7722,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 7706,
											"end": 7722,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 7706,
											"end": 7758,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 7706,
											"end": 7758,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "178"
										},
										{
											"begin": 7706,
											"end": 7758,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 7706,
											"end": 7758,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 7726,
											"end": 7758,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "178"
										},
										{
											"begin": 7743,
											"end": 7748,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 7750,
											"end": 7757,
											"name": "DUP6",
											"source": 0
										},
										{
											"begin": 7726,
											"end": 7742,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "78"
										},
										{
											"begin": 7726,
											"end": 7758,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 7726,
											"end": 7758,
											"name": "tag",
											"source": 0,
											"value": "178"
										},
										{
											"begin": 7726,
											"end": 7758,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 7706,
											"end": 7793,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 7706,
											"end": 7793,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "179"
										},
										{
											"begin": 7706,
											"end": 7793,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 7706,
											"end": 7793,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 7786,
											"end": 7793,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 7762,
											"end": 7793,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 7762,
											"end": 7782,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "180"
										},
										{
											"begin": 7774,
											"end": 7781,
											"name": "DUP5",
											"source": 0
										},
										{
											"begin": 7762,
											"end": 7773,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "33"
										},
										{
											"begin": 7762,
											"end": 7782,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 7762,
											"end": 7782,
											"name": "tag",
											"source": 0,
											"value": "180"
										},
										{
											"begin": 7762,
											"end": 7782,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 7762,
											"end": 7793,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 7762,
											"end": 7793,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 7706,
											"end": 7793,
											"name": "tag",
											"source": 0,
											"value": "179"
										},
										{
											"begin": 7706,
											"end": 7793,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 7698,
											"end": 7794,
											"name": "SWAP5",
											"source": 0
										},
										{
											"begin": 7540,
											"end": 7801,
											"name": "SWAP4",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 7540,
											"end": 7801,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 11423,
											"end": 12656,
											"name": "tag",
											"source": 0,
											"value": "118"
										},
										{
											"begin": 11423,
											"end": 12656,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 11577,
											"end": 11581,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 11550,
											"end": 11581,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 11550,
											"end": 11573,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "182"
										},
										{
											"begin": 11565,
											"end": 11572,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 11550,
											"end": 11564,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "53"
										},
										{
											"begin": 11550,
											"end": 11573,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 11550,
											"end": 11573,
											"name": "tag",
											"source": 0,
											"value": "182"
										},
										{
											"begin": 11550,
											"end": 11573,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 11550,
											"end": 11581,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 11550,
											"end": 11581,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 11542,
											"end": 11623,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "183"
										},
										{
											"begin": 11542,
											"end": 11623,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 11542,
											"end": 11623,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 11542,
											"end": 11623,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "461BCD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E5"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 11542,
											"end": 11623,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 11542,
											"end": 11623,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 11542,
											"end": 11623,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 11542,
											"end": 11623,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 11542,
											"end": 11623,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "98"
										},
										{
											"begin": 11542,
											"end": 11623,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 11542,
											"end": 11623,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "185"
										},
										{
											"begin": 11542,
											"end": 11623,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 11542,
											"end": 11623,
											"name": "tag",
											"source": 0,
											"value": "183"
										},
										{
											"begin": 11542,
											"end": 11623,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 11641,
											"end": 11657,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 11641,
											"end": 11657,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 11633,
											"end": 11698,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "186"
										},
										{
											"begin": 11633,
											"end": 11698,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 11633,
											"end": 11698,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 11633,
											"end": 11698,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "461BCD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E5"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 11633,
											"end": 11698,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 11633,
											"end": 11698,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 8279,
											"end": 8281,
											"name": "PUSH",
											"source": 12,
											"value": "20"
										},
										{
											"begin": 11633,
											"end": 11698,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 11633,
											"end": 11698,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 11633,
											"end": 11698,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 8261,
											"end": 8282,
											"name": "MSTORE",
											"source": 12
										},
										{
											"begin": 8318,
											"end": 8320,
											"name": "PUSH",
											"source": 12,
											"value": "24"
										},
										{
											"begin": 8298,
											"end": 8316,
											"name": "DUP1",
											"source": 12
										},
										{
											"begin": 8298,
											"end": 8316,
											"name": "DUP3",
											"source": 12
										},
										{
											"begin": 8298,
											"end": 8316,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 8291,
											"end": 8321,
											"name": "MSTORE",
											"source": 12
										},
										{
											"begin": 8357,
											"end": 8391,
											"name": "PUSH",
											"source": 12,
											"value": "4552433732313A207472616E7366657220746F20746865207A65726F20616464"
										},
										{
											"begin": 8337,
											"end": 8355,
											"name": "PUSH",
											"source": 12,
											"value": "44"
										},
										{
											"begin": 8337,
											"end": 8355,
											"name": "DUP3",
											"source": 12
										},
										{
											"begin": 8337,
											"end": 8355,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 8330,
											"end": 8392,
											"name": "MSTORE",
											"source": 12
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "72657373"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 8408,
											"end": 8426,
											"name": "PUSH",
											"source": 12,
											"value": "64"
										},
										{
											"begin": 8408,
											"end": 8426,
											"name": "DUP3",
											"source": 12
										},
										{
											"begin": 8408,
											"end": 8426,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 8401,
											"end": 8435,
											"name": "MSTORE",
											"source": 12
										},
										{
											"begin": 8452,
											"end": 8471,
											"name": "PUSH",
											"source": 12,
											"value": "84"
										},
										{
											"begin": 8452,
											"end": 8471,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 11633,
											"end": 11698,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "98"
										},
										{
											"begin": 8077,
											"end": 8477,
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 11633,
											"end": 11698,
											"name": "tag",
											"source": 0,
											"value": "186"
										},
										{
											"begin": 11633,
											"end": 11698,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 11709,
											"end": 11751,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "189"
										},
										{
											"begin": 11730,
											"end": 11734,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 11736,
											"end": 11738,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 11740,
											"end": 11747,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 11749,
											"end": 11750,
											"name": "PUSH",
											"source": 0,
											"value": "1"
										},
										{
											"begin": 11709,
											"end": 11729,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "190"
										},
										{
											"begin": 11709,
											"end": 11751,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 11709,
											"end": 11751,
											"name": "tag",
											"source": 0,
											"value": "189"
										},
										{
											"begin": 11709,
											"end": 11751,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 11878,
											"end": 11882,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 11851,
											"end": 11882,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 11851,
											"end": 11874,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "191"
										},
										{
											"begin": 11866,
											"end": 11873,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 11851,
											"end": 11865,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "53"
										},
										{
											"begin": 11851,
											"end": 11874,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 11851,
											"end": 11874,
											"name": "tag",
											"source": 0,
											"value": "191"
										},
										{
											"begin": 11851,
											"end": 11874,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 11851,
											"end": 11882,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 11851,
											"end": 11882,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 11843,
											"end": 11924,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "192"
										},
										{
											"begin": 11843,
											"end": 11924,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 11843,
											"end": 11924,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 11843,
											"end": 11924,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "461BCD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E5"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 11843,
											"end": 11924,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 11843,
											"end": 11924,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 11843,
											"end": 11924,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 11843,
											"end": 11924,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 11843,
											"end": 11924,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "98"
										},
										{
											"begin": 11843,
											"end": 11924,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 11843,
											"end": 11924,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "185"
										},
										{
											"begin": 11843,
											"end": 11924,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 11843,
											"end": 11924,
											"name": "tag",
											"source": 0,
											"value": "192"
										},
										{
											"begin": 11843,
											"end": 11924,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 11993,
											"end": 12017,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 11993,
											"end": 12017,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 11993,
											"end": 12017,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 11993,
											"end": 12017,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 11993,
											"end": 12008,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 11993,
											"end": 12017,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 11993,
											"end": 12017,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 11993,
											"end": 12017,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 11993,
											"end": 12017,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 11993,
											"end": 12017,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 11993,
											"end": 12017,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 11993,
											"end": 12017,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 11993,
											"end": 12017,
											"name": "KECCAK256",
											"source": 0
										},
										{
											"begin": 11986,
											"end": 12017,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 11986,
											"end": 12017,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "NOT",
											"source": -1
										},
										{
											"begin": 11986,
											"end": 12017,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 11986,
											"end": 12017,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 11986,
											"end": 12017,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 11986,
											"end": 12017,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 11986,
											"end": 12017,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 11986,
											"end": 12017,
											"name": "SSTORE",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 12461,
											"end": 12476,
											"name": "DUP8",
											"source": 0
										},
										{
											"begin": 12461,
											"end": 12476,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 12461,
											"end": 12476,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 12461,
											"end": 12476,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 12461,
											"end": 12476,
											"name": "DUP7",
											"source": 0
										},
										{
											"begin": 12461,
											"end": 12476,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 12461,
											"end": 12470,
											"name": "PUSH",
											"source": 0,
											"value": "3"
										},
										{
											"begin": 12461,
											"end": 12476,
											"name": "DUP6",
											"source": 0
										},
										{
											"begin": 12461,
											"end": 12476,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 12461,
											"end": 12476,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 12461,
											"end": 12476,
											"name": "DUP7",
											"source": 0
										},
										{
											"begin": 12461,
											"end": 12476,
											"name": "KECCAK256",
											"source": 0
										},
										{
											"begin": 12461,
											"end": 12481,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 12461,
											"end": 12481,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "NOT",
											"source": -1
										},
										{
											"begin": 12461,
											"end": 12481,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 12461,
											"end": 12481,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 12461,
											"end": 12481,
											"name": "SSTORE",
											"source": 0
										},
										{
											"begin": 12495,
											"end": 12508,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 12495,
											"end": 12508,
											"name": "DUP8",
											"source": 0
										},
										{
											"begin": 12495,
											"end": 12508,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 12495,
											"end": 12508,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 12495,
											"end": 12508,
											"name": "DUP7",
											"source": 0
										},
										{
											"begin": 12495,
											"end": 12508,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 12495,
											"end": 12508,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 12495,
											"end": 12508,
											"name": "DUP7",
											"source": 0
										},
										{
											"begin": 12495,
											"end": 12508,
											"name": "KECCAK256",
											"source": 0
										},
										{
											"begin": 12495,
											"end": 12513,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 12495,
											"end": 12513,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 11986,
											"end": 12017,
											"name": "PUSH",
											"source": 0,
											"value": "1"
										},
										{
											"begin": 12495,
											"end": 12513,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 12495,
											"end": 12513,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 12495,
											"end": 12513,
											"name": "SSTORE",
											"source": 0
										},
										{
											"begin": 12533,
											"end": 12549,
											"name": "DUP7",
											"source": 0
										},
										{
											"begin": 12533,
											"end": 12549,
											"name": "DUP7",
											"source": 0
										},
										{
											"begin": 12533,
											"end": 12549,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 12533,
											"end": 12540,
											"name": "PUSH",
											"source": 0,
											"value": "2"
										},
										{
											"begin": 12533,
											"end": 12549,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 12533,
											"end": 12549,
											"name": "SWAP5",
											"source": 0
										},
										{
											"begin": 12533,
											"end": 12549,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 12533,
											"end": 12549,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 12533,
											"end": 12549,
											"name": "DUP6",
											"source": 0
										},
										{
											"begin": 12533,
											"end": 12549,
											"name": "KECCAK256",
											"source": 0
										},
										{
											"begin": 12533,
											"end": 12554,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 12533,
											"end": 12554,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 12533,
											"end": 12554,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 12533,
											"end": 12554,
											"name": "SWAP3",
											"source": 0
										},
										{
											"begin": 12533,
											"end": 12554,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 12533,
											"end": 12554,
											"name": "DUP5",
											"source": 0
										},
										{
											"begin": 12533,
											"end": 12554,
											"name": "OR",
											"source": 0
										},
										{
											"begin": 12533,
											"end": 12554,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 12533,
											"end": 12554,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 12533,
											"end": 12554,
											"name": "SSTORE",
											"source": 0
										},
										{
											"begin": 12570,
											"end": 12597,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 12570,
											"end": 12597,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 12009,
											"end": 12016,
											"name": "DUP5",
											"source": 0
										},
										{
											"begin": 12009,
											"end": 12016,
											"name": "SWAP4",
											"source": 0
										},
										{
											"begin": 12570,
											"end": 12597,
											"name": "PUSH",
											"source": 0,
											"value": "DDF252AD1BE2C89B69C2B068FC378DAA952BA7F163C4A11628F55A4DF523B3EF"
										},
										{
											"begin": 12570,
											"end": 12597,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 12570,
											"end": 12597,
											"name": "LOG4",
											"source": 0
										},
										{
											"begin": 3538,
											"end": 3874,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 3468,
											"end": 3874,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 3468,
											"end": 3874,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 3468,
											"end": 3874,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 8131,
											"end": 8239,
											"name": "tag",
											"source": 0,
											"value": "125"
										},
										{
											"begin": 8131,
											"end": 8239,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 8206,
											"end": 8232,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "124"
										},
										{
											"begin": 8216,
											"end": 8218,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 8220,
											"end": 8227,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 8206,
											"end": 8232,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 8206,
											"end": 8232,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 8206,
											"end": 8232,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 8206,
											"end": 8232,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 8206,
											"end": 8232,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 8206,
											"end": 8232,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 8206,
											"end": 8232,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 8206,
											"end": 8232,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 8206,
											"end": 8232,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 8206,
											"end": 8232,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 8206,
											"end": 8232,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 8206,
											"end": 8232,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 8206,
											"end": 8215,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "200"
										},
										{
											"begin": 8206,
											"end": 8232,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 13075,
											"end": 13382,
											"name": "tag",
											"source": 0,
											"value": "147"
										},
										{
											"begin": 13075,
											"end": 13382,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 13225,
											"end": 13233,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 13216,
											"end": 13233,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 13216,
											"end": 13221,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 13216,
											"end": 13233,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 13216,
											"end": 13233,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 13208,
											"end": 13263,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "203"
										},
										{
											"begin": 13208,
											"end": 13263,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 13208,
											"end": 13263,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 13208,
											"end": 13263,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "461BCD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E5"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 13208,
											"end": 13263,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 13208,
											"end": 13263,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 8684,
											"end": 8686,
											"name": "PUSH",
											"source": 12,
											"value": "20"
										},
										{
											"begin": 13208,
											"end": 13263,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 13208,
											"end": 13263,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 13208,
											"end": 13263,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 8666,
											"end": 8687,
											"name": "MSTORE",
											"source": 12
										},
										{
											"begin": 8723,
											"end": 8725,
											"name": "PUSH",
											"source": 12,
											"value": "19"
										},
										{
											"begin": 8703,
											"end": 8721,
											"name": "PUSH",
											"source": 12,
											"value": "24"
										},
										{
											"begin": 8703,
											"end": 8721,
											"name": "DUP3",
											"source": 12
										},
										{
											"begin": 8703,
											"end": 8721,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 8696,
											"end": 8726,
											"name": "MSTORE",
											"source": 12
										},
										{
											"begin": 8762,
											"end": 8789,
											"name": "PUSH",
											"source": 12,
											"value": "4552433732313A20617070726F766520746F2063616C6C657200000000000000"
										},
										{
											"begin": 8742,
											"end": 8760,
											"name": "PUSH",
											"source": 12,
											"value": "44"
										},
										{
											"begin": 8742,
											"end": 8760,
											"name": "DUP3",
											"source": 12
										},
										{
											"begin": 8742,
											"end": 8760,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 8735,
											"end": 8790,
											"name": "MSTORE",
											"source": 12
										},
										{
											"begin": 8807,
											"end": 8825,
											"name": "PUSH",
											"source": 12,
											"value": "64"
										},
										{
											"begin": 8807,
											"end": 8825,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 13208,
											"end": 13263,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "98"
										},
										{
											"begin": 8482,
											"end": 8831,
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 13208,
											"end": 13263,
											"name": "tag",
											"source": 0,
											"value": "203"
										},
										{
											"begin": 13208,
											"end": 13263,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 13273,
											"end": 13298,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 13273,
											"end": 13298,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 13273,
											"end": 13298,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 13273,
											"end": 13298,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 13273,
											"end": 13298,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 13273,
											"end": 13298,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 13273,
											"end": 13298,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 13273,
											"end": 13291,
											"name": "PUSH",
											"source": 0,
											"value": "5"
										},
										{
											"begin": 13273,
											"end": 13298,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 13273,
											"end": 13298,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 13273,
											"end": 13298,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 13273,
											"end": 13298,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 13273,
											"end": 13298,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 13273,
											"end": 13298,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 13273,
											"end": 13298,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 13273,
											"end": 13298,
											"name": "KECCAK256",
											"source": 0
										},
										{
											"begin": 13273,
											"end": 13308,
											"name": "SWAP5",
											"source": 0
										},
										{
											"begin": 13273,
											"end": 13308,
											"name": "DUP8",
											"source": 0
										},
										{
											"begin": 13273,
											"end": 13308,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 13273,
											"end": 13308,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 13273,
											"end": 13308,
											"name": "DUP5",
											"source": 0
										},
										{
											"begin": 13273,
											"end": 13308,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 13273,
											"end": 13308,
											"name": "SWAP5",
											"source": 0
										},
										{
											"begin": 13273,
											"end": 13308,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 13273,
											"end": 13308,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 13273,
											"end": 13308,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 13273,
											"end": 13308,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 13273,
											"end": 13308,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 13273,
											"end": 13308,
											"name": "KECCAK256",
											"source": 0
										},
										{
											"begin": 13273,
											"end": 13319,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 13273,
											"end": 13319,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "FF"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "NOT",
											"source": -1
										},
										{
											"begin": 13273,
											"end": 13319,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 13273,
											"end": 13319,
											"name": "DUP7",
											"source": 0
										},
										{
											"begin": 13273,
											"end": 13319,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 13273,
											"end": 13319,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 13273,
											"end": 13319,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 13273,
											"end": 13319,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 13273,
											"end": 13319,
											"name": "OR",
											"source": 0
										},
										{
											"begin": 13273,
											"end": 13319,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 13273,
											"end": 13319,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 13273,
											"end": 13319,
											"name": "SSTORE",
											"source": 0
										},
										{
											"begin": 13334,
											"end": 13375,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 13334,
											"end": 13375,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 540,
											"end": 581,
											"name": "SWAP2",
											"source": 12
										},
										{
											"begin": 540,
											"end": 581,
											"name": "DUP3",
											"source": 12
										},
										{
											"begin": 540,
											"end": 581,
											"name": "MSTORE",
											"source": 12
										},
										{
											"begin": 13334,
											"end": 13375,
											"name": "PUSH",
											"source": 0,
											"value": "17307EAB39AB6107E8899845AD3D59BD9653F200F220920489CA2B5937696C31"
										},
										{
											"begin": 13334,
											"end": 13375,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 513,
											"end": 531,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 13334,
											"end": 13375,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 13334,
											"end": 13375,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 13334,
											"end": 13375,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 13334,
											"end": 13375,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 13334,
											"end": 13375,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 13334,
											"end": 13375,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 13334,
											"end": 13375,
											"name": "LOG3",
											"source": 0
										},
										{
											"begin": 13075,
											"end": 13382,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 13075,
											"end": 13382,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 13075,
											"end": 13382,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 13075,
											"end": 13382,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 6424,
											"end": 6729,
											"name": "tag",
											"source": 0,
											"value": "154"
										},
										{
											"begin": 6424,
											"end": 6729,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 6574,
											"end": 6602,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "208"
										},
										{
											"begin": 6584,
											"end": 6588,
											"name": "DUP5",
											"source": 0
										},
										{
											"begin": 6590,
											"end": 6592,
											"name": "DUP5",
											"source": 0
										},
										{
											"begin": 6594,
											"end": 6601,
											"name": "DUP5",
											"source": 0
										},
										{
											"begin": 6574,
											"end": 6583,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "118"
										},
										{
											"begin": 6574,
											"end": 6602,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 6574,
											"end": 6602,
											"name": "tag",
											"source": 0,
											"value": "208"
										},
										{
											"begin": 6574,
											"end": 6602,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 6620,
											"end": 6667,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "209"
										},
										{
											"begin": 6643,
											"end": 6647,
											"name": "DUP5",
											"source": 0
										},
										{
											"begin": 6649,
											"end": 6651,
											"name": "DUP5",
											"source": 0
										},
										{
											"begin": 6653,
											"end": 6660,
											"name": "DUP5",
											"source": 0
										},
										{
											"begin": 6662,
											"end": 6666,
											"name": "DUP5",
											"source": 0
										},
										{
											"begin": 6620,
											"end": 6642,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "210"
										},
										{
											"begin": 6620,
											"end": 6667,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 6620,
											"end": 6667,
											"name": "tag",
											"source": 0,
											"value": "209"
										},
										{
											"begin": 6620,
											"end": 6667,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 6612,
											"end": 6722,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "153"
										},
										{
											"begin": 6612,
											"end": 6722,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 6612,
											"end": 6722,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 6612,
											"end": 6722,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "461BCD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E5"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 6612,
											"end": 6722,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 6612,
											"end": 6722,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 6612,
											"end": 6722,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 6612,
											"end": 6722,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 6612,
											"end": 6722,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "98"
										},
										{
											"begin": 6612,
											"end": 6722,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 6612,
											"end": 6722,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "213"
										},
										{
											"begin": 6612,
											"end": 6722,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 415,
											"end": 1111,
											"name": "tag",
											"source": 7,
											"value": "162"
										},
										{
											"begin": 415,
											"end": 1111,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 471,
											"end": 484,
											"name": "PUSH",
											"source": 7,
											"value": "60"
										},
										{
											"begin": 520,
											"end": 534,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 537,
											"end": 554,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "216"
										},
										{
											"begin": 548,
											"end": 553,
											"name": "DUP4",
											"source": 7
										},
										{
											"begin": 537,
											"end": 547,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "217"
										},
										{
											"begin": 537,
											"end": 554,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 537,
											"end": 554,
											"name": "tag",
											"source": 7,
											"value": "216"
										},
										{
											"begin": 537,
											"end": 554,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 557,
											"end": 558,
											"name": "PUSH",
											"source": 7,
											"value": "1"
										},
										{
											"begin": 537,
											"end": 558,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 520,
											"end": 558,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 520,
											"end": 558,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 572,
											"end": 592,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 606,
											"end": 612,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 595,
											"end": 613,
											"name": "PUSH",
											"source": 7,
											"value": "FFFFFFFFFFFFFFFF"
										},
										{
											"begin": 595,
											"end": 613,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 595,
											"end": 613,
											"name": "GT",
											"source": 7
										},
										{
											"begin": 595,
											"end": 613,
											"name": "ISZERO",
											"source": 7
										},
										{
											"begin": 595,
											"end": 613,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "219"
										},
										{
											"begin": 595,
											"end": 613,
											"name": "JUMPI",
											"source": 7
										},
										{
											"begin": 595,
											"end": 613,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "219"
										},
										{
											"begin": 595,
											"end": 613,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "220"
										},
										{
											"begin": 595,
											"end": 613,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 595,
											"end": 613,
											"name": "tag",
											"source": 7,
											"value": "219"
										},
										{
											"begin": 595,
											"end": 613,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 595,
											"end": 613,
											"name": "PUSH",
											"source": 7,
											"value": "40"
										},
										{
											"begin": 595,
											"end": 613,
											"name": "MLOAD",
											"source": 7
										},
										{
											"begin": 595,
											"end": 613,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 595,
											"end": 613,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 595,
											"end": 613,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 595,
											"end": 613,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 595,
											"end": 613,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 595,
											"end": 613,
											"name": "PUSH",
											"source": 7,
											"value": "1F"
										},
										{
											"begin": 595,
											"end": 613,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 595,
											"end": 613,
											"name": "PUSH",
											"source": 7,
											"value": "1F"
										},
										{
											"begin": 595,
											"end": 613,
											"name": "NOT",
											"source": 7
										},
										{
											"begin": 595,
											"end": 613,
											"name": "AND",
											"source": 7
										},
										{
											"begin": 595,
											"end": 613,
											"name": "PUSH",
											"source": 7,
											"value": "20"
										},
										{
											"begin": 595,
											"end": 613,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 595,
											"end": 613,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 595,
											"end": 613,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 595,
											"end": 613,
											"name": "PUSH",
											"source": 7,
											"value": "40"
										},
										{
											"begin": 595,
											"end": 613,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 595,
											"end": 613,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 595,
											"end": 613,
											"name": "ISZERO",
											"source": 7
										},
										{
											"begin": 595,
											"end": 613,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "221"
										},
										{
											"begin": 595,
											"end": 613,
											"name": "JUMPI",
											"source": 7
										},
										{
											"begin": 595,
											"end": 613,
											"name": "PUSH",
											"source": 7,
											"value": "20"
										},
										{
											"begin": 595,
											"end": 613,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 595,
											"end": 613,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 595,
											"end": 613,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 595,
											"end": 613,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 595,
											"end": 613,
											"name": "CALLDATASIZE",
											"source": 7
										},
										{
											"begin": 595,
											"end": 613,
											"name": "DUP4",
											"source": 7
										},
										{
											"begin": 595,
											"end": 613,
											"name": "CALLDATACOPY",
											"source": 7
										},
										{
											"begin": 595,
											"end": 613,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 595,
											"end": 613,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 595,
											"end": 613,
											"name": "tag",
											"source": 7,
											"value": "221"
										},
										{
											"begin": 595,
											"end": 613,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 572,
											"end": 613,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 733,
											"end": 761,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 733,
											"end": 761,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 733,
											"end": 761,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 749,
											"end": 751,
											"name": "PUSH",
											"source": 7,
											"value": "20"
										},
										{
											"begin": 733,
											"end": 761,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 788,
											"end": 1068,
											"name": "tag",
											"source": 7,
											"value": "222"
										},
										{
											"begin": 788,
											"end": 1068,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "NOT",
											"source": -1
										},
										{
											"begin": 819,
											"end": 824,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "181899199A1A9B1B9C1CB0B131B232B3"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "81"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 953,
											"end": 955,
											"name": "PUSH",
											"source": 7,
											"value": "A"
										},
										{
											"begin": 942,
											"end": 956,
											"name": "DUP7",
											"source": 7
										},
										{
											"begin": 942,
											"end": 956,
											"name": "MOD",
											"source": 7
										},
										{
											"begin": 937,
											"end": 967,
											"name": "BYTE",
											"source": 7
										},
										{
											"begin": 819,
											"end": 824,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 924,
											"end": 968,
											"name": "MSTORE8",
											"source": 7
										},
										{
											"begin": 1012,
											"end": 1014,
											"name": "PUSH",
											"source": 7,
											"value": "A"
										},
										{
											"begin": 1003,
											"end": 1014,
											"name": "DUP6",
											"source": 7
										},
										{
											"begin": 1003,
											"end": 1014,
											"name": "DIV",
											"source": 7
										},
										{
											"begin": 1003,
											"end": 1014,
											"name": "SWAP5",
											"source": 7
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 1032,
											"end": 1053,
											"name": "DUP5",
											"source": 7
										},
										{
											"begin": 788,
											"end": 1068,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "222"
										},
										{
											"begin": 1032,
											"end": 1053,
											"name": "JUMPI",
											"source": 7
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 1088,
											"end": 1094,
											"name": "SWAP4",
											"source": 7
										},
										{
											"begin": 415,
											"end": 1111,
											"name": "SWAP3",
											"source": 7
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 415,
											"end": 1111,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 15698,
											"end": 16094,
											"name": "tag",
											"source": 0,
											"value": "190"
										},
										{
											"begin": 15698,
											"end": 16094,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 15882,
											"end": 15883,
											"name": "PUSH",
											"source": 0,
											"value": "1"
										},
										{
											"begin": 15870,
											"end": 15879,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 15870,
											"end": 15883,
											"name": "GT",
											"source": 0
										},
										{
											"begin": 15866,
											"end": 16088,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 15866,
											"end": 16088,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "153"
										},
										{
											"begin": 15866,
											"end": 16088,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 15903,
											"end": 15921,
											"name": "DUP5",
											"source": 0
										},
										{
											"begin": 15903,
											"end": 15921,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 15903,
											"end": 15921,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 15899,
											"end": 15984,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "232"
										},
										{
											"begin": 15899,
											"end": 15984,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 15941,
											"end": 15956,
											"name": "DUP5",
											"source": 0
										},
										{
											"begin": 15941,
											"end": 15956,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 15941,
											"end": 15956,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 15941,
											"end": 15956,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 15941,
											"end": 15956,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 15941,
											"end": 15956,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 15941,
											"end": 15950,
											"name": "PUSH",
											"source": 0,
											"value": "3"
										},
										{
											"begin": 15941,
											"end": 15956,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 15941,
											"end": 15956,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 15941,
											"end": 15956,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 15941,
											"end": 15956,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 15941,
											"end": 15956,
											"name": "KECCAK256",
											"source": 0
										},
										{
											"begin": 15941,
											"end": 15969,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 15941,
											"end": 15969,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 15960,
											"end": 15969,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 15960,
											"end": 15969,
											"name": "SWAP3",
											"source": 0
										},
										{
											"begin": 15941,
											"end": 15956,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 15941,
											"end": 15969,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "233"
										},
										{
											"begin": 15941,
											"end": 15969,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 15960,
											"end": 15969,
											"name": "DUP5",
											"source": 0
										},
										{
											"begin": 15960,
											"end": 15969,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 15941,
											"end": 15969,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "234"
										},
										{
											"begin": 15941,
											"end": 15969,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 15941,
											"end": 15969,
											"name": "tag",
											"source": 0,
											"value": "233"
										},
										{
											"begin": 15941,
											"end": 15969,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 15941,
											"end": 15969,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 15941,
											"end": 15969,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 15941,
											"end": 15969,
											"name": "SSTORE",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 15899,
											"end": 15984,
											"name": "tag",
											"source": 0,
											"value": "232"
										},
										{
											"begin": 15899,
											"end": 15984,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 16001,
											"end": 16017,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 16001,
											"end": 16017,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 16001,
											"end": 16017,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 15997,
											"end": 16078,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "153"
										},
										{
											"begin": 15997,
											"end": 16078,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 16037,
											"end": 16050,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 16037,
											"end": 16050,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 16037,
											"end": 16050,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 16037,
											"end": 16050,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 16037,
											"end": 16050,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 16037,
											"end": 16050,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 16037,
											"end": 16046,
											"name": "PUSH",
											"source": 0,
											"value": "3"
										},
										{
											"begin": 16037,
											"end": 16050,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 16037,
											"end": 16050,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 16037,
											"end": 16050,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 16037,
											"end": 16050,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 16037,
											"end": 16050,
											"name": "KECCAK256",
											"source": 0
										},
										{
											"begin": 16037,
											"end": 16063,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 16037,
											"end": 16063,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 16054,
											"end": 16063,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 16054,
											"end": 16063,
											"name": "SWAP3",
											"source": 0
										},
										{
											"begin": 16037,
											"end": 16050,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 16037,
											"end": 16063,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "236"
										},
										{
											"begin": 16037,
											"end": 16063,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 16054,
											"end": 16063,
											"name": "DUP5",
											"source": 0
										},
										{
											"begin": 16054,
											"end": 16063,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 16037,
											"end": 16063,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "237"
										},
										{
											"begin": 16037,
											"end": 16063,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 16037,
											"end": 16063,
											"name": "tag",
											"source": 0,
											"value": "236"
										},
										{
											"begin": 16037,
											"end": 16063,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 16037,
											"end": 16063,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 16037,
											"end": 16063,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 16037,
											"end": 16063,
											"name": "SSTORE",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 15698,
											"end": 16094,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 15698,
											"end": 16094,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 15698,
											"end": 16094,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 15698,
											"end": 16094,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 15698,
											"end": 16094,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 8460,
											"end": 8769,
											"name": "tag",
											"source": 0,
											"value": "200"
										},
										{
											"begin": 8460,
											"end": 8769,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 8584,
											"end": 8602,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "240"
										},
										{
											"begin": 8590,
											"end": 8592,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 8594,
											"end": 8601,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 8584,
											"end": 8589,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "241"
										},
										{
											"begin": 8584,
											"end": 8602,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 8584,
											"end": 8602,
											"name": "tag",
											"source": 0,
											"value": "240"
										},
										{
											"begin": 8584,
											"end": 8602,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 8633,
											"end": 8686,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "242"
										},
										{
											"begin": 8664,
											"end": 8665,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 8668,
											"end": 8670,
											"name": "DUP5",
											"source": 0
										},
										{
											"begin": 8672,
											"end": 8679,
											"name": "DUP5",
											"source": 0
										},
										{
											"begin": 8681,
											"end": 8685,
											"name": "DUP5",
											"source": 0
										},
										{
											"begin": 8633,
											"end": 8655,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "210"
										},
										{
											"begin": 8633,
											"end": 8686,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 8633,
											"end": 8686,
											"name": "tag",
											"source": 0,
											"value": "242"
										},
										{
											"begin": 8633,
											"end": 8686,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 8612,
											"end": 8762,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "108"
										},
										{
											"begin": 8612,
											"end": 8762,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 8612,
											"end": 8762,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 8612,
											"end": 8762,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "461BCD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E5"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 8612,
											"end": 8762,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 8612,
											"end": 8762,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 8612,
											"end": 8762,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 8612,
											"end": 8762,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 8612,
											"end": 8762,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "98"
										},
										{
											"begin": 8612,
											"end": 8762,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 8612,
											"end": 8762,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "213"
										},
										{
											"begin": 8612,
											"end": 8762,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 14151,
											"end": 14982,
											"name": "tag",
											"source": 0,
											"value": "210"
										},
										{
											"begin": 14151,
											"end": 14982,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 14300,
											"end": 14304,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 14320,
											"end": 14333,
											"name": "DUP5",
											"source": 0
										},
										{
											"begin": 14320,
											"end": 14333,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 1465,
											"end": 1484,
											"name": "EXTCODESIZE",
											"source": 4
										},
										{
											"begin": 1465,
											"end": 1488,
											"name": "ISZERO",
											"source": 4
										},
										{
											"begin": 14316,
											"end": 14976,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "248"
										},
										{
											"begin": 14316,
											"end": 14976,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 14355,
											"end": 14426,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 14355,
											"end": 14426,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A85BD01"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 14355,
											"end": 14426,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 14355,
											"end": 14426,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 14355,
											"end": 14391,
											"name": "DUP6",
											"source": 0
										},
										{
											"begin": 14355,
											"end": 14391,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 14355,
											"end": 14391,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 14355,
											"end": 14391,
											"name": "PUSH",
											"source": 0,
											"value": "150B7A02"
										},
										{
											"begin": 14355,
											"end": 14391,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 14355,
											"end": 14426,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "250"
										},
										{
											"begin": 14355,
											"end": 14426,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 719,
											"end": 729,
											"name": "CALLER",
											"source": 5
										},
										{
											"begin": 719,
											"end": 729,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 14406,
											"end": 14410,
											"name": "DUP10",
											"source": 0
										},
										{
											"begin": 14406,
											"end": 14410,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 14412,
											"end": 14419,
											"name": "DUP9",
											"source": 0
										},
										{
											"begin": 14412,
											"end": 14419,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 14421,
											"end": 14425,
											"name": "DUP9",
											"source": 0
										},
										{
											"begin": 14421,
											"end": 14425,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 14355,
											"end": 14426,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 14355,
											"end": 14426,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 14355,
											"end": 14426,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "251"
										},
										{
											"begin": 14355,
											"end": 14426,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 14355,
											"end": 14426,
											"name": "tag",
											"source": 0,
											"value": "250"
										},
										{
											"begin": 14355,
											"end": 14426,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 14355,
											"end": 14426,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 14355,
											"end": 14426,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 14355,
											"end": 14426,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 14355,
											"end": 14426,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 14355,
											"end": 14426,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 14355,
											"end": 14426,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 14355,
											"end": 14426,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 14355,
											"end": 14426,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 14355,
											"end": 14426,
											"name": "DUP8",
											"source": 0
										},
										{
											"begin": 14355,
											"end": 14426,
											"name": "GAS",
											"source": 0
										},
										{
											"begin": 14355,
											"end": 14426,
											"name": "CALL",
											"source": 0
										},
										{
											"begin": 14355,
											"end": 14426,
											"name": "SWAP3",
											"source": 0
										},
										{
											"begin": 14355,
											"end": 14426,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 14355,
											"end": 14426,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 14355,
											"end": 14426,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 14355,
											"end": 14426,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 14355,
											"end": 14426,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 14355,
											"end": 14426,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "252"
										},
										{
											"begin": 14355,
											"end": 14426,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 14355,
											"end": 14426,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 14355,
											"end": 14426,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 14355,
											"end": 14426,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 14355,
											"end": 14426,
											"name": "PUSH",
											"source": 0,
											"value": "1F"
										},
										{
											"begin": 14355,
											"end": 14426,
											"name": "RETURNDATASIZE",
											"source": 0
										},
										{
											"begin": 14355,
											"end": 14426,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 14355,
											"end": 14426,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 14355,
											"end": 14426,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1F"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "NOT",
											"source": -1
										},
										{
											"begin": 14355,
											"end": 14426,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 14355,
											"end": 14426,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 14355,
											"end": 14426,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 14355,
											"end": 14426,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 14355,
											"end": 14426,
											"name": "SWAP3",
											"source": 0
										},
										{
											"begin": 14355,
											"end": 14426,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 14355,
											"end": 14426,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "253"
										},
										{
											"begin": 14355,
											"end": 14426,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 14355,
											"end": 14426,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 14355,
											"end": 14426,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 14355,
											"end": 14426,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 14355,
											"end": 14426,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "254"
										},
										{
											"begin": 14355,
											"end": 14426,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 14355,
											"end": 14426,
											"name": "tag",
											"source": 0,
											"value": "253"
										},
										{
											"begin": 14355,
											"end": 14426,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 14355,
											"end": 14426,
											"name": "PUSH",
											"source": 0,
											"value": "1"
										},
										{
											"begin": 14355,
											"end": 14426,
											"name": "tag",
											"source": 0,
											"value": "252"
										},
										{
											"begin": 14355,
											"end": 14426,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 14351,
											"end": 14924,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "255"
										},
										{
											"begin": 14351,
											"end": 14924,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 14351,
											"end": 14924,
											"name": "RETURNDATASIZE",
											"source": 0
										},
										{
											"begin": 14351,
											"end": 14924,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 14351,
											"end": 14924,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 14351,
											"end": 14924,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 14351,
											"end": 14924,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "260"
										},
										{
											"begin": 14351,
											"end": 14924,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 14351,
											"end": 14924,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 14351,
											"end": 14924,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 14351,
											"end": 14924,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 14351,
											"end": 14924,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 14351,
											"end": 14924,
											"name": "PUSH",
											"source": 0,
											"value": "1F"
										},
										{
											"begin": 14351,
											"end": 14924,
											"name": "NOT",
											"source": 0
										},
										{
											"begin": 14351,
											"end": 14924,
											"name": "PUSH",
											"source": 0,
											"value": "3F"
										},
										{
											"begin": 14351,
											"end": 14924,
											"name": "RETURNDATASIZE",
											"source": 0
										},
										{
											"begin": 14351,
											"end": 14924,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 14351,
											"end": 14924,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 14351,
											"end": 14924,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 14351,
											"end": 14924,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 14351,
											"end": 14924,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 14351,
											"end": 14924,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 14351,
											"end": 14924,
											"name": "RETURNDATASIZE",
											"source": 0
										},
										{
											"begin": 14351,
											"end": 14924,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 14351,
											"end": 14924,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 14351,
											"end": 14924,
											"name": "RETURNDATASIZE",
											"source": 0
										},
										{
											"begin": 14351,
											"end": 14924,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 14351,
											"end": 14924,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 14351,
											"end": 14924,
											"name": "DUP5",
											"source": 0
										},
										{
											"begin": 14351,
											"end": 14924,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 14351,
											"end": 14924,
											"name": "RETURNDATACOPY",
											"source": 0
										},
										{
											"begin": 14351,
											"end": 14924,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "259"
										},
										{
											"begin": 14351,
											"end": 14924,
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 14351,
											"end": 14924,
											"name": "tag",
											"source": 0,
											"value": "260"
										},
										{
											"begin": 14351,
											"end": 14924,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 14351,
											"end": 14924,
											"name": "PUSH",
											"source": 0,
											"value": "60"
										},
										{
											"begin": 14351,
											"end": 14924,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 14351,
											"end": 14924,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 14351,
											"end": 14924,
											"name": "tag",
											"source": 0,
											"value": "259"
										},
										{
											"begin": 14351,
											"end": 14924,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 14351,
											"end": 14924,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 14593,
											"end": 14599,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 14593,
											"end": 14606,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 14610,
											"end": 14611,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 14593,
											"end": 14611,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 14589,
											"end": 14910,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "261"
										},
										{
											"begin": 14589,
											"end": 14910,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 14635,
											"end": 14695,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 14635,
											"end": 14695,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "461BCD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E5"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 14635,
											"end": 14695,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 14635,
											"end": 14695,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 14635,
											"end": 14695,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 14635,
											"end": 14695,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 14635,
											"end": 14695,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "98"
										},
										{
											"begin": 14635,
											"end": 14695,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 14635,
											"end": 14695,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "213"
										},
										{
											"begin": 14635,
											"end": 14695,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 14589,
											"end": 14910,
											"name": "tag",
											"source": 0,
											"value": "261"
										},
										{
											"begin": 14589,
											"end": 14910,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 14862,
											"end": 14868,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 14856,
											"end": 14869,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 14847,
											"end": 14853,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 14843,
											"end": 14845,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 14839,
											"end": 14854,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 14832,
											"end": 14870,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 14351,
											"end": 14924,
											"name": "tag",
											"source": 0,
											"value": "255"
										},
										{
											"begin": 14351,
											"end": 14924,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "NOT",
											"source": -1
										},
										{
											"begin": 14476,
											"end": 14527,
											"name": "AND",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A85BD01"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 14476,
											"end": 14527,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 14476,
											"end": 14527,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 14469,
											"end": 14527,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "179"
										},
										{
											"begin": 14469,
											"end": 14527,
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 14316,
											"end": 14976,
											"name": "tag",
											"source": 0,
											"value": "248"
										},
										{
											"begin": 14316,
											"end": 14976,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 14961,
											"end": 14965,
											"name": "PUSH",
											"source": 0,
											"value": "1"
										},
										{
											"begin": 14151,
											"end": 14982,
											"name": "SWAP5",
											"source": 0
										},
										{
											"begin": 14151,
											"end": 14982,
											"name": "SWAP4",
											"source": 0
										},
										{
											"begin": 14151,
											"end": 14982,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 14151,
											"end": 14982,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 14151,
											"end": 14982,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 14151,
											"end": 14982,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 14151,
											"end": 14982,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 9889,
											"end": 10779,
											"name": "tag",
											"source": 10,
											"value": "217"
										},
										{
											"begin": 9889,
											"end": 10779,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 9942,
											"end": 9949,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 9942,
											"end": 9949,
											"name": "DUP1",
											"source": 10
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "184F03E93FF9F4DAA797ED6E38ED64BF6A1F01"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "40"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 10017,
											"end": 10032,
											"name": "DUP4",
											"source": 10
										},
										{
											"begin": 10017,
											"end": 10032,
											"name": "LT",
											"source": 10
										},
										{
											"begin": 10013,
											"end": 10112,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "267"
										},
										{
											"begin": 10013,
											"end": 10112,
											"name": "JUMPI",
											"source": 10
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "184F03E93FF9F4DAA797ED6E38ED64BF6A1F01"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "40"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 10052,
											"end": 10067,
											"name": "DUP4",
											"source": 10
										},
										{
											"begin": 10052,
											"end": 10067,
											"name": "DIV",
											"source": 10
										},
										{
											"begin": 10052,
											"end": 10067,
											"name": "SWAP3",
											"source": 10
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 10095,
											"end": 10097,
											"name": "PUSH",
											"source": 10,
											"value": "40"
										},
										{
											"begin": 10085,
											"end": 10097,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 10013,
											"end": 10112,
											"name": "tag",
											"source": 10,
											"value": "267"
										},
										{
											"begin": 10013,
											"end": 10112,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 10138,
											"end": 10144,
											"name": "PUSH",
											"source": 10,
											"value": "4EE2D6D415B85ACEF8100000000"
										},
										{
											"begin": 10129,
											"end": 10134,
											"name": "DUP4",
											"source": 10
										},
										{
											"begin": 10129,
											"end": 10144,
											"name": "LT",
											"source": 10
										},
										{
											"begin": 10125,
											"end": 10224,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "270"
										},
										{
											"begin": 10125,
											"end": 10224,
											"name": "JUMPI",
											"source": 10
										},
										{
											"begin": 10173,
											"end": 10179,
											"name": "PUSH",
											"source": 10,
											"value": "4EE2D6D415B85ACEF8100000000"
										},
										{
											"begin": 10164,
											"end": 10179,
											"name": "DUP4",
											"source": 10
										},
										{
											"begin": 10164,
											"end": 10179,
											"name": "DIV",
											"source": 10
										},
										{
											"begin": 10164,
											"end": 10179,
											"name": "SWAP3",
											"source": 10
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 10207,
											"end": 10209,
											"name": "PUSH",
											"source": 10,
											"value": "20"
										},
										{
											"begin": 10197,
											"end": 10209,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 10125,
											"end": 10224,
											"name": "tag",
											"source": 10,
											"value": "270"
										},
										{
											"begin": 10125,
											"end": 10224,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 10250,
											"end": 10256,
											"name": "PUSH",
											"source": 10,
											"value": "2386F26FC10000"
										},
										{
											"begin": 10241,
											"end": 10246,
											"name": "DUP4",
											"source": 10
										},
										{
											"begin": 10241,
											"end": 10256,
											"name": "LT",
											"source": 10
										},
										{
											"begin": 10237,
											"end": 10336,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "273"
										},
										{
											"begin": 10237,
											"end": 10336,
											"name": "JUMPI",
											"source": 10
										},
										{
											"begin": 10285,
											"end": 10291,
											"name": "PUSH",
											"source": 10,
											"value": "2386F26FC10000"
										},
										{
											"begin": 10276,
											"end": 10291,
											"name": "DUP4",
											"source": 10
										},
										{
											"begin": 10276,
											"end": 10291,
											"name": "DIV",
											"source": 10
										},
										{
											"begin": 10276,
											"end": 10291,
											"name": "SWAP3",
											"source": 10
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 10319,
											"end": 10321,
											"name": "PUSH",
											"source": 10,
											"value": "10"
										},
										{
											"begin": 10309,
											"end": 10321,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 10237,
											"end": 10336,
											"name": "tag",
											"source": 10,
											"value": "273"
										},
										{
											"begin": 10237,
											"end": 10336,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 10362,
											"end": 10367,
											"name": "PUSH",
											"source": 10,
											"value": "5F5E100"
										},
										{
											"begin": 10353,
											"end": 10358,
											"name": "DUP4",
											"source": 10
										},
										{
											"begin": 10353,
											"end": 10367,
											"name": "LT",
											"source": 10
										},
										{
											"begin": 10349,
											"end": 10445,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "276"
										},
										{
											"begin": 10349,
											"end": 10445,
											"name": "JUMPI",
											"source": 10
										},
										{
											"begin": 10396,
											"end": 10401,
											"name": "PUSH",
											"source": 10,
											"value": "5F5E100"
										},
										{
											"begin": 10387,
											"end": 10401,
											"name": "DUP4",
											"source": 10
										},
										{
											"begin": 10387,
											"end": 10401,
											"name": "DIV",
											"source": 10
										},
										{
											"begin": 10387,
											"end": 10401,
											"name": "SWAP3",
											"source": 10
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 10429,
											"end": 10430,
											"name": "PUSH",
											"source": 10,
											"value": "8"
										},
										{
											"begin": 10419,
											"end": 10430,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 10349,
											"end": 10445,
											"name": "tag",
											"source": 10,
											"value": "276"
										},
										{
											"begin": 10349,
											"end": 10445,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 10471,
											"end": 10476,
											"name": "PUSH",
											"source": 10,
											"value": "2710"
										},
										{
											"begin": 10462,
											"end": 10467,
											"name": "DUP4",
											"source": 10
										},
										{
											"begin": 10462,
											"end": 10476,
											"name": "LT",
											"source": 10
										},
										{
											"begin": 10458,
											"end": 10554,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "279"
										},
										{
											"begin": 10458,
											"end": 10554,
											"name": "JUMPI",
											"source": 10
										},
										{
											"begin": 10505,
											"end": 10510,
											"name": "PUSH",
											"source": 10,
											"value": "2710"
										},
										{
											"begin": 10496,
											"end": 10510,
											"name": "DUP4",
											"source": 10
										},
										{
											"begin": 10496,
											"end": 10510,
											"name": "DIV",
											"source": 10
										},
										{
											"begin": 10496,
											"end": 10510,
											"name": "SWAP3",
											"source": 10
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 10538,
											"end": 10539,
											"name": "PUSH",
											"source": 10,
											"value": "4"
										},
										{
											"begin": 10528,
											"end": 10539,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 10458,
											"end": 10554,
											"name": "tag",
											"source": 10,
											"value": "279"
										},
										{
											"begin": 10458,
											"end": 10554,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 10580,
											"end": 10585,
											"name": "PUSH",
											"source": 10,
											"value": "64"
										},
										{
											"begin": 10571,
											"end": 10576,
											"name": "DUP4",
											"source": 10
										},
										{
											"begin": 10571,
											"end": 10585,
											"name": "LT",
											"source": 10
										},
										{
											"begin": 10567,
											"end": 10663,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "282"
										},
										{
											"begin": 10567,
											"end": 10663,
											"name": "JUMPI",
											"source": 10
										},
										{
											"begin": 10614,
											"end": 10619,
											"name": "PUSH",
											"source": 10,
											"value": "64"
										},
										{
											"begin": 10605,
											"end": 10619,
											"name": "DUP4",
											"source": 10
										},
										{
											"begin": 10605,
											"end": 10619,
											"name": "DIV",
											"source": 10
										},
										{
											"begin": 10605,
											"end": 10619,
											"name": "SWAP3",
											"source": 10
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 10647,
											"end": 10648,
											"name": "PUSH",
											"source": 10,
											"value": "2"
										},
										{
											"begin": 10637,
											"end": 10648,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 10567,
											"end": 10663,
											"name": "tag",
											"source": 10,
											"value": "282"
										},
										{
											"begin": 10567,
											"end": 10663,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 10689,
											"end": 10694,
											"name": "PUSH",
											"source": 10,
											"value": "A"
										},
										{
											"begin": 10680,
											"end": 10685,
											"name": "DUP4",
											"source": 10
										},
										{
											"begin": 10680,
											"end": 10694,
											"name": "LT",
											"source": 10
										},
										{
											"begin": 10676,
											"end": 10740,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "83"
										},
										{
											"begin": 10676,
											"end": 10740,
											"name": "JUMPI",
											"source": 10
										},
										{
											"begin": 10724,
											"end": 10725,
											"name": "PUSH",
											"source": 10,
											"value": "1"
										},
										{
											"begin": 10714,
											"end": 10725,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 10766,
											"end": 10772,
											"name": "SWAP3",
											"source": 10
										},
										{
											"begin": 9889,
											"end": 10779,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 9889,
											"end": 10779,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 9091,
											"end": 10011,
											"name": "tag",
											"source": 0,
											"value": "241"
										},
										{
											"begin": 9091,
											"end": 10011,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 9170,
											"end": 9186,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 9170,
											"end": 9186,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 9162,
											"end": 9223,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "287"
										},
										{
											"begin": 9162,
											"end": 9223,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 9162,
											"end": 9223,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 9162,
											"end": 9223,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "461BCD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E5"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 9162,
											"end": 9223,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 9162,
											"end": 9223,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 10732,
											"end": 10734,
											"name": "PUSH",
											"source": 12,
											"value": "20"
										},
										{
											"begin": 9162,
											"end": 9223,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 9162,
											"end": 9223,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 9162,
											"end": 9223,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 10714,
											"end": 10735,
											"name": "DUP2",
											"source": 12
										},
										{
											"begin": 10714,
											"end": 10735,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 10714,
											"end": 10735,
											"name": "MSTORE",
											"source": 12
										},
										{
											"begin": 10751,
											"end": 10769,
											"name": "PUSH",
											"source": 12,
											"value": "24"
										},
										{
											"begin": 10751,
											"end": 10769,
											"name": "DUP3",
											"source": 12
										},
										{
											"begin": 10751,
											"end": 10769,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 10744,
											"end": 10774,
											"name": "MSTORE",
											"source": 12
										},
										{
											"begin": 10810,
											"end": 10844,
											"name": "PUSH",
											"source": 12,
											"value": "4552433732313A206D696E7420746F20746865207A65726F2061646472657373"
										},
										{
											"begin": 10790,
											"end": 10808,
											"name": "PUSH",
											"source": 12,
											"value": "44"
										},
										{
											"begin": 10790,
											"end": 10808,
											"name": "DUP3",
											"source": 12
										},
										{
											"begin": 10790,
											"end": 10808,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 10783,
											"end": 10845,
											"name": "MSTORE",
											"source": 12
										},
										{
											"begin": 10862,
											"end": 10880,
											"name": "PUSH",
											"source": 12,
											"value": "64"
										},
										{
											"begin": 10862,
											"end": 10880,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 9162,
											"end": 9223,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "98"
										},
										{
											"begin": 10530,
											"end": 10886,
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 9162,
											"end": 9223,
											"name": "tag",
											"source": 0,
											"value": "287"
										},
										{
											"begin": 9162,
											"end": 9223,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 7321,
											"end": 7325,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 6930,
											"end": 6946,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 6930,
											"end": 6946,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 6930,
											"end": 6946,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 6930,
											"end": 6937,
											"name": "PUSH",
											"source": 0,
											"value": "2"
										},
										{
											"begin": 6930,
											"end": 6946,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 6930,
											"end": 6946,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 6930,
											"end": 6946,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 6930,
											"end": 6946,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 6930,
											"end": 6946,
											"name": "KECCAK256",
											"source": 0
										},
										{
											"begin": 6930,
											"end": 6946,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 6930,
											"end": 6946,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 7344,
											"end": 7375,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 9233,
											"end": 9291,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "291"
										},
										{
											"begin": 9233,
											"end": 9291,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 9233,
											"end": 9291,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 9233,
											"end": 9291,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "461BCD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E5"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 9233,
											"end": 9291,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 9233,
											"end": 9291,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 11093,
											"end": 11095,
											"name": "PUSH",
											"source": 12,
											"value": "20"
										},
										{
											"begin": 9233,
											"end": 9291,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 9233,
											"end": 9291,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 9233,
											"end": 9291,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 11075,
											"end": 11096,
											"name": "MSTORE",
											"source": 12
										},
										{
											"begin": 11132,
											"end": 11134,
											"name": "PUSH",
											"source": 12,
											"value": "1C"
										},
										{
											"begin": 11112,
											"end": 11130,
											"name": "PUSH",
											"source": 12,
											"value": "24"
										},
										{
											"begin": 11112,
											"end": 11130,
											"name": "DUP3",
											"source": 12
										},
										{
											"begin": 11112,
											"end": 11130,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 11105,
											"end": 11135,
											"name": "MSTORE",
											"source": 12
										},
										{
											"begin": 11171,
											"end": 11201,
											"name": "PUSH",
											"source": 12,
											"value": "4552433732313A20746F6B656E20616C7265616479206D696E74656400000000"
										},
										{
											"begin": 11151,
											"end": 11169,
											"name": "PUSH",
											"source": 12,
											"value": "44"
										},
										{
											"begin": 11151,
											"end": 11169,
											"name": "DUP3",
											"source": 12
										},
										{
											"begin": 11151,
											"end": 11169,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 11144,
											"end": 11202,
											"name": "MSTORE",
											"source": 12
										},
										{
											"begin": 11219,
											"end": 11237,
											"name": "PUSH",
											"source": 12,
											"value": "64"
										},
										{
											"begin": 11219,
											"end": 11237,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 9233,
											"end": 9291,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "98"
										},
										{
											"begin": 10891,
											"end": 11243,
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 9233,
											"end": 9291,
											"name": "tag",
											"source": 0,
											"value": "291"
										},
										{
											"begin": 9233,
											"end": 9291,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 9302,
											"end": 9350,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "294"
										},
										{
											"begin": 9331,
											"end": 9332,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 9335,
											"end": 9337,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 9339,
											"end": 9346,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 9348,
											"end": 9349,
											"name": "PUSH",
											"source": 0,
											"value": "1"
										},
										{
											"begin": 9302,
											"end": 9322,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "190"
										},
										{
											"begin": 9302,
											"end": 9350,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 9302,
											"end": 9350,
											"name": "tag",
											"source": 0,
											"value": "294"
										},
										{
											"begin": 9302,
											"end": 9350,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 7321,
											"end": 7325,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 6930,
											"end": 6946,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 6930,
											"end": 6946,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 6930,
											"end": 6946,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 6930,
											"end": 6937,
											"name": "PUSH",
											"source": 0,
											"value": "2"
										},
										{
											"begin": 6930,
											"end": 6946,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 6930,
											"end": 6946,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 6930,
											"end": 6946,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 6930,
											"end": 6946,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 6930,
											"end": 6946,
											"name": "KECCAK256",
											"source": 0
										},
										{
											"begin": 6930,
											"end": 6946,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 6930,
											"end": 6946,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 7344,
											"end": 7375,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 9437,
											"end": 9495,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "296"
										},
										{
											"begin": 9437,
											"end": 9495,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 9437,
											"end": 9495,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 9437,
											"end": 9495,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "461BCD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E5"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 9437,
											"end": 9495,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 9437,
											"end": 9495,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 11093,
											"end": 11095,
											"name": "PUSH",
											"source": 12,
											"value": "20"
										},
										{
											"begin": 9437,
											"end": 9495,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 9437,
											"end": 9495,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 9437,
											"end": 9495,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 11075,
											"end": 11096,
											"name": "MSTORE",
											"source": 12
										},
										{
											"begin": 11132,
											"end": 11134,
											"name": "PUSH",
											"source": 12,
											"value": "1C"
										},
										{
											"begin": 11112,
											"end": 11130,
											"name": "PUSH",
											"source": 12,
											"value": "24"
										},
										{
											"begin": 11112,
											"end": 11130,
											"name": "DUP3",
											"source": 12
										},
										{
											"begin": 11112,
											"end": 11130,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 11105,
											"end": 11135,
											"name": "MSTORE",
											"source": 12
										},
										{
											"begin": 11171,
											"end": 11201,
											"name": "PUSH",
											"source": 12,
											"value": "4552433732313A20746F6B656E20616C7265616479206D696E74656400000000"
										},
										{
											"begin": 11151,
											"end": 11169,
											"name": "PUSH",
											"source": 12,
											"value": "44"
										},
										{
											"begin": 11151,
											"end": 11169,
											"name": "DUP3",
											"source": 12
										},
										{
											"begin": 11151,
											"end": 11169,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 11144,
											"end": 11202,
											"name": "MSTORE",
											"source": 12
										},
										{
											"begin": 11219,
											"end": 11237,
											"name": "PUSH",
											"source": 12,
											"value": "64"
										},
										{
											"begin": 11219,
											"end": 11237,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 9437,
											"end": 9495,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "98"
										},
										{
											"begin": 10891,
											"end": 11243,
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 9437,
											"end": 9495,
											"name": "tag",
											"source": 0,
											"value": "296"
										},
										{
											"begin": 9437,
											"end": 9495,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 9837,
											"end": 9850,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 9837,
											"end": 9850,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 9837,
											"end": 9850,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 9837,
											"end": 9850,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 9837,
											"end": 9850,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 9837,
											"end": 9850,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 9837,
											"end": 9846,
											"name": "PUSH",
											"source": 0,
											"value": "3"
										},
										{
											"begin": 9837,
											"end": 9850,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 9837,
											"end": 9850,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 9837,
											"end": 9850,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 9837,
											"end": 9850,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 9837,
											"end": 9850,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 9837,
											"end": 9850,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 9837,
											"end": 9850,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 9837,
											"end": 9850,
											"name": "KECCAK256",
											"source": 0
										},
										{
											"begin": 9837,
											"end": 9855,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 9837,
											"end": 9855,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 9854,
											"end": 9855,
											"name": "PUSH",
											"source": 0,
											"value": "1"
										},
										{
											"begin": 9837,
											"end": 9855,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 9837,
											"end": 9855,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 9837,
											"end": 9855,
											"name": "SSTORE",
											"source": 0
										},
										{
											"begin": 9876,
											"end": 9892,
											"name": "DUP5",
											"source": 0
										},
										{
											"begin": 9876,
											"end": 9892,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 9876,
											"end": 9892,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 9876,
											"end": 9883,
											"name": "PUSH",
											"source": 0,
											"value": "2"
										},
										{
											"begin": 9876,
											"end": 9892,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 9876,
											"end": 9892,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 9876,
											"end": 9892,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 9876,
											"end": 9892,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 9876,
											"end": 9892,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 9876,
											"end": 9892,
											"name": "KECCAK256",
											"source": 0
										},
										{
											"begin": 9876,
											"end": 9897,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 9876,
											"end": 9897,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "NOT",
											"source": -1
										},
										{
											"begin": 9876,
											"end": 9897,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 9876,
											"end": 9897,
											"name": "DUP5",
											"source": 0
										},
										{
											"begin": 9876,
											"end": 9897,
											"name": "OR",
											"source": 0
										},
										{
											"begin": 9876,
											"end": 9897,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 9876,
											"end": 9897,
											"name": "SSTORE",
											"source": 0
										},
										{
											"begin": 9913,
											"end": 9946,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 9884,
											"end": 9891,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 9884,
											"end": 9891,
											"name": "SWAP3",
											"source": 0
										},
										{
											"begin": 9837,
											"end": 9850,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 9837,
											"end": 9850,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 9913,
											"end": 9946,
											"name": "PUSH",
											"source": 0,
											"value": "DDF252AD1BE2C89B69C2B068FC378DAA952BA7F163C4A11628F55A4DF523B3EF"
										},
										{
											"begin": 9913,
											"end": 9946,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 9837,
											"end": 9850,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 9837,
											"end": 9850,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 9913,
											"end": 9946,
											"name": "LOG4",
											"source": 0
										},
										{
											"begin": 375,
											"end": 504,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 338,
											"end": 504,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 338,
											"end": 504,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 14,
											"end": 145,
											"name": "tag",
											"source": 12,
											"value": "300"
										},
										{
											"begin": 14,
											"end": 145,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "NOT",
											"source": -1
										},
										{
											"begin": 88,
											"end": 120,
											"name": "DUP2",
											"source": 12
										},
										{
											"begin": 88,
											"end": 120,
											"name": "AND",
											"source": 12
										},
										{
											"begin": 78,
											"end": 121,
											"name": "DUP2",
											"source": 12
										},
										{
											"begin": 78,
											"end": 121,
											"name": "EQ",
											"source": 12
										},
										{
											"begin": 68,
											"end": 139,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "170"
										},
										{
											"begin": 68,
											"end": 139,
											"name": "JUMPI",
											"source": 12
										},
										{
											"begin": 135,
											"end": 136,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 132,
											"end": 133,
											"name": "DUP1",
											"source": 12
										},
										{
											"begin": 125,
											"end": 137,
											"name": "REVERT",
											"source": 12
										},
										{
											"begin": 150,
											"end": 395,
											"name": "tag",
											"source": 12,
											"value": "22"
										},
										{
											"begin": 150,
											"end": 395,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 208,
											"end": 214,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 261,
											"end": 263,
											"name": "PUSH",
											"source": 12,
											"value": "20"
										},
										{
											"begin": 249,
											"end": 258,
											"name": "DUP3",
											"source": 12
										},
										{
											"begin": 240,
											"end": 247,
											"name": "DUP5",
											"source": 12
										},
										{
											"begin": 236,
											"end": 259,
											"name": "SUB",
											"source": 12
										},
										{
											"begin": 232,
											"end": 264,
											"name": "SLT",
											"source": 12
										},
										{
											"begin": 229,
											"end": 281,
											"name": "ISZERO",
											"source": 12
										},
										{
											"begin": 229,
											"end": 281,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "309"
										},
										{
											"begin": 229,
											"end": 281,
											"name": "JUMPI",
											"source": 12
										},
										{
											"begin": 277,
											"end": 278,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 274,
											"end": 275,
											"name": "DUP1",
											"source": 12
										},
										{
											"begin": 267,
											"end": 279,
											"name": "REVERT",
											"source": 12
										},
										{
											"begin": 229,
											"end": 281,
											"name": "tag",
											"source": 12,
											"value": "309"
										},
										{
											"begin": 229,
											"end": 281,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 316,
											"end": 325,
											"name": "DUP2",
											"source": 12
										},
										{
											"begin": 303,
											"end": 326,
											"name": "CALLDATALOAD",
											"source": 12
										},
										{
											"begin": 335,
											"end": 365,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "160"
										},
										{
											"begin": 359,
											"end": 364,
											"name": "DUP2",
											"source": 12
										},
										{
											"begin": 335,
											"end": 365,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "300"
										},
										{
											"begin": 335,
											"end": 365,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 592,
											"end": 842,
											"name": "tag",
											"source": 12,
											"value": "301"
										},
										{
											"begin": 592,
											"end": 842,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 677,
											"end": 678,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 687,
											"end": 800,
											"name": "tag",
											"source": 12,
											"value": "313"
										},
										{
											"begin": 687,
											"end": 800,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 701,
											"end": 707,
											"name": "DUP4",
											"source": 12
										},
										{
											"begin": 698,
											"end": 699,
											"name": "DUP2",
											"source": 12
										},
										{
											"begin": 695,
											"end": 708,
											"name": "LT",
											"source": 12
										},
										{
											"begin": 687,
											"end": 800,
											"name": "ISZERO",
											"source": 12
										},
										{
											"begin": 687,
											"end": 800,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "315"
										},
										{
											"begin": 687,
											"end": 800,
											"name": "JUMPI",
											"source": 12
										},
										{
											"begin": 777,
											"end": 788,
											"name": "DUP2",
											"source": 12
										},
										{
											"begin": 777,
											"end": 788,
											"name": "DUP2",
											"source": 12
										},
										{
											"begin": 777,
											"end": 788,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 771,
											"end": 789,
											"name": "MLOAD",
											"source": 12
										},
										{
											"begin": 758,
											"end": 769,
											"name": "DUP4",
											"source": 12
										},
										{
											"begin": 758,
											"end": 769,
											"name": "DUP3",
											"source": 12
										},
										{
											"begin": 758,
											"end": 769,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 751,
											"end": 790,
											"name": "MSTORE",
											"source": 12
										},
										{
											"begin": 723,
											"end": 725,
											"name": "PUSH",
											"source": 12,
											"value": "20"
										},
										{
											"begin": 716,
											"end": 726,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 687,
											"end": 800,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "313"
										},
										{
											"begin": 687,
											"end": 800,
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 687,
											"end": 800,
											"name": "tag",
											"source": 12,
											"value": "315"
										},
										{
											"begin": 687,
											"end": 800,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 834,
											"end": 835,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 816,
											"end": 832,
											"name": "SWAP2",
											"source": 12
										},
										{
											"begin": 816,
											"end": 832,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 809,
											"end": 836,
											"name": "MSTORE",
											"source": 12
										},
										{
											"begin": 592,
											"end": 842,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 847,
											"end": 1118,
											"name": "tag",
											"source": 12,
											"value": "302"
										},
										{
											"begin": 847,
											"end": 1118,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 889,
											"end": 892,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 927,
											"end": 932,
											"name": "DUP2",
											"source": 12
										},
										{
											"begin": 921,
											"end": 933,
											"name": "MLOAD",
											"source": 12
										},
										{
											"begin": 954,
											"end": 960,
											"name": "DUP1",
											"source": 12
										},
										{
											"begin": 949,
											"end": 952,
											"name": "DUP5",
											"source": 12
										},
										{
											"begin": 942,
											"end": 961,
											"name": "MSTORE",
											"source": 12
										},
										{
											"begin": 970,
											"end": 1046,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "317"
										},
										{
											"begin": 1039,
											"end": 1045,
											"name": "DUP2",
											"source": 12
										},
										{
											"begin": 1032,
											"end": 1036,
											"name": "PUSH",
											"source": 12,
											"value": "20"
										},
										{
											"begin": 1027,
											"end": 1030,
											"name": "DUP7",
											"source": 12
										},
										{
											"begin": 1023,
											"end": 1037,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 1016,
											"end": 1020,
											"name": "PUSH",
											"source": 12,
											"value": "20"
										},
										{
											"begin": 1009,
											"end": 1014,
											"name": "DUP7",
											"source": 12
										},
										{
											"begin": 1005,
											"end": 1021,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 970,
											"end": 1046,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "301"
										},
										{
											"begin": 970,
											"end": 1046,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 970,
											"end": 1046,
											"name": "tag",
											"source": 12,
											"value": "317"
										},
										{
											"begin": 970,
											"end": 1046,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 1100,
											"end": 1102,
											"name": "PUSH",
											"source": 12,
											"value": "1F"
										},
										{
											"begin": 1079,
											"end": 1094,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1F"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "NOT",
											"source": -1
										},
										{
											"begin": 1075,
											"end": 1104,
											"name": "AND",
											"source": 12
										},
										{
											"begin": 1066,
											"end": 1105,
											"name": "SWAP3",
											"source": 12
										},
										{
											"begin": 1066,
											"end": 1105,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 1066,
											"end": 1105,
											"name": "SWAP3",
											"source": 12
										},
										{
											"begin": 1066,
											"end": 1105,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 1107,
											"end": 1111,
											"name": "PUSH",
											"source": 12,
											"value": "20"
										},
										{
											"begin": 1062,
											"end": 1112,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 1062,
											"end": 1112,
											"name": "SWAP3",
											"source": 12
										},
										{
											"begin": 847,
											"end": 1118,
											"name": "SWAP2",
											"source": 12
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 847,
											"end": 1118,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 1123,
											"end": 1343,
											"name": "tag",
											"source": 12,
											"value": "29"
										},
										{
											"begin": 1123,
											"end": 1343,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 1272,
											"end": 1274,
											"name": "PUSH",
											"source": 12,
											"value": "20"
										},
										{
											"begin": 1261,
											"end": 1270,
											"name": "DUP2",
											"source": 12
										},
										{
											"begin": 1254,
											"end": 1275,
											"name": "MSTORE",
											"source": 12
										},
										{
											"begin": 1235,
											"end": 1239,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 1292,
											"end": 1337,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "160"
										},
										{
											"begin": 1333,
											"end": 1335,
											"name": "PUSH",
											"source": 12,
											"value": "20"
										},
										{
											"begin": 1322,
											"end": 1331,
											"name": "DUP4",
											"source": 12
										},
										{
											"begin": 1318,
											"end": 1336,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 1310,
											"end": 1316,
											"name": "DUP5",
											"source": 12
										},
										{
											"begin": 1292,
											"end": 1337,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "302"
										},
										{
											"begin": 1292,
											"end": 1337,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 1348,
											"end": 1528,
											"name": "tag",
											"source": 12,
											"value": "32"
										},
										{
											"begin": 1348,
											"end": 1528,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 1407,
											"end": 1413,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 1460,
											"end": 1462,
											"name": "PUSH",
											"source": 12,
											"value": "20"
										},
										{
											"begin": 1448,
											"end": 1457,
											"name": "DUP3",
											"source": 12
										},
										{
											"begin": 1439,
											"end": 1446,
											"name": "DUP5",
											"source": 12
										},
										{
											"begin": 1435,
											"end": 1458,
											"name": "SUB",
											"source": 12
										},
										{
											"begin": 1431,
											"end": 1463,
											"name": "SLT",
											"source": 12
										},
										{
											"begin": 1428,
											"end": 1480,
											"name": "ISZERO",
											"source": 12
										},
										{
											"begin": 1428,
											"end": 1480,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "321"
										},
										{
											"begin": 1428,
											"end": 1480,
											"name": "JUMPI",
											"source": 12
										},
										{
											"begin": 1476,
											"end": 1477,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 1473,
											"end": 1474,
											"name": "DUP1",
											"source": 12
										},
										{
											"begin": 1466,
											"end": 1478,
											"name": "REVERT",
											"source": 12
										},
										{
											"begin": 1428,
											"end": 1480,
											"name": "tag",
											"source": 12,
											"value": "321"
										},
										{
											"begin": 1428,
											"end": 1480,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 1499,
											"end": 1522,
											"name": "CALLDATALOAD",
											"source": 12
										},
										{
											"begin": 1499,
											"end": 1522,
											"name": "SWAP2",
											"source": 12
										},
										{
											"begin": 1348,
											"end": 1528,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 1348,
											"end": 1528,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 1741,
											"end": 1914,
											"name": "tag",
											"source": 12,
											"value": "303"
										},
										{
											"begin": 1741,
											"end": 1914,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 1809,
											"end": 1829,
											"name": "DUP1",
											"source": 12
										},
										{
											"begin": 1809,
											"end": 1829,
											"name": "CALLDATALOAD",
											"source": 12
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 1858,
											"end": 1889,
											"name": "DUP2",
											"source": 12
										},
										{
											"begin": 1858,
											"end": 1889,
											"name": "AND",
											"source": 12
										},
										{
											"begin": 1848,
											"end": 1890,
											"name": "DUP2",
											"source": 12
										},
										{
											"begin": 1848,
											"end": 1890,
											"name": "EQ",
											"source": 12
										},
										{
											"begin": 1838,
											"end": 1908,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "324"
										},
										{
											"begin": 1838,
											"end": 1908,
											"name": "JUMPI",
											"source": 12
										},
										{
											"begin": 1904,
											"end": 1905,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 1901,
											"end": 1902,
											"name": "DUP1",
											"source": 12
										},
										{
											"begin": 1894,
											"end": 1906,
											"name": "REVERT",
											"source": 12
										},
										{
											"begin": 1838,
											"end": 1908,
											"name": "tag",
											"source": 12,
											"value": "324"
										},
										{
											"begin": 1838,
											"end": 1908,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 1741,
											"end": 1914,
											"name": "SWAP2",
											"source": 12
										},
										{
											"begin": 1741,
											"end": 1914,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 1741,
											"end": 1914,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 1741,
											"end": 1914,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 1919,
											"end": 2173,
											"name": "tag",
											"source": 12,
											"value": "38"
										},
										{
											"begin": 1919,
											"end": 2173,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 1987,
											"end": 1993,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 1995,
											"end": 2001,
											"name": "DUP1",
											"source": 12
										},
										{
											"begin": 2048,
											"end": 2050,
											"name": "PUSH",
											"source": 12,
											"value": "40"
										},
										{
											"begin": 2036,
											"end": 2045,
											"name": "DUP4",
											"source": 12
										},
										{
											"begin": 2027,
											"end": 2034,
											"name": "DUP6",
											"source": 12
										},
										{
											"begin": 2023,
											"end": 2046,
											"name": "SUB",
											"source": 12
										},
										{
											"begin": 2019,
											"end": 2051,
											"name": "SLT",
											"source": 12
										},
										{
											"begin": 2016,
											"end": 2068,
											"name": "ISZERO",
											"source": 12
										},
										{
											"begin": 2016,
											"end": 2068,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "326"
										},
										{
											"begin": 2016,
											"end": 2068,
											"name": "JUMPI",
											"source": 12
										},
										{
											"begin": 2064,
											"end": 2065,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 2061,
											"end": 2062,
											"name": "DUP1",
											"source": 12
										},
										{
											"begin": 2054,
											"end": 2066,
											"name": "REVERT",
											"source": 12
										},
										{
											"begin": 2016,
											"end": 2068,
											"name": "tag",
											"source": 12,
											"value": "326"
										},
										{
											"begin": 2016,
											"end": 2068,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 2087,
											"end": 2116,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "327"
										},
										{
											"begin": 2106,
											"end": 2115,
											"name": "DUP4",
											"source": 12
										},
										{
											"begin": 2087,
											"end": 2116,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "303"
										},
										{
											"begin": 2087,
											"end": 2116,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 2087,
											"end": 2116,
											"name": "tag",
											"source": 12,
											"value": "327"
										},
										{
											"begin": 2087,
											"end": 2116,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 2077,
											"end": 2116,
											"name": "SWAP5",
											"source": 12
										},
										{
											"begin": 2163,
											"end": 2165,
											"name": "PUSH",
											"source": 12,
											"value": "20"
										},
										{
											"begin": 2148,
											"end": 2166,
											"name": "SWAP4",
											"source": 12
										},
										{
											"begin": 2148,
											"end": 2166,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 2148,
											"end": 2166,
											"name": "SWAP4",
											"source": 12
										},
										{
											"begin": 2148,
											"end": 2166,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 2135,
											"end": 2167,
											"name": "CALLDATALOAD",
											"source": 12
										},
										{
											"begin": 2135,
											"end": 2167,
											"name": "SWAP4",
											"source": 12
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 1919,
											"end": 2173,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 2178,
											"end": 2506,
											"name": "tag",
											"source": 12,
											"value": "42"
										},
										{
											"begin": 2178,
											"end": 2506,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 2255,
											"end": 2261,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 2263,
											"end": 2269,
											"name": "DUP1",
											"source": 12
										},
										{
											"begin": 2271,
											"end": 2277,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 2324,
											"end": 2326,
											"name": "PUSH",
											"source": 12,
											"value": "60"
										},
										{
											"begin": 2312,
											"end": 2321,
											"name": "DUP5",
											"source": 12
										},
										{
											"begin": 2303,
											"end": 2310,
											"name": "DUP7",
											"source": 12
										},
										{
											"begin": 2299,
											"end": 2322,
											"name": "SUB",
											"source": 12
										},
										{
											"begin": 2295,
											"end": 2327,
											"name": "SLT",
											"source": 12
										},
										{
											"begin": 2292,
											"end": 2344,
											"name": "ISZERO",
											"source": 12
										},
										{
											"begin": 2292,
											"end": 2344,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "329"
										},
										{
											"begin": 2292,
											"end": 2344,
											"name": "JUMPI",
											"source": 12
										},
										{
											"begin": 2340,
											"end": 2341,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 2337,
											"end": 2338,
											"name": "DUP1",
											"source": 12
										},
										{
											"begin": 2330,
											"end": 2342,
											"name": "REVERT",
											"source": 12
										},
										{
											"begin": 2292,
											"end": 2344,
											"name": "tag",
											"source": 12,
											"value": "329"
										},
										{
											"begin": 2292,
											"end": 2344,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 2363,
											"end": 2392,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "330"
										},
										{
											"begin": 2382,
											"end": 2391,
											"name": "DUP5",
											"source": 12
										},
										{
											"begin": 2363,
											"end": 2392,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "303"
										},
										{
											"begin": 2363,
											"end": 2392,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 2363,
											"end": 2392,
											"name": "tag",
											"source": 12,
											"value": "330"
										},
										{
											"begin": 2363,
											"end": 2392,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 2353,
											"end": 2392,
											"name": "SWAP3",
											"source": 12
										},
										{
											"begin": 2353,
											"end": 2392,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 2411,
											"end": 2449,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "331"
										},
										{
											"begin": 2445,
											"end": 2447,
											"name": "PUSH",
											"source": 12,
											"value": "20"
										},
										{
											"begin": 2434,
											"end": 2443,
											"name": "DUP6",
											"source": 12
										},
										{
											"begin": 2430,
											"end": 2448,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 2411,
											"end": 2449,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "303"
										},
										{
											"begin": 2411,
											"end": 2449,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 2411,
											"end": 2449,
											"name": "tag",
											"source": 12,
											"value": "331"
										},
										{
											"begin": 2411,
											"end": 2449,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 2401,
											"end": 2449,
											"name": "SWAP2",
											"source": 12
										},
										{
											"begin": 2401,
											"end": 2449,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 2496,
											"end": 2498,
											"name": "PUSH",
											"source": 12,
											"value": "40"
										},
										{
											"begin": 2485,
											"end": 2494,
											"name": "DUP5",
											"source": 12
										},
										{
											"begin": 2481,
											"end": 2499,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 2468,
											"end": 2500,
											"name": "CALLDATALOAD",
											"source": 12
										},
										{
											"begin": 2458,
											"end": 2500,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 2458,
											"end": 2500,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 2178,
											"end": 2506,
											"name": "SWAP3",
											"source": 12
										},
										{
											"begin": 2178,
											"end": 2506,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 2178,
											"end": 2506,
											"name": "SWAP3",
											"source": 12
										},
										{
											"begin": 2178,
											"end": 2506,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 2178,
											"end": 2506,
											"name": "SWAP3",
											"source": 12
										},
										{
											"begin": 2178,
											"end": 2506,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 2511,
											"end": 2697,
											"name": "tag",
											"source": 12,
											"value": "46"
										},
										{
											"begin": 2511,
											"end": 2697,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 2570,
											"end": 2576,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 2623,
											"end": 2625,
											"name": "PUSH",
											"source": 12,
											"value": "20"
										},
										{
											"begin": 2611,
											"end": 2620,
											"name": "DUP3",
											"source": 12
										},
										{
											"begin": 2602,
											"end": 2609,
											"name": "DUP5",
											"source": 12
										},
										{
											"begin": 2598,
											"end": 2621,
											"name": "SUB",
											"source": 12
										},
										{
											"begin": 2594,
											"end": 2626,
											"name": "SLT",
											"source": 12
										},
										{
											"begin": 2591,
											"end": 2643,
											"name": "ISZERO",
											"source": 12
										},
										{
											"begin": 2591,
											"end": 2643,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "333"
										},
										{
											"begin": 2591,
											"end": 2643,
											"name": "JUMPI",
											"source": 12
										},
										{
											"begin": 2639,
											"end": 2640,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 2636,
											"end": 2637,
											"name": "DUP1",
											"source": 12
										},
										{
											"begin": 2629,
											"end": 2641,
											"name": "REVERT",
											"source": 12
										},
										{
											"begin": 2591,
											"end": 2643,
											"name": "tag",
											"source": 12,
											"value": "333"
										},
										{
											"begin": 2591,
											"end": 2643,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 2662,
											"end": 2691,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "160"
										},
										{
											"begin": 2681,
											"end": 2690,
											"name": "DUP3",
											"source": 12
										},
										{
											"begin": 2662,
											"end": 2691,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "303"
										},
										{
											"begin": 2662,
											"end": 2691,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 2884,
											"end": 3231,
											"name": "tag",
											"source": 12,
											"value": "65"
										},
										{
											"begin": 2884,
											"end": 3231,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 2949,
											"end": 2955,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 2957,
											"end": 2963,
											"name": "DUP1",
											"source": 12
										},
										{
											"begin": 3010,
											"end": 3012,
											"name": "PUSH",
											"source": 12,
											"value": "40"
										},
										{
											"begin": 2998,
											"end": 3007,
											"name": "DUP4",
											"source": 12
										},
										{
											"begin": 2989,
											"end": 2996,
											"name": "DUP6",
											"source": 12
										},
										{
											"begin": 2985,
											"end": 3008,
											"name": "SUB",
											"source": 12
										},
										{
											"begin": 2981,
											"end": 3013,
											"name": "SLT",
											"source": 12
										},
										{
											"begin": 2978,
											"end": 3030,
											"name": "ISZERO",
											"source": 12
										},
										{
											"begin": 2978,
											"end": 3030,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "337"
										},
										{
											"begin": 2978,
											"end": 3030,
											"name": "JUMPI",
											"source": 12
										},
										{
											"begin": 3026,
											"end": 3027,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 3023,
											"end": 3024,
											"name": "DUP1",
											"source": 12
										},
										{
											"begin": 3016,
											"end": 3028,
											"name": "REVERT",
											"source": 12
										},
										{
											"begin": 2978,
											"end": 3030,
											"name": "tag",
											"source": 12,
											"value": "337"
										},
										{
											"begin": 2978,
											"end": 3030,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 3049,
											"end": 3078,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "338"
										},
										{
											"begin": 3068,
											"end": 3077,
											"name": "DUP4",
											"source": 12
										},
										{
											"begin": 3049,
											"end": 3078,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "303"
										},
										{
											"begin": 3049,
											"end": 3078,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 3049,
											"end": 3078,
											"name": "tag",
											"source": 12,
											"value": "338"
										},
										{
											"begin": 3049,
											"end": 3078,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 3039,
											"end": 3078,
											"name": "SWAP2",
											"source": 12
										},
										{
											"begin": 3039,
											"end": 3078,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 3128,
											"end": 3130,
											"name": "PUSH",
											"source": 12,
											"value": "20"
										},
										{
											"begin": 3117,
											"end": 3126,
											"name": "DUP4",
											"source": 12
										},
										{
											"begin": 3113,
											"end": 3131,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 3100,
											"end": 3132,
											"name": "CALLDATALOAD",
											"source": 12
										},
										{
											"begin": 3175,
											"end": 3180,
											"name": "DUP1",
											"source": 12
										},
										{
											"begin": 3168,
											"end": 3181,
											"name": "ISZERO",
											"source": 12
										},
										{
											"begin": 3161,
											"end": 3182,
											"name": "ISZERO",
											"source": 12
										},
										{
											"begin": 3154,
											"end": 3159,
											"name": "DUP2",
											"source": 12
										},
										{
											"begin": 3151,
											"end": 3183,
											"name": "EQ",
											"source": 12
										},
										{
											"begin": 3141,
											"end": 3201,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "339"
										},
										{
											"begin": 3141,
											"end": 3201,
											"name": "JUMPI",
											"source": 12
										},
										{
											"begin": 3197,
											"end": 3198,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 3194,
											"end": 3195,
											"name": "DUP1",
											"source": 12
										},
										{
											"begin": 3187,
											"end": 3199,
											"name": "REVERT",
											"source": 12
										},
										{
											"begin": 3141,
											"end": 3201,
											"name": "tag",
											"source": 12,
											"value": "339"
										},
										{
											"begin": 3141,
											"end": 3201,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 3220,
											"end": 3225,
											"name": "DUP1",
											"source": 12
										},
										{
											"begin": 3210,
											"end": 3225,
											"name": "SWAP2",
											"source": 12
										},
										{
											"begin": 3210,
											"end": 3225,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 3210,
											"end": 3225,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 2884,
											"end": 3231,
											"name": "SWAP3",
											"source": 12
										},
										{
											"begin": 2884,
											"end": 3231,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 2884,
											"end": 3231,
											"name": "SWAP3",
											"source": 12
										},
										{
											"begin": 2884,
											"end": 3231,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 2884,
											"end": 3231,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 2884,
											"end": 3231,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 3236,
											"end": 3363,
											"name": "tag",
											"source": 12,
											"value": "220"
										},
										{
											"begin": 3236,
											"end": 3363,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 3297,
											"end": 3307,
											"name": "PUSH",
											"source": 12,
											"value": "4E487B71"
										},
										{
											"begin": 3292,
											"end": 3295,
											"name": "PUSH",
											"source": 12,
											"value": "E0"
										},
										{
											"begin": 3288,
											"end": 3308,
											"name": "SHL",
											"source": 12
										},
										{
											"begin": 3285,
											"end": 3286,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 3278,
											"end": 3309,
											"name": "MSTORE",
											"source": 12
										},
										{
											"begin": 3328,
											"end": 3332,
											"name": "PUSH",
											"source": 12,
											"value": "41"
										},
										{
											"begin": 3325,
											"end": 3326,
											"name": "PUSH",
											"source": 12,
											"value": "4"
										},
										{
											"begin": 3318,
											"end": 3333,
											"name": "MSTORE",
											"source": 12
										},
										{
											"begin": 3352,
											"end": 3356,
											"name": "PUSH",
											"source": 12,
											"value": "24"
										},
										{
											"begin": 3349,
											"end": 3350,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 3342,
											"end": 3357,
											"name": "REVERT",
											"source": 12
										},
										{
											"begin": 3368,
											"end": 4506,
											"name": "tag",
											"source": 12,
											"value": "69"
										},
										{
											"begin": 3368,
											"end": 4506,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 3463,
											"end": 3469,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 3471,
											"end": 3477,
											"name": "DUP1",
											"source": 12
										},
										{
											"begin": 3479,
											"end": 3485,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 3487,
											"end": 3493,
											"name": "DUP1",
											"source": 12
										},
										{
											"begin": 3540,
											"end": 3543,
											"name": "PUSH",
											"source": 12,
											"value": "80"
										},
										{
											"begin": 3528,
											"end": 3537,
											"name": "DUP6",
											"source": 12
										},
										{
											"begin": 3519,
											"end": 3526,
											"name": "DUP8",
											"source": 12
										},
										{
											"begin": 3515,
											"end": 3538,
											"name": "SUB",
											"source": 12
										},
										{
											"begin": 3511,
											"end": 3544,
											"name": "SLT",
											"source": 12
										},
										{
											"begin": 3508,
											"end": 3561,
											"name": "ISZERO",
											"source": 12
										},
										{
											"begin": 3508,
											"end": 3561,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "342"
										},
										{
											"begin": 3508,
											"end": 3561,
											"name": "JUMPI",
											"source": 12
										},
										{
											"begin": 3557,
											"end": 3558,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 3554,
											"end": 3555,
											"name": "DUP1",
											"source": 12
										},
										{
											"begin": 3547,
											"end": 3559,
											"name": "REVERT",
											"source": 12
										},
										{
											"begin": 3508,
											"end": 3561,
											"name": "tag",
											"source": 12,
											"value": "342"
										},
										{
											"begin": 3508,
											"end": 3561,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 3580,
											"end": 3609,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "343"
										},
										{
											"begin": 3599,
											"end": 3608,
											"name": "DUP6",
											"source": 12
										},
										{
											"begin": 3580,
											"end": 3609,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "303"
										},
										{
											"begin": 3580,
											"end": 3609,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 3580,
											"end": 3609,
											"name": "tag",
											"source": 12,
											"value": "343"
										},
										{
											"begin": 3580,
											"end": 3609,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 3570,
											"end": 3609,
											"name": "SWAP4",
											"source": 12
										},
										{
											"begin": 3570,
											"end": 3609,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 3628,
											"end": 3666,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "344"
										},
										{
											"begin": 3662,
											"end": 3664,
											"name": "PUSH",
											"source": 12,
											"value": "20"
										},
										{
											"begin": 3651,
											"end": 3660,
											"name": "DUP7",
											"source": 12
										},
										{
											"begin": 3647,
											"end": 3665,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 3628,
											"end": 3666,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "303"
										},
										{
											"begin": 3628,
											"end": 3666,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 3628,
											"end": 3666,
											"name": "tag",
											"source": 12,
											"value": "344"
										},
										{
											"begin": 3628,
											"end": 3666,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 3618,
											"end": 3666,
											"name": "SWAP3",
											"source": 12
										},
										{
											"begin": 3618,
											"end": 3666,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 3713,
											"end": 3715,
											"name": "PUSH",
											"source": 12,
											"value": "40"
										},
										{
											"begin": 3702,
											"end": 3711,
											"name": "DUP6",
											"source": 12
										},
										{
											"begin": 3698,
											"end": 3716,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 3685,
											"end": 3717,
											"name": "CALLDATALOAD",
											"source": 12
										},
										{
											"begin": 3675,
											"end": 3717,
											"name": "SWAP2",
											"source": 12
										},
										{
											"begin": 3675,
											"end": 3717,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 3768,
											"end": 3770,
											"name": "PUSH",
											"source": 12,
											"value": "60"
										},
										{
											"begin": 3757,
											"end": 3766,
											"name": "DUP6",
											"source": 12
										},
										{
											"begin": 3753,
											"end": 3771,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 3740,
											"end": 3772,
											"name": "CALLDATALOAD",
											"source": 12
										},
										{
											"begin": 3791,
											"end": 3809,
											"name": "PUSH",
											"source": 12,
											"value": "FFFFFFFFFFFFFFFF"
										},
										{
											"begin": 3832,
											"end": 3834,
											"name": "DUP1",
											"source": 12
										},
										{
											"begin": 3824,
											"end": 3830,
											"name": "DUP3",
											"source": 12
										},
										{
											"begin": 3821,
											"end": 3835,
											"name": "GT",
											"source": 12
										},
										{
											"begin": 3818,
											"end": 3852,
											"name": "ISZERO",
											"source": 12
										},
										{
											"begin": 3818,
											"end": 3852,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "345"
										},
										{
											"begin": 3818,
											"end": 3852,
											"name": "JUMPI",
											"source": 12
										},
										{
											"begin": 3848,
											"end": 3849,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 3845,
											"end": 3846,
											"name": "DUP1",
											"source": 12
										},
										{
											"begin": 3838,
											"end": 3850,
											"name": "REVERT",
											"source": 12
										},
										{
											"begin": 3818,
											"end": 3852,
											"name": "tag",
											"source": 12,
											"value": "345"
										},
										{
											"begin": 3818,
											"end": 3852,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 3886,
											"end": 3892,
											"name": "DUP2",
											"source": 12
										},
										{
											"begin": 3875,
											"end": 3884,
											"name": "DUP8",
											"source": 12
										},
										{
											"begin": 3871,
											"end": 3893,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 3861,
											"end": 3893,
											"name": "SWAP2",
											"source": 12
										},
										{
											"begin": 3861,
											"end": 3893,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 3931,
											"end": 3938,
											"name": "DUP8",
											"source": 12
										},
										{
											"begin": 3924,
											"end": 3928,
											"name": "PUSH",
											"source": 12,
											"value": "1F"
										},
										{
											"begin": 3920,
											"end": 3922,
											"name": "DUP4",
											"source": 12
										},
										{
											"begin": 3916,
											"end": 3929,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 3912,
											"end": 3939,
											"name": "SLT",
											"source": 12
										},
										{
											"begin": 3902,
											"end": 3957,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "346"
										},
										{
											"begin": 3902,
											"end": 3957,
											"name": "JUMPI",
											"source": 12
										},
										{
											"begin": 3953,
											"end": 3954,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 3950,
											"end": 3951,
											"name": "DUP1",
											"source": 12
										},
										{
											"begin": 3943,
											"end": 3955,
											"name": "REVERT",
											"source": 12
										},
										{
											"begin": 3902,
											"end": 3957,
											"name": "tag",
											"source": 12,
											"value": "346"
										},
										{
											"begin": 3902,
											"end": 3957,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 3989,
											"end": 3991,
											"name": "DUP2",
											"source": 12
										},
										{
											"begin": 3976,
											"end": 3992,
											"name": "CALLDATALOAD",
											"source": 12
										},
										{
											"begin": 4011,
											"end": 4013,
											"name": "DUP2",
											"source": 12
										},
										{
											"begin": 4007,
											"end": 4009,
											"name": "DUP2",
											"source": 12
										},
										{
											"begin": 4004,
											"end": 4014,
											"name": "GT",
											"source": 12
										},
										{
											"begin": 4001,
											"end": 4037,
											"name": "ISZERO",
											"source": 12
										},
										{
											"begin": 4001,
											"end": 4037,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "348"
										},
										{
											"begin": 4001,
											"end": 4037,
											"name": "JUMPI",
											"source": 12
										},
										{
											"begin": 4017,
											"end": 4035,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "348"
										},
										{
											"begin": 4017,
											"end": 4035,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "220"
										},
										{
											"begin": 4017,
											"end": 4035,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 4017,
											"end": 4035,
											"name": "tag",
											"source": 12,
											"value": "348"
										},
										{
											"begin": 4017,
											"end": 4035,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 4092,
											"end": 4094,
											"name": "PUSH",
											"source": 12,
											"value": "40"
										},
										{
											"begin": 4086,
											"end": 4095,
											"name": "MLOAD",
											"source": 12
										},
										{
											"begin": 4060,
											"end": 4062,
											"name": "PUSH",
											"source": 12,
											"value": "1F"
										},
										{
											"begin": 4146,
											"end": 4159,
											"name": "DUP3",
											"source": 12
										},
										{
											"begin": 4146,
											"end": 4159,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1F"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "NOT",
											"source": -1
										},
										{
											"begin": 4142,
											"end": 4164,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 4142,
											"end": 4164,
											"name": "DUP2",
											"source": 12
										},
										{
											"begin": 4142,
											"end": 4164,
											"name": "AND",
											"source": 12
										},
										{
											"begin": 4166,
											"end": 4168,
											"name": "PUSH",
											"source": 12,
											"value": "3F"
										},
										{
											"begin": 4138,
											"end": 4169,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 4134,
											"end": 4174,
											"name": "AND",
											"source": 12
										},
										{
											"begin": 4122,
											"end": 4175,
											"name": "DUP2",
											"source": 12
										},
										{
											"begin": 4122,
											"end": 4175,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 4122,
											"end": 4175,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 4190,
											"end": 4208,
											"name": "DUP4",
											"source": 12
										},
										{
											"begin": 4190,
											"end": 4208,
											"name": "DUP3",
											"source": 12
										},
										{
											"begin": 4190,
											"end": 4208,
											"name": "GT",
											"source": 12
										},
										{
											"begin": 4210,
											"end": 4232,
											"name": "DUP2",
											"source": 12
										},
										{
											"begin": 4210,
											"end": 4232,
											"name": "DUP4",
											"source": 12
										},
										{
											"begin": 4210,
											"end": 4232,
											"name": "LT",
											"source": 12
										},
										{
											"begin": 4187,
											"end": 4233,
											"name": "OR",
											"source": 12
										},
										{
											"begin": 4184,
											"end": 4256,
											"name": "ISZERO",
											"source": 12
										},
										{
											"begin": 4184,
											"end": 4256,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "350"
										},
										{
											"begin": 4184,
											"end": 4256,
											"name": "JUMPI",
											"source": 12
										},
										{
											"begin": 4236,
											"end": 4254,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "350"
										},
										{
											"begin": 4236,
											"end": 4254,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "220"
										},
										{
											"begin": 4236,
											"end": 4254,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 4236,
											"end": 4254,
											"name": "tag",
											"source": 12,
											"value": "350"
										},
										{
											"begin": 4236,
											"end": 4254,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 4276,
											"end": 4286,
											"name": "DUP2",
											"source": 12
										},
										{
											"begin": 4272,
											"end": 4274,
											"name": "PUSH",
											"source": 12,
											"value": "40"
										},
										{
											"begin": 4265,
											"end": 4287,
											"name": "MSTORE",
											"source": 12
										},
										{
											"begin": 4311,
											"end": 4313,
											"name": "DUP3",
											"source": 12
										},
										{
											"begin": 4303,
											"end": 4309,
											"name": "DUP2",
											"source": 12
										},
										{
											"begin": 4296,
											"end": 4314,
											"name": "MSTORE",
											"source": 12
										},
										{
											"begin": 4351,
											"end": 4358,
											"name": "DUP11",
											"source": 12
										},
										{
											"begin": 4346,
											"end": 4348,
											"name": "PUSH",
											"source": 12,
											"value": "20"
										},
										{
											"begin": 4341,
											"end": 4343,
											"name": "DUP5",
											"source": 12
										},
										{
											"begin": 4337,
											"end": 4339,
											"name": "DUP8",
											"source": 12
										},
										{
											"begin": 4333,
											"end": 4344,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 4329,
											"end": 4349,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 4326,
											"end": 4359,
											"name": "GT",
											"source": 12
										},
										{
											"begin": 4323,
											"end": 4376,
											"name": "ISZERO",
											"source": 12
										},
										{
											"begin": 4323,
											"end": 4376,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "351"
										},
										{
											"begin": 4323,
											"end": 4376,
											"name": "JUMPI",
											"source": 12
										},
										{
											"begin": 4372,
											"end": 4373,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 4369,
											"end": 4370,
											"name": "DUP1",
											"source": 12
										},
										{
											"begin": 4362,
											"end": 4374,
											"name": "REVERT",
											"source": 12
										},
										{
											"begin": 4323,
											"end": 4376,
											"name": "tag",
											"source": 12,
											"value": "351"
										},
										{
											"begin": 4323,
											"end": 4376,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 4428,
											"end": 4430,
											"name": "DUP3",
											"source": 12
										},
										{
											"begin": 4423,
											"end": 4425,
											"name": "PUSH",
											"source": 12,
											"value": "20"
										},
										{
											"begin": 4419,
											"end": 4421,
											"name": "DUP7",
											"source": 12
										},
										{
											"begin": 4415,
											"end": 4426,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 4410,
											"end": 4412,
											"name": "PUSH",
											"source": 12,
											"value": "20"
										},
										{
											"begin": 4402,
											"end": 4408,
											"name": "DUP4",
											"source": 12
										},
										{
											"begin": 4398,
											"end": 4413,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 4385,
											"end": 4431,
											"name": "CALLDATACOPY",
											"source": 12
										},
										{
											"begin": 4473,
											"end": 4474,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 4468,
											"end": 4470,
											"name": "PUSH",
											"source": 12,
											"value": "20"
										},
										{
											"begin": 4463,
											"end": 4465,
											"name": "DUP5",
											"source": 12
										},
										{
											"begin": 4455,
											"end": 4461,
											"name": "DUP4",
											"source": 12
										},
										{
											"begin": 4451,
											"end": 4466,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 4447,
											"end": 4471,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 4440,
											"end": 4475,
											"name": "MSTORE",
											"source": 12
										},
										{
											"begin": 4494,
											"end": 4500,
											"name": "DUP1",
											"source": 12
										},
										{
											"begin": 4484,
											"end": 4500,
											"name": "SWAP6",
											"source": 12
										},
										{
											"begin": 4484,
											"end": 4500,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 4484,
											"end": 4500,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 4484,
											"end": 4500,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 4484,
											"end": 4500,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 4484,
											"end": 4500,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 4484,
											"end": 4500,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 3368,
											"end": 4506,
											"name": "SWAP3",
											"source": 12
										},
										{
											"begin": 3368,
											"end": 4506,
											"name": "SWAP6",
											"source": 12
										},
										{
											"begin": 3368,
											"end": 4506,
											"name": "SWAP2",
											"source": 12
										},
										{
											"begin": 3368,
											"end": 4506,
											"name": "SWAP5",
											"source": 12
										},
										{
											"begin": 3368,
											"end": 4506,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 3368,
											"end": 4506,
											"name": "SWAP3",
											"source": 12
										},
										{
											"begin": 3368,
											"end": 4506,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 3368,
											"end": 4506,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 4511,
											"end": 4771,
											"name": "tag",
											"source": 12,
											"value": "77"
										},
										{
											"begin": 4511,
											"end": 4771,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 4579,
											"end": 4585,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 4587,
											"end": 4593,
											"name": "DUP1",
											"source": 12
										},
										{
											"begin": 4640,
											"end": 4642,
											"name": "PUSH",
											"source": 12,
											"value": "40"
										},
										{
											"begin": 4628,
											"end": 4637,
											"name": "DUP4",
											"source": 12
										},
										{
											"begin": 4619,
											"end": 4626,
											"name": "DUP6",
											"source": 12
										},
										{
											"begin": 4615,
											"end": 4638,
											"name": "SUB",
											"source": 12
										},
										{
											"begin": 4611,
											"end": 4643,
											"name": "SLT",
											"source": 12
										},
										{
											"begin": 4608,
											"end": 4660,
											"name": "ISZERO",
											"source": 12
										},
										{
											"begin": 4608,
											"end": 4660,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "353"
										},
										{
											"begin": 4608,
											"end": 4660,
											"name": "JUMPI",
											"source": 12
										},
										{
											"begin": 4656,
											"end": 4657,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 4653,
											"end": 4654,
											"name": "DUP1",
											"source": 12
										},
										{
											"begin": 4646,
											"end": 4658,
											"name": "REVERT",
											"source": 12
										},
										{
											"begin": 4608,
											"end": 4660,
											"name": "tag",
											"source": 12,
											"value": "353"
										},
										{
											"begin": 4608,
											"end": 4660,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 4679,
											"end": 4708,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "354"
										},
										{
											"begin": 4698,
											"end": 4707,
											"name": "DUP4",
											"source": 12
										},
										{
											"begin": 4679,
											"end": 4708,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "303"
										},
										{
											"begin": 4679,
											"end": 4708,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 4679,
											"end": 4708,
											"name": "tag",
											"source": 12,
											"value": "354"
										},
										{
											"begin": 4679,
											"end": 4708,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 4669,
											"end": 4708,
											"name": "SWAP2",
											"source": 12
										},
										{
											"begin": 4669,
											"end": 4708,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 4727,
											"end": 4765,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "355"
										},
										{
											"begin": 4761,
											"end": 4763,
											"name": "PUSH",
											"source": 12,
											"value": "20"
										},
										{
											"begin": 4750,
											"end": 4759,
											"name": "DUP5",
											"source": 12
										},
										{
											"begin": 4746,
											"end": 4764,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 4727,
											"end": 4765,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "303"
										},
										{
											"begin": 4727,
											"end": 4765,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 4727,
											"end": 4765,
											"name": "tag",
											"source": 12,
											"value": "355"
										},
										{
											"begin": 4727,
											"end": 4765,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 4717,
											"end": 4765,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 4717,
											"end": 4765,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 4511,
											"end": 4771,
											"name": "SWAP3",
											"source": 12
										},
										{
											"begin": 4511,
											"end": 4771,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 4511,
											"end": 4771,
											"name": "SWAP3",
											"source": 12
										},
										{
											"begin": 4511,
											"end": 4771,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 4511,
											"end": 4771,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 4511,
											"end": 4771,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 4776,
											"end": 5156,
											"name": "tag",
											"source": 12,
											"value": "87"
										},
										{
											"begin": 4776,
											"end": 5156,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 4855,
											"end": 4856,
											"name": "PUSH",
											"source": 12,
											"value": "1"
										},
										{
											"begin": 4851,
											"end": 4863,
											"name": "DUP2",
											"source": 12
										},
										{
											"begin": 4851,
											"end": 4863,
											"name": "DUP2",
											"source": 12
										},
										{
											"begin": 4851,
											"end": 4863,
											"name": "SHR",
											"source": 12
										},
										{
											"begin": 4851,
											"end": 4863,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 4898,
											"end": 4910,
											"name": "DUP3",
											"source": 12
										},
										{
											"begin": 4898,
											"end": 4910,
											"name": "AND",
											"source": 12
										},
										{
											"begin": 4898,
											"end": 4910,
											"name": "DUP1",
											"source": 12
										},
										{
											"begin": 4919,
											"end": 4980,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "357"
										},
										{
											"begin": 4919,
											"end": 4980,
											"name": "JUMPI",
											"source": 12
										},
										{
											"begin": 4973,
											"end": 4977,
											"name": "PUSH",
											"source": 12,
											"value": "7F"
										},
										{
											"begin": 4965,
											"end": 4971,
											"name": "DUP3",
											"source": 12
										},
										{
											"begin": 4961,
											"end": 4978,
											"name": "AND",
											"source": 12
										},
										{
											"begin": 4951,
											"end": 4978,
											"name": "SWAP2",
											"source": 12
										},
										{
											"begin": 4951,
											"end": 4978,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 4919,
											"end": 4980,
											"name": "tag",
											"source": 12,
											"value": "357"
										},
										{
											"begin": 4919,
											"end": 4980,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 5026,
											"end": 5028,
											"name": "PUSH",
											"source": 12,
											"value": "20"
										},
										{
											"begin": 5018,
											"end": 5024,
											"name": "DUP3",
											"source": 12
										},
										{
											"begin": 5015,
											"end": 5029,
											"name": "LT",
											"source": 12
										},
										{
											"begin": 4995,
											"end": 5013,
											"name": "DUP2",
											"source": 12
										},
										{
											"begin": 4992,
											"end": 5030,
											"name": "SUB",
											"source": 12
										},
										{
											"begin": 4989,
											"end": 5150,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "358"
										},
										{
											"begin": 4989,
											"end": 5150,
											"name": "JUMPI",
											"source": 12
										},
										{
											"begin": 5072,
											"end": 5082,
											"name": "PUSH",
											"source": 12,
											"value": "4E487B71"
										},
										{
											"begin": 5067,
											"end": 5070,
											"name": "PUSH",
											"source": 12,
											"value": "E0"
										},
										{
											"begin": 5063,
											"end": 5083,
											"name": "SHL",
											"source": 12
										},
										{
											"begin": 5060,
											"end": 5061,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 5053,
											"end": 5084,
											"name": "MSTORE",
											"source": 12
										},
										{
											"begin": 5107,
											"end": 5111,
											"name": "PUSH",
											"source": 12,
											"value": "22"
										},
										{
											"begin": 5104,
											"end": 5105,
											"name": "PUSH",
											"source": 12,
											"value": "4"
										},
										{
											"begin": 5097,
											"end": 5112,
											"name": "MSTORE",
											"source": 12
										},
										{
											"begin": 5135,
											"end": 5139,
											"name": "PUSH",
											"source": 12,
											"value": "24"
										},
										{
											"begin": 5132,
											"end": 5133,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 5125,
											"end": 5140,
											"name": "REVERT",
											"source": 12
										},
										{
											"begin": 4989,
											"end": 5150,
											"name": "tag",
											"source": 12,
											"value": "358"
										},
										{
											"begin": 4989,
											"end": 5150,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 4989,
											"end": 5150,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 4776,
											"end": 5156,
											"name": "SWAP2",
											"source": 12
										},
										{
											"begin": 4776,
											"end": 5156,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 4776,
											"end": 5156,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 4776,
											"end": 5156,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 5993,
											"end": 6402,
											"name": "tag",
											"source": 12,
											"value": "116"
										},
										{
											"begin": 5993,
											"end": 6402,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 6195,
											"end": 6197,
											"name": "PUSH",
											"source": 12,
											"value": "20"
										},
										{
											"begin": 6177,
											"end": 6198,
											"name": "DUP1",
											"source": 12
										},
										{
											"begin": 6177,
											"end": 6198,
											"name": "DUP3",
											"source": 12
										},
										{
											"begin": 6177,
											"end": 6198,
											"name": "MSTORE",
											"source": 12
										},
										{
											"begin": 6234,
											"end": 6236,
											"name": "PUSH",
											"source": 12,
											"value": "2D"
										},
										{
											"begin": 6214,
											"end": 6232,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 6214,
											"end": 6232,
											"name": "DUP3",
											"source": 12
										},
										{
											"begin": 6214,
											"end": 6232,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 6207,
											"end": 6237,
											"name": "MSTORE",
											"source": 12
										},
										{
											"begin": 6273,
											"end": 6307,
											"name": "PUSH",
											"source": 12,
											"value": "4552433732313A2063616C6C6572206973206E6F7420746F6B656E206F776E65"
										},
										{
											"begin": 6268,
											"end": 6270,
											"name": "PUSH",
											"source": 12,
											"value": "40"
										},
										{
											"begin": 6253,
											"end": 6271,
											"name": "DUP3",
											"source": 12
										},
										{
											"begin": 6253,
											"end": 6271,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 6246,
											"end": 6308,
											"name": "MSTORE",
											"source": 12
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1C881BDC88185C1C1C9BDD9959"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "9A"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 6339,
											"end": 6341,
											"name": "PUSH",
											"source": 12,
											"value": "60"
										},
										{
											"begin": 6324,
											"end": 6342,
											"name": "DUP3",
											"source": 12
										},
										{
											"begin": 6324,
											"end": 6342,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 6317,
											"end": 6360,
											"name": "MSTORE",
											"source": 12
										},
										{
											"begin": 6392,
											"end": 6395,
											"name": "PUSH",
											"source": 12,
											"value": "80"
										},
										{
											"begin": 6377,
											"end": 6396,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 6377,
											"end": 6396,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 5993,
											"end": 6402,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 7170,
											"end": 7666,
											"name": "tag",
											"source": 12,
											"value": "164"
										},
										{
											"begin": 7170,
											"end": 7666,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 7349,
											"end": 7352,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 7387,
											"end": 7393,
											"name": "DUP4",
											"source": 12
										},
										{
											"begin": 7381,
											"end": 7394,
											"name": "MLOAD",
											"source": 12
										},
										{
											"begin": 7403,
											"end": 7469,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "365"
										},
										{
											"begin": 7462,
											"end": 7468,
											"name": "DUP2",
											"source": 12
										},
										{
											"begin": 7457,
											"end": 7460,
											"name": "DUP5",
											"source": 12
										},
										{
											"begin": 7450,
											"end": 7454,
											"name": "PUSH",
											"source": 12,
											"value": "20"
										},
										{
											"begin": 7442,
											"end": 7448,
											"name": "DUP9",
											"source": 12
										},
										{
											"begin": 7438,
											"end": 7455,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 7403,
											"end": 7469,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "301"
										},
										{
											"begin": 7403,
											"end": 7469,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 7403,
											"end": 7469,
											"name": "tag",
											"source": 12,
											"value": "365"
										},
										{
											"begin": 7403,
											"end": 7469,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 7532,
											"end": 7545,
											"name": "DUP4",
											"source": 12
										},
										{
											"begin": 7532,
											"end": 7545,
											"name": "MLOAD",
											"source": 12
										},
										{
											"begin": 7491,
											"end": 7507,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 7491,
											"end": 7507,
											"name": "DUP4",
											"source": 12
										},
										{
											"begin": 7491,
											"end": 7507,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 7491,
											"end": 7507,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 7554,
											"end": 7624,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "366"
										},
										{
											"begin": 7532,
											"end": 7545,
											"name": "DUP2",
											"source": 12
										},
										{
											"begin": 7491,
											"end": 7507,
											"name": "DUP4",
											"source": 12
										},
										{
											"begin": 7601,
											"end": 7605,
											"name": "PUSH",
											"source": 12,
											"value": "20"
										},
										{
											"begin": 7589,
											"end": 7606,
											"name": "DUP9",
											"source": 12
										},
										{
											"begin": 7589,
											"end": 7606,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 7554,
											"end": 7624,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "301"
										},
										{
											"begin": 7554,
											"end": 7624,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 7554,
											"end": 7624,
											"name": "tag",
											"source": 12,
											"value": "366"
										},
										{
											"begin": 7554,
											"end": 7624,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 7640,
											"end": 7660,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 7640,
											"end": 7660,
											"name": "SWAP5",
											"source": 12
										},
										{
											"begin": 7170,
											"end": 7666,
											"name": "SWAP4",
											"source": 12
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 7170,
											"end": 7666,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 7671,
											"end": 8072,
											"name": "tag",
											"source": 12,
											"value": "185"
										},
										{
											"begin": 7671,
											"end": 8072,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 7873,
											"end": 7875,
											"name": "PUSH",
											"source": 12,
											"value": "20"
										},
										{
											"begin": 7855,
											"end": 7876,
											"name": "DUP1",
											"source": 12
										},
										{
											"begin": 7855,
											"end": 7876,
											"name": "DUP3",
											"source": 12
										},
										{
											"begin": 7855,
											"end": 7876,
											"name": "MSTORE",
											"source": 12
										},
										{
											"begin": 7912,
											"end": 7914,
											"name": "PUSH",
											"source": 12,
											"value": "25"
										},
										{
											"begin": 7892,
											"end": 7910,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 7892,
											"end": 7910,
											"name": "DUP3",
											"source": 12
										},
										{
											"begin": 7892,
											"end": 7910,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 7885,
											"end": 7915,
											"name": "MSTORE",
											"source": 12
										},
										{
											"begin": 7951,
											"end": 7985,
											"name": "PUSH",
											"source": 12,
											"value": "4552433732313A207472616E736665722066726F6D20696E636F727265637420"
										},
										{
											"begin": 7946,
											"end": 7948,
											"name": "PUSH",
											"source": 12,
											"value": "40"
										},
										{
											"begin": 7931,
											"end": 7949,
											"name": "DUP3",
											"source": 12
										},
										{
											"begin": 7931,
											"end": 7949,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 7924,
											"end": 7986,
											"name": "MSTORE",
											"source": 12
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "37BBB732B9"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "D9"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 8017,
											"end": 8019,
											"name": "PUSH",
											"source": 12,
											"value": "60"
										},
										{
											"begin": 8002,
											"end": 8020,
											"name": "DUP3",
											"source": 12
										},
										{
											"begin": 8002,
											"end": 8020,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 7995,
											"end": 8030,
											"name": "MSTORE",
											"source": 12
										},
										{
											"begin": 8062,
											"end": 8065,
											"name": "PUSH",
											"source": 12,
											"value": "80"
										},
										{
											"begin": 8047,
											"end": 8066,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 8047,
											"end": 8066,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 7671,
											"end": 8072,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 8836,
											"end": 9250,
											"name": "tag",
											"source": 12,
											"value": "213"
										},
										{
											"begin": 8836,
											"end": 9250,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 9038,
											"end": 9040,
											"name": "PUSH",
											"source": 12,
											"value": "20"
										},
										{
											"begin": 9020,
											"end": 9041,
											"name": "DUP1",
											"source": 12
										},
										{
											"begin": 9020,
											"end": 9041,
											"name": "DUP3",
											"source": 12
										},
										{
											"begin": 9020,
											"end": 9041,
											"name": "MSTORE",
											"source": 12
										},
										{
											"begin": 9077,
											"end": 9079,
											"name": "PUSH",
											"source": 12,
											"value": "32"
										},
										{
											"begin": 9057,
											"end": 9075,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 9057,
											"end": 9075,
											"name": "DUP3",
											"source": 12
										},
										{
											"begin": 9057,
											"end": 9075,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 9050,
											"end": 9080,
											"name": "MSTORE",
											"source": 12
										},
										{
											"begin": 9116,
											"end": 9150,
											"name": "PUSH",
											"source": 12,
											"value": "4552433732313A207472616E7366657220746F206E6F6E204552433732315265"
										},
										{
											"begin": 9111,
											"end": 9113,
											"name": "PUSH",
											"source": 12,
											"value": "40"
										},
										{
											"begin": 9096,
											"end": 9114,
											"name": "DUP3",
											"source": 12
										},
										{
											"begin": 9096,
											"end": 9114,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 9089,
											"end": 9151,
											"name": "MSTORE",
											"source": 12
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "31B2B4BB32B91034B6B83632B6B2B73A32B9"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "71"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 9182,
											"end": 9184,
											"name": "PUSH",
											"source": 12,
											"value": "60"
										},
										{
											"begin": 9167,
											"end": 9185,
											"name": "DUP3",
											"source": 12
										},
										{
											"begin": 9167,
											"end": 9185,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 9160,
											"end": 9208,
											"name": "MSTORE",
											"source": 12
										},
										{
											"begin": 9240,
											"end": 9243,
											"name": "PUSH",
											"source": 12,
											"value": "80"
										},
										{
											"begin": 9225,
											"end": 9244,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 9225,
											"end": 9244,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 8836,
											"end": 9250,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 9387,
											"end": 9514,
											"name": "tag",
											"source": 12,
											"value": "304"
										},
										{
											"begin": 9387,
											"end": 9514,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 9448,
											"end": 9458,
											"name": "PUSH",
											"source": 12,
											"value": "4E487B71"
										},
										{
											"begin": 9443,
											"end": 9446,
											"name": "PUSH",
											"source": 12,
											"value": "E0"
										},
										{
											"begin": 9439,
											"end": 9459,
											"name": "SHL",
											"source": 12
										},
										{
											"begin": 9436,
											"end": 9437,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 9429,
											"end": 9460,
											"name": "MSTORE",
											"source": 12
										},
										{
											"begin": 9479,
											"end": 9483,
											"name": "PUSH",
											"source": 12,
											"value": "11"
										},
										{
											"begin": 9476,
											"end": 9477,
											"name": "PUSH",
											"source": 12,
											"value": "4"
										},
										{
											"begin": 9469,
											"end": 9484,
											"name": "MSTORE",
											"source": 12
										},
										{
											"begin": 9503,
											"end": 9507,
											"name": "PUSH",
											"source": 12,
											"value": "24"
										},
										{
											"begin": 9500,
											"end": 9501,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 9493,
											"end": 9508,
											"name": "REVERT",
											"source": 12
										},
										{
											"begin": 9519,
											"end": 9647,
											"name": "tag",
											"source": 12,
											"value": "234"
										},
										{
											"begin": 9519,
											"end": 9647,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 9586,
											"end": 9595,
											"name": "DUP2",
											"source": 12
										},
										{
											"begin": 9586,
											"end": 9595,
											"name": "DUP2",
											"source": 12
										},
										{
											"begin": 9586,
											"end": 9595,
											"name": "SUB",
											"source": 12
										},
										{
											"begin": 9607,
											"end": 9618,
											"name": "DUP2",
											"source": 12
										},
										{
											"begin": 9607,
											"end": 9618,
											"name": "DUP2",
											"source": 12
										},
										{
											"begin": 9607,
											"end": 9618,
											"name": "GT",
											"source": 12
										},
										{
											"begin": 9604,
											"end": 9641,
											"name": "ISZERO",
											"source": 12
										},
										{
											"begin": 9604,
											"end": 9641,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "83"
										},
										{
											"begin": 9604,
											"end": 9641,
											"name": "JUMPI",
											"source": 12
										},
										{
											"begin": 9621,
											"end": 9639,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "83"
										},
										{
											"begin": 9621,
											"end": 9639,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "304"
										},
										{
											"begin": 9621,
											"end": 9639,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 9652,
											"end": 9777,
											"name": "tag",
											"source": 12,
											"value": "237"
										},
										{
											"begin": 9652,
											"end": 9777,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 9717,
											"end": 9726,
											"name": "DUP1",
											"source": 12
										},
										{
											"begin": 9717,
											"end": 9726,
											"name": "DUP3",
											"source": 12
										},
										{
											"begin": 9717,
											"end": 9726,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 9738,
											"end": 9748,
											"name": "DUP1",
											"source": 12
										},
										{
											"begin": 9738,
											"end": 9748,
											"name": "DUP3",
											"source": 12
										},
										{
											"begin": 9738,
											"end": 9748,
											"name": "GT",
											"source": 12
										},
										{
											"begin": 9735,
											"end": 9771,
											"name": "ISZERO",
											"source": 12
										},
										{
											"begin": 9735,
											"end": 9771,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "83"
										},
										{
											"begin": 9735,
											"end": 9771,
											"name": "JUMPI",
											"source": 12
										},
										{
											"begin": 9751,
											"end": 9769,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "83"
										},
										{
											"begin": 9751,
											"end": 9769,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "304"
										},
										{
											"begin": 9751,
											"end": 9769,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 9782,
											"end": 10271,
											"name": "tag",
											"source": 12,
											"value": "251"
										},
										{
											"begin": 9782,
											"end": 10271,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 10051,
											"end": 10066,
											"name": "DUP6",
											"source": 12
										},
										{
											"begin": 10051,
											"end": 10066,
											"name": "DUP2",
											"source": 12
										},
										{
											"begin": 10051,
											"end": 10066,
											"name": "AND",
											"source": 12
										},
										{
											"begin": 10033,
											"end": 10067,
											"name": "DUP3",
											"source": 12
										},
										{
											"begin": 10033,
											"end": 10067,
											"name": "MSTORE",
											"source": 12
										},
										{
											"begin": 10103,
											"end": 10118,
											"name": "DUP5",
											"source": 12
										},
										{
											"begin": 10103,
											"end": 10118,
											"name": "AND",
											"source": 12
										},
										{
											"begin": 10098,
											"end": 10100,
											"name": "PUSH",
											"source": 12,
											"value": "20"
										},
										{
											"begin": 10083,
											"end": 10101,
											"name": "DUP3",
											"source": 12
										},
										{
											"begin": 10083,
											"end": 10101,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 10076,
											"end": 10119,
											"name": "MSTORE",
											"source": 12
										},
										{
											"begin": 10150,
											"end": 10152,
											"name": "PUSH",
											"source": 12,
											"value": "40"
										},
										{
											"begin": 10135,
											"end": 10153,
											"name": "DUP2",
											"source": 12
										},
										{
											"begin": 10135,
											"end": 10153,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 10128,
											"end": 10162,
											"name": "DUP4",
											"source": 12
										},
										{
											"begin": 10128,
											"end": 10162,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 10128,
											"end": 10162,
											"name": "MSTORE",
											"source": 12
										},
										{
											"begin": 10198,
											"end": 10201,
											"name": "PUSH",
											"source": 12,
											"value": "80"
										},
										{
											"begin": 10193,
											"end": 10195,
											"name": "PUSH",
											"source": 12,
											"value": "60"
										},
										{
											"begin": 10178,
											"end": 10196,
											"name": "DUP3",
											"source": 12
										},
										{
											"begin": 10178,
											"end": 10196,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 10171,
											"end": 10202,
											"name": "DUP2",
											"source": 12
										},
										{
											"begin": 10171,
											"end": 10202,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 10171,
											"end": 10202,
											"name": "MSTORE",
											"source": 12
										},
										{
											"begin": 9976,
											"end": 9980,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 9976,
											"end": 9980,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 10219,
											"end": 10265,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "380"
										},
										{
											"begin": 10219,
											"end": 10265,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 10245,
											"end": 10264,
											"name": "DUP4",
											"source": 12
										},
										{
											"begin": 10245,
											"end": 10264,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 10237,
											"end": 10243,
											"name": "DUP5",
											"source": 12
										},
										{
											"begin": 10219,
											"end": 10265,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "302"
										},
										{
											"begin": 10219,
											"end": 10265,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 10219,
											"end": 10265,
											"name": "tag",
											"source": 12,
											"value": "380"
										},
										{
											"begin": 10219,
											"end": 10265,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 10211,
											"end": 10265,
											"name": "SWAP7",
											"source": 12
										},
										{
											"begin": 9782,
											"end": 10271,
											"name": "SWAP6",
											"source": 12
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 9782,
											"end": 10271,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 10276,
											"end": 10525,
											"name": "tag",
											"source": 12,
											"value": "254"
										},
										{
											"begin": 10276,
											"end": 10525,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 10345,
											"end": 10351,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 10398,
											"end": 10400,
											"name": "PUSH",
											"source": 12,
											"value": "20"
										},
										{
											"begin": 10386,
											"end": 10395,
											"name": "DUP3",
											"source": 12
										},
										{
											"begin": 10377,
											"end": 10384,
											"name": "DUP5",
											"source": 12
										},
										{
											"begin": 10373,
											"end": 10396,
											"name": "SUB",
											"source": 12
										},
										{
											"begin": 10369,
											"end": 10401,
											"name": "SLT",
											"source": 12
										},
										{
											"begin": 10366,
											"end": 10418,
											"name": "ISZERO",
											"source": 12
										},
										{
											"begin": 10366,
											"end": 10418,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "382"
										},
										{
											"begin": 10366,
											"end": 10418,
											"name": "JUMPI",
											"source": 12
										},
										{
											"begin": 10414,
											"end": 10415,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 10411,
											"end": 10412,
											"name": "DUP1",
											"source": 12
										},
										{
											"begin": 10404,
											"end": 10416,
											"name": "REVERT",
											"source": 12
										},
										{
											"begin": 10366,
											"end": 10418,
											"name": "tag",
											"source": 12,
											"value": "382"
										},
										{
											"begin": 10366,
											"end": 10418,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 10446,
											"end": 10455,
											"name": "DUP2",
											"source": 12
										},
										{
											"begin": 10440,
											"end": 10456,
											"name": "MLOAD",
											"source": 12
										},
										{
											"begin": 10465,
											"end": 10495,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "160"
										},
										{
											"begin": 10489,
											"end": 10494,
											"name": "DUP2",
											"source": 12
										},
										{
											"begin": 10465,
											"end": 10495,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "300"
										},
										{
											"begin": 10465,
											"end": 10495,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 12
										}
									]
								}
							},
							"sourceList": [
								"@openzeppelin/contracts/token/ERC721/ERC721.sol",
								"@openzeppelin/contracts/token/ERC721/IERC721.sol",
								"@openzeppelin/contracts/token/ERC721/IERC721Receiver.sol",
								"@openzeppelin/contracts/token/ERC721/extensions/IERC721Metadata.sol",
								"@openzeppelin/contracts/utils/Address.sol",
								"@openzeppelin/contracts/utils/Context.sol",
								"@openzeppelin/contracts/utils/Counters.sol",
								"@openzeppelin/contracts/utils/Strings.sol",
								"@openzeppelin/contracts/utils/introspection/ERC165.sol",
								"@openzeppelin/contracts/utils/introspection/IERC165.sol",
								"@openzeppelin/contracts/utils/math/Math.sol",
								"contracts/SingapurContract.sol",
								"#utility.yul"
							]
						},
						"methodIdentifiers": {
							"approve(address,uint256)": "095ea7b3",
							"balanceOf(address)": "70a08231",
							"getApproved(uint256)": "081812fc",
							"isApprovedForAll(address,address)": "e985e9c5",
							"name()": "06fdde03",
							"ownerOf(uint256)": "6352211e",
							"safeMint(address)": "40d097c3",
							"safeTransferFrom(address,address,uint256)": "42842e0e",
							"safeTransferFrom(address,address,uint256,bytes)": "b88d4fde",
							"setApprovalForAll(address,bool)": "a22cb465",
							"supportsInterface(bytes4)": "01ffc9a7",
							"symbol()": "95d89b41",
							"tokenURI(uint256)": "c87b56dd",
							"transferFrom(address,address,uint256)": "23b872dd"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.21+commit.d9974bed\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"approved\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"Approval\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"bool\",\"name\":\"approved\",\"type\":\"bool\"}],\"name\":\"ApprovalForAll\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"Transfer\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"approve\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"}],\"name\":\"balanceOf\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"getApproved\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"}],\"name\":\"isApprovedForAll\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"name\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"ownerOf\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"}],\"name\":\"safeMint\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"safeTransferFrom\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"},{\"internalType\":\"bytes\",\"name\":\"data\",\"type\":\"bytes\"}],\"name\":\"safeTransferFrom\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"},{\"internalType\":\"bool\",\"name\":\"approved\",\"type\":\"bool\"}],\"name\":\"setApprovalForAll\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes4\",\"name\":\"interfaceId\",\"type\":\"bytes4\"}],\"name\":\"supportsInterface\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"symbol\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"tokenURI\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"transferFrom\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"events\":{\"Approval(address,address,uint256)\":{\"details\":\"Emitted when `owner` enables `approved` to manage the `tokenId` token.\"},\"ApprovalForAll(address,address,bool)\":{\"details\":\"Emitted when `owner` enables or disables (`approved`) `operator` to manage all of its assets.\"},\"Transfer(address,address,uint256)\":{\"details\":\"Emitted when `tokenId` token is transferred from `from` to `to`.\"}},\"kind\":\"dev\",\"methods\":{\"approve(address,uint256)\":{\"details\":\"See {IERC721-approve}.\"},\"balanceOf(address)\":{\"details\":\"See {IERC721-balanceOf}.\"},\"getApproved(uint256)\":{\"details\":\"See {IERC721-getApproved}.\"},\"isApprovedForAll(address,address)\":{\"details\":\"See {IERC721-isApprovedForAll}.\"},\"name()\":{\"details\":\"See {IERC721Metadata-name}.\"},\"ownerOf(uint256)\":{\"details\":\"See {IERC721-ownerOf}.\"},\"safeTransferFrom(address,address,uint256)\":{\"details\":\"See {IERC721-safeTransferFrom}.\"},\"safeTransferFrom(address,address,uint256,bytes)\":{\"details\":\"See {IERC721-safeTransferFrom}.\"},\"setApprovalForAll(address,bool)\":{\"details\":\"See {IERC721-setApprovalForAll}.\"},\"supportsInterface(bytes4)\":{\"details\":\"See {IERC165-supportsInterface}.\"},\"symbol()\":{\"details\":\"See {IERC721Metadata-symbol}.\"},\"tokenURI(uint256)\":{\"details\":\"See {IERC721Metadata-tokenURI}.\"},\"transferFrom(address,address,uint256)\":{\"details\":\"See {IERC721-transferFrom}.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"contracts/SingapurContract.sol\":\"MintNFT\"},\"evmVersion\":\"shanghai\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/token/ERC721/ERC721.sol\":{\"keccak256\":\"0xd89f3585b211fc9e3408384a4c4efdc3a93b2f877a3821046fa01c219d35be1b\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://5ea15ef7c8980240ccd46df13809d163f749bc0a01d8bced1875660d4872da1c\",\"dweb:/ipfs/QmbDfAT9VeCSG4cnPd6tjDMp8ED85dLHbWyMyv7wbmL4CH\"]},\"@openzeppelin/contracts/token/ERC721/IERC721.sol\":{\"keccak256\":\"0xab28a56179c1db258c9bf5235b382698cb650debecb51b23d12be9e241374b68\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://daae589a9d6fa7e55f99f86c0a16796ca490f243fb3693632c3711c0646c1d56\",\"dweb:/ipfs/QmR3zpd7wNw3rcUdekwiv6FYHJqksuTCXLVioTxu6Fbxk3\"]},\"@openzeppelin/contracts/token/ERC721/IERC721Receiver.sol\":{\"keccak256\":\"0xa82b58eca1ee256be466e536706850163d2ec7821945abd6b4778cfb3bee37da\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://6e75cf83beb757b8855791088546b8337e9d4684e169400c20d44a515353b708\",\"dweb:/ipfs/QmYvPafLfoquiDMEj7CKHtvbgHu7TJNPSVPSCjrtjV8HjV\"]},\"@openzeppelin/contracts/token/ERC721/extensions/IERC721Metadata.sol\":{\"keccak256\":\"0x75b829ff2f26c14355d1cba20e16fe7b29ca58eb5fef665ede48bc0f9c6c74b9\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://a0a107160525724f9e1bbbab031defc2f298296dd9e331f16a6f7130cec32146\",\"dweb:/ipfs/QmemujxSd7gX8A9M8UwmNbz4Ms3U9FG9QfudUgxwvTmPWf\"]},\"@openzeppelin/contracts/utils/Address.sol\":{\"keccak256\":\"0xf96f969e24029d43d0df89e59d365f277021dac62b48e1c1e3ebe0acdd7f1ca1\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://ec772b45a624be516f1c81970caa8a2e144301e9d0921cbc1a2789fef39a1269\",\"dweb:/ipfs/QmNyjwxCrGhQMyzLD93oUobJXVe9ceJvRvfXwbEtuxPiEj\"]},\"@openzeppelin/contracts/utils/Context.sol\":{\"keccak256\":\"0xe2e337e6dde9ef6b680e07338c493ebea1b5fd09b43424112868e9cc1706bca7\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://6df0ddf21ce9f58271bdfaa85cde98b200ef242a05a3f85c2bc10a8294800a92\",\"dweb:/ipfs/QmRK2Y5Yc6BK7tGKkgsgn3aJEQGi5aakeSPZvS65PV8Xp3\"]},\"@openzeppelin/contracts/utils/Counters.sol\":{\"keccak256\":\"0xf0018c2440fbe238dd3a8732fa8e17a0f9dce84d31451dc8a32f6d62b349c9f1\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://59e1c62884d55b70f3ae5432b44bb3166ad71ae3acd19c57ab6ddc3c87c325ee\",\"dweb:/ipfs/QmezuXg5GK5oeA4F91EZhozBFekhq5TD966bHPH18cCqhu\"]},\"@openzeppelin/contracts/utils/Strings.sol\":{\"keccak256\":\"0xa4d1d62251f8574deb032a35fc948386a9b4de74b812d4f545a1ac120486b48a\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://8c969013129ba9e651a20735ef659fef6d8a1139ea3607bd4b26ddea2d645634\",\"dweb:/ipfs/QmVhVa6LGuzAcB8qgDtVHRkucn4ihj5UZr8xBLcJkP6ucb\"]},\"@openzeppelin/contracts/utils/introspection/ERC165.sol\":{\"keccak256\":\"0xd10975de010d89fd1c78dc5e8a9a7e7f496198085c151648f20cba166b32582b\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://fb0048dee081f6fffa5f74afc3fb328483c2a30504e94a0ddd2a5114d731ec4d\",\"dweb:/ipfs/QmZptt1nmYoA5SgjwnSgWqgUSDgm4q52Yos3xhnMv3MV43\"]},\"@openzeppelin/contracts/utils/introspection/IERC165.sol\":{\"keccak256\":\"0x447a5f3ddc18419d41ff92b3773fb86471b1db25773e07f877f548918a185bf1\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://be161e54f24e5c6fae81a12db1a8ae87bc5ae1b0ddc805d82a1440a68455088f\",\"dweb:/ipfs/QmP7C3CHdY9urF4dEMb9wmsp1wMxHF6nhA2yQE5SKiPAdy\"]},\"@openzeppelin/contracts/utils/math/Math.sol\":{\"keccak256\":\"0xa1e8e83cd0087785df04ac79fb395d9f3684caeaf973d9e2c71caef723a3a5d6\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://33bbf48cc069be677705037ba7520c22b1b622c23b33e1a71495f2d36549d40b\",\"dweb:/ipfs/Qmct36zWXv3j7LZB83uwbg7TXwnZSN1fqHNDZ93GG98bGz\"]},\"contracts/SingapurContract.sol\":{\"keccak256\":\"0x3075db53613488b997402845ded5ecf4757ac61ff8a696870b6501e4d1270930\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://7cdb89217a48cfa8f792ab2d4907cc9c69eadb98a7ad2185ede9d9f5f9f51308\",\"dweb:/ipfs/QmfKMnqYuPu8NRMxzbsTqGi26P2epyWUFeqvXAaYwD3DUM\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [
							{
								"astId": 25,
								"contract": "contracts/SingapurContract.sol:MintNFT",
								"label": "_name",
								"offset": 0,
								"slot": "0",
								"type": "t_string_storage"
							},
							{
								"astId": 27,
								"contract": "contracts/SingapurContract.sol:MintNFT",
								"label": "_symbol",
								"offset": 0,
								"slot": "1",
								"type": "t_string_storage"
							},
							{
								"astId": 31,
								"contract": "contracts/SingapurContract.sol:MintNFT",
								"label": "_owners",
								"offset": 0,
								"slot": "2",
								"type": "t_mapping(t_uint256,t_address)"
							},
							{
								"astId": 35,
								"contract": "contracts/SingapurContract.sol:MintNFT",
								"label": "_balances",
								"offset": 0,
								"slot": "3",
								"type": "t_mapping(t_address,t_uint256)"
							},
							{
								"astId": 39,
								"contract": "contracts/SingapurContract.sol:MintNFT",
								"label": "_tokenApprovals",
								"offset": 0,
								"slot": "4",
								"type": "t_mapping(t_uint256,t_address)"
							},
							{
								"astId": 45,
								"contract": "contracts/SingapurContract.sol:MintNFT",
								"label": "_operatorApprovals",
								"offset": 0,
								"slot": "5",
								"type": "t_mapping(t_address,t_mapping(t_address,t_bool))"
							},
							{
								"astId": 2620,
								"contract": "contracts/SingapurContract.sol:MintNFT",
								"label": "_tokenIdCounter",
								"offset": 0,
								"slot": "6",
								"type": "t_struct(Counter)1463_storage"
							}
						],
						"types": {
							"t_address": {
								"encoding": "inplace",
								"label": "address",
								"numberOfBytes": "20"
							},
							"t_bool": {
								"encoding": "inplace",
								"label": "bool",
								"numberOfBytes": "1"
							},
							"t_mapping(t_address,t_bool)": {
								"encoding": "mapping",
								"key": "t_address",
								"label": "mapping(address => bool)",
								"numberOfBytes": "32",
								"value": "t_bool"
							},
							"t_mapping(t_address,t_mapping(t_address,t_bool))": {
								"encoding": "mapping",
								"key": "t_address",
								"label": "mapping(address => mapping(address => bool))",
								"numberOfBytes": "32",
								"value": "t_mapping(t_address,t_bool)"
							},
							"t_mapping(t_address,t_uint256)": {
								"encoding": "mapping",
								"key": "t_address",
								"label": "mapping(address => uint256)",
								"numberOfBytes": "32",
								"value": "t_uint256"
							},
							"t_mapping(t_uint256,t_address)": {
								"encoding": "mapping",
								"key": "t_uint256",
								"label": "mapping(uint256 => address)",
								"numberOfBytes": "32",
								"value": "t_address"
							},
							"t_string_storage": {
								"encoding": "bytes",
								"label": "string",
								"numberOfBytes": "32"
							},
							"t_struct(Counter)1463_storage": {
								"encoding": "inplace",
								"label": "struct Counters.Counter",
								"members": [
									{
										"astId": 1462,
										"contract": "contracts/SingapurContract.sol:MintNFT",
										"label": "_value",
										"offset": 0,
										"slot": "0",
										"type": "t_uint256"
									}
								],
								"numberOfBytes": "32"
							},
							"t_uint256": {
								"encoding": "inplace",
								"label": "uint256",
								"numberOfBytes": "32"
							}
						}
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			}
		},
		"sources": {
			"@openzeppelin/contracts/token/ERC721/ERC721.sol": {
				"ast": {
					"absolutePath": "@openzeppelin/contracts/token/ERC721/ERC721.sol",
					"exportedSymbols": {
						"Address": [
							1435
						],
						"Context": [
							1457
						],
						"ERC165": [
							1730
						],
						"ERC721": [
							944
						],
						"IERC165": [
							1742
						],
						"IERC721": [
							1060
						],
						"IERC721Metadata": [
							1105
						],
						"IERC721Receiver": [
							1078
						],
						"Math": [
							2607
						],
						"Strings": [
							1706
						]
					},
					"id": 945,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 1,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".0"
							],
							"nodeType": "PragmaDirective",
							"src": "107:23:0"
						},
						{
							"absolutePath": "@openzeppelin/contracts/token/ERC721/IERC721.sol",
							"file": "./IERC721.sol",
							"id": 2,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 945,
							"sourceUnit": 1061,
							"src": "132:23:0",
							"symbolAliases": [],
							"unitAlias": ""
						},
						{
							"absolutePath": "@openzeppelin/contracts/token/ERC721/IERC721Receiver.sol",
							"file": "./IERC721Receiver.sol",
							"id": 3,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 945,
							"sourceUnit": 1079,
							"src": "156:31:0",
							"symbolAliases": [],
							"unitAlias": ""
						},
						{
							"absolutePath": "@openzeppelin/contracts/token/ERC721/extensions/IERC721Metadata.sol",
							"file": "./extensions/IERC721Metadata.sol",
							"id": 4,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 945,
							"sourceUnit": 1106,
							"src": "188:42:0",
							"symbolAliases": [],
							"unitAlias": ""
						},
						{
							"absolutePath": "@openzeppelin/contracts/utils/Address.sol",
							"file": "../../utils/Address.sol",
							"id": 5,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 945,
							"sourceUnit": 1436,
							"src": "231:33:0",
							"symbolAliases": [],
							"unitAlias": ""
						},
						{
							"absolutePath": "@openzeppelin/contracts/utils/Context.sol",
							"file": "../../utils/Context.sol",
							"id": 6,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 945,
							"sourceUnit": 1458,
							"src": "265:33:0",
							"symbolAliases": [],
							"unitAlias": ""
						},
						{
							"absolutePath": "@openzeppelin/contracts/utils/Strings.sol",
							"file": "../../utils/Strings.sol",
							"id": 7,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 945,
							"sourceUnit": 1707,
							"src": "299:33:0",
							"symbolAliases": [],
							"unitAlias": ""
						},
						{
							"absolutePath": "@openzeppelin/contracts/utils/introspection/ERC165.sol",
							"file": "../../utils/introspection/ERC165.sol",
							"id": 8,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 945,
							"sourceUnit": 1731,
							"src": "333:46:0",
							"symbolAliases": [],
							"unitAlias": ""
						},
						{
							"abstract": false,
							"baseContracts": [
								{
									"baseName": {
										"id": 10,
										"name": "Context",
										"nameLocations": [
											"647:7:0"
										],
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 1457,
										"src": "647:7:0"
									},
									"id": 11,
									"nodeType": "InheritanceSpecifier",
									"src": "647:7:0"
								},
								{
									"baseName": {
										"id": 12,
										"name": "ERC165",
										"nameLocations": [
											"656:6:0"
										],
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 1730,
										"src": "656:6:0"
									},
									"id": 13,
									"nodeType": "InheritanceSpecifier",
									"src": "656:6:0"
								},
								{
									"baseName": {
										"id": 14,
										"name": "IERC721",
										"nameLocations": [
											"664:7:0"
										],
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 1060,
										"src": "664:7:0"
									},
									"id": 15,
									"nodeType": "InheritanceSpecifier",
									"src": "664:7:0"
								},
								{
									"baseName": {
										"id": 16,
										"name": "IERC721Metadata",
										"nameLocations": [
											"673:15:0"
										],
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 1105,
										"src": "673:15:0"
									},
									"id": 17,
									"nodeType": "InheritanceSpecifier",
									"src": "673:15:0"
								}
							],
							"canonicalName": "ERC721",
							"contractDependencies": [],
							"contractKind": "contract",
							"documentation": {
								"id": 9,
								"nodeType": "StructuredDocumentation",
								"src": "381:246:0",
								"text": " @dev Implementation of https://eips.ethereum.org/EIPS/eip-721[ERC721] Non-Fungible Token Standard, including\n the Metadata extension, but not including the Enumerable extension, which is available separately as\n {ERC721Enumerable}."
							},
							"fullyImplemented": true,
							"id": 944,
							"linearizedBaseContracts": [
								944,
								1105,
								1060,
								1730,
								1742,
								1457
							],
							"name": "ERC721",
							"nameLocation": "637:6:0",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"global": false,
									"id": 20,
									"libraryName": {
										"id": 18,
										"name": "Address",
										"nameLocations": [
											"701:7:0"
										],
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 1435,
										"src": "701:7:0"
									},
									"nodeType": "UsingForDirective",
									"src": "695:26:0",
									"typeName": {
										"id": 19,
										"name": "address",
										"nodeType": "ElementaryTypeName",
										"src": "713:7:0",
										"stateMutability": "nonpayable",
										"typeDescriptions": {
											"typeIdentifier": "t_address",
											"typeString": "address"
										}
									}
								},
								{
									"global": false,
									"id": 23,
									"libraryName": {
										"id": 21,
										"name": "Strings",
										"nameLocations": [
											"732:7:0"
										],
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 1706,
										"src": "732:7:0"
									},
									"nodeType": "UsingForDirective",
									"src": "726:26:0",
									"typeName": {
										"id": 22,
										"name": "uint256",
										"nodeType": "ElementaryTypeName",
										"src": "744:7:0",
										"typeDescriptions": {
											"typeIdentifier": "t_uint256",
											"typeString": "uint256"
										}
									}
								},
								{
									"constant": false,
									"id": 25,
									"mutability": "mutable",
									"name": "_name",
									"nameLocation": "791:5:0",
									"nodeType": "VariableDeclaration",
									"scope": 944,
									"src": "776:20:0",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_string_storage",
										"typeString": "string"
									},
									"typeName": {
										"id": 24,
										"name": "string",
										"nodeType": "ElementaryTypeName",
										"src": "776:6:0",
										"typeDescriptions": {
											"typeIdentifier": "t_string_storage_ptr",
											"typeString": "string"
										}
									},
									"visibility": "private"
								},
								{
									"constant": false,
									"id": 27,
									"mutability": "mutable",
									"name": "_symbol",
									"nameLocation": "838:7:0",
									"nodeType": "VariableDeclaration",
									"scope": 944,
									"src": "823:22:0",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_string_storage",
										"typeString": "string"
									},
									"typeName": {
										"id": 26,
										"name": "string",
										"nodeType": "ElementaryTypeName",
										"src": "823:6:0",
										"typeDescriptions": {
											"typeIdentifier": "t_string_storage_ptr",
											"typeString": "string"
										}
									},
									"visibility": "private"
								},
								{
									"constant": false,
									"id": 31,
									"mutability": "mutable",
									"name": "_owners",
									"nameLocation": "934:7:0",
									"nodeType": "VariableDeclaration",
									"scope": 944,
									"src": "898:43:0",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_mapping$_t_uint256_$_t_address_$",
										"typeString": "mapping(uint256 => address)"
									},
									"typeName": {
										"id": 30,
										"keyName": "",
										"keyNameLocation": "-1:-1:-1",
										"keyType": {
											"id": 28,
											"name": "uint256",
											"nodeType": "ElementaryTypeName",
											"src": "906:7:0",
											"typeDescriptions": {
												"typeIdentifier": "t_uint256",
												"typeString": "uint256"
											}
										},
										"nodeType": "Mapping",
										"src": "898:27:0",
										"typeDescriptions": {
											"typeIdentifier": "t_mapping$_t_uint256_$_t_address_$",
											"typeString": "mapping(uint256 => address)"
										},
										"valueName": "",
										"valueNameLocation": "-1:-1:-1",
										"valueType": {
											"id": 29,
											"name": "address",
											"nodeType": "ElementaryTypeName",
											"src": "917:7:0",
											"stateMutability": "nonpayable",
											"typeDescriptions": {
												"typeIdentifier": "t_address",
												"typeString": "address"
											}
										}
									},
									"visibility": "private"
								},
								{
									"constant": false,
									"id": 35,
									"mutability": "mutable",
									"name": "_balances",
									"nameLocation": "1028:9:0",
									"nodeType": "VariableDeclaration",
									"scope": 944,
									"src": "992:45:0",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
										"typeString": "mapping(address => uint256)"
									},
									"typeName": {
										"id": 34,
										"keyName": "",
										"keyNameLocation": "-1:-1:-1",
										"keyType": {
											"id": 32,
											"name": "address",
											"nodeType": "ElementaryTypeName",
											"src": "1000:7:0",
											"typeDescriptions": {
												"typeIdentifier": "t_address",
												"typeString": "address"
											}
										},
										"nodeType": "Mapping",
										"src": "992:27:0",
										"typeDescriptions": {
											"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
											"typeString": "mapping(address => uint256)"
										},
										"valueName": "",
										"valueNameLocation": "-1:-1:-1",
										"valueType": {
											"id": 33,
											"name": "uint256",
											"nodeType": "ElementaryTypeName",
											"src": "1011:7:0",
											"typeDescriptions": {
												"typeIdentifier": "t_uint256",
												"typeString": "uint256"
											}
										}
									},
									"visibility": "private"
								},
								{
									"constant": false,
									"id": 39,
									"mutability": "mutable",
									"name": "_tokenApprovals",
									"nameLocation": "1129:15:0",
									"nodeType": "VariableDeclaration",
									"scope": 944,
									"src": "1093:51:0",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_mapping$_t_uint256_$_t_address_$",
										"typeString": "mapping(uint256 => address)"
									},
									"typeName": {
										"id": 38,
										"keyName": "",
										"keyNameLocation": "-1:-1:-1",
										"keyType": {
											"id": 36,
											"name": "uint256",
											"nodeType": "ElementaryTypeName",
											"src": "1101:7:0",
											"typeDescriptions": {
												"typeIdentifier": "t_uint256",
												"typeString": "uint256"
											}
										},
										"nodeType": "Mapping",
										"src": "1093:27:0",
										"typeDescriptions": {
											"typeIdentifier": "t_mapping$_t_uint256_$_t_address_$",
											"typeString": "mapping(uint256 => address)"
										},
										"valueName": "",
										"valueNameLocation": "-1:-1:-1",
										"valueType": {
											"id": 37,
											"name": "address",
											"nodeType": "ElementaryTypeName",
											"src": "1112:7:0",
											"stateMutability": "nonpayable",
											"typeDescriptions": {
												"typeIdentifier": "t_address",
												"typeString": "address"
											}
										}
									},
									"visibility": "private"
								},
								{
									"constant": false,
									"id": 45,
									"mutability": "mutable",
									"name": "_operatorApprovals",
									"nameLocation": "1252:18:0",
									"nodeType": "VariableDeclaration",
									"scope": 944,
									"src": "1199:71:0",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_mapping$_t_address_$_t_mapping$_t_address_$_t_bool_$_$",
										"typeString": "mapping(address => mapping(address => bool))"
									},
									"typeName": {
										"id": 44,
										"keyName": "",
										"keyNameLocation": "-1:-1:-1",
										"keyType": {
											"id": 40,
											"name": "address",
											"nodeType": "ElementaryTypeName",
											"src": "1207:7:0",
											"typeDescriptions": {
												"typeIdentifier": "t_address",
												"typeString": "address"
											}
										},
										"nodeType": "Mapping",
										"src": "1199:44:0",
										"typeDescriptions": {
											"typeIdentifier": "t_mapping$_t_address_$_t_mapping$_t_address_$_t_bool_$_$",
											"typeString": "mapping(address => mapping(address => bool))"
										},
										"valueName": "",
										"valueNameLocation": "-1:-1:-1",
										"valueType": {
											"id": 43,
											"keyName": "",
											"keyNameLocation": "-1:-1:-1",
											"keyType": {
												"id": 41,
												"name": "address",
												"nodeType": "ElementaryTypeName",
												"src": "1226:7:0",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												}
											},
											"nodeType": "Mapping",
											"src": "1218:24:0",
											"typeDescriptions": {
												"typeIdentifier": "t_mapping$_t_address_$_t_bool_$",
												"typeString": "mapping(address => bool)"
											},
											"valueName": "",
											"valueNameLocation": "-1:-1:-1",
											"valueType": {
												"id": 42,
												"name": "bool",
												"nodeType": "ElementaryTypeName",
												"src": "1237:4:0",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												}
											}
										}
									},
									"visibility": "private"
								},
								{
									"body": {
										"id": 61,
										"nodeType": "Block",
										"src": "1446:57:0",
										"statements": [
											{
												"expression": {
													"id": 55,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 53,
														"name": "_name",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 25,
														"src": "1456:5:0",
														"typeDescriptions": {
															"typeIdentifier": "t_string_storage",
															"typeString": "string storage ref"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"id": 54,
														"name": "name_",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 48,
														"src": "1464:5:0",
														"typeDescriptions": {
															"typeIdentifier": "t_string_memory_ptr",
															"typeString": "string memory"
														}
													},
													"src": "1456:13:0",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage",
														"typeString": "string storage ref"
													}
												},
												"id": 56,
												"nodeType": "ExpressionStatement",
												"src": "1456:13:0"
											},
											{
												"expression": {
													"id": 59,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 57,
														"name": "_symbol",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 27,
														"src": "1479:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_string_storage",
															"typeString": "string storage ref"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"id": 58,
														"name": "symbol_",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 50,
														"src": "1489:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_string_memory_ptr",
															"typeString": "string memory"
														}
													},
													"src": "1479:17:0",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage",
														"typeString": "string storage ref"
													}
												},
												"id": 60,
												"nodeType": "ExpressionStatement",
												"src": "1479:17:0"
											}
										]
									},
									"documentation": {
										"id": 46,
										"nodeType": "StructuredDocumentation",
										"src": "1277:108:0",
										"text": " @dev Initializes the contract by setting a `name` and a `symbol` to the token collection."
									},
									"id": 62,
									"implemented": true,
									"kind": "constructor",
									"modifiers": [],
									"name": "",
									"nameLocation": "-1:-1:-1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 51,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 48,
												"mutability": "mutable",
												"name": "name_",
												"nameLocation": "1416:5:0",
												"nodeType": "VariableDeclaration",
												"scope": 62,
												"src": "1402:19:0",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 47,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "1402:6:0",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 50,
												"mutability": "mutable",
												"name": "symbol_",
												"nameLocation": "1437:7:0",
												"nodeType": "VariableDeclaration",
												"scope": 62,
												"src": "1423:21:0",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 49,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "1423:6:0",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1401:44:0"
									},
									"returnParameters": {
										"id": 52,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1446:0:0"
									},
									"scope": 944,
									"src": "1390:113:0",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "public"
								},
								{
									"baseFunctions": [
										1729,
										1741
									],
									"body": {
										"id": 92,
										"nodeType": "Block",
										"src": "1678:192:0",
										"statements": [
											{
												"expression": {
													"commonType": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													},
													"id": 90,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"commonType": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														},
														"id": 85,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftExpression": {
															"commonType": {
																"typeIdentifier": "t_bytes4",
																"typeString": "bytes4"
															},
															"id": 78,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 73,
																"name": "interfaceId",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 65,
																"src": "1707:11:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_bytes4",
																	"typeString": "bytes4"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "==",
															"rightExpression": {
																"expression": {
																	"arguments": [
																		{
																			"id": 75,
																			"name": "IERC721",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1060,
																			"src": "1727:7:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_type$_t_contract$_IERC721_$1060_$",
																				"typeString": "type(contract IERC721)"
																			}
																		}
																	],
																	"expression": {
																		"argumentTypes": [
																			{
																				"typeIdentifier": "t_type$_t_contract$_IERC721_$1060_$",
																				"typeString": "type(contract IERC721)"
																			}
																		],
																		"id": 74,
																		"name": "type",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 4294967269,
																		"src": "1722:4:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_function_metatype_pure$__$returns$__$",
																			"typeString": "function () pure"
																		}
																	},
																	"id": 76,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "functionCall",
																	"lValueRequested": false,
																	"nameLocations": [],
																	"names": [],
																	"nodeType": "FunctionCall",
																	"src": "1722:13:0",
																	"tryCall": false,
																	"typeDescriptions": {
																		"typeIdentifier": "t_magic_meta_type_t_contract$_IERC721_$1060",
																		"typeString": "type(contract IERC721)"
																	}
																},
																"id": 77,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"memberLocation": "1736:11:0",
																"memberName": "interfaceId",
																"nodeType": "MemberAccess",
																"src": "1722:25:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_bytes4",
																	"typeString": "bytes4"
																}
															},
															"src": "1707:40:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"nodeType": "BinaryOperation",
														"operator": "||",
														"rightExpression": {
															"commonType": {
																"typeIdentifier": "t_bytes4",
																"typeString": "bytes4"
															},
															"id": 84,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 79,
																"name": "interfaceId",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 65,
																"src": "1763:11:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_bytes4",
																	"typeString": "bytes4"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "==",
															"rightExpression": {
																"expression": {
																	"arguments": [
																		{
																			"id": 81,
																			"name": "IERC721Metadata",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1105,
																			"src": "1783:15:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_type$_t_contract$_IERC721Metadata_$1105_$",
																				"typeString": "type(contract IERC721Metadata)"
																			}
																		}
																	],
																	"expression": {
																		"argumentTypes": [
																			{
																				"typeIdentifier": "t_type$_t_contract$_IERC721Metadata_$1105_$",
																				"typeString": "type(contract IERC721Metadata)"
																			}
																		],
																		"id": 80,
																		"name": "type",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 4294967269,
																		"src": "1778:4:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_function_metatype_pure$__$returns$__$",
																			"typeString": "function () pure"
																		}
																	},
																	"id": 82,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "functionCall",
																	"lValueRequested": false,
																	"nameLocations": [],
																	"names": [],
																	"nodeType": "FunctionCall",
																	"src": "1778:21:0",
																	"tryCall": false,
																	"typeDescriptions": {
																		"typeIdentifier": "t_magic_meta_type_t_contract$_IERC721Metadata_$1105",
																		"typeString": "type(contract IERC721Metadata)"
																	}
																},
																"id": 83,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"memberLocation": "1800:11:0",
																"memberName": "interfaceId",
																"nodeType": "MemberAccess",
																"src": "1778:33:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_bytes4",
																	"typeString": "bytes4"
																}
															},
															"src": "1763:48:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"src": "1707:104:0",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "||",
													"rightExpression": {
														"arguments": [
															{
																"id": 88,
																"name": "interfaceId",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 65,
																"src": "1851:11:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_bytes4",
																	"typeString": "bytes4"
																}
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_bytes4",
																	"typeString": "bytes4"
																}
															],
															"expression": {
																"id": 86,
																"name": "super",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 4294967271,
																"src": "1827:5:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_super$_ERC721_$944_$",
																	"typeString": "type(contract super ERC721)"
																}
															},
															"id": 87,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "1833:17:0",
															"memberName": "supportsInterface",
															"nodeType": "MemberAccess",
															"referencedDeclaration": 1729,
															"src": "1827:23:0",
															"typeDescriptions": {
																"typeIdentifier": "t_function_internal_view$_t_bytes4_$returns$_t_bool_$",
																"typeString": "function (bytes4) view returns (bool)"
															}
														},
														"id": 89,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "functionCall",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "1827:36:0",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"src": "1707:156:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"functionReturnParameters": 72,
												"id": 91,
												"nodeType": "Return",
												"src": "1688:175:0"
											}
										]
									},
									"documentation": {
										"id": 63,
										"nodeType": "StructuredDocumentation",
										"src": "1509:56:0",
										"text": " @dev See {IERC165-supportsInterface}."
									},
									"functionSelector": "01ffc9a7",
									"id": 93,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "supportsInterface",
									"nameLocation": "1579:17:0",
									"nodeType": "FunctionDefinition",
									"overrides": {
										"id": 69,
										"nodeType": "OverrideSpecifier",
										"overrides": [
											{
												"id": 67,
												"name": "ERC165",
												"nameLocations": [
													"1646:6:0"
												],
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 1730,
												"src": "1646:6:0"
											},
											{
												"id": 68,
												"name": "IERC165",
												"nameLocations": [
													"1654:7:0"
												],
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 1742,
												"src": "1654:7:0"
											}
										],
										"src": "1637:25:0"
									},
									"parameters": {
										"id": 66,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 65,
												"mutability": "mutable",
												"name": "interfaceId",
												"nameLocation": "1604:11:0",
												"nodeType": "VariableDeclaration",
												"scope": 93,
												"src": "1597:18:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes4",
													"typeString": "bytes4"
												},
												"typeName": {
													"id": 64,
													"name": "bytes4",
													"nodeType": "ElementaryTypeName",
													"src": "1597:6:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes4",
														"typeString": "bytes4"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1596:20:0"
									},
									"returnParameters": {
										"id": 72,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 71,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 93,
												"src": "1672:4:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 70,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "1672:4:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1671:6:0"
									},
									"scope": 944,
									"src": "1570:300:0",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "public"
								},
								{
									"baseFunctions": [
										985
									],
									"body": {
										"id": 116,
										"nodeType": "Block",
										"src": "2010:123:0",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															"id": 108,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 103,
																"name": "owner",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 96,
																"src": "2028:5:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "!=",
															"rightExpression": {
																"arguments": [
																	{
																		"hexValue": "30",
																		"id": 106,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "2045:1:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		},
																		"value": "0"
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		}
																	],
																	"id": 105,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"lValueRequested": false,
																	"nodeType": "ElementaryTypeNameExpression",
																	"src": "2037:7:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_type$_t_address_$",
																		"typeString": "type(address)"
																	},
																	"typeName": {
																		"id": 104,
																		"name": "address",
																		"nodeType": "ElementaryTypeName",
																		"src": "2037:7:0",
																		"typeDescriptions": {}
																	}
																},
																"id": 107,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "typeConversion",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "2037:10:0",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"src": "2028:19:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "4552433732313a2061646472657373207a65726f206973206e6f7420612076616c6964206f776e6572",
															"id": 109,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "2049:43:0",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_6d05c90094f31cfeb8f0eb86f0a513af3f7f8992991fbde41b08aa7960677159",
																"typeString": "literal_string \"ERC721: address zero is not a valid owner\""
															},
															"value": "ERC721: address zero is not a valid owner"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_6d05c90094f31cfeb8f0eb86f0a513af3f7f8992991fbde41b08aa7960677159",
																"typeString": "literal_string \"ERC721: address zero is not a valid owner\""
															}
														],
														"id": 102,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "2020:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 110,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2020:73:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 111,
												"nodeType": "ExpressionStatement",
												"src": "2020:73:0"
											},
											{
												"expression": {
													"baseExpression": {
														"id": 112,
														"name": "_balances",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 35,
														"src": "2110:9:0",
														"typeDescriptions": {
															"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
															"typeString": "mapping(address => uint256)"
														}
													},
													"id": 114,
													"indexExpression": {
														"id": 113,
														"name": "owner",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 96,
														"src": "2120:5:0",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"isConstant": false,
													"isLValue": true,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "IndexAccess",
													"src": "2110:16:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 101,
												"id": 115,
												"nodeType": "Return",
												"src": "2103:23:0"
											}
										]
									},
									"documentation": {
										"id": 94,
										"nodeType": "StructuredDocumentation",
										"src": "1876:48:0",
										"text": " @dev See {IERC721-balanceOf}."
									},
									"functionSelector": "70a08231",
									"id": 117,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "balanceOf",
									"nameLocation": "1938:9:0",
									"nodeType": "FunctionDefinition",
									"overrides": {
										"id": 98,
										"nodeType": "OverrideSpecifier",
										"overrides": [],
										"src": "1983:8:0"
									},
									"parameters": {
										"id": 97,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 96,
												"mutability": "mutable",
												"name": "owner",
												"nameLocation": "1956:5:0",
												"nodeType": "VariableDeclaration",
												"scope": 117,
												"src": "1948:13:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 95,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1948:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1947:15:0"
									},
									"returnParameters": {
										"id": 101,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 100,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 117,
												"src": "2001:7:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 99,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2001:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2000:9:0"
									},
									"scope": 944,
									"src": "1929:204:0",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "public"
								},
								{
									"baseFunctions": [
										993
									],
									"body": {
										"id": 144,
										"nodeType": "Block",
										"src": "2271:138:0",
										"statements": [
											{
												"assignments": [
													127
												],
												"declarations": [
													{
														"constant": false,
														"id": 127,
														"mutability": "mutable",
														"name": "owner",
														"nameLocation": "2289:5:0",
														"nodeType": "VariableDeclaration",
														"scope": 144,
														"src": "2281:13:0",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														},
														"typeName": {
															"id": 126,
															"name": "address",
															"nodeType": "ElementaryTypeName",
															"src": "2281:7:0",
															"stateMutability": "nonpayable",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 131,
												"initialValue": {
													"arguments": [
														{
															"id": 129,
															"name": "tokenId",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 120,
															"src": "2306:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 128,
														"name": "_ownerOf",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 427,
														"src": "2297:8:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_view$_t_uint256_$returns$_t_address_$",
															"typeString": "function (uint256) view returns (address)"
														}
													},
													"id": 130,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2297:17:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "2281:33:0"
											},
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															"id": 138,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 133,
																"name": "owner",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 127,
																"src": "2332:5:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "!=",
															"rightExpression": {
																"arguments": [
																	{
																		"hexValue": "30",
																		"id": 136,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "2349:1:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		},
																		"value": "0"
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		}
																	],
																	"id": 135,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"lValueRequested": false,
																	"nodeType": "ElementaryTypeNameExpression",
																	"src": "2341:7:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_type$_t_address_$",
																		"typeString": "type(address)"
																	},
																	"typeName": {
																		"id": 134,
																		"name": "address",
																		"nodeType": "ElementaryTypeName",
																		"src": "2341:7:0",
																		"typeDescriptions": {}
																	}
																},
																"id": 137,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "typeConversion",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "2341:10:0",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"src": "2332:19:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "4552433732313a20696e76616c696420746f6b656e204944",
															"id": 139,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "2353:26:0",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_b08d2b0fec7cc108ab049809a8beb42779d969a49299d0c317c907d9db22974f",
																"typeString": "literal_string \"ERC721: invalid token ID\""
															},
															"value": "ERC721: invalid token ID"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_b08d2b0fec7cc108ab049809a8beb42779d969a49299d0c317c907d9db22974f",
																"typeString": "literal_string \"ERC721: invalid token ID\""
															}
														],
														"id": 132,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "2324:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 140,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2324:56:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 141,
												"nodeType": "ExpressionStatement",
												"src": "2324:56:0"
											},
											{
												"expression": {
													"id": 142,
													"name": "owner",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 127,
													"src": "2397:5:0",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"functionReturnParameters": 125,
												"id": 143,
												"nodeType": "Return",
												"src": "2390:12:0"
											}
										]
									},
									"documentation": {
										"id": 118,
										"nodeType": "StructuredDocumentation",
										"src": "2139:46:0",
										"text": " @dev See {IERC721-ownerOf}."
									},
									"functionSelector": "6352211e",
									"id": 145,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "ownerOf",
									"nameLocation": "2199:7:0",
									"nodeType": "FunctionDefinition",
									"overrides": {
										"id": 122,
										"nodeType": "OverrideSpecifier",
										"overrides": [],
										"src": "2244:8:0"
									},
									"parameters": {
										"id": 121,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 120,
												"mutability": "mutable",
												"name": "tokenId",
												"nameLocation": "2215:7:0",
												"nodeType": "VariableDeclaration",
												"scope": 145,
												"src": "2207:15:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 119,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2207:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2206:17:0"
									},
									"returnParameters": {
										"id": 125,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 124,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 145,
												"src": "2262:7:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 123,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2262:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2261:9:0"
									},
									"scope": 944,
									"src": "2190:219:0",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "public"
								},
								{
									"baseFunctions": [
										1090
									],
									"body": {
										"id": 154,
										"nodeType": "Block",
										"src": "2540:29:0",
										"statements": [
											{
												"expression": {
													"id": 152,
													"name": "_name",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 25,
													"src": "2557:5:0",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage",
														"typeString": "string storage ref"
													}
												},
												"functionReturnParameters": 151,
												"id": 153,
												"nodeType": "Return",
												"src": "2550:12:0"
											}
										]
									},
									"documentation": {
										"id": 146,
										"nodeType": "StructuredDocumentation",
										"src": "2415:51:0",
										"text": " @dev See {IERC721Metadata-name}."
									},
									"functionSelector": "06fdde03",
									"id": 155,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "name",
									"nameLocation": "2480:4:0",
									"nodeType": "FunctionDefinition",
									"overrides": {
										"id": 148,
										"nodeType": "OverrideSpecifier",
										"overrides": [],
										"src": "2507:8:0"
									},
									"parameters": {
										"id": 147,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2484:2:0"
									},
									"returnParameters": {
										"id": 151,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 150,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 155,
												"src": "2525:13:0",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 149,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "2525:6:0",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2524:15:0"
									},
									"scope": 944,
									"src": "2471:98:0",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "public"
								},
								{
									"baseFunctions": [
										1096
									],
									"body": {
										"id": 164,
										"nodeType": "Block",
										"src": "2704:31:0",
										"statements": [
											{
												"expression": {
													"id": 162,
													"name": "_symbol",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 27,
													"src": "2721:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage",
														"typeString": "string storage ref"
													}
												},
												"functionReturnParameters": 161,
												"id": 163,
												"nodeType": "Return",
												"src": "2714:14:0"
											}
										]
									},
									"documentation": {
										"id": 156,
										"nodeType": "StructuredDocumentation",
										"src": "2575:53:0",
										"text": " @dev See {IERC721Metadata-symbol}."
									},
									"functionSelector": "95d89b41",
									"id": 165,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "symbol",
									"nameLocation": "2642:6:0",
									"nodeType": "FunctionDefinition",
									"overrides": {
										"id": 158,
										"nodeType": "OverrideSpecifier",
										"overrides": [],
										"src": "2671:8:0"
									},
									"parameters": {
										"id": 157,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2648:2:0"
									},
									"returnParameters": {
										"id": 161,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 160,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 165,
												"src": "2689:13:0",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 159,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "2689:6:0",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2688:15:0"
									},
									"scope": 944,
									"src": "2633:102:0",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "public"
								},
								{
									"baseFunctions": [
										1104
									],
									"body": {
										"id": 203,
										"nodeType": "Block",
										"src": "2889:188:0",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"id": 175,
															"name": "tokenId",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 168,
															"src": "2914:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 174,
														"name": "_requireMinted",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 822,
														"src": "2899:14:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_view$_t_uint256_$returns$__$",
															"typeString": "function (uint256) view"
														}
													},
													"id": 176,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2899:23:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 177,
												"nodeType": "ExpressionStatement",
												"src": "2899:23:0"
											},
											{
												"assignments": [
													179
												],
												"declarations": [
													{
														"constant": false,
														"id": 179,
														"mutability": "mutable",
														"name": "baseURI",
														"nameLocation": "2947:7:0",
														"nodeType": "VariableDeclaration",
														"scope": 203,
														"src": "2933:21:0",
														"stateVariable": false,
														"storageLocation": "memory",
														"typeDescriptions": {
															"typeIdentifier": "t_string_memory_ptr",
															"typeString": "string"
														},
														"typeName": {
															"id": 178,
															"name": "string",
															"nodeType": "ElementaryTypeName",
															"src": "2933:6:0",
															"typeDescriptions": {
																"typeIdentifier": "t_string_storage_ptr",
																"typeString": "string"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 182,
												"initialValue": {
													"arguments": [],
													"expression": {
														"argumentTypes": [],
														"id": 180,
														"name": "_baseURI",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 213,
														"src": "2957:8:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_view$__$returns$_t_string_memory_ptr_$",
															"typeString": "function () view returns (string memory)"
														}
													},
													"id": 181,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2957:10:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_string_memory_ptr",
														"typeString": "string memory"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "2933:34:0"
											},
											{
												"expression": {
													"condition": {
														"commonType": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"id": 189,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftExpression": {
															"expression": {
																"arguments": [
																	{
																		"id": 185,
																		"name": "baseURI",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 179,
																		"src": "2990:7:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_string_memory_ptr",
																			"typeString": "string memory"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_string_memory_ptr",
																			"typeString": "string memory"
																		}
																	],
																	"id": 184,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"lValueRequested": false,
																	"nodeType": "ElementaryTypeNameExpression",
																	"src": "2984:5:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_type$_t_bytes_storage_ptr_$",
																		"typeString": "type(bytes storage pointer)"
																	},
																	"typeName": {
																		"id": 183,
																		"name": "bytes",
																		"nodeType": "ElementaryTypeName",
																		"src": "2984:5:0",
																		"typeDescriptions": {}
																	}
																},
																"id": 186,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "typeConversion",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "2984:14:0",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_bytes_memory_ptr",
																	"typeString": "bytes memory"
																}
															},
															"id": 187,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "2999:6:0",
															"memberName": "length",
															"nodeType": "MemberAccess",
															"src": "2984:21:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"nodeType": "BinaryOperation",
														"operator": ">",
														"rightExpression": {
															"hexValue": "30",
															"id": 188,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "number",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "3008:1:0",
															"typeDescriptions": {
																"typeIdentifier": "t_rational_0_by_1",
																"typeString": "int_const 0"
															},
															"value": "0"
														},
														"src": "2984:25:0",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"falseExpression": {
														"hexValue": "",
														"id": 200,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "string",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "3068:2:0",
														"typeDescriptions": {
															"typeIdentifier": "t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470",
															"typeString": "literal_string \"\""
														},
														"value": ""
													},
													"id": 201,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "Conditional",
													"src": "2984:86:0",
													"trueExpression": {
														"arguments": [
															{
																"arguments": [
																	{
																		"id": 194,
																		"name": "baseURI",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 179,
																		"src": "3036:7:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_string_memory_ptr",
																			"typeString": "string memory"
																		}
																	},
																	{
																		"arguments": [],
																		"expression": {
																			"argumentTypes": [],
																			"expression": {
																				"id": 195,
																				"name": "tokenId",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 168,
																				"src": "3045:7:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"id": 196,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"memberLocation": "3053:8:0",
																			"memberName": "toString",
																			"nodeType": "MemberAccess",
																			"referencedDeclaration": 1589,
																			"src": "3045:16:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_function_internal_pure$_t_uint256_$returns$_t_string_memory_ptr_$attached_to$_t_uint256_$",
																				"typeString": "function (uint256) pure returns (string memory)"
																			}
																		},
																		"id": 197,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"kind": "functionCall",
																		"lValueRequested": false,
																		"nameLocations": [],
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "3045:18:0",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_string_memory_ptr",
																			"typeString": "string memory"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_string_memory_ptr",
																			"typeString": "string memory"
																		},
																		{
																			"typeIdentifier": "t_string_memory_ptr",
																			"typeString": "string memory"
																		}
																	],
																	"expression": {
																		"id": 192,
																		"name": "abi",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 4294967295,
																		"src": "3019:3:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_magic_abi",
																			"typeString": "abi"
																		}
																	},
																	"id": 193,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"lValueRequested": false,
																	"memberLocation": "3023:12:0",
																	"memberName": "encodePacked",
																	"nodeType": "MemberAccess",
																	"src": "3019:16:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_abiencodepacked_pure$__$returns$_t_bytes_memory_ptr_$",
																		"typeString": "function () pure returns (bytes memory)"
																	}
																},
																"id": 198,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "3019:45:0",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_bytes_memory_ptr",
																	"typeString": "bytes memory"
																}
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_bytes_memory_ptr",
																	"typeString": "bytes memory"
																}
															],
															"id": 191,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"lValueRequested": false,
															"nodeType": "ElementaryTypeNameExpression",
															"src": "3012:6:0",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_string_storage_ptr_$",
																"typeString": "type(string storage pointer)"
															},
															"typeName": {
																"id": 190,
																"name": "string",
																"nodeType": "ElementaryTypeName",
																"src": "3012:6:0",
																"typeDescriptions": {}
															}
														},
														"id": 199,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "typeConversion",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "3012:53:0",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_string_memory_ptr",
															"typeString": "string memory"
														}
													},
													"typeDescriptions": {
														"typeIdentifier": "t_string_memory_ptr",
														"typeString": "string memory"
													}
												},
												"functionReturnParameters": 173,
												"id": 202,
												"nodeType": "Return",
												"src": "2977:93:0"
											}
										]
									},
									"documentation": {
										"id": 166,
										"nodeType": "StructuredDocumentation",
										"src": "2741:55:0",
										"text": " @dev See {IERC721Metadata-tokenURI}."
									},
									"functionSelector": "c87b56dd",
									"id": 204,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "tokenURI",
									"nameLocation": "2810:8:0",
									"nodeType": "FunctionDefinition",
									"overrides": {
										"id": 170,
										"nodeType": "OverrideSpecifier",
										"overrides": [],
										"src": "2856:8:0"
									},
									"parameters": {
										"id": 169,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 168,
												"mutability": "mutable",
												"name": "tokenId",
												"nameLocation": "2827:7:0",
												"nodeType": "VariableDeclaration",
												"scope": 204,
												"src": "2819:15:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 167,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2819:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2818:17:0"
									},
									"returnParameters": {
										"id": 173,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 172,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 204,
												"src": "2874:13:0",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 171,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "2874:6:0",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2873:15:0"
									},
									"scope": 944,
									"src": "2801:276:0",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "public"
								},
								{
									"body": {
										"id": 212,
										"nodeType": "Block",
										"src": "3385:26:0",
										"statements": [
											{
												"expression": {
													"hexValue": "",
													"id": 210,
													"isConstant": false,
													"isLValue": false,
													"isPure": true,
													"kind": "string",
													"lValueRequested": false,
													"nodeType": "Literal",
													"src": "3402:2:0",
													"typeDescriptions": {
														"typeIdentifier": "t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470",
														"typeString": "literal_string \"\""
													},
													"value": ""
												},
												"functionReturnParameters": 209,
												"id": 211,
												"nodeType": "Return",
												"src": "3395:9:0"
											}
										]
									},
									"documentation": {
										"id": 205,
										"nodeType": "StructuredDocumentation",
										"src": "3083:231:0",
										"text": " @dev Base URI for computing {tokenURI}. If set, the resulting URI for each\n token will be the concatenation of the `baseURI` and the `tokenId`. Empty\n by default, can be overridden in child contracts."
									},
									"id": 213,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_baseURI",
									"nameLocation": "3328:8:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 206,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "3336:2:0"
									},
									"returnParameters": {
										"id": 209,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 208,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 213,
												"src": "3370:13:0",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 207,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "3370:6:0",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3369:15:0"
									},
									"scope": 944,
									"src": "3319:92:0",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "internal"
								},
								{
									"baseFunctions": [
										1033
									],
									"body": {
										"id": 255,
										"nodeType": "Block",
										"src": "3538:336:0",
										"statements": [
											{
												"assignments": [
													223
												],
												"declarations": [
													{
														"constant": false,
														"id": 223,
														"mutability": "mutable",
														"name": "owner",
														"nameLocation": "3556:5:0",
														"nodeType": "VariableDeclaration",
														"scope": 255,
														"src": "3548:13:0",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														},
														"typeName": {
															"id": 222,
															"name": "address",
															"nodeType": "ElementaryTypeName",
															"src": "3548:7:0",
															"stateMutability": "nonpayable",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 228,
												"initialValue": {
													"arguments": [
														{
															"id": 226,
															"name": "tokenId",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 218,
															"src": "3579:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"expression": {
															"id": 224,
															"name": "ERC721",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 944,
															"src": "3564:6:0",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_contract$_ERC721_$944_$",
																"typeString": "type(contract ERC721)"
															}
														},
														"id": 225,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "3571:7:0",
														"memberName": "ownerOf",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 145,
														"src": "3564:14:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_view$_t_uint256_$returns$_t_address_$",
															"typeString": "function (uint256) view returns (address)"
														}
													},
													"id": 227,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "3564:23:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "3548:39:0"
											},
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															"id": 232,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 230,
																"name": "to",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 216,
																"src": "3605:2:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "!=",
															"rightExpression": {
																"id": 231,
																"name": "owner",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 223,
																"src": "3611:5:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"src": "3605:11:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "4552433732313a20617070726f76616c20746f2063757272656e74206f776e6572",
															"id": 233,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "3618:35:0",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_b51b4875eede07862961e8f9365c6749f5fe55c6ee5d7a9e42b6912ad0b15942",
																"typeString": "literal_string \"ERC721: approval to current owner\""
															},
															"value": "ERC721: approval to current owner"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_b51b4875eede07862961e8f9365c6749f5fe55c6ee5d7a9e42b6912ad0b15942",
																"typeString": "literal_string \"ERC721: approval to current owner\""
															}
														],
														"id": 229,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "3597:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 234,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "3597:57:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 235,
												"nodeType": "ExpressionStatement",
												"src": "3597:57:0"
											},
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															"id": 246,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"commonType": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																},
																"id": 240,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"arguments": [],
																	"expression": {
																		"argumentTypes": [],
																		"id": 237,
																		"name": "_msgSender",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1447,
																		"src": "3686:10:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
																			"typeString": "function () view returns (address)"
																		}
																	},
																	"id": 238,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"kind": "functionCall",
																	"lValueRequested": false,
																	"nameLocations": [],
																	"names": [],
																	"nodeType": "FunctionCall",
																	"src": "3686:12:0",
																	"tryCall": false,
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": "==",
																"rightExpression": {
																	"id": 239,
																	"name": "owner",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 223,
																	"src": "3702:5:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																"src": "3686:21:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "||",
															"rightExpression": {
																"arguments": [
																	{
																		"id": 242,
																		"name": "owner",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 223,
																		"src": "3728:5:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	},
																	{
																		"arguments": [],
																		"expression": {
																			"argumentTypes": [],
																			"id": 243,
																			"name": "_msgSender",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1447,
																			"src": "3735:10:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
																				"typeString": "function () view returns (address)"
																			}
																		},
																		"id": 244,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"kind": "functionCall",
																		"lValueRequested": false,
																		"nameLocations": [],
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "3735:12:0",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		},
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	],
																	"id": 241,
																	"name": "isApprovedForAll",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 309,
																	"src": "3711:16:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_internal_view$_t_address_$_t_address_$returns$_t_bool_$",
																		"typeString": "function (address,address) view returns (bool)"
																	}
																},
																"id": 245,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "3711:37:0",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																}
															},
															"src": "3686:62:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "4552433732313a20617070726f76652063616c6c6572206973206e6f7420746f6b656e206f776e6572206f7220617070726f76656420666f7220616c6c",
															"id": 247,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "3762:63:0",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_c6e14a63ffb144eeef7cce6988e5dce07c60a7e0a7b1ef25dbe18c61483e0a83",
																"typeString": "literal_string \"ERC721: approve caller is not token owner or approved for all\""
															},
															"value": "ERC721: approve caller is not token owner or approved for all"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_c6e14a63ffb144eeef7cce6988e5dce07c60a7e0a7b1ef25dbe18c61483e0a83",
																"typeString": "literal_string \"ERC721: approve caller is not token owner or approved for all\""
															}
														],
														"id": 236,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "3665:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 248,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "3665:170:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 249,
												"nodeType": "ExpressionStatement",
												"src": "3665:170:0"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 251,
															"name": "to",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 216,
															"src": "3855:2:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 252,
															"name": "tokenId",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 218,
															"src": "3859:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 250,
														"name": "_approve",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 776,
														"src": "3846:8:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,uint256)"
														}
													},
													"id": 253,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "3846:21:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 254,
												"nodeType": "ExpressionStatement",
												"src": "3846:21:0"
											}
										]
									},
									"documentation": {
										"id": 214,
										"nodeType": "StructuredDocumentation",
										"src": "3417:46:0",
										"text": " @dev See {IERC721-approve}."
									},
									"functionSelector": "095ea7b3",
									"id": 256,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "approve",
									"nameLocation": "3477:7:0",
									"nodeType": "FunctionDefinition",
									"overrides": {
										"id": 220,
										"nodeType": "OverrideSpecifier",
										"overrides": [],
										"src": "3529:8:0"
									},
									"parameters": {
										"id": 219,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 216,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "3493:2:0",
												"nodeType": "VariableDeclaration",
												"scope": 256,
												"src": "3485:10:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 215,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "3485:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 218,
												"mutability": "mutable",
												"name": "tokenId",
												"nameLocation": "3505:7:0",
												"nodeType": "VariableDeclaration",
												"scope": 256,
												"src": "3497:15:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 217,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3497:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3484:29:0"
									},
									"returnParameters": {
										"id": 221,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "3538:0:0"
									},
									"scope": 944,
									"src": "3468:406:0",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "public"
								},
								{
									"baseFunctions": [
										1049
									],
									"body": {
										"id": 273,
										"nodeType": "Block",
										"src": "4020:82:0",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"id": 266,
															"name": "tokenId",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 259,
															"src": "4045:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 265,
														"name": "_requireMinted",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 822,
														"src": "4030:14:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_view$_t_uint256_$returns$__$",
															"typeString": "function (uint256) view"
														}
													},
													"id": 267,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "4030:23:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 268,
												"nodeType": "ExpressionStatement",
												"src": "4030:23:0"
											},
											{
												"expression": {
													"baseExpression": {
														"id": 269,
														"name": "_tokenApprovals",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 39,
														"src": "4071:15:0",
														"typeDescriptions": {
															"typeIdentifier": "t_mapping$_t_uint256_$_t_address_$",
															"typeString": "mapping(uint256 => address)"
														}
													},
													"id": 271,
													"indexExpression": {
														"id": 270,
														"name": "tokenId",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 259,
														"src": "4087:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"isConstant": false,
													"isLValue": true,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "IndexAccess",
													"src": "4071:24:0",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"functionReturnParameters": 264,
												"id": 272,
												"nodeType": "Return",
												"src": "4064:31:0"
											}
										]
									},
									"documentation": {
										"id": 257,
										"nodeType": "StructuredDocumentation",
										"src": "3880:50:0",
										"text": " @dev See {IERC721-getApproved}."
									},
									"functionSelector": "081812fc",
									"id": 274,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "getApproved",
									"nameLocation": "3944:11:0",
									"nodeType": "FunctionDefinition",
									"overrides": {
										"id": 261,
										"nodeType": "OverrideSpecifier",
										"overrides": [],
										"src": "3993:8:0"
									},
									"parameters": {
										"id": 260,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 259,
												"mutability": "mutable",
												"name": "tokenId",
												"nameLocation": "3964:7:0",
												"nodeType": "VariableDeclaration",
												"scope": 274,
												"src": "3956:15:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 258,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3956:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3955:17:0"
									},
									"returnParameters": {
										"id": 264,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 263,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 274,
												"src": "4011:7:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 262,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "4011:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4010:9:0"
									},
									"scope": 944,
									"src": "3935:167:0",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "public"
								},
								{
									"baseFunctions": [
										1041
									],
									"body": {
										"id": 290,
										"nodeType": "Block",
										"src": "4253:69:0",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"arguments": [],
															"expression": {
																"argumentTypes": [],
																"id": 284,
																"name": "_msgSender",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1447,
																"src": "4282:10:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
																	"typeString": "function () view returns (address)"
																}
															},
															"id": 285,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "4282:12:0",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 286,
															"name": "operator",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 277,
															"src": "4296:8:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 287,
															"name": "approved",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 279,
															"src": "4306:8:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														],
														"id": 283,
														"name": "_setApprovalForAll",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 808,
														"src": "4263:18:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_bool_$returns$__$",
															"typeString": "function (address,address,bool)"
														}
													},
													"id": 288,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "4263:52:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 289,
												"nodeType": "ExpressionStatement",
												"src": "4263:52:0"
											}
										]
									},
									"documentation": {
										"id": 275,
										"nodeType": "StructuredDocumentation",
										"src": "4108:56:0",
										"text": " @dev See {IERC721-setApprovalForAll}."
									},
									"functionSelector": "a22cb465",
									"id": 291,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "setApprovalForAll",
									"nameLocation": "4178:17:0",
									"nodeType": "FunctionDefinition",
									"overrides": {
										"id": 281,
										"nodeType": "OverrideSpecifier",
										"overrides": [],
										"src": "4244:8:0"
									},
									"parameters": {
										"id": 280,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 277,
												"mutability": "mutable",
												"name": "operator",
												"nameLocation": "4204:8:0",
												"nodeType": "VariableDeclaration",
												"scope": 291,
												"src": "4196:16:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 276,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "4196:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 279,
												"mutability": "mutable",
												"name": "approved",
												"nameLocation": "4219:8:0",
												"nodeType": "VariableDeclaration",
												"scope": 291,
												"src": "4214:13:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 278,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "4214:4:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4195:33:0"
									},
									"returnParameters": {
										"id": 282,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "4253:0:0"
									},
									"scope": 944,
									"src": "4169:153:0",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "public"
								},
								{
									"baseFunctions": [
										1059
									],
									"body": {
										"id": 308,
										"nodeType": "Block",
										"src": "4491:59:0",
										"statements": [
											{
												"expression": {
													"baseExpression": {
														"baseExpression": {
															"id": 302,
															"name": "_operatorApprovals",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 45,
															"src": "4508:18:0",
															"typeDescriptions": {
																"typeIdentifier": "t_mapping$_t_address_$_t_mapping$_t_address_$_t_bool_$_$",
																"typeString": "mapping(address => mapping(address => bool))"
															}
														},
														"id": 304,
														"indexExpression": {
															"id": 303,
															"name": "owner",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 294,
															"src": "4527:5:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": false,
														"nodeType": "IndexAccess",
														"src": "4508:25:0",
														"typeDescriptions": {
															"typeIdentifier": "t_mapping$_t_address_$_t_bool_$",
															"typeString": "mapping(address => bool)"
														}
													},
													"id": 306,
													"indexExpression": {
														"id": 305,
														"name": "operator",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 296,
														"src": "4534:8:0",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"isConstant": false,
													"isLValue": true,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "IndexAccess",
													"src": "4508:35:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"functionReturnParameters": 301,
												"id": 307,
												"nodeType": "Return",
												"src": "4501:42:0"
											}
										]
									},
									"documentation": {
										"id": 292,
										"nodeType": "StructuredDocumentation",
										"src": "4328:55:0",
										"text": " @dev See {IERC721-isApprovedForAll}."
									},
									"functionSelector": "e985e9c5",
									"id": 309,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "isApprovedForAll",
									"nameLocation": "4397:16:0",
									"nodeType": "FunctionDefinition",
									"overrides": {
										"id": 298,
										"nodeType": "OverrideSpecifier",
										"overrides": [],
										"src": "4467:8:0"
									},
									"parameters": {
										"id": 297,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 294,
												"mutability": "mutable",
												"name": "owner",
												"nameLocation": "4422:5:0",
												"nodeType": "VariableDeclaration",
												"scope": 309,
												"src": "4414:13:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 293,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "4414:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 296,
												"mutability": "mutable",
												"name": "operator",
												"nameLocation": "4437:8:0",
												"nodeType": "VariableDeclaration",
												"scope": 309,
												"src": "4429:16:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 295,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "4429:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4413:33:0"
									},
									"returnParameters": {
										"id": 301,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 300,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 309,
												"src": "4485:4:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 299,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "4485:4:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4484:6:0"
									},
									"scope": 944,
									"src": "4388:162:0",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "public"
								},
								{
									"baseFunctions": [
										1025
									],
									"body": {
										"id": 335,
										"nodeType": "Block",
										"src": "4731:207:0",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"arguments": [
																{
																	"arguments": [],
																	"expression": {
																		"argumentTypes": [],
																		"id": 322,
																		"name": "_msgSender",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1447,
																		"src": "4820:10:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
																			"typeString": "function () view returns (address)"
																		}
																	},
																	"id": 323,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"kind": "functionCall",
																	"lValueRequested": false,
																	"nameLocations": [],
																	"names": [],
																	"nodeType": "FunctionCall",
																	"src": "4820:12:0",
																	"tryCall": false,
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																{
																	"id": 324,
																	"name": "tokenId",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 316,
																	"src": "4834:7:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	},
																	{
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																],
																"id": 321,
																"name": "_isApprovedOrOwner",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 479,
																"src": "4801:18:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_internal_view$_t_address_$_t_uint256_$returns$_t_bool_$",
																	"typeString": "function (address,uint256) view returns (bool)"
																}
															},
															"id": 325,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "4801:41:0",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "4552433732313a2063616c6c6572206973206e6f7420746f6b656e206f776e6572206f7220617070726f766564",
															"id": 326,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "4844:47:0",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_12a8e5623d251e191fe4a291d9a59bcc01a4db7a1f5c20fc8de44358c18308af",
																"typeString": "literal_string \"ERC721: caller is not token owner or approved\""
															},
															"value": "ERC721: caller is not token owner or approved"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_12a8e5623d251e191fe4a291d9a59bcc01a4db7a1f5c20fc8de44358c18308af",
																"typeString": "literal_string \"ERC721: caller is not token owner or approved\""
															}
														],
														"id": 320,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "4793:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 327,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "4793:99:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 328,
												"nodeType": "ExpressionStatement",
												"src": "4793:99:0"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 330,
															"name": "from",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 312,
															"src": "4913:4:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 331,
															"name": "to",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 314,
															"src": "4919:2:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 332,
															"name": "tokenId",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 316,
															"src": "4923:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 329,
														"name": "_transfer",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 752,
														"src": "4903:9:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,address,uint256)"
														}
													},
													"id": 333,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "4903:28:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 334,
												"nodeType": "ExpressionStatement",
												"src": "4903:28:0"
											}
										]
									},
									"documentation": {
										"id": 310,
										"nodeType": "StructuredDocumentation",
										"src": "4556:51:0",
										"text": " @dev See {IERC721-transferFrom}."
									},
									"functionSelector": "23b872dd",
									"id": 336,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "transferFrom",
									"nameLocation": "4621:12:0",
									"nodeType": "FunctionDefinition",
									"overrides": {
										"id": 318,
										"nodeType": "OverrideSpecifier",
										"overrides": [],
										"src": "4722:8:0"
									},
									"parameters": {
										"id": 317,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 312,
												"mutability": "mutable",
												"name": "from",
												"nameLocation": "4651:4:0",
												"nodeType": "VariableDeclaration",
												"scope": 336,
												"src": "4643:12:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 311,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "4643:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 314,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "4673:2:0",
												"nodeType": "VariableDeclaration",
												"scope": 336,
												"src": "4665:10:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 313,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "4665:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 316,
												"mutability": "mutable",
												"name": "tokenId",
												"nameLocation": "4693:7:0",
												"nodeType": "VariableDeclaration",
												"scope": 336,
												"src": "4685:15:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 315,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "4685:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4633:73:0"
									},
									"returnParameters": {
										"id": 319,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "4731:0:0"
									},
									"scope": 944,
									"src": "4612:326:0",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "public"
								},
								{
									"baseFunctions": [
										1015
									],
									"body": {
										"id": 354,
										"nodeType": "Block",
										"src": "5127:56:0",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"id": 348,
															"name": "from",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 339,
															"src": "5154:4:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 349,
															"name": "to",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 341,
															"src": "5160:2:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 350,
															"name": "tokenId",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 343,
															"src": "5164:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														{
															"hexValue": "",
															"id": 351,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "5173:2:0",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470",
																"typeString": "literal_string \"\""
															},
															"value": ""
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															{
																"typeIdentifier": "t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470",
																"typeString": "literal_string \"\""
															}
														],
														"id": 347,
														"name": "safeTransferFrom",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															355,
															385
														],
														"referencedDeclaration": 385,
														"src": "5137:16:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$_t_bytes_memory_ptr_$returns$__$",
															"typeString": "function (address,address,uint256,bytes memory)"
														}
													},
													"id": 352,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "5137:39:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 353,
												"nodeType": "ExpressionStatement",
												"src": "5137:39:0"
											}
										]
									},
									"documentation": {
										"id": 337,
										"nodeType": "StructuredDocumentation",
										"src": "4944:55:0",
										"text": " @dev See {IERC721-safeTransferFrom}."
									},
									"functionSelector": "42842e0e",
									"id": 355,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "safeTransferFrom",
									"nameLocation": "5013:16:0",
									"nodeType": "FunctionDefinition",
									"overrides": {
										"id": 345,
										"nodeType": "OverrideSpecifier",
										"overrides": [],
										"src": "5118:8:0"
									},
									"parameters": {
										"id": 344,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 339,
												"mutability": "mutable",
												"name": "from",
												"nameLocation": "5047:4:0",
												"nodeType": "VariableDeclaration",
												"scope": 355,
												"src": "5039:12:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 338,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "5039:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 341,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "5069:2:0",
												"nodeType": "VariableDeclaration",
												"scope": 355,
												"src": "5061:10:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 340,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "5061:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 343,
												"mutability": "mutable",
												"name": "tokenId",
												"nameLocation": "5089:7:0",
												"nodeType": "VariableDeclaration",
												"scope": 355,
												"src": "5081:15:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 342,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "5081:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "5029:73:0"
									},
									"returnParameters": {
										"id": 346,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "5127:0:0"
									},
									"scope": 944,
									"src": "5004:179:0",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "public"
								},
								{
									"baseFunctions": [
										1005
									],
									"body": {
										"id": 384,
										"nodeType": "Block",
										"src": "5399:164:0",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"arguments": [
																{
																	"arguments": [],
																	"expression": {
																		"argumentTypes": [],
																		"id": 370,
																		"name": "_msgSender",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1447,
																		"src": "5436:10:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
																			"typeString": "function () view returns (address)"
																		}
																	},
																	"id": 371,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"kind": "functionCall",
																	"lValueRequested": false,
																	"nameLocations": [],
																	"names": [],
																	"nodeType": "FunctionCall",
																	"src": "5436:12:0",
																	"tryCall": false,
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																{
																	"id": 372,
																	"name": "tokenId",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 362,
																	"src": "5450:7:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	},
																	{
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																],
																"id": 369,
																"name": "_isApprovedOrOwner",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 479,
																"src": "5417:18:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_internal_view$_t_address_$_t_uint256_$returns$_t_bool_$",
																	"typeString": "function (address,uint256) view returns (bool)"
																}
															},
															"id": 373,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "5417:41:0",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "4552433732313a2063616c6c6572206973206e6f7420746f6b656e206f776e6572206f7220617070726f766564",
															"id": 374,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "5460:47:0",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_12a8e5623d251e191fe4a291d9a59bcc01a4db7a1f5c20fc8de44358c18308af",
																"typeString": "literal_string \"ERC721: caller is not token owner or approved\""
															},
															"value": "ERC721: caller is not token owner or approved"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_12a8e5623d251e191fe4a291d9a59bcc01a4db7a1f5c20fc8de44358c18308af",
																"typeString": "literal_string \"ERC721: caller is not token owner or approved\""
															}
														],
														"id": 368,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "5409:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 375,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "5409:99:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 376,
												"nodeType": "ExpressionStatement",
												"src": "5409:99:0"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 378,
															"name": "from",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 358,
															"src": "5532:4:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 379,
															"name": "to",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 360,
															"src": "5538:2:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 380,
															"name": "tokenId",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 362,
															"src": "5542:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														{
															"id": 381,
															"name": "data",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 364,
															"src": "5551:4:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															{
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														],
														"id": 377,
														"name": "_safeTransfer",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 414,
														"src": "5518:13:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$_t_bytes_memory_ptr_$returns$__$",
															"typeString": "function (address,address,uint256,bytes memory)"
														}
													},
													"id": 382,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "5518:38:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 383,
												"nodeType": "ExpressionStatement",
												"src": "5518:38:0"
											}
										]
									},
									"documentation": {
										"id": 356,
										"nodeType": "StructuredDocumentation",
										"src": "5189:55:0",
										"text": " @dev See {IERC721-safeTransferFrom}."
									},
									"functionSelector": "b88d4fde",
									"id": 385,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "safeTransferFrom",
									"nameLocation": "5258:16:0",
									"nodeType": "FunctionDefinition",
									"overrides": {
										"id": 366,
										"nodeType": "OverrideSpecifier",
										"overrides": [],
										"src": "5390:8:0"
									},
									"parameters": {
										"id": 365,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 358,
												"mutability": "mutable",
												"name": "from",
												"nameLocation": "5292:4:0",
												"nodeType": "VariableDeclaration",
												"scope": 385,
												"src": "5284:12:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 357,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "5284:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 360,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "5314:2:0",
												"nodeType": "VariableDeclaration",
												"scope": 385,
												"src": "5306:10:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 359,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "5306:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 362,
												"mutability": "mutable",
												"name": "tokenId",
												"nameLocation": "5334:7:0",
												"nodeType": "VariableDeclaration",
												"scope": 385,
												"src": "5326:15:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 361,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "5326:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 364,
												"mutability": "mutable",
												"name": "data",
												"nameLocation": "5364:4:0",
												"nodeType": "VariableDeclaration",
												"scope": 385,
												"src": "5351:17:0",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 363,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "5351:5:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "5274:100:0"
									},
									"returnParameters": {
										"id": 367,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "5399:0:0"
									},
									"scope": 944,
									"src": "5249:314:0",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "public"
								},
								{
									"body": {
										"id": 413,
										"nodeType": "Block",
										"src": "6564:165:0",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"id": 398,
															"name": "from",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 388,
															"src": "6584:4:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 399,
															"name": "to",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 390,
															"src": "6590:2:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 400,
															"name": "tokenId",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 392,
															"src": "6594:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 397,
														"name": "_transfer",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 752,
														"src": "6574:9:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,address,uint256)"
														}
													},
													"id": 401,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "6574:28:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 402,
												"nodeType": "ExpressionStatement",
												"src": "6574:28:0"
											},
											{
												"expression": {
													"arguments": [
														{
															"arguments": [
																{
																	"id": 405,
																	"name": "from",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 388,
																	"src": "6643:4:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																{
																	"id": 406,
																	"name": "to",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 390,
																	"src": "6649:2:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																{
																	"id": 407,
																	"name": "tokenId",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 392,
																	"src": "6653:7:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																{
																	"id": 408,
																	"name": "data",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 394,
																	"src": "6662:4:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bytes_memory_ptr",
																		"typeString": "bytes memory"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	},
																	{
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	},
																	{
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	{
																		"typeIdentifier": "t_bytes_memory_ptr",
																		"typeString": "bytes memory"
																	}
																],
																"id": 404,
																"name": "_checkOnERC721Received",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 884,
																"src": "6620:22:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$_t_bytes_memory_ptr_$returns$_t_bool_$",
																	"typeString": "function (address,address,uint256,bytes memory) returns (bool)"
																}
															},
															"id": 409,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "6620:47:0",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "4552433732313a207472616e7366657220746f206e6f6e20455243373231526563656976657220696d706c656d656e746572",
															"id": 410,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "6669:52:0",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_1e766a06da43a53d0f4c380e06e5a342e14d5af1bf8501996c844905530ca84e",
																"typeString": "literal_string \"ERC721: transfer to non ERC721Receiver implementer\""
															},
															"value": "ERC721: transfer to non ERC721Receiver implementer"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_1e766a06da43a53d0f4c380e06e5a342e14d5af1bf8501996c844905530ca84e",
																"typeString": "literal_string \"ERC721: transfer to non ERC721Receiver implementer\""
															}
														],
														"id": 403,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "6612:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 411,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "6612:110:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 412,
												"nodeType": "ExpressionStatement",
												"src": "6612:110:0"
											}
										]
									},
									"documentation": {
										"id": 386,
										"nodeType": "StructuredDocumentation",
										"src": "5569:850:0",
										"text": " @dev Safely transfers `tokenId` token from `from` to `to`, checking first that contract recipients\n are aware of the ERC721 protocol to prevent tokens from being forever locked.\n `data` is additional data, it has no specified format and it is sent in call to `to`.\n This internal function is equivalent to {safeTransferFrom}, and can be used to e.g.\n implement alternative mechanisms to perform token transfer, such as signature-based.\n Requirements:\n - `from` cannot be the zero address.\n - `to` cannot be the zero address.\n - `tokenId` token must exist and be owned by `from`.\n - If `to` refers to a smart contract, it must implement {IERC721Receiver-onERC721Received}, which is called upon a safe transfer.\n Emits a {Transfer} event."
									},
									"id": 414,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_safeTransfer",
									"nameLocation": "6433:13:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 395,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 388,
												"mutability": "mutable",
												"name": "from",
												"nameLocation": "6464:4:0",
												"nodeType": "VariableDeclaration",
												"scope": 414,
												"src": "6456:12:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 387,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "6456:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 390,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "6486:2:0",
												"nodeType": "VariableDeclaration",
												"scope": 414,
												"src": "6478:10:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 389,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "6478:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 392,
												"mutability": "mutable",
												"name": "tokenId",
												"nameLocation": "6506:7:0",
												"nodeType": "VariableDeclaration",
												"scope": 414,
												"src": "6498:15:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 391,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "6498:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 394,
												"mutability": "mutable",
												"name": "data",
												"nameLocation": "6536:4:0",
												"nodeType": "VariableDeclaration",
												"scope": 414,
												"src": "6523:17:0",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 393,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "6523:5:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "6446:100:0"
									},
									"returnParameters": {
										"id": 396,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "6564:0:0"
									},
									"scope": 944,
									"src": "6424:305:0",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 426,
										"nodeType": "Block",
										"src": "6913:40:0",
										"statements": [
											{
												"expression": {
													"baseExpression": {
														"id": 422,
														"name": "_owners",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 31,
														"src": "6930:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_mapping$_t_uint256_$_t_address_$",
															"typeString": "mapping(uint256 => address)"
														}
													},
													"id": 424,
													"indexExpression": {
														"id": 423,
														"name": "tokenId",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 417,
														"src": "6938:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"isConstant": false,
													"isLValue": true,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "IndexAccess",
													"src": "6930:16:0",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"functionReturnParameters": 421,
												"id": 425,
												"nodeType": "Return",
												"src": "6923:23:0"
											}
										]
									},
									"documentation": {
										"id": 415,
										"nodeType": "StructuredDocumentation",
										"src": "6735:98:0",
										"text": " @dev Returns the owner of the `tokenId`. Does NOT revert if token doesn't exist"
									},
									"id": 427,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_ownerOf",
									"nameLocation": "6847:8:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 418,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 417,
												"mutability": "mutable",
												"name": "tokenId",
												"nameLocation": "6864:7:0",
												"nodeType": "VariableDeclaration",
												"scope": 427,
												"src": "6856:15:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 416,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "6856:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "6855:17:0"
									},
									"returnParameters": {
										"id": 421,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 420,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 427,
												"src": "6904:7:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 419,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "6904:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "6903:9:0"
									},
									"scope": 944,
									"src": "6838:115:0",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 444,
										"nodeType": "Block",
										"src": "7327:55:0",
										"statements": [
											{
												"expression": {
													"commonType": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													},
													"id": 442,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"arguments": [
															{
																"id": 436,
																"name": "tokenId",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 430,
																"src": "7353:7:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															],
															"id": 435,
															"name": "_ownerOf",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 427,
															"src": "7344:8:0",
															"typeDescriptions": {
																"typeIdentifier": "t_function_internal_view$_t_uint256_$returns$_t_address_$",
																"typeString": "function (uint256) view returns (address)"
															}
														},
														"id": 437,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "functionCall",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "7344:17:0",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "!=",
													"rightExpression": {
														"arguments": [
															{
																"hexValue": "30",
																"id": 440,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "7373:1:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																}
															],
															"id": 439,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"lValueRequested": false,
															"nodeType": "ElementaryTypeNameExpression",
															"src": "7365:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_address_$",
																"typeString": "type(address)"
															},
															"typeName": {
																"id": 438,
																"name": "address",
																"nodeType": "ElementaryTypeName",
																"src": "7365:7:0",
																"typeDescriptions": {}
															}
														},
														"id": 441,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "typeConversion",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "7365:10:0",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "7344:31:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"functionReturnParameters": 434,
												"id": 443,
												"nodeType": "Return",
												"src": "7337:38:0"
											}
										]
									},
									"documentation": {
										"id": 428,
										"nodeType": "StructuredDocumentation",
										"src": "6959:292:0",
										"text": " @dev Returns whether `tokenId` exists.\n Tokens can be managed by their owner or approved accounts via {approve} or {setApprovalForAll}.\n Tokens start existing when they are minted (`_mint`),\n and stop existing when they are burned (`_burn`)."
									},
									"id": 445,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_exists",
									"nameLocation": "7265:7:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 431,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 430,
												"mutability": "mutable",
												"name": "tokenId",
												"nameLocation": "7281:7:0",
												"nodeType": "VariableDeclaration",
												"scope": 445,
												"src": "7273:15:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 429,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "7273:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "7272:17:0"
									},
									"returnParameters": {
										"id": 434,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 433,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 445,
												"src": "7321:4:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 432,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "7321:4:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "7320:6:0"
									},
									"scope": 944,
									"src": "7256:126:0",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 478,
										"nodeType": "Block",
										"src": "7639:162:0",
										"statements": [
											{
												"assignments": [
													456
												],
												"declarations": [
													{
														"constant": false,
														"id": 456,
														"mutability": "mutable",
														"name": "owner",
														"nameLocation": "7657:5:0",
														"nodeType": "VariableDeclaration",
														"scope": 478,
														"src": "7649:13:0",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														},
														"typeName": {
															"id": 455,
															"name": "address",
															"nodeType": "ElementaryTypeName",
															"src": "7649:7:0",
															"stateMutability": "nonpayable",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 461,
												"initialValue": {
													"arguments": [
														{
															"id": 459,
															"name": "tokenId",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 450,
															"src": "7680:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"expression": {
															"id": 457,
															"name": "ERC721",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 944,
															"src": "7665:6:0",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_contract$_ERC721_$944_$",
																"typeString": "type(contract ERC721)"
															}
														},
														"id": 458,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "7672:7:0",
														"memberName": "ownerOf",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 145,
														"src": "7665:14:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_view$_t_uint256_$returns$_t_address_$",
															"typeString": "function (uint256) view returns (address)"
														}
													},
													"id": 460,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "7665:23:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "7649:39:0"
											},
											{
												"expression": {
													"components": [
														{
															"commonType": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															"id": 475,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"commonType": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																},
																"id": 469,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"commonType": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	},
																	"id": 464,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"leftExpression": {
																		"id": 462,
																		"name": "spender",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 448,
																		"src": "7706:7:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	},
																	"nodeType": "BinaryOperation",
																	"operator": "==",
																	"rightExpression": {
																		"id": 463,
																		"name": "owner",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 456,
																		"src": "7717:5:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	},
																	"src": "7706:16:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bool",
																		"typeString": "bool"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": "||",
																"rightExpression": {
																	"arguments": [
																		{
																			"id": 466,
																			"name": "owner",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 456,
																			"src": "7743:5:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_address",
																				"typeString": "address"
																			}
																		},
																		{
																			"id": 467,
																			"name": "spender",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 448,
																			"src": "7750:7:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_address",
																				"typeString": "address"
																			}
																		}
																	],
																	"expression": {
																		"argumentTypes": [
																			{
																				"typeIdentifier": "t_address",
																				"typeString": "address"
																			},
																			{
																				"typeIdentifier": "t_address",
																				"typeString": "address"
																			}
																		],
																		"id": 465,
																		"name": "isApprovedForAll",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 309,
																		"src": "7726:16:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_function_internal_view$_t_address_$_t_address_$returns$_t_bool_$",
																			"typeString": "function (address,address) view returns (bool)"
																		}
																	},
																	"id": 468,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"kind": "functionCall",
																	"lValueRequested": false,
																	"nameLocations": [],
																	"names": [],
																	"nodeType": "FunctionCall",
																	"src": "7726:32:0",
																	"tryCall": false,
																	"typeDescriptions": {
																		"typeIdentifier": "t_bool",
																		"typeString": "bool"
																	}
																},
																"src": "7706:52:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "||",
															"rightExpression": {
																"commonType": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																},
																"id": 474,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"arguments": [
																		{
																			"id": 471,
																			"name": "tokenId",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 450,
																			"src": "7774:7:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		}
																	],
																	"expression": {
																		"argumentTypes": [
																			{
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		],
																		"id": 470,
																		"name": "getApproved",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 274,
																		"src": "7762:11:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_function_internal_view$_t_uint256_$returns$_t_address_$",
																			"typeString": "function (uint256) view returns (address)"
																		}
																	},
																	"id": 472,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"kind": "functionCall",
																	"lValueRequested": false,
																	"nameLocations": [],
																	"names": [],
																	"nodeType": "FunctionCall",
																	"src": "7762:20:0",
																	"tryCall": false,
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": "==",
																"rightExpression": {
																	"id": 473,
																	"name": "spender",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 448,
																	"src": "7786:7:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																"src": "7762:31:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																}
															},
															"src": "7706:87:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														}
													],
													"id": 476,
													"isConstant": false,
													"isInlineArray": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "TupleExpression",
													"src": "7705:89:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"functionReturnParameters": 454,
												"id": 477,
												"nodeType": "Return",
												"src": "7698:96:0"
											}
										]
									},
									"documentation": {
										"id": 446,
										"nodeType": "StructuredDocumentation",
										"src": "7388:147:0",
										"text": " @dev Returns whether `spender` is allowed to manage `tokenId`.\n Requirements:\n - `tokenId` must exist."
									},
									"id": 479,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_isApprovedOrOwner",
									"nameLocation": "7549:18:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 451,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 448,
												"mutability": "mutable",
												"name": "spender",
												"nameLocation": "7576:7:0",
												"nodeType": "VariableDeclaration",
												"scope": 479,
												"src": "7568:15:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 447,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "7568:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 450,
												"mutability": "mutable",
												"name": "tokenId",
												"nameLocation": "7593:7:0",
												"nodeType": "VariableDeclaration",
												"scope": 479,
												"src": "7585:15:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 449,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "7585:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "7567:34:0"
									},
									"returnParameters": {
										"id": 454,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 453,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 479,
												"src": "7633:4:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 452,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "7633:4:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "7632:6:0"
									},
									"scope": 944,
									"src": "7540:261:0",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 493,
										"nodeType": "Block",
										"src": "8196:43:0",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"id": 488,
															"name": "to",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 482,
															"src": "8216:2:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 489,
															"name": "tokenId",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 484,
															"src": "8220:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														{
															"hexValue": "",
															"id": 490,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "8229:2:0",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470",
																"typeString": "literal_string \"\""
															},
															"value": ""
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															{
																"typeIdentifier": "t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470",
																"typeString": "literal_string \"\""
															}
														],
														"id": 487,
														"name": "_safeMint",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															494,
															523
														],
														"referencedDeclaration": 523,
														"src": "8206:9:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_uint256_$_t_bytes_memory_ptr_$returns$__$",
															"typeString": "function (address,uint256,bytes memory)"
														}
													},
													"id": 491,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "8206:26:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 492,
												"nodeType": "ExpressionStatement",
												"src": "8206:26:0"
											}
										]
									},
									"documentation": {
										"id": 480,
										"nodeType": "StructuredDocumentation",
										"src": "7807:319:0",
										"text": " @dev Safely mints `tokenId` and transfers it to `to`.\n Requirements:\n - `tokenId` must not exist.\n - If `to` refers to a smart contract, it must implement {IERC721Receiver-onERC721Received}, which is called upon a safe transfer.\n Emits a {Transfer} event."
									},
									"id": 494,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_safeMint",
									"nameLocation": "8140:9:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 485,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 482,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "8158:2:0",
												"nodeType": "VariableDeclaration",
												"scope": 494,
												"src": "8150:10:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 481,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "8150:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 484,
												"mutability": "mutable",
												"name": "tokenId",
												"nameLocation": "8170:7:0",
												"nodeType": "VariableDeclaration",
												"scope": 494,
												"src": "8162:15:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 483,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "8162:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "8149:29:0"
									},
									"returnParameters": {
										"id": 486,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "8196:0:0"
									},
									"scope": 944,
									"src": "8131:108:0",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 522,
										"nodeType": "Block",
										"src": "8574:195:0",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"id": 505,
															"name": "to",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 497,
															"src": "8590:2:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 506,
															"name": "tokenId",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 499,
															"src": "8594:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 504,
														"name": "_mint",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 600,
														"src": "8584:5:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,uint256)"
														}
													},
													"id": 507,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "8584:18:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 508,
												"nodeType": "ExpressionStatement",
												"src": "8584:18:0"
											},
											{
												"expression": {
													"arguments": [
														{
															"arguments": [
																{
																	"arguments": [
																		{
																			"hexValue": "30",
																			"id": 513,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "8664:1:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_0_by_1",
																				"typeString": "int_const 0"
																			},
																			"value": "0"
																		}
																	],
																	"expression": {
																		"argumentTypes": [
																			{
																				"typeIdentifier": "t_rational_0_by_1",
																				"typeString": "int_const 0"
																			}
																		],
																		"id": 512,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"lValueRequested": false,
																		"nodeType": "ElementaryTypeNameExpression",
																		"src": "8656:7:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_type$_t_address_$",
																			"typeString": "type(address)"
																		},
																		"typeName": {
																			"id": 511,
																			"name": "address",
																			"nodeType": "ElementaryTypeName",
																			"src": "8656:7:0",
																			"typeDescriptions": {}
																		}
																	},
																	"id": 514,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "typeConversion",
																	"lValueRequested": false,
																	"nameLocations": [],
																	"names": [],
																	"nodeType": "FunctionCall",
																	"src": "8656:10:0",
																	"tryCall": false,
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																{
																	"id": 515,
																	"name": "to",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 497,
																	"src": "8668:2:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																{
																	"id": 516,
																	"name": "tokenId",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 499,
																	"src": "8672:7:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																{
																	"id": 517,
																	"name": "data",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 501,
																	"src": "8681:4:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bytes_memory_ptr",
																		"typeString": "bytes memory"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	},
																	{
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	},
																	{
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	{
																		"typeIdentifier": "t_bytes_memory_ptr",
																		"typeString": "bytes memory"
																	}
																],
																"id": 510,
																"name": "_checkOnERC721Received",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 884,
																"src": "8633:22:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$_t_bytes_memory_ptr_$returns$_t_bool_$",
																	"typeString": "function (address,address,uint256,bytes memory) returns (bool)"
																}
															},
															"id": 518,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "8633:53:0",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "4552433732313a207472616e7366657220746f206e6f6e20455243373231526563656976657220696d706c656d656e746572",
															"id": 519,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "8700:52:0",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_1e766a06da43a53d0f4c380e06e5a342e14d5af1bf8501996c844905530ca84e",
																"typeString": "literal_string \"ERC721: transfer to non ERC721Receiver implementer\""
															},
															"value": "ERC721: transfer to non ERC721Receiver implementer"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_1e766a06da43a53d0f4c380e06e5a342e14d5af1bf8501996c844905530ca84e",
																"typeString": "literal_string \"ERC721: transfer to non ERC721Receiver implementer\""
															}
														],
														"id": 509,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "8612:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 520,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "8612:150:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 521,
												"nodeType": "ExpressionStatement",
												"src": "8612:150:0"
											}
										]
									},
									"documentation": {
										"id": 495,
										"nodeType": "StructuredDocumentation",
										"src": "8245:210:0",
										"text": " @dev Same as {xref-ERC721-_safeMint-address-uint256-}[`_safeMint`], with an additional `data` parameter which is\n forwarded in {IERC721Receiver-onERC721Received} to contract recipients."
									},
									"id": 523,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_safeMint",
									"nameLocation": "8469:9:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 502,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 497,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "8496:2:0",
												"nodeType": "VariableDeclaration",
												"scope": 523,
												"src": "8488:10:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 496,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "8488:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 499,
												"mutability": "mutable",
												"name": "tokenId",
												"nameLocation": "8516:7:0",
												"nodeType": "VariableDeclaration",
												"scope": 523,
												"src": "8508:15:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 498,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "8508:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 501,
												"mutability": "mutable",
												"name": "data",
												"nameLocation": "8546:4:0",
												"nodeType": "VariableDeclaration",
												"scope": 523,
												"src": "8533:17:0",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 500,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "8533:5:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "8478:78:0"
									},
									"returnParameters": {
										"id": 503,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "8574:0:0"
									},
									"scope": 944,
									"src": "8460:309:0",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 599,
										"nodeType": "Block",
										"src": "9152:859:0",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															"id": 537,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 532,
																"name": "to",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 526,
																"src": "9170:2:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "!=",
															"rightExpression": {
																"arguments": [
																	{
																		"hexValue": "30",
																		"id": 535,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "9184:1:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		},
																		"value": "0"
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		}
																	],
																	"id": 534,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"lValueRequested": false,
																	"nodeType": "ElementaryTypeNameExpression",
																	"src": "9176:7:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_type$_t_address_$",
																		"typeString": "type(address)"
																	},
																	"typeName": {
																		"id": 533,
																		"name": "address",
																		"nodeType": "ElementaryTypeName",
																		"src": "9176:7:0",
																		"typeDescriptions": {}
																	}
																},
																"id": 536,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "typeConversion",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "9176:10:0",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"src": "9170:16:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "4552433732313a206d696e7420746f20746865207a65726f2061646472657373",
															"id": 538,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "9188:34:0",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_8a66f4bb6512ffbfcc3db9b42318eb65f26ac15163eaa9a1e5cfa7bee9d1c7c6",
																"typeString": "literal_string \"ERC721: mint to the zero address\""
															},
															"value": "ERC721: mint to the zero address"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_8a66f4bb6512ffbfcc3db9b42318eb65f26ac15163eaa9a1e5cfa7bee9d1c7c6",
																"typeString": "literal_string \"ERC721: mint to the zero address\""
															}
														],
														"id": 531,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "9162:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 539,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "9162:61:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 540,
												"nodeType": "ExpressionStatement",
												"src": "9162:61:0"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 545,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"nodeType": "UnaryOperation",
															"operator": "!",
															"prefix": true,
															"src": "9241:17:0",
															"subExpression": {
																"arguments": [
																	{
																		"id": 543,
																		"name": "tokenId",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 528,
																		"src": "9250:7:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	],
																	"id": 542,
																	"name": "_exists",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 445,
																	"src": "9242:7:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_internal_view$_t_uint256_$returns$_t_bool_$",
																		"typeString": "function (uint256) view returns (bool)"
																	}
																},
																"id": 544,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "9242:16:0",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																}
															},
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "4552433732313a20746f6b656e20616c7265616479206d696e746564",
															"id": 546,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "9260:30:0",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_2a63ce106ef95058ed21fd07c42a10f11dc5c32ac13a4e847923f7759f635d57",
																"typeString": "literal_string \"ERC721: token already minted\""
															},
															"value": "ERC721: token already minted"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_2a63ce106ef95058ed21fd07c42a10f11dc5c32ac13a4e847923f7759f635d57",
																"typeString": "literal_string \"ERC721: token already minted\""
															}
														],
														"id": 541,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "9233:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 547,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "9233:58:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 548,
												"nodeType": "ExpressionStatement",
												"src": "9233:58:0"
											},
											{
												"expression": {
													"arguments": [
														{
															"arguments": [
																{
																	"hexValue": "30",
																	"id": 552,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "9331:1:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	},
																	"value": "0"
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	}
																],
																"id": 551,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "9323:7:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_address_$",
																	"typeString": "type(address)"
																},
																"typeName": {
																	"id": 550,
																	"name": "address",
																	"nodeType": "ElementaryTypeName",
																	"src": "9323:7:0",
																	"typeDescriptions": {}
																}
															},
															"id": 553,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "typeConversion",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "9323:10:0",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 554,
															"name": "to",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 526,
															"src": "9335:2:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 555,
															"name": "tokenId",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 528,
															"src": "9339:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														{
															"hexValue": "31",
															"id": 556,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "number",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "9348:1:0",
															"typeDescriptions": {
																"typeIdentifier": "t_rational_1_by_1",
																"typeString": "int_const 1"
															},
															"value": "1"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															{
																"typeIdentifier": "t_rational_1_by_1",
																"typeString": "int_const 1"
															}
														],
														"id": 549,
														"name": "_beforeTokenTransfer",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 930,
														"src": "9302:20:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$_t_uint256_$returns$__$",
															"typeString": "function (address,address,uint256,uint256)"
														}
													},
													"id": 557,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "9302:48:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 558,
												"nodeType": "ExpressionStatement",
												"src": "9302:48:0"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 563,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"nodeType": "UnaryOperation",
															"operator": "!",
															"prefix": true,
															"src": "9445:17:0",
															"subExpression": {
																"arguments": [
																	{
																		"id": 561,
																		"name": "tokenId",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 528,
																		"src": "9454:7:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	],
																	"id": 560,
																	"name": "_exists",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 445,
																	"src": "9446:7:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_internal_view$_t_uint256_$returns$_t_bool_$",
																		"typeString": "function (uint256) view returns (bool)"
																	}
																},
																"id": 562,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "9446:16:0",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																}
															},
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "4552433732313a20746f6b656e20616c7265616479206d696e746564",
															"id": 564,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "9464:30:0",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_2a63ce106ef95058ed21fd07c42a10f11dc5c32ac13a4e847923f7759f635d57",
																"typeString": "literal_string \"ERC721: token already minted\""
															},
															"value": "ERC721: token already minted"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_2a63ce106ef95058ed21fd07c42a10f11dc5c32ac13a4e847923f7759f635d57",
																"typeString": "literal_string \"ERC721: token already minted\""
															}
														],
														"id": 559,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "9437:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 565,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "9437:58:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 566,
												"nodeType": "ExpressionStatement",
												"src": "9437:58:0"
											},
											{
												"id": 573,
												"nodeType": "UncheckedBlock",
												"src": "9506:360:0",
												"statements": [
													{
														"expression": {
															"id": 571,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftHandSide": {
																"baseExpression": {
																	"id": 567,
																	"name": "_balances",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 35,
																	"src": "9837:9:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
																		"typeString": "mapping(address => uint256)"
																	}
																},
																"id": 569,
																"indexExpression": {
																	"id": 568,
																	"name": "to",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 526,
																	"src": "9847:2:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																"isConstant": false,
																"isLValue": true,
																"isPure": false,
																"lValueRequested": true,
																"nodeType": "IndexAccess",
																"src": "9837:13:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "Assignment",
															"operator": "+=",
															"rightHandSide": {
																"hexValue": "31",
																"id": 570,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "9854:1:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_1_by_1",
																	"typeString": "int_const 1"
																},
																"value": "1"
															},
															"src": "9837:18:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"id": 572,
														"nodeType": "ExpressionStatement",
														"src": "9837:18:0"
													}
												]
											},
											{
												"expression": {
													"id": 578,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"baseExpression": {
															"id": 574,
															"name": "_owners",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 31,
															"src": "9876:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_mapping$_t_uint256_$_t_address_$",
																"typeString": "mapping(uint256 => address)"
															}
														},
														"id": 576,
														"indexExpression": {
															"id": 575,
															"name": "tokenId",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 528,
															"src": "9884:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"nodeType": "IndexAccess",
														"src": "9876:16:0",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"id": 577,
														"name": "to",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 526,
														"src": "9895:2:0",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "9876:21:0",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"id": 579,
												"nodeType": "ExpressionStatement",
												"src": "9876:21:0"
											},
											{
												"eventCall": {
													"arguments": [
														{
															"arguments": [
																{
																	"hexValue": "30",
																	"id": 583,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "9930:1:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	},
																	"value": "0"
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	}
																],
																"id": 582,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "9922:7:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_address_$",
																	"typeString": "type(address)"
																},
																"typeName": {
																	"id": 581,
																	"name": "address",
																	"nodeType": "ElementaryTypeName",
																	"src": "9922:7:0",
																	"typeDescriptions": {}
																}
															},
															"id": 584,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "typeConversion",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "9922:10:0",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 585,
															"name": "to",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 526,
															"src": "9934:2:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 586,
															"name": "tokenId",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 528,
															"src": "9938:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 580,
														"name": "Transfer",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 959,
														"src": "9913:8:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,address,uint256)"
														}
													},
													"id": 587,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "9913:33:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 588,
												"nodeType": "EmitStatement",
												"src": "9908:38:0"
											},
											{
												"expression": {
													"arguments": [
														{
															"arguments": [
																{
																	"hexValue": "30",
																	"id": 592,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "9985:1:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	},
																	"value": "0"
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	}
																],
																"id": 591,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "9977:7:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_address_$",
																	"typeString": "type(address)"
																},
																"typeName": {
																	"id": 590,
																	"name": "address",
																	"nodeType": "ElementaryTypeName",
																	"src": "9977:7:0",
																	"typeDescriptions": {}
																}
															},
															"id": 593,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "typeConversion",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "9977:10:0",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 594,
															"name": "to",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 526,
															"src": "9989:2:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 595,
															"name": "tokenId",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 528,
															"src": "9993:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														{
															"hexValue": "31",
															"id": 596,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "number",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "10002:1:0",
															"typeDescriptions": {
																"typeIdentifier": "t_rational_1_by_1",
																"typeString": "int_const 1"
															},
															"value": "1"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															{
																"typeIdentifier": "t_rational_1_by_1",
																"typeString": "int_const 1"
															}
														],
														"id": 589,
														"name": "_afterTokenTransfer",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 943,
														"src": "9957:19:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$_t_uint256_$returns$__$",
															"typeString": "function (address,address,uint256,uint256)"
														}
													},
													"id": 597,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "9957:47:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 598,
												"nodeType": "ExpressionStatement",
												"src": "9957:47:0"
											}
										]
									},
									"documentation": {
										"id": 524,
										"nodeType": "StructuredDocumentation",
										"src": "8775:311:0",
										"text": " @dev Mints `tokenId` and transfers it to `to`.\n WARNING: Usage of this method is discouraged, use {_safeMint} whenever possible\n Requirements:\n - `tokenId` must not exist.\n - `to` cannot be the zero address.\n Emits a {Transfer} event."
									},
									"id": 600,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_mint",
									"nameLocation": "9100:5:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 529,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 526,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "9114:2:0",
												"nodeType": "VariableDeclaration",
												"scope": 600,
												"src": "9106:10:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 525,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "9106:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 528,
												"mutability": "mutable",
												"name": "tokenId",
												"nameLocation": "9126:7:0",
												"nodeType": "VariableDeclaration",
												"scope": 600,
												"src": "9118:15:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 527,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "9118:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "9105:29:0"
									},
									"returnParameters": {
										"id": 530,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "9152:0:0"
									},
									"scope": 944,
									"src": "9091:920:0",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 666,
										"nodeType": "Block",
										"src": "10386:713:0",
										"statements": [
											{
												"assignments": [
													607
												],
												"declarations": [
													{
														"constant": false,
														"id": 607,
														"mutability": "mutable",
														"name": "owner",
														"nameLocation": "10404:5:0",
														"nodeType": "VariableDeclaration",
														"scope": 666,
														"src": "10396:13:0",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														},
														"typeName": {
															"id": 606,
															"name": "address",
															"nodeType": "ElementaryTypeName",
															"src": "10396:7:0",
															"stateMutability": "nonpayable",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 612,
												"initialValue": {
													"arguments": [
														{
															"id": 610,
															"name": "tokenId",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 603,
															"src": "10427:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"expression": {
															"id": 608,
															"name": "ERC721",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 944,
															"src": "10412:6:0",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_contract$_ERC721_$944_$",
																"typeString": "type(contract ERC721)"
															}
														},
														"id": 609,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "10419:7:0",
														"memberName": "ownerOf",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 145,
														"src": "10412:14:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_view$_t_uint256_$returns$_t_address_$",
															"typeString": "function (uint256) view returns (address)"
														}
													},
													"id": 611,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "10412:23:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "10396:39:0"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 614,
															"name": "owner",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 607,
															"src": "10467:5:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"arguments": [
																{
																	"hexValue": "30",
																	"id": 617,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "10482:1:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	},
																	"value": "0"
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	}
																],
																"id": 616,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "10474:7:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_address_$",
																	"typeString": "type(address)"
																},
																"typeName": {
																	"id": 615,
																	"name": "address",
																	"nodeType": "ElementaryTypeName",
																	"src": "10474:7:0",
																	"typeDescriptions": {}
																}
															},
															"id": 618,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "typeConversion",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "10474:10:0",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 619,
															"name": "tokenId",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 603,
															"src": "10486:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														{
															"hexValue": "31",
															"id": 620,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "number",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "10495:1:0",
															"typeDescriptions": {
																"typeIdentifier": "t_rational_1_by_1",
																"typeString": "int_const 1"
															},
															"value": "1"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															{
																"typeIdentifier": "t_rational_1_by_1",
																"typeString": "int_const 1"
															}
														],
														"id": 613,
														"name": "_beforeTokenTransfer",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 930,
														"src": "10446:20:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$_t_uint256_$returns$__$",
															"typeString": "function (address,address,uint256,uint256)"
														}
													},
													"id": 621,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "10446:51:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 622,
												"nodeType": "ExpressionStatement",
												"src": "10446:51:0"
											},
											{
												"expression": {
													"id": 628,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 623,
														"name": "owner",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 607,
														"src": "10599:5:0",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"arguments": [
															{
																"id": 626,
																"name": "tokenId",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 603,
																"src": "10622:7:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															],
															"expression": {
																"id": 624,
																"name": "ERC721",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 944,
																"src": "10607:6:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_contract$_ERC721_$944_$",
																	"typeString": "type(contract ERC721)"
																}
															},
															"id": 625,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "10614:7:0",
															"memberName": "ownerOf",
															"nodeType": "MemberAccess",
															"referencedDeclaration": 145,
															"src": "10607:14:0",
															"typeDescriptions": {
																"typeIdentifier": "t_function_internal_view$_t_uint256_$returns$_t_address_$",
																"typeString": "function (uint256) view returns (address)"
															}
														},
														"id": 627,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "functionCall",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "10607:23:0",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "10599:31:0",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"id": 629,
												"nodeType": "ExpressionStatement",
												"src": "10599:31:0"
											},
											{
												"expression": {
													"id": 633,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "UnaryOperation",
													"operator": "delete",
													"prefix": true,
													"src": "10668:31:0",
													"subExpression": {
														"baseExpression": {
															"id": 630,
															"name": "_tokenApprovals",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 39,
															"src": "10675:15:0",
															"typeDescriptions": {
																"typeIdentifier": "t_mapping$_t_uint256_$_t_address_$",
																"typeString": "mapping(uint256 => address)"
															}
														},
														"id": 632,
														"indexExpression": {
															"id": 631,
															"name": "tokenId",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 603,
															"src": "10691:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"nodeType": "IndexAccess",
														"src": "10675:24:0",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 634,
												"nodeType": "ExpressionStatement",
												"src": "10668:31:0"
											},
											{
												"id": 641,
												"nodeType": "UncheckedBlock",
												"src": "10710:237:0",
												"statements": [
													{
														"expression": {
															"id": 639,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftHandSide": {
																"baseExpression": {
																	"id": 635,
																	"name": "_balances",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 35,
																	"src": "10915:9:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
																		"typeString": "mapping(address => uint256)"
																	}
																},
																"id": 637,
																"indexExpression": {
																	"id": 636,
																	"name": "owner",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 607,
																	"src": "10925:5:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																"isConstant": false,
																"isLValue": true,
																"isPure": false,
																"lValueRequested": true,
																"nodeType": "IndexAccess",
																"src": "10915:16:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "Assignment",
															"operator": "-=",
															"rightHandSide": {
																"hexValue": "31",
																"id": 638,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "10935:1:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_1_by_1",
																	"typeString": "int_const 1"
																},
																"value": "1"
															},
															"src": "10915:21:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"id": 640,
														"nodeType": "ExpressionStatement",
														"src": "10915:21:0"
													}
												]
											},
											{
												"expression": {
													"id": 645,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "UnaryOperation",
													"operator": "delete",
													"prefix": true,
													"src": "10956:23:0",
													"subExpression": {
														"baseExpression": {
															"id": 642,
															"name": "_owners",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 31,
															"src": "10963:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_mapping$_t_uint256_$_t_address_$",
																"typeString": "mapping(uint256 => address)"
															}
														},
														"id": 644,
														"indexExpression": {
															"id": 643,
															"name": "tokenId",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 603,
															"src": "10971:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"nodeType": "IndexAccess",
														"src": "10963:16:0",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 646,
												"nodeType": "ExpressionStatement",
												"src": "10956:23:0"
											},
											{
												"eventCall": {
													"arguments": [
														{
															"id": 648,
															"name": "owner",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 607,
															"src": "11004:5:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"arguments": [
																{
																	"hexValue": "30",
																	"id": 651,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "11019:1:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	},
																	"value": "0"
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	}
																],
																"id": 650,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "11011:7:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_address_$",
																	"typeString": "type(address)"
																},
																"typeName": {
																	"id": 649,
																	"name": "address",
																	"nodeType": "ElementaryTypeName",
																	"src": "11011:7:0",
																	"typeDescriptions": {}
																}
															},
															"id": 652,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "typeConversion",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "11011:10:0",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 653,
															"name": "tokenId",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 603,
															"src": "11023:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 647,
														"name": "Transfer",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 959,
														"src": "10995:8:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,address,uint256)"
														}
													},
													"id": 654,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "10995:36:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 655,
												"nodeType": "EmitStatement",
												"src": "10990:41:0"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 657,
															"name": "owner",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 607,
															"src": "11062:5:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"arguments": [
																{
																	"hexValue": "30",
																	"id": 660,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "11077:1:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	},
																	"value": "0"
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	}
																],
																"id": 659,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "11069:7:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_address_$",
																	"typeString": "type(address)"
																},
																"typeName": {
																	"id": 658,
																	"name": "address",
																	"nodeType": "ElementaryTypeName",
																	"src": "11069:7:0",
																	"typeDescriptions": {}
																}
															},
															"id": 661,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "typeConversion",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "11069:10:0",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 662,
															"name": "tokenId",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 603,
															"src": "11081:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														{
															"hexValue": "31",
															"id": 663,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "number",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "11090:1:0",
															"typeDescriptions": {
																"typeIdentifier": "t_rational_1_by_1",
																"typeString": "int_const 1"
															},
															"value": "1"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															{
																"typeIdentifier": "t_rational_1_by_1",
																"typeString": "int_const 1"
															}
														],
														"id": 656,
														"name": "_afterTokenTransfer",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 943,
														"src": "11042:19:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$_t_uint256_$returns$__$",
															"typeString": "function (address,address,uint256,uint256)"
														}
													},
													"id": 664,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "11042:50:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 665,
												"nodeType": "ExpressionStatement",
												"src": "11042:50:0"
											}
										]
									},
									"documentation": {
										"id": 601,
										"nodeType": "StructuredDocumentation",
										"src": "10017:315:0",
										"text": " @dev Destroys `tokenId`.\n The approval is cleared when the token is burned.\n This is an internal function that does not check if the sender is authorized to operate on the token.\n Requirements:\n - `tokenId` must exist.\n Emits a {Transfer} event."
									},
									"id": 667,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_burn",
									"nameLocation": "10346:5:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 604,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 603,
												"mutability": "mutable",
												"name": "tokenId",
												"nameLocation": "10360:7:0",
												"nodeType": "VariableDeclaration",
												"scope": 667,
												"src": "10352:15:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 602,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "10352:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "10351:17:0"
									},
									"returnParameters": {
										"id": 605,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "10386:0:0"
									},
									"scope": 944,
									"src": "10337:762:0",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 751,
										"nodeType": "Block",
										"src": "11532:1124:0",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															"id": 683,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"arguments": [
																	{
																		"id": 680,
																		"name": "tokenId",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 674,
																		"src": "11565:7:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	],
																	"expression": {
																		"id": 678,
																		"name": "ERC721",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 944,
																		"src": "11550:6:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_type$_t_contract$_ERC721_$944_$",
																			"typeString": "type(contract ERC721)"
																		}
																	},
																	"id": 679,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"memberLocation": "11557:7:0",
																	"memberName": "ownerOf",
																	"nodeType": "MemberAccess",
																	"referencedDeclaration": 145,
																	"src": "11550:14:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_internal_view$_t_uint256_$returns$_t_address_$",
																		"typeString": "function (uint256) view returns (address)"
																	}
																},
																"id": 681,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "11550:23:0",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "==",
															"rightExpression": {
																"id": 682,
																"name": "from",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 670,
																"src": "11577:4:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"src": "11550:31:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "4552433732313a207472616e736665722066726f6d20696e636f7272656374206f776e6572",
															"id": 684,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "11583:39:0",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_277f8ee9d5b4fc3c4149386f24de0fc1bbc63a8210e2197bfd1c0376a2ac5f48",
																"typeString": "literal_string \"ERC721: transfer from incorrect owner\""
															},
															"value": "ERC721: transfer from incorrect owner"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_277f8ee9d5b4fc3c4149386f24de0fc1bbc63a8210e2197bfd1c0376a2ac5f48",
																"typeString": "literal_string \"ERC721: transfer from incorrect owner\""
															}
														],
														"id": 677,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "11542:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 685,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "11542:81:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 686,
												"nodeType": "ExpressionStatement",
												"src": "11542:81:0"
											},
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															"id": 693,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 688,
																"name": "to",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 672,
																"src": "11641:2:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "!=",
															"rightExpression": {
																"arguments": [
																	{
																		"hexValue": "30",
																		"id": 691,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "11655:1:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		},
																		"value": "0"
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		}
																	],
																	"id": 690,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"lValueRequested": false,
																	"nodeType": "ElementaryTypeNameExpression",
																	"src": "11647:7:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_type$_t_address_$",
																		"typeString": "type(address)"
																	},
																	"typeName": {
																		"id": 689,
																		"name": "address",
																		"nodeType": "ElementaryTypeName",
																		"src": "11647:7:0",
																		"typeDescriptions": {}
																	}
																},
																"id": 692,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "typeConversion",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "11647:10:0",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"src": "11641:16:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "4552433732313a207472616e7366657220746f20746865207a65726f2061646472657373",
															"id": 694,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "11659:38:0",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_455fea98ea03c32d7dd1a6f1426917d80529bf47b3ccbde74e7206e889e709f4",
																"typeString": "literal_string \"ERC721: transfer to the zero address\""
															},
															"value": "ERC721: transfer to the zero address"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_455fea98ea03c32d7dd1a6f1426917d80529bf47b3ccbde74e7206e889e709f4",
																"typeString": "literal_string \"ERC721: transfer to the zero address\""
															}
														],
														"id": 687,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "11633:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 695,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "11633:65:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 696,
												"nodeType": "ExpressionStatement",
												"src": "11633:65:0"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 698,
															"name": "from",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 670,
															"src": "11730:4:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 699,
															"name": "to",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 672,
															"src": "11736:2:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 700,
															"name": "tokenId",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 674,
															"src": "11740:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														{
															"hexValue": "31",
															"id": 701,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "number",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "11749:1:0",
															"typeDescriptions": {
																"typeIdentifier": "t_rational_1_by_1",
																"typeString": "int_const 1"
															},
															"value": "1"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															{
																"typeIdentifier": "t_rational_1_by_1",
																"typeString": "int_const 1"
															}
														],
														"id": 697,
														"name": "_beforeTokenTransfer",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 930,
														"src": "11709:20:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$_t_uint256_$returns$__$",
															"typeString": "function (address,address,uint256,uint256)"
														}
													},
													"id": 702,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "11709:42:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 703,
												"nodeType": "ExpressionStatement",
												"src": "11709:42:0"
											},
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															"id": 710,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"arguments": [
																	{
																		"id": 707,
																		"name": "tokenId",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 674,
																		"src": "11866:7:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	],
																	"expression": {
																		"id": 705,
																		"name": "ERC721",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 944,
																		"src": "11851:6:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_type$_t_contract$_ERC721_$944_$",
																			"typeString": "type(contract ERC721)"
																		}
																	},
																	"id": 706,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"memberLocation": "11858:7:0",
																	"memberName": "ownerOf",
																	"nodeType": "MemberAccess",
																	"referencedDeclaration": 145,
																	"src": "11851:14:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_internal_view$_t_uint256_$returns$_t_address_$",
																		"typeString": "function (uint256) view returns (address)"
																	}
																},
																"id": 708,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "11851:23:0",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "==",
															"rightExpression": {
																"id": 709,
																"name": "from",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 670,
																"src": "11878:4:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"src": "11851:31:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "4552433732313a207472616e736665722066726f6d20696e636f7272656374206f776e6572",
															"id": 711,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "11884:39:0",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_277f8ee9d5b4fc3c4149386f24de0fc1bbc63a8210e2197bfd1c0376a2ac5f48",
																"typeString": "literal_string \"ERC721: transfer from incorrect owner\""
															},
															"value": "ERC721: transfer from incorrect owner"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_277f8ee9d5b4fc3c4149386f24de0fc1bbc63a8210e2197bfd1c0376a2ac5f48",
																"typeString": "literal_string \"ERC721: transfer from incorrect owner\""
															}
														],
														"id": 704,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "11843:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 712,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "11843:81:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 713,
												"nodeType": "ExpressionStatement",
												"src": "11843:81:0"
											},
											{
												"expression": {
													"id": 717,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "UnaryOperation",
													"operator": "delete",
													"prefix": true,
													"src": "11986:31:0",
													"subExpression": {
														"baseExpression": {
															"id": 714,
															"name": "_tokenApprovals",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 39,
															"src": "11993:15:0",
															"typeDescriptions": {
																"typeIdentifier": "t_mapping$_t_uint256_$_t_address_$",
																"typeString": "mapping(uint256 => address)"
															}
														},
														"id": 716,
														"indexExpression": {
															"id": 715,
															"name": "tokenId",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 674,
															"src": "12009:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"nodeType": "IndexAccess",
														"src": "11993:24:0",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 718,
												"nodeType": "ExpressionStatement",
												"src": "11986:31:0"
											},
											{
												"id": 731,
												"nodeType": "UncheckedBlock",
												"src": "12028:496:0",
												"statements": [
													{
														"expression": {
															"id": 723,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftHandSide": {
																"baseExpression": {
																	"id": 719,
																	"name": "_balances",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 35,
																	"src": "12461:9:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
																		"typeString": "mapping(address => uint256)"
																	}
																},
																"id": 721,
																"indexExpression": {
																	"id": 720,
																	"name": "from",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 670,
																	"src": "12471:4:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																"isConstant": false,
																"isLValue": true,
																"isPure": false,
																"lValueRequested": true,
																"nodeType": "IndexAccess",
																"src": "12461:15:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "Assignment",
															"operator": "-=",
															"rightHandSide": {
																"hexValue": "31",
																"id": 722,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "12480:1:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_1_by_1",
																	"typeString": "int_const 1"
																},
																"value": "1"
															},
															"src": "12461:20:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"id": 724,
														"nodeType": "ExpressionStatement",
														"src": "12461:20:0"
													},
													{
														"expression": {
															"id": 729,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftHandSide": {
																"baseExpression": {
																	"id": 725,
																	"name": "_balances",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 35,
																	"src": "12495:9:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
																		"typeString": "mapping(address => uint256)"
																	}
																},
																"id": 727,
																"indexExpression": {
																	"id": 726,
																	"name": "to",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 672,
																	"src": "12505:2:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																"isConstant": false,
																"isLValue": true,
																"isPure": false,
																"lValueRequested": true,
																"nodeType": "IndexAccess",
																"src": "12495:13:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "Assignment",
															"operator": "+=",
															"rightHandSide": {
																"hexValue": "31",
																"id": 728,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "12512:1:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_1_by_1",
																	"typeString": "int_const 1"
																},
																"value": "1"
															},
															"src": "12495:18:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"id": 730,
														"nodeType": "ExpressionStatement",
														"src": "12495:18:0"
													}
												]
											},
											{
												"expression": {
													"id": 736,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"baseExpression": {
															"id": 732,
															"name": "_owners",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 31,
															"src": "12533:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_mapping$_t_uint256_$_t_address_$",
																"typeString": "mapping(uint256 => address)"
															}
														},
														"id": 734,
														"indexExpression": {
															"id": 733,
															"name": "tokenId",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 674,
															"src": "12541:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"nodeType": "IndexAccess",
														"src": "12533:16:0",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"id": 735,
														"name": "to",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 672,
														"src": "12552:2:0",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "12533:21:0",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"id": 737,
												"nodeType": "ExpressionStatement",
												"src": "12533:21:0"
											},
											{
												"eventCall": {
													"arguments": [
														{
															"id": 739,
															"name": "from",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 670,
															"src": "12579:4:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 740,
															"name": "to",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 672,
															"src": "12585:2:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 741,
															"name": "tokenId",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 674,
															"src": "12589:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 738,
														"name": "Transfer",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 959,
														"src": "12570:8:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,address,uint256)"
														}
													},
													"id": 742,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "12570:27:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 743,
												"nodeType": "EmitStatement",
												"src": "12565:32:0"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 745,
															"name": "from",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 670,
															"src": "12628:4:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 746,
															"name": "to",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 672,
															"src": "12634:2:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 747,
															"name": "tokenId",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 674,
															"src": "12638:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														{
															"hexValue": "31",
															"id": 748,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "number",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "12647:1:0",
															"typeDescriptions": {
																"typeIdentifier": "t_rational_1_by_1",
																"typeString": "int_const 1"
															},
															"value": "1"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															{
																"typeIdentifier": "t_rational_1_by_1",
																"typeString": "int_const 1"
															}
														],
														"id": 744,
														"name": "_afterTokenTransfer",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 943,
														"src": "12608:19:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$_t_uint256_$returns$__$",
															"typeString": "function (address,address,uint256,uint256)"
														}
													},
													"id": 749,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "12608:41:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 750,
												"nodeType": "ExpressionStatement",
												"src": "12608:41:0"
											}
										]
									},
									"documentation": {
										"id": 668,
										"nodeType": "StructuredDocumentation",
										"src": "11105:313:0",
										"text": " @dev Transfers `tokenId` from `from` to `to`.\n  As opposed to {transferFrom}, this imposes no restrictions on msg.sender.\n Requirements:\n - `to` cannot be the zero address.\n - `tokenId` token must be owned by `from`.\n Emits a {Transfer} event."
									},
									"id": 752,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_transfer",
									"nameLocation": "11432:9:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 675,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 670,
												"mutability": "mutable",
												"name": "from",
												"nameLocation": "11459:4:0",
												"nodeType": "VariableDeclaration",
												"scope": 752,
												"src": "11451:12:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 669,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "11451:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 672,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "11481:2:0",
												"nodeType": "VariableDeclaration",
												"scope": 752,
												"src": "11473:10:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 671,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "11473:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 674,
												"mutability": "mutable",
												"name": "tokenId",
												"nameLocation": "11501:7:0",
												"nodeType": "VariableDeclaration",
												"scope": 752,
												"src": "11493:15:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 673,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "11493:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "11441:73:0"
									},
									"returnParameters": {
										"id": 676,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "11532:0:0"
									},
									"scope": 944,
									"src": "11423:1233:0",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 775,
										"nodeType": "Block",
										"src": "12832:107:0",
										"statements": [
											{
												"expression": {
													"id": 764,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"baseExpression": {
															"id": 760,
															"name": "_tokenApprovals",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 39,
															"src": "12842:15:0",
															"typeDescriptions": {
																"typeIdentifier": "t_mapping$_t_uint256_$_t_address_$",
																"typeString": "mapping(uint256 => address)"
															}
														},
														"id": 762,
														"indexExpression": {
															"id": 761,
															"name": "tokenId",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 757,
															"src": "12858:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"nodeType": "IndexAccess",
														"src": "12842:24:0",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"id": 763,
														"name": "to",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 755,
														"src": "12869:2:0",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "12842:29:0",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"id": 765,
												"nodeType": "ExpressionStatement",
												"src": "12842:29:0"
											},
											{
												"eventCall": {
													"arguments": [
														{
															"arguments": [
																{
																	"id": 769,
																	"name": "tokenId",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 757,
																	"src": "12910:7:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																],
																"expression": {
																	"id": 767,
																	"name": "ERC721",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 944,
																	"src": "12895:6:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_type$_t_contract$_ERC721_$944_$",
																		"typeString": "type(contract ERC721)"
																	}
																},
																"id": 768,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"memberLocation": "12902:7:0",
																"memberName": "ownerOf",
																"nodeType": "MemberAccess",
																"referencedDeclaration": 145,
																"src": "12895:14:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_internal_view$_t_uint256_$returns$_t_address_$",
																	"typeString": "function (uint256) view returns (address)"
																}
															},
															"id": 770,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "12895:23:0",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 771,
															"name": "to",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 755,
															"src": "12920:2:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 772,
															"name": "tokenId",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 757,
															"src": "12924:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 766,
														"name": "Approval",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 968,
														"src": "12886:8:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,address,uint256)"
														}
													},
													"id": 773,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "12886:46:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 774,
												"nodeType": "EmitStatement",
												"src": "12881:51:0"
											}
										]
									},
									"documentation": {
										"id": 753,
										"nodeType": "StructuredDocumentation",
										"src": "12662:101:0",
										"text": " @dev Approve `to` to operate on `tokenId`\n Emits an {Approval} event."
									},
									"id": 776,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_approve",
									"nameLocation": "12777:8:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 758,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 755,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "12794:2:0",
												"nodeType": "VariableDeclaration",
												"scope": 776,
												"src": "12786:10:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 754,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "12786:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 757,
												"mutability": "mutable",
												"name": "tokenId",
												"nameLocation": "12806:7:0",
												"nodeType": "VariableDeclaration",
												"scope": 776,
												"src": "12798:15:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 756,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "12798:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "12785:29:0"
									},
									"returnParameters": {
										"id": 759,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "12832:0:0"
									},
									"scope": 944,
									"src": "12768:171:0",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 807,
										"nodeType": "Block",
										"src": "13198:184:0",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															"id": 789,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 787,
																"name": "owner",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 779,
																"src": "13216:5:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "!=",
															"rightExpression": {
																"id": 788,
																"name": "operator",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 781,
																"src": "13225:8:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"src": "13216:17:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "4552433732313a20617070726f766520746f2063616c6c6572",
															"id": 790,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "13235:27:0",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_45fe4329685be5ecd250fd0e6a25aea0ea4d0e30fb6a73c118b95749e6d70d05",
																"typeString": "literal_string \"ERC721: approve to caller\""
															},
															"value": "ERC721: approve to caller"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_45fe4329685be5ecd250fd0e6a25aea0ea4d0e30fb6a73c118b95749e6d70d05",
																"typeString": "literal_string \"ERC721: approve to caller\""
															}
														],
														"id": 786,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "13208:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 791,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "13208:55:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 792,
												"nodeType": "ExpressionStatement",
												"src": "13208:55:0"
											},
											{
												"expression": {
													"id": 799,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"baseExpression": {
															"baseExpression": {
																"id": 793,
																"name": "_operatorApprovals",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 45,
																"src": "13273:18:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_mapping$_t_address_$_t_mapping$_t_address_$_t_bool_$_$",
																	"typeString": "mapping(address => mapping(address => bool))"
																}
															},
															"id": 796,
															"indexExpression": {
																"id": 794,
																"name": "owner",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 779,
																"src": "13292:5:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"isConstant": false,
															"isLValue": true,
															"isPure": false,
															"lValueRequested": false,
															"nodeType": "IndexAccess",
															"src": "13273:25:0",
															"typeDescriptions": {
																"typeIdentifier": "t_mapping$_t_address_$_t_bool_$",
																"typeString": "mapping(address => bool)"
															}
														},
														"id": 797,
														"indexExpression": {
															"id": 795,
															"name": "operator",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 781,
															"src": "13299:8:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"nodeType": "IndexAccess",
														"src": "13273:35:0",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"id": 798,
														"name": "approved",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 783,
														"src": "13311:8:0",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"src": "13273:46:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 800,
												"nodeType": "ExpressionStatement",
												"src": "13273:46:0"
											},
											{
												"eventCall": {
													"arguments": [
														{
															"id": 802,
															"name": "owner",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 779,
															"src": "13349:5:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 803,
															"name": "operator",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 781,
															"src": "13356:8:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 804,
															"name": "approved",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 783,
															"src": "13366:8:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														],
														"id": 801,
														"name": "ApprovalForAll",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 977,
														"src": "13334:14:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_address_$_t_bool_$returns$__$",
															"typeString": "function (address,address,bool)"
														}
													},
													"id": 805,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "13334:41:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 806,
												"nodeType": "EmitStatement",
												"src": "13329:46:0"
											}
										]
									},
									"documentation": {
										"id": 777,
										"nodeType": "StructuredDocumentation",
										"src": "12945:125:0",
										"text": " @dev Approve `operator` to operate on all of `owner` tokens\n Emits an {ApprovalForAll} event."
									},
									"id": 808,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_setApprovalForAll",
									"nameLocation": "13084:18:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 784,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 779,
												"mutability": "mutable",
												"name": "owner",
												"nameLocation": "13120:5:0",
												"nodeType": "VariableDeclaration",
												"scope": 808,
												"src": "13112:13:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 778,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "13112:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 781,
												"mutability": "mutable",
												"name": "operator",
												"nameLocation": "13143:8:0",
												"nodeType": "VariableDeclaration",
												"scope": 808,
												"src": "13135:16:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 780,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "13135:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 783,
												"mutability": "mutable",
												"name": "approved",
												"nameLocation": "13166:8:0",
												"nodeType": "VariableDeclaration",
												"scope": 808,
												"src": "13161:13:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 782,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "13161:4:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "13102:78:0"
									},
									"returnParameters": {
										"id": 785,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "13198:0:0"
									},
									"scope": 944,
									"src": "13075:307:0",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 821,
										"nodeType": "Block",
										"src": "13529:70:0",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"arguments": [
																{
																	"id": 816,
																	"name": "tokenId",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 811,
																	"src": "13555:7:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																],
																"id": 815,
																"name": "_exists",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 445,
																"src": "13547:7:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_internal_view$_t_uint256_$returns$_t_bool_$",
																	"typeString": "function (uint256) view returns (bool)"
																}
															},
															"id": 817,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "13547:16:0",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "4552433732313a20696e76616c696420746f6b656e204944",
															"id": 818,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "13565:26:0",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_b08d2b0fec7cc108ab049809a8beb42779d969a49299d0c317c907d9db22974f",
																"typeString": "literal_string \"ERC721: invalid token ID\""
															},
															"value": "ERC721: invalid token ID"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_b08d2b0fec7cc108ab049809a8beb42779d969a49299d0c317c907d9db22974f",
																"typeString": "literal_string \"ERC721: invalid token ID\""
															}
														],
														"id": 814,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "13539:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 819,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "13539:53:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 820,
												"nodeType": "ExpressionStatement",
												"src": "13539:53:0"
											}
										]
									},
									"documentation": {
										"id": 809,
										"nodeType": "StructuredDocumentation",
										"src": "13388:73:0",
										"text": " @dev Reverts if the `tokenId` has not been minted yet."
									},
									"id": 822,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_requireMinted",
									"nameLocation": "13475:14:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 812,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 811,
												"mutability": "mutable",
												"name": "tokenId",
												"nameLocation": "13498:7:0",
												"nodeType": "VariableDeclaration",
												"scope": 822,
												"src": "13490:15:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 810,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "13490:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "13489:17:0"
									},
									"returnParameters": {
										"id": 813,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "13529:0:0"
									},
									"scope": 944,
									"src": "13466:133:0",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 883,
										"nodeType": "Block",
										"src": "14306:676:0",
										"statements": [
											{
												"condition": {
													"arguments": [],
													"expression": {
														"argumentTypes": [],
														"expression": {
															"id": 836,
															"name": "to",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 827,
															"src": "14320:2:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"id": 837,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "14323:10:0",
														"memberName": "isContract",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 1123,
														"src": "14320:13:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_view$_t_address_$returns$_t_bool_$attached_to$_t_address_$",
															"typeString": "function (address) view returns (bool)"
														}
													},
													"id": 838,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "14320:15:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"falseBody": {
													"id": 881,
													"nodeType": "Block",
													"src": "14940:36:0",
													"statements": [
														{
															"expression": {
																"hexValue": "74727565",
																"id": 879,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "bool",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "14961:4:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																},
																"value": "true"
															},
															"functionReturnParameters": 835,
															"id": 880,
															"nodeType": "Return",
															"src": "14954:11:0"
														}
													]
												},
												"id": 882,
												"nodeType": "IfStatement",
												"src": "14316:660:0",
												"trueBody": {
													"id": 878,
													"nodeType": "Block",
													"src": "14337:597:0",
													"statements": [
														{
															"clauses": [
																{
																	"block": {
																		"id": 858,
																		"nodeType": "Block",
																		"src": "14451:91:0",
																		"statements": [
																			{
																				"expression": {
																					"commonType": {
																						"typeIdentifier": "t_bytes4",
																						"typeString": "bytes4"
																					},
																					"id": 856,
																					"isConstant": false,
																					"isLValue": false,
																					"isPure": false,
																					"lValueRequested": false,
																					"leftExpression": {
																						"id": 852,
																						"name": "retval",
																						"nodeType": "Identifier",
																						"overloadedDeclarations": [],
																						"referencedDeclaration": 850,
																						"src": "14476:6:0",
																						"typeDescriptions": {
																							"typeIdentifier": "t_bytes4",
																							"typeString": "bytes4"
																						}
																					},
																					"nodeType": "BinaryOperation",
																					"operator": "==",
																					"rightExpression": {
																						"expression": {
																							"expression": {
																								"id": 853,
																								"name": "IERC721Receiver",
																								"nodeType": "Identifier",
																								"overloadedDeclarations": [],
																								"referencedDeclaration": 1078,
																								"src": "14486:15:0",
																								"typeDescriptions": {
																									"typeIdentifier": "t_type$_t_contract$_IERC721Receiver_$1078_$",
																									"typeString": "type(contract IERC721Receiver)"
																								}
																							},
																							"id": 854,
																							"isConstant": false,
																							"isLValue": false,
																							"isPure": true,
																							"lValueRequested": false,
																							"memberLocation": "14502:16:0",
																							"memberName": "onERC721Received",
																							"nodeType": "MemberAccess",
																							"referencedDeclaration": 1077,
																							"src": "14486:32:0",
																							"typeDescriptions": {
																								"typeIdentifier": "t_function_declaration_nonpayable$_t_address_$_t_address_$_t_uint256_$_t_bytes_calldata_ptr_$returns$_t_bytes4_$",
																								"typeString": "function IERC721Receiver.onERC721Received(address,address,uint256,bytes calldata) returns (bytes4)"
																							}
																						},
																						"id": 855,
																						"isConstant": false,
																						"isLValue": false,
																						"isPure": true,
																						"lValueRequested": false,
																						"memberLocation": "14519:8:0",
																						"memberName": "selector",
																						"nodeType": "MemberAccess",
																						"src": "14486:41:0",
																						"typeDescriptions": {
																							"typeIdentifier": "t_bytes4",
																							"typeString": "bytes4"
																						}
																					},
																					"src": "14476:51:0",
																					"typeDescriptions": {
																						"typeIdentifier": "t_bool",
																						"typeString": "bool"
																					}
																				},
																				"functionReturnParameters": 835,
																				"id": 857,
																				"nodeType": "Return",
																				"src": "14469:58:0"
																			}
																		]
																	},
																	"errorName": "",
																	"id": 859,
																	"nodeType": "TryCatchClause",
																	"parameters": {
																		"id": 851,
																		"nodeType": "ParameterList",
																		"parameters": [
																			{
																				"constant": false,
																				"id": 850,
																				"mutability": "mutable",
																				"name": "retval",
																				"nameLocation": "14443:6:0",
																				"nodeType": "VariableDeclaration",
																				"scope": 859,
																				"src": "14436:13:0",
																				"stateVariable": false,
																				"storageLocation": "default",
																				"typeDescriptions": {
																					"typeIdentifier": "t_bytes4",
																					"typeString": "bytes4"
																				},
																				"typeName": {
																					"id": 849,
																					"name": "bytes4",
																					"nodeType": "ElementaryTypeName",
																					"src": "14436:6:0",
																					"typeDescriptions": {
																						"typeIdentifier": "t_bytes4",
																						"typeString": "bytes4"
																					}
																				},
																				"visibility": "internal"
																			}
																		],
																		"src": "14435:15:0"
																	},
																	"src": "14427:115:0"
																},
																{
																	"block": {
																		"id": 875,
																		"nodeType": "Block",
																		"src": "14571:353:0",
																		"statements": [
																			{
																				"condition": {
																					"commonType": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					},
																					"id": 866,
																					"isConstant": false,
																					"isLValue": false,
																					"isPure": false,
																					"lValueRequested": false,
																					"leftExpression": {
																						"expression": {
																							"id": 863,
																							"name": "reason",
																							"nodeType": "Identifier",
																							"overloadedDeclarations": [],
																							"referencedDeclaration": 861,
																							"src": "14593:6:0",
																							"typeDescriptions": {
																								"typeIdentifier": "t_bytes_memory_ptr",
																								"typeString": "bytes memory"
																							}
																						},
																						"id": 864,
																						"isConstant": false,
																						"isLValue": false,
																						"isPure": false,
																						"lValueRequested": false,
																						"memberLocation": "14600:6:0",
																						"memberName": "length",
																						"nodeType": "MemberAccess",
																						"src": "14593:13:0",
																						"typeDescriptions": {
																							"typeIdentifier": "t_uint256",
																							"typeString": "uint256"
																						}
																					},
																					"nodeType": "BinaryOperation",
																					"operator": "==",
																					"rightExpression": {
																						"hexValue": "30",
																						"id": 865,
																						"isConstant": false,
																						"isLValue": false,
																						"isPure": true,
																						"kind": "number",
																						"lValueRequested": false,
																						"nodeType": "Literal",
																						"src": "14610:1:0",
																						"typeDescriptions": {
																							"typeIdentifier": "t_rational_0_by_1",
																							"typeString": "int_const 0"
																						},
																						"value": "0"
																					},
																					"src": "14593:18:0",
																					"typeDescriptions": {
																						"typeIdentifier": "t_bool",
																						"typeString": "bool"
																					}
																				},
																				"falseBody": {
																					"id": 873,
																					"nodeType": "Block",
																					"src": "14720:190:0",
																					"statements": [
																						{
																							"AST": {
																								"nativeSrc": "14806:86:0",
																								"nodeType": "YulBlock",
																								"src": "14806:86:0",
																								"statements": [
																									{
																										"expression": {
																											"arguments": [
																												{
																													"arguments": [
																														{
																															"kind": "number",
																															"nativeSrc": "14843:2:0",
																															"nodeType": "YulLiteral",
																															"src": "14843:2:0",
																															"type": "",
																															"value": "32"
																														},
																														{
																															"name": "reason",
																															"nativeSrc": "14847:6:0",
																															"nodeType": "YulIdentifier",
																															"src": "14847:6:0"
																														}
																													],
																													"functionName": {
																														"name": "add",
																														"nativeSrc": "14839:3:0",
																														"nodeType": "YulIdentifier",
																														"src": "14839:3:0"
																													},
																													"nativeSrc": "14839:15:0",
																													"nodeType": "YulFunctionCall",
																													"src": "14839:15:0"
																												},
																												{
																													"arguments": [
																														{
																															"name": "reason",
																															"nativeSrc": "14862:6:0",
																															"nodeType": "YulIdentifier",
																															"src": "14862:6:0"
																														}
																													],
																													"functionName": {
																														"name": "mload",
																														"nativeSrc": "14856:5:0",
																														"nodeType": "YulIdentifier",
																														"src": "14856:5:0"
																													},
																													"nativeSrc": "14856:13:0",
																													"nodeType": "YulFunctionCall",
																													"src": "14856:13:0"
																												}
																											],
																											"functionName": {
																												"name": "revert",
																												"nativeSrc": "14832:6:0",
																												"nodeType": "YulIdentifier",
																												"src": "14832:6:0"
																											},
																											"nativeSrc": "14832:38:0",
																											"nodeType": "YulFunctionCall",
																											"src": "14832:38:0"
																										},
																										"nativeSrc": "14832:38:0",
																										"nodeType": "YulExpressionStatement",
																										"src": "14832:38:0"
																									}
																								]
																							},
																							"documentation": "@solidity memory-safe-assembly",
																							"evmVersion": "shanghai",
																							"externalReferences": [
																								{
																									"declaration": 861,
																									"isOffset": false,
																									"isSlot": false,
																									"src": "14847:6:0",
																									"valueSize": 1
																								},
																								{
																									"declaration": 861,
																									"isOffset": false,
																									"isSlot": false,
																									"src": "14862:6:0",
																									"valueSize": 1
																								}
																							],
																							"id": 872,
																							"nodeType": "InlineAssembly",
																							"src": "14797:95:0"
																						}
																					]
																				},
																				"id": 874,
																				"nodeType": "IfStatement",
																				"src": "14589:321:0",
																				"trueBody": {
																					"id": 871,
																					"nodeType": "Block",
																					"src": "14613:101:0",
																					"statements": [
																						{
																							"expression": {
																								"arguments": [
																									{
																										"hexValue": "4552433732313a207472616e7366657220746f206e6f6e20455243373231526563656976657220696d706c656d656e746572",
																										"id": 868,
																										"isConstant": false,
																										"isLValue": false,
																										"isPure": true,
																										"kind": "string",
																										"lValueRequested": false,
																										"nodeType": "Literal",
																										"src": "14642:52:0",
																										"typeDescriptions": {
																											"typeIdentifier": "t_stringliteral_1e766a06da43a53d0f4c380e06e5a342e14d5af1bf8501996c844905530ca84e",
																											"typeString": "literal_string \"ERC721: transfer to non ERC721Receiver implementer\""
																										},
																										"value": "ERC721: transfer to non ERC721Receiver implementer"
																									}
																								],
																								"expression": {
																									"argumentTypes": [
																										{
																											"typeIdentifier": "t_stringliteral_1e766a06da43a53d0f4c380e06e5a342e14d5af1bf8501996c844905530ca84e",
																											"typeString": "literal_string \"ERC721: transfer to non ERC721Receiver implementer\""
																										}
																									],
																									"id": 867,
																									"name": "revert",
																									"nodeType": "Identifier",
																									"overloadedDeclarations": [
																										4294967277,
																										4294967277
																									],
																									"referencedDeclaration": 4294967277,
																									"src": "14635:6:0",
																									"typeDescriptions": {
																										"typeIdentifier": "t_function_revert_pure$_t_string_memory_ptr_$returns$__$",
																										"typeString": "function (string memory) pure"
																									}
																								},
																								"id": 869,
																								"isConstant": false,
																								"isLValue": false,
																								"isPure": false,
																								"kind": "functionCall",
																								"lValueRequested": false,
																								"nameLocations": [],
																								"names": [],
																								"nodeType": "FunctionCall",
																								"src": "14635:60:0",
																								"tryCall": false,
																								"typeDescriptions": {
																									"typeIdentifier": "t_tuple$__$",
																									"typeString": "tuple()"
																								}
																							},
																							"id": 870,
																							"nodeType": "ExpressionStatement",
																							"src": "14635:60:0"
																						}
																					]
																				}
																			}
																		]
																	},
																	"errorName": "",
																	"id": 876,
																	"nodeType": "TryCatchClause",
																	"parameters": {
																		"id": 862,
																		"nodeType": "ParameterList",
																		"parameters": [
																			{
																				"constant": false,
																				"id": 861,
																				"mutability": "mutable",
																				"name": "reason",
																				"nameLocation": "14563:6:0",
																				"nodeType": "VariableDeclaration",
																				"scope": 876,
																				"src": "14550:19:0",
																				"stateVariable": false,
																				"storageLocation": "memory",
																				"typeDescriptions": {
																					"typeIdentifier": "t_bytes_memory_ptr",
																					"typeString": "bytes"
																				},
																				"typeName": {
																					"id": 860,
																					"name": "bytes",
																					"nodeType": "ElementaryTypeName",
																					"src": "14550:5:0",
																					"typeDescriptions": {
																						"typeIdentifier": "t_bytes_storage_ptr",
																						"typeString": "bytes"
																					}
																				},
																				"visibility": "internal"
																			}
																		],
																		"src": "14549:21:0"
																	},
																	"src": "14543:381:0"
																}
															],
															"externalCall": {
																"arguments": [
																	{
																		"arguments": [],
																		"expression": {
																			"argumentTypes": [],
																			"id": 843,
																			"name": "_msgSender",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1447,
																			"src": "14392:10:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
																				"typeString": "function () view returns (address)"
																			}
																		},
																		"id": 844,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"kind": "functionCall",
																		"lValueRequested": false,
																		"nameLocations": [],
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "14392:12:0",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	},
																	{
																		"id": 845,
																		"name": "from",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 825,
																		"src": "14406:4:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	},
																	{
																		"id": 846,
																		"name": "tokenId",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 829,
																		"src": "14412:7:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	{
																		"id": 847,
																		"name": "data",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 831,
																		"src": "14421:4:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bytes_memory_ptr",
																			"typeString": "bytes memory"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		},
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		},
																		{
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		},
																		{
																			"typeIdentifier": "t_bytes_memory_ptr",
																			"typeString": "bytes memory"
																		}
																	],
																	"expression": {
																		"arguments": [
																			{
																				"id": 840,
																				"name": "to",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 827,
																				"src": "14371:2:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_address",
																					"typeString": "address"
																				}
																			}
																		],
																		"expression": {
																			"argumentTypes": [
																				{
																					"typeIdentifier": "t_address",
																					"typeString": "address"
																				}
																			],
																			"id": 839,
																			"name": "IERC721Receiver",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1078,
																			"src": "14355:15:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_type$_t_contract$_IERC721Receiver_$1078_$",
																				"typeString": "type(contract IERC721Receiver)"
																			}
																		},
																		"id": 841,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"kind": "typeConversion",
																		"lValueRequested": false,
																		"nameLocations": [],
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "14355:19:0",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_contract$_IERC721Receiver_$1078",
																			"typeString": "contract IERC721Receiver"
																		}
																	},
																	"id": 842,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"memberLocation": "14375:16:0",
																	"memberName": "onERC721Received",
																	"nodeType": "MemberAccess",
																	"referencedDeclaration": 1077,
																	"src": "14355:36:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_address_$_t_uint256_$_t_bytes_memory_ptr_$returns$_t_bytes4_$",
																		"typeString": "function (address,address,uint256,bytes memory) external returns (bytes4)"
																	}
																},
																"id": 848,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "14355:71:0",
																"tryCall": true,
																"typeDescriptions": {
																	"typeIdentifier": "t_bytes4",
																	"typeString": "bytes4"
																}
															},
															"id": 877,
															"nodeType": "TryStatement",
															"src": "14351:573:0"
														}
													]
												}
											}
										]
									},
									"documentation": {
										"id": 823,
										"nodeType": "StructuredDocumentation",
										"src": "13605:541:0",
										"text": " @dev Internal function to invoke {IERC721Receiver-onERC721Received} on a target address.\n The call is not executed if the target address is not a contract.\n @param from address representing the previous owner of the given token ID\n @param to target address that will receive the tokens\n @param tokenId uint256 ID of the token to be transferred\n @param data bytes optional data to send along with the call\n @return bool whether the call correctly returned the expected magic value"
									},
									"id": 884,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_checkOnERC721Received",
									"nameLocation": "14160:22:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 832,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 825,
												"mutability": "mutable",
												"name": "from",
												"nameLocation": "14200:4:0",
												"nodeType": "VariableDeclaration",
												"scope": 884,
												"src": "14192:12:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 824,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "14192:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 827,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "14222:2:0",
												"nodeType": "VariableDeclaration",
												"scope": 884,
												"src": "14214:10:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 826,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "14214:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 829,
												"mutability": "mutable",
												"name": "tokenId",
												"nameLocation": "14242:7:0",
												"nodeType": "VariableDeclaration",
												"scope": 884,
												"src": "14234:15:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 828,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "14234:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 831,
												"mutability": "mutable",
												"name": "data",
												"nameLocation": "14272:4:0",
												"nodeType": "VariableDeclaration",
												"scope": 884,
												"src": "14259:17:0",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 830,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "14259:5:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "14182:100:0"
									},
									"returnParameters": {
										"id": 835,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 834,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 884,
												"src": "14300:4:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 833,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "14300:4:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "14299:6:0"
									},
									"scope": 944,
									"src": "14151:831:0",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "private"
								},
								{
									"body": {
										"id": 929,
										"nodeType": "Block",
										"src": "15856:238:0",
										"statements": [
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 898,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 896,
														"name": "batchSize",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 893,
														"src": "15870:9:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": ">",
													"rightExpression": {
														"hexValue": "31",
														"id": 897,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "15882:1:0",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_1_by_1",
															"typeString": "int_const 1"
														},
														"value": "1"
													},
													"src": "15870:13:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 928,
												"nodeType": "IfStatement",
												"src": "15866:222:0",
												"trueBody": {
													"id": 927,
													"nodeType": "Block",
													"src": "15885:203:0",
													"statements": [
														{
															"condition": {
																"commonType": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																},
																"id": 904,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"id": 899,
																	"name": "from",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 887,
																	"src": "15903:4:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": "!=",
																"rightExpression": {
																	"arguments": [
																		{
																			"hexValue": "30",
																			"id": 902,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "15919:1:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_0_by_1",
																				"typeString": "int_const 0"
																			},
																			"value": "0"
																		}
																	],
																	"expression": {
																		"argumentTypes": [
																			{
																				"typeIdentifier": "t_rational_0_by_1",
																				"typeString": "int_const 0"
																			}
																		],
																		"id": 901,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"lValueRequested": false,
																		"nodeType": "ElementaryTypeNameExpression",
																		"src": "15911:7:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_type$_t_address_$",
																			"typeString": "type(address)"
																		},
																		"typeName": {
																			"id": 900,
																			"name": "address",
																			"nodeType": "ElementaryTypeName",
																			"src": "15911:7:0",
																			"typeDescriptions": {}
																		}
																	},
																	"id": 903,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "typeConversion",
																	"lValueRequested": false,
																	"nameLocations": [],
																	"names": [],
																	"nodeType": "FunctionCall",
																	"src": "15911:10:0",
																	"tryCall": false,
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																"src": "15903:18:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																}
															},
															"id": 912,
															"nodeType": "IfStatement",
															"src": "15899:85:0",
															"trueBody": {
																"id": 911,
																"nodeType": "Block",
																"src": "15923:61:0",
																"statements": [
																	{
																		"expression": {
																			"id": 909,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"leftHandSide": {
																				"baseExpression": {
																					"id": 905,
																					"name": "_balances",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 35,
																					"src": "15941:9:0",
																					"typeDescriptions": {
																						"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
																						"typeString": "mapping(address => uint256)"
																					}
																				},
																				"id": 907,
																				"indexExpression": {
																					"id": 906,
																					"name": "from",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 887,
																					"src": "15951:4:0",
																					"typeDescriptions": {
																						"typeIdentifier": "t_address",
																						"typeString": "address"
																					}
																				},
																				"isConstant": false,
																				"isLValue": true,
																				"isPure": false,
																				"lValueRequested": true,
																				"nodeType": "IndexAccess",
																				"src": "15941:15:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"nodeType": "Assignment",
																			"operator": "-=",
																			"rightHandSide": {
																				"id": 908,
																				"name": "batchSize",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 893,
																				"src": "15960:9:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"src": "15941:28:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"id": 910,
																		"nodeType": "ExpressionStatement",
																		"src": "15941:28:0"
																	}
																]
															}
														},
														{
															"condition": {
																"commonType": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																},
																"id": 918,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"id": 913,
																	"name": "to",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 889,
																	"src": "16001:2:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": "!=",
																"rightExpression": {
																	"arguments": [
																		{
																			"hexValue": "30",
																			"id": 916,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "16015:1:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_0_by_1",
																				"typeString": "int_const 0"
																			},
																			"value": "0"
																		}
																	],
																	"expression": {
																		"argumentTypes": [
																			{
																				"typeIdentifier": "t_rational_0_by_1",
																				"typeString": "int_const 0"
																			}
																		],
																		"id": 915,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"lValueRequested": false,
																		"nodeType": "ElementaryTypeNameExpression",
																		"src": "16007:7:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_type$_t_address_$",
																			"typeString": "type(address)"
																		},
																		"typeName": {
																			"id": 914,
																			"name": "address",
																			"nodeType": "ElementaryTypeName",
																			"src": "16007:7:0",
																			"typeDescriptions": {}
																		}
																	},
																	"id": 917,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "typeConversion",
																	"lValueRequested": false,
																	"nameLocations": [],
																	"names": [],
																	"nodeType": "FunctionCall",
																	"src": "16007:10:0",
																	"tryCall": false,
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																"src": "16001:16:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																}
															},
															"id": 926,
															"nodeType": "IfStatement",
															"src": "15997:81:0",
															"trueBody": {
																"id": 925,
																"nodeType": "Block",
																"src": "16019:59:0",
																"statements": [
																	{
																		"expression": {
																			"id": 923,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"leftHandSide": {
																				"baseExpression": {
																					"id": 919,
																					"name": "_balances",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 35,
																					"src": "16037:9:0",
																					"typeDescriptions": {
																						"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
																						"typeString": "mapping(address => uint256)"
																					}
																				},
																				"id": 921,
																				"indexExpression": {
																					"id": 920,
																					"name": "to",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 889,
																					"src": "16047:2:0",
																					"typeDescriptions": {
																						"typeIdentifier": "t_address",
																						"typeString": "address"
																					}
																				},
																				"isConstant": false,
																				"isLValue": true,
																				"isPure": false,
																				"lValueRequested": true,
																				"nodeType": "IndexAccess",
																				"src": "16037:13:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"nodeType": "Assignment",
																			"operator": "+=",
																			"rightHandSide": {
																				"id": 922,
																				"name": "batchSize",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 893,
																				"src": "16054:9:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"src": "16037:26:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"id": 924,
																		"nodeType": "ExpressionStatement",
																		"src": "16037:26:0"
																	}
																]
															}
														}
													]
												}
											}
										]
									},
									"documentation": {
										"id": 885,
										"nodeType": "StructuredDocumentation",
										"src": "14988:705:0",
										"text": " @dev Hook that is called before any token transfer. This includes minting and burning. If {ERC721Consecutive} is\n used, the hook may be called as part of a consecutive (batch) mint, as indicated by `batchSize` greater than 1.\n Calling conditions:\n - When `from` and `to` are both non-zero, ``from``'s tokens will be transferred to `to`.\n - When `from` is zero, the tokens will be minted for `to`.\n - When `to` is zero, ``from``'s tokens will be burned.\n - `from` and `to` are never both zero.\n - `batchSize` is non-zero.\n To learn more about hooks, head to xref:ROOT:extending-contracts.adoc#using-hooks[Using Hooks]."
									},
									"id": 930,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_beforeTokenTransfer",
									"nameLocation": "15707:20:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 894,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 887,
												"mutability": "mutable",
												"name": "from",
												"nameLocation": "15745:4:0",
												"nodeType": "VariableDeclaration",
												"scope": 930,
												"src": "15737:12:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 886,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "15737:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 889,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "15767:2:0",
												"nodeType": "VariableDeclaration",
												"scope": 930,
												"src": "15759:10:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 888,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "15759:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 891,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 930,
												"src": "15779:7:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 890,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "15779:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 893,
												"mutability": "mutable",
												"name": "batchSize",
												"nameLocation": "15823:9:0",
												"nodeType": "VariableDeclaration",
												"scope": 930,
												"src": "15815:17:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 892,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "15815:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "15727:111:0"
									},
									"returnParameters": {
										"id": 895,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "15856:0:0"
									},
									"scope": 944,
									"src": "15698:396:0",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 942,
										"nodeType": "Block",
										"src": "16951:2:0",
										"statements": []
									},
									"documentation": {
										"id": 931,
										"nodeType": "StructuredDocumentation",
										"src": "16100:695:0",
										"text": " @dev Hook that is called after any token transfer. This includes minting and burning. If {ERC721Consecutive} is\n used, the hook may be called as part of a consecutive (batch) mint, as indicated by `batchSize` greater than 1.\n Calling conditions:\n - When `from` and `to` are both non-zero, ``from``'s tokens were transferred to `to`.\n - When `from` is zero, the tokens were minted for `to`.\n - When `to` is zero, ``from``'s tokens were burned.\n - `from` and `to` are never both zero.\n - `batchSize` is non-zero.\n To learn more about hooks, head to xref:ROOT:extending-contracts.adoc#using-hooks[Using Hooks]."
									},
									"id": 943,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_afterTokenTransfer",
									"nameLocation": "16809:19:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 940,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 933,
												"mutability": "mutable",
												"name": "from",
												"nameLocation": "16846:4:0",
												"nodeType": "VariableDeclaration",
												"scope": 943,
												"src": "16838:12:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 932,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "16838:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 935,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "16868:2:0",
												"nodeType": "VariableDeclaration",
												"scope": 943,
												"src": "16860:10:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 934,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "16860:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 937,
												"mutability": "mutable",
												"name": "firstTokenId",
												"nameLocation": "16888:12:0",
												"nodeType": "VariableDeclaration",
												"scope": 943,
												"src": "16880:20:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 936,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "16880:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 939,
												"mutability": "mutable",
												"name": "batchSize",
												"nameLocation": "16918:9:0",
												"nodeType": "VariableDeclaration",
												"scope": 943,
												"src": "16910:17:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 938,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "16910:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "16828:105:0"
									},
									"returnParameters": {
										"id": 941,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "16951:0:0"
									},
									"scope": 944,
									"src": "16800:153:0",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "internal"
								}
							],
							"scope": 945,
							"src": "628:16327:0",
							"usedErrors": [],
							"usedEvents": [
								959,
								968,
								977
							]
						}
					],
					"src": "107:16849:0"
				},
				"id": 0
			},
			"@openzeppelin/contracts/token/ERC721/IERC721.sol": {
				"ast": {
					"absolutePath": "@openzeppelin/contracts/token/ERC721/IERC721.sol",
					"exportedSymbols": {
						"IERC165": [
							1742
						],
						"IERC721": [
							1060
						]
					},
					"id": 1061,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 946,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".0"
							],
							"nodeType": "PragmaDirective",
							"src": "108:23:1"
						},
						{
							"absolutePath": "@openzeppelin/contracts/utils/introspection/IERC165.sol",
							"file": "../../utils/introspection/IERC165.sol",
							"id": 947,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 1061,
							"sourceUnit": 1743,
							"src": "133:47:1",
							"symbolAliases": [],
							"unitAlias": ""
						},
						{
							"abstract": false,
							"baseContracts": [
								{
									"baseName": {
										"id": 949,
										"name": "IERC165",
										"nameLocations": [
											"271:7:1"
										],
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 1742,
										"src": "271:7:1"
									},
									"id": 950,
									"nodeType": "InheritanceSpecifier",
									"src": "271:7:1"
								}
							],
							"canonicalName": "IERC721",
							"contractDependencies": [],
							"contractKind": "interface",
							"documentation": {
								"id": 948,
								"nodeType": "StructuredDocumentation",
								"src": "182:67:1",
								"text": " @dev Required interface of an ERC721 compliant contract."
							},
							"fullyImplemented": false,
							"id": 1060,
							"linearizedBaseContracts": [
								1060,
								1742
							],
							"name": "IERC721",
							"nameLocation": "260:7:1",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"anonymous": false,
									"documentation": {
										"id": 951,
										"nodeType": "StructuredDocumentation",
										"src": "285:88:1",
										"text": " @dev Emitted when `tokenId` token is transferred from `from` to `to`."
									},
									"eventSelector": "ddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef",
									"id": 959,
									"name": "Transfer",
									"nameLocation": "384:8:1",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 958,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 953,
												"indexed": true,
												"mutability": "mutable",
												"name": "from",
												"nameLocation": "409:4:1",
												"nodeType": "VariableDeclaration",
												"scope": 959,
												"src": "393:20:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 952,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "393:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 955,
												"indexed": true,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "431:2:1",
												"nodeType": "VariableDeclaration",
												"scope": 959,
												"src": "415:18:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 954,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "415:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 957,
												"indexed": true,
												"mutability": "mutable",
												"name": "tokenId",
												"nameLocation": "451:7:1",
												"nodeType": "VariableDeclaration",
												"scope": 959,
												"src": "435:23:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 956,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "435:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "392:67:1"
									},
									"src": "378:82:1"
								},
								{
									"anonymous": false,
									"documentation": {
										"id": 960,
										"nodeType": "StructuredDocumentation",
										"src": "466:94:1",
										"text": " @dev Emitted when `owner` enables `approved` to manage the `tokenId` token."
									},
									"eventSelector": "8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b925",
									"id": 968,
									"name": "Approval",
									"nameLocation": "571:8:1",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 967,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 962,
												"indexed": true,
												"mutability": "mutable",
												"name": "owner",
												"nameLocation": "596:5:1",
												"nodeType": "VariableDeclaration",
												"scope": 968,
												"src": "580:21:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 961,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "580:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 964,
												"indexed": true,
												"mutability": "mutable",
												"name": "approved",
												"nameLocation": "619:8:1",
												"nodeType": "VariableDeclaration",
												"scope": 968,
												"src": "603:24:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 963,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "603:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 966,
												"indexed": true,
												"mutability": "mutable",
												"name": "tokenId",
												"nameLocation": "645:7:1",
												"nodeType": "VariableDeclaration",
												"scope": 968,
												"src": "629:23:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 965,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "629:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "579:74:1"
									},
									"src": "565:89:1"
								},
								{
									"anonymous": false,
									"documentation": {
										"id": 969,
										"nodeType": "StructuredDocumentation",
										"src": "660:117:1",
										"text": " @dev Emitted when `owner` enables or disables (`approved`) `operator` to manage all of its assets."
									},
									"eventSelector": "17307eab39ab6107e8899845ad3d59bd9653f200f220920489ca2b5937696c31",
									"id": 977,
									"name": "ApprovalForAll",
									"nameLocation": "788:14:1",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 976,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 971,
												"indexed": true,
												"mutability": "mutable",
												"name": "owner",
												"nameLocation": "819:5:1",
												"nodeType": "VariableDeclaration",
												"scope": 977,
												"src": "803:21:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 970,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "803:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 973,
												"indexed": true,
												"mutability": "mutable",
												"name": "operator",
												"nameLocation": "842:8:1",
												"nodeType": "VariableDeclaration",
												"scope": 977,
												"src": "826:24:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 972,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "826:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 975,
												"indexed": false,
												"mutability": "mutable",
												"name": "approved",
												"nameLocation": "857:8:1",
												"nodeType": "VariableDeclaration",
												"scope": 977,
												"src": "852:13:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 974,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "852:4:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "802:64:1"
									},
									"src": "782:85:1"
								},
								{
									"documentation": {
										"id": 978,
										"nodeType": "StructuredDocumentation",
										"src": "873:76:1",
										"text": " @dev Returns the number of tokens in ``owner``'s account."
									},
									"functionSelector": "70a08231",
									"id": 985,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "balanceOf",
									"nameLocation": "963:9:1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 981,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 980,
												"mutability": "mutable",
												"name": "owner",
												"nameLocation": "981:5:1",
												"nodeType": "VariableDeclaration",
												"scope": 985,
												"src": "973:13:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 979,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "973:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "972:15:1"
									},
									"returnParameters": {
										"id": 984,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 983,
												"mutability": "mutable",
												"name": "balance",
												"nameLocation": "1019:7:1",
												"nodeType": "VariableDeclaration",
												"scope": 985,
												"src": "1011:15:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 982,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1011:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1010:17:1"
									},
									"scope": 1060,
									"src": "954:74:1",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 986,
										"nodeType": "StructuredDocumentation",
										"src": "1034:131:1",
										"text": " @dev Returns the owner of the `tokenId` token.\n Requirements:\n - `tokenId` must exist."
									},
									"functionSelector": "6352211e",
									"id": 993,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "ownerOf",
									"nameLocation": "1179:7:1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 989,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 988,
												"mutability": "mutable",
												"name": "tokenId",
												"nameLocation": "1195:7:1",
												"nodeType": "VariableDeclaration",
												"scope": 993,
												"src": "1187:15:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 987,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1187:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1186:17:1"
									},
									"returnParameters": {
										"id": 992,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 991,
												"mutability": "mutable",
												"name": "owner",
												"nameLocation": "1235:5:1",
												"nodeType": "VariableDeclaration",
												"scope": 993,
												"src": "1227:13:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 990,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1227:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1226:15:1"
									},
									"scope": 1060,
									"src": "1170:72:1",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 994,
										"nodeType": "StructuredDocumentation",
										"src": "1248:556:1",
										"text": " @dev Safely transfers `tokenId` token from `from` to `to`.\n Requirements:\n - `from` cannot be the zero address.\n - `to` cannot be the zero address.\n - `tokenId` token must exist and be owned by `from`.\n - If the caller is not `from`, it must be approved to move this token by either {approve} or {setApprovalForAll}.\n - If `to` refers to a smart contract, it must implement {IERC721Receiver-onERC721Received}, which is called upon a safe transfer.\n Emits a {Transfer} event."
									},
									"functionSelector": "b88d4fde",
									"id": 1005,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "safeTransferFrom",
									"nameLocation": "1818:16:1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1003,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 996,
												"mutability": "mutable",
												"name": "from",
												"nameLocation": "1852:4:1",
												"nodeType": "VariableDeclaration",
												"scope": 1005,
												"src": "1844:12:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 995,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1844:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 998,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "1874:2:1",
												"nodeType": "VariableDeclaration",
												"scope": 1005,
												"src": "1866:10:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 997,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1866:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1000,
												"mutability": "mutable",
												"name": "tokenId",
												"nameLocation": "1894:7:1",
												"nodeType": "VariableDeclaration",
												"scope": 1005,
												"src": "1886:15:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 999,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1886:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1002,
												"mutability": "mutable",
												"name": "data",
												"nameLocation": "1926:4:1",
												"nodeType": "VariableDeclaration",
												"scope": 1005,
												"src": "1911:19:1",
												"stateVariable": false,
												"storageLocation": "calldata",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_calldata_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 1001,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "1911:5:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1834:102:1"
									},
									"returnParameters": {
										"id": 1004,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1945:0:1"
									},
									"scope": 1060,
									"src": "1809:137:1",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 1006,
										"nodeType": "StructuredDocumentation",
										"src": "1952:687:1",
										"text": " @dev Safely transfers `tokenId` token from `from` to `to`, checking first that contract recipients\n are aware of the ERC721 protocol to prevent tokens from being forever locked.\n Requirements:\n - `from` cannot be the zero address.\n - `to` cannot be the zero address.\n - `tokenId` token must exist and be owned by `from`.\n - If the caller is not `from`, it must have been allowed to move this token by either {approve} or {setApprovalForAll}.\n - If `to` refers to a smart contract, it must implement {IERC721Receiver-onERC721Received}, which is called upon a safe transfer.\n Emits a {Transfer} event."
									},
									"functionSelector": "42842e0e",
									"id": 1015,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "safeTransferFrom",
									"nameLocation": "2653:16:1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1013,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1008,
												"mutability": "mutable",
												"name": "from",
												"nameLocation": "2687:4:1",
												"nodeType": "VariableDeclaration",
												"scope": 1015,
												"src": "2679:12:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1007,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2679:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1010,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "2709:2:1",
												"nodeType": "VariableDeclaration",
												"scope": 1015,
												"src": "2701:10:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1009,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2701:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1012,
												"mutability": "mutable",
												"name": "tokenId",
												"nameLocation": "2729:7:1",
												"nodeType": "VariableDeclaration",
												"scope": 1015,
												"src": "2721:15:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1011,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2721:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2669:73:1"
									},
									"returnParameters": {
										"id": 1014,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2751:0:1"
									},
									"scope": 1060,
									"src": "2644:108:1",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 1016,
										"nodeType": "StructuredDocumentation",
										"src": "2758:732:1",
										"text": " @dev Transfers `tokenId` token from `from` to `to`.\n WARNING: Note that the caller is responsible to confirm that the recipient is capable of receiving ERC721\n or else they may be permanently lost. Usage of {safeTransferFrom} prevents loss, though the caller must\n understand this adds an external call which potentially creates a reentrancy vulnerability.\n Requirements:\n - `from` cannot be the zero address.\n - `to` cannot be the zero address.\n - `tokenId` token must be owned by `from`.\n - If the caller is not `from`, it must be approved to move this token by either {approve} or {setApprovalForAll}.\n Emits a {Transfer} event."
									},
									"functionSelector": "23b872dd",
									"id": 1025,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "transferFrom",
									"nameLocation": "3504:12:1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1023,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1018,
												"mutability": "mutable",
												"name": "from",
												"nameLocation": "3534:4:1",
												"nodeType": "VariableDeclaration",
												"scope": 1025,
												"src": "3526:12:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1017,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "3526:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1020,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "3556:2:1",
												"nodeType": "VariableDeclaration",
												"scope": 1025,
												"src": "3548:10:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1019,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "3548:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1022,
												"mutability": "mutable",
												"name": "tokenId",
												"nameLocation": "3576:7:1",
												"nodeType": "VariableDeclaration",
												"scope": 1025,
												"src": "3568:15:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1021,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3568:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3516:73:1"
									},
									"returnParameters": {
										"id": 1024,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "3598:0:1"
									},
									"scope": 1060,
									"src": "3495:104:1",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 1026,
										"nodeType": "StructuredDocumentation",
										"src": "3605:452:1",
										"text": " @dev Gives permission to `to` to transfer `tokenId` token to another account.\n The approval is cleared when the token is transferred.\n Only a single account can be approved at a time, so approving the zero address clears previous approvals.\n Requirements:\n - The caller must own the token or be an approved operator.\n - `tokenId` must exist.\n Emits an {Approval} event."
									},
									"functionSelector": "095ea7b3",
									"id": 1033,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "approve",
									"nameLocation": "4071:7:1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1031,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1028,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "4087:2:1",
												"nodeType": "VariableDeclaration",
												"scope": 1033,
												"src": "4079:10:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1027,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "4079:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1030,
												"mutability": "mutable",
												"name": "tokenId",
												"nameLocation": "4099:7:1",
												"nodeType": "VariableDeclaration",
												"scope": 1033,
												"src": "4091:15:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1029,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "4091:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4078:29:1"
									},
									"returnParameters": {
										"id": 1032,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "4116:0:1"
									},
									"scope": 1060,
									"src": "4062:55:1",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 1034,
										"nodeType": "StructuredDocumentation",
										"src": "4123:309:1",
										"text": " @dev Approve or remove `operator` as an operator for the caller.\n Operators can call {transferFrom} or {safeTransferFrom} for any token owned by the caller.\n Requirements:\n - The `operator` cannot be the caller.\n Emits an {ApprovalForAll} event."
									},
									"functionSelector": "a22cb465",
									"id": 1041,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "setApprovalForAll",
									"nameLocation": "4446:17:1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1039,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1036,
												"mutability": "mutable",
												"name": "operator",
												"nameLocation": "4472:8:1",
												"nodeType": "VariableDeclaration",
												"scope": 1041,
												"src": "4464:16:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1035,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "4464:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1038,
												"mutability": "mutable",
												"name": "_approved",
												"nameLocation": "4487:9:1",
												"nodeType": "VariableDeclaration",
												"scope": 1041,
												"src": "4482:14:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 1037,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "4482:4:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4463:34:1"
									},
									"returnParameters": {
										"id": 1040,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "4506:0:1"
									},
									"scope": 1060,
									"src": "4437:70:1",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 1042,
										"nodeType": "StructuredDocumentation",
										"src": "4513:139:1",
										"text": " @dev Returns the account approved for `tokenId` token.\n Requirements:\n - `tokenId` must exist."
									},
									"functionSelector": "081812fc",
									"id": 1049,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "getApproved",
									"nameLocation": "4666:11:1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1045,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1044,
												"mutability": "mutable",
												"name": "tokenId",
												"nameLocation": "4686:7:1",
												"nodeType": "VariableDeclaration",
												"scope": 1049,
												"src": "4678:15:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1043,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "4678:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4677:17:1"
									},
									"returnParameters": {
										"id": 1048,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1047,
												"mutability": "mutable",
												"name": "operator",
												"nameLocation": "4726:8:1",
												"nodeType": "VariableDeclaration",
												"scope": 1049,
												"src": "4718:16:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1046,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "4718:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4717:18:1"
									},
									"scope": 1060,
									"src": "4657:79:1",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 1050,
										"nodeType": "StructuredDocumentation",
										"src": "4742:138:1",
										"text": " @dev Returns if the `operator` is allowed to manage all of the assets of `owner`.\n See {setApprovalForAll}"
									},
									"functionSelector": "e985e9c5",
									"id": 1059,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "isApprovedForAll",
									"nameLocation": "4894:16:1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1055,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1052,
												"mutability": "mutable",
												"name": "owner",
												"nameLocation": "4919:5:1",
												"nodeType": "VariableDeclaration",
												"scope": 1059,
												"src": "4911:13:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1051,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "4911:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1054,
												"mutability": "mutable",
												"name": "operator",
												"nameLocation": "4934:8:1",
												"nodeType": "VariableDeclaration",
												"scope": 1059,
												"src": "4926:16:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1053,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "4926:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4910:33:1"
									},
									"returnParameters": {
										"id": 1058,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1057,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1059,
												"src": "4967:4:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 1056,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "4967:4:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4966:6:1"
									},
									"scope": 1060,
									"src": "4885:88:1",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								}
							],
							"scope": 1061,
							"src": "250:4725:1",
							"usedErrors": [],
							"usedEvents": [
								959,
								968,
								977
							]
						}
					],
					"src": "108:4868:1"
				},
				"id": 1
			},
			"@openzeppelin/contracts/token/ERC721/IERC721Receiver.sol": {
				"ast": {
					"absolutePath": "@openzeppelin/contracts/token/ERC721/IERC721Receiver.sol",
					"exportedSymbols": {
						"IERC721Receiver": [
							1078
						]
					},
					"id": 1079,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 1062,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".0"
							],
							"nodeType": "PragmaDirective",
							"src": "116:23:2"
						},
						{
							"abstract": false,
							"baseContracts": [],
							"canonicalName": "IERC721Receiver",
							"contractDependencies": [],
							"contractKind": "interface",
							"documentation": {
								"id": 1063,
								"nodeType": "StructuredDocumentation",
								"src": "141:152:2",
								"text": " @title ERC721 token receiver interface\n @dev Interface for any contract that wants to support safeTransfers\n from ERC721 asset contracts."
							},
							"fullyImplemented": false,
							"id": 1078,
							"linearizedBaseContracts": [
								1078
							],
							"name": "IERC721Receiver",
							"nameLocation": "304:15:2",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"documentation": {
										"id": 1064,
										"nodeType": "StructuredDocumentation",
										"src": "326:493:2",
										"text": " @dev Whenever an {IERC721} `tokenId` token is transferred to this contract via {IERC721-safeTransferFrom}\n by `operator` from `from`, this function is called.\n It must return its Solidity selector to confirm the token transfer.\n If any other value is returned or the interface is not implemented by the recipient, the transfer will be reverted.\n The selector can be obtained in Solidity with `IERC721Receiver.onERC721Received.selector`."
									},
									"functionSelector": "150b7a02",
									"id": 1077,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "onERC721Received",
									"nameLocation": "833:16:2",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1073,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1066,
												"mutability": "mutable",
												"name": "operator",
												"nameLocation": "867:8:2",
												"nodeType": "VariableDeclaration",
												"scope": 1077,
												"src": "859:16:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1065,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "859:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1068,
												"mutability": "mutable",
												"name": "from",
												"nameLocation": "893:4:2",
												"nodeType": "VariableDeclaration",
												"scope": 1077,
												"src": "885:12:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1067,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "885:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1070,
												"mutability": "mutable",
												"name": "tokenId",
												"nameLocation": "915:7:2",
												"nodeType": "VariableDeclaration",
												"scope": 1077,
												"src": "907:15:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1069,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "907:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1072,
												"mutability": "mutable",
												"name": "data",
												"nameLocation": "947:4:2",
												"nodeType": "VariableDeclaration",
												"scope": 1077,
												"src": "932:19:2",
												"stateVariable": false,
												"storageLocation": "calldata",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_calldata_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 1071,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "932:5:2",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "849:108:2"
									},
									"returnParameters": {
										"id": 1076,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1075,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1077,
												"src": "976:6:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes4",
													"typeString": "bytes4"
												},
												"typeName": {
													"id": 1074,
													"name": "bytes4",
													"nodeType": "ElementaryTypeName",
													"src": "976:6:2",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes4",
														"typeString": "bytes4"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "975:8:2"
									},
									"scope": 1078,
									"src": "824:160:2",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								}
							],
							"scope": 1079,
							"src": "294:692:2",
							"usedErrors": [],
							"usedEvents": []
						}
					],
					"src": "116:871:2"
				},
				"id": 2
			},
			"@openzeppelin/contracts/token/ERC721/extensions/IERC721Metadata.sol": {
				"ast": {
					"absolutePath": "@openzeppelin/contracts/token/ERC721/extensions/IERC721Metadata.sol",
					"exportedSymbols": {
						"IERC165": [
							1742
						],
						"IERC721": [
							1060
						],
						"IERC721Metadata": [
							1105
						]
					},
					"id": 1106,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 1080,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".0"
							],
							"nodeType": "PragmaDirective",
							"src": "112:23:3"
						},
						{
							"absolutePath": "@openzeppelin/contracts/token/ERC721/IERC721.sol",
							"file": "../IERC721.sol",
							"id": 1081,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 1106,
							"sourceUnit": 1061,
							"src": "137:24:3",
							"symbolAliases": [],
							"unitAlias": ""
						},
						{
							"abstract": false,
							"baseContracts": [
								{
									"baseName": {
										"id": 1083,
										"name": "IERC721",
										"nameLocations": [
											"326:7:3"
										],
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 1060,
										"src": "326:7:3"
									},
									"id": 1084,
									"nodeType": "InheritanceSpecifier",
									"src": "326:7:3"
								}
							],
							"canonicalName": "IERC721Metadata",
							"contractDependencies": [],
							"contractKind": "interface",
							"documentation": {
								"id": 1082,
								"nodeType": "StructuredDocumentation",
								"src": "163:133:3",
								"text": " @title ERC-721 Non-Fungible Token Standard, optional metadata extension\n @dev See https://eips.ethereum.org/EIPS/eip-721"
							},
							"fullyImplemented": false,
							"id": 1105,
							"linearizedBaseContracts": [
								1105,
								1060,
								1742
							],
							"name": "IERC721Metadata",
							"nameLocation": "307:15:3",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"documentation": {
										"id": 1085,
										"nodeType": "StructuredDocumentation",
										"src": "340:58:3",
										"text": " @dev Returns the token collection name."
									},
									"functionSelector": "06fdde03",
									"id": 1090,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "name",
									"nameLocation": "412:4:3",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1086,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "416:2:3"
									},
									"returnParameters": {
										"id": 1089,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1088,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1090,
												"src": "442:13:3",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 1087,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "442:6:3",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "441:15:3"
									},
									"scope": 1105,
									"src": "403:54:3",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 1091,
										"nodeType": "StructuredDocumentation",
										"src": "463:60:3",
										"text": " @dev Returns the token collection symbol."
									},
									"functionSelector": "95d89b41",
									"id": 1096,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "symbol",
									"nameLocation": "537:6:3",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1092,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "543:2:3"
									},
									"returnParameters": {
										"id": 1095,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1094,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1096,
												"src": "569:13:3",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 1093,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "569:6:3",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "568:15:3"
									},
									"scope": 1105,
									"src": "528:56:3",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 1097,
										"nodeType": "StructuredDocumentation",
										"src": "590:90:3",
										"text": " @dev Returns the Uniform Resource Identifier (URI) for `tokenId` token."
									},
									"functionSelector": "c87b56dd",
									"id": 1104,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "tokenURI",
									"nameLocation": "694:8:3",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1100,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1099,
												"mutability": "mutable",
												"name": "tokenId",
												"nameLocation": "711:7:3",
												"nodeType": "VariableDeclaration",
												"scope": 1104,
												"src": "703:15:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1098,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "703:7:3",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "702:17:3"
									},
									"returnParameters": {
										"id": 1103,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1102,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1104,
												"src": "743:13:3",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 1101,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "743:6:3",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "742:15:3"
									},
									"scope": 1105,
									"src": "685:73:3",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								}
							],
							"scope": 1106,
							"src": "297:463:3",
							"usedErrors": [],
							"usedEvents": [
								959,
								968,
								977
							]
						}
					],
					"src": "112:649:3"
				},
				"id": 3
			},
			"@openzeppelin/contracts/utils/Address.sol": {
				"ast": {
					"absolutePath": "@openzeppelin/contracts/utils/Address.sol",
					"exportedSymbols": {
						"Address": [
							1435
						]
					},
					"id": 1436,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 1107,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".1"
							],
							"nodeType": "PragmaDirective",
							"src": "101:23:4"
						},
						{
							"abstract": false,
							"baseContracts": [],
							"canonicalName": "Address",
							"contractDependencies": [],
							"contractKind": "library",
							"documentation": {
								"id": 1108,
								"nodeType": "StructuredDocumentation",
								"src": "126:67:4",
								"text": " @dev Collection of functions related to the address type"
							},
							"fullyImplemented": true,
							"id": 1435,
							"linearizedBaseContracts": [
								1435
							],
							"name": "Address",
							"nameLocation": "202:7:4",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"body": {
										"id": 1122,
										"nodeType": "Block",
										"src": "1241:254:4",
										"statements": [
											{
												"expression": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 1120,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"expression": {
															"expression": {
																"id": 1116,
																"name": "account",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1111,
																"src": "1465:7:4",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"id": 1117,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "1473:4:4",
															"memberName": "code",
															"nodeType": "MemberAccess",
															"src": "1465:12:4",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														},
														"id": 1118,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "1478:6:4",
														"memberName": "length",
														"nodeType": "MemberAccess",
														"src": "1465:19:4",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": ">",
													"rightExpression": {
														"hexValue": "30",
														"id": 1119,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "1487:1:4",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_0_by_1",
															"typeString": "int_const 0"
														},
														"value": "0"
													},
													"src": "1465:23:4",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"functionReturnParameters": 1115,
												"id": 1121,
												"nodeType": "Return",
												"src": "1458:30:4"
											}
										]
									},
									"documentation": {
										"id": 1109,
										"nodeType": "StructuredDocumentation",
										"src": "216:954:4",
										"text": " @dev Returns true if `account` is a contract.\n [IMPORTANT]\n ====\n It is unsafe to assume that an address for which this function returns\n false is an externally-owned account (EOA) and not a contract.\n Among others, `isContract` will return false for the following\n types of addresses:\n  - an externally-owned account\n  - a contract in construction\n  - an address where a contract will be created\n  - an address where a contract lived, but was destroyed\n ====\n [IMPORTANT]\n ====\n You shouldn't rely on `isContract` to protect against flash loan attacks!\n Preventing calls from contracts is highly discouraged. It breaks composability, breaks support for smart wallets\n like Gnosis Safe, and does not provide security since it can be circumvented by calling from a contract\n constructor.\n ===="
									},
									"id": 1123,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "isContract",
									"nameLocation": "1184:10:4",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1112,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1111,
												"mutability": "mutable",
												"name": "account",
												"nameLocation": "1203:7:4",
												"nodeType": "VariableDeclaration",
												"scope": 1123,
												"src": "1195:15:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1110,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1195:7:4",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1194:17:4"
									},
									"returnParameters": {
										"id": 1115,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1114,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1123,
												"src": "1235:4:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 1113,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "1235:4:4",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1234:6:4"
									},
									"scope": 1435,
									"src": "1175:320:4",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1156,
										"nodeType": "Block",
										"src": "2483:241:4",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 1138,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"expression": {
																	"arguments": [
																		{
																			"id": 1134,
																			"name": "this",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 4294967268,
																			"src": "2509:4:4",
																			"typeDescriptions": {
																				"typeIdentifier": "t_contract$_Address_$1435",
																				"typeString": "library Address"
																			}
																		}
																	],
																	"expression": {
																		"argumentTypes": [
																			{
																				"typeIdentifier": "t_contract$_Address_$1435",
																				"typeString": "library Address"
																			}
																		],
																		"id": 1133,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"lValueRequested": false,
																		"nodeType": "ElementaryTypeNameExpression",
																		"src": "2501:7:4",
																		"typeDescriptions": {
																			"typeIdentifier": "t_type$_t_address_$",
																			"typeString": "type(address)"
																		},
																		"typeName": {
																			"id": 1132,
																			"name": "address",
																			"nodeType": "ElementaryTypeName",
																			"src": "2501:7:4",
																			"typeDescriptions": {}
																		}
																	},
																	"id": 1135,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"kind": "typeConversion",
																	"lValueRequested": false,
																	"nameLocations": [],
																	"names": [],
																	"nodeType": "FunctionCall",
																	"src": "2501:13:4",
																	"tryCall": false,
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																"id": 1136,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"memberLocation": "2515:7:4",
																"memberName": "balance",
																"nodeType": "MemberAccess",
																"src": "2501:21:4",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">=",
															"rightExpression": {
																"id": 1137,
																"name": "amount",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1128,
																"src": "2526:6:4",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "2501:31:4",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "416464726573733a20696e73756666696369656e742062616c616e6365",
															"id": 1139,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "2534:31:4",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_5597a22abd0ef5332f8053862eb236db7590f17e2b93a53f63a103becfb561f9",
																"typeString": "literal_string \"Address: insufficient balance\""
															},
															"value": "Address: insufficient balance"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_5597a22abd0ef5332f8053862eb236db7590f17e2b93a53f63a103becfb561f9",
																"typeString": "literal_string \"Address: insufficient balance\""
															}
														],
														"id": 1131,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "2493:7:4",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 1140,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2493:73:4",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1141,
												"nodeType": "ExpressionStatement",
												"src": "2493:73:4"
											},
											{
												"assignments": [
													1143,
													null
												],
												"declarations": [
													{
														"constant": false,
														"id": 1143,
														"mutability": "mutable",
														"name": "success",
														"nameLocation": "2583:7:4",
														"nodeType": "VariableDeclaration",
														"scope": 1156,
														"src": "2578:12:4",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														},
														"typeName": {
															"id": 1142,
															"name": "bool",
															"nodeType": "ElementaryTypeName",
															"src": "2578:4:4",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"visibility": "internal"
													},
													null
												],
												"id": 1150,
												"initialValue": {
													"arguments": [
														{
															"hexValue": "",
															"id": 1148,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "2626:2:4",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470",
																"typeString": "literal_string \"\""
															},
															"value": ""
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470",
																"typeString": "literal_string \"\""
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470",
																	"typeString": "literal_string \"\""
																}
															],
															"expression": {
																"id": 1144,
																"name": "recipient",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1126,
																"src": "2596:9:4",
																"typeDescriptions": {
																	"typeIdentifier": "t_address_payable",
																	"typeString": "address payable"
																}
															},
															"id": 1145,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "2606:4:4",
															"memberName": "call",
															"nodeType": "MemberAccess",
															"src": "2596:14:4",
															"typeDescriptions": {
																"typeIdentifier": "t_function_barecall_payable$_t_bytes_memory_ptr_$returns$_t_bool_$_t_bytes_memory_ptr_$",
																"typeString": "function (bytes memory) payable returns (bool,bytes memory)"
															}
														},
														"id": 1147,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"names": [
															"value"
														],
														"nodeType": "FunctionCallOptions",
														"options": [
															{
																"id": 1146,
																"name": "amount",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1128,
																"src": "2618:6:4",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															}
														],
														"src": "2596:29:4",
														"typeDescriptions": {
															"typeIdentifier": "t_function_barecall_payable$_t_bytes_memory_ptr_$returns$_t_bool_$_t_bytes_memory_ptr_$value",
															"typeString": "function (bytes memory) payable returns (bool,bytes memory)"
														}
													},
													"id": 1149,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2596:33:4",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$_t_bool_$_t_bytes_memory_ptr_$",
														"typeString": "tuple(bool,bytes memory)"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "2577:52:4"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 1152,
															"name": "success",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1143,
															"src": "2647:7:4",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "416464726573733a20756e61626c6520746f2073656e642076616c75652c20726563697069656e74206d61792068617665207265766572746564",
															"id": 1153,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "2656:60:4",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_51ddaa38748c0a1144620fb5bfe8edab31ea437571ad591a7734bbfd0429aeae",
																"typeString": "literal_string \"Address: unable to send value, recipient may have reverted\""
															},
															"value": "Address: unable to send value, recipient may have reverted"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_51ddaa38748c0a1144620fb5bfe8edab31ea437571ad591a7734bbfd0429aeae",
																"typeString": "literal_string \"Address: unable to send value, recipient may have reverted\""
															}
														],
														"id": 1151,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "2639:7:4",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 1154,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2639:78:4",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1155,
												"nodeType": "ExpressionStatement",
												"src": "2639:78:4"
											}
										]
									},
									"documentation": {
										"id": 1124,
										"nodeType": "StructuredDocumentation",
										"src": "1501:906:4",
										"text": " @dev Replacement for Solidity's `transfer`: sends `amount` wei to\n `recipient`, forwarding all available gas and reverting on errors.\n https://eips.ethereum.org/EIPS/eip-1884[EIP1884] increases the gas cost\n of certain opcodes, possibly making contracts go over the 2300 gas limit\n imposed by `transfer`, making them unable to receive funds via\n `transfer`. {sendValue} removes this limitation.\n https://diligence.consensys.net/posts/2019/09/stop-using-soliditys-transfer-now/[Learn more].\n IMPORTANT: because control is transferred to `recipient`, care must be\n taken to not create reentrancy vulnerabilities. Consider using\n {ReentrancyGuard} or the\n https://solidity.readthedocs.io/en/v0.5.11/security-considerations.html#use-the-checks-effects-interactions-pattern[checks-effects-interactions pattern]."
									},
									"id": 1157,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "sendValue",
									"nameLocation": "2421:9:4",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1129,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1126,
												"mutability": "mutable",
												"name": "recipient",
												"nameLocation": "2447:9:4",
												"nodeType": "VariableDeclaration",
												"scope": 1157,
												"src": "2431:25:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address_payable",
													"typeString": "address payable"
												},
												"typeName": {
													"id": 1125,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2431:15:4",
													"stateMutability": "payable",
													"typeDescriptions": {
														"typeIdentifier": "t_address_payable",
														"typeString": "address payable"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1128,
												"mutability": "mutable",
												"name": "amount",
												"nameLocation": "2466:6:4",
												"nodeType": "VariableDeclaration",
												"scope": 1157,
												"src": "2458:14:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1127,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2458:7:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2430:43:4"
									},
									"returnParameters": {
										"id": 1130,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2483:0:4"
									},
									"scope": 1435,
									"src": "2412:312:4",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1174,
										"nodeType": "Block",
										"src": "3555:96:4",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"id": 1168,
															"name": "target",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1160,
															"src": "3594:6:4",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 1169,
															"name": "data",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1162,
															"src": "3602:4:4",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														},
														{
															"hexValue": "30",
															"id": 1170,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "number",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "3608:1:4",
															"typeDescriptions": {
																"typeIdentifier": "t_rational_0_by_1",
																"typeString": "int_const 0"
															},
															"value": "0"
														},
														{
															"hexValue": "416464726573733a206c6f772d6c6576656c2063616c6c206661696c6564",
															"id": 1171,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "3611:32:4",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_24d7ab5d382116e64324f19950ca9340b8af1ddeb09a8d026e0a3c6a01dcc9df",
																"typeString": "literal_string \"Address: low-level call failed\""
															},
															"value": "Address: low-level call failed"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															},
															{
																"typeIdentifier": "t_rational_0_by_1",
																"typeString": "int_const 0"
															},
															{
																"typeIdentifier": "t_stringliteral_24d7ab5d382116e64324f19950ca9340b8af1ddeb09a8d026e0a3c6a01dcc9df",
																"typeString": "literal_string \"Address: low-level call failed\""
															}
														],
														"id": 1167,
														"name": "functionCallWithValue",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															1215,
															1259
														],
														"referencedDeclaration": 1259,
														"src": "3572:21:4",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_bytes_memory_ptr_$_t_uint256_$_t_string_memory_ptr_$returns$_t_bytes_memory_ptr_$",
															"typeString": "function (address,bytes memory,uint256,string memory) returns (bytes memory)"
														}
													},
													"id": 1172,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "3572:72:4",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_memory_ptr",
														"typeString": "bytes memory"
													}
												},
												"functionReturnParameters": 1166,
												"id": 1173,
												"nodeType": "Return",
												"src": "3565:79:4"
											}
										]
									},
									"documentation": {
										"id": 1158,
										"nodeType": "StructuredDocumentation",
										"src": "2730:731:4",
										"text": " @dev Performs a Solidity function call using a low level `call`. A\n plain `call` is an unsafe replacement for a function call: use this\n function instead.\n If `target` reverts with a revert reason, it is bubbled up by this\n function (like regular Solidity function calls).\n Returns the raw returned data. To convert to the expected return value,\n use https://solidity.readthedocs.io/en/latest/units-and-global-variables.html?highlight=abi.decode#abi-encoding-and-decoding-functions[`abi.decode`].\n Requirements:\n - `target` must be a contract.\n - calling `target` with `data` must not revert.\n _Available since v3.1._"
									},
									"id": 1175,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "functionCall",
									"nameLocation": "3475:12:4",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1163,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1160,
												"mutability": "mutable",
												"name": "target",
												"nameLocation": "3496:6:4",
												"nodeType": "VariableDeclaration",
												"scope": 1175,
												"src": "3488:14:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1159,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "3488:7:4",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1162,
												"mutability": "mutable",
												"name": "data",
												"nameLocation": "3517:4:4",
												"nodeType": "VariableDeclaration",
												"scope": 1175,
												"src": "3504:17:4",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 1161,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "3504:5:4",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3487:35:4"
									},
									"returnParameters": {
										"id": 1166,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1165,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1175,
												"src": "3541:12:4",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 1164,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "3541:5:4",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3540:14:4"
									},
									"scope": 1435,
									"src": "3466:185:4",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1194,
										"nodeType": "Block",
										"src": "4020:76:4",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"id": 1188,
															"name": "target",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1178,
															"src": "4059:6:4",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 1189,
															"name": "data",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1180,
															"src": "4067:4:4",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														},
														{
															"hexValue": "30",
															"id": 1190,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "number",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "4073:1:4",
															"typeDescriptions": {
																"typeIdentifier": "t_rational_0_by_1",
																"typeString": "int_const 0"
															},
															"value": "0"
														},
														{
															"id": 1191,
															"name": "errorMessage",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1182,
															"src": "4076:12:4",
															"typeDescriptions": {
																"typeIdentifier": "t_string_memory_ptr",
																"typeString": "string memory"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															},
															{
																"typeIdentifier": "t_rational_0_by_1",
																"typeString": "int_const 0"
															},
															{
																"typeIdentifier": "t_string_memory_ptr",
																"typeString": "string memory"
															}
														],
														"id": 1187,
														"name": "functionCallWithValue",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															1215,
															1259
														],
														"referencedDeclaration": 1259,
														"src": "4037:21:4",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_bytes_memory_ptr_$_t_uint256_$_t_string_memory_ptr_$returns$_t_bytes_memory_ptr_$",
															"typeString": "function (address,bytes memory,uint256,string memory) returns (bytes memory)"
														}
													},
													"id": 1192,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "4037:52:4",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_memory_ptr",
														"typeString": "bytes memory"
													}
												},
												"functionReturnParameters": 1186,
												"id": 1193,
												"nodeType": "Return",
												"src": "4030:59:4"
											}
										]
									},
									"documentation": {
										"id": 1176,
										"nodeType": "StructuredDocumentation",
										"src": "3657:211:4",
										"text": " @dev Same as {xref-Address-functionCall-address-bytes-}[`functionCall`], but with\n `errorMessage` as a fallback revert reason when `target` reverts.\n _Available since v3.1._"
									},
									"id": 1195,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "functionCall",
									"nameLocation": "3882:12:4",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1183,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1178,
												"mutability": "mutable",
												"name": "target",
												"nameLocation": "3912:6:4",
												"nodeType": "VariableDeclaration",
												"scope": 1195,
												"src": "3904:14:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1177,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "3904:7:4",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1180,
												"mutability": "mutable",
												"name": "data",
												"nameLocation": "3941:4:4",
												"nodeType": "VariableDeclaration",
												"scope": 1195,
												"src": "3928:17:4",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 1179,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "3928:5:4",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1182,
												"mutability": "mutable",
												"name": "errorMessage",
												"nameLocation": "3969:12:4",
												"nodeType": "VariableDeclaration",
												"scope": 1195,
												"src": "3955:26:4",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 1181,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "3955:6:4",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3894:93:4"
									},
									"returnParameters": {
										"id": 1186,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1185,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1195,
												"src": "4006:12:4",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 1184,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "4006:5:4",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4005:14:4"
									},
									"scope": 1435,
									"src": "3873:223:4",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1214,
										"nodeType": "Block",
										"src": "4601:111:4",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"id": 1208,
															"name": "target",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1198,
															"src": "4640:6:4",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 1209,
															"name": "data",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1200,
															"src": "4648:4:4",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														},
														{
															"id": 1210,
															"name": "value",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1202,
															"src": "4654:5:4",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														{
															"hexValue": "416464726573733a206c6f772d6c6576656c2063616c6c20776974682076616c7565206661696c6564",
															"id": 1211,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "4661:43:4",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_88a4a0b5e975840320a0475d4027005235904fdb5ece94df156f3d717cb2dbfc",
																"typeString": "literal_string \"Address: low-level call with value failed\""
															},
															"value": "Address: low-level call with value failed"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															{
																"typeIdentifier": "t_stringliteral_88a4a0b5e975840320a0475d4027005235904fdb5ece94df156f3d717cb2dbfc",
																"typeString": "literal_string \"Address: low-level call with value failed\""
															}
														],
														"id": 1207,
														"name": "functionCallWithValue",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															1215,
															1259
														],
														"referencedDeclaration": 1259,
														"src": "4618:21:4",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_bytes_memory_ptr_$_t_uint256_$_t_string_memory_ptr_$returns$_t_bytes_memory_ptr_$",
															"typeString": "function (address,bytes memory,uint256,string memory) returns (bytes memory)"
														}
													},
													"id": 1212,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "4618:87:4",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_memory_ptr",
														"typeString": "bytes memory"
													}
												},
												"functionReturnParameters": 1206,
												"id": 1213,
												"nodeType": "Return",
												"src": "4611:94:4"
											}
										]
									},
									"documentation": {
										"id": 1196,
										"nodeType": "StructuredDocumentation",
										"src": "4102:351:4",
										"text": " @dev Same as {xref-Address-functionCall-address-bytes-}[`functionCall`],\n but also transferring `value` wei to `target`.\n Requirements:\n - the calling contract must have an ETH balance of at least `value`.\n - the called Solidity function must be `payable`.\n _Available since v3.1._"
									},
									"id": 1215,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "functionCallWithValue",
									"nameLocation": "4467:21:4",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1203,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1198,
												"mutability": "mutable",
												"name": "target",
												"nameLocation": "4506:6:4",
												"nodeType": "VariableDeclaration",
												"scope": 1215,
												"src": "4498:14:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1197,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "4498:7:4",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1200,
												"mutability": "mutable",
												"name": "data",
												"nameLocation": "4535:4:4",
												"nodeType": "VariableDeclaration",
												"scope": 1215,
												"src": "4522:17:4",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 1199,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "4522:5:4",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1202,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "4557:5:4",
												"nodeType": "VariableDeclaration",
												"scope": 1215,
												"src": "4549:13:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1201,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "4549:7:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4488:80:4"
									},
									"returnParameters": {
										"id": 1206,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1205,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1215,
												"src": "4587:12:4",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 1204,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "4587:5:4",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4586:14:4"
									},
									"scope": 1435,
									"src": "4458:254:4",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1258,
										"nodeType": "Block",
										"src": "5139:267:4",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 1236,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"expression": {
																	"arguments": [
																		{
																			"id": 1232,
																			"name": "this",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 4294967268,
																			"src": "5165:4:4",
																			"typeDescriptions": {
																				"typeIdentifier": "t_contract$_Address_$1435",
																				"typeString": "library Address"
																			}
																		}
																	],
																	"expression": {
																		"argumentTypes": [
																			{
																				"typeIdentifier": "t_contract$_Address_$1435",
																				"typeString": "library Address"
																			}
																		],
																		"id": 1231,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"lValueRequested": false,
																		"nodeType": "ElementaryTypeNameExpression",
																		"src": "5157:7:4",
																		"typeDescriptions": {
																			"typeIdentifier": "t_type$_t_address_$",
																			"typeString": "type(address)"
																		},
																		"typeName": {
																			"id": 1230,
																			"name": "address",
																			"nodeType": "ElementaryTypeName",
																			"src": "5157:7:4",
																			"typeDescriptions": {}
																		}
																	},
																	"id": 1233,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"kind": "typeConversion",
																	"lValueRequested": false,
																	"nameLocations": [],
																	"names": [],
																	"nodeType": "FunctionCall",
																	"src": "5157:13:4",
																	"tryCall": false,
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																"id": 1234,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"memberLocation": "5171:7:4",
																"memberName": "balance",
																"nodeType": "MemberAccess",
																"src": "5157:21:4",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">=",
															"rightExpression": {
																"id": 1235,
																"name": "value",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1222,
																"src": "5182:5:4",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "5157:30:4",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "416464726573733a20696e73756666696369656e742062616c616e636520666f722063616c6c",
															"id": 1237,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "5189:40:4",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_565f1a77334fc4792800921178c71e4521acffab18ff9e7885b49377ee80ab4c",
																"typeString": "literal_string \"Address: insufficient balance for call\""
															},
															"value": "Address: insufficient balance for call"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_565f1a77334fc4792800921178c71e4521acffab18ff9e7885b49377ee80ab4c",
																"typeString": "literal_string \"Address: insufficient balance for call\""
															}
														],
														"id": 1229,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "5149:7:4",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 1238,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "5149:81:4",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1239,
												"nodeType": "ExpressionStatement",
												"src": "5149:81:4"
											},
											{
												"assignments": [
													1241,
													1243
												],
												"declarations": [
													{
														"constant": false,
														"id": 1241,
														"mutability": "mutable",
														"name": "success",
														"nameLocation": "5246:7:4",
														"nodeType": "VariableDeclaration",
														"scope": 1258,
														"src": "5241:12:4",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														},
														"typeName": {
															"id": 1240,
															"name": "bool",
															"nodeType": "ElementaryTypeName",
															"src": "5241:4:4",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"visibility": "internal"
													},
													{
														"constant": false,
														"id": 1243,
														"mutability": "mutable",
														"name": "returndata",
														"nameLocation": "5268:10:4",
														"nodeType": "VariableDeclaration",
														"scope": 1258,
														"src": "5255:23:4",
														"stateVariable": false,
														"storageLocation": "memory",
														"typeDescriptions": {
															"typeIdentifier": "t_bytes_memory_ptr",
															"typeString": "bytes"
														},
														"typeName": {
															"id": 1242,
															"name": "bytes",
															"nodeType": "ElementaryTypeName",
															"src": "5255:5:4",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_storage_ptr",
																"typeString": "bytes"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 1250,
												"initialValue": {
													"arguments": [
														{
															"id": 1248,
															"name": "data",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1220,
															"src": "5308:4:4",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_bytes_memory_ptr",
																	"typeString": "bytes memory"
																}
															],
															"expression": {
																"id": 1244,
																"name": "target",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1218,
																"src": "5282:6:4",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"id": 1245,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "5289:4:4",
															"memberName": "call",
															"nodeType": "MemberAccess",
															"src": "5282:11:4",
															"typeDescriptions": {
																"typeIdentifier": "t_function_barecall_payable$_t_bytes_memory_ptr_$returns$_t_bool_$_t_bytes_memory_ptr_$",
																"typeString": "function (bytes memory) payable returns (bool,bytes memory)"
															}
														},
														"id": 1247,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"names": [
															"value"
														],
														"nodeType": "FunctionCallOptions",
														"options": [
															{
																"id": 1246,
																"name": "value",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1222,
																"src": "5301:5:4",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															}
														],
														"src": "5282:25:4",
														"typeDescriptions": {
															"typeIdentifier": "t_function_barecall_payable$_t_bytes_memory_ptr_$returns$_t_bool_$_t_bytes_memory_ptr_$value",
															"typeString": "function (bytes memory) payable returns (bool,bytes memory)"
														}
													},
													"id": 1249,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "5282:31:4",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$_t_bool_$_t_bytes_memory_ptr_$",
														"typeString": "tuple(bool,bytes memory)"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "5240:73:4"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 1252,
															"name": "target",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1218,
															"src": "5357:6:4",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 1253,
															"name": "success",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1241,
															"src": "5365:7:4",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"id": 1254,
															"name": "returndata",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1243,
															"src": "5374:10:4",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														},
														{
															"id": 1255,
															"name": "errorMessage",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1224,
															"src": "5386:12:4",
															"typeDescriptions": {
																"typeIdentifier": "t_string_memory_ptr",
																"typeString": "string memory"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															},
															{
																"typeIdentifier": "t_string_memory_ptr",
																"typeString": "string memory"
															}
														],
														"id": 1251,
														"name": "verifyCallResultFromTarget",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1390,
														"src": "5330:26:4",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_view$_t_address_$_t_bool_$_t_bytes_memory_ptr_$_t_string_memory_ptr_$returns$_t_bytes_memory_ptr_$",
															"typeString": "function (address,bool,bytes memory,string memory) view returns (bytes memory)"
														}
													},
													"id": 1256,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "5330:69:4",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_memory_ptr",
														"typeString": "bytes memory"
													}
												},
												"functionReturnParameters": 1228,
												"id": 1257,
												"nodeType": "Return",
												"src": "5323:76:4"
											}
										]
									},
									"documentation": {
										"id": 1216,
										"nodeType": "StructuredDocumentation",
										"src": "4718:237:4",
										"text": " @dev Same as {xref-Address-functionCallWithValue-address-bytes-uint256-}[`functionCallWithValue`], but\n with `errorMessage` as a fallback revert reason when `target` reverts.\n _Available since v3.1._"
									},
									"id": 1259,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "functionCallWithValue",
									"nameLocation": "4969:21:4",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1225,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1218,
												"mutability": "mutable",
												"name": "target",
												"nameLocation": "5008:6:4",
												"nodeType": "VariableDeclaration",
												"scope": 1259,
												"src": "5000:14:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1217,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "5000:7:4",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1220,
												"mutability": "mutable",
												"name": "data",
												"nameLocation": "5037:4:4",
												"nodeType": "VariableDeclaration",
												"scope": 1259,
												"src": "5024:17:4",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 1219,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "5024:5:4",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1222,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "5059:5:4",
												"nodeType": "VariableDeclaration",
												"scope": 1259,
												"src": "5051:13:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1221,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "5051:7:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1224,
												"mutability": "mutable",
												"name": "errorMessage",
												"nameLocation": "5088:12:4",
												"nodeType": "VariableDeclaration",
												"scope": 1259,
												"src": "5074:26:4",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 1223,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "5074:6:4",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4990:116:4"
									},
									"returnParameters": {
										"id": 1228,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1227,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1259,
												"src": "5125:12:4",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 1226,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "5125:5:4",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "5124:14:4"
									},
									"scope": 1435,
									"src": "4960:446:4",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1275,
										"nodeType": "Block",
										"src": "5683:97:4",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"id": 1270,
															"name": "target",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1262,
															"src": "5719:6:4",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 1271,
															"name": "data",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1264,
															"src": "5727:4:4",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														},
														{
															"hexValue": "416464726573733a206c6f772d6c6576656c207374617469632063616c6c206661696c6564",
															"id": 1272,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "5733:39:4",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_90ec82aa826a536a4cbfae44ecfa384680faa9a4b77344bce96aa761ad904df0",
																"typeString": "literal_string \"Address: low-level static call failed\""
															},
															"value": "Address: low-level static call failed"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															},
															{
																"typeIdentifier": "t_stringliteral_90ec82aa826a536a4cbfae44ecfa384680faa9a4b77344bce96aa761ad904df0",
																"typeString": "literal_string \"Address: low-level static call failed\""
															}
														],
														"id": 1269,
														"name": "functionStaticCall",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															1276,
															1305
														],
														"referencedDeclaration": 1305,
														"src": "5700:18:4",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_view$_t_address_$_t_bytes_memory_ptr_$_t_string_memory_ptr_$returns$_t_bytes_memory_ptr_$",
															"typeString": "function (address,bytes memory,string memory) view returns (bytes memory)"
														}
													},
													"id": 1273,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "5700:73:4",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_memory_ptr",
														"typeString": "bytes memory"
													}
												},
												"functionReturnParameters": 1268,
												"id": 1274,
												"nodeType": "Return",
												"src": "5693:80:4"
											}
										]
									},
									"documentation": {
										"id": 1260,
										"nodeType": "StructuredDocumentation",
										"src": "5412:166:4",
										"text": " @dev Same as {xref-Address-functionCall-address-bytes-}[`functionCall`],\n but performing a static call.\n _Available since v3.3._"
									},
									"id": 1276,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "functionStaticCall",
									"nameLocation": "5592:18:4",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1265,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1262,
												"mutability": "mutable",
												"name": "target",
												"nameLocation": "5619:6:4",
												"nodeType": "VariableDeclaration",
												"scope": 1276,
												"src": "5611:14:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1261,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "5611:7:4",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1264,
												"mutability": "mutable",
												"name": "data",
												"nameLocation": "5640:4:4",
												"nodeType": "VariableDeclaration",
												"scope": 1276,
												"src": "5627:17:4",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 1263,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "5627:5:4",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "5610:35:4"
									},
									"returnParameters": {
										"id": 1268,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1267,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1276,
												"src": "5669:12:4",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 1266,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "5669:5:4",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "5668:14:4"
									},
									"scope": 1435,
									"src": "5583:197:4",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1304,
										"nodeType": "Block",
										"src": "6122:168:4",
										"statements": [
											{
												"assignments": [
													1289,
													1291
												],
												"declarations": [
													{
														"constant": false,
														"id": 1289,
														"mutability": "mutable",
														"name": "success",
														"nameLocation": "6138:7:4",
														"nodeType": "VariableDeclaration",
														"scope": 1304,
														"src": "6133:12:4",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														},
														"typeName": {
															"id": 1288,
															"name": "bool",
															"nodeType": "ElementaryTypeName",
															"src": "6133:4:4",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"visibility": "internal"
													},
													{
														"constant": false,
														"id": 1291,
														"mutability": "mutable",
														"name": "returndata",
														"nameLocation": "6160:10:4",
														"nodeType": "VariableDeclaration",
														"scope": 1304,
														"src": "6147:23:4",
														"stateVariable": false,
														"storageLocation": "memory",
														"typeDescriptions": {
															"typeIdentifier": "t_bytes_memory_ptr",
															"typeString": "bytes"
														},
														"typeName": {
															"id": 1290,
															"name": "bytes",
															"nodeType": "ElementaryTypeName",
															"src": "6147:5:4",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_storage_ptr",
																"typeString": "bytes"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 1296,
												"initialValue": {
													"arguments": [
														{
															"id": 1294,
															"name": "data",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1281,
															"src": "6192:4:4",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														],
														"expression": {
															"id": 1292,
															"name": "target",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1279,
															"src": "6174:6:4",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"id": 1293,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "6181:10:4",
														"memberName": "staticcall",
														"nodeType": "MemberAccess",
														"src": "6174:17:4",
														"typeDescriptions": {
															"typeIdentifier": "t_function_barestaticcall_view$_t_bytes_memory_ptr_$returns$_t_bool_$_t_bytes_memory_ptr_$",
															"typeString": "function (bytes memory) view returns (bool,bytes memory)"
														}
													},
													"id": 1295,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "6174:23:4",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$_t_bool_$_t_bytes_memory_ptr_$",
														"typeString": "tuple(bool,bytes memory)"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "6132:65:4"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 1298,
															"name": "target",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1279,
															"src": "6241:6:4",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 1299,
															"name": "success",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1289,
															"src": "6249:7:4",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"id": 1300,
															"name": "returndata",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1291,
															"src": "6258:10:4",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														},
														{
															"id": 1301,
															"name": "errorMessage",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1283,
															"src": "6270:12:4",
															"typeDescriptions": {
																"typeIdentifier": "t_string_memory_ptr",
																"typeString": "string memory"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															},
															{
																"typeIdentifier": "t_string_memory_ptr",
																"typeString": "string memory"
															}
														],
														"id": 1297,
														"name": "verifyCallResultFromTarget",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1390,
														"src": "6214:26:4",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_view$_t_address_$_t_bool_$_t_bytes_memory_ptr_$_t_string_memory_ptr_$returns$_t_bytes_memory_ptr_$",
															"typeString": "function (address,bool,bytes memory,string memory) view returns (bytes memory)"
														}
													},
													"id": 1302,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "6214:69:4",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_memory_ptr",
														"typeString": "bytes memory"
													}
												},
												"functionReturnParameters": 1287,
												"id": 1303,
												"nodeType": "Return",
												"src": "6207:76:4"
											}
										]
									},
									"documentation": {
										"id": 1277,
										"nodeType": "StructuredDocumentation",
										"src": "5786:173:4",
										"text": " @dev Same as {xref-Address-functionCall-address-bytes-string-}[`functionCall`],\n but performing a static call.\n _Available since v3.3._"
									},
									"id": 1305,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "functionStaticCall",
									"nameLocation": "5973:18:4",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1284,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1279,
												"mutability": "mutable",
												"name": "target",
												"nameLocation": "6009:6:4",
												"nodeType": "VariableDeclaration",
												"scope": 1305,
												"src": "6001:14:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1278,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "6001:7:4",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1281,
												"mutability": "mutable",
												"name": "data",
												"nameLocation": "6038:4:4",
												"nodeType": "VariableDeclaration",
												"scope": 1305,
												"src": "6025:17:4",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 1280,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "6025:5:4",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1283,
												"mutability": "mutable",
												"name": "errorMessage",
												"nameLocation": "6066:12:4",
												"nodeType": "VariableDeclaration",
												"scope": 1305,
												"src": "6052:26:4",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 1282,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "6052:6:4",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "5991:93:4"
									},
									"returnParameters": {
										"id": 1287,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1286,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1305,
												"src": "6108:12:4",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 1285,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "6108:5:4",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "6107:14:4"
									},
									"scope": 1435,
									"src": "5964:326:4",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1321,
										"nodeType": "Block",
										"src": "6566:101:4",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"id": 1316,
															"name": "target",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1308,
															"src": "6604:6:4",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 1317,
															"name": "data",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1310,
															"src": "6612:4:4",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														},
														{
															"hexValue": "416464726573733a206c6f772d6c6576656c2064656c65676174652063616c6c206661696c6564",
															"id": 1318,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "6618:41:4",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_9fdcd12e4b726339b32a442b0a448365d5d85c96b2d2cff917b4f66c63110398",
																"typeString": "literal_string \"Address: low-level delegate call failed\""
															},
															"value": "Address: low-level delegate call failed"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															},
															{
																"typeIdentifier": "t_stringliteral_9fdcd12e4b726339b32a442b0a448365d5d85c96b2d2cff917b4f66c63110398",
																"typeString": "literal_string \"Address: low-level delegate call failed\""
															}
														],
														"id": 1315,
														"name": "functionDelegateCall",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															1322,
															1351
														],
														"referencedDeclaration": 1351,
														"src": "6583:20:4",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_bytes_memory_ptr_$_t_string_memory_ptr_$returns$_t_bytes_memory_ptr_$",
															"typeString": "function (address,bytes memory,string memory) returns (bytes memory)"
														}
													},
													"id": 1319,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "6583:77:4",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_memory_ptr",
														"typeString": "bytes memory"
													}
												},
												"functionReturnParameters": 1314,
												"id": 1320,
												"nodeType": "Return",
												"src": "6576:84:4"
											}
										]
									},
									"documentation": {
										"id": 1306,
										"nodeType": "StructuredDocumentation",
										"src": "6296:168:4",
										"text": " @dev Same as {xref-Address-functionCall-address-bytes-}[`functionCall`],\n but performing a delegate call.\n _Available since v3.4._"
									},
									"id": 1322,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "functionDelegateCall",
									"nameLocation": "6478:20:4",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1311,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1308,
												"mutability": "mutable",
												"name": "target",
												"nameLocation": "6507:6:4",
												"nodeType": "VariableDeclaration",
												"scope": 1322,
												"src": "6499:14:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1307,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "6499:7:4",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1310,
												"mutability": "mutable",
												"name": "data",
												"nameLocation": "6528:4:4",
												"nodeType": "VariableDeclaration",
												"scope": 1322,
												"src": "6515:17:4",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 1309,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "6515:5:4",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "6498:35:4"
									},
									"returnParameters": {
										"id": 1314,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1313,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1322,
												"src": "6552:12:4",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 1312,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "6552:5:4",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "6551:14:4"
									},
									"scope": 1435,
									"src": "6469:198:4",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1350,
										"nodeType": "Block",
										"src": "7008:170:4",
										"statements": [
											{
												"assignments": [
													1335,
													1337
												],
												"declarations": [
													{
														"constant": false,
														"id": 1335,
														"mutability": "mutable",
														"name": "success",
														"nameLocation": "7024:7:4",
														"nodeType": "VariableDeclaration",
														"scope": 1350,
														"src": "7019:12:4",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														},
														"typeName": {
															"id": 1334,
															"name": "bool",
															"nodeType": "ElementaryTypeName",
															"src": "7019:4:4",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"visibility": "internal"
													},
													{
														"constant": false,
														"id": 1337,
														"mutability": "mutable",
														"name": "returndata",
														"nameLocation": "7046:10:4",
														"nodeType": "VariableDeclaration",
														"scope": 1350,
														"src": "7033:23:4",
														"stateVariable": false,
														"storageLocation": "memory",
														"typeDescriptions": {
															"typeIdentifier": "t_bytes_memory_ptr",
															"typeString": "bytes"
														},
														"typeName": {
															"id": 1336,
															"name": "bytes",
															"nodeType": "ElementaryTypeName",
															"src": "7033:5:4",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_storage_ptr",
																"typeString": "bytes"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 1342,
												"initialValue": {
													"arguments": [
														{
															"id": 1340,
															"name": "data",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1327,
															"src": "7080:4:4",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														],
														"expression": {
															"id": 1338,
															"name": "target",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1325,
															"src": "7060:6:4",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"id": 1339,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "7067:12:4",
														"memberName": "delegatecall",
														"nodeType": "MemberAccess",
														"src": "7060:19:4",
														"typeDescriptions": {
															"typeIdentifier": "t_function_baredelegatecall_nonpayable$_t_bytes_memory_ptr_$returns$_t_bool_$_t_bytes_memory_ptr_$",
															"typeString": "function (bytes memory) returns (bool,bytes memory)"
														}
													},
													"id": 1341,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "7060:25:4",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$_t_bool_$_t_bytes_memory_ptr_$",
														"typeString": "tuple(bool,bytes memory)"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "7018:67:4"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 1344,
															"name": "target",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1325,
															"src": "7129:6:4",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 1345,
															"name": "success",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1335,
															"src": "7137:7:4",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"id": 1346,
															"name": "returndata",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1337,
															"src": "7146:10:4",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														},
														{
															"id": 1347,
															"name": "errorMessage",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1329,
															"src": "7158:12:4",
															"typeDescriptions": {
																"typeIdentifier": "t_string_memory_ptr",
																"typeString": "string memory"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															},
															{
																"typeIdentifier": "t_string_memory_ptr",
																"typeString": "string memory"
															}
														],
														"id": 1343,
														"name": "verifyCallResultFromTarget",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1390,
														"src": "7102:26:4",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_view$_t_address_$_t_bool_$_t_bytes_memory_ptr_$_t_string_memory_ptr_$returns$_t_bytes_memory_ptr_$",
															"typeString": "function (address,bool,bytes memory,string memory) view returns (bytes memory)"
														}
													},
													"id": 1348,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "7102:69:4",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_memory_ptr",
														"typeString": "bytes memory"
													}
												},
												"functionReturnParameters": 1333,
												"id": 1349,
												"nodeType": "Return",
												"src": "7095:76:4"
											}
										]
									},
									"documentation": {
										"id": 1323,
										"nodeType": "StructuredDocumentation",
										"src": "6673:175:4",
										"text": " @dev Same as {xref-Address-functionCall-address-bytes-string-}[`functionCall`],\n but performing a delegate call.\n _Available since v3.4._"
									},
									"id": 1351,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "functionDelegateCall",
									"nameLocation": "6862:20:4",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1330,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1325,
												"mutability": "mutable",
												"name": "target",
												"nameLocation": "6900:6:4",
												"nodeType": "VariableDeclaration",
												"scope": 1351,
												"src": "6892:14:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1324,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "6892:7:4",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1327,
												"mutability": "mutable",
												"name": "data",
												"nameLocation": "6929:4:4",
												"nodeType": "VariableDeclaration",
												"scope": 1351,
												"src": "6916:17:4",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 1326,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "6916:5:4",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1329,
												"mutability": "mutable",
												"name": "errorMessage",
												"nameLocation": "6957:12:4",
												"nodeType": "VariableDeclaration",
												"scope": 1351,
												"src": "6943:26:4",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 1328,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "6943:6:4",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "6882:93:4"
									},
									"returnParameters": {
										"id": 1333,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1332,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1351,
												"src": "6994:12:4",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 1331,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "6994:5:4",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "6993:14:4"
									},
									"scope": 1435,
									"src": "6853:325:4",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1389,
										"nodeType": "Block",
										"src": "7660:434:4",
										"statements": [
											{
												"condition": {
													"id": 1365,
													"name": "success",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 1356,
													"src": "7674:7:4",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"falseBody": {
													"id": 1387,
													"nodeType": "Block",
													"src": "8030:58:4",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"id": 1383,
																		"name": "returndata",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1358,
																		"src": "8052:10:4",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bytes_memory_ptr",
																			"typeString": "bytes memory"
																		}
																	},
																	{
																		"id": 1384,
																		"name": "errorMessage",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1360,
																		"src": "8064:12:4",
																		"typeDescriptions": {
																			"typeIdentifier": "t_string_memory_ptr",
																			"typeString": "string memory"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_bytes_memory_ptr",
																			"typeString": "bytes memory"
																		},
																		{
																			"typeIdentifier": "t_string_memory_ptr",
																			"typeString": "string memory"
																		}
																	],
																	"id": 1382,
																	"name": "_revert",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1434,
																	"src": "8044:7:4",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_internal_pure$_t_bytes_memory_ptr_$_t_string_memory_ptr_$returns$__$",
																		"typeString": "function (bytes memory,string memory) pure"
																	}
																},
																"id": 1385,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "8044:33:4",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$__$",
																	"typeString": "tuple()"
																}
															},
															"id": 1386,
															"nodeType": "ExpressionStatement",
															"src": "8044:33:4"
														}
													]
												},
												"id": 1388,
												"nodeType": "IfStatement",
												"src": "7670:418:4",
												"trueBody": {
													"id": 1381,
													"nodeType": "Block",
													"src": "7683:341:4",
													"statements": [
														{
															"condition": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 1369,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"expression": {
																		"id": 1366,
																		"name": "returndata",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1358,
																		"src": "7701:10:4",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bytes_memory_ptr",
																			"typeString": "bytes memory"
																		}
																	},
																	"id": 1367,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"memberLocation": "7712:6:4",
																	"memberName": "length",
																	"nodeType": "MemberAccess",
																	"src": "7701:17:4",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": "==",
																"rightExpression": {
																	"hexValue": "30",
																	"id": 1368,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "7722:1:4",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	},
																	"value": "0"
																},
																"src": "7701:22:4",
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																}
															},
															"id": 1378,
															"nodeType": "IfStatement",
															"src": "7697:286:4",
															"trueBody": {
																"id": 1377,
																"nodeType": "Block",
																"src": "7725:258:4",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"arguments": [
																						{
																							"id": 1372,
																							"name": "target",
																							"nodeType": "Identifier",
																							"overloadedDeclarations": [],
																							"referencedDeclaration": 1354,
																							"src": "7927:6:4",
																							"typeDescriptions": {
																								"typeIdentifier": "t_address",
																								"typeString": "address"
																							}
																						}
																					],
																					"expression": {
																						"argumentTypes": [
																							{
																								"typeIdentifier": "t_address",
																								"typeString": "address"
																							}
																						],
																						"id": 1371,
																						"name": "isContract",
																						"nodeType": "Identifier",
																						"overloadedDeclarations": [],
																						"referencedDeclaration": 1123,
																						"src": "7916:10:4",
																						"typeDescriptions": {
																							"typeIdentifier": "t_function_internal_view$_t_address_$returns$_t_bool_$",
																							"typeString": "function (address) view returns (bool)"
																						}
																					},
																					"id": 1373,
																					"isConstant": false,
																					"isLValue": false,
																					"isPure": false,
																					"kind": "functionCall",
																					"lValueRequested": false,
																					"nameLocations": [],
																					"names": [],
																					"nodeType": "FunctionCall",
																					"src": "7916:18:4",
																					"tryCall": false,
																					"typeDescriptions": {
																						"typeIdentifier": "t_bool",
																						"typeString": "bool"
																					}
																				},
																				{
																					"hexValue": "416464726573733a2063616c6c20746f206e6f6e2d636f6e7472616374",
																					"id": 1374,
																					"isConstant": false,
																					"isLValue": false,
																					"isPure": true,
																					"kind": "string",
																					"lValueRequested": false,
																					"nodeType": "Literal",
																					"src": "7936:31:4",
																					"typeDescriptions": {
																						"typeIdentifier": "t_stringliteral_cc2e4e38850b7c0a3e942cfed89b71c77302df25bcb2ec297a0c4ff9ff6b90ad",
																						"typeString": "literal_string \"Address: call to non-contract\""
																					},
																					"value": "Address: call to non-contract"
																				}
																			],
																			"expression": {
																				"argumentTypes": [
																					{
																						"typeIdentifier": "t_bool",
																						"typeString": "bool"
																					},
																					{
																						"typeIdentifier": "t_stringliteral_cc2e4e38850b7c0a3e942cfed89b71c77302df25bcb2ec297a0c4ff9ff6b90ad",
																						"typeString": "literal_string \"Address: call to non-contract\""
																					}
																				],
																				"id": 1370,
																				"name": "require",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [
																					4294967278,
																					4294967278
																				],
																				"referencedDeclaration": 4294967278,
																				"src": "7908:7:4",
																				"typeDescriptions": {
																					"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
																					"typeString": "function (bool,string memory) pure"
																				}
																			},
																			"id": 1375,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"kind": "functionCall",
																			"lValueRequested": false,
																			"nameLocations": [],
																			"names": [],
																			"nodeType": "FunctionCall",
																			"src": "7908:60:4",
																			"tryCall": false,
																			"typeDescriptions": {
																				"typeIdentifier": "t_tuple$__$",
																				"typeString": "tuple()"
																			}
																		},
																		"id": 1376,
																		"nodeType": "ExpressionStatement",
																		"src": "7908:60:4"
																	}
																]
															}
														},
														{
															"expression": {
																"id": 1379,
																"name": "returndata",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1358,
																"src": "8003:10:4",
																"typeDescriptions": {
																	"typeIdentifier": "t_bytes_memory_ptr",
																	"typeString": "bytes memory"
																}
															},
															"functionReturnParameters": 1364,
															"id": 1380,
															"nodeType": "Return",
															"src": "7996:17:4"
														}
													]
												}
											}
										]
									},
									"documentation": {
										"id": 1352,
										"nodeType": "StructuredDocumentation",
										"src": "7184:277:4",
										"text": " @dev Tool to verify that a low level call to smart-contract was successful, and revert (either by bubbling\n the revert reason or using the provided one) in case of unsuccessful call or if target was not a contract.\n _Available since v4.8._"
									},
									"id": 1390,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "verifyCallResultFromTarget",
									"nameLocation": "7475:26:4",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1361,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1354,
												"mutability": "mutable",
												"name": "target",
												"nameLocation": "7519:6:4",
												"nodeType": "VariableDeclaration",
												"scope": 1390,
												"src": "7511:14:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1353,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "7511:7:4",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1356,
												"mutability": "mutable",
												"name": "success",
												"nameLocation": "7540:7:4",
												"nodeType": "VariableDeclaration",
												"scope": 1390,
												"src": "7535:12:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 1355,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "7535:4:4",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1358,
												"mutability": "mutable",
												"name": "returndata",
												"nameLocation": "7570:10:4",
												"nodeType": "VariableDeclaration",
												"scope": 1390,
												"src": "7557:23:4",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 1357,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "7557:5:4",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1360,
												"mutability": "mutable",
												"name": "errorMessage",
												"nameLocation": "7604:12:4",
												"nodeType": "VariableDeclaration",
												"scope": 1390,
												"src": "7590:26:4",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 1359,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "7590:6:4",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "7501:121:4"
									},
									"returnParameters": {
										"id": 1364,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1363,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1390,
												"src": "7646:12:4",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 1362,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "7646:5:4",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "7645:14:4"
									},
									"scope": 1435,
									"src": "7466:628:4",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1413,
										"nodeType": "Block",
										"src": "8475:135:4",
										"statements": [
											{
												"condition": {
													"id": 1402,
													"name": "success",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 1393,
													"src": "8489:7:4",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"falseBody": {
													"id": 1411,
													"nodeType": "Block",
													"src": "8546:58:4",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"id": 1407,
																		"name": "returndata",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1395,
																		"src": "8568:10:4",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bytes_memory_ptr",
																			"typeString": "bytes memory"
																		}
																	},
																	{
																		"id": 1408,
																		"name": "errorMessage",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1397,
																		"src": "8580:12:4",
																		"typeDescriptions": {
																			"typeIdentifier": "t_string_memory_ptr",
																			"typeString": "string memory"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_bytes_memory_ptr",
																			"typeString": "bytes memory"
																		},
																		{
																			"typeIdentifier": "t_string_memory_ptr",
																			"typeString": "string memory"
																		}
																	],
																	"id": 1406,
																	"name": "_revert",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1434,
																	"src": "8560:7:4",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_internal_pure$_t_bytes_memory_ptr_$_t_string_memory_ptr_$returns$__$",
																		"typeString": "function (bytes memory,string memory) pure"
																	}
																},
																"id": 1409,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "8560:33:4",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$__$",
																	"typeString": "tuple()"
																}
															},
															"id": 1410,
															"nodeType": "ExpressionStatement",
															"src": "8560:33:4"
														}
													]
												},
												"id": 1412,
												"nodeType": "IfStatement",
												"src": "8485:119:4",
												"trueBody": {
													"id": 1405,
													"nodeType": "Block",
													"src": "8498:42:4",
													"statements": [
														{
															"expression": {
																"id": 1403,
																"name": "returndata",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1395,
																"src": "8519:10:4",
																"typeDescriptions": {
																	"typeIdentifier": "t_bytes_memory_ptr",
																	"typeString": "bytes memory"
																}
															},
															"functionReturnParameters": 1401,
															"id": 1404,
															"nodeType": "Return",
															"src": "8512:17:4"
														}
													]
												}
											}
										]
									},
									"documentation": {
										"id": 1391,
										"nodeType": "StructuredDocumentation",
										"src": "8100:210:4",
										"text": " @dev Tool to verify that a low level call was successful, and revert if it wasn't, either by bubbling the\n revert reason or using the provided one.\n _Available since v4.3._"
									},
									"id": 1414,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "verifyCallResult",
									"nameLocation": "8324:16:4",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1398,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1393,
												"mutability": "mutable",
												"name": "success",
												"nameLocation": "8355:7:4",
												"nodeType": "VariableDeclaration",
												"scope": 1414,
												"src": "8350:12:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 1392,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "8350:4:4",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1395,
												"mutability": "mutable",
												"name": "returndata",
												"nameLocation": "8385:10:4",
												"nodeType": "VariableDeclaration",
												"scope": 1414,
												"src": "8372:23:4",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 1394,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "8372:5:4",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1397,
												"mutability": "mutable",
												"name": "errorMessage",
												"nameLocation": "8419:12:4",
												"nodeType": "VariableDeclaration",
												"scope": 1414,
												"src": "8405:26:4",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 1396,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "8405:6:4",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "8340:97:4"
									},
									"returnParameters": {
										"id": 1401,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1400,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1414,
												"src": "8461:12:4",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 1399,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "8461:5:4",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "8460:14:4"
									},
									"scope": 1435,
									"src": "8315:295:4",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1433,
										"nodeType": "Block",
										"src": "8699:457:4",
										"statements": [
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 1424,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"expression": {
															"id": 1421,
															"name": "returndata",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1416,
															"src": "8775:10:4",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														},
														"id": 1422,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "8786:6:4",
														"memberName": "length",
														"nodeType": "MemberAccess",
														"src": "8775:17:4",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": ">",
													"rightExpression": {
														"hexValue": "30",
														"id": 1423,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "8795:1:4",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_0_by_1",
															"typeString": "int_const 0"
														},
														"value": "0"
													},
													"src": "8775:21:4",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"falseBody": {
													"id": 1431,
													"nodeType": "Block",
													"src": "9105:45:4",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"id": 1428,
																		"name": "errorMessage",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1418,
																		"src": "9126:12:4",
																		"typeDescriptions": {
																			"typeIdentifier": "t_string_memory_ptr",
																			"typeString": "string memory"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_string_memory_ptr",
																			"typeString": "string memory"
																		}
																	],
																	"id": 1427,
																	"name": "revert",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [
																		4294967277,
																		4294967277
																	],
																	"referencedDeclaration": 4294967277,
																	"src": "9119:6:4",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_revert_pure$_t_string_memory_ptr_$returns$__$",
																		"typeString": "function (string memory) pure"
																	}
																},
																"id": 1429,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "9119:20:4",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$__$",
																	"typeString": "tuple()"
																}
															},
															"id": 1430,
															"nodeType": "ExpressionStatement",
															"src": "9119:20:4"
														}
													]
												},
												"id": 1432,
												"nodeType": "IfStatement",
												"src": "8771:379:4",
												"trueBody": {
													"id": 1426,
													"nodeType": "Block",
													"src": "8798:301:4",
													"statements": [
														{
															"AST": {
																"nativeSrc": "8956:133:4",
																"nodeType": "YulBlock",
																"src": "8956:133:4",
																"statements": [
																	{
																		"nativeSrc": "8974:40:4",
																		"nodeType": "YulVariableDeclaration",
																		"src": "8974:40:4",
																		"value": {
																			"arguments": [
																				{
																					"name": "returndata",
																					"nativeSrc": "9003:10:4",
																					"nodeType": "YulIdentifier",
																					"src": "9003:10:4"
																				}
																			],
																			"functionName": {
																				"name": "mload",
																				"nativeSrc": "8997:5:4",
																				"nodeType": "YulIdentifier",
																				"src": "8997:5:4"
																			},
																			"nativeSrc": "8997:17:4",
																			"nodeType": "YulFunctionCall",
																			"src": "8997:17:4"
																		},
																		"variables": [
																			{
																				"name": "returndata_size",
																				"nativeSrc": "8978:15:4",
																				"nodeType": "YulTypedName",
																				"src": "8978:15:4",
																				"type": ""
																			}
																		]
																	},
																	{
																		"expression": {
																			"arguments": [
																				{
																					"arguments": [
																						{
																							"kind": "number",
																							"nativeSrc": "9042:2:4",
																							"nodeType": "YulLiteral",
																							"src": "9042:2:4",
																							"type": "",
																							"value": "32"
																						},
																						{
																							"name": "returndata",
																							"nativeSrc": "9046:10:4",
																							"nodeType": "YulIdentifier",
																							"src": "9046:10:4"
																						}
																					],
																					"functionName": {
																						"name": "add",
																						"nativeSrc": "9038:3:4",
																						"nodeType": "YulIdentifier",
																						"src": "9038:3:4"
																					},
																					"nativeSrc": "9038:19:4",
																					"nodeType": "YulFunctionCall",
																					"src": "9038:19:4"
																				},
																				{
																					"name": "returndata_size",
																					"nativeSrc": "9059:15:4",
																					"nodeType": "YulIdentifier",
																					"src": "9059:15:4"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nativeSrc": "9031:6:4",
																				"nodeType": "YulIdentifier",
																				"src": "9031:6:4"
																			},
																			"nativeSrc": "9031:44:4",
																			"nodeType": "YulFunctionCall",
																			"src": "9031:44:4"
																		},
																		"nativeSrc": "9031:44:4",
																		"nodeType": "YulExpressionStatement",
																		"src": "9031:44:4"
																	}
																]
															},
															"documentation": "@solidity memory-safe-assembly",
															"evmVersion": "shanghai",
															"externalReferences": [
																{
																	"declaration": 1416,
																	"isOffset": false,
																	"isSlot": false,
																	"src": "9003:10:4",
																	"valueSize": 1
																},
																{
																	"declaration": 1416,
																	"isOffset": false,
																	"isSlot": false,
																	"src": "9046:10:4",
																	"valueSize": 1
																}
															],
															"id": 1425,
															"nodeType": "InlineAssembly",
															"src": "8947:142:4"
														}
													]
												}
											}
										]
									},
									"id": 1434,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_revert",
									"nameLocation": "8625:7:4",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1419,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1416,
												"mutability": "mutable",
												"name": "returndata",
												"nameLocation": "8646:10:4",
												"nodeType": "VariableDeclaration",
												"scope": 1434,
												"src": "8633:23:4",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 1415,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "8633:5:4",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1418,
												"mutability": "mutable",
												"name": "errorMessage",
												"nameLocation": "8672:12:4",
												"nodeType": "VariableDeclaration",
												"scope": 1434,
												"src": "8658:26:4",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 1417,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "8658:6:4",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "8632:53:4"
									},
									"returnParameters": {
										"id": 1420,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "8699:0:4"
									},
									"scope": 1435,
									"src": "8616:540:4",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "private"
								}
							],
							"scope": 1436,
							"src": "194:8964:4",
							"usedErrors": [],
							"usedEvents": []
						}
					],
					"src": "101:9058:4"
				},
				"id": 4
			},
			"@openzeppelin/contracts/utils/Context.sol": {
				"ast": {
					"absolutePath": "@openzeppelin/contracts/utils/Context.sol",
					"exportedSymbols": {
						"Context": [
							1457
						]
					},
					"id": 1458,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 1437,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".0"
							],
							"nodeType": "PragmaDirective",
							"src": "86:23:5"
						},
						{
							"abstract": true,
							"baseContracts": [],
							"canonicalName": "Context",
							"contractDependencies": [],
							"contractKind": "contract",
							"documentation": {
								"id": 1438,
								"nodeType": "StructuredDocumentation",
								"src": "111:496:5",
								"text": " @dev Provides information about the current execution context, including the\n sender of the transaction and its data. While these are generally available\n via msg.sender and msg.data, they should not be accessed in such a direct\n manner, since when dealing with meta-transactions the account sending and\n paying for execution may not be the actual sender (as far as an application\n is concerned).\n This contract is only required for intermediate, library-like contracts."
							},
							"fullyImplemented": true,
							"id": 1457,
							"linearizedBaseContracts": [
								1457
							],
							"name": "Context",
							"nameLocation": "626:7:5",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"body": {
										"id": 1446,
										"nodeType": "Block",
										"src": "702:34:5",
										"statements": [
											{
												"expression": {
													"expression": {
														"id": 1443,
														"name": "msg",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 4294967281,
														"src": "719:3:5",
														"typeDescriptions": {
															"typeIdentifier": "t_magic_message",
															"typeString": "msg"
														}
													},
													"id": 1444,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"memberLocation": "723:6:5",
													"memberName": "sender",
													"nodeType": "MemberAccess",
													"src": "719:10:5",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"functionReturnParameters": 1442,
												"id": 1445,
												"nodeType": "Return",
												"src": "712:17:5"
											}
										]
									},
									"id": 1447,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_msgSender",
									"nameLocation": "649:10:5",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1439,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "659:2:5"
									},
									"returnParameters": {
										"id": 1442,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1441,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1447,
												"src": "693:7:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1440,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "693:7:5",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "692:9:5"
									},
									"scope": 1457,
									"src": "640:96:5",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1455,
										"nodeType": "Block",
										"src": "809:32:5",
										"statements": [
											{
												"expression": {
													"expression": {
														"id": 1452,
														"name": "msg",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 4294967281,
														"src": "826:3:5",
														"typeDescriptions": {
															"typeIdentifier": "t_magic_message",
															"typeString": "msg"
														}
													},
													"id": 1453,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"memberLocation": "830:4:5",
													"memberName": "data",
													"nodeType": "MemberAccess",
													"src": "826:8:5",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_calldata_ptr",
														"typeString": "bytes calldata"
													}
												},
												"functionReturnParameters": 1451,
												"id": 1454,
												"nodeType": "Return",
												"src": "819:15:5"
											}
										]
									},
									"id": 1456,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_msgData",
									"nameLocation": "751:8:5",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1448,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "759:2:5"
									},
									"returnParameters": {
										"id": 1451,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1450,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1456,
												"src": "793:14:5",
												"stateVariable": false,
												"storageLocation": "calldata",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_calldata_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 1449,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "793:5:5",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "792:16:5"
									},
									"scope": 1457,
									"src": "742:99:5",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "internal"
								}
							],
							"scope": 1458,
							"src": "608:235:5",
							"usedErrors": [],
							"usedEvents": []
						}
					],
					"src": "86:758:5"
				},
				"id": 5
			},
			"@openzeppelin/contracts/utils/Counters.sol": {
				"ast": {
					"absolutePath": "@openzeppelin/contracts/utils/Counters.sol",
					"exportedSymbols": {
						"Counters": [
							1531
						]
					},
					"id": 1532,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 1459,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".0"
							],
							"nodeType": "PragmaDirective",
							"src": "87:23:6"
						},
						{
							"abstract": false,
							"baseContracts": [],
							"canonicalName": "Counters",
							"contractDependencies": [],
							"contractKind": "library",
							"documentation": {
								"id": 1460,
								"nodeType": "StructuredDocumentation",
								"src": "112:311:6",
								"text": " @title Counters\n @author Matt Condon (@shrugs)\n @dev Provides counters that can only be incremented, decremented or reset. This can be used e.g. to track the number\n of elements in a mapping, issuing ERC721 ids, or counting request ids.\n Include with `using Counters for Counters.Counter;`"
							},
							"fullyImplemented": true,
							"id": 1531,
							"linearizedBaseContracts": [
								1531
							],
							"name": "Counters",
							"nameLocation": "432:8:6",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"canonicalName": "Counters.Counter",
									"id": 1463,
									"members": [
										{
											"constant": false,
											"id": 1462,
											"mutability": "mutable",
											"name": "_value",
											"nameLocation": "794:6:6",
											"nodeType": "VariableDeclaration",
											"scope": 1463,
											"src": "786:14:6",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_uint256",
												"typeString": "uint256"
											},
											"typeName": {
												"id": 1461,
												"name": "uint256",
												"nodeType": "ElementaryTypeName",
												"src": "786:7:6",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												}
											},
											"visibility": "internal"
										}
									],
									"name": "Counter",
									"nameLocation": "454:7:6",
									"nodeType": "StructDefinition",
									"scope": 1531,
									"src": "447:374:6",
									"visibility": "public"
								},
								{
									"body": {
										"id": 1474,
										"nodeType": "Block",
										"src": "901:38:6",
										"statements": [
											{
												"expression": {
													"expression": {
														"id": 1471,
														"name": "counter",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1466,
														"src": "918:7:6",
														"typeDescriptions": {
															"typeIdentifier": "t_struct$_Counter_$1463_storage_ptr",
															"typeString": "struct Counters.Counter storage pointer"
														}
													},
													"id": 1472,
													"isConstant": false,
													"isLValue": true,
													"isPure": false,
													"lValueRequested": false,
													"memberLocation": "926:6:6",
													"memberName": "_value",
													"nodeType": "MemberAccess",
													"referencedDeclaration": 1462,
													"src": "918:14:6",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 1470,
												"id": 1473,
												"nodeType": "Return",
												"src": "911:21:6"
											}
										]
									},
									"id": 1475,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "current",
									"nameLocation": "836:7:6",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1467,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1466,
												"mutability": "mutable",
												"name": "counter",
												"nameLocation": "860:7:6",
												"nodeType": "VariableDeclaration",
												"scope": 1475,
												"src": "844:23:6",
												"stateVariable": false,
												"storageLocation": "storage",
												"typeDescriptions": {
													"typeIdentifier": "t_struct$_Counter_$1463_storage_ptr",
													"typeString": "struct Counters.Counter"
												},
												"typeName": {
													"id": 1465,
													"nodeType": "UserDefinedTypeName",
													"pathNode": {
														"id": 1464,
														"name": "Counter",
														"nameLocations": [
															"844:7:6"
														],
														"nodeType": "IdentifierPath",
														"referencedDeclaration": 1463,
														"src": "844:7:6"
													},
													"referencedDeclaration": 1463,
													"src": "844:7:6",
													"typeDescriptions": {
														"typeIdentifier": "t_struct$_Counter_$1463_storage_ptr",
														"typeString": "struct Counters.Counter"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "843:25:6"
									},
									"returnParameters": {
										"id": 1470,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1469,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1475,
												"src": "892:7:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1468,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "892:7:6",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "891:9:6"
									},
									"scope": 1531,
									"src": "827:112:6",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1488,
										"nodeType": "Block",
										"src": "998:70:6",
										"statements": [
											{
												"id": 1487,
												"nodeType": "UncheckedBlock",
												"src": "1008:54:6",
												"statements": [
													{
														"expression": {
															"id": 1485,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftHandSide": {
																"expression": {
																	"id": 1481,
																	"name": "counter",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1478,
																	"src": "1032:7:6",
																	"typeDescriptions": {
																		"typeIdentifier": "t_struct$_Counter_$1463_storage_ptr",
																		"typeString": "struct Counters.Counter storage pointer"
																	}
																},
																"id": 1483,
																"isConstant": false,
																"isLValue": true,
																"isPure": false,
																"lValueRequested": true,
																"memberLocation": "1040:6:6",
																"memberName": "_value",
																"nodeType": "MemberAccess",
																"referencedDeclaration": 1462,
																"src": "1032:14:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "Assignment",
															"operator": "+=",
															"rightHandSide": {
																"hexValue": "31",
																"id": 1484,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "1050:1:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_1_by_1",
																	"typeString": "int_const 1"
																},
																"value": "1"
															},
															"src": "1032:19:6",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"id": 1486,
														"nodeType": "ExpressionStatement",
														"src": "1032:19:6"
													}
												]
											}
										]
									},
									"id": 1489,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "increment",
									"nameLocation": "954:9:6",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1479,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1478,
												"mutability": "mutable",
												"name": "counter",
												"nameLocation": "980:7:6",
												"nodeType": "VariableDeclaration",
												"scope": 1489,
												"src": "964:23:6",
												"stateVariable": false,
												"storageLocation": "storage",
												"typeDescriptions": {
													"typeIdentifier": "t_struct$_Counter_$1463_storage_ptr",
													"typeString": "struct Counters.Counter"
												},
												"typeName": {
													"id": 1477,
													"nodeType": "UserDefinedTypeName",
													"pathNode": {
														"id": 1476,
														"name": "Counter",
														"nameLocations": [
															"964:7:6"
														],
														"nodeType": "IdentifierPath",
														"referencedDeclaration": 1463,
														"src": "964:7:6"
													},
													"referencedDeclaration": 1463,
													"src": "964:7:6",
													"typeDescriptions": {
														"typeIdentifier": "t_struct$_Counter_$1463_storage_ptr",
														"typeString": "struct Counters.Counter"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "963:25:6"
									},
									"returnParameters": {
										"id": 1480,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "998:0:6"
									},
									"scope": 1531,
									"src": "945:123:6",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1516,
										"nodeType": "Block",
										"src": "1127:176:6",
										"statements": [
											{
												"assignments": [
													1496
												],
												"declarations": [
													{
														"constant": false,
														"id": 1496,
														"mutability": "mutable",
														"name": "value",
														"nameLocation": "1145:5:6",
														"nodeType": "VariableDeclaration",
														"scope": 1516,
														"src": "1137:13:6",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 1495,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "1137:7:6",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 1499,
												"initialValue": {
													"expression": {
														"id": 1497,
														"name": "counter",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1492,
														"src": "1153:7:6",
														"typeDescriptions": {
															"typeIdentifier": "t_struct$_Counter_$1463_storage_ptr",
															"typeString": "struct Counters.Counter storage pointer"
														}
													},
													"id": 1498,
													"isConstant": false,
													"isLValue": true,
													"isPure": false,
													"lValueRequested": false,
													"memberLocation": "1161:6:6",
													"memberName": "_value",
													"nodeType": "MemberAccess",
													"referencedDeclaration": 1462,
													"src": "1153:14:6",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "1137:30:6"
											},
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 1503,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 1501,
																"name": "value",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1496,
																"src": "1185:5:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">",
															"rightExpression": {
																"hexValue": "30",
																"id": 1502,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "1193:1:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															},
															"src": "1185:9:6",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "436f756e7465723a2064656372656d656e74206f766572666c6f77",
															"id": 1504,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "1196:29:6",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_1dfd0d5389474d871b8e8929aab9d4def041f55f90f625754fb5f9a9ba08af6f",
																"typeString": "literal_string \"Counter: decrement overflow\""
															},
															"value": "Counter: decrement overflow"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_1dfd0d5389474d871b8e8929aab9d4def041f55f90f625754fb5f9a9ba08af6f",
																"typeString": "literal_string \"Counter: decrement overflow\""
															}
														],
														"id": 1500,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "1177:7:6",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 1505,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1177:49:6",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1506,
												"nodeType": "ExpressionStatement",
												"src": "1177:49:6"
											},
											{
												"id": 1515,
												"nodeType": "UncheckedBlock",
												"src": "1236:61:6",
												"statements": [
													{
														"expression": {
															"id": 1513,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftHandSide": {
																"expression": {
																	"id": 1507,
																	"name": "counter",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1492,
																	"src": "1260:7:6",
																	"typeDescriptions": {
																		"typeIdentifier": "t_struct$_Counter_$1463_storage_ptr",
																		"typeString": "struct Counters.Counter storage pointer"
																	}
																},
																"id": 1509,
																"isConstant": false,
																"isLValue": true,
																"isPure": false,
																"lValueRequested": true,
																"memberLocation": "1268:6:6",
																"memberName": "_value",
																"nodeType": "MemberAccess",
																"referencedDeclaration": 1462,
																"src": "1260:14:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "Assignment",
															"operator": "=",
															"rightHandSide": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 1512,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"id": 1510,
																	"name": "value",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1496,
																	"src": "1277:5:6",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": "-",
																"rightExpression": {
																	"hexValue": "31",
																	"id": 1511,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "1285:1:6",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_1_by_1",
																		"typeString": "int_const 1"
																	},
																	"value": "1"
																},
																"src": "1277:9:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "1260:26:6",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"id": 1514,
														"nodeType": "ExpressionStatement",
														"src": "1260:26:6"
													}
												]
											}
										]
									},
									"id": 1517,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "decrement",
									"nameLocation": "1083:9:6",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1493,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1492,
												"mutability": "mutable",
												"name": "counter",
												"nameLocation": "1109:7:6",
												"nodeType": "VariableDeclaration",
												"scope": 1517,
												"src": "1093:23:6",
												"stateVariable": false,
												"storageLocation": "storage",
												"typeDescriptions": {
													"typeIdentifier": "t_struct$_Counter_$1463_storage_ptr",
													"typeString": "struct Counters.Counter"
												},
												"typeName": {
													"id": 1491,
													"nodeType": "UserDefinedTypeName",
													"pathNode": {
														"id": 1490,
														"name": "Counter",
														"nameLocations": [
															"1093:7:6"
														],
														"nodeType": "IdentifierPath",
														"referencedDeclaration": 1463,
														"src": "1093:7:6"
													},
													"referencedDeclaration": 1463,
													"src": "1093:7:6",
													"typeDescriptions": {
														"typeIdentifier": "t_struct$_Counter_$1463_storage_ptr",
														"typeString": "struct Counters.Counter"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1092:25:6"
									},
									"returnParameters": {
										"id": 1494,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1127:0:6"
									},
									"scope": 1531,
									"src": "1074:229:6",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1529,
										"nodeType": "Block",
										"src": "1358:35:6",
										"statements": [
											{
												"expression": {
													"id": 1527,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"expression": {
															"id": 1523,
															"name": "counter",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1520,
															"src": "1368:7:6",
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_Counter_$1463_storage_ptr",
																"typeString": "struct Counters.Counter storage pointer"
															}
														},
														"id": 1525,
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"memberLocation": "1376:6:6",
														"memberName": "_value",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 1462,
														"src": "1368:14:6",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"hexValue": "30",
														"id": 1526,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "1385:1:6",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_0_by_1",
															"typeString": "int_const 0"
														},
														"value": "0"
													},
													"src": "1368:18:6",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 1528,
												"nodeType": "ExpressionStatement",
												"src": "1368:18:6"
											}
										]
									},
									"id": 1530,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "reset",
									"nameLocation": "1318:5:6",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1521,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1520,
												"mutability": "mutable",
												"name": "counter",
												"nameLocation": "1340:7:6",
												"nodeType": "VariableDeclaration",
												"scope": 1530,
												"src": "1324:23:6",
												"stateVariable": false,
												"storageLocation": "storage",
												"typeDescriptions": {
													"typeIdentifier": "t_struct$_Counter_$1463_storage_ptr",
													"typeString": "struct Counters.Counter"
												},
												"typeName": {
													"id": 1519,
													"nodeType": "UserDefinedTypeName",
													"pathNode": {
														"id": 1518,
														"name": "Counter",
														"nameLocations": [
															"1324:7:6"
														],
														"nodeType": "IdentifierPath",
														"referencedDeclaration": 1463,
														"src": "1324:7:6"
													},
													"referencedDeclaration": 1463,
													"src": "1324:7:6",
													"typeDescriptions": {
														"typeIdentifier": "t_struct$_Counter_$1463_storage_ptr",
														"typeString": "struct Counters.Counter"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1323:25:6"
									},
									"returnParameters": {
										"id": 1522,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1358:0:6"
									},
									"scope": 1531,
									"src": "1309:84:6",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								}
							],
							"scope": 1532,
							"src": "424:971:6",
							"usedErrors": [],
							"usedEvents": []
						}
					],
					"src": "87:1309:6"
				},
				"id": 6
			},
			"@openzeppelin/contracts/utils/Strings.sol": {
				"ast": {
					"absolutePath": "@openzeppelin/contracts/utils/Strings.sol",
					"exportedSymbols": {
						"Math": [
							2607
						],
						"Strings": [
							1706
						]
					},
					"id": 1707,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 1533,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".0"
							],
							"nodeType": "PragmaDirective",
							"src": "101:23:7"
						},
						{
							"absolutePath": "@openzeppelin/contracts/utils/math/Math.sol",
							"file": "./math/Math.sol",
							"id": 1534,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 1707,
							"sourceUnit": 2608,
							"src": "126:25:7",
							"symbolAliases": [],
							"unitAlias": ""
						},
						{
							"abstract": false,
							"baseContracts": [],
							"canonicalName": "Strings",
							"contractDependencies": [],
							"contractKind": "library",
							"documentation": {
								"id": 1535,
								"nodeType": "StructuredDocumentation",
								"src": "153:34:7",
								"text": " @dev String operations."
							},
							"fullyImplemented": true,
							"id": 1706,
							"linearizedBaseContracts": [
								1706
							],
							"name": "Strings",
							"nameLocation": "196:7:7",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"constant": true,
									"id": 1538,
									"mutability": "constant",
									"name": "_SYMBOLS",
									"nameLocation": "235:8:7",
									"nodeType": "VariableDeclaration",
									"scope": 1706,
									"src": "210:54:7",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_bytes16",
										"typeString": "bytes16"
									},
									"typeName": {
										"id": 1536,
										"name": "bytes16",
										"nodeType": "ElementaryTypeName",
										"src": "210:7:7",
										"typeDescriptions": {
											"typeIdentifier": "t_bytes16",
											"typeString": "bytes16"
										}
									},
									"value": {
										"hexValue": "30313233343536373839616263646566",
										"id": 1537,
										"isConstant": false,
										"isLValue": false,
										"isPure": true,
										"kind": "string",
										"lValueRequested": false,
										"nodeType": "Literal",
										"src": "246:18:7",
										"typeDescriptions": {
											"typeIdentifier": "t_stringliteral_cb29997ed99ead0db59ce4d12b7d3723198c827273e5796737c926d78019c39f",
											"typeString": "literal_string \"0123456789abcdef\""
										},
										"value": "0123456789abcdef"
									},
									"visibility": "private"
								},
								{
									"constant": true,
									"id": 1541,
									"mutability": "constant",
									"name": "_ADDRESS_LENGTH",
									"nameLocation": "293:15:7",
									"nodeType": "VariableDeclaration",
									"scope": 1706,
									"src": "270:43:7",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_uint8",
										"typeString": "uint8"
									},
									"typeName": {
										"id": 1539,
										"name": "uint8",
										"nodeType": "ElementaryTypeName",
										"src": "270:5:7",
										"typeDescriptions": {
											"typeIdentifier": "t_uint8",
											"typeString": "uint8"
										}
									},
									"value": {
										"hexValue": "3230",
										"id": 1540,
										"isConstant": false,
										"isLValue": false,
										"isPure": true,
										"kind": "number",
										"lValueRequested": false,
										"nodeType": "Literal",
										"src": "311:2:7",
										"typeDescriptions": {
											"typeIdentifier": "t_rational_20_by_1",
											"typeString": "int_const 20"
										},
										"value": "20"
									},
									"visibility": "private"
								},
								{
									"body": {
										"id": 1588,
										"nodeType": "Block",
										"src": "486:625:7",
										"statements": [
											{
												"id": 1587,
												"nodeType": "UncheckedBlock",
												"src": "496:609:7",
												"statements": [
													{
														"assignments": [
															1550
														],
														"declarations": [
															{
																"constant": false,
																"id": 1550,
																"mutability": "mutable",
																"name": "length",
																"nameLocation": "528:6:7",
																"nodeType": "VariableDeclaration",
																"scope": 1587,
																"src": "520:14:7",
																"stateVariable": false,
																"storageLocation": "default",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"typeName": {
																	"id": 1549,
																	"name": "uint256",
																	"nodeType": "ElementaryTypeName",
																	"src": "520:7:7",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"visibility": "internal"
															}
														],
														"id": 1557,
														"initialValue": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 1556,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"arguments": [
																	{
																		"id": 1553,
																		"name": "value",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1544,
																		"src": "548:5:7",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	],
																	"expression": {
																		"id": 1551,
																		"name": "Math",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 2607,
																		"src": "537:4:7",
																		"typeDescriptions": {
																			"typeIdentifier": "t_type$_t_contract$_Math_$2607_$",
																			"typeString": "type(library Math)"
																		}
																	},
																	"id": 1552,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"memberLocation": "542:5:7",
																	"memberName": "log10",
																	"nodeType": "MemberAccess",
																	"referencedDeclaration": 2444,
																	"src": "537:10:7",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_internal_pure$_t_uint256_$returns$_t_uint256_$",
																		"typeString": "function (uint256) pure returns (uint256)"
																	}
																},
																"id": 1554,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "537:17:7",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "+",
															"rightExpression": {
																"hexValue": "31",
																"id": 1555,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "557:1:7",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_1_by_1",
																	"typeString": "int_const 1"
																},
																"value": "1"
															},
															"src": "537:21:7",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"nodeType": "VariableDeclarationStatement",
														"src": "520:38:7"
													},
													{
														"assignments": [
															1559
														],
														"declarations": [
															{
																"constant": false,
																"id": 1559,
																"mutability": "mutable",
																"name": "buffer",
																"nameLocation": "586:6:7",
																"nodeType": "VariableDeclaration",
																"scope": 1587,
																"src": "572:20:7",
																"stateVariable": false,
																"storageLocation": "memory",
																"typeDescriptions": {
																	"typeIdentifier": "t_string_memory_ptr",
																	"typeString": "string"
																},
																"typeName": {
																	"id": 1558,
																	"name": "string",
																	"nodeType": "ElementaryTypeName",
																	"src": "572:6:7",
																	"typeDescriptions": {
																		"typeIdentifier": "t_string_storage_ptr",
																		"typeString": "string"
																	}
																},
																"visibility": "internal"
															}
														],
														"id": 1564,
														"initialValue": {
															"arguments": [
																{
																	"id": 1562,
																	"name": "length",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1550,
																	"src": "606:6:7",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																],
																"id": 1561,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "NewExpression",
																"src": "595:10:7",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_objectcreation_pure$_t_uint256_$returns$_t_string_memory_ptr_$",
																	"typeString": "function (uint256) pure returns (string memory)"
																},
																"typeName": {
																	"id": 1560,
																	"name": "string",
																	"nodeType": "ElementaryTypeName",
																	"src": "599:6:7",
																	"typeDescriptions": {
																		"typeIdentifier": "t_string_storage_ptr",
																		"typeString": "string"
																	}
																}
															},
															"id": 1563,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "595:18:7",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_string_memory_ptr",
																"typeString": "string memory"
															}
														},
														"nodeType": "VariableDeclarationStatement",
														"src": "572:41:7"
													},
													{
														"assignments": [
															1566
														],
														"declarations": [
															{
																"constant": false,
																"id": 1566,
																"mutability": "mutable",
																"name": "ptr",
																"nameLocation": "635:3:7",
																"nodeType": "VariableDeclaration",
																"scope": 1587,
																"src": "627:11:7",
																"stateVariable": false,
																"storageLocation": "default",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"typeName": {
																	"id": 1565,
																	"name": "uint256",
																	"nodeType": "ElementaryTypeName",
																	"src": "627:7:7",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"visibility": "internal"
															}
														],
														"id": 1567,
														"nodeType": "VariableDeclarationStatement",
														"src": "627:11:7"
													},
													{
														"AST": {
															"nativeSrc": "708:67:7",
															"nodeType": "YulBlock",
															"src": "708:67:7",
															"statements": [
																{
																	"nativeSrc": "726:35:7",
																	"nodeType": "YulAssignment",
																	"src": "726:35:7",
																	"value": {
																		"arguments": [
																			{
																				"name": "buffer",
																				"nativeSrc": "737:6:7",
																				"nodeType": "YulIdentifier",
																				"src": "737:6:7"
																			},
																			{
																				"arguments": [
																					{
																						"kind": "number",
																						"nativeSrc": "749:2:7",
																						"nodeType": "YulLiteral",
																						"src": "749:2:7",
																						"type": "",
																						"value": "32"
																					},
																					{
																						"name": "length",
																						"nativeSrc": "753:6:7",
																						"nodeType": "YulIdentifier",
																						"src": "753:6:7"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "745:3:7",
																					"nodeType": "YulIdentifier",
																					"src": "745:3:7"
																				},
																				"nativeSrc": "745:15:7",
																				"nodeType": "YulFunctionCall",
																				"src": "745:15:7"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "733:3:7",
																			"nodeType": "YulIdentifier",
																			"src": "733:3:7"
																		},
																		"nativeSrc": "733:28:7",
																		"nodeType": "YulFunctionCall",
																		"src": "733:28:7"
																	},
																	"variableNames": [
																		{
																			"name": "ptr",
																			"nativeSrc": "726:3:7",
																			"nodeType": "YulIdentifier",
																			"src": "726:3:7"
																		}
																	]
																}
															]
														},
														"documentation": "@solidity memory-safe-assembly",
														"evmVersion": "shanghai",
														"externalReferences": [
															{
																"declaration": 1559,
																"isOffset": false,
																"isSlot": false,
																"src": "737:6:7",
																"valueSize": 1
															},
															{
																"declaration": 1550,
																"isOffset": false,
																"isSlot": false,
																"src": "753:6:7",
																"valueSize": 1
															},
															{
																"declaration": 1566,
																"isOffset": false,
																"isSlot": false,
																"src": "726:3:7",
																"valueSize": 1
															}
														],
														"id": 1568,
														"nodeType": "InlineAssembly",
														"src": "699:76:7"
													},
													{
														"body": {
															"id": 1583,
															"nodeType": "Block",
															"src": "801:267:7",
															"statements": [
																{
																	"expression": {
																		"id": 1571,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"nodeType": "UnaryOperation",
																		"operator": "--",
																		"prefix": false,
																		"src": "819:5:7",
																		"subExpression": {
																			"id": 1570,
																			"name": "ptr",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1566,
																			"src": "819:3:7",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 1572,
																	"nodeType": "ExpressionStatement",
																	"src": "819:5:7"
																},
																{
																	"AST": {
																		"nativeSrc": "902:84:7",
																		"nodeType": "YulBlock",
																		"src": "902:84:7",
																		"statements": [
																			{
																				"expression": {
																					"arguments": [
																						{
																							"name": "ptr",
																							"nativeSrc": "932:3:7",
																							"nodeType": "YulIdentifier",
																							"src": "932:3:7"
																						},
																						{
																							"arguments": [
																								{
																									"arguments": [
																										{
																											"name": "value",
																											"nativeSrc": "946:5:7",
																											"nodeType": "YulIdentifier",
																											"src": "946:5:7"
																										},
																										{
																											"kind": "number",
																											"nativeSrc": "953:2:7",
																											"nodeType": "YulLiteral",
																											"src": "953:2:7",
																											"type": "",
																											"value": "10"
																										}
																									],
																									"functionName": {
																										"name": "mod",
																										"nativeSrc": "942:3:7",
																										"nodeType": "YulIdentifier",
																										"src": "942:3:7"
																									},
																									"nativeSrc": "942:14:7",
																									"nodeType": "YulFunctionCall",
																									"src": "942:14:7"
																								},
																								{
																									"name": "_SYMBOLS",
																									"nativeSrc": "958:8:7",
																									"nodeType": "YulIdentifier",
																									"src": "958:8:7"
																								}
																							],
																							"functionName": {
																								"name": "byte",
																								"nativeSrc": "937:4:7",
																								"nodeType": "YulIdentifier",
																								"src": "937:4:7"
																							},
																							"nativeSrc": "937:30:7",
																							"nodeType": "YulFunctionCall",
																							"src": "937:30:7"
																						}
																					],
																					"functionName": {
																						"name": "mstore8",
																						"nativeSrc": "924:7:7",
																						"nodeType": "YulIdentifier",
																						"src": "924:7:7"
																					},
																					"nativeSrc": "924:44:7",
																					"nodeType": "YulFunctionCall",
																					"src": "924:44:7"
																				},
																				"nativeSrc": "924:44:7",
																				"nodeType": "YulExpressionStatement",
																				"src": "924:44:7"
																			}
																		]
																	},
																	"documentation": "@solidity memory-safe-assembly",
																	"evmVersion": "shanghai",
																	"externalReferences": [
																		{
																			"declaration": 1538,
																			"isOffset": false,
																			"isSlot": false,
																			"src": "958:8:7",
																			"valueSize": 1
																		},
																		{
																			"declaration": 1566,
																			"isOffset": false,
																			"isSlot": false,
																			"src": "932:3:7",
																			"valueSize": 1
																		},
																		{
																			"declaration": 1544,
																			"isOffset": false,
																			"isSlot": false,
																			"src": "946:5:7",
																			"valueSize": 1
																		}
																	],
																	"id": 1573,
																	"nodeType": "InlineAssembly",
																	"src": "893:93:7"
																},
																{
																	"expression": {
																		"id": 1576,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"id": 1574,
																			"name": "value",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1544,
																			"src": "1003:5:7",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": "/=",
																		"rightHandSide": {
																			"hexValue": "3130",
																			"id": 1575,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "1012:2:7",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_10_by_1",
																				"typeString": "int_const 10"
																			},
																			"value": "10"
																		},
																		"src": "1003:11:7",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 1577,
																	"nodeType": "ExpressionStatement",
																	"src": "1003:11:7"
																},
																{
																	"condition": {
																		"commonType": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		},
																		"id": 1580,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftExpression": {
																			"id": 1578,
																			"name": "value",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1544,
																			"src": "1036:5:7",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "BinaryOperation",
																		"operator": "==",
																		"rightExpression": {
																			"hexValue": "30",
																			"id": 1579,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "1045:1:7",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_0_by_1",
																				"typeString": "int_const 0"
																			},
																			"value": "0"
																		},
																		"src": "1036:10:7",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bool",
																			"typeString": "bool"
																		}
																	},
																	"id": 1582,
																	"nodeType": "IfStatement",
																	"src": "1032:21:7",
																	"trueBody": {
																		"id": 1581,
																		"nodeType": "Break",
																		"src": "1048:5:7"
																	}
																}
															]
														},
														"condition": {
															"hexValue": "74727565",
															"id": 1569,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "bool",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "795:4:7",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															"value": "true"
														},
														"id": 1584,
														"nodeType": "WhileStatement",
														"src": "788:280:7"
													},
													{
														"expression": {
															"id": 1585,
															"name": "buffer",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1559,
															"src": "1088:6:7",
															"typeDescriptions": {
																"typeIdentifier": "t_string_memory_ptr",
																"typeString": "string memory"
															}
														},
														"functionReturnParameters": 1548,
														"id": 1586,
														"nodeType": "Return",
														"src": "1081:13:7"
													}
												]
											}
										]
									},
									"documentation": {
										"id": 1542,
										"nodeType": "StructuredDocumentation",
										"src": "320:90:7",
										"text": " @dev Converts a `uint256` to its ASCII `string` decimal representation."
									},
									"id": 1589,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "toString",
									"nameLocation": "424:8:7",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1545,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1544,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "441:5:7",
												"nodeType": "VariableDeclaration",
												"scope": 1589,
												"src": "433:13:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1543,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "433:7:7",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "432:15:7"
									},
									"returnParameters": {
										"id": 1548,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1547,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1589,
												"src": "471:13:7",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 1546,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "471:6:7",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "470:15:7"
									},
									"scope": 1706,
									"src": "415:696:7",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1608,
										"nodeType": "Block",
										"src": "1290:100:7",
										"statements": [
											{
												"id": 1607,
												"nodeType": "UncheckedBlock",
												"src": "1300:84:7",
												"statements": [
													{
														"expression": {
															"arguments": [
																{
																	"id": 1598,
																	"name": "value",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1592,
																	"src": "1343:5:7",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																{
																	"commonType": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	"id": 1604,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"leftExpression": {
																		"arguments": [
																			{
																				"id": 1601,
																				"name": "value",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 1592,
																				"src": "1362:5:7",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			}
																		],
																		"expression": {
																			"argumentTypes": [
																				{
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			],
																			"expression": {
																				"id": 1599,
																				"name": "Math",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 2607,
																				"src": "1350:4:7",
																				"typeDescriptions": {
																					"typeIdentifier": "t_type$_t_contract$_Math_$2607_$",
																					"typeString": "type(library Math)"
																				}
																			},
																			"id": 1600,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"memberLocation": "1355:6:7",
																			"memberName": "log256",
																			"nodeType": "MemberAccess",
																			"referencedDeclaration": 2567,
																			"src": "1350:11:7",
																			"typeDescriptions": {
																				"typeIdentifier": "t_function_internal_pure$_t_uint256_$returns$_t_uint256_$",
																				"typeString": "function (uint256) pure returns (uint256)"
																			}
																		},
																		"id": 1602,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"kind": "functionCall",
																		"lValueRequested": false,
																		"nameLocations": [],
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "1350:18:7",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"nodeType": "BinaryOperation",
																	"operator": "+",
																	"rightExpression": {
																		"hexValue": "31",
																		"id": 1603,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "1371:1:7",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_1_by_1",
																			"typeString": "int_const 1"
																		},
																		"value": "1"
																	},
																	"src": "1350:22:7",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	{
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																],
																"id": 1597,
																"name": "toHexString",
																"nodeType": "Identifier",
																"overloadedDeclarations": [
																	1609,
																	1685,
																	1705
																],
																"referencedDeclaration": 1685,
																"src": "1331:11:7",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_string_memory_ptr_$",
																	"typeString": "function (uint256,uint256) pure returns (string memory)"
																}
															},
															"id": 1605,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "1331:42:7",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_string_memory_ptr",
																"typeString": "string memory"
															}
														},
														"functionReturnParameters": 1596,
														"id": 1606,
														"nodeType": "Return",
														"src": "1324:49:7"
													}
												]
											}
										]
									},
									"documentation": {
										"id": 1590,
										"nodeType": "StructuredDocumentation",
										"src": "1117:94:7",
										"text": " @dev Converts a `uint256` to its ASCII `string` hexadecimal representation."
									},
									"id": 1609,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "toHexString",
									"nameLocation": "1225:11:7",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1593,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1592,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "1245:5:7",
												"nodeType": "VariableDeclaration",
												"scope": 1609,
												"src": "1237:13:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1591,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1237:7:7",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1236:15:7"
									},
									"returnParameters": {
										"id": 1596,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1595,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1609,
												"src": "1275:13:7",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 1594,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "1275:6:7",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1274:15:7"
									},
									"scope": 1706,
									"src": "1216:174:7",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1684,
										"nodeType": "Block",
										"src": "1603:347:7",
										"statements": [
											{
												"assignments": [
													1620
												],
												"declarations": [
													{
														"constant": false,
														"id": 1620,
														"mutability": "mutable",
														"name": "buffer",
														"nameLocation": "1626:6:7",
														"nodeType": "VariableDeclaration",
														"scope": 1684,
														"src": "1613:19:7",
														"stateVariable": false,
														"storageLocation": "memory",
														"typeDescriptions": {
															"typeIdentifier": "t_bytes_memory_ptr",
															"typeString": "bytes"
														},
														"typeName": {
															"id": 1619,
															"name": "bytes",
															"nodeType": "ElementaryTypeName",
															"src": "1613:5:7",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_storage_ptr",
																"typeString": "bytes"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 1629,
												"initialValue": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 1627,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 1625,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"hexValue": "32",
																	"id": 1623,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "1645:1:7",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_2_by_1",
																		"typeString": "int_const 2"
																	},
																	"value": "2"
																},
																"nodeType": "BinaryOperation",
																"operator": "*",
																"rightExpression": {
																	"id": 1624,
																	"name": "length",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1614,
																	"src": "1649:6:7",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "1645:10:7",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "+",
															"rightExpression": {
																"hexValue": "32",
																"id": 1626,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "1658:1:7",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_2_by_1",
																	"typeString": "int_const 2"
																},
																"value": "2"
															},
															"src": "1645:14:7",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 1622,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"lValueRequested": false,
														"nodeType": "NewExpression",
														"src": "1635:9:7",
														"typeDescriptions": {
															"typeIdentifier": "t_function_objectcreation_pure$_t_uint256_$returns$_t_bytes_memory_ptr_$",
															"typeString": "function (uint256) pure returns (bytes memory)"
														},
														"typeName": {
															"id": 1621,
															"name": "bytes",
															"nodeType": "ElementaryTypeName",
															"src": "1639:5:7",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_storage_ptr",
																"typeString": "bytes"
															}
														}
													},
													"id": 1628,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1635:25:7",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_memory_ptr",
														"typeString": "bytes memory"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "1613:47:7"
											},
											{
												"expression": {
													"id": 1634,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"baseExpression": {
															"id": 1630,
															"name": "buffer",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1620,
															"src": "1670:6:7",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														},
														"id": 1632,
														"indexExpression": {
															"hexValue": "30",
															"id": 1631,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "number",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "1677:1:7",
															"typeDescriptions": {
																"typeIdentifier": "t_rational_0_by_1",
																"typeString": "int_const 0"
															},
															"value": "0"
														},
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"nodeType": "IndexAccess",
														"src": "1670:9:7",
														"typeDescriptions": {
															"typeIdentifier": "t_bytes1",
															"typeString": "bytes1"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"hexValue": "30",
														"id": 1633,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "string",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "1682:3:7",
														"typeDescriptions": {
															"typeIdentifier": "t_stringliteral_044852b2a670ade5407e78fb2863c51de9fcb96542a07186fe3aeda6bb8a116d",
															"typeString": "literal_string \"0\""
														},
														"value": "0"
													},
													"src": "1670:15:7",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes1",
														"typeString": "bytes1"
													}
												},
												"id": 1635,
												"nodeType": "ExpressionStatement",
												"src": "1670:15:7"
											},
											{
												"expression": {
													"id": 1640,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"baseExpression": {
															"id": 1636,
															"name": "buffer",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1620,
															"src": "1695:6:7",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														},
														"id": 1638,
														"indexExpression": {
															"hexValue": "31",
															"id": 1637,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "number",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "1702:1:7",
															"typeDescriptions": {
																"typeIdentifier": "t_rational_1_by_1",
																"typeString": "int_const 1"
															},
															"value": "1"
														},
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"nodeType": "IndexAccess",
														"src": "1695:9:7",
														"typeDescriptions": {
															"typeIdentifier": "t_bytes1",
															"typeString": "bytes1"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"hexValue": "78",
														"id": 1639,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "string",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "1707:3:7",
														"typeDescriptions": {
															"typeIdentifier": "t_stringliteral_7521d1cadbcfa91eec65aa16715b94ffc1c9654ba57ea2ef1a2127bca1127a83",
															"typeString": "literal_string \"x\""
														},
														"value": "x"
													},
													"src": "1695:15:7",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes1",
														"typeString": "bytes1"
													}
												},
												"id": 1641,
												"nodeType": "ExpressionStatement",
												"src": "1695:15:7"
											},
											{
												"body": {
													"id": 1670,
													"nodeType": "Block",
													"src": "1765:83:7",
													"statements": [
														{
															"expression": {
																"id": 1664,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftHandSide": {
																	"baseExpression": {
																		"id": 1656,
																		"name": "buffer",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1620,
																		"src": "1779:6:7",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bytes_memory_ptr",
																			"typeString": "bytes memory"
																		}
																	},
																	"id": 1658,
																	"indexExpression": {
																		"id": 1657,
																		"name": "i",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1643,
																		"src": "1786:1:7",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"isConstant": false,
																	"isLValue": true,
																	"isPure": false,
																	"lValueRequested": true,
																	"nodeType": "IndexAccess",
																	"src": "1779:9:7",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bytes1",
																		"typeString": "bytes1"
																	}
																},
																"nodeType": "Assignment",
																"operator": "=",
																"rightHandSide": {
																	"baseExpression": {
																		"id": 1659,
																		"name": "_SYMBOLS",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1538,
																		"src": "1791:8:7",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bytes16",
																			"typeString": "bytes16"
																		}
																	},
																	"id": 1663,
																	"indexExpression": {
																		"commonType": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		},
																		"id": 1662,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftExpression": {
																			"id": 1660,
																			"name": "value",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1612,
																			"src": "1800:5:7",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "BinaryOperation",
																		"operator": "&",
																		"rightExpression": {
																			"hexValue": "307866",
																			"id": 1661,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "1808:3:7",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_15_by_1",
																				"typeString": "int_const 15"
																			},
																			"value": "0xf"
																		},
																		"src": "1800:11:7",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"nodeType": "IndexAccess",
																	"src": "1791:21:7",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bytes1",
																		"typeString": "bytes1"
																	}
																},
																"src": "1779:33:7",
																"typeDescriptions": {
																	"typeIdentifier": "t_bytes1",
																	"typeString": "bytes1"
																}
															},
															"id": 1665,
															"nodeType": "ExpressionStatement",
															"src": "1779:33:7"
														},
														{
															"expression": {
																"id": 1668,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftHandSide": {
																	"id": 1666,
																	"name": "value",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1612,
																	"src": "1826:5:7",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "Assignment",
																"operator": ">>=",
																"rightHandSide": {
																	"hexValue": "34",
																	"id": 1667,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "1836:1:7",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_4_by_1",
																		"typeString": "int_const 4"
																	},
																	"value": "4"
																},
																"src": "1826:11:7",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"id": 1669,
															"nodeType": "ExpressionStatement",
															"src": "1826:11:7"
														}
													]
												},
												"condition": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 1652,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 1650,
														"name": "i",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1643,
														"src": "1753:1:7",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": ">",
													"rightExpression": {
														"hexValue": "31",
														"id": 1651,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "1757:1:7",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_1_by_1",
															"typeString": "int_const 1"
														},
														"value": "1"
													},
													"src": "1753:5:7",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 1671,
												"initializationExpression": {
													"assignments": [
														1643
													],
													"declarations": [
														{
															"constant": false,
															"id": 1643,
															"mutability": "mutable",
															"name": "i",
															"nameLocation": "1733:1:7",
															"nodeType": "VariableDeclaration",
															"scope": 1671,
															"src": "1725:9:7",
															"stateVariable": false,
															"storageLocation": "default",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"typeName": {
																"id": 1642,
																"name": "uint256",
																"nodeType": "ElementaryTypeName",
																"src": "1725:7:7",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"visibility": "internal"
														}
													],
													"id": 1649,
													"initialValue": {
														"commonType": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"id": 1648,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftExpression": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 1646,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"hexValue": "32",
																"id": 1644,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "1737:1:7",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_2_by_1",
																	"typeString": "int_const 2"
																},
																"value": "2"
															},
															"nodeType": "BinaryOperation",
															"operator": "*",
															"rightExpression": {
																"id": 1645,
																"name": "length",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1614,
																"src": "1741:6:7",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "1737:10:7",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"nodeType": "BinaryOperation",
														"operator": "+",
														"rightExpression": {
															"hexValue": "31",
															"id": 1647,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "number",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "1750:1:7",
															"typeDescriptions": {
																"typeIdentifier": "t_rational_1_by_1",
																"typeString": "int_const 1"
															},
															"value": "1"
														},
														"src": "1737:14:7",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "VariableDeclarationStatement",
													"src": "1725:26:7"
												},
												"loopExpression": {
													"expression": {
														"id": 1654,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"nodeType": "UnaryOperation",
														"operator": "--",
														"prefix": true,
														"src": "1760:3:7",
														"subExpression": {
															"id": 1653,
															"name": "i",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1643,
															"src": "1762:1:7",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"id": 1655,
													"nodeType": "ExpressionStatement",
													"src": "1760:3:7"
												},
												"nodeType": "ForStatement",
												"src": "1720:128:7"
											},
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 1675,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 1673,
																"name": "value",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1612,
																"src": "1865:5:7",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "==",
															"rightExpression": {
																"hexValue": "30",
																"id": 1674,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "1874:1:7",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															},
															"src": "1865:10:7",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "537472696e67733a20686578206c656e67746820696e73756666696369656e74",
															"id": 1676,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "1877:34:7",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_04fc88320d7c9f639317c75102c103ff0044d3075a5c627e24e76e5bbb2733c2",
																"typeString": "literal_string \"Strings: hex length insufficient\""
															},
															"value": "Strings: hex length insufficient"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_04fc88320d7c9f639317c75102c103ff0044d3075a5c627e24e76e5bbb2733c2",
																"typeString": "literal_string \"Strings: hex length insufficient\""
															}
														],
														"id": 1672,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "1857:7:7",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 1677,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1857:55:7",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1678,
												"nodeType": "ExpressionStatement",
												"src": "1857:55:7"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 1681,
															"name": "buffer",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1620,
															"src": "1936:6:7",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														],
														"id": 1680,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"lValueRequested": false,
														"nodeType": "ElementaryTypeNameExpression",
														"src": "1929:6:7",
														"typeDescriptions": {
															"typeIdentifier": "t_type$_t_string_storage_ptr_$",
															"typeString": "type(string storage pointer)"
														},
														"typeName": {
															"id": 1679,
															"name": "string",
															"nodeType": "ElementaryTypeName",
															"src": "1929:6:7",
															"typeDescriptions": {}
														}
													},
													"id": 1682,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "typeConversion",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1929:14:7",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_string_memory_ptr",
														"typeString": "string memory"
													}
												},
												"functionReturnParameters": 1618,
												"id": 1683,
												"nodeType": "Return",
												"src": "1922:21:7"
											}
										]
									},
									"documentation": {
										"id": 1610,
										"nodeType": "StructuredDocumentation",
										"src": "1396:112:7",
										"text": " @dev Converts a `uint256` to its ASCII `string` hexadecimal representation with fixed length."
									},
									"id": 1685,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "toHexString",
									"nameLocation": "1522:11:7",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1615,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1612,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "1542:5:7",
												"nodeType": "VariableDeclaration",
												"scope": 1685,
												"src": "1534:13:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1611,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1534:7:7",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1614,
												"mutability": "mutable",
												"name": "length",
												"nameLocation": "1557:6:7",
												"nodeType": "VariableDeclaration",
												"scope": 1685,
												"src": "1549:14:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1613,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1549:7:7",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1533:31:7"
									},
									"returnParameters": {
										"id": 1618,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1617,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1685,
												"src": "1588:13:7",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 1616,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "1588:6:7",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1587:15:7"
									},
									"scope": 1706,
									"src": "1513:437:7",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1704,
										"nodeType": "Block",
										"src": "2175:76:7",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"arguments": [
																{
																	"arguments": [
																		{
																			"id": 1698,
																			"name": "addr",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1688,
																			"src": "2220:4:7",
																			"typeDescriptions": {
																				"typeIdentifier": "t_address",
																				"typeString": "address"
																			}
																		}
																	],
																	"expression": {
																		"argumentTypes": [
																			{
																				"typeIdentifier": "t_address",
																				"typeString": "address"
																			}
																		],
																		"id": 1697,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"lValueRequested": false,
																		"nodeType": "ElementaryTypeNameExpression",
																		"src": "2212:7:7",
																		"typeDescriptions": {
																			"typeIdentifier": "t_type$_t_uint160_$",
																			"typeString": "type(uint160)"
																		},
																		"typeName": {
																			"id": 1696,
																			"name": "uint160",
																			"nodeType": "ElementaryTypeName",
																			"src": "2212:7:7",
																			"typeDescriptions": {}
																		}
																	},
																	"id": 1699,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"kind": "typeConversion",
																	"lValueRequested": false,
																	"nameLocations": [],
																	"names": [],
																	"nodeType": "FunctionCall",
																	"src": "2212:13:7",
																	"tryCall": false,
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint160",
																		"typeString": "uint160"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_uint160",
																		"typeString": "uint160"
																	}
																],
																"id": 1695,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "2204:7:7",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_uint256_$",
																	"typeString": "type(uint256)"
																},
																"typeName": {
																	"id": 1694,
																	"name": "uint256",
																	"nodeType": "ElementaryTypeName",
																	"src": "2204:7:7",
																	"typeDescriptions": {}
																}
															},
															"id": 1700,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "typeConversion",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "2204:22:7",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														{
															"id": 1701,
															"name": "_ADDRESS_LENGTH",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1541,
															"src": "2228:15:7",
															"typeDescriptions": {
																"typeIdentifier": "t_uint8",
																"typeString": "uint8"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															{
																"typeIdentifier": "t_uint8",
																"typeString": "uint8"
															}
														],
														"id": 1693,
														"name": "toHexString",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															1609,
															1685,
															1705
														],
														"referencedDeclaration": 1685,
														"src": "2192:11:7",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_string_memory_ptr_$",
															"typeString": "function (uint256,uint256) pure returns (string memory)"
														}
													},
													"id": 1702,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2192:52:7",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_string_memory_ptr",
														"typeString": "string memory"
													}
												},
												"functionReturnParameters": 1692,
												"id": 1703,
												"nodeType": "Return",
												"src": "2185:59:7"
											}
										]
									},
									"documentation": {
										"id": 1686,
										"nodeType": "StructuredDocumentation",
										"src": "1956:141:7",
										"text": " @dev Converts an `address` with fixed length of 20 bytes to its not checksummed ASCII `string` hexadecimal representation."
									},
									"id": 1705,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "toHexString",
									"nameLocation": "2111:11:7",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1689,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1688,
												"mutability": "mutable",
												"name": "addr",
												"nameLocation": "2131:4:7",
												"nodeType": "VariableDeclaration",
												"scope": 1705,
												"src": "2123:12:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1687,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2123:7:7",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2122:14:7"
									},
									"returnParameters": {
										"id": 1692,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1691,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1705,
												"src": "2160:13:7",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 1690,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "2160:6:7",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2159:15:7"
									},
									"scope": 1706,
									"src": "2102:149:7",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								}
							],
							"scope": 1707,
							"src": "188:2065:7",
							"usedErrors": [],
							"usedEvents": []
						}
					],
					"src": "101:2153:7"
				},
				"id": 7
			},
			"@openzeppelin/contracts/utils/introspection/ERC165.sol": {
				"ast": {
					"absolutePath": "@openzeppelin/contracts/utils/introspection/ERC165.sol",
					"exportedSymbols": {
						"ERC165": [
							1730
						],
						"IERC165": [
							1742
						]
					},
					"id": 1731,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 1708,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".0"
							],
							"nodeType": "PragmaDirective",
							"src": "99:23:8"
						},
						{
							"absolutePath": "@openzeppelin/contracts/utils/introspection/IERC165.sol",
							"file": "./IERC165.sol",
							"id": 1709,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 1731,
							"sourceUnit": 1743,
							"src": "124:23:8",
							"symbolAliases": [],
							"unitAlias": ""
						},
						{
							"abstract": true,
							"baseContracts": [
								{
									"baseName": {
										"id": 1711,
										"name": "IERC165",
										"nameLocations": [
											"754:7:8"
										],
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 1742,
										"src": "754:7:8"
									},
									"id": 1712,
									"nodeType": "InheritanceSpecifier",
									"src": "754:7:8"
								}
							],
							"canonicalName": "ERC165",
							"contractDependencies": [],
							"contractKind": "contract",
							"documentation": {
								"id": 1710,
								"nodeType": "StructuredDocumentation",
								"src": "149:576:8",
								"text": " @dev Implementation of the {IERC165} interface.\n Contracts that want to implement ERC165 should inherit from this contract and override {supportsInterface} to check\n for the additional interface id that will be supported. For example:\n ```solidity\n function supportsInterface(bytes4 interfaceId) public view virtual override returns (bool) {\n     return interfaceId == type(MyInterface).interfaceId || super.supportsInterface(interfaceId);\n }\n ```\n Alternatively, {ERC165Storage} provides an easier to use but more expensive implementation."
							},
							"fullyImplemented": true,
							"id": 1730,
							"linearizedBaseContracts": [
								1730,
								1742
							],
							"name": "ERC165",
							"nameLocation": "744:6:8",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"baseFunctions": [
										1741
									],
									"body": {
										"id": 1728,
										"nodeType": "Block",
										"src": "920:64:8",
										"statements": [
											{
												"expression": {
													"commonType": {
														"typeIdentifier": "t_bytes4",
														"typeString": "bytes4"
													},
													"id": 1726,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 1721,
														"name": "interfaceId",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1715,
														"src": "937:11:8",
														"typeDescriptions": {
															"typeIdentifier": "t_bytes4",
															"typeString": "bytes4"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "==",
													"rightExpression": {
														"expression": {
															"arguments": [
																{
																	"id": 1723,
																	"name": "IERC165",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1742,
																	"src": "957:7:8",
																	"typeDescriptions": {
																		"typeIdentifier": "t_type$_t_contract$_IERC165_$1742_$",
																		"typeString": "type(contract IERC165)"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_type$_t_contract$_IERC165_$1742_$",
																		"typeString": "type(contract IERC165)"
																	}
																],
																"id": 1722,
																"name": "type",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 4294967269,
																"src": "952:4:8",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_metatype_pure$__$returns$__$",
																	"typeString": "function () pure"
																}
															},
															"id": 1724,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "functionCall",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "952:13:8",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_magic_meta_type_t_contract$_IERC165_$1742",
																"typeString": "type(contract IERC165)"
															}
														},
														"id": 1725,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"lValueRequested": false,
														"memberLocation": "966:11:8",
														"memberName": "interfaceId",
														"nodeType": "MemberAccess",
														"src": "952:25:8",
														"typeDescriptions": {
															"typeIdentifier": "t_bytes4",
															"typeString": "bytes4"
														}
													},
													"src": "937:40:8",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"functionReturnParameters": 1720,
												"id": 1727,
												"nodeType": "Return",
												"src": "930:47:8"
											}
										]
									},
									"documentation": {
										"id": 1713,
										"nodeType": "StructuredDocumentation",
										"src": "768:56:8",
										"text": " @dev See {IERC165-supportsInterface}."
									},
									"functionSelector": "01ffc9a7",
									"id": 1729,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "supportsInterface",
									"nameLocation": "838:17:8",
									"nodeType": "FunctionDefinition",
									"overrides": {
										"id": 1717,
										"nodeType": "OverrideSpecifier",
										"overrides": [],
										"src": "896:8:8"
									},
									"parameters": {
										"id": 1716,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1715,
												"mutability": "mutable",
												"name": "interfaceId",
												"nameLocation": "863:11:8",
												"nodeType": "VariableDeclaration",
												"scope": 1729,
												"src": "856:18:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes4",
													"typeString": "bytes4"
												},
												"typeName": {
													"id": 1714,
													"name": "bytes4",
													"nodeType": "ElementaryTypeName",
													"src": "856:6:8",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes4",
														"typeString": "bytes4"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "855:20:8"
									},
									"returnParameters": {
										"id": 1720,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1719,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1729,
												"src": "914:4:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 1718,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "914:4:8",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "913:6:8"
									},
									"scope": 1730,
									"src": "829:155:8",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "public"
								}
							],
							"scope": 1731,
							"src": "726:260:8",
							"usedErrors": [],
							"usedEvents": []
						}
					],
					"src": "99:888:8"
				},
				"id": 8
			},
			"@openzeppelin/contracts/utils/introspection/IERC165.sol": {
				"ast": {
					"absolutePath": "@openzeppelin/contracts/utils/introspection/IERC165.sol",
					"exportedSymbols": {
						"IERC165": [
							1742
						]
					},
					"id": 1743,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 1732,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".0"
							],
							"nodeType": "PragmaDirective",
							"src": "100:23:9"
						},
						{
							"abstract": false,
							"baseContracts": [],
							"canonicalName": "IERC165",
							"contractDependencies": [],
							"contractKind": "interface",
							"documentation": {
								"id": 1733,
								"nodeType": "StructuredDocumentation",
								"src": "125:279:9",
								"text": " @dev Interface of the ERC165 standard, as defined in the\n https://eips.ethereum.org/EIPS/eip-165[EIP].\n Implementers can declare support of contract interfaces, which can then be\n queried by others ({ERC165Checker}).\n For an implementation, see {ERC165}."
							},
							"fullyImplemented": false,
							"id": 1742,
							"linearizedBaseContracts": [
								1742
							],
							"name": "IERC165",
							"nameLocation": "415:7:9",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"documentation": {
										"id": 1734,
										"nodeType": "StructuredDocumentation",
										"src": "429:340:9",
										"text": " @dev Returns true if this contract implements the interface defined by\n `interfaceId`. See the corresponding\n https://eips.ethereum.org/EIPS/eip-165#how-interfaces-are-identified[EIP section]\n to learn more about how these ids are created.\n This function call must use less than 30 000 gas."
									},
									"functionSelector": "01ffc9a7",
									"id": 1741,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "supportsInterface",
									"nameLocation": "783:17:9",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1737,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1736,
												"mutability": "mutable",
												"name": "interfaceId",
												"nameLocation": "808:11:9",
												"nodeType": "VariableDeclaration",
												"scope": 1741,
												"src": "801:18:9",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes4",
													"typeString": "bytes4"
												},
												"typeName": {
													"id": 1735,
													"name": "bytes4",
													"nodeType": "ElementaryTypeName",
													"src": "801:6:9",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes4",
														"typeString": "bytes4"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "800:20:9"
									},
									"returnParameters": {
										"id": 1740,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1739,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1741,
												"src": "844:4:9",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 1738,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "844:4:9",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "843:6:9"
									},
									"scope": 1742,
									"src": "774:76:9",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								}
							],
							"scope": 1743,
							"src": "405:447:9",
							"usedErrors": [],
							"usedEvents": []
						}
					],
					"src": "100:753:9"
				},
				"id": 9
			},
			"@openzeppelin/contracts/utils/math/Math.sol": {
				"ast": {
					"absolutePath": "@openzeppelin/contracts/utils/math/Math.sol",
					"exportedSymbols": {
						"Math": [
							2607
						]
					},
					"id": 2608,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 1744,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".0"
							],
							"nodeType": "PragmaDirective",
							"src": "103:23:10"
						},
						{
							"abstract": false,
							"baseContracts": [],
							"canonicalName": "Math",
							"contractDependencies": [],
							"contractKind": "library",
							"documentation": {
								"id": 1745,
								"nodeType": "StructuredDocumentation",
								"src": "128:73:10",
								"text": " @dev Standard math utilities missing in the Solidity language."
							},
							"fullyImplemented": true,
							"id": 2607,
							"linearizedBaseContracts": [
								2607
							],
							"name": "Math",
							"nameLocation": "210:4:10",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"canonicalName": "Math.Rounding",
									"id": 1749,
									"members": [
										{
											"id": 1746,
											"name": "Down",
											"nameLocation": "245:4:10",
											"nodeType": "EnumValue",
											"src": "245:4:10"
										},
										{
											"id": 1747,
											"name": "Up",
											"nameLocation": "287:2:10",
											"nodeType": "EnumValue",
											"src": "287:2:10"
										},
										{
											"id": 1748,
											"name": "Zero",
											"nameLocation": "318:4:10",
											"nodeType": "EnumValue",
											"src": "318:4:10"
										}
									],
									"name": "Rounding",
									"nameLocation": "226:8:10",
									"nodeType": "EnumDefinition",
									"src": "221:122:10"
								},
								{
									"body": {
										"id": 1766,
										"nodeType": "Block",
										"src": "480:37:10",
										"statements": [
											{
												"expression": {
													"condition": {
														"commonType": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"id": 1761,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftExpression": {
															"id": 1759,
															"name": "a",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1752,
															"src": "497:1:10",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"nodeType": "BinaryOperation",
														"operator": ">",
														"rightExpression": {
															"id": 1760,
															"name": "b",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1754,
															"src": "501:1:10",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"src": "497:5:10",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"falseExpression": {
														"id": 1763,
														"name": "b",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1754,
														"src": "509:1:10",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"id": 1764,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "Conditional",
													"src": "497:13:10",
													"trueExpression": {
														"id": 1762,
														"name": "a",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1752,
														"src": "505:1:10",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 1758,
												"id": 1765,
												"nodeType": "Return",
												"src": "490:20:10"
											}
										]
									},
									"documentation": {
										"id": 1750,
										"nodeType": "StructuredDocumentation",
										"src": "349:59:10",
										"text": " @dev Returns the largest of two numbers."
									},
									"id": 1767,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "max",
									"nameLocation": "422:3:10",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1755,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1752,
												"mutability": "mutable",
												"name": "a",
												"nameLocation": "434:1:10",
												"nodeType": "VariableDeclaration",
												"scope": 1767,
												"src": "426:9:10",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1751,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "426:7:10",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1754,
												"mutability": "mutable",
												"name": "b",
												"nameLocation": "445:1:10",
												"nodeType": "VariableDeclaration",
												"scope": 1767,
												"src": "437:9:10",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1753,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "437:7:10",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "425:22:10"
									},
									"returnParameters": {
										"id": 1758,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1757,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1767,
												"src": "471:7:10",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1756,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "471:7:10",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "470:9:10"
									},
									"scope": 2607,
									"src": "413:104:10",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1784,
										"nodeType": "Block",
										"src": "655:37:10",
										"statements": [
											{
												"expression": {
													"condition": {
														"commonType": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"id": 1779,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftExpression": {
															"id": 1777,
															"name": "a",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1770,
															"src": "672:1:10",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"nodeType": "BinaryOperation",
														"operator": "<",
														"rightExpression": {
															"id": 1778,
															"name": "b",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1772,
															"src": "676:1:10",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"src": "672:5:10",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"falseExpression": {
														"id": 1781,
														"name": "b",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1772,
														"src": "684:1:10",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"id": 1782,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "Conditional",
													"src": "672:13:10",
													"trueExpression": {
														"id": 1780,
														"name": "a",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1770,
														"src": "680:1:10",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 1776,
												"id": 1783,
												"nodeType": "Return",
												"src": "665:20:10"
											}
										]
									},
									"documentation": {
										"id": 1768,
										"nodeType": "StructuredDocumentation",
										"src": "523:60:10",
										"text": " @dev Returns the smallest of two numbers."
									},
									"id": 1785,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "min",
									"nameLocation": "597:3:10",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1773,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1770,
												"mutability": "mutable",
												"name": "a",
												"nameLocation": "609:1:10",
												"nodeType": "VariableDeclaration",
												"scope": 1785,
												"src": "601:9:10",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1769,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "601:7:10",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1772,
												"mutability": "mutable",
												"name": "b",
												"nameLocation": "620:1:10",
												"nodeType": "VariableDeclaration",
												"scope": 1785,
												"src": "612:9:10",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1771,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "612:7:10",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "600:22:10"
									},
									"returnParameters": {
										"id": 1776,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1775,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1785,
												"src": "646:7:10",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1774,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "646:7:10",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "645:9:10"
									},
									"scope": 2607,
									"src": "588:104:10",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1807,
										"nodeType": "Block",
										"src": "876:82:10",
										"statements": [
											{
												"expression": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 1805,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"components": [
															{
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 1797,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"id": 1795,
																	"name": "a",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1788,
																	"src": "931:1:10",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": "&",
																"rightExpression": {
																	"id": 1796,
																	"name": "b",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1790,
																	"src": "935:1:10",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "931:5:10",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															}
														],
														"id": 1798,
														"isConstant": false,
														"isInlineArray": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"nodeType": "TupleExpression",
														"src": "930:7:10",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "+",
													"rightExpression": {
														"commonType": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"id": 1804,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftExpression": {
															"components": [
																{
																	"commonType": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	"id": 1801,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"leftExpression": {
																		"id": 1799,
																		"name": "a",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1788,
																		"src": "941:1:10",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"nodeType": "BinaryOperation",
																	"operator": "^",
																	"rightExpression": {
																		"id": 1800,
																		"name": "b",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1790,
																		"src": "945:1:10",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"src": "941:5:10",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																}
															],
															"id": 1802,
															"isConstant": false,
															"isInlineArray": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"nodeType": "TupleExpression",
															"src": "940:7:10",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"nodeType": "BinaryOperation",
														"operator": "/",
														"rightExpression": {
															"hexValue": "32",
															"id": 1803,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "number",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "950:1:10",
															"typeDescriptions": {
																"typeIdentifier": "t_rational_2_by_1",
																"typeString": "int_const 2"
															},
															"value": "2"
														},
														"src": "940:11:10",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "930:21:10",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 1794,
												"id": 1806,
												"nodeType": "Return",
												"src": "923:28:10"
											}
										]
									},
									"documentation": {
										"id": 1786,
										"nodeType": "StructuredDocumentation",
										"src": "698:102:10",
										"text": " @dev Returns the average of two numbers. The result is rounded towards\n zero."
									},
									"id": 1808,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "average",
									"nameLocation": "814:7:10",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1791,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1788,
												"mutability": "mutable",
												"name": "a",
												"nameLocation": "830:1:10",
												"nodeType": "VariableDeclaration",
												"scope": 1808,
												"src": "822:9:10",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1787,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "822:7:10",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1790,
												"mutability": "mutable",
												"name": "b",
												"nameLocation": "841:1:10",
												"nodeType": "VariableDeclaration",
												"scope": 1808,
												"src": "833:9:10",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1789,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "833:7:10",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "821:22:10"
									},
									"returnParameters": {
										"id": 1794,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1793,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1808,
												"src": "867:7:10",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1792,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "867:7:10",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "866:9:10"
									},
									"scope": 2607,
									"src": "805:153:10",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1832,
										"nodeType": "Block",
										"src": "1228:123:10",
										"statements": [
											{
												"expression": {
													"condition": {
														"commonType": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"id": 1820,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftExpression": {
															"id": 1818,
															"name": "a",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1811,
															"src": "1316:1:10",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"nodeType": "BinaryOperation",
														"operator": "==",
														"rightExpression": {
															"hexValue": "30",
															"id": 1819,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "number",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "1321:1:10",
															"typeDescriptions": {
																"typeIdentifier": "t_rational_0_by_1",
																"typeString": "int_const 0"
															},
															"value": "0"
														},
														"src": "1316:6:10",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"falseExpression": {
														"commonType": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"id": 1829,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftExpression": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 1827,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"components": [
																	{
																		"commonType": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		},
																		"id": 1824,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftExpression": {
																			"id": 1822,
																			"name": "a",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1811,
																			"src": "1330:1:10",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "BinaryOperation",
																		"operator": "-",
																		"rightExpression": {
																			"hexValue": "31",
																			"id": 1823,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "1334:1:10",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_1_by_1",
																				"typeString": "int_const 1"
																			},
																			"value": "1"
																		},
																		"src": "1330:5:10",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	}
																],
																"id": 1825,
																"isConstant": false,
																"isInlineArray": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"nodeType": "TupleExpression",
																"src": "1329:7:10",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "/",
															"rightExpression": {
																"id": 1826,
																"name": "b",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1813,
																"src": "1339:1:10",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "1329:11:10",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"nodeType": "BinaryOperation",
														"operator": "+",
														"rightExpression": {
															"hexValue": "31",
															"id": 1828,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "number",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "1343:1:10",
															"typeDescriptions": {
																"typeIdentifier": "t_rational_1_by_1",
																"typeString": "int_const 1"
															},
															"value": "1"
														},
														"src": "1329:15:10",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"id": 1830,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "Conditional",
													"src": "1316:28:10",
													"trueExpression": {
														"hexValue": "30",
														"id": 1821,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "1325:1:10",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_0_by_1",
															"typeString": "int_const 0"
														},
														"value": "0"
													},
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 1817,
												"id": 1831,
												"nodeType": "Return",
												"src": "1309:35:10"
											}
										]
									},
									"documentation": {
										"id": 1809,
										"nodeType": "StructuredDocumentation",
										"src": "964:188:10",
										"text": " @dev Returns the ceiling of the division of two numbers.\n This differs from standard division with `/` in that it rounds up instead\n of rounding down."
									},
									"id": 1833,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "ceilDiv",
									"nameLocation": "1166:7:10",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1814,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1811,
												"mutability": "mutable",
												"name": "a",
												"nameLocation": "1182:1:10",
												"nodeType": "VariableDeclaration",
												"scope": 1833,
												"src": "1174:9:10",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1810,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1174:7:10",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1813,
												"mutability": "mutable",
												"name": "b",
												"nameLocation": "1193:1:10",
												"nodeType": "VariableDeclaration",
												"scope": 1833,
												"src": "1185:9:10",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1812,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1185:7:10",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1173:22:10"
									},
									"returnParameters": {
										"id": 1817,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1816,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1833,
												"src": "1219:7:10",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1815,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1219:7:10",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1218:9:10"
									},
									"scope": 2607,
									"src": "1157:194:10",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1954,
										"nodeType": "Block",
										"src": "1795:3797:10",
										"statements": [
											{
												"id": 1953,
												"nodeType": "UncheckedBlock",
												"src": "1805:3781:10",
												"statements": [
													{
														"assignments": [
															1846
														],
														"declarations": [
															{
																"constant": false,
																"id": 1846,
																"mutability": "mutable",
																"name": "prod0",
																"nameLocation": "2134:5:10",
																"nodeType": "VariableDeclaration",
																"scope": 1953,
																"src": "2126:13:10",
																"stateVariable": false,
																"storageLocation": "default",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"typeName": {
																	"id": 1845,
																	"name": "uint256",
																	"nodeType": "ElementaryTypeName",
																	"src": "2126:7:10",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"visibility": "internal"
															}
														],
														"id": 1847,
														"nodeType": "VariableDeclarationStatement",
														"src": "2126:13:10"
													},
													{
														"assignments": [
															1849
														],
														"declarations": [
															{
																"constant": false,
																"id": 1849,
																"mutability": "mutable",
																"name": "prod1",
																"nameLocation": "2206:5:10",
																"nodeType": "VariableDeclaration",
																"scope": 1953,
																"src": "2198:13:10",
																"stateVariable": false,
																"storageLocation": "default",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"typeName": {
																	"id": 1848,
																	"name": "uint256",
																	"nodeType": "ElementaryTypeName",
																	"src": "2198:7:10",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"visibility": "internal"
															}
														],
														"id": 1850,
														"nodeType": "VariableDeclarationStatement",
														"src": "2198:13:10"
													},
													{
														"AST": {
															"nativeSrc": "2278:157:10",
															"nodeType": "YulBlock",
															"src": "2278:157:10",
															"statements": [
																{
																	"nativeSrc": "2296:30:10",
																	"nodeType": "YulVariableDeclaration",
																	"src": "2296:30:10",
																	"value": {
																		"arguments": [
																			{
																				"name": "x",
																				"nativeSrc": "2313:1:10",
																				"nodeType": "YulIdentifier",
																				"src": "2313:1:10"
																			},
																			{
																				"name": "y",
																				"nativeSrc": "2316:1:10",
																				"nodeType": "YulIdentifier",
																				"src": "2316:1:10"
																			},
																			{
																				"arguments": [
																					{
																						"kind": "number",
																						"nativeSrc": "2323:1:10",
																						"nodeType": "YulLiteral",
																						"src": "2323:1:10",
																						"type": "",
																						"value": "0"
																					}
																				],
																				"functionName": {
																					"name": "not",
																					"nativeSrc": "2319:3:10",
																					"nodeType": "YulIdentifier",
																					"src": "2319:3:10"
																				},
																				"nativeSrc": "2319:6:10",
																				"nodeType": "YulFunctionCall",
																				"src": "2319:6:10"
																			}
																		],
																		"functionName": {
																			"name": "mulmod",
																			"nativeSrc": "2306:6:10",
																			"nodeType": "YulIdentifier",
																			"src": "2306:6:10"
																		},
																		"nativeSrc": "2306:20:10",
																		"nodeType": "YulFunctionCall",
																		"src": "2306:20:10"
																	},
																	"variables": [
																		{
																			"name": "mm",
																			"nativeSrc": "2300:2:10",
																			"nodeType": "YulTypedName",
																			"src": "2300:2:10",
																			"type": ""
																		}
																	]
																},
																{
																	"nativeSrc": "2343:18:10",
																	"nodeType": "YulAssignment",
																	"src": "2343:18:10",
																	"value": {
																		"arguments": [
																			{
																				"name": "x",
																				"nativeSrc": "2356:1:10",
																				"nodeType": "YulIdentifier",
																				"src": "2356:1:10"
																			},
																			{
																				"name": "y",
																				"nativeSrc": "2359:1:10",
																				"nodeType": "YulIdentifier",
																				"src": "2359:1:10"
																			}
																		],
																		"functionName": {
																			"name": "mul",
																			"nativeSrc": "2352:3:10",
																			"nodeType": "YulIdentifier",
																			"src": "2352:3:10"
																		},
																		"nativeSrc": "2352:9:10",
																		"nodeType": "YulFunctionCall",
																		"src": "2352:9:10"
																	},
																	"variableNames": [
																		{
																			"name": "prod0",
																			"nativeSrc": "2343:5:10",
																			"nodeType": "YulIdentifier",
																			"src": "2343:5:10"
																		}
																	]
																},
																{
																	"nativeSrc": "2378:43:10",
																	"nodeType": "YulAssignment",
																	"src": "2378:43:10",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "mm",
																						"nativeSrc": "2395:2:10",
																						"nodeType": "YulIdentifier",
																						"src": "2395:2:10"
																					},
																					{
																						"name": "prod0",
																						"nativeSrc": "2399:5:10",
																						"nodeType": "YulIdentifier",
																						"src": "2399:5:10"
																					}
																				],
																				"functionName": {
																					"name": "sub",
																					"nativeSrc": "2391:3:10",
																					"nodeType": "YulIdentifier",
																					"src": "2391:3:10"
																				},
																				"nativeSrc": "2391:14:10",
																				"nodeType": "YulFunctionCall",
																				"src": "2391:14:10"
																			},
																			{
																				"arguments": [
																					{
																						"name": "mm",
																						"nativeSrc": "2410:2:10",
																						"nodeType": "YulIdentifier",
																						"src": "2410:2:10"
																					},
																					{
																						"name": "prod0",
																						"nativeSrc": "2414:5:10",
																						"nodeType": "YulIdentifier",
																						"src": "2414:5:10"
																					}
																				],
																				"functionName": {
																					"name": "lt",
																					"nativeSrc": "2407:2:10",
																					"nodeType": "YulIdentifier",
																					"src": "2407:2:10"
																				},
																				"nativeSrc": "2407:13:10",
																				"nodeType": "YulFunctionCall",
																				"src": "2407:13:10"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "2387:3:10",
																			"nodeType": "YulIdentifier",
																			"src": "2387:3:10"
																		},
																		"nativeSrc": "2387:34:10",
																		"nodeType": "YulFunctionCall",
																		"src": "2387:34:10"
																	},
																	"variableNames": [
																		{
																			"name": "prod1",
																			"nativeSrc": "2378:5:10",
																			"nodeType": "YulIdentifier",
																			"src": "2378:5:10"
																		}
																	]
																}
															]
														},
														"evmVersion": "shanghai",
														"externalReferences": [
															{
																"declaration": 1846,
																"isOffset": false,
																"isSlot": false,
																"src": "2343:5:10",
																"valueSize": 1
															},
															{
																"declaration": 1846,
																"isOffset": false,
																"isSlot": false,
																"src": "2399:5:10",
																"valueSize": 1
															},
															{
																"declaration": 1846,
																"isOffset": false,
																"isSlot": false,
																"src": "2414:5:10",
																"valueSize": 1
															},
															{
																"declaration": 1849,
																"isOffset": false,
																"isSlot": false,
																"src": "2378:5:10",
																"valueSize": 1
															},
															{
																"declaration": 1836,
																"isOffset": false,
																"isSlot": false,
																"src": "2313:1:10",
																"valueSize": 1
															},
															{
																"declaration": 1836,
																"isOffset": false,
																"isSlot": false,
																"src": "2356:1:10",
																"valueSize": 1
															},
															{
																"declaration": 1838,
																"isOffset": false,
																"isSlot": false,
																"src": "2316:1:10",
																"valueSize": 1
															},
															{
																"declaration": 1838,
																"isOffset": false,
																"isSlot": false,
																"src": "2359:1:10",
																"valueSize": 1
															}
														],
														"id": 1851,
														"nodeType": "InlineAssembly",
														"src": "2269:166:10"
													},
													{
														"condition": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 1854,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 1852,
																"name": "prod1",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1849,
																"src": "2516:5:10",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "==",
															"rightExpression": {
																"hexValue": "30",
																"id": 1853,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "2525:1:10",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															},
															"src": "2516:10:10",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"id": 1860,
														"nodeType": "IfStatement",
														"src": "2512:75:10",
														"trueBody": {
															"id": 1859,
															"nodeType": "Block",
															"src": "2528:59:10",
															"statements": [
																{
																	"expression": {
																		"commonType": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		},
																		"id": 1857,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftExpression": {
																			"id": 1855,
																			"name": "prod0",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1846,
																			"src": "2553:5:10",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "BinaryOperation",
																		"operator": "/",
																		"rightExpression": {
																			"id": 1856,
																			"name": "denominator",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1840,
																			"src": "2561:11:10",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"src": "2553:19:10",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"functionReturnParameters": 1844,
																	"id": 1858,
																	"nodeType": "Return",
																	"src": "2546:26:10"
																}
															]
														}
													},
													{
														"expression": {
															"arguments": [
																{
																	"commonType": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	"id": 1864,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"leftExpression": {
																		"id": 1862,
																		"name": "denominator",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1840,
																		"src": "2697:11:10",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"nodeType": "BinaryOperation",
																	"operator": ">",
																	"rightExpression": {
																		"id": 1863,
																		"name": "prod1",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1849,
																		"src": "2711:5:10",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"src": "2697:19:10",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bool",
																		"typeString": "bool"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_bool",
																		"typeString": "bool"
																	}
																],
																"id": 1861,
																"name": "require",
																"nodeType": "Identifier",
																"overloadedDeclarations": [
																	4294967278,
																	4294967278
																],
																"referencedDeclaration": 4294967278,
																"src": "2689:7:10",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_require_pure$_t_bool_$returns$__$",
																	"typeString": "function (bool) pure"
																}
															},
															"id": 1865,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "2689:28:10",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_tuple$__$",
																"typeString": "tuple()"
															}
														},
														"id": 1866,
														"nodeType": "ExpressionStatement",
														"src": "2689:28:10"
													},
													{
														"assignments": [
															1868
														],
														"declarations": [
															{
																"constant": false,
																"id": 1868,
																"mutability": "mutable",
																"name": "remainder",
																"nameLocation": "2981:9:10",
																"nodeType": "VariableDeclaration",
																"scope": 1953,
																"src": "2973:17:10",
																"stateVariable": false,
																"storageLocation": "default",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"typeName": {
																	"id": 1867,
																	"name": "uint256",
																	"nodeType": "ElementaryTypeName",
																	"src": "2973:7:10",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"visibility": "internal"
															}
														],
														"id": 1869,
														"nodeType": "VariableDeclarationStatement",
														"src": "2973:17:10"
													},
													{
														"AST": {
															"nativeSrc": "3013:291:10",
															"nodeType": "YulBlock",
															"src": "3013:291:10",
															"statements": [
																{
																	"nativeSrc": "3082:38:10",
																	"nodeType": "YulAssignment",
																	"src": "3082:38:10",
																	"value": {
																		"arguments": [
																			{
																				"name": "x",
																				"nativeSrc": "3102:1:10",
																				"nodeType": "YulIdentifier",
																				"src": "3102:1:10"
																			},
																			{
																				"name": "y",
																				"nativeSrc": "3105:1:10",
																				"nodeType": "YulIdentifier",
																				"src": "3105:1:10"
																			},
																			{
																				"name": "denominator",
																				"nativeSrc": "3108:11:10",
																				"nodeType": "YulIdentifier",
																				"src": "3108:11:10"
																			}
																		],
																		"functionName": {
																			"name": "mulmod",
																			"nativeSrc": "3095:6:10",
																			"nodeType": "YulIdentifier",
																			"src": "3095:6:10"
																		},
																		"nativeSrc": "3095:25:10",
																		"nodeType": "YulFunctionCall",
																		"src": "3095:25:10"
																	},
																	"variableNames": [
																		{
																			"name": "remainder",
																			"nativeSrc": "3082:9:10",
																			"nodeType": "YulIdentifier",
																			"src": "3082:9:10"
																		}
																	]
																},
																{
																	"nativeSrc": "3202:41:10",
																	"nodeType": "YulAssignment",
																	"src": "3202:41:10",
																	"value": {
																		"arguments": [
																			{
																				"name": "prod1",
																				"nativeSrc": "3215:5:10",
																				"nodeType": "YulIdentifier",
																				"src": "3215:5:10"
																			},
																			{
																				"arguments": [
																					{
																						"name": "remainder",
																						"nativeSrc": "3225:9:10",
																						"nodeType": "YulIdentifier",
																						"src": "3225:9:10"
																					},
																					{
																						"name": "prod0",
																						"nativeSrc": "3236:5:10",
																						"nodeType": "YulIdentifier",
																						"src": "3236:5:10"
																					}
																				],
																				"functionName": {
																					"name": "gt",
																					"nativeSrc": "3222:2:10",
																					"nodeType": "YulIdentifier",
																					"src": "3222:2:10"
																				},
																				"nativeSrc": "3222:20:10",
																				"nodeType": "YulFunctionCall",
																				"src": "3222:20:10"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "3211:3:10",
																			"nodeType": "YulIdentifier",
																			"src": "3211:3:10"
																		},
																		"nativeSrc": "3211:32:10",
																		"nodeType": "YulFunctionCall",
																		"src": "3211:32:10"
																	},
																	"variableNames": [
																		{
																			"name": "prod1",
																			"nativeSrc": "3202:5:10",
																			"nodeType": "YulIdentifier",
																			"src": "3202:5:10"
																		}
																	]
																},
																{
																	"nativeSrc": "3260:30:10",
																	"nodeType": "YulAssignment",
																	"src": "3260:30:10",
																	"value": {
																		"arguments": [
																			{
																				"name": "prod0",
																				"nativeSrc": "3273:5:10",
																				"nodeType": "YulIdentifier",
																				"src": "3273:5:10"
																			},
																			{
																				"name": "remainder",
																				"nativeSrc": "3280:9:10",
																				"nodeType": "YulIdentifier",
																				"src": "3280:9:10"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "3269:3:10",
																			"nodeType": "YulIdentifier",
																			"src": "3269:3:10"
																		},
																		"nativeSrc": "3269:21:10",
																		"nodeType": "YulFunctionCall",
																		"src": "3269:21:10"
																	},
																	"variableNames": [
																		{
																			"name": "prod0",
																			"nativeSrc": "3260:5:10",
																			"nodeType": "YulIdentifier",
																			"src": "3260:5:10"
																		}
																	]
																}
															]
														},
														"evmVersion": "shanghai",
														"externalReferences": [
															{
																"declaration": 1840,
																"isOffset": false,
																"isSlot": false,
																"src": "3108:11:10",
																"valueSize": 1
															},
															{
																"declaration": 1846,
																"isOffset": false,
																"isSlot": false,
																"src": "3236:5:10",
																"valueSize": 1
															},
															{
																"declaration": 1846,
																"isOffset": false,
																"isSlot": false,
																"src": "3260:5:10",
																"valueSize": 1
															},
															{
																"declaration": 1846,
																"isOffset": false,
																"isSlot": false,
																"src": "3273:5:10",
																"valueSize": 1
															},
															{
																"declaration": 1849,
																"isOffset": false,
																"isSlot": false,
																"src": "3202:5:10",
																"valueSize": 1
															},
															{
																"declaration": 1849,
																"isOffset": false,
																"isSlot": false,
																"src": "3215:5:10",
																"valueSize": 1
															},
															{
																"declaration": 1868,
																"isOffset": false,
																"isSlot": false,
																"src": "3082:9:10",
																"valueSize": 1
															},
															{
																"declaration": 1868,
																"isOffset": false,
																"isSlot": false,
																"src": "3225:9:10",
																"valueSize": 1
															},
															{
																"declaration": 1868,
																"isOffset": false,
																"isSlot": false,
																"src": "3280:9:10",
																"valueSize": 1
															},
															{
																"declaration": 1836,
																"isOffset": false,
																"isSlot": false,
																"src": "3102:1:10",
																"valueSize": 1
															},
															{
																"declaration": 1838,
																"isOffset": false,
																"isSlot": false,
																"src": "3105:1:10",
																"valueSize": 1
															}
														],
														"id": 1870,
														"nodeType": "InlineAssembly",
														"src": "3004:300:10"
													},
													{
														"assignments": [
															1872
														],
														"declarations": [
															{
																"constant": false,
																"id": 1872,
																"mutability": "mutable",
																"name": "twos",
																"nameLocation": "3619:4:10",
																"nodeType": "VariableDeclaration",
																"scope": 1953,
																"src": "3611:12:10",
																"stateVariable": false,
																"storageLocation": "default",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"typeName": {
																	"id": 1871,
																	"name": "uint256",
																	"nodeType": "ElementaryTypeName",
																	"src": "3611:7:10",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"visibility": "internal"
															}
														],
														"id": 1880,
														"initialValue": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 1879,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 1873,
																"name": "denominator",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1840,
																"src": "3626:11:10",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "&",
															"rightExpression": {
																"components": [
																	{
																		"commonType": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		},
																		"id": 1877,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftExpression": {
																			"id": 1875,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"nodeType": "UnaryOperation",
																			"operator": "~",
																			"prefix": true,
																			"src": "3641:12:10",
																			"subExpression": {
																				"id": 1874,
																				"name": "denominator",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 1840,
																				"src": "3642:11:10",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "BinaryOperation",
																		"operator": "+",
																		"rightExpression": {
																			"hexValue": "31",
																			"id": 1876,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "3656:1:10",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_1_by_1",
																				"typeString": "int_const 1"
																			},
																			"value": "1"
																		},
																		"src": "3641:16:10",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	}
																],
																"id": 1878,
																"isConstant": false,
																"isInlineArray": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"nodeType": "TupleExpression",
																"src": "3640:18:10",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "3626:32:10",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"nodeType": "VariableDeclarationStatement",
														"src": "3611:47:10"
													},
													{
														"AST": {
															"nativeSrc": "3681:362:10",
															"nodeType": "YulBlock",
															"src": "3681:362:10",
															"statements": [
																{
																	"nativeSrc": "3746:37:10",
																	"nodeType": "YulAssignment",
																	"src": "3746:37:10",
																	"value": {
																		"arguments": [
																			{
																				"name": "denominator",
																				"nativeSrc": "3765:11:10",
																				"nodeType": "YulIdentifier",
																				"src": "3765:11:10"
																			},
																			{
																				"name": "twos",
																				"nativeSrc": "3778:4:10",
																				"nodeType": "YulIdentifier",
																				"src": "3778:4:10"
																			}
																		],
																		"functionName": {
																			"name": "div",
																			"nativeSrc": "3761:3:10",
																			"nodeType": "YulIdentifier",
																			"src": "3761:3:10"
																		},
																		"nativeSrc": "3761:22:10",
																		"nodeType": "YulFunctionCall",
																		"src": "3761:22:10"
																	},
																	"variableNames": [
																		{
																			"name": "denominator",
																			"nativeSrc": "3746:11:10",
																			"nodeType": "YulIdentifier",
																			"src": "3746:11:10"
																		}
																	]
																},
																{
																	"nativeSrc": "3850:25:10",
																	"nodeType": "YulAssignment",
																	"src": "3850:25:10",
																	"value": {
																		"arguments": [
																			{
																				"name": "prod0",
																				"nativeSrc": "3863:5:10",
																				"nodeType": "YulIdentifier",
																				"src": "3863:5:10"
																			},
																			{
																				"name": "twos",
																				"nativeSrc": "3870:4:10",
																				"nodeType": "YulIdentifier",
																				"src": "3870:4:10"
																			}
																		],
																		"functionName": {
																			"name": "div",
																			"nativeSrc": "3859:3:10",
																			"nodeType": "YulIdentifier",
																			"src": "3859:3:10"
																		},
																		"nativeSrc": "3859:16:10",
																		"nodeType": "YulFunctionCall",
																		"src": "3859:16:10"
																	},
																	"variableNames": [
																		{
																			"name": "prod0",
																			"nativeSrc": "3850:5:10",
																			"nodeType": "YulIdentifier",
																			"src": "3850:5:10"
																		}
																	]
																},
																{
																	"nativeSrc": "3990:39:10",
																	"nodeType": "YulAssignment",
																	"src": "3990:39:10",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"arguments": [
																							{
																								"kind": "number",
																								"nativeSrc": "4010:1:10",
																								"nodeType": "YulLiteral",
																								"src": "4010:1:10",
																								"type": "",
																								"value": "0"
																							},
																							{
																								"name": "twos",
																								"nativeSrc": "4013:4:10",
																								"nodeType": "YulIdentifier",
																								"src": "4013:4:10"
																							}
																						],
																						"functionName": {
																							"name": "sub",
																							"nativeSrc": "4006:3:10",
																							"nodeType": "YulIdentifier",
																							"src": "4006:3:10"
																						},
																						"nativeSrc": "4006:12:10",
																						"nodeType": "YulFunctionCall",
																						"src": "4006:12:10"
																					},
																					{
																						"name": "twos",
																						"nativeSrc": "4020:4:10",
																						"nodeType": "YulIdentifier",
																						"src": "4020:4:10"
																					}
																				],
																				"functionName": {
																					"name": "div",
																					"nativeSrc": "4002:3:10",
																					"nodeType": "YulIdentifier",
																					"src": "4002:3:10"
																				},
																				"nativeSrc": "4002:23:10",
																				"nodeType": "YulFunctionCall",
																				"src": "4002:23:10"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "4027:1:10",
																				"nodeType": "YulLiteral",
																				"src": "4027:1:10",
																				"type": "",
																				"value": "1"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "3998:3:10",
																			"nodeType": "YulIdentifier",
																			"src": "3998:3:10"
																		},
																		"nativeSrc": "3998:31:10",
																		"nodeType": "YulFunctionCall",
																		"src": "3998:31:10"
																	},
																	"variableNames": [
																		{
																			"name": "twos",
																			"nativeSrc": "3990:4:10",
																			"nodeType": "YulIdentifier",
																			"src": "3990:4:10"
																		}
																	]
																}
															]
														},
														"evmVersion": "shanghai",
														"externalReferences": [
															{
																"declaration": 1840,
																"isOffset": false,
																"isSlot": false,
																"src": "3746:11:10",
																"valueSize": 1
															},
															{
																"declaration": 1840,
																"isOffset": false,
																"isSlot": false,
																"src": "3765:11:10",
																"valueSize": 1
															},
															{
																"declaration": 1846,
																"isOffset": false,
																"isSlot": false,
																"src": "3850:5:10",
																"valueSize": 1
															},
															{
																"declaration": 1846,
																"isOffset": false,
																"isSlot": false,
																"src": "3863:5:10",
																"valueSize": 1
															},
															{
																"declaration": 1872,
																"isOffset": false,
																"isSlot": false,
																"src": "3778:4:10",
																"valueSize": 1
															},
															{
																"declaration": 1872,
																"isOffset": false,
																"isSlot": false,
																"src": "3870:4:10",
																"valueSize": 1
															},
															{
																"declaration": 1872,
																"isOffset": false,
																"isSlot": false,
																"src": "3990:4:10",
																"valueSize": 1
															},
															{
																"declaration": 1872,
																"isOffset": false,
																"isSlot": false,
																"src": "4013:4:10",
																"valueSize": 1
															},
															{
																"declaration": 1872,
																"isOffset": false,
																"isSlot": false,
																"src": "4020:4:10",
																"valueSize": 1
															}
														],
														"id": 1881,
														"nodeType": "InlineAssembly",
														"src": "3672:371:10"
													},
													{
														"expression": {
															"id": 1886,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftHandSide": {
																"id": 1882,
																"name": "prod0",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1846,
																"src": "4109:5:10",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "Assignment",
															"operator": "|=",
															"rightHandSide": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 1885,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"id": 1883,
																	"name": "prod1",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1849,
																	"src": "4118:5:10",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": "*",
																"rightExpression": {
																	"id": 1884,
																	"name": "twos",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1872,
																	"src": "4126:4:10",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "4118:12:10",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "4109:21:10",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"id": 1887,
														"nodeType": "ExpressionStatement",
														"src": "4109:21:10"
													},
													{
														"assignments": [
															1889
														],
														"declarations": [
															{
																"constant": false,
																"id": 1889,
																"mutability": "mutable",
																"name": "inverse",
																"nameLocation": "4456:7:10",
																"nodeType": "VariableDeclaration",
																"scope": 1953,
																"src": "4448:15:10",
																"stateVariable": false,
																"storageLocation": "default",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"typeName": {
																	"id": 1888,
																	"name": "uint256",
																	"nodeType": "ElementaryTypeName",
																	"src": "4448:7:10",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"visibility": "internal"
															}
														],
														"id": 1896,
														"initialValue": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 1895,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"components": [
																	{
																		"commonType": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		},
																		"id": 1892,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftExpression": {
																			"hexValue": "33",
																			"id": 1890,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "4467:1:10",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_3_by_1",
																				"typeString": "int_const 3"
																			},
																			"value": "3"
																		},
																		"nodeType": "BinaryOperation",
																		"operator": "*",
																		"rightExpression": {
																			"id": 1891,
																			"name": "denominator",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1840,
																			"src": "4471:11:10",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"src": "4467:15:10",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	}
																],
																"id": 1893,
																"isConstant": false,
																"isInlineArray": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"nodeType": "TupleExpression",
																"src": "4466:17:10",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "^",
															"rightExpression": {
																"hexValue": "32",
																"id": 1894,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "4486:1:10",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_2_by_1",
																	"typeString": "int_const 2"
																},
																"value": "2"
															},
															"src": "4466:21:10",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"nodeType": "VariableDeclarationStatement",
														"src": "4448:39:10"
													},
													{
														"expression": {
															"id": 1903,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftHandSide": {
																"id": 1897,
																"name": "inverse",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1889,
																"src": "4704:7:10",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "Assignment",
															"operator": "*=",
															"rightHandSide": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 1902,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"hexValue": "32",
																	"id": 1898,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "4715:1:10",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_2_by_1",
																		"typeString": "int_const 2"
																	},
																	"value": "2"
																},
																"nodeType": "BinaryOperation",
																"operator": "-",
																"rightExpression": {
																	"commonType": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	"id": 1901,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"leftExpression": {
																		"id": 1899,
																		"name": "denominator",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1840,
																		"src": "4719:11:10",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"nodeType": "BinaryOperation",
																	"operator": "*",
																	"rightExpression": {
																		"id": 1900,
																		"name": "inverse",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1889,
																		"src": "4733:7:10",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"src": "4719:21:10",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "4715:25:10",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "4704:36:10",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"id": 1904,
														"nodeType": "ExpressionStatement",
														"src": "4704:36:10"
													},
													{
														"expression": {
															"id": 1911,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftHandSide": {
																"id": 1905,
																"name": "inverse",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1889,
																"src": "4773:7:10",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "Assignment",
															"operator": "*=",
															"rightHandSide": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 1910,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"hexValue": "32",
																	"id": 1906,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "4784:1:10",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_2_by_1",
																		"typeString": "int_const 2"
																	},
																	"value": "2"
																},
																"nodeType": "BinaryOperation",
																"operator": "-",
																"rightExpression": {
																	"commonType": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	"id": 1909,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"leftExpression": {
																		"id": 1907,
																		"name": "denominator",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1840,
																		"src": "4788:11:10",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"nodeType": "BinaryOperation",
																	"operator": "*",
																	"rightExpression": {
																		"id": 1908,
																		"name": "inverse",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1889,
																		"src": "4802:7:10",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"src": "4788:21:10",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "4784:25:10",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "4773:36:10",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"id": 1912,
														"nodeType": "ExpressionStatement",
														"src": "4773:36:10"
													},
													{
														"expression": {
															"id": 1919,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftHandSide": {
																"id": 1913,
																"name": "inverse",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1889,
																"src": "4843:7:10",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "Assignment",
															"operator": "*=",
															"rightHandSide": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 1918,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"hexValue": "32",
																	"id": 1914,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "4854:1:10",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_2_by_1",
																		"typeString": "int_const 2"
																	},
																	"value": "2"
																},
																"nodeType": "BinaryOperation",
																"operator": "-",
																"rightExpression": {
																	"commonType": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	"id": 1917,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"leftExpression": {
																		"id": 1915,
																		"name": "denominator",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1840,
																		"src": "4858:11:10",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"nodeType": "BinaryOperation",
																	"operator": "*",
																	"rightExpression": {
																		"id": 1916,
																		"name": "inverse",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1889,
																		"src": "4872:7:10",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"src": "4858:21:10",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "4854:25:10",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "4843:36:10",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"id": 1920,
														"nodeType": "ExpressionStatement",
														"src": "4843:36:10"
													},
													{
														"expression": {
															"id": 1927,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftHandSide": {
																"id": 1921,
																"name": "inverse",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1889,
																"src": "4913:7:10",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "Assignment",
															"operator": "*=",
															"rightHandSide": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 1926,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"hexValue": "32",
																	"id": 1922,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "4924:1:10",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_2_by_1",
																		"typeString": "int_const 2"
																	},
																	"value": "2"
																},
																"nodeType": "BinaryOperation",
																"operator": "-",
																"rightExpression": {
																	"commonType": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	"id": 1925,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"leftExpression": {
																		"id": 1923,
																		"name": "denominator",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1840,
																		"src": "4928:11:10",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"nodeType": "BinaryOperation",
																	"operator": "*",
																	"rightExpression": {
																		"id": 1924,
																		"name": "inverse",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1889,
																		"src": "4942:7:10",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"src": "4928:21:10",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "4924:25:10",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "4913:36:10",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"id": 1928,
														"nodeType": "ExpressionStatement",
														"src": "4913:36:10"
													},
													{
														"expression": {
															"id": 1935,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftHandSide": {
																"id": 1929,
																"name": "inverse",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1889,
																"src": "4983:7:10",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "Assignment",
															"operator": "*=",
															"rightHandSide": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 1934,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"hexValue": "32",
																	"id": 1930,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "4994:1:10",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_2_by_1",
																		"typeString": "int_const 2"
																	},
																	"value": "2"
																},
																"nodeType": "BinaryOperation",
																"operator": "-",
																"rightExpression": {
																	"commonType": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	"id": 1933,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"leftExpression": {
																		"id": 1931,
																		"name": "denominator",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1840,
																		"src": "4998:11:10",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"nodeType": "BinaryOperation",
																	"operator": "*",
																	"rightExpression": {
																		"id": 1932,
																		"name": "inverse",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1889,
																		"src": "5012:7:10",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"src": "4998:21:10",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "4994:25:10",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "4983:36:10",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"id": 1936,
														"nodeType": "ExpressionStatement",
														"src": "4983:36:10"
													},
													{
														"expression": {
															"id": 1943,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftHandSide": {
																"id": 1937,
																"name": "inverse",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1889,
																"src": "5054:7:10",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "Assignment",
															"operator": "*=",
															"rightHandSide": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 1942,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"hexValue": "32",
																	"id": 1938,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "5065:1:10",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_2_by_1",
																		"typeString": "int_const 2"
																	},
																	"value": "2"
																},
																"nodeType": "BinaryOperation",
																"operator": "-",
																"rightExpression": {
																	"commonType": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	"id": 1941,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"leftExpression": {
																		"id": 1939,
																		"name": "denominator",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1840,
																		"src": "5069:11:10",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"nodeType": "BinaryOperation",
																	"operator": "*",
																	"rightExpression": {
																		"id": 1940,
																		"name": "inverse",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1889,
																		"src": "5083:7:10",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"src": "5069:21:10",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "5065:25:10",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "5054:36:10",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"id": 1944,
														"nodeType": "ExpressionStatement",
														"src": "5054:36:10"
													},
													{
														"expression": {
															"id": 1949,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftHandSide": {
																"id": 1945,
																"name": "result",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1843,
																"src": "5524:6:10",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "Assignment",
															"operator": "=",
															"rightHandSide": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 1948,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"id": 1946,
																	"name": "prod0",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1846,
																	"src": "5533:5:10",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": "*",
																"rightExpression": {
																	"id": 1947,
																	"name": "inverse",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1889,
																	"src": "5541:7:10",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "5533:15:10",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "5524:24:10",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"id": 1950,
														"nodeType": "ExpressionStatement",
														"src": "5524:24:10"
													},
													{
														"expression": {
															"id": 1951,
															"name": "result",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1843,
															"src": "5569:6:10",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"functionReturnParameters": 1844,
														"id": 1952,
														"nodeType": "Return",
														"src": "5562:13:10"
													}
												]
											}
										]
									},
									"documentation": {
										"id": 1834,
										"nodeType": "StructuredDocumentation",
										"src": "1357:305:10",
										"text": " @notice Calculates floor(x * y / denominator) with full precision. Throws if result overflows a uint256 or denominator == 0\n @dev Original credit to Remco Bloemen under MIT license (https://xn--2-umb.com/21/muldiv)\n with further edits by Uniswap Labs also under MIT license."
									},
									"id": 1955,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "mulDiv",
									"nameLocation": "1676:6:10",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1841,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1836,
												"mutability": "mutable",
												"name": "x",
												"nameLocation": "1700:1:10",
												"nodeType": "VariableDeclaration",
												"scope": 1955,
												"src": "1692:9:10",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1835,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1692:7:10",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1838,
												"mutability": "mutable",
												"name": "y",
												"nameLocation": "1719:1:10",
												"nodeType": "VariableDeclaration",
												"scope": 1955,
												"src": "1711:9:10",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1837,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1711:7:10",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1840,
												"mutability": "mutable",
												"name": "denominator",
												"nameLocation": "1738:11:10",
												"nodeType": "VariableDeclaration",
												"scope": 1955,
												"src": "1730:19:10",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1839,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1730:7:10",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1682:73:10"
									},
									"returnParameters": {
										"id": 1844,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1843,
												"mutability": "mutable",
												"name": "result",
												"nameLocation": "1787:6:10",
												"nodeType": "VariableDeclaration",
												"scope": 1955,
												"src": "1779:14:10",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1842,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1779:7:10",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1778:16:10"
									},
									"scope": 2607,
									"src": "1667:3925:10",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1998,
										"nodeType": "Block",
										"src": "5872:189:10",
										"statements": [
											{
												"assignments": [
													1971
												],
												"declarations": [
													{
														"constant": false,
														"id": 1971,
														"mutability": "mutable",
														"name": "result",
														"nameLocation": "5890:6:10",
														"nodeType": "VariableDeclaration",
														"scope": 1998,
														"src": "5882:14:10",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 1970,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "5882:7:10",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 1977,
												"initialValue": {
													"arguments": [
														{
															"id": 1973,
															"name": "x",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1958,
															"src": "5906:1:10",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														{
															"id": 1974,
															"name": "y",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1960,
															"src": "5909:1:10",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														{
															"id": 1975,
															"name": "denominator",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1962,
															"src": "5912:11:10",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 1972,
														"name": "mulDiv",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															1955,
															1999
														],
														"referencedDeclaration": 1955,
														"src": "5899:6:10",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$_t_uint256_$returns$_t_uint256_$",
															"typeString": "function (uint256,uint256,uint256) pure returns (uint256)"
														}
													},
													"id": 1976,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "5899:25:10",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "5882:42:10"
											},
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													},
													"id": 1989,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"commonType": {
															"typeIdentifier": "t_enum$_Rounding_$1749",
															"typeString": "enum Math.Rounding"
														},
														"id": 1981,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftExpression": {
															"id": 1978,
															"name": "rounding",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1965,
															"src": "5938:8:10",
															"typeDescriptions": {
																"typeIdentifier": "t_enum$_Rounding_$1749",
																"typeString": "enum Math.Rounding"
															}
														},
														"nodeType": "BinaryOperation",
														"operator": "==",
														"rightExpression": {
															"expression": {
																"id": 1979,
																"name": "Rounding",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1749,
																"src": "5950:8:10",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_enum$_Rounding_$1749_$",
																	"typeString": "type(enum Math.Rounding)"
																}
															},
															"id": 1980,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"lValueRequested": false,
															"memberLocation": "5959:2:10",
															"memberName": "Up",
															"nodeType": "MemberAccess",
															"referencedDeclaration": 1747,
															"src": "5950:11:10",
															"typeDescriptions": {
																"typeIdentifier": "t_enum$_Rounding_$1749",
																"typeString": "enum Math.Rounding"
															}
														},
														"src": "5938:23:10",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "&&",
													"rightExpression": {
														"commonType": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"id": 1988,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftExpression": {
															"arguments": [
																{
																	"id": 1983,
																	"name": "x",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1958,
																	"src": "5972:1:10",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																{
																	"id": 1984,
																	"name": "y",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1960,
																	"src": "5975:1:10",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																{
																	"id": 1985,
																	"name": "denominator",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1962,
																	"src": "5978:11:10",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	{
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	{
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																],
																"id": 1982,
																"name": "mulmod",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 4294967280,
																"src": "5965:6:10",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_mulmod_pure$_t_uint256_$_t_uint256_$_t_uint256_$returns$_t_uint256_$",
																	"typeString": "function (uint256,uint256,uint256) pure returns (uint256)"
																}
															},
															"id": 1986,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "5965:25:10",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"nodeType": "BinaryOperation",
														"operator": ">",
														"rightExpression": {
															"hexValue": "30",
															"id": 1987,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "number",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "5993:1:10",
															"typeDescriptions": {
																"typeIdentifier": "t_rational_0_by_1",
																"typeString": "int_const 0"
															},
															"value": "0"
														},
														"src": "5965:29:10",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"src": "5938:56:10",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 1995,
												"nodeType": "IfStatement",
												"src": "5934:98:10",
												"trueBody": {
													"id": 1994,
													"nodeType": "Block",
													"src": "5996:36:10",
													"statements": [
														{
															"expression": {
																"id": 1992,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftHandSide": {
																	"id": 1990,
																	"name": "result",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1971,
																	"src": "6010:6:10",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "Assignment",
																"operator": "+=",
																"rightHandSide": {
																	"hexValue": "31",
																	"id": 1991,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "6020:1:10",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_1_by_1",
																		"typeString": "int_const 1"
																	},
																	"value": "1"
																},
																"src": "6010:11:10",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"id": 1993,
															"nodeType": "ExpressionStatement",
															"src": "6010:11:10"
														}
													]
												}
											},
											{
												"expression": {
													"id": 1996,
													"name": "result",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 1971,
													"src": "6048:6:10",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 1969,
												"id": 1997,
												"nodeType": "Return",
												"src": "6041:13:10"
											}
										]
									},
									"documentation": {
										"id": 1956,
										"nodeType": "StructuredDocumentation",
										"src": "5598:121:10",
										"text": " @notice Calculates x * y / denominator with full precision, following the selected rounding direction."
									},
									"id": 1999,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "mulDiv",
									"nameLocation": "5733:6:10",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1966,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1958,
												"mutability": "mutable",
												"name": "x",
												"nameLocation": "5757:1:10",
												"nodeType": "VariableDeclaration",
												"scope": 1999,
												"src": "5749:9:10",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1957,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "5749:7:10",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1960,
												"mutability": "mutable",
												"name": "y",
												"nameLocation": "5776:1:10",
												"nodeType": "VariableDeclaration",
												"scope": 1999,
												"src": "5768:9:10",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1959,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "5768:7:10",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1962,
												"mutability": "mutable",
												"name": "denominator",
												"nameLocation": "5795:11:10",
												"nodeType": "VariableDeclaration",
												"scope": 1999,
												"src": "5787:19:10",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1961,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "5787:7:10",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1965,
												"mutability": "mutable",
												"name": "rounding",
												"nameLocation": "5825:8:10",
												"nodeType": "VariableDeclaration",
												"scope": 1999,
												"src": "5816:17:10",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_enum$_Rounding_$1749",
													"typeString": "enum Math.Rounding"
												},
												"typeName": {
													"id": 1964,
													"nodeType": "UserDefinedTypeName",
													"pathNode": {
														"id": 1963,
														"name": "Rounding",
														"nameLocations": [
															"5816:8:10"
														],
														"nodeType": "IdentifierPath",
														"referencedDeclaration": 1749,
														"src": "5816:8:10"
													},
													"referencedDeclaration": 1749,
													"src": "5816:8:10",
													"typeDescriptions": {
														"typeIdentifier": "t_enum$_Rounding_$1749",
														"typeString": "enum Math.Rounding"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "5739:100:10"
									},
									"returnParameters": {
										"id": 1969,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1968,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1999,
												"src": "5863:7:10",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1967,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "5863:7:10",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "5862:9:10"
									},
									"scope": 2607,
									"src": "5724:337:10",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 2110,
										"nodeType": "Block",
										"src": "6337:1585:10",
										"statements": [
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 2009,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 2007,
														"name": "a",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 2002,
														"src": "6351:1:10",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "==",
													"rightExpression": {
														"hexValue": "30",
														"id": 2008,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "6356:1:10",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_0_by_1",
															"typeString": "int_const 0"
														},
														"value": "0"
													},
													"src": "6351:6:10",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 2013,
												"nodeType": "IfStatement",
												"src": "6347:45:10",
												"trueBody": {
													"id": 2012,
													"nodeType": "Block",
													"src": "6359:33:10",
													"statements": [
														{
															"expression": {
																"hexValue": "30",
																"id": 2010,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "6380:1:10",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															},
															"functionReturnParameters": 2006,
															"id": 2011,
															"nodeType": "Return",
															"src": "6373:8:10"
														}
													]
												}
											},
											{
												"assignments": [
													2015
												],
												"declarations": [
													{
														"constant": false,
														"id": 2015,
														"mutability": "mutable",
														"name": "result",
														"nameLocation": "7079:6:10",
														"nodeType": "VariableDeclaration",
														"scope": 2110,
														"src": "7071:14:10",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 2014,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "7071:7:10",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 2024,
												"initialValue": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 2023,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"hexValue": "31",
														"id": 2016,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "7088:1:10",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_1_by_1",
															"typeString": "int_const 1"
														},
														"value": "1"
													},
													"nodeType": "BinaryOperation",
													"operator": "<<",
													"rightExpression": {
														"components": [
															{
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 2021,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"arguments": [
																		{
																			"id": 2018,
																			"name": "a",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 2002,
																			"src": "7099:1:10",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		}
																	],
																	"expression": {
																		"argumentTypes": [
																			{
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		],
																		"id": 2017,
																		"name": "log2",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [
																			2279,
																			2315
																		],
																		"referencedDeclaration": 2279,
																		"src": "7094:4:10",
																		"typeDescriptions": {
																			"typeIdentifier": "t_function_internal_pure$_t_uint256_$returns$_t_uint256_$",
																			"typeString": "function (uint256) pure returns (uint256)"
																		}
																	},
																	"id": 2019,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"kind": "functionCall",
																	"lValueRequested": false,
																	"nameLocations": [],
																	"names": [],
																	"nodeType": "FunctionCall",
																	"src": "7094:7:10",
																	"tryCall": false,
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": ">>",
																"rightExpression": {
																	"hexValue": "31",
																	"id": 2020,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "7105:1:10",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_1_by_1",
																		"typeString": "int_const 1"
																	},
																	"value": "1"
																},
																"src": "7094:12:10",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															}
														],
														"id": 2022,
														"isConstant": false,
														"isInlineArray": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"nodeType": "TupleExpression",
														"src": "7093:14:10",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "7088:19:10",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "7071:36:10"
											},
											{
												"id": 2109,
												"nodeType": "UncheckedBlock",
												"src": "7508:408:10",
												"statements": [
													{
														"expression": {
															"id": 2034,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftHandSide": {
																"id": 2025,
																"name": "result",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 2015,
																"src": "7532:6:10",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "Assignment",
															"operator": "=",
															"rightHandSide": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 2033,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"components": [
																		{
																			"commonType": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			},
																			"id": 2030,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"leftExpression": {
																				"id": 2026,
																				"name": "result",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 2015,
																				"src": "7542:6:10",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"nodeType": "BinaryOperation",
																			"operator": "+",
																			"rightExpression": {
																				"commonType": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				},
																				"id": 2029,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": false,
																				"lValueRequested": false,
																				"leftExpression": {
																					"id": 2027,
																					"name": "a",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 2002,
																					"src": "7551:1:10",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				"nodeType": "BinaryOperation",
																				"operator": "/",
																				"rightExpression": {
																					"id": 2028,
																					"name": "result",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 2015,
																					"src": "7555:6:10",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				"src": "7551:10:10",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"src": "7542:19:10",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		}
																	],
																	"id": 2031,
																	"isConstant": false,
																	"isInlineArray": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"nodeType": "TupleExpression",
																	"src": "7541:21:10",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": ">>",
																"rightExpression": {
																	"hexValue": "31",
																	"id": 2032,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "7566:1:10",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_1_by_1",
																		"typeString": "int_const 1"
																	},
																	"value": "1"
																},
																"src": "7541:26:10",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "7532:35:10",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"id": 2035,
														"nodeType": "ExpressionStatement",
														"src": "7532:35:10"
													},
													{
														"expression": {
															"id": 2045,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftHandSide": {
																"id": 2036,
																"name": "result",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 2015,
																"src": "7581:6:10",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "Assignment",
															"operator": "=",
															"rightHandSide": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 2044,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"components": [
																		{
																			"commonType": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			},
																			"id": 2041,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"leftExpression": {
																				"id": 2037,
																				"name": "result",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 2015,
																				"src": "7591:6:10",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"nodeType": "BinaryOperation",
																			"operator": "+",
																			"rightExpression": {
																				"commonType": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				},
																				"id": 2040,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": false,
																				"lValueRequested": false,
																				"leftExpression": {
																					"id": 2038,
																					"name": "a",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 2002,
																					"src": "7600:1:10",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				"nodeType": "BinaryOperation",
																				"operator": "/",
																				"rightExpression": {
																					"id": 2039,
																					"name": "result",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 2015,
																					"src": "7604:6:10",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				"src": "7600:10:10",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"src": "7591:19:10",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		}
																	],
																	"id": 2042,
																	"isConstant": false,
																	"isInlineArray": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"nodeType": "TupleExpression",
																	"src": "7590:21:10",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": ">>",
																"rightExpression": {
																	"hexValue": "31",
																	"id": 2043,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "7615:1:10",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_1_by_1",
																		"typeString": "int_const 1"
																	},
																	"value": "1"
																},
																"src": "7590:26:10",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "7581:35:10",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"id": 2046,
														"nodeType": "ExpressionStatement",
														"src": "7581:35:10"
													},
													{
														"expression": {
															"id": 2056,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftHandSide": {
																"id": 2047,
																"name": "result",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 2015,
																"src": "7630:6:10",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "Assignment",
															"operator": "=",
															"rightHandSide": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 2055,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"components": [
																		{
																			"commonType": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			},
																			"id": 2052,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"leftExpression": {
																				"id": 2048,
																				"name": "result",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 2015,
																				"src": "7640:6:10",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"nodeType": "BinaryOperation",
																			"operator": "+",
																			"rightExpression": {
																				"commonType": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				},
																				"id": 2051,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": false,
																				"lValueRequested": false,
																				"leftExpression": {
																					"id": 2049,
																					"name": "a",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 2002,
																					"src": "7649:1:10",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				"nodeType": "BinaryOperation",
																				"operator": "/",
																				"rightExpression": {
																					"id": 2050,
																					"name": "result",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 2015,
																					"src": "7653:6:10",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				"src": "7649:10:10",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"src": "7640:19:10",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		}
																	],
																	"id": 2053,
																	"isConstant": false,
																	"isInlineArray": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"nodeType": "TupleExpression",
																	"src": "7639:21:10",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": ">>",
																"rightExpression": {
																	"hexValue": "31",
																	"id": 2054,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "7664:1:10",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_1_by_1",
																		"typeString": "int_const 1"
																	},
																	"value": "1"
																},
																"src": "7639:26:10",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "7630:35:10",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"id": 2057,
														"nodeType": "ExpressionStatement",
														"src": "7630:35:10"
													},
													{
														"expression": {
															"id": 2067,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftHandSide": {
																"id": 2058,
																"name": "result",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 2015,
																"src": "7679:6:10",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "Assignment",
															"operator": "=",
															"rightHandSide": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 2066,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"components": [
																		{
																			"commonType": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			},
																			"id": 2063,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"leftExpression": {
																				"id": 2059,
																				"name": "result",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 2015,
																				"src": "7689:6:10",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"nodeType": "BinaryOperation",
																			"operator": "+",
																			"rightExpression": {
																				"commonType": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				},
																				"id": 2062,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": false,
																				"lValueRequested": false,
																				"leftExpression": {
																					"id": 2060,
																					"name": "a",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 2002,
																					"src": "7698:1:10",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				"nodeType": "BinaryOperation",
																				"operator": "/",
																				"rightExpression": {
																					"id": 2061,
																					"name": "result",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 2015,
																					"src": "7702:6:10",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				"src": "7698:10:10",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"src": "7689:19:10",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		}
																	],
																	"id": 2064,
																	"isConstant": false,
																	"isInlineArray": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"nodeType": "TupleExpression",
																	"src": "7688:21:10",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": ">>",
																"rightExpression": {
																	"hexValue": "31",
																	"id": 2065,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "7713:1:10",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_1_by_1",
																		"typeString": "int_const 1"
																	},
																	"value": "1"
																},
																"src": "7688:26:10",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "7679:35:10",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"id": 2068,
														"nodeType": "ExpressionStatement",
														"src": "7679:35:10"
													},
													{
														"expression": {
															"id": 2078,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftHandSide": {
																"id": 2069,
																"name": "result",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 2015,
																"src": "7728:6:10",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "Assignment",
															"operator": "=",
															"rightHandSide": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 2077,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"components": [
																		{
																			"commonType": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			},
																			"id": 2074,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"leftExpression": {
																				"id": 2070,
																				"name": "result",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 2015,
																				"src": "7738:6:10",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"nodeType": "BinaryOperation",
																			"operator": "+",
																			"rightExpression": {
																				"commonType": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				},
																				"id": 2073,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": false,
																				"lValueRequested": false,
																				"leftExpression": {
																					"id": 2071,
																					"name": "a",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 2002,
																					"src": "7747:1:10",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				"nodeType": "BinaryOperation",
																				"operator": "/",
																				"rightExpression": {
																					"id": 2072,
																					"name": "result",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 2015,
																					"src": "7751:6:10",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				"src": "7747:10:10",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"src": "7738:19:10",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		}
																	],
																	"id": 2075,
																	"isConstant": false,
																	"isInlineArray": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"nodeType": "TupleExpression",
																	"src": "7737:21:10",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": ">>",
																"rightExpression": {
																	"hexValue": "31",
																	"id": 2076,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "7762:1:10",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_1_by_1",
																		"typeString": "int_const 1"
																	},
																	"value": "1"
																},
																"src": "7737:26:10",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "7728:35:10",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"id": 2079,
														"nodeType": "ExpressionStatement",
														"src": "7728:35:10"
													},
													{
														"expression": {
															"id": 2089,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftHandSide": {
																"id": 2080,
																"name": "result",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 2015,
																"src": "7777:6:10",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "Assignment",
															"operator": "=",
															"rightHandSide": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 2088,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"components": [
																		{
																			"commonType": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			},
																			"id": 2085,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"leftExpression": {
																				"id": 2081,
																				"name": "result",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 2015,
																				"src": "7787:6:10",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"nodeType": "BinaryOperation",
																			"operator": "+",
																			"rightExpression": {
																				"commonType": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				},
																				"id": 2084,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": false,
																				"lValueRequested": false,
																				"leftExpression": {
																					"id": 2082,
																					"name": "a",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 2002,
																					"src": "7796:1:10",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				"nodeType": "BinaryOperation",
																				"operator": "/",
																				"rightExpression": {
																					"id": 2083,
																					"name": "result",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 2015,
																					"src": "7800:6:10",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				"src": "7796:10:10",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"src": "7787:19:10",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		}
																	],
																	"id": 2086,
																	"isConstant": false,
																	"isInlineArray": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"nodeType": "TupleExpression",
																	"src": "7786:21:10",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": ">>",
																"rightExpression": {
																	"hexValue": "31",
																	"id": 2087,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "7811:1:10",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_1_by_1",
																		"typeString": "int_const 1"
																	},
																	"value": "1"
																},
																"src": "7786:26:10",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "7777:35:10",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"id": 2090,
														"nodeType": "ExpressionStatement",
														"src": "7777:35:10"
													},
													{
														"expression": {
															"id": 2100,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftHandSide": {
																"id": 2091,
																"name": "result",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 2015,
																"src": "7826:6:10",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "Assignment",
															"operator": "=",
															"rightHandSide": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 2099,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"components": [
																		{
																			"commonType": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			},
																			"id": 2096,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"leftExpression": {
																				"id": 2092,
																				"name": "result",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 2015,
																				"src": "7836:6:10",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"nodeType": "BinaryOperation",
																			"operator": "+",
																			"rightExpression": {
																				"commonType": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				},
																				"id": 2095,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": false,
																				"lValueRequested": false,
																				"leftExpression": {
																					"id": 2093,
																					"name": "a",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 2002,
																					"src": "7845:1:10",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				"nodeType": "BinaryOperation",
																				"operator": "/",
																				"rightExpression": {
																					"id": 2094,
																					"name": "result",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 2015,
																					"src": "7849:6:10",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				"src": "7845:10:10",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"src": "7836:19:10",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		}
																	],
																	"id": 2097,
																	"isConstant": false,
																	"isInlineArray": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"nodeType": "TupleExpression",
																	"src": "7835:21:10",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": ">>",
																"rightExpression": {
																	"hexValue": "31",
																	"id": 2098,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "7860:1:10",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_1_by_1",
																		"typeString": "int_const 1"
																	},
																	"value": "1"
																},
																"src": "7835:26:10",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "7826:35:10",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"id": 2101,
														"nodeType": "ExpressionStatement",
														"src": "7826:35:10"
													},
													{
														"expression": {
															"arguments": [
																{
																	"id": 2103,
																	"name": "result",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 2015,
																	"src": "7886:6:10",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																{
																	"commonType": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	"id": 2106,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"leftExpression": {
																		"id": 2104,
																		"name": "a",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 2002,
																		"src": "7894:1:10",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"nodeType": "BinaryOperation",
																	"operator": "/",
																	"rightExpression": {
																		"id": 2105,
																		"name": "result",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 2015,
																		"src": "7898:6:10",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"src": "7894:10:10",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	{
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																],
																"id": 2102,
																"name": "min",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1785,
																"src": "7882:3:10",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$",
																	"typeString": "function (uint256,uint256) pure returns (uint256)"
																}
															},
															"id": 2107,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "7882:23:10",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"functionReturnParameters": 2006,
														"id": 2108,
														"nodeType": "Return",
														"src": "7875:30:10"
													}
												]
											}
										]
									},
									"documentation": {
										"id": 2000,
										"nodeType": "StructuredDocumentation",
										"src": "6067:208:10",
										"text": " @dev Returns the square root of a number. If the number is not a perfect square, the value is rounded down.\n Inspired by Henry S. Warren, Jr.'s \"Hacker's Delight\" (Chapter 11)."
									},
									"id": 2111,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "sqrt",
									"nameLocation": "6289:4:10",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 2003,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2002,
												"mutability": "mutable",
												"name": "a",
												"nameLocation": "6302:1:10",
												"nodeType": "VariableDeclaration",
												"scope": 2111,
												"src": "6294:9:10",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2001,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "6294:7:10",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "6293:11:10"
									},
									"returnParameters": {
										"id": 2006,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2005,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 2111,
												"src": "6328:7:10",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2004,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "6328:7:10",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "6327:9:10"
									},
									"scope": 2607,
									"src": "6280:1642:10",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 2146,
										"nodeType": "Block",
										"src": "8098:161:10",
										"statements": [
											{
												"id": 2145,
												"nodeType": "UncheckedBlock",
												"src": "8108:145:10",
												"statements": [
													{
														"assignments": [
															2123
														],
														"declarations": [
															{
																"constant": false,
																"id": 2123,
																"mutability": "mutable",
																"name": "result",
																"nameLocation": "8140:6:10",
																"nodeType": "VariableDeclaration",
																"scope": 2145,
																"src": "8132:14:10",
																"stateVariable": false,
																"storageLocation": "default",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"typeName": {
																	"id": 2122,
																	"name": "uint256",
																	"nodeType": "ElementaryTypeName",
																	"src": "8132:7:10",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"visibility": "internal"
															}
														],
														"id": 2127,
														"initialValue": {
															"arguments": [
																{
																	"id": 2125,
																	"name": "a",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 2114,
																	"src": "8154:1:10",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																],
																"id": 2124,
																"name": "sqrt",
																"nodeType": "Identifier",
																"overloadedDeclarations": [
																	2111,
																	2147
																],
																"referencedDeclaration": 2111,
																"src": "8149:4:10",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_internal_pure$_t_uint256_$returns$_t_uint256_$",
																	"typeString": "function (uint256) pure returns (uint256)"
																}
															},
															"id": 2126,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "8149:7:10",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"nodeType": "VariableDeclarationStatement",
														"src": "8132:24:10"
													},
													{
														"expression": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 2143,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 2128,
																"name": "result",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 2123,
																"src": "8177:6:10",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "+",
															"rightExpression": {
																"components": [
																	{
																		"condition": {
																			"commonType": {
																				"typeIdentifier": "t_bool",
																				"typeString": "bool"
																			},
																			"id": 2138,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"leftExpression": {
																				"commonType": {
																					"typeIdentifier": "t_enum$_Rounding_$1749",
																					"typeString": "enum Math.Rounding"
																				},
																				"id": 2132,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": false,
																				"lValueRequested": false,
																				"leftExpression": {
																					"id": 2129,
																					"name": "rounding",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 2117,
																					"src": "8187:8:10",
																					"typeDescriptions": {
																						"typeIdentifier": "t_enum$_Rounding_$1749",
																						"typeString": "enum Math.Rounding"
																					}
																				},
																				"nodeType": "BinaryOperation",
																				"operator": "==",
																				"rightExpression": {
																					"expression": {
																						"id": 2130,
																						"name": "Rounding",
																						"nodeType": "Identifier",
																						"overloadedDeclarations": [],
																						"referencedDeclaration": 1749,
																						"src": "8199:8:10",
																						"typeDescriptions": {
																							"typeIdentifier": "t_type$_t_enum$_Rounding_$1749_$",
																							"typeString": "type(enum Math.Rounding)"
																						}
																					},
																					"id": 2131,
																					"isConstant": false,
																					"isLValue": false,
																					"isPure": true,
																					"lValueRequested": false,
																					"memberLocation": "8208:2:10",
																					"memberName": "Up",
																					"nodeType": "MemberAccess",
																					"referencedDeclaration": 1747,
																					"src": "8199:11:10",
																					"typeDescriptions": {
																						"typeIdentifier": "t_enum$_Rounding_$1749",
																						"typeString": "enum Math.Rounding"
																					}
																				},
																				"src": "8187:23:10",
																				"typeDescriptions": {
																					"typeIdentifier": "t_bool",
																					"typeString": "bool"
																				}
																			},
																			"nodeType": "BinaryOperation",
																			"operator": "&&",
																			"rightExpression": {
																				"commonType": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				},
																				"id": 2137,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": false,
																				"lValueRequested": false,
																				"leftExpression": {
																					"commonType": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					},
																					"id": 2135,
																					"isConstant": false,
																					"isLValue": false,
																					"isPure": false,
																					"lValueRequested": false,
																					"leftExpression": {
																						"id": 2133,
																						"name": "result",
																						"nodeType": "Identifier",
																						"overloadedDeclarations": [],
																						"referencedDeclaration": 2123,
																						"src": "8214:6:10",
																						"typeDescriptions": {
																							"typeIdentifier": "t_uint256",
																							"typeString": "uint256"
																						}
																					},
																					"nodeType": "BinaryOperation",
																					"operator": "*",
																					"rightExpression": {
																						"id": 2134,
																						"name": "result",
																						"nodeType": "Identifier",
																						"overloadedDeclarations": [],
																						"referencedDeclaration": 2123,
																						"src": "8223:6:10",
																						"typeDescriptions": {
																							"typeIdentifier": "t_uint256",
																							"typeString": "uint256"
																						}
																					},
																					"src": "8214:15:10",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				"nodeType": "BinaryOperation",
																				"operator": "<",
																				"rightExpression": {
																					"id": 2136,
																					"name": "a",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 2114,
																					"src": "8232:1:10",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				"src": "8214:19:10",
																				"typeDescriptions": {
																					"typeIdentifier": "t_bool",
																					"typeString": "bool"
																				}
																			},
																			"src": "8187:46:10",
																			"typeDescriptions": {
																				"typeIdentifier": "t_bool",
																				"typeString": "bool"
																			}
																		},
																		"falseExpression": {
																			"hexValue": "30",
																			"id": 2140,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "8240:1:10",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_0_by_1",
																				"typeString": "int_const 0"
																			},
																			"value": "0"
																		},
																		"id": 2141,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"nodeType": "Conditional",
																		"src": "8187:54:10",
																		"trueExpression": {
																			"hexValue": "31",
																			"id": 2139,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "8236:1:10",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_1_by_1",
																				"typeString": "int_const 1"
																			},
																			"value": "1"
																		},
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint8",
																			"typeString": "uint8"
																		}
																	}
																],
																"id": 2142,
																"isConstant": false,
																"isInlineArray": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"nodeType": "TupleExpression",
																"src": "8186:56:10",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint8",
																	"typeString": "uint8"
																}
															},
															"src": "8177:65:10",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"functionReturnParameters": 2121,
														"id": 2144,
														"nodeType": "Return",
														"src": "8170:72:10"
													}
												]
											}
										]
									},
									"documentation": {
										"id": 2112,
										"nodeType": "StructuredDocumentation",
										"src": "7928:89:10",
										"text": " @notice Calculates sqrt(a), following the selected rounding direction."
									},
									"id": 2147,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "sqrt",
									"nameLocation": "8031:4:10",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 2118,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2114,
												"mutability": "mutable",
												"name": "a",
												"nameLocation": "8044:1:10",
												"nodeType": "VariableDeclaration",
												"scope": 2147,
												"src": "8036:9:10",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2113,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "8036:7:10",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2117,
												"mutability": "mutable",
												"name": "rounding",
												"nameLocation": "8056:8:10",
												"nodeType": "VariableDeclaration",
												"scope": 2147,
												"src": "8047:17:10",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_enum$_Rounding_$1749",
													"typeString": "enum Math.Rounding"
												},
												"typeName": {
													"id": 2116,
													"nodeType": "UserDefinedTypeName",
													"pathNode": {
														"id": 2115,
														"name": "Rounding",
														"nameLocations": [
															"8047:8:10"
														],
														"nodeType": "IdentifierPath",
														"referencedDeclaration": 1749,
														"src": "8047:8:10"
													},
													"referencedDeclaration": 1749,
													"src": "8047:8:10",
													"typeDescriptions": {
														"typeIdentifier": "t_enum$_Rounding_$1749",
														"typeString": "enum Math.Rounding"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "8035:30:10"
									},
									"returnParameters": {
										"id": 2121,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2120,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 2147,
												"src": "8089:7:10",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2119,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "8089:7:10",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "8088:9:10"
									},
									"scope": 2607,
									"src": "8022:237:10",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 2278,
										"nodeType": "Block",
										"src": "8444:922:10",
										"statements": [
											{
												"assignments": [
													2156
												],
												"declarations": [
													{
														"constant": false,
														"id": 2156,
														"mutability": "mutable",
														"name": "result",
														"nameLocation": "8462:6:10",
														"nodeType": "VariableDeclaration",
														"scope": 2278,
														"src": "8454:14:10",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 2155,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "8454:7:10",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 2158,
												"initialValue": {
													"hexValue": "30",
													"id": 2157,
													"isConstant": false,
													"isLValue": false,
													"isPure": true,
													"kind": "number",
													"lValueRequested": false,
													"nodeType": "Literal",
													"src": "8471:1:10",
													"typeDescriptions": {
														"typeIdentifier": "t_rational_0_by_1",
														"typeString": "int_const 0"
													},
													"value": "0"
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "8454:18:10"
											},
											{
												"id": 2275,
												"nodeType": "UncheckedBlock",
												"src": "8482:855:10",
												"statements": [
													{
														"condition": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 2163,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 2161,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"id": 2159,
																	"name": "value",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 2150,
																	"src": "8510:5:10",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": ">>",
																"rightExpression": {
																	"hexValue": "313238",
																	"id": 2160,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "8519:3:10",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_128_by_1",
																		"typeString": "int_const 128"
																	},
																	"value": "128"
																},
																"src": "8510:12:10",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">",
															"rightExpression": {
																"hexValue": "30",
																"id": 2162,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "8525:1:10",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															},
															"src": "8510:16:10",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"id": 2173,
														"nodeType": "IfStatement",
														"src": "8506:99:10",
														"trueBody": {
															"id": 2172,
															"nodeType": "Block",
															"src": "8528:77:10",
															"statements": [
																{
																	"expression": {
																		"id": 2166,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"id": 2164,
																			"name": "value",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 2150,
																			"src": "8546:5:10",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": ">>=",
																		"rightHandSide": {
																			"hexValue": "313238",
																			"id": 2165,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "8556:3:10",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_128_by_1",
																				"typeString": "int_const 128"
																			},
																			"value": "128"
																		},
																		"src": "8546:13:10",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 2167,
																	"nodeType": "ExpressionStatement",
																	"src": "8546:13:10"
																},
																{
																	"expression": {
																		"id": 2170,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"id": 2168,
																			"name": "result",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 2156,
																			"src": "8577:6:10",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": "+=",
																		"rightHandSide": {
																			"hexValue": "313238",
																			"id": 2169,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "8587:3:10",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_128_by_1",
																				"typeString": "int_const 128"
																			},
																			"value": "128"
																		},
																		"src": "8577:13:10",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 2171,
																	"nodeType": "ExpressionStatement",
																	"src": "8577:13:10"
																}
															]
														}
													},
													{
														"condition": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 2178,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 2176,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"id": 2174,
																	"name": "value",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 2150,
																	"src": "8622:5:10",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": ">>",
																"rightExpression": {
																	"hexValue": "3634",
																	"id": 2175,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "8631:2:10",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_64_by_1",
																		"typeString": "int_const 64"
																	},
																	"value": "64"
																},
																"src": "8622:11:10",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">",
															"rightExpression": {
																"hexValue": "30",
																"id": 2177,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "8636:1:10",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															},
															"src": "8622:15:10",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"id": 2188,
														"nodeType": "IfStatement",
														"src": "8618:96:10",
														"trueBody": {
															"id": 2187,
															"nodeType": "Block",
															"src": "8639:75:10",
															"statements": [
																{
																	"expression": {
																		"id": 2181,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"id": 2179,
																			"name": "value",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 2150,
																			"src": "8657:5:10",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": ">>=",
																		"rightHandSide": {
																			"hexValue": "3634",
																			"id": 2180,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "8667:2:10",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_64_by_1",
																				"typeString": "int_const 64"
																			},
																			"value": "64"
																		},
																		"src": "8657:12:10",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 2182,
																	"nodeType": "ExpressionStatement",
																	"src": "8657:12:10"
																},
																{
																	"expression": {
																		"id": 2185,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"id": 2183,
																			"name": "result",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 2156,
																			"src": "8687:6:10",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": "+=",
																		"rightHandSide": {
																			"hexValue": "3634",
																			"id": 2184,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "8697:2:10",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_64_by_1",
																				"typeString": "int_const 64"
																			},
																			"value": "64"
																		},
																		"src": "8687:12:10",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 2186,
																	"nodeType": "ExpressionStatement",
																	"src": "8687:12:10"
																}
															]
														}
													},
													{
														"condition": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 2193,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 2191,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"id": 2189,
																	"name": "value",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 2150,
																	"src": "8731:5:10",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": ">>",
																"rightExpression": {
																	"hexValue": "3332",
																	"id": 2190,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "8740:2:10",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_32_by_1",
																		"typeString": "int_const 32"
																	},
																	"value": "32"
																},
																"src": "8731:11:10",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">",
															"rightExpression": {
																"hexValue": "30",
																"id": 2192,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "8745:1:10",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															},
															"src": "8731:15:10",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"id": 2203,
														"nodeType": "IfStatement",
														"src": "8727:96:10",
														"trueBody": {
															"id": 2202,
															"nodeType": "Block",
															"src": "8748:75:10",
															"statements": [
																{
																	"expression": {
																		"id": 2196,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"id": 2194,
																			"name": "value",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 2150,
																			"src": "8766:5:10",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": ">>=",
																		"rightHandSide": {
																			"hexValue": "3332",
																			"id": 2195,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "8776:2:10",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_32_by_1",
																				"typeString": "int_const 32"
																			},
																			"value": "32"
																		},
																		"src": "8766:12:10",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 2197,
																	"nodeType": "ExpressionStatement",
																	"src": "8766:12:10"
																},
																{
																	"expression": {
																		"id": 2200,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"id": 2198,
																			"name": "result",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 2156,
																			"src": "8796:6:10",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": "+=",
																		"rightHandSide": {
																			"hexValue": "3332",
																			"id": 2199,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "8806:2:10",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_32_by_1",
																				"typeString": "int_const 32"
																			},
																			"value": "32"
																		},
																		"src": "8796:12:10",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 2201,
																	"nodeType": "ExpressionStatement",
																	"src": "8796:12:10"
																}
															]
														}
													},
													{
														"condition": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 2208,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 2206,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"id": 2204,
																	"name": "value",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 2150,
																	"src": "8840:5:10",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": ">>",
																"rightExpression": {
																	"hexValue": "3136",
																	"id": 2205,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "8849:2:10",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_16_by_1",
																		"typeString": "int_const 16"
																	},
																	"value": "16"
																},
																"src": "8840:11:10",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">",
															"rightExpression": {
																"hexValue": "30",
																"id": 2207,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "8854:1:10",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															},
															"src": "8840:15:10",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"id": 2218,
														"nodeType": "IfStatement",
														"src": "8836:96:10",
														"trueBody": {
															"id": 2217,
															"nodeType": "Block",
															"src": "8857:75:10",
															"statements": [
																{
																	"expression": {
																		"id": 2211,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"id": 2209,
																			"name": "value",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 2150,
																			"src": "8875:5:10",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": ">>=",
																		"rightHandSide": {
																			"hexValue": "3136",
																			"id": 2210,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "8885:2:10",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_16_by_1",
																				"typeString": "int_const 16"
																			},
																			"value": "16"
																		},
																		"src": "8875:12:10",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 2212,
																	"nodeType": "ExpressionStatement",
																	"src": "8875:12:10"
																},
																{
																	"expression": {
																		"id": 2215,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"id": 2213,
																			"name": "result",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 2156,
																			"src": "8905:6:10",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": "+=",
																		"rightHandSide": {
																			"hexValue": "3136",
																			"id": 2214,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "8915:2:10",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_16_by_1",
																				"typeString": "int_const 16"
																			},
																			"value": "16"
																		},
																		"src": "8905:12:10",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 2216,
																	"nodeType": "ExpressionStatement",
																	"src": "8905:12:10"
																}
															]
														}
													},
													{
														"condition": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 2223,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 2221,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"id": 2219,
																	"name": "value",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 2150,
																	"src": "8949:5:10",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": ">>",
																"rightExpression": {
																	"hexValue": "38",
																	"id": 2220,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "8958:1:10",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_8_by_1",
																		"typeString": "int_const 8"
																	},
																	"value": "8"
																},
																"src": "8949:10:10",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">",
															"rightExpression": {
																"hexValue": "30",
																"id": 2222,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "8962:1:10",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															},
															"src": "8949:14:10",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"id": 2233,
														"nodeType": "IfStatement",
														"src": "8945:93:10",
														"trueBody": {
															"id": 2232,
															"nodeType": "Block",
															"src": "8965:73:10",
															"statements": [
																{
																	"expression": {
																		"id": 2226,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"id": 2224,
																			"name": "value",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 2150,
																			"src": "8983:5:10",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": ">>=",
																		"rightHandSide": {
																			"hexValue": "38",
																			"id": 2225,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "8993:1:10",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_8_by_1",
																				"typeString": "int_const 8"
																			},
																			"value": "8"
																		},
																		"src": "8983:11:10",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 2227,
																	"nodeType": "ExpressionStatement",
																	"src": "8983:11:10"
																},
																{
																	"expression": {
																		"id": 2230,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"id": 2228,
																			"name": "result",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 2156,
																			"src": "9012:6:10",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": "+=",
																		"rightHandSide": {
																			"hexValue": "38",
																			"id": 2229,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "9022:1:10",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_8_by_1",
																				"typeString": "int_const 8"
																			},
																			"value": "8"
																		},
																		"src": "9012:11:10",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 2231,
																	"nodeType": "ExpressionStatement",
																	"src": "9012:11:10"
																}
															]
														}
													},
													{
														"condition": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 2238,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 2236,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"id": 2234,
																	"name": "value",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 2150,
																	"src": "9055:5:10",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": ">>",
																"rightExpression": {
																	"hexValue": "34",
																	"id": 2235,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "9064:1:10",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_4_by_1",
																		"typeString": "int_const 4"
																	},
																	"value": "4"
																},
																"src": "9055:10:10",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">",
															"rightExpression": {
																"hexValue": "30",
																"id": 2237,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "9068:1:10",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															},
															"src": "9055:14:10",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"id": 2248,
														"nodeType": "IfStatement",
														"src": "9051:93:10",
														"trueBody": {
															"id": 2247,
															"nodeType": "Block",
															"src": "9071:73:10",
															"statements": [
																{
																	"expression": {
																		"id": 2241,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"id": 2239,
																			"name": "value",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 2150,
																			"src": "9089:5:10",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": ">>=",
																		"rightHandSide": {
																			"hexValue": "34",
																			"id": 2240,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "9099:1:10",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_4_by_1",
																				"typeString": "int_const 4"
																			},
																			"value": "4"
																		},
																		"src": "9089:11:10",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 2242,
																	"nodeType": "ExpressionStatement",
																	"src": "9089:11:10"
																},
																{
																	"expression": {
																		"id": 2245,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"id": 2243,
																			"name": "result",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 2156,
																			"src": "9118:6:10",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": "+=",
																		"rightHandSide": {
																			"hexValue": "34",
																			"id": 2244,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "9128:1:10",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_4_by_1",
																				"typeString": "int_const 4"
																			},
																			"value": "4"
																		},
																		"src": "9118:11:10",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 2246,
																	"nodeType": "ExpressionStatement",
																	"src": "9118:11:10"
																}
															]
														}
													},
													{
														"condition": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 2253,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 2251,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"id": 2249,
																	"name": "value",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 2150,
																	"src": "9161:5:10",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": ">>",
																"rightExpression": {
																	"hexValue": "32",
																	"id": 2250,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "9170:1:10",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_2_by_1",
																		"typeString": "int_const 2"
																	},
																	"value": "2"
																},
																"src": "9161:10:10",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">",
															"rightExpression": {
																"hexValue": "30",
																"id": 2252,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "9174:1:10",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															},
															"src": "9161:14:10",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"id": 2263,
														"nodeType": "IfStatement",
														"src": "9157:93:10",
														"trueBody": {
															"id": 2262,
															"nodeType": "Block",
															"src": "9177:73:10",
															"statements": [
																{
																	"expression": {
																		"id": 2256,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"id": 2254,
																			"name": "value",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 2150,
																			"src": "9195:5:10",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": ">>=",
																		"rightHandSide": {
																			"hexValue": "32",
																			"id": 2255,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "9205:1:10",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_2_by_1",
																				"typeString": "int_const 2"
																			},
																			"value": "2"
																		},
																		"src": "9195:11:10",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 2257,
																	"nodeType": "ExpressionStatement",
																	"src": "9195:11:10"
																},
																{
																	"expression": {
																		"id": 2260,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"id": 2258,
																			"name": "result",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 2156,
																			"src": "9224:6:10",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": "+=",
																		"rightHandSide": {
																			"hexValue": "32",
																			"id": 2259,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "9234:1:10",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_2_by_1",
																				"typeString": "int_const 2"
																			},
																			"value": "2"
																		},
																		"src": "9224:11:10",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 2261,
																	"nodeType": "ExpressionStatement",
																	"src": "9224:11:10"
																}
															]
														}
													},
													{
														"condition": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 2268,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 2266,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"id": 2264,
																	"name": "value",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 2150,
																	"src": "9267:5:10",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": ">>",
																"rightExpression": {
																	"hexValue": "31",
																	"id": 2265,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "9276:1:10",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_1_by_1",
																		"typeString": "int_const 1"
																	},
																	"value": "1"
																},
																"src": "9267:10:10",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">",
															"rightExpression": {
																"hexValue": "30",
																"id": 2267,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "9280:1:10",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															},
															"src": "9267:14:10",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"id": 2274,
														"nodeType": "IfStatement",
														"src": "9263:64:10",
														"trueBody": {
															"id": 2273,
															"nodeType": "Block",
															"src": "9283:44:10",
															"statements": [
																{
																	"expression": {
																		"id": 2271,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"id": 2269,
																			"name": "result",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 2156,
																			"src": "9301:6:10",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": "+=",
																		"rightHandSide": {
																			"hexValue": "31",
																			"id": 2270,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "9311:1:10",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_1_by_1",
																				"typeString": "int_const 1"
																			},
																			"value": "1"
																		},
																		"src": "9301:11:10",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 2272,
																	"nodeType": "ExpressionStatement",
																	"src": "9301:11:10"
																}
															]
														}
													}
												]
											},
											{
												"expression": {
													"id": 2276,
													"name": "result",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 2156,
													"src": "9353:6:10",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 2154,
												"id": 2277,
												"nodeType": "Return",
												"src": "9346:13:10"
											}
										]
									},
									"documentation": {
										"id": 2148,
										"nodeType": "StructuredDocumentation",
										"src": "8265:113:10",
										"text": " @dev Return the log in base 2, rounded down, of a positive value.\n Returns 0 if given 0."
									},
									"id": 2279,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "log2",
									"nameLocation": "8392:4:10",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 2151,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2150,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "8405:5:10",
												"nodeType": "VariableDeclaration",
												"scope": 2279,
												"src": "8397:13:10",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2149,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "8397:7:10",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "8396:15:10"
									},
									"returnParameters": {
										"id": 2154,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2153,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 2279,
												"src": "8435:7:10",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2152,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "8435:7:10",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "8434:9:10"
									},
									"scope": 2607,
									"src": "8383:983:10",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 2314,
										"nodeType": "Block",
										"src": "9599:165:10",
										"statements": [
											{
												"id": 2313,
												"nodeType": "UncheckedBlock",
												"src": "9609:149:10",
												"statements": [
													{
														"assignments": [
															2291
														],
														"declarations": [
															{
																"constant": false,
																"id": 2291,
																"mutability": "mutable",
																"name": "result",
																"nameLocation": "9641:6:10",
																"nodeType": "VariableDeclaration",
																"scope": 2313,
																"src": "9633:14:10",
																"stateVariable": false,
																"storageLocation": "default",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"typeName": {
																	"id": 2290,
																	"name": "uint256",
																	"nodeType": "ElementaryTypeName",
																	"src": "9633:7:10",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"visibility": "internal"
															}
														],
														"id": 2295,
														"initialValue": {
															"arguments": [
																{
																	"id": 2293,
																	"name": "value",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 2282,
																	"src": "9655:5:10",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																],
																"id": 2292,
																"name": "log2",
																"nodeType": "Identifier",
																"overloadedDeclarations": [
																	2279,
																	2315
																],
																"referencedDeclaration": 2279,
																"src": "9650:4:10",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_internal_pure$_t_uint256_$returns$_t_uint256_$",
																	"typeString": "function (uint256) pure returns (uint256)"
																}
															},
															"id": 2294,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "9650:11:10",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"nodeType": "VariableDeclarationStatement",
														"src": "9633:28:10"
													},
													{
														"expression": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 2311,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 2296,
																"name": "result",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 2291,
																"src": "9682:6:10",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "+",
															"rightExpression": {
																"components": [
																	{
																		"condition": {
																			"commonType": {
																				"typeIdentifier": "t_bool",
																				"typeString": "bool"
																			},
																			"id": 2306,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"leftExpression": {
																				"commonType": {
																					"typeIdentifier": "t_enum$_Rounding_$1749",
																					"typeString": "enum Math.Rounding"
																				},
																				"id": 2300,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": false,
																				"lValueRequested": false,
																				"leftExpression": {
																					"id": 2297,
																					"name": "rounding",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 2285,
																					"src": "9692:8:10",
																					"typeDescriptions": {
																						"typeIdentifier": "t_enum$_Rounding_$1749",
																						"typeString": "enum Math.Rounding"
																					}
																				},
																				"nodeType": "BinaryOperation",
																				"operator": "==",
																				"rightExpression": {
																					"expression": {
																						"id": 2298,
																						"name": "Rounding",
																						"nodeType": "Identifier",
																						"overloadedDeclarations": [],
																						"referencedDeclaration": 1749,
																						"src": "9704:8:10",
																						"typeDescriptions": {
																							"typeIdentifier": "t_type$_t_enum$_Rounding_$1749_$",
																							"typeString": "type(enum Math.Rounding)"
																						}
																					},
																					"id": 2299,
																					"isConstant": false,
																					"isLValue": false,
																					"isPure": true,
																					"lValueRequested": false,
																					"memberLocation": "9713:2:10",
																					"memberName": "Up",
																					"nodeType": "MemberAccess",
																					"referencedDeclaration": 1747,
																					"src": "9704:11:10",
																					"typeDescriptions": {
																						"typeIdentifier": "t_enum$_Rounding_$1749",
																						"typeString": "enum Math.Rounding"
																					}
																				},
																				"src": "9692:23:10",
																				"typeDescriptions": {
																					"typeIdentifier": "t_bool",
																					"typeString": "bool"
																				}
																			},
																			"nodeType": "BinaryOperation",
																			"operator": "&&",
																			"rightExpression": {
																				"commonType": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				},
																				"id": 2305,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": false,
																				"lValueRequested": false,
																				"leftExpression": {
																					"commonType": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					},
																					"id": 2303,
																					"isConstant": false,
																					"isLValue": false,
																					"isPure": false,
																					"lValueRequested": false,
																					"leftExpression": {
																						"hexValue": "31",
																						"id": 2301,
																						"isConstant": false,
																						"isLValue": false,
																						"isPure": true,
																						"kind": "number",
																						"lValueRequested": false,
																						"nodeType": "Literal",
																						"src": "9719:1:10",
																						"typeDescriptions": {
																							"typeIdentifier": "t_rational_1_by_1",
																							"typeString": "int_const 1"
																						},
																						"value": "1"
																					},
																					"nodeType": "BinaryOperation",
																					"operator": "<<",
																					"rightExpression": {
																						"id": 2302,
																						"name": "result",
																						"nodeType": "Identifier",
																						"overloadedDeclarations": [],
																						"referencedDeclaration": 2291,
																						"src": "9724:6:10",
																						"typeDescriptions": {
																							"typeIdentifier": "t_uint256",
																							"typeString": "uint256"
																						}
																					},
																					"src": "9719:11:10",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				"nodeType": "BinaryOperation",
																				"operator": "<",
																				"rightExpression": {
																					"id": 2304,
																					"name": "value",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 2282,
																					"src": "9733:5:10",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				"src": "9719:19:10",
																				"typeDescriptions": {
																					"typeIdentifier": "t_bool",
																					"typeString": "bool"
																				}
																			},
																			"src": "9692:46:10",
																			"typeDescriptions": {
																				"typeIdentifier": "t_bool",
																				"typeString": "bool"
																			}
																		},
																		"falseExpression": {
																			"hexValue": "30",
																			"id": 2308,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "9745:1:10",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_0_by_1",
																				"typeString": "int_const 0"
																			},
																			"value": "0"
																		},
																		"id": 2309,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"nodeType": "Conditional",
																		"src": "9692:54:10",
																		"trueExpression": {
																			"hexValue": "31",
																			"id": 2307,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "9741:1:10",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_1_by_1",
																				"typeString": "int_const 1"
																			},
																			"value": "1"
																		},
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint8",
																			"typeString": "uint8"
																		}
																	}
																],
																"id": 2310,
																"isConstant": false,
																"isInlineArray": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"nodeType": "TupleExpression",
																"src": "9691:56:10",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint8",
																	"typeString": "uint8"
																}
															},
															"src": "9682:65:10",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"functionReturnParameters": 2289,
														"id": 2312,
														"nodeType": "Return",
														"src": "9675:72:10"
													}
												]
											}
										]
									},
									"documentation": {
										"id": 2280,
										"nodeType": "StructuredDocumentation",
										"src": "9372:142:10",
										"text": " @dev Return the log in base 2, following the selected rounding direction, of a positive value.\n Returns 0 if given 0."
									},
									"id": 2315,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "log2",
									"nameLocation": "9528:4:10",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 2286,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2282,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "9541:5:10",
												"nodeType": "VariableDeclaration",
												"scope": 2315,
												"src": "9533:13:10",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2281,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "9533:7:10",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2285,
												"mutability": "mutable",
												"name": "rounding",
												"nameLocation": "9557:8:10",
												"nodeType": "VariableDeclaration",
												"scope": 2315,
												"src": "9548:17:10",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_enum$_Rounding_$1749",
													"typeString": "enum Math.Rounding"
												},
												"typeName": {
													"id": 2284,
													"nodeType": "UserDefinedTypeName",
													"pathNode": {
														"id": 2283,
														"name": "Rounding",
														"nameLocations": [
															"9548:8:10"
														],
														"nodeType": "IdentifierPath",
														"referencedDeclaration": 1749,
														"src": "9548:8:10"
													},
													"referencedDeclaration": 1749,
													"src": "9548:8:10",
													"typeDescriptions": {
														"typeIdentifier": "t_enum$_Rounding_$1749",
														"typeString": "enum Math.Rounding"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "9532:34:10"
									},
									"returnParameters": {
										"id": 2289,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2288,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 2315,
												"src": "9590:7:10",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2287,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "9590:7:10",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "9589:9:10"
									},
									"scope": 2607,
									"src": "9519:245:10",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 2443,
										"nodeType": "Block",
										"src": "9951:828:10",
										"statements": [
											{
												"assignments": [
													2324
												],
												"declarations": [
													{
														"constant": false,
														"id": 2324,
														"mutability": "mutable",
														"name": "result",
														"nameLocation": "9969:6:10",
														"nodeType": "VariableDeclaration",
														"scope": 2443,
														"src": "9961:14:10",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 2323,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "9961:7:10",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 2326,
												"initialValue": {
													"hexValue": "30",
													"id": 2325,
													"isConstant": false,
													"isLValue": false,
													"isPure": true,
													"kind": "number",
													"lValueRequested": false,
													"nodeType": "Literal",
													"src": "9978:1:10",
													"typeDescriptions": {
														"typeIdentifier": "t_rational_0_by_1",
														"typeString": "int_const 0"
													},
													"value": "0"
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "9961:18:10"
											},
											{
												"id": 2440,
												"nodeType": "UncheckedBlock",
												"src": "9989:761:10",
												"statements": [
													{
														"condition": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 2331,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 2327,
																"name": "value",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 2318,
																"src": "10017:5:10",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">=",
															"rightExpression": {
																"commonType": {
																	"typeIdentifier": "t_rational_10000000000000000000000000000000000000000000000000000000000000000_by_1",
																	"typeString": "int_const 1000...(57 digits omitted)...0000"
																},
																"id": 2330,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"leftExpression": {
																	"hexValue": "3130",
																	"id": 2328,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "10026:2:10",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_10_by_1",
																		"typeString": "int_const 10"
																	},
																	"value": "10"
																},
																"nodeType": "BinaryOperation",
																"operator": "**",
																"rightExpression": {
																	"hexValue": "3634",
																	"id": 2329,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "10030:2:10",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_64_by_1",
																		"typeString": "int_const 64"
																	},
																	"value": "64"
																},
																"src": "10026:6:10",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_10000000000000000000000000000000000000000000000000000000000000000_by_1",
																	"typeString": "int_const 1000...(57 digits omitted)...0000"
																}
															},
															"src": "10017:15:10",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"id": 2343,
														"nodeType": "IfStatement",
														"src": "10013:99:10",
														"trueBody": {
															"id": 2342,
															"nodeType": "Block",
															"src": "10034:78:10",
															"statements": [
																{
																	"expression": {
																		"id": 2336,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"id": 2332,
																			"name": "value",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 2318,
																			"src": "10052:5:10",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": "/=",
																		"rightHandSide": {
																			"commonType": {
																				"typeIdentifier": "t_rational_10000000000000000000000000000000000000000000000000000000000000000_by_1",
																				"typeString": "int_const 1000...(57 digits omitted)...0000"
																			},
																			"id": 2335,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"lValueRequested": false,
																			"leftExpression": {
																				"hexValue": "3130",
																				"id": 2333,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"kind": "number",
																				"lValueRequested": false,
																				"nodeType": "Literal",
																				"src": "10061:2:10",
																				"typeDescriptions": {
																					"typeIdentifier": "t_rational_10_by_1",
																					"typeString": "int_const 10"
																				},
																				"value": "10"
																			},
																			"nodeType": "BinaryOperation",
																			"operator": "**",
																			"rightExpression": {
																				"hexValue": "3634",
																				"id": 2334,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"kind": "number",
																				"lValueRequested": false,
																				"nodeType": "Literal",
																				"src": "10065:2:10",
																				"typeDescriptions": {
																					"typeIdentifier": "t_rational_64_by_1",
																					"typeString": "int_const 64"
																				},
																				"value": "64"
																			},
																			"src": "10061:6:10",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_10000000000000000000000000000000000000000000000000000000000000000_by_1",
																				"typeString": "int_const 1000...(57 digits omitted)...0000"
																			}
																		},
																		"src": "10052:15:10",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 2337,
																	"nodeType": "ExpressionStatement",
																	"src": "10052:15:10"
																},
																{
																	"expression": {
																		"id": 2340,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"id": 2338,
																			"name": "result",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 2324,
																			"src": "10085:6:10",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": "+=",
																		"rightHandSide": {
																			"hexValue": "3634",
																			"id": 2339,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "10095:2:10",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_64_by_1",
																				"typeString": "int_const 64"
																			},
																			"value": "64"
																		},
																		"src": "10085:12:10",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 2341,
																	"nodeType": "ExpressionStatement",
																	"src": "10085:12:10"
																}
															]
														}
													},
													{
														"condition": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 2348,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 2344,
																"name": "value",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 2318,
																"src": "10129:5:10",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">=",
															"rightExpression": {
																"commonType": {
																	"typeIdentifier": "t_rational_100000000000000000000000000000000_by_1",
																	"typeString": "int_const 1000...(25 digits omitted)...0000"
																},
																"id": 2347,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"leftExpression": {
																	"hexValue": "3130",
																	"id": 2345,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "10138:2:10",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_10_by_1",
																		"typeString": "int_const 10"
																	},
																	"value": "10"
																},
																"nodeType": "BinaryOperation",
																"operator": "**",
																"rightExpression": {
																	"hexValue": "3332",
																	"id": 2346,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "10142:2:10",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_32_by_1",
																		"typeString": "int_const 32"
																	},
																	"value": "32"
																},
																"src": "10138:6:10",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_100000000000000000000000000000000_by_1",
																	"typeString": "int_const 1000...(25 digits omitted)...0000"
																}
															},
															"src": "10129:15:10",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"id": 2360,
														"nodeType": "IfStatement",
														"src": "10125:99:10",
														"trueBody": {
															"id": 2359,
															"nodeType": "Block",
															"src": "10146:78:10",
															"statements": [
																{
																	"expression": {
																		"id": 2353,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"id": 2349,
																			"name": "value",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 2318,
																			"src": "10164:5:10",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": "/=",
																		"rightHandSide": {
																			"commonType": {
																				"typeIdentifier": "t_rational_100000000000000000000000000000000_by_1",
																				"typeString": "int_const 1000...(25 digits omitted)...0000"
																			},
																			"id": 2352,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"lValueRequested": false,
																			"leftExpression": {
																				"hexValue": "3130",
																				"id": 2350,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"kind": "number",
																				"lValueRequested": false,
																				"nodeType": "Literal",
																				"src": "10173:2:10",
																				"typeDescriptions": {
																					"typeIdentifier": "t_rational_10_by_1",
																					"typeString": "int_const 10"
																				},
																				"value": "10"
																			},
																			"nodeType": "BinaryOperation",
																			"operator": "**",
																			"rightExpression": {
																				"hexValue": "3332",
																				"id": 2351,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"kind": "number",
																				"lValueRequested": false,
																				"nodeType": "Literal",
																				"src": "10177:2:10",
																				"typeDescriptions": {
																					"typeIdentifier": "t_rational_32_by_1",
																					"typeString": "int_const 32"
																				},
																				"value": "32"
																			},
																			"src": "10173:6:10",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_100000000000000000000000000000000_by_1",
																				"typeString": "int_const 1000...(25 digits omitted)...0000"
																			}
																		},
																		"src": "10164:15:10",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 2354,
																	"nodeType": "ExpressionStatement",
																	"src": "10164:15:10"
																},
																{
																	"expression": {
																		"id": 2357,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"id": 2355,
																			"name": "result",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 2324,
																			"src": "10197:6:10",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": "+=",
																		"rightHandSide": {
																			"hexValue": "3332",
																			"id": 2356,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "10207:2:10",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_32_by_1",
																				"typeString": "int_const 32"
																			},
																			"value": "32"
																		},
																		"src": "10197:12:10",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 2358,
																	"nodeType": "ExpressionStatement",
																	"src": "10197:12:10"
																}
															]
														}
													},
													{
														"condition": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 2365,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 2361,
																"name": "value",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 2318,
																"src": "10241:5:10",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">=",
															"rightExpression": {
																"commonType": {
																	"typeIdentifier": "t_rational_10000000000000000_by_1",
																	"typeString": "int_const 10000000000000000"
																},
																"id": 2364,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"leftExpression": {
																	"hexValue": "3130",
																	"id": 2362,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "10250:2:10",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_10_by_1",
																		"typeString": "int_const 10"
																	},
																	"value": "10"
																},
																"nodeType": "BinaryOperation",
																"operator": "**",
																"rightExpression": {
																	"hexValue": "3136",
																	"id": 2363,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "10254:2:10",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_16_by_1",
																		"typeString": "int_const 16"
																	},
																	"value": "16"
																},
																"src": "10250:6:10",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_10000000000000000_by_1",
																	"typeString": "int_const 10000000000000000"
																}
															},
															"src": "10241:15:10",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"id": 2377,
														"nodeType": "IfStatement",
														"src": "10237:99:10",
														"trueBody": {
															"id": 2376,
															"nodeType": "Block",
															"src": "10258:78:10",
															"statements": [
																{
																	"expression": {
																		"id": 2370,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"id": 2366,
																			"name": "value",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 2318,
																			"src": "10276:5:10",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": "/=",
																		"rightHandSide": {
																			"commonType": {
																				"typeIdentifier": "t_rational_10000000000000000_by_1",
																				"typeString": "int_const 10000000000000000"
																			},
																			"id": 2369,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"lValueRequested": false,
																			"leftExpression": {
																				"hexValue": "3130",
																				"id": 2367,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"kind": "number",
																				"lValueRequested": false,
																				"nodeType": "Literal",
																				"src": "10285:2:10",
																				"typeDescriptions": {
																					"typeIdentifier": "t_rational_10_by_1",
																					"typeString": "int_const 10"
																				},
																				"value": "10"
																			},
																			"nodeType": "BinaryOperation",
																			"operator": "**",
																			"rightExpression": {
																				"hexValue": "3136",
																				"id": 2368,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"kind": "number",
																				"lValueRequested": false,
																				"nodeType": "Literal",
																				"src": "10289:2:10",
																				"typeDescriptions": {
																					"typeIdentifier": "t_rational_16_by_1",
																					"typeString": "int_const 16"
																				},
																				"value": "16"
																			},
																			"src": "10285:6:10",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_10000000000000000_by_1",
																				"typeString": "int_const 10000000000000000"
																			}
																		},
																		"src": "10276:15:10",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 2371,
																	"nodeType": "ExpressionStatement",
																	"src": "10276:15:10"
																},
																{
																	"expression": {
																		"id": 2374,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"id": 2372,
																			"name": "result",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 2324,
																			"src": "10309:6:10",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": "+=",
																		"rightHandSide": {
																			"hexValue": "3136",
																			"id": 2373,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "10319:2:10",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_16_by_1",
																				"typeString": "int_const 16"
																			},
																			"value": "16"
																		},
																		"src": "10309:12:10",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 2375,
																	"nodeType": "ExpressionStatement",
																	"src": "10309:12:10"
																}
															]
														}
													},
													{
														"condition": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 2382,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 2378,
																"name": "value",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 2318,
																"src": "10353:5:10",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">=",
															"rightExpression": {
																"commonType": {
																	"typeIdentifier": "t_rational_100000000_by_1",
																	"typeString": "int_const 100000000"
																},
																"id": 2381,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"leftExpression": {
																	"hexValue": "3130",
																	"id": 2379,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "10362:2:10",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_10_by_1",
																		"typeString": "int_const 10"
																	},
																	"value": "10"
																},
																"nodeType": "BinaryOperation",
																"operator": "**",
																"rightExpression": {
																	"hexValue": "38",
																	"id": 2380,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "10366:1:10",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_8_by_1",
																		"typeString": "int_const 8"
																	},
																	"value": "8"
																},
																"src": "10362:5:10",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_100000000_by_1",
																	"typeString": "int_const 100000000"
																}
															},
															"src": "10353:14:10",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"id": 2394,
														"nodeType": "IfStatement",
														"src": "10349:96:10",
														"trueBody": {
															"id": 2393,
															"nodeType": "Block",
															"src": "10369:76:10",
															"statements": [
																{
																	"expression": {
																		"id": 2387,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"id": 2383,
																			"name": "value",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 2318,
																			"src": "10387:5:10",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": "/=",
																		"rightHandSide": {
																			"commonType": {
																				"typeIdentifier": "t_rational_100000000_by_1",
																				"typeString": "int_const 100000000"
																			},
																			"id": 2386,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"lValueRequested": false,
																			"leftExpression": {
																				"hexValue": "3130",
																				"id": 2384,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"kind": "number",
																				"lValueRequested": false,
																				"nodeType": "Literal",
																				"src": "10396:2:10",
																				"typeDescriptions": {
																					"typeIdentifier": "t_rational_10_by_1",
																					"typeString": "int_const 10"
																				},
																				"value": "10"
																			},
																			"nodeType": "BinaryOperation",
																			"operator": "**",
																			"rightExpression": {
																				"hexValue": "38",
																				"id": 2385,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"kind": "number",
																				"lValueRequested": false,
																				"nodeType": "Literal",
																				"src": "10400:1:10",
																				"typeDescriptions": {
																					"typeIdentifier": "t_rational_8_by_1",
																					"typeString": "int_const 8"
																				},
																				"value": "8"
																			},
																			"src": "10396:5:10",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_100000000_by_1",
																				"typeString": "int_const 100000000"
																			}
																		},
																		"src": "10387:14:10",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 2388,
																	"nodeType": "ExpressionStatement",
																	"src": "10387:14:10"
																},
																{
																	"expression": {
																		"id": 2391,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"id": 2389,
																			"name": "result",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 2324,
																			"src": "10419:6:10",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": "+=",
																		"rightHandSide": {
																			"hexValue": "38",
																			"id": 2390,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "10429:1:10",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_8_by_1",
																				"typeString": "int_const 8"
																			},
																			"value": "8"
																		},
																		"src": "10419:11:10",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 2392,
																	"nodeType": "ExpressionStatement",
																	"src": "10419:11:10"
																}
															]
														}
													},
													{
														"condition": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 2399,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 2395,
																"name": "value",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 2318,
																"src": "10462:5:10",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">=",
															"rightExpression": {
																"commonType": {
																	"typeIdentifier": "t_rational_10000_by_1",
																	"typeString": "int_const 10000"
																},
																"id": 2398,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"leftExpression": {
																	"hexValue": "3130",
																	"id": 2396,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "10471:2:10",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_10_by_1",
																		"typeString": "int_const 10"
																	},
																	"value": "10"
																},
																"nodeType": "BinaryOperation",
																"operator": "**",
																"rightExpression": {
																	"hexValue": "34",
																	"id": 2397,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "10475:1:10",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_4_by_1",
																		"typeString": "int_const 4"
																	},
																	"value": "4"
																},
																"src": "10471:5:10",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_10000_by_1",
																	"typeString": "int_const 10000"
																}
															},
															"src": "10462:14:10",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"id": 2411,
														"nodeType": "IfStatement",
														"src": "10458:96:10",
														"trueBody": {
															"id": 2410,
															"nodeType": "Block",
															"src": "10478:76:10",
															"statements": [
																{
																	"expression": {
																		"id": 2404,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"id": 2400,
																			"name": "value",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 2318,
																			"src": "10496:5:10",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": "/=",
																		"rightHandSide": {
																			"commonType": {
																				"typeIdentifier": "t_rational_10000_by_1",
																				"typeString": "int_const 10000"
																			},
																			"id": 2403,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"lValueRequested": false,
																			"leftExpression": {
																				"hexValue": "3130",
																				"id": 2401,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"kind": "number",
																				"lValueRequested": false,
																				"nodeType": "Literal",
																				"src": "10505:2:10",
																				"typeDescriptions": {
																					"typeIdentifier": "t_rational_10_by_1",
																					"typeString": "int_const 10"
																				},
																				"value": "10"
																			},
																			"nodeType": "BinaryOperation",
																			"operator": "**",
																			"rightExpression": {
																				"hexValue": "34",
																				"id": 2402,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"kind": "number",
																				"lValueRequested": false,
																				"nodeType": "Literal",
																				"src": "10509:1:10",
																				"typeDescriptions": {
																					"typeIdentifier": "t_rational_4_by_1",
																					"typeString": "int_const 4"
																				},
																				"value": "4"
																			},
																			"src": "10505:5:10",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_10000_by_1",
																				"typeString": "int_const 10000"
																			}
																		},
																		"src": "10496:14:10",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 2405,
																	"nodeType": "ExpressionStatement",
																	"src": "10496:14:10"
																},
																{
																	"expression": {
																		"id": 2408,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"id": 2406,
																			"name": "result",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 2324,
																			"src": "10528:6:10",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": "+=",
																		"rightHandSide": {
																			"hexValue": "34",
																			"id": 2407,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "10538:1:10",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_4_by_1",
																				"typeString": "int_const 4"
																			},
																			"value": "4"
																		},
																		"src": "10528:11:10",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 2409,
																	"nodeType": "ExpressionStatement",
																	"src": "10528:11:10"
																}
															]
														}
													},
													{
														"condition": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 2416,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 2412,
																"name": "value",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 2318,
																"src": "10571:5:10",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">=",
															"rightExpression": {
																"commonType": {
																	"typeIdentifier": "t_rational_100_by_1",
																	"typeString": "int_const 100"
																},
																"id": 2415,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"leftExpression": {
																	"hexValue": "3130",
																	"id": 2413,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "10580:2:10",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_10_by_1",
																		"typeString": "int_const 10"
																	},
																	"value": "10"
																},
																"nodeType": "BinaryOperation",
																"operator": "**",
																"rightExpression": {
																	"hexValue": "32",
																	"id": 2414,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "10584:1:10",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_2_by_1",
																		"typeString": "int_const 2"
																	},
																	"value": "2"
																},
																"src": "10580:5:10",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_100_by_1",
																	"typeString": "int_const 100"
																}
															},
															"src": "10571:14:10",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"id": 2428,
														"nodeType": "IfStatement",
														"src": "10567:96:10",
														"trueBody": {
															"id": 2427,
															"nodeType": "Block",
															"src": "10587:76:10",
															"statements": [
																{
																	"expression": {
																		"id": 2421,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"id": 2417,
																			"name": "value",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 2318,
																			"src": "10605:5:10",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": "/=",
																		"rightHandSide": {
																			"commonType": {
																				"typeIdentifier": "t_rational_100_by_1",
																				"typeString": "int_const 100"
																			},
																			"id": 2420,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"lValueRequested": false,
																			"leftExpression": {
																				"hexValue": "3130",
																				"id": 2418,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"kind": "number",
																				"lValueRequested": false,
																				"nodeType": "Literal",
																				"src": "10614:2:10",
																				"typeDescriptions": {
																					"typeIdentifier": "t_rational_10_by_1",
																					"typeString": "int_const 10"
																				},
																				"value": "10"
																			},
																			"nodeType": "BinaryOperation",
																			"operator": "**",
																			"rightExpression": {
																				"hexValue": "32",
																				"id": 2419,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"kind": "number",
																				"lValueRequested": false,
																				"nodeType": "Literal",
																				"src": "10618:1:10",
																				"typeDescriptions": {
																					"typeIdentifier": "t_rational_2_by_1",
																					"typeString": "int_const 2"
																				},
																				"value": "2"
																			},
																			"src": "10614:5:10",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_100_by_1",
																				"typeString": "int_const 100"
																			}
																		},
																		"src": "10605:14:10",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 2422,
																	"nodeType": "ExpressionStatement",
																	"src": "10605:14:10"
																},
																{
																	"expression": {
																		"id": 2425,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"id": 2423,
																			"name": "result",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 2324,
																			"src": "10637:6:10",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": "+=",
																		"rightHandSide": {
																			"hexValue": "32",
																			"id": 2424,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "10647:1:10",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_2_by_1",
																				"typeString": "int_const 2"
																			},
																			"value": "2"
																		},
																		"src": "10637:11:10",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 2426,
																	"nodeType": "ExpressionStatement",
																	"src": "10637:11:10"
																}
															]
														}
													},
													{
														"condition": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 2433,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 2429,
																"name": "value",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 2318,
																"src": "10680:5:10",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">=",
															"rightExpression": {
																"commonType": {
																	"typeIdentifier": "t_rational_10_by_1",
																	"typeString": "int_const 10"
																},
																"id": 2432,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"leftExpression": {
																	"hexValue": "3130",
																	"id": 2430,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "10689:2:10",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_10_by_1",
																		"typeString": "int_const 10"
																	},
																	"value": "10"
																},
																"nodeType": "BinaryOperation",
																"operator": "**",
																"rightExpression": {
																	"hexValue": "31",
																	"id": 2431,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "10693:1:10",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_1_by_1",
																		"typeString": "int_const 1"
																	},
																	"value": "1"
																},
																"src": "10689:5:10",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_10_by_1",
																	"typeString": "int_const 10"
																}
															},
															"src": "10680:14:10",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"id": 2439,
														"nodeType": "IfStatement",
														"src": "10676:64:10",
														"trueBody": {
															"id": 2438,
															"nodeType": "Block",
															"src": "10696:44:10",
															"statements": [
																{
																	"expression": {
																		"id": 2436,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"id": 2434,
																			"name": "result",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 2324,
																			"src": "10714:6:10",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": "+=",
																		"rightHandSide": {
																			"hexValue": "31",
																			"id": 2435,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "10724:1:10",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_1_by_1",
																				"typeString": "int_const 1"
																			},
																			"value": "1"
																		},
																		"src": "10714:11:10",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 2437,
																	"nodeType": "ExpressionStatement",
																	"src": "10714:11:10"
																}
															]
														}
													}
												]
											},
											{
												"expression": {
													"id": 2441,
													"name": "result",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 2324,
													"src": "10766:6:10",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 2322,
												"id": 2442,
												"nodeType": "Return",
												"src": "10759:13:10"
											}
										]
									},
									"documentation": {
										"id": 2316,
										"nodeType": "StructuredDocumentation",
										"src": "9770:114:10",
										"text": " @dev Return the log in base 10, rounded down, of a positive value.\n Returns 0 if given 0."
									},
									"id": 2444,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "log10",
									"nameLocation": "9898:5:10",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 2319,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2318,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "9912:5:10",
												"nodeType": "VariableDeclaration",
												"scope": 2444,
												"src": "9904:13:10",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2317,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "9904:7:10",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "9903:15:10"
									},
									"returnParameters": {
										"id": 2322,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2321,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 2444,
												"src": "9942:7:10",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2320,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "9942:7:10",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "9941:9:10"
									},
									"scope": 2607,
									"src": "9889:890:10",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 2479,
										"nodeType": "Block",
										"src": "11014:165:10",
										"statements": [
											{
												"id": 2478,
												"nodeType": "UncheckedBlock",
												"src": "11024:149:10",
												"statements": [
													{
														"assignments": [
															2456
														],
														"declarations": [
															{
																"constant": false,
																"id": 2456,
																"mutability": "mutable",
																"name": "result",
																"nameLocation": "11056:6:10",
																"nodeType": "VariableDeclaration",
																"scope": 2478,
																"src": "11048:14:10",
																"stateVariable": false,
																"storageLocation": "default",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"typeName": {
																	"id": 2455,
																	"name": "uint256",
																	"nodeType": "ElementaryTypeName",
																	"src": "11048:7:10",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"visibility": "internal"
															}
														],
														"id": 2460,
														"initialValue": {
															"arguments": [
																{
																	"id": 2458,
																	"name": "value",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 2447,
																	"src": "11071:5:10",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																],
																"id": 2457,
																"name": "log10",
																"nodeType": "Identifier",
																"overloadedDeclarations": [
																	2444,
																	2480
																],
																"referencedDeclaration": 2444,
																"src": "11065:5:10",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_internal_pure$_t_uint256_$returns$_t_uint256_$",
																	"typeString": "function (uint256) pure returns (uint256)"
																}
															},
															"id": 2459,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "11065:12:10",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"nodeType": "VariableDeclarationStatement",
														"src": "11048:29:10"
													},
													{
														"expression": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 2476,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 2461,
																"name": "result",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 2456,
																"src": "11098:6:10",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "+",
															"rightExpression": {
																"components": [
																	{
																		"condition": {
																			"commonType": {
																				"typeIdentifier": "t_bool",
																				"typeString": "bool"
																			},
																			"id": 2471,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"leftExpression": {
																				"commonType": {
																					"typeIdentifier": "t_enum$_Rounding_$1749",
																					"typeString": "enum Math.Rounding"
																				},
																				"id": 2465,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": false,
																				"lValueRequested": false,
																				"leftExpression": {
																					"id": 2462,
																					"name": "rounding",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 2450,
																					"src": "11108:8:10",
																					"typeDescriptions": {
																						"typeIdentifier": "t_enum$_Rounding_$1749",
																						"typeString": "enum Math.Rounding"
																					}
																				},
																				"nodeType": "BinaryOperation",
																				"operator": "==",
																				"rightExpression": {
																					"expression": {
																						"id": 2463,
																						"name": "Rounding",
																						"nodeType": "Identifier",
																						"overloadedDeclarations": [],
																						"referencedDeclaration": 1749,
																						"src": "11120:8:10",
																						"typeDescriptions": {
																							"typeIdentifier": "t_type$_t_enum$_Rounding_$1749_$",
																							"typeString": "type(enum Math.Rounding)"
																						}
																					},
																					"id": 2464,
																					"isConstant": false,
																					"isLValue": false,
																					"isPure": true,
																					"lValueRequested": false,
																					"memberLocation": "11129:2:10",
																					"memberName": "Up",
																					"nodeType": "MemberAccess",
																					"referencedDeclaration": 1747,
																					"src": "11120:11:10",
																					"typeDescriptions": {
																						"typeIdentifier": "t_enum$_Rounding_$1749",
																						"typeString": "enum Math.Rounding"
																					}
																				},
																				"src": "11108:23:10",
																				"typeDescriptions": {
																					"typeIdentifier": "t_bool",
																					"typeString": "bool"
																				}
																			},
																			"nodeType": "BinaryOperation",
																			"operator": "&&",
																			"rightExpression": {
																				"commonType": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				},
																				"id": 2470,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": false,
																				"lValueRequested": false,
																				"leftExpression": {
																					"commonType": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					},
																					"id": 2468,
																					"isConstant": false,
																					"isLValue": false,
																					"isPure": false,
																					"lValueRequested": false,
																					"leftExpression": {
																						"hexValue": "3130",
																						"id": 2466,
																						"isConstant": false,
																						"isLValue": false,
																						"isPure": true,
																						"kind": "number",
																						"lValueRequested": false,
																						"nodeType": "Literal",
																						"src": "11135:2:10",
																						"typeDescriptions": {
																							"typeIdentifier": "t_rational_10_by_1",
																							"typeString": "int_const 10"
																						},
																						"value": "10"
																					},
																					"nodeType": "BinaryOperation",
																					"operator": "**",
																					"rightExpression": {
																						"id": 2467,
																						"name": "result",
																						"nodeType": "Identifier",
																						"overloadedDeclarations": [],
																						"referencedDeclaration": 2456,
																						"src": "11139:6:10",
																						"typeDescriptions": {
																							"typeIdentifier": "t_uint256",
																							"typeString": "uint256"
																						}
																					},
																					"src": "11135:10:10",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				"nodeType": "BinaryOperation",
																				"operator": "<",
																				"rightExpression": {
																					"id": 2469,
																					"name": "value",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 2447,
																					"src": "11148:5:10",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				"src": "11135:18:10",
																				"typeDescriptions": {
																					"typeIdentifier": "t_bool",
																					"typeString": "bool"
																				}
																			},
																			"src": "11108:45:10",
																			"typeDescriptions": {
																				"typeIdentifier": "t_bool",
																				"typeString": "bool"
																			}
																		},
																		"falseExpression": {
																			"hexValue": "30",
																			"id": 2473,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "11160:1:10",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_0_by_1",
																				"typeString": "int_const 0"
																			},
																			"value": "0"
																		},
																		"id": 2474,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"nodeType": "Conditional",
																		"src": "11108:53:10",
																		"trueExpression": {
																			"hexValue": "31",
																			"id": 2472,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "11156:1:10",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_1_by_1",
																				"typeString": "int_const 1"
																			},
																			"value": "1"
																		},
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint8",
																			"typeString": "uint8"
																		}
																	}
																],
																"id": 2475,
																"isConstant": false,
																"isInlineArray": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"nodeType": "TupleExpression",
																"src": "11107:55:10",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint8",
																	"typeString": "uint8"
																}
															},
															"src": "11098:64:10",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"functionReturnParameters": 2454,
														"id": 2477,
														"nodeType": "Return",
														"src": "11091:71:10"
													}
												]
											}
										]
									},
									"documentation": {
										"id": 2445,
										"nodeType": "StructuredDocumentation",
										"src": "10785:143:10",
										"text": " @dev Return the log in base 10, following the selected rounding direction, of a positive value.\n Returns 0 if given 0."
									},
									"id": 2480,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "log10",
									"nameLocation": "10942:5:10",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 2451,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2447,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "10956:5:10",
												"nodeType": "VariableDeclaration",
												"scope": 2480,
												"src": "10948:13:10",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2446,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "10948:7:10",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2450,
												"mutability": "mutable",
												"name": "rounding",
												"nameLocation": "10972:8:10",
												"nodeType": "VariableDeclaration",
												"scope": 2480,
												"src": "10963:17:10",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_enum$_Rounding_$1749",
													"typeString": "enum Math.Rounding"
												},
												"typeName": {
													"id": 2449,
													"nodeType": "UserDefinedTypeName",
													"pathNode": {
														"id": 2448,
														"name": "Rounding",
														"nameLocations": [
															"10963:8:10"
														],
														"nodeType": "IdentifierPath",
														"referencedDeclaration": 1749,
														"src": "10963:8:10"
													},
													"referencedDeclaration": 1749,
													"src": "10963:8:10",
													"typeDescriptions": {
														"typeIdentifier": "t_enum$_Rounding_$1749",
														"typeString": "enum Math.Rounding"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "10947:34:10"
									},
									"returnParameters": {
										"id": 2454,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2453,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 2480,
												"src": "11005:7:10",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2452,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "11005:7:10",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "11004:9:10"
									},
									"scope": 2607,
									"src": "10933:246:10",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 2566,
										"nodeType": "Block",
										"src": "11493:600:10",
										"statements": [
											{
												"assignments": [
													2489
												],
												"declarations": [
													{
														"constant": false,
														"id": 2489,
														"mutability": "mutable",
														"name": "result",
														"nameLocation": "11511:6:10",
														"nodeType": "VariableDeclaration",
														"scope": 2566,
														"src": "11503:14:10",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 2488,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "11503:7:10",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 2491,
												"initialValue": {
													"hexValue": "30",
													"id": 2490,
													"isConstant": false,
													"isLValue": false,
													"isPure": true,
													"kind": "number",
													"lValueRequested": false,
													"nodeType": "Literal",
													"src": "11520:1:10",
													"typeDescriptions": {
														"typeIdentifier": "t_rational_0_by_1",
														"typeString": "int_const 0"
													},
													"value": "0"
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "11503:18:10"
											},
											{
												"id": 2563,
												"nodeType": "UncheckedBlock",
												"src": "11531:533:10",
												"statements": [
													{
														"condition": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 2496,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 2494,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"id": 2492,
																	"name": "value",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 2483,
																	"src": "11559:5:10",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": ">>",
																"rightExpression": {
																	"hexValue": "313238",
																	"id": 2493,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "11568:3:10",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_128_by_1",
																		"typeString": "int_const 128"
																	},
																	"value": "128"
																},
																"src": "11559:12:10",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">",
															"rightExpression": {
																"hexValue": "30",
																"id": 2495,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "11574:1:10",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															},
															"src": "11559:16:10",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"id": 2506,
														"nodeType": "IfStatement",
														"src": "11555:98:10",
														"trueBody": {
															"id": 2505,
															"nodeType": "Block",
															"src": "11577:76:10",
															"statements": [
																{
																	"expression": {
																		"id": 2499,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"id": 2497,
																			"name": "value",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 2483,
																			"src": "11595:5:10",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": ">>=",
																		"rightHandSide": {
																			"hexValue": "313238",
																			"id": 2498,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "11605:3:10",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_128_by_1",
																				"typeString": "int_const 128"
																			},
																			"value": "128"
																		},
																		"src": "11595:13:10",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 2500,
																	"nodeType": "ExpressionStatement",
																	"src": "11595:13:10"
																},
																{
																	"expression": {
																		"id": 2503,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"id": 2501,
																			"name": "result",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 2489,
																			"src": "11626:6:10",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": "+=",
																		"rightHandSide": {
																			"hexValue": "3136",
																			"id": 2502,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "11636:2:10",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_16_by_1",
																				"typeString": "int_const 16"
																			},
																			"value": "16"
																		},
																		"src": "11626:12:10",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 2504,
																	"nodeType": "ExpressionStatement",
																	"src": "11626:12:10"
																}
															]
														}
													},
													{
														"condition": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 2511,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 2509,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"id": 2507,
																	"name": "value",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 2483,
																	"src": "11670:5:10",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": ">>",
																"rightExpression": {
																	"hexValue": "3634",
																	"id": 2508,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "11679:2:10",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_64_by_1",
																		"typeString": "int_const 64"
																	},
																	"value": "64"
																},
																"src": "11670:11:10",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">",
															"rightExpression": {
																"hexValue": "30",
																"id": 2510,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "11684:1:10",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															},
															"src": "11670:15:10",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"id": 2521,
														"nodeType": "IfStatement",
														"src": "11666:95:10",
														"trueBody": {
															"id": 2520,
															"nodeType": "Block",
															"src": "11687:74:10",
															"statements": [
																{
																	"expression": {
																		"id": 2514,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"id": 2512,
																			"name": "value",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 2483,
																			"src": "11705:5:10",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": ">>=",
																		"rightHandSide": {
																			"hexValue": "3634",
																			"id": 2513,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "11715:2:10",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_64_by_1",
																				"typeString": "int_const 64"
																			},
																			"value": "64"
																		},
																		"src": "11705:12:10",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 2515,
																	"nodeType": "ExpressionStatement",
																	"src": "11705:12:10"
																},
																{
																	"expression": {
																		"id": 2518,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"id": 2516,
																			"name": "result",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 2489,
																			"src": "11735:6:10",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": "+=",
																		"rightHandSide": {
																			"hexValue": "38",
																			"id": 2517,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "11745:1:10",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_8_by_1",
																				"typeString": "int_const 8"
																			},
																			"value": "8"
																		},
																		"src": "11735:11:10",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 2519,
																	"nodeType": "ExpressionStatement",
																	"src": "11735:11:10"
																}
															]
														}
													},
													{
														"condition": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 2526,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 2524,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"id": 2522,
																	"name": "value",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 2483,
																	"src": "11778:5:10",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": ">>",
																"rightExpression": {
																	"hexValue": "3332",
																	"id": 2523,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "11787:2:10",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_32_by_1",
																		"typeString": "int_const 32"
																	},
																	"value": "32"
																},
																"src": "11778:11:10",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">",
															"rightExpression": {
																"hexValue": "30",
																"id": 2525,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "11792:1:10",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															},
															"src": "11778:15:10",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"id": 2536,
														"nodeType": "IfStatement",
														"src": "11774:95:10",
														"trueBody": {
															"id": 2535,
															"nodeType": "Block",
															"src": "11795:74:10",
															"statements": [
																{
																	"expression": {
																		"id": 2529,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"id": 2527,
																			"name": "value",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 2483,
																			"src": "11813:5:10",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": ">>=",
																		"rightHandSide": {
																			"hexValue": "3332",
																			"id": 2528,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "11823:2:10",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_32_by_1",
																				"typeString": "int_const 32"
																			},
																			"value": "32"
																		},
																		"src": "11813:12:10",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 2530,
																	"nodeType": "ExpressionStatement",
																	"src": "11813:12:10"
																},
																{
																	"expression": {
																		"id": 2533,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"id": 2531,
																			"name": "result",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 2489,
																			"src": "11843:6:10",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": "+=",
																		"rightHandSide": {
																			"hexValue": "34",
																			"id": 2532,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "11853:1:10",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_4_by_1",
																				"typeString": "int_const 4"
																			},
																			"value": "4"
																		},
																		"src": "11843:11:10",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 2534,
																	"nodeType": "ExpressionStatement",
																	"src": "11843:11:10"
																}
															]
														}
													},
													{
														"condition": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 2541,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 2539,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"id": 2537,
																	"name": "value",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 2483,
																	"src": "11886:5:10",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": ">>",
																"rightExpression": {
																	"hexValue": "3136",
																	"id": 2538,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "11895:2:10",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_16_by_1",
																		"typeString": "int_const 16"
																	},
																	"value": "16"
																},
																"src": "11886:11:10",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">",
															"rightExpression": {
																"hexValue": "30",
																"id": 2540,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "11900:1:10",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															},
															"src": "11886:15:10",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"id": 2551,
														"nodeType": "IfStatement",
														"src": "11882:95:10",
														"trueBody": {
															"id": 2550,
															"nodeType": "Block",
															"src": "11903:74:10",
															"statements": [
																{
																	"expression": {
																		"id": 2544,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"id": 2542,
																			"name": "value",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 2483,
																			"src": "11921:5:10",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": ">>=",
																		"rightHandSide": {
																			"hexValue": "3136",
																			"id": 2543,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "11931:2:10",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_16_by_1",
																				"typeString": "int_const 16"
																			},
																			"value": "16"
																		},
																		"src": "11921:12:10",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 2545,
																	"nodeType": "ExpressionStatement",
																	"src": "11921:12:10"
																},
																{
																	"expression": {
																		"id": 2548,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"id": 2546,
																			"name": "result",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 2489,
																			"src": "11951:6:10",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": "+=",
																		"rightHandSide": {
																			"hexValue": "32",
																			"id": 2547,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "11961:1:10",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_2_by_1",
																				"typeString": "int_const 2"
																			},
																			"value": "2"
																		},
																		"src": "11951:11:10",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 2549,
																	"nodeType": "ExpressionStatement",
																	"src": "11951:11:10"
																}
															]
														}
													},
													{
														"condition": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 2556,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 2554,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"id": 2552,
																	"name": "value",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 2483,
																	"src": "11994:5:10",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": ">>",
																"rightExpression": {
																	"hexValue": "38",
																	"id": 2553,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "12003:1:10",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_8_by_1",
																		"typeString": "int_const 8"
																	},
																	"value": "8"
																},
																"src": "11994:10:10",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">",
															"rightExpression": {
																"hexValue": "30",
																"id": 2555,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "12007:1:10",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															},
															"src": "11994:14:10",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"id": 2562,
														"nodeType": "IfStatement",
														"src": "11990:64:10",
														"trueBody": {
															"id": 2561,
															"nodeType": "Block",
															"src": "12010:44:10",
															"statements": [
																{
																	"expression": {
																		"id": 2559,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"id": 2557,
																			"name": "result",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 2489,
																			"src": "12028:6:10",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": "+=",
																		"rightHandSide": {
																			"hexValue": "31",
																			"id": 2558,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "12038:1:10",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_1_by_1",
																				"typeString": "int_const 1"
																			},
																			"value": "1"
																		},
																		"src": "12028:11:10",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 2560,
																	"nodeType": "ExpressionStatement",
																	"src": "12028:11:10"
																}
															]
														}
													}
												]
											},
											{
												"expression": {
													"id": 2564,
													"name": "result",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 2489,
													"src": "12080:6:10",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 2487,
												"id": 2565,
												"nodeType": "Return",
												"src": "12073:13:10"
											}
										]
									},
									"documentation": {
										"id": 2481,
										"nodeType": "StructuredDocumentation",
										"src": "11185:240:10",
										"text": " @dev Return the log in base 256, rounded down, of a positive value.\n Returns 0 if given 0.\n Adding one to the result gives the number of pairs of hex symbols needed to represent `value` as a hex string."
									},
									"id": 2567,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "log256",
									"nameLocation": "11439:6:10",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 2484,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2483,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "11454:5:10",
												"nodeType": "VariableDeclaration",
												"scope": 2567,
												"src": "11446:13:10",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2482,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "11446:7:10",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "11445:15:10"
									},
									"returnParameters": {
										"id": 2487,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2486,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 2567,
												"src": "11484:7:10",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2485,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "11484:7:10",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "11483:9:10"
									},
									"scope": 2607,
									"src": "11430:663:10",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 2605,
										"nodeType": "Block",
										"src": "12329:173:10",
										"statements": [
											{
												"id": 2604,
												"nodeType": "UncheckedBlock",
												"src": "12339:157:10",
												"statements": [
													{
														"assignments": [
															2579
														],
														"declarations": [
															{
																"constant": false,
																"id": 2579,
																"mutability": "mutable",
																"name": "result",
																"nameLocation": "12371:6:10",
																"nodeType": "VariableDeclaration",
																"scope": 2604,
																"src": "12363:14:10",
																"stateVariable": false,
																"storageLocation": "default",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"typeName": {
																	"id": 2578,
																	"name": "uint256",
																	"nodeType": "ElementaryTypeName",
																	"src": "12363:7:10",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"visibility": "internal"
															}
														],
														"id": 2583,
														"initialValue": {
															"arguments": [
																{
																	"id": 2581,
																	"name": "value",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 2570,
																	"src": "12387:5:10",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																],
																"id": 2580,
																"name": "log256",
																"nodeType": "Identifier",
																"overloadedDeclarations": [
																	2567,
																	2606
																],
																"referencedDeclaration": 2567,
																"src": "12380:6:10",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_internal_pure$_t_uint256_$returns$_t_uint256_$",
																	"typeString": "function (uint256) pure returns (uint256)"
																}
															},
															"id": 2582,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "12380:13:10",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"nodeType": "VariableDeclarationStatement",
														"src": "12363:30:10"
													},
													{
														"expression": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 2602,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 2584,
																"name": "result",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 2579,
																"src": "12414:6:10",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "+",
															"rightExpression": {
																"components": [
																	{
																		"condition": {
																			"commonType": {
																				"typeIdentifier": "t_bool",
																				"typeString": "bool"
																			},
																			"id": 2597,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"leftExpression": {
																				"commonType": {
																					"typeIdentifier": "t_enum$_Rounding_$1749",
																					"typeString": "enum Math.Rounding"
																				},
																				"id": 2588,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": false,
																				"lValueRequested": false,
																				"leftExpression": {
																					"id": 2585,
																					"name": "rounding",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 2573,
																					"src": "12424:8:10",
																					"typeDescriptions": {
																						"typeIdentifier": "t_enum$_Rounding_$1749",
																						"typeString": "enum Math.Rounding"
																					}
																				},
																				"nodeType": "BinaryOperation",
																				"operator": "==",
																				"rightExpression": {
																					"expression": {
																						"id": 2586,
																						"name": "Rounding",
																						"nodeType": "Identifier",
																						"overloadedDeclarations": [],
																						"referencedDeclaration": 1749,
																						"src": "12436:8:10",
																						"typeDescriptions": {
																							"typeIdentifier": "t_type$_t_enum$_Rounding_$1749_$",
																							"typeString": "type(enum Math.Rounding)"
																						}
																					},
																					"id": 2587,
																					"isConstant": false,
																					"isLValue": false,
																					"isPure": true,
																					"lValueRequested": false,
																					"memberLocation": "12445:2:10",
																					"memberName": "Up",
																					"nodeType": "MemberAccess",
																					"referencedDeclaration": 1747,
																					"src": "12436:11:10",
																					"typeDescriptions": {
																						"typeIdentifier": "t_enum$_Rounding_$1749",
																						"typeString": "enum Math.Rounding"
																					}
																				},
																				"src": "12424:23:10",
																				"typeDescriptions": {
																					"typeIdentifier": "t_bool",
																					"typeString": "bool"
																				}
																			},
																			"nodeType": "BinaryOperation",
																			"operator": "&&",
																			"rightExpression": {
																				"commonType": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				},
																				"id": 2596,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": false,
																				"lValueRequested": false,
																				"leftExpression": {
																					"commonType": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					},
																					"id": 2594,
																					"isConstant": false,
																					"isLValue": false,
																					"isPure": false,
																					"lValueRequested": false,
																					"leftExpression": {
																						"hexValue": "31",
																						"id": 2589,
																						"isConstant": false,
																						"isLValue": false,
																						"isPure": true,
																						"kind": "number",
																						"lValueRequested": false,
																						"nodeType": "Literal",
																						"src": "12451:1:10",
																						"typeDescriptions": {
																							"typeIdentifier": "t_rational_1_by_1",
																							"typeString": "int_const 1"
																						},
																						"value": "1"
																					},
																					"nodeType": "BinaryOperation",
																					"operator": "<<",
																					"rightExpression": {
																						"components": [
																							{
																								"commonType": {
																									"typeIdentifier": "t_uint256",
																									"typeString": "uint256"
																								},
																								"id": 2592,
																								"isConstant": false,
																								"isLValue": false,
																								"isPure": false,
																								"lValueRequested": false,
																								"leftExpression": {
																									"id": 2590,
																									"name": "result",
																									"nodeType": "Identifier",
																									"overloadedDeclarations": [],
																									"referencedDeclaration": 2579,
																									"src": "12457:6:10",
																									"typeDescriptions": {
																										"typeIdentifier": "t_uint256",
																										"typeString": "uint256"
																									}
																								},
																								"nodeType": "BinaryOperation",
																								"operator": "*",
																								"rightExpression": {
																									"hexValue": "38",
																									"id": 2591,
																									"isConstant": false,
																									"isLValue": false,
																									"isPure": true,
																									"kind": "number",
																									"lValueRequested": false,
																									"nodeType": "Literal",
																									"src": "12466:1:10",
																									"typeDescriptions": {
																										"typeIdentifier": "t_rational_8_by_1",
																										"typeString": "int_const 8"
																									},
																									"value": "8"
																								},
																								"src": "12457:10:10",
																								"typeDescriptions": {
																									"typeIdentifier": "t_uint256",
																									"typeString": "uint256"
																								}
																							}
																						],
																						"id": 2593,
																						"isConstant": false,
																						"isInlineArray": false,
																						"isLValue": false,
																						"isPure": false,
																						"lValueRequested": false,
																						"nodeType": "TupleExpression",
																						"src": "12456:12:10",
																						"typeDescriptions": {
																							"typeIdentifier": "t_uint256",
																							"typeString": "uint256"
																						}
																					},
																					"src": "12451:17:10",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				"nodeType": "BinaryOperation",
																				"operator": "<",
																				"rightExpression": {
																					"id": 2595,
																					"name": "value",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 2570,
																					"src": "12471:5:10",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				"src": "12451:25:10",
																				"typeDescriptions": {
																					"typeIdentifier": "t_bool",
																					"typeString": "bool"
																				}
																			},
																			"src": "12424:52:10",
																			"typeDescriptions": {
																				"typeIdentifier": "t_bool",
																				"typeString": "bool"
																			}
																		},
																		"falseExpression": {
																			"hexValue": "30",
																			"id": 2599,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "12483:1:10",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_0_by_1",
																				"typeString": "int_const 0"
																			},
																			"value": "0"
																		},
																		"id": 2600,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"nodeType": "Conditional",
																		"src": "12424:60:10",
																		"trueExpression": {
																			"hexValue": "31",
																			"id": 2598,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "12479:1:10",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_1_by_1",
																				"typeString": "int_const 1"
																			},
																			"value": "1"
																		},
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint8",
																			"typeString": "uint8"
																		}
																	}
																],
																"id": 2601,
																"isConstant": false,
																"isInlineArray": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"nodeType": "TupleExpression",
																"src": "12423:62:10",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint8",
																	"typeString": "uint8"
																}
															},
															"src": "12414:71:10",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"functionReturnParameters": 2577,
														"id": 2603,
														"nodeType": "Return",
														"src": "12407:78:10"
													}
												]
											}
										]
									},
									"documentation": {
										"id": 2568,
										"nodeType": "StructuredDocumentation",
										"src": "12099:143:10",
										"text": " @dev Return the log in base 10, following the selected rounding direction, of a positive value.\n Returns 0 if given 0."
									},
									"id": 2606,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "log256",
									"nameLocation": "12256:6:10",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 2574,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2570,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "12271:5:10",
												"nodeType": "VariableDeclaration",
												"scope": 2606,
												"src": "12263:13:10",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2569,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "12263:7:10",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2573,
												"mutability": "mutable",
												"name": "rounding",
												"nameLocation": "12287:8:10",
												"nodeType": "VariableDeclaration",
												"scope": 2606,
												"src": "12278:17:10",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_enum$_Rounding_$1749",
													"typeString": "enum Math.Rounding"
												},
												"typeName": {
													"id": 2572,
													"nodeType": "UserDefinedTypeName",
													"pathNode": {
														"id": 2571,
														"name": "Rounding",
														"nameLocations": [
															"12278:8:10"
														],
														"nodeType": "IdentifierPath",
														"referencedDeclaration": 1749,
														"src": "12278:8:10"
													},
													"referencedDeclaration": 1749,
													"src": "12278:8:10",
													"typeDescriptions": {
														"typeIdentifier": "t_enum$_Rounding_$1749",
														"typeString": "enum Math.Rounding"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "12262:34:10"
									},
									"returnParameters": {
										"id": 2577,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2576,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 2606,
												"src": "12320:7:10",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2575,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "12320:7:10",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "12319:9:10"
									},
									"scope": 2607,
									"src": "12247:255:10",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								}
							],
							"scope": 2608,
							"src": "202:12302:10",
							"usedErrors": [],
							"usedEvents": []
						}
					],
					"src": "103:12402:10"
				},
				"id": 10
			},
			"contracts/SingapurContract.sol": {
				"ast": {
					"absolutePath": "contracts/SingapurContract.sol",
					"exportedSymbols": {
						"Address": [
							1435
						],
						"Context": [
							1457
						],
						"Counters": [
							1531
						],
						"ERC165": [
							1730
						],
						"ERC721": [
							944
						],
						"IERC165": [
							1742
						],
						"IERC721": [
							1060
						],
						"IERC721Metadata": [
							1105
						],
						"IERC721Receiver": [
							1078
						],
						"Math": [
							2607
						],
						"MintNFT": [
							2651
						],
						"Strings": [
							1706
						]
					},
					"id": 2652,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 2609,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".9"
							],
							"nodeType": "PragmaDirective",
							"src": "32:23:11"
						},
						{
							"absolutePath": "@openzeppelin/contracts/token/ERC721/ERC721.sol",
							"file": "@openzeppelin/contracts/token/ERC721/ERC721.sol",
							"id": 2610,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 2652,
							"sourceUnit": 945,
							"src": "57:57:11",
							"symbolAliases": [],
							"unitAlias": ""
						},
						{
							"absolutePath": "@openzeppelin/contracts/utils/Counters.sol",
							"file": "@openzeppelin/contracts/utils/Counters.sol",
							"id": 2611,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 2652,
							"sourceUnit": 1532,
							"src": "115:52:11",
							"symbolAliases": [],
							"unitAlias": ""
						},
						{
							"abstract": false,
							"baseContracts": [
								{
									"baseName": {
										"id": 2612,
										"name": "ERC721",
										"nameLocations": [
											"189:6:11"
										],
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 944,
										"src": "189:6:11"
									},
									"id": 2613,
									"nodeType": "InheritanceSpecifier",
									"src": "189:6:11"
								}
							],
							"canonicalName": "MintNFT",
							"contractDependencies": [],
							"contractKind": "contract",
							"fullyImplemented": true,
							"id": 2651,
							"linearizedBaseContracts": [
								2651,
								944,
								1105,
								1060,
								1730,
								1742,
								1457
							],
							"name": "MintNFT",
							"nameLocation": "178:7:11",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"global": false,
									"id": 2617,
									"libraryName": {
										"id": 2614,
										"name": "Counters",
										"nameLocations": [
											"208:8:11"
										],
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 1531,
										"src": "208:8:11"
									},
									"nodeType": "UsingForDirective",
									"src": "202:36:11",
									"typeName": {
										"id": 2616,
										"nodeType": "UserDefinedTypeName",
										"pathNode": {
											"id": 2615,
											"name": "Counters.Counter",
											"nameLocations": [
												"221:8:11",
												"230:7:11"
											],
											"nodeType": "IdentifierPath",
											"referencedDeclaration": 1463,
											"src": "221:16:11"
										},
										"referencedDeclaration": 1463,
										"src": "221:16:11",
										"typeDescriptions": {
											"typeIdentifier": "t_struct$_Counter_$1463_storage_ptr",
											"typeString": "struct Counters.Counter"
										}
									}
								},
								{
									"constant": false,
									"id": 2620,
									"mutability": "mutable",
									"name": "_tokenIdCounter",
									"nameLocation": "269:15:11",
									"nodeType": "VariableDeclaration",
									"scope": 2651,
									"src": "244:40:11",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_struct$_Counter_$1463_storage",
										"typeString": "struct Counters.Counter"
									},
									"typeName": {
										"id": 2619,
										"nodeType": "UserDefinedTypeName",
										"pathNode": {
											"id": 2618,
											"name": "Counters.Counter",
											"nameLocations": [
												"244:8:11",
												"253:7:11"
											],
											"nodeType": "IdentifierPath",
											"referencedDeclaration": 1463,
											"src": "244:16:11"
										},
										"referencedDeclaration": 1463,
										"src": "244:16:11",
										"typeDescriptions": {
											"typeIdentifier": "t_struct$_Counter_$1463_storage_ptr",
											"typeString": "struct Counters.Counter"
										}
									},
									"visibility": "private"
								},
								{
									"body": {
										"id": 2627,
										"nodeType": "Block",
										"src": "330:2:11",
										"statements": []
									},
									"id": 2628,
									"implemented": true,
									"kind": "constructor",
									"modifiers": [
										{
											"arguments": [
												{
													"hexValue": "4d79546f6b656e",
													"id": 2623,
													"isConstant": false,
													"isLValue": false,
													"isPure": true,
													"kind": "string",
													"lValueRequested": false,
													"nodeType": "Literal",
													"src": "312:9:11",
													"typeDescriptions": {
														"typeIdentifier": "t_stringliteral_245c734e6d4ec044daf7beffa09d54d4bafba490113c199734d790b04a7390e5",
														"typeString": "literal_string \"MyToken\""
													},
													"value": "MyToken"
												},
												{
													"hexValue": "4d544b",
													"id": 2624,
													"isConstant": false,
													"isLValue": false,
													"isPure": true,
													"kind": "string",
													"lValueRequested": false,
													"nodeType": "Literal",
													"src": "323:5:11",
													"typeDescriptions": {
														"typeIdentifier": "t_stringliteral_793539e36336d70961c91bdb898dff4b065dbb5ef5ac709025f5b68be91dd01e",
														"typeString": "literal_string \"MTK\""
													},
													"value": "MTK"
												}
											],
											"id": 2625,
											"kind": "baseConstructorSpecifier",
											"modifierName": {
												"id": 2622,
												"name": "ERC721",
												"nameLocations": [
													"305:6:11"
												],
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 944,
												"src": "305:6:11"
											},
											"nodeType": "ModifierInvocation",
											"src": "305:24:11"
										}
									],
									"name": "",
									"nameLocation": "-1:-1:-1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 2621,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "302:2:11"
									},
									"returnParameters": {
										"id": 2626,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "330:0:11"
									},
									"scope": 2651,
									"src": "291:41:11",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "public"
								},
								{
									"body": {
										"id": 2649,
										"nodeType": "Block",
										"src": "375:129:11",
										"statements": [
											{
												"assignments": [
													2634
												],
												"declarations": [
													{
														"constant": false,
														"id": 2634,
														"mutability": "mutable",
														"name": "tokenId",
														"nameLocation": "393:7:11",
														"nodeType": "VariableDeclaration",
														"scope": 2649,
														"src": "385:15:11",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 2633,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "385:7:11",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 2638,
												"initialValue": {
													"arguments": [],
													"expression": {
														"argumentTypes": [],
														"expression": {
															"id": 2635,
															"name": "_tokenIdCounter",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2620,
															"src": "403:15:11",
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_Counter_$1463_storage",
																"typeString": "struct Counters.Counter storage ref"
															}
														},
														"id": 2636,
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "419:7:11",
														"memberName": "current",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 1475,
														"src": "403:23:11",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_view$_t_struct$_Counter_$1463_storage_ptr_$returns$_t_uint256_$attached_to$_t_struct$_Counter_$1463_storage_ptr_$",
															"typeString": "function (struct Counters.Counter storage pointer) view returns (uint256)"
														}
													},
													"id": 2637,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "403:25:11",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "385:43:11"
											},
											{
												"expression": {
													"arguments": [],
													"expression": {
														"argumentTypes": [],
														"expression": {
															"id": 2639,
															"name": "_tokenIdCounter",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2620,
															"src": "438:15:11",
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_Counter_$1463_storage",
																"typeString": "struct Counters.Counter storage ref"
															}
														},
														"id": 2641,
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "454:9:11",
														"memberName": "increment",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 1489,
														"src": "438:25:11",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_struct$_Counter_$1463_storage_ptr_$returns$__$attached_to$_t_struct$_Counter_$1463_storage_ptr_$",
															"typeString": "function (struct Counters.Counter storage pointer)"
														}
													},
													"id": 2642,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "438:27:11",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 2643,
												"nodeType": "ExpressionStatement",
												"src": "438:27:11"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 2645,
															"name": "to",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2630,
															"src": "485:2:11",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 2646,
															"name": "tokenId",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2634,
															"src": "489:7:11",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 2644,
														"name": "_safeMint",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															494,
															523
														],
														"referencedDeclaration": 494,
														"src": "475:9:11",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,uint256)"
														}
													},
													"id": 2647,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "475:22:11",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 2648,
												"nodeType": "ExpressionStatement",
												"src": "475:22:11"
											}
										]
									},
									"functionSelector": "40d097c3",
									"id": 2650,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "safeMint",
									"nameLocation": "347:8:11",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 2631,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2630,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "364:2:11",
												"nodeType": "VariableDeclaration",
												"scope": 2650,
												"src": "356:10:11",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 2629,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "356:7:11",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "355:12:11"
									},
									"returnParameters": {
										"id": 2632,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "375:0:11"
									},
									"scope": 2651,
									"src": "338:166:11",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "public"
								}
							],
							"scope": 2652,
							"src": "169:337:11",
							"usedErrors": [],
							"usedEvents": [
								959,
								968,
								977
							]
						}
					],
					"src": "32:474:11"
				},
				"id": 11
			}
		}
	}
}