{
	"id": "02b5a47159a635ad753584c466cecf38",
	"_format": "hh-sol-build-info-1",
	"solcVersion": "0.8.21",
	"solcLongVersion": "0.8.21+commit.d9974bed",
	"input": {
		"language": "Solidity",
		"sources": {
			"contracts/SmashNFT_Marketplace_1.sol": {
				"content": "// SPDX-License-Identifier: MIT\npragma solidity ^0.8.13;\n\nimport \"@openzeppelin/contracts/utils/Counters.sol\";\nimport \"@openzeppelin/contracts/token/ERC721/ERC721.sol\";\nimport \"@openzeppelin/contracts/access/Ownable.sol\";\nimport \"@openzeppelin/contracts/security/ReentrancyGuard.sol\";\n\n\n/**\n * @title MarketPlace\n */\ncontract SmashNFT_Marketplace is ReentrancyGuard , Ownable{\n    \n    using Counters for Counters.Counter;\n    Counters.Counter public _nftsSold;\n    Counters.Counter public _nftCount;\n    \n    uint256 public LISTING_FEE = 0 ;\n    address payable private _marketOwner;\n    mapping (uint => address) public FirstOwner;\n    mapping (uint256 => Check) public check;\n    mapping(uint256 => NFT) private _idToNFT;\n    struct NFT {\n        address nftContract;\n        uint256 tokenId;\n        address payable seller;\n        address payable owner;\n        uint256 price;\n        bool listed;\n    }\n    struct Check{\n        bool _check;\n        address _address;\n    }\n    event NFTListed(address nftContract,uint256 tokenId,address seller,address owner,uint256 price);\n    event NFTSold(address nftContract,uint256 tokenId,address seller,address owner,uint256 price);\n    ERC721 token;\n    address MinterAddress;\n\n    constructor(address contractAddr){\n        token = ERC721(contractAddr);\n        MinterAddress = contractAddr;\n    }\n\n    // ============ ListNft FUNCTIONS ============\n    /* \n        @dev listNft list NFTs in hestory with tokenid.\n        @param _tokenId that are minted by the nftContract\n        @param _price set price of NFT\n    */\n    function ListNft(uint256 _tokenId, uint256 _price) public payable nonReentrant {\n\n        require(_price > 0, \"Price must be at least 1 wei\");\n        require(!(check[_tokenId]._check),\"One Token ID Listed One Time\");\n        //token.approve(address(this),_tokenId);\n        token.transferFrom(msg.sender, address(this), _tokenId);\n        _nftCount.increment();\n        _idToNFT[_tokenId] = NFT(MinterAddress,_tokenId,payable(msg.sender),payable(address(this)),_price,false);\n        FirstOwner[_tokenId]=msg.sender;\n        check[_tokenId]._address=msg.sender;\n        emit NFTListed(MinterAddress, _tokenId, msg.sender, address(this), _price);\n    }\n    // ============ BuyNFTs FUNCTIONS ============\n    /* \n        @dev BuyNft convert the ownership seller to the buyer \n        @param _tokenId that are minted by the nftContract\n    */\n    function buyNft(uint256 _tokenId) public payable nonReentrant {\n        NFT storage nft = _idToNFT[_tokenId];\n        require(msg.value >= nft.price , \"Not enough ether to cover asking price\");\n        require(_idToNFT[_tokenId].seller != msg.sender, \"An offer cannot buy this Seller\");\n        address payable buyer = payable(msg.sender);\n        uint result = nft.price - LISTING_FEE;\n        payable(nft.seller).transfer(result);\n        token.transferFrom(address(this), buyer, nft.tokenId);  \n        payable(FirstOwner[_tokenId]).transfer(LISTING_FEE);\n        nft.owner = buyer;\n        nft.listed=true;\n        check[_tokenId]._check = true;\n        _nftsSold.increment();\n        emit NFTSold(MinterAddress, nft.tokenId, nft.seller, buyer, msg.value);\n    }\n\n    // ============ ReSellNFT FUNCTIONS ============\n    /* \n        @dev resellNft again list the NFT with same TokenId and new seller\n        @param _tokenId that are minted by the nftContract\n        @param _price set price of NFT\n    */\n    function ReSellNft(uint256 _tokenId, uint256 _price) public payable nonReentrant {\n        require(_price > 0, \"Price must be at least 1 wei\");\n        require(_idToNFT[_tokenId].owner == msg.sender,\"Only owner Of this Token Can Resell\");\n        if(_idToNFT[_tokenId].seller != _idToNFT[_tokenId].owner){\n            require(ClaculatePrice(_idToNFT[_tokenId].price) >= _price ,\"This Price Is More Than 20%\");\n        }\n        token.transferFrom(msg.sender, address(this), _tokenId);\n        NFT storage nft = _idToNFT[_tokenId];\n        nft.seller = payable(msg.sender);\n        nft.owner = payable(address(this));\n        nft.listed = false;\n        nft.price = _price;\n        check[_tokenId]._address = msg.sender;\n        _nftsSold.decrement();\n        emit NFTListed(MinterAddress, _tokenId, msg.sender, address(this), _price);\n    }\n    // ============ CancelOffer FUNCTIONS ============\n    /* \n        @dev CancelOffer cancel offer that is listed\n        @param _tokenid identity of token\n    */\n    function CancelOffer(uint256 _tokenId) public{\n        require(check[_tokenId]._address == msg.sender,\"Only Owner can Cancel\");\n        check[_tokenId]._check = true;\n        _idToNFT[_tokenId].listed=true;\n        token.transferFrom(address(this), msg.sender, _tokenId);\n        _idToNFT[_tokenId].owner = payable(msg.sender);\n        _nftsSold.increment();\n    }\n    // ============ CalculatePrice FUNCTIONS ============\n    /* \n        @dev ClaculatePrice New price in the reSell not greater than 20% with the last price\n        @return calculated price\n    */\n    function ClaculatePrice(uint _price) public pure returns(uint){\n        uint a = 5;\n        uint result; \n        result = _price + (_price/a);\n        return result;\n    }\n    // ============ GetLintingFee FUNCTIONS ============\n    /* \n        @return LISTING_FEE amount that transfer to the first owner\n    */\n    function GetListingFee() public view returns (uint256) {\n        return LISTING_FEE;\n    }\n    // ============ SetLintingFee FUNCTIONS ============\n    /* \n        @dev SetListingFee Set amount of ListingFee\n        @param _ListingFee  amount set to the \"LISTING_FEE\"\n    */\n    function SetListingFee(uint256 _ListingFee) public onlyOwner{\n        LISTING_FEE = _ListingFee;\n    }\n\n    // ============ GetListedNFTs FUNCTIONS ============\n    /* \n        @dev getListedNfts fetch all the NFTs that are listed\n        @return array of NFTs that are listed\n    */\n    function getListedNfts() public view returns (NFT[] memory) {\n        uint256 nftCount = _nftCount.current();\n        uint256 unsoldNftsCount = nftCount - _nftsSold.current();\n        NFT[] memory nfts = new NFT[](unsoldNftsCount);\n        uint nftsIndex = 0;\n        for (uint i = 0; i < nftCount; i++) {\n            if (!_idToNFT[i + 1].listed) {\n                nfts[nftsIndex] = _idToNFT[i + 1];\n                nftsIndex++;\n            }\n        }\n        return nfts;\n    }\n\n    // ============ GetMyNFTs FUNCTIONS ============\n    /* \n        @dev getMyNfts fetch all the NFTs that are Buy\n        @return array of NFTs that are Buy to this current address\n    */\n    function getMyNfts() public view returns (NFT[] memory) {\n        uint nftCount = _nftCount.current();\n        uint myNftCount = 0;\n        for (uint i = 0; i < nftCount; i++) {\n            if (_idToNFT[i + 1].owner == msg.sender) {\n                myNftCount++;\n            }\n        }\n        NFT[] memory nfts = new NFT[](myNftCount);\n            uint nftsIndex = 0;\n            for (uint i = 0; i < nftCount; i++) {\n                if (_idToNFT[i + 1].owner == msg.sender) {\n                nfts[nftsIndex] = _idToNFT[i + 1];\n                nftsIndex++;\n            }\n        }\n        return nfts;\n    }\n\n    // ============ GetMyListedNFTs FUNCTIONS ============\n    /* \n        @dev getMyNfts fetch all the NFTs that are listed by current address\n        @return array of NFTs that are listed by the current address\n    */\n    function getMyListedNfts() public view returns (NFT[] memory) {\n        uint nftCount = _nftCount.current();\n        uint myListedNftCount = 0;\n        for (uint i = 0; i < nftCount; i++) {\n            if ((_idToNFT[i + 1].seller == msg.sender) && (!_idToNFT[i + 1].listed)) {\n                myListedNftCount++;\n            }\n        }\n        NFT[] memory nfts = new NFT[](myListedNftCount);\n        uint nftsIndex = 0;\n        for (uint i = 0; i < nftCount; i++) {\n            if (_idToNFT[i + 1].seller == msg.sender && (!_idToNFT[i + 1].listed)) {\n                nfts[nftsIndex] = _idToNFT[i + 1];\n                nftsIndex++;\n            }\n        }\n        return nfts;\n    }\n}\n"
			},
			"@openzeppelin/contracts/security/ReentrancyGuard.sol": {
				"content": "// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v4.8.0) (security/ReentrancyGuard.sol)\n\npragma solidity ^0.8.0;\n\n/**\n * @dev Contract module that helps prevent reentrant calls to a function.\n *\n * Inheriting from `ReentrancyGuard` will make the {nonReentrant} modifier\n * available, which can be applied to functions to make sure there are no nested\n * (reentrant) calls to them.\n *\n * Note that because there is a single `nonReentrant` guard, functions marked as\n * `nonReentrant` may not call one another. This can be worked around by making\n * those functions `private`, and then adding `external` `nonReentrant` entry\n * points to them.\n *\n * TIP: If you would like to learn more about reentrancy and alternative ways\n * to protect against it, check out our blog post\n * https://blog.openzeppelin.com/reentrancy-after-istanbul/[Reentrancy After Istanbul].\n */\nabstract contract ReentrancyGuard {\n    // Booleans are more expensive than uint256 or any type that takes up a full\n    // word because each write operation emits an extra SLOAD to first read the\n    // slot's contents, replace the bits taken up by the boolean, and then write\n    // back. This is the compiler's defense against contract upgrades and\n    // pointer aliasing, and it cannot be disabled.\n\n    // The values being non-zero value makes deployment a bit more expensive,\n    // but in exchange the refund on every call to nonReentrant will be lower in\n    // amount. Since refunds are capped to a percentage of the total\n    // transaction's gas, it is best to keep them low in cases like this one, to\n    // increase the likelihood of the full refund coming into effect.\n    uint256 private constant _NOT_ENTERED = 1;\n    uint256 private constant _ENTERED = 2;\n\n    uint256 private _status;\n\n    constructor() {\n        _status = _NOT_ENTERED;\n    }\n\n    /**\n     * @dev Prevents a contract from calling itself, directly or indirectly.\n     * Calling a `nonReentrant` function from another `nonReentrant`\n     * function is not supported. It is possible to prevent this from happening\n     * by making the `nonReentrant` function external, and making it call a\n     * `private` function that does the actual work.\n     */\n    modifier nonReentrant() {\n        _nonReentrantBefore();\n        _;\n        _nonReentrantAfter();\n    }\n\n    function _nonReentrantBefore() private {\n        // On the first call to nonReentrant, _status will be _NOT_ENTERED\n        require(_status != _ENTERED, \"ReentrancyGuard: reentrant call\");\n\n        // Any calls to nonReentrant after this point will fail\n        _status = _ENTERED;\n    }\n\n    function _nonReentrantAfter() private {\n        // By storing the original value once again, a refund is triggered (see\n        // https://eips.ethereum.org/EIPS/eip-2200)\n        _status = _NOT_ENTERED;\n    }\n}\n"
			},
			"@openzeppelin/contracts/access/Ownable.sol": {
				"content": "// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v4.7.0) (access/Ownable.sol)\n\npragma solidity ^0.8.0;\n\nimport \"../utils/Context.sol\";\n\n/**\n * @dev Contract module which provides a basic access control mechanism, where\n * there is an account (an owner) that can be granted exclusive access to\n * specific functions.\n *\n * By default, the owner account will be the one that deploys the contract. This\n * can later be changed with {transferOwnership}.\n *\n * This module is used through inheritance. It will make available the modifier\n * `onlyOwner`, which can be applied to your functions to restrict their use to\n * the owner.\n */\nabstract contract Ownable is Context {\n    address private _owner;\n\n    event OwnershipTransferred(address indexed previousOwner, address indexed newOwner);\n\n    /**\n     * @dev Initializes the contract setting the deployer as the initial owner.\n     */\n    constructor() {\n        _transferOwnership(_msgSender());\n    }\n\n    /**\n     * @dev Throws if called by any account other than the owner.\n     */\n    modifier onlyOwner() {\n        _checkOwner();\n        _;\n    }\n\n    /**\n     * @dev Returns the address of the current owner.\n     */\n    function owner() public view virtual returns (address) {\n        return _owner;\n    }\n\n    /**\n     * @dev Throws if the sender is not the owner.\n     */\n    function _checkOwner() internal view virtual {\n        require(owner() == _msgSender(), \"Ownable: caller is not the owner\");\n    }\n\n    /**\n     * @dev Leaves the contract without owner. It will not be possible to call\n     * `onlyOwner` functions anymore. Can only be called by the current owner.\n     *\n     * NOTE: Renouncing ownership will leave the contract without an owner,\n     * thereby removing any functionality that is only available to the owner.\n     */\n    function renounceOwnership() public virtual onlyOwner {\n        _transferOwnership(address(0));\n    }\n\n    /**\n     * @dev Transfers ownership of the contract to a new account (`newOwner`).\n     * Can only be called by the current owner.\n     */\n    function transferOwnership(address newOwner) public virtual onlyOwner {\n        require(newOwner != address(0), \"Ownable: new owner is the zero address\");\n        _transferOwnership(newOwner);\n    }\n\n    /**\n     * @dev Transfers ownership of the contract to a new account (`newOwner`).\n     * Internal function without access restriction.\n     */\n    function _transferOwnership(address newOwner) internal virtual {\n        address oldOwner = _owner;\n        _owner = newOwner;\n        emit OwnershipTransferred(oldOwner, newOwner);\n    }\n}\n"
			},
			"@openzeppelin/contracts/token/ERC721/ERC721.sol": {
				"content": "// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v4.8.0) (token/ERC721/ERC721.sol)\n\npragma solidity ^0.8.0;\n\nimport \"./IERC721.sol\";\nimport \"./IERC721Receiver.sol\";\nimport \"./extensions/IERC721Metadata.sol\";\nimport \"../../utils/Address.sol\";\nimport \"../../utils/Context.sol\";\nimport \"../../utils/Strings.sol\";\nimport \"../../utils/introspection/ERC165.sol\";\n\n/**\n * @dev Implementation of https://eips.ethereum.org/EIPS/eip-721[ERC721] Non-Fungible Token Standard, including\n * the Metadata extension, but not including the Enumerable extension, which is available separately as\n * {ERC721Enumerable}.\n */\ncontract ERC721 is Context, ERC165, IERC721, IERC721Metadata {\n    using Address for address;\n    using Strings for uint256;\n\n    // Token name\n    string private _name;\n\n    // Token symbol\n    string private _symbol;\n\n    // Mapping from token ID to owner address\n    mapping(uint256 => address) private _owners;\n\n    // Mapping owner address to token count\n    mapping(address => uint256) private _balances;\n\n    // Mapping from token ID to approved address\n    mapping(uint256 => address) private _tokenApprovals;\n\n    // Mapping from owner to operator approvals\n    mapping(address => mapping(address => bool)) private _operatorApprovals;\n\n    /**\n     * @dev Initializes the contract by setting a `name` and a `symbol` to the token collection.\n     */\n    constructor(string memory name_, string memory symbol_) {\n        _name = name_;\n        _symbol = symbol_;\n    }\n\n    /**\n     * @dev See {IERC165-supportsInterface}.\n     */\n    function supportsInterface(bytes4 interfaceId) public view virtual override(ERC165, IERC165) returns (bool) {\n        return\n            interfaceId == type(IERC721).interfaceId ||\n            interfaceId == type(IERC721Metadata).interfaceId ||\n            super.supportsInterface(interfaceId);\n    }\n\n    /**\n     * @dev See {IERC721-balanceOf}.\n     */\n    function balanceOf(address owner) public view virtual override returns (uint256) {\n        require(owner != address(0), \"ERC721: address zero is not a valid owner\");\n        return _balances[owner];\n    }\n\n    /**\n     * @dev See {IERC721-ownerOf}.\n     */\n    function ownerOf(uint256 tokenId) public view virtual override returns (address) {\n        address owner = _ownerOf(tokenId);\n        require(owner != address(0), \"ERC721: invalid token ID\");\n        return owner;\n    }\n\n    /**\n     * @dev See {IERC721Metadata-name}.\n     */\n    function name() public view virtual override returns (string memory) {\n        return _name;\n    }\n\n    /**\n     * @dev See {IERC721Metadata-symbol}.\n     */\n    function symbol() public view virtual override returns (string memory) {\n        return _symbol;\n    }\n\n    /**\n     * @dev See {IERC721Metadata-tokenURI}.\n     */\n    function tokenURI(uint256 tokenId) public view virtual override returns (string memory) {\n        _requireMinted(tokenId);\n\n        string memory baseURI = _baseURI();\n        return bytes(baseURI).length > 0 ? string(abi.encodePacked(baseURI, tokenId.toString())) : \"\";\n    }\n\n    /**\n     * @dev Base URI for computing {tokenURI}. If set, the resulting URI for each\n     * token will be the concatenation of the `baseURI` and the `tokenId`. Empty\n     * by default, can be overridden in child contracts.\n     */\n    function _baseURI() internal view virtual returns (string memory) {\n        return \"\";\n    }\n\n    /**\n     * @dev See {IERC721-approve}.\n     */\n    function approve(address to, uint256 tokenId) public virtual override {\n        address owner = ERC721.ownerOf(tokenId);\n        require(to != owner, \"ERC721: approval to current owner\");\n\n        require(\n            _msgSender() == owner || isApprovedForAll(owner, _msgSender()),\n            \"ERC721: approve caller is not token owner or approved for all\"\n        );\n\n        _approve(to, tokenId);\n    }\n\n    /**\n     * @dev See {IERC721-getApproved}.\n     */\n    function getApproved(uint256 tokenId) public view virtual override returns (address) {\n        _requireMinted(tokenId);\n\n        return _tokenApprovals[tokenId];\n    }\n\n    /**\n     * @dev See {IERC721-setApprovalForAll}.\n     */\n    function setApprovalForAll(address operator, bool approved) public virtual override {\n        _setApprovalForAll(_msgSender(), operator, approved);\n    }\n\n    /**\n     * @dev See {IERC721-isApprovedForAll}.\n     */\n    function isApprovedForAll(address owner, address operator) public view virtual override returns (bool) {\n        return _operatorApprovals[owner][operator];\n    }\n\n    /**\n     * @dev See {IERC721-transferFrom}.\n     */\n    function transferFrom(\n        address from,\n        address to,\n        uint256 tokenId\n    ) public virtual override {\n        //solhint-disable-next-line max-line-length\n        require(_isApprovedOrOwner(_msgSender(), tokenId), \"ERC721: caller is not token owner or approved\");\n\n        _transfer(from, to, tokenId);\n    }\n\n    /**\n     * @dev See {IERC721-safeTransferFrom}.\n     */\n    function safeTransferFrom(\n        address from,\n        address to,\n        uint256 tokenId\n    ) public virtual override {\n        safeTransferFrom(from, to, tokenId, \"\");\n    }\n\n    /**\n     * @dev See {IERC721-safeTransferFrom}.\n     */\n    function safeTransferFrom(\n        address from,\n        address to,\n        uint256 tokenId,\n        bytes memory data\n    ) public virtual override {\n        require(_isApprovedOrOwner(_msgSender(), tokenId), \"ERC721: caller is not token owner or approved\");\n        _safeTransfer(from, to, tokenId, data);\n    }\n\n    /**\n     * @dev Safely transfers `tokenId` token from `from` to `to`, checking first that contract recipients\n     * are aware of the ERC721 protocol to prevent tokens from being forever locked.\n     *\n     * `data` is additional data, it has no specified format and it is sent in call to `to`.\n     *\n     * This internal function is equivalent to {safeTransferFrom}, and can be used to e.g.\n     * implement alternative mechanisms to perform token transfer, such as signature-based.\n     *\n     * Requirements:\n     *\n     * - `from` cannot be the zero address.\n     * - `to` cannot be the zero address.\n     * - `tokenId` token must exist and be owned by `from`.\n     * - If `to` refers to a smart contract, it must implement {IERC721Receiver-onERC721Received}, which is called upon a safe transfer.\n     *\n     * Emits a {Transfer} event.\n     */\n    function _safeTransfer(\n        address from,\n        address to,\n        uint256 tokenId,\n        bytes memory data\n    ) internal virtual {\n        _transfer(from, to, tokenId);\n        require(_checkOnERC721Received(from, to, tokenId, data), \"ERC721: transfer to non ERC721Receiver implementer\");\n    }\n\n    /**\n     * @dev Returns the owner of the `tokenId`. Does NOT revert if token doesn't exist\n     */\n    function _ownerOf(uint256 tokenId) internal view virtual returns (address) {\n        return _owners[tokenId];\n    }\n\n    /**\n     * @dev Returns whether `tokenId` exists.\n     *\n     * Tokens can be managed by their owner or approved accounts via {approve} or {setApprovalForAll}.\n     *\n     * Tokens start existing when they are minted (`_mint`),\n     * and stop existing when they are burned (`_burn`).\n     */\n    function _exists(uint256 tokenId) internal view virtual returns (bool) {\n        return _ownerOf(tokenId) != address(0);\n    }\n\n    /**\n     * @dev Returns whether `spender` is allowed to manage `tokenId`.\n     *\n     * Requirements:\n     *\n     * - `tokenId` must exist.\n     */\n    function _isApprovedOrOwner(address spender, uint256 tokenId) internal view virtual returns (bool) {\n        address owner = ERC721.ownerOf(tokenId);\n        return (spender == owner || isApprovedForAll(owner, spender) || getApproved(tokenId) == spender);\n    }\n\n    /**\n     * @dev Safely mints `tokenId` and transfers it to `to`.\n     *\n     * Requirements:\n     *\n     * - `tokenId` must not exist.\n     * - If `to` refers to a smart contract, it must implement {IERC721Receiver-onERC721Received}, which is called upon a safe transfer.\n     *\n     * Emits a {Transfer} event.\n     */\n    function _safeMint(address to, uint256 tokenId) internal virtual {\n        _safeMint(to, tokenId, \"\");\n    }\n\n    /**\n     * @dev Same as {xref-ERC721-_safeMint-address-uint256-}[`_safeMint`], with an additional `data` parameter which is\n     * forwarded in {IERC721Receiver-onERC721Received} to contract recipients.\n     */\n    function _safeMint(\n        address to,\n        uint256 tokenId,\n        bytes memory data\n    ) internal virtual {\n        _mint(to, tokenId);\n        require(\n            _checkOnERC721Received(address(0), to, tokenId, data),\n            \"ERC721: transfer to non ERC721Receiver implementer\"\n        );\n    }\n\n    /**\n     * @dev Mints `tokenId` and transfers it to `to`.\n     *\n     * WARNING: Usage of this method is discouraged, use {_safeMint} whenever possible\n     *\n     * Requirements:\n     *\n     * - `tokenId` must not exist.\n     * - `to` cannot be the zero address.\n     *\n     * Emits a {Transfer} event.\n     */\n    function _mint(address to, uint256 tokenId) internal virtual {\n        require(to != address(0), \"ERC721: mint to the zero address\");\n        require(!_exists(tokenId), \"ERC721: token already minted\");\n\n        _beforeTokenTransfer(address(0), to, tokenId, 1);\n\n        // Check that tokenId was not minted by `_beforeTokenTransfer` hook\n        require(!_exists(tokenId), \"ERC721: token already minted\");\n\n        unchecked {\n            // Will not overflow unless all 2**256 token ids are minted to the same owner.\n            // Given that tokens are minted one by one, it is impossible in practice that\n            // this ever happens. Might change if we allow batch minting.\n            // The ERC fails to describe this case.\n            _balances[to] += 1;\n        }\n\n        _owners[tokenId] = to;\n\n        emit Transfer(address(0), to, tokenId);\n\n        _afterTokenTransfer(address(0), to, tokenId, 1);\n    }\n\n    /**\n     * @dev Destroys `tokenId`.\n     * The approval is cleared when the token is burned.\n     * This is an internal function that does not check if the sender is authorized to operate on the token.\n     *\n     * Requirements:\n     *\n     * - `tokenId` must exist.\n     *\n     * Emits a {Transfer} event.\n     */\n    function _burn(uint256 tokenId) internal virtual {\n        address owner = ERC721.ownerOf(tokenId);\n\n        _beforeTokenTransfer(owner, address(0), tokenId, 1);\n\n        // Update ownership in case tokenId was transferred by `_beforeTokenTransfer` hook\n        owner = ERC721.ownerOf(tokenId);\n\n        // Clear approvals\n        delete _tokenApprovals[tokenId];\n\n        unchecked {\n            // Cannot overflow, as that would require more tokens to be burned/transferred\n            // out than the owner initially received through minting and transferring in.\n            _balances[owner] -= 1;\n        }\n        delete _owners[tokenId];\n\n        emit Transfer(owner, address(0), tokenId);\n\n        _afterTokenTransfer(owner, address(0), tokenId, 1);\n    }\n\n    /**\n     * @dev Transfers `tokenId` from `from` to `to`.\n     *  As opposed to {transferFrom}, this imposes no restrictions on msg.sender.\n     *\n     * Requirements:\n     *\n     * - `to` cannot be the zero address.\n     * - `tokenId` token must be owned by `from`.\n     *\n     * Emits a {Transfer} event.\n     */\n    function _transfer(\n        address from,\n        address to,\n        uint256 tokenId\n    ) internal virtual {\n        require(ERC721.ownerOf(tokenId) == from, \"ERC721: transfer from incorrect owner\");\n        require(to != address(0), \"ERC721: transfer to the zero address\");\n\n        _beforeTokenTransfer(from, to, tokenId, 1);\n\n        // Check that tokenId was not transferred by `_beforeTokenTransfer` hook\n        require(ERC721.ownerOf(tokenId) == from, \"ERC721: transfer from incorrect owner\");\n\n        // Clear approvals from the previous owner\n        delete _tokenApprovals[tokenId];\n\n        unchecked {\n            // `_balances[from]` cannot overflow for the same reason as described in `_burn`:\n            // `from`'s balance is the number of token held, which is at least one before the current\n            // transfer.\n            // `_balances[to]` could overflow in the conditions described in `_mint`. That would require\n            // all 2**256 token ids to be minted, which in practice is impossible.\n            _balances[from] -= 1;\n            _balances[to] += 1;\n        }\n        _owners[tokenId] = to;\n\n        emit Transfer(from, to, tokenId);\n\n        _afterTokenTransfer(from, to, tokenId, 1);\n    }\n\n    /**\n     * @dev Approve `to` to operate on `tokenId`\n     *\n     * Emits an {Approval} event.\n     */\n    function _approve(address to, uint256 tokenId) internal virtual {\n        _tokenApprovals[tokenId] = to;\n        emit Approval(ERC721.ownerOf(tokenId), to, tokenId);\n    }\n\n    /**\n     * @dev Approve `operator` to operate on all of `owner` tokens\n     *\n     * Emits an {ApprovalForAll} event.\n     */\n    function _setApprovalForAll(\n        address owner,\n        address operator,\n        bool approved\n    ) internal virtual {\n        require(owner != operator, \"ERC721: approve to caller\");\n        _operatorApprovals[owner][operator] = approved;\n        emit ApprovalForAll(owner, operator, approved);\n    }\n\n    /**\n     * @dev Reverts if the `tokenId` has not been minted yet.\n     */\n    function _requireMinted(uint256 tokenId) internal view virtual {\n        require(_exists(tokenId), \"ERC721: invalid token ID\");\n    }\n\n    /**\n     * @dev Internal function to invoke {IERC721Receiver-onERC721Received} on a target address.\n     * The call is not executed if the target address is not a contract.\n     *\n     * @param from address representing the previous owner of the given token ID\n     * @param to target address that will receive the tokens\n     * @param tokenId uint256 ID of the token to be transferred\n     * @param data bytes optional data to send along with the call\n     * @return bool whether the call correctly returned the expected magic value\n     */\n    function _checkOnERC721Received(\n        address from,\n        address to,\n        uint256 tokenId,\n        bytes memory data\n    ) private returns (bool) {\n        if (to.isContract()) {\n            try IERC721Receiver(to).onERC721Received(_msgSender(), from, tokenId, data) returns (bytes4 retval) {\n                return retval == IERC721Receiver.onERC721Received.selector;\n            } catch (bytes memory reason) {\n                if (reason.length == 0) {\n                    revert(\"ERC721: transfer to non ERC721Receiver implementer\");\n                } else {\n                    /// @solidity memory-safe-assembly\n                    assembly {\n                        revert(add(32, reason), mload(reason))\n                    }\n                }\n            }\n        } else {\n            return true;\n        }\n    }\n\n    /**\n     * @dev Hook that is called before any token transfer. This includes minting and burning. If {ERC721Consecutive} is\n     * used, the hook may be called as part of a consecutive (batch) mint, as indicated by `batchSize` greater than 1.\n     *\n     * Calling conditions:\n     *\n     * - When `from` and `to` are both non-zero, ``from``'s tokens will be transferred to `to`.\n     * - When `from` is zero, the tokens will be minted for `to`.\n     * - When `to` is zero, ``from``'s tokens will be burned.\n     * - `from` and `to` are never both zero.\n     * - `batchSize` is non-zero.\n     *\n     * To learn more about hooks, head to xref:ROOT:extending-contracts.adoc#using-hooks[Using Hooks].\n     */\n    function _beforeTokenTransfer(\n        address from,\n        address to,\n        uint256, /* firstTokenId */\n        uint256 batchSize\n    ) internal virtual {\n        if (batchSize > 1) {\n            if (from != address(0)) {\n                _balances[from] -= batchSize;\n            }\n            if (to != address(0)) {\n                _balances[to] += batchSize;\n            }\n        }\n    }\n\n    /**\n     * @dev Hook that is called after any token transfer. This includes minting and burning. If {ERC721Consecutive} is\n     * used, the hook may be called as part of a consecutive (batch) mint, as indicated by `batchSize` greater than 1.\n     *\n     * Calling conditions:\n     *\n     * - When `from` and `to` are both non-zero, ``from``'s tokens were transferred to `to`.\n     * - When `from` is zero, the tokens were minted for `to`.\n     * - When `to` is zero, ``from``'s tokens were burned.\n     * - `from` and `to` are never both zero.\n     * - `batchSize` is non-zero.\n     *\n     * To learn more about hooks, head to xref:ROOT:extending-contracts.adoc#using-hooks[Using Hooks].\n     */\n    function _afterTokenTransfer(\n        address from,\n        address to,\n        uint256 firstTokenId,\n        uint256 batchSize\n    ) internal virtual {}\n}\n"
			},
			"@openzeppelin/contracts/utils/Counters.sol": {
				"content": "// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts v4.4.1 (utils/Counters.sol)\n\npragma solidity ^0.8.0;\n\n/**\n * @title Counters\n * @author Matt Condon (@shrugs)\n * @dev Provides counters that can only be incremented, decremented or reset. This can be used e.g. to track the number\n * of elements in a mapping, issuing ERC721 ids, or counting request ids.\n *\n * Include with `using Counters for Counters.Counter;`\n */\nlibrary Counters {\n    struct Counter {\n        // This variable should never be directly accessed by users of the library: interactions must be restricted to\n        // the library's function. As of Solidity v0.5.2, this cannot be enforced, though there is a proposal to add\n        // this feature: see https://github.com/ethereum/solidity/issues/4637\n        uint256 _value; // default: 0\n    }\n\n    function current(Counter storage counter) internal view returns (uint256) {\n        return counter._value;\n    }\n\n    function increment(Counter storage counter) internal {\n        unchecked {\n            counter._value += 1;\n        }\n    }\n\n    function decrement(Counter storage counter) internal {\n        uint256 value = counter._value;\n        require(value > 0, \"Counter: decrement overflow\");\n        unchecked {\n            counter._value = value - 1;\n        }\n    }\n\n    function reset(Counter storage counter) internal {\n        counter._value = 0;\n    }\n}\n"
			},
			"@openzeppelin/contracts/utils/introspection/ERC165.sol": {
				"content": "// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts v4.4.1 (utils/introspection/ERC165.sol)\n\npragma solidity ^0.8.0;\n\nimport \"./IERC165.sol\";\n\n/**\n * @dev Implementation of the {IERC165} interface.\n *\n * Contracts that want to implement ERC165 should inherit from this contract and override {supportsInterface} to check\n * for the additional interface id that will be supported. For example:\n *\n * ```solidity\n * function supportsInterface(bytes4 interfaceId) public view virtual override returns (bool) {\n *     return interfaceId == type(MyInterface).interfaceId || super.supportsInterface(interfaceId);\n * }\n * ```\n *\n * Alternatively, {ERC165Storage} provides an easier to use but more expensive implementation.\n */\nabstract contract ERC165 is IERC165 {\n    /**\n     * @dev See {IERC165-supportsInterface}.\n     */\n    function supportsInterface(bytes4 interfaceId) public view virtual override returns (bool) {\n        return interfaceId == type(IERC165).interfaceId;\n    }\n}\n"
			},
			"@openzeppelin/contracts/utils/Strings.sol": {
				"content": "// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v4.8.0) (utils/Strings.sol)\n\npragma solidity ^0.8.0;\n\nimport \"./math/Math.sol\";\n\n/**\n * @dev String operations.\n */\nlibrary Strings {\n    bytes16 private constant _SYMBOLS = \"0123456789abcdef\";\n    uint8 private constant _ADDRESS_LENGTH = 20;\n\n    /**\n     * @dev Converts a `uint256` to its ASCII `string` decimal representation.\n     */\n    function toString(uint256 value) internal pure returns (string memory) {\n        unchecked {\n            uint256 length = Math.log10(value) + 1;\n            string memory buffer = new string(length);\n            uint256 ptr;\n            /// @solidity memory-safe-assembly\n            assembly {\n                ptr := add(buffer, add(32, length))\n            }\n            while (true) {\n                ptr--;\n                /// @solidity memory-safe-assembly\n                assembly {\n                    mstore8(ptr, byte(mod(value, 10), _SYMBOLS))\n                }\n                value /= 10;\n                if (value == 0) break;\n            }\n            return buffer;\n        }\n    }\n\n    /**\n     * @dev Converts a `uint256` to its ASCII `string` hexadecimal representation.\n     */\n    function toHexString(uint256 value) internal pure returns (string memory) {\n        unchecked {\n            return toHexString(value, Math.log256(value) + 1);\n        }\n    }\n\n    /**\n     * @dev Converts a `uint256` to its ASCII `string` hexadecimal representation with fixed length.\n     */\n    function toHexString(uint256 value, uint256 length) internal pure returns (string memory) {\n        bytes memory buffer = new bytes(2 * length + 2);\n        buffer[0] = \"0\";\n        buffer[1] = \"x\";\n        for (uint256 i = 2 * length + 1; i > 1; --i) {\n            buffer[i] = _SYMBOLS[value & 0xf];\n            value >>= 4;\n        }\n        require(value == 0, \"Strings: hex length insufficient\");\n        return string(buffer);\n    }\n\n    /**\n     * @dev Converts an `address` with fixed length of 20 bytes to its not checksummed ASCII `string` hexadecimal representation.\n     */\n    function toHexString(address addr) internal pure returns (string memory) {\n        return toHexString(uint256(uint160(addr)), _ADDRESS_LENGTH);\n    }\n}\n"
			},
			"@openzeppelin/contracts/utils/Context.sol": {
				"content": "// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts v4.4.1 (utils/Context.sol)\n\npragma solidity ^0.8.0;\n\n/**\n * @dev Provides information about the current execution context, including the\n * sender of the transaction and its data. While these are generally available\n * via msg.sender and msg.data, they should not be accessed in such a direct\n * manner, since when dealing with meta-transactions the account sending and\n * paying for execution may not be the actual sender (as far as an application\n * is concerned).\n *\n * This contract is only required for intermediate, library-like contracts.\n */\nabstract contract Context {\n    function _msgSender() internal view virtual returns (address) {\n        return msg.sender;\n    }\n\n    function _msgData() internal view virtual returns (bytes calldata) {\n        return msg.data;\n    }\n}\n"
			},
			"@openzeppelin/contracts/utils/Address.sol": {
				"content": "// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v4.8.0) (utils/Address.sol)\n\npragma solidity ^0.8.1;\n\n/**\n * @dev Collection of functions related to the address type\n */\nlibrary Address {\n    /**\n     * @dev Returns true if `account` is a contract.\n     *\n     * [IMPORTANT]\n     * ====\n     * It is unsafe to assume that an address for which this function returns\n     * false is an externally-owned account (EOA) and not a contract.\n     *\n     * Among others, `isContract` will return false for the following\n     * types of addresses:\n     *\n     *  - an externally-owned account\n     *  - a contract in construction\n     *  - an address where a contract will be created\n     *  - an address where a contract lived, but was destroyed\n     * ====\n     *\n     * [IMPORTANT]\n     * ====\n     * You shouldn't rely on `isContract` to protect against flash loan attacks!\n     *\n     * Preventing calls from contracts is highly discouraged. It breaks composability, breaks support for smart wallets\n     * like Gnosis Safe, and does not provide security since it can be circumvented by calling from a contract\n     * constructor.\n     * ====\n     */\n    function isContract(address account) internal view returns (bool) {\n        // This method relies on extcodesize/address.code.length, which returns 0\n        // for contracts in construction, since the code is only stored at the end\n        // of the constructor execution.\n\n        return account.code.length > 0;\n    }\n\n    /**\n     * @dev Replacement for Solidity's `transfer`: sends `amount` wei to\n     * `recipient`, forwarding all available gas and reverting on errors.\n     *\n     * https://eips.ethereum.org/EIPS/eip-1884[EIP1884] increases the gas cost\n     * of certain opcodes, possibly making contracts go over the 2300 gas limit\n     * imposed by `transfer`, making them unable to receive funds via\n     * `transfer`. {sendValue} removes this limitation.\n     *\n     * https://diligence.consensys.net/posts/2019/09/stop-using-soliditys-transfer-now/[Learn more].\n     *\n     * IMPORTANT: because control is transferred to `recipient`, care must be\n     * taken to not create reentrancy vulnerabilities. Consider using\n     * {ReentrancyGuard} or the\n     * https://solidity.readthedocs.io/en/v0.5.11/security-considerations.html#use-the-checks-effects-interactions-pattern[checks-effects-interactions pattern].\n     */\n    function sendValue(address payable recipient, uint256 amount) internal {\n        require(address(this).balance >= amount, \"Address: insufficient balance\");\n\n        (bool success, ) = recipient.call{value: amount}(\"\");\n        require(success, \"Address: unable to send value, recipient may have reverted\");\n    }\n\n    /**\n     * @dev Performs a Solidity function call using a low level `call`. A\n     * plain `call` is an unsafe replacement for a function call: use this\n     * function instead.\n     *\n     * If `target` reverts with a revert reason, it is bubbled up by this\n     * function (like regular Solidity function calls).\n     *\n     * Returns the raw returned data. To convert to the expected return value,\n     * use https://solidity.readthedocs.io/en/latest/units-and-global-variables.html?highlight=abi.decode#abi-encoding-and-decoding-functions[`abi.decode`].\n     *\n     * Requirements:\n     *\n     * - `target` must be a contract.\n     * - calling `target` with `data` must not revert.\n     *\n     * _Available since v3.1._\n     */\n    function functionCall(address target, bytes memory data) internal returns (bytes memory) {\n        return functionCallWithValue(target, data, 0, \"Address: low-level call failed\");\n    }\n\n    /**\n     * @dev Same as {xref-Address-functionCall-address-bytes-}[`functionCall`], but with\n     * `errorMessage` as a fallback revert reason when `target` reverts.\n     *\n     * _Available since v3.1._\n     */\n    function functionCall(\n        address target,\n        bytes memory data,\n        string memory errorMessage\n    ) internal returns (bytes memory) {\n        return functionCallWithValue(target, data, 0, errorMessage);\n    }\n\n    /**\n     * @dev Same as {xref-Address-functionCall-address-bytes-}[`functionCall`],\n     * but also transferring `value` wei to `target`.\n     *\n     * Requirements:\n     *\n     * - the calling contract must have an ETH balance of at least `value`.\n     * - the called Solidity function must be `payable`.\n     *\n     * _Available since v3.1._\n     */\n    function functionCallWithValue(\n        address target,\n        bytes memory data,\n        uint256 value\n    ) internal returns (bytes memory) {\n        return functionCallWithValue(target, data, value, \"Address: low-level call with value failed\");\n    }\n\n    /**\n     * @dev Same as {xref-Address-functionCallWithValue-address-bytes-uint256-}[`functionCallWithValue`], but\n     * with `errorMessage` as a fallback revert reason when `target` reverts.\n     *\n     * _Available since v3.1._\n     */\n    function functionCallWithValue(\n        address target,\n        bytes memory data,\n        uint256 value,\n        string memory errorMessage\n    ) internal returns (bytes memory) {\n        require(address(this).balance >= value, \"Address: insufficient balance for call\");\n        (bool success, bytes memory returndata) = target.call{value: value}(data);\n        return verifyCallResultFromTarget(target, success, returndata, errorMessage);\n    }\n\n    /**\n     * @dev Same as {xref-Address-functionCall-address-bytes-}[`functionCall`],\n     * but performing a static call.\n     *\n     * _Available since v3.3._\n     */\n    function functionStaticCall(address target, bytes memory data) internal view returns (bytes memory) {\n        return functionStaticCall(target, data, \"Address: low-level static call failed\");\n    }\n\n    /**\n     * @dev Same as {xref-Address-functionCall-address-bytes-string-}[`functionCall`],\n     * but performing a static call.\n     *\n     * _Available since v3.3._\n     */\n    function functionStaticCall(\n        address target,\n        bytes memory data,\n        string memory errorMessage\n    ) internal view returns (bytes memory) {\n        (bool success, bytes memory returndata) = target.staticcall(data);\n        return verifyCallResultFromTarget(target, success, returndata, errorMessage);\n    }\n\n    /**\n     * @dev Same as {xref-Address-functionCall-address-bytes-}[`functionCall`],\n     * but performing a delegate call.\n     *\n     * _Available since v3.4._\n     */\n    function functionDelegateCall(address target, bytes memory data) internal returns (bytes memory) {\n        return functionDelegateCall(target, data, \"Address: low-level delegate call failed\");\n    }\n\n    /**\n     * @dev Same as {xref-Address-functionCall-address-bytes-string-}[`functionCall`],\n     * but performing a delegate call.\n     *\n     * _Available since v3.4._\n     */\n    function functionDelegateCall(\n        address target,\n        bytes memory data,\n        string memory errorMessage\n    ) internal returns (bytes memory) {\n        (bool success, bytes memory returndata) = target.delegatecall(data);\n        return verifyCallResultFromTarget(target, success, returndata, errorMessage);\n    }\n\n    /**\n     * @dev Tool to verify that a low level call to smart-contract was successful, and revert (either by bubbling\n     * the revert reason or using the provided one) in case of unsuccessful call or if target was not a contract.\n     *\n     * _Available since v4.8._\n     */\n    function verifyCallResultFromTarget(\n        address target,\n        bool success,\n        bytes memory returndata,\n        string memory errorMessage\n    ) internal view returns (bytes memory) {\n        if (success) {\n            if (returndata.length == 0) {\n                // only check isContract if the call was successful and the return data is empty\n                // otherwise we already know that it was a contract\n                require(isContract(target), \"Address: call to non-contract\");\n            }\n            return returndata;\n        } else {\n            _revert(returndata, errorMessage);\n        }\n    }\n\n    /**\n     * @dev Tool to verify that a low level call was successful, and revert if it wasn't, either by bubbling the\n     * revert reason or using the provided one.\n     *\n     * _Available since v4.3._\n     */\n    function verifyCallResult(\n        bool success,\n        bytes memory returndata,\n        string memory errorMessage\n    ) internal pure returns (bytes memory) {\n        if (success) {\n            return returndata;\n        } else {\n            _revert(returndata, errorMessage);\n        }\n    }\n\n    function _revert(bytes memory returndata, string memory errorMessage) private pure {\n        // Look for revert reason and bubble it up if present\n        if (returndata.length > 0) {\n            // The easiest way to bubble the revert reason is using memory via assembly\n            /// @solidity memory-safe-assembly\n            assembly {\n                let returndata_size := mload(returndata)\n                revert(add(32, returndata), returndata_size)\n            }\n        } else {\n            revert(errorMessage);\n        }\n    }\n}\n"
			},
			"@openzeppelin/contracts/token/ERC721/extensions/IERC721Metadata.sol": {
				"content": "// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts v4.4.1 (token/ERC721/extensions/IERC721Metadata.sol)\n\npragma solidity ^0.8.0;\n\nimport \"../IERC721.sol\";\n\n/**\n * @title ERC-721 Non-Fungible Token Standard, optional metadata extension\n * @dev See https://eips.ethereum.org/EIPS/eip-721\n */\ninterface IERC721Metadata is IERC721 {\n    /**\n     * @dev Returns the token collection name.\n     */\n    function name() external view returns (string memory);\n\n    /**\n     * @dev Returns the token collection symbol.\n     */\n    function symbol() external view returns (string memory);\n\n    /**\n     * @dev Returns the Uniform Resource Identifier (URI) for `tokenId` token.\n     */\n    function tokenURI(uint256 tokenId) external view returns (string memory);\n}\n"
			},
			"@openzeppelin/contracts/token/ERC721/IERC721Receiver.sol": {
				"content": "// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v4.6.0) (token/ERC721/IERC721Receiver.sol)\n\npragma solidity ^0.8.0;\n\n/**\n * @title ERC721 token receiver interface\n * @dev Interface for any contract that wants to support safeTransfers\n * from ERC721 asset contracts.\n */\ninterface IERC721Receiver {\n    /**\n     * @dev Whenever an {IERC721} `tokenId` token is transferred to this contract via {IERC721-safeTransferFrom}\n     * by `operator` from `from`, this function is called.\n     *\n     * It must return its Solidity selector to confirm the token transfer.\n     * If any other value is returned or the interface is not implemented by the recipient, the transfer will be reverted.\n     *\n     * The selector can be obtained in Solidity with `IERC721Receiver.onERC721Received.selector`.\n     */\n    function onERC721Received(\n        address operator,\n        address from,\n        uint256 tokenId,\n        bytes calldata data\n    ) external returns (bytes4);\n}\n"
			},
			"@openzeppelin/contracts/token/ERC721/IERC721.sol": {
				"content": "// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v4.8.0) (token/ERC721/IERC721.sol)\n\npragma solidity ^0.8.0;\n\nimport \"../../utils/introspection/IERC165.sol\";\n\n/**\n * @dev Required interface of an ERC721 compliant contract.\n */\ninterface IERC721 is IERC165 {\n    /**\n     * @dev Emitted when `tokenId` token is transferred from `from` to `to`.\n     */\n    event Transfer(address indexed from, address indexed to, uint256 indexed tokenId);\n\n    /**\n     * @dev Emitted when `owner` enables `approved` to manage the `tokenId` token.\n     */\n    event Approval(address indexed owner, address indexed approved, uint256 indexed tokenId);\n\n    /**\n     * @dev Emitted when `owner` enables or disables (`approved`) `operator` to manage all of its assets.\n     */\n    event ApprovalForAll(address indexed owner, address indexed operator, bool approved);\n\n    /**\n     * @dev Returns the number of tokens in ``owner``'s account.\n     */\n    function balanceOf(address owner) external view returns (uint256 balance);\n\n    /**\n     * @dev Returns the owner of the `tokenId` token.\n     *\n     * Requirements:\n     *\n     * - `tokenId` must exist.\n     */\n    function ownerOf(uint256 tokenId) external view returns (address owner);\n\n    /**\n     * @dev Safely transfers `tokenId` token from `from` to `to`.\n     *\n     * Requirements:\n     *\n     * - `from` cannot be the zero address.\n     * - `to` cannot be the zero address.\n     * - `tokenId` token must exist and be owned by `from`.\n     * - If the caller is not `from`, it must be approved to move this token by either {approve} or {setApprovalForAll}.\n     * - If `to` refers to a smart contract, it must implement {IERC721Receiver-onERC721Received}, which is called upon a safe transfer.\n     *\n     * Emits a {Transfer} event.\n     */\n    function safeTransferFrom(\n        address from,\n        address to,\n        uint256 tokenId,\n        bytes calldata data\n    ) external;\n\n    /**\n     * @dev Safely transfers `tokenId` token from `from` to `to`, checking first that contract recipients\n     * are aware of the ERC721 protocol to prevent tokens from being forever locked.\n     *\n     * Requirements:\n     *\n     * - `from` cannot be the zero address.\n     * - `to` cannot be the zero address.\n     * - `tokenId` token must exist and be owned by `from`.\n     * - If the caller is not `from`, it must have been allowed to move this token by either {approve} or {setApprovalForAll}.\n     * - If `to` refers to a smart contract, it must implement {IERC721Receiver-onERC721Received}, which is called upon a safe transfer.\n     *\n     * Emits a {Transfer} event.\n     */\n    function safeTransferFrom(\n        address from,\n        address to,\n        uint256 tokenId\n    ) external;\n\n    /**\n     * @dev Transfers `tokenId` token from `from` to `to`.\n     *\n     * WARNING: Note that the caller is responsible to confirm that the recipient is capable of receiving ERC721\n     * or else they may be permanently lost. Usage of {safeTransferFrom} prevents loss, though the caller must\n     * understand this adds an external call which potentially creates a reentrancy vulnerability.\n     *\n     * Requirements:\n     *\n     * - `from` cannot be the zero address.\n     * - `to` cannot be the zero address.\n     * - `tokenId` token must be owned by `from`.\n     * - If the caller is not `from`, it must be approved to move this token by either {approve} or {setApprovalForAll}.\n     *\n     * Emits a {Transfer} event.\n     */\n    function transferFrom(\n        address from,\n        address to,\n        uint256 tokenId\n    ) external;\n\n    /**\n     * @dev Gives permission to `to` to transfer `tokenId` token to another account.\n     * The approval is cleared when the token is transferred.\n     *\n     * Only a single account can be approved at a time, so approving the zero address clears previous approvals.\n     *\n     * Requirements:\n     *\n     * - The caller must own the token or be an approved operator.\n     * - `tokenId` must exist.\n     *\n     * Emits an {Approval} event.\n     */\n    function approve(address to, uint256 tokenId) external;\n\n    /**\n     * @dev Approve or remove `operator` as an operator for the caller.\n     * Operators can call {transferFrom} or {safeTransferFrom} for any token owned by the caller.\n     *\n     * Requirements:\n     *\n     * - The `operator` cannot be the caller.\n     *\n     * Emits an {ApprovalForAll} event.\n     */\n    function setApprovalForAll(address operator, bool _approved) external;\n\n    /**\n     * @dev Returns the account approved for `tokenId` token.\n     *\n     * Requirements:\n     *\n     * - `tokenId` must exist.\n     */\n    function getApproved(uint256 tokenId) external view returns (address operator);\n\n    /**\n     * @dev Returns if the `operator` is allowed to manage all of the assets of `owner`.\n     *\n     * See {setApprovalForAll}\n     */\n    function isApprovedForAll(address owner, address operator) external view returns (bool);\n}\n"
			},
			"@openzeppelin/contracts/utils/introspection/IERC165.sol": {
				"content": "// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts v4.4.1 (utils/introspection/IERC165.sol)\n\npragma solidity ^0.8.0;\n\n/**\n * @dev Interface of the ERC165 standard, as defined in the\n * https://eips.ethereum.org/EIPS/eip-165[EIP].\n *\n * Implementers can declare support of contract interfaces, which can then be\n * queried by others ({ERC165Checker}).\n *\n * For an implementation, see {ERC165}.\n */\ninterface IERC165 {\n    /**\n     * @dev Returns true if this contract implements the interface defined by\n     * `interfaceId`. See the corresponding\n     * https://eips.ethereum.org/EIPS/eip-165#how-interfaces-are-identified[EIP section]\n     * to learn more about how these ids are created.\n     *\n     * This function call must use less than 30 000 gas.\n     */\n    function supportsInterface(bytes4 interfaceId) external view returns (bool);\n}\n"
			},
			"@openzeppelin/contracts/utils/math/Math.sol": {
				"content": "// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v4.8.0) (utils/math/Math.sol)\n\npragma solidity ^0.8.0;\n\n/**\n * @dev Standard math utilities missing in the Solidity language.\n */\nlibrary Math {\n    enum Rounding {\n        Down, // Toward negative infinity\n        Up, // Toward infinity\n        Zero // Toward zero\n    }\n\n    /**\n     * @dev Returns the largest of two numbers.\n     */\n    function max(uint256 a, uint256 b) internal pure returns (uint256) {\n        return a > b ? a : b;\n    }\n\n    /**\n     * @dev Returns the smallest of two numbers.\n     */\n    function min(uint256 a, uint256 b) internal pure returns (uint256) {\n        return a < b ? a : b;\n    }\n\n    /**\n     * @dev Returns the average of two numbers. The result is rounded towards\n     * zero.\n     */\n    function average(uint256 a, uint256 b) internal pure returns (uint256) {\n        // (a + b) / 2 can overflow.\n        return (a & b) + (a ^ b) / 2;\n    }\n\n    /**\n     * @dev Returns the ceiling of the division of two numbers.\n     *\n     * This differs from standard division with `/` in that it rounds up instead\n     * of rounding down.\n     */\n    function ceilDiv(uint256 a, uint256 b) internal pure returns (uint256) {\n        // (a + b - 1) / b can overflow on addition, so we distribute.\n        return a == 0 ? 0 : (a - 1) / b + 1;\n    }\n\n    /**\n     * @notice Calculates floor(x * y / denominator) with full precision. Throws if result overflows a uint256 or denominator == 0\n     * @dev Original credit to Remco Bloemen under MIT license (https://xn--2-umb.com/21/muldiv)\n     * with further edits by Uniswap Labs also under MIT license.\n     */\n    function mulDiv(\n        uint256 x,\n        uint256 y,\n        uint256 denominator\n    ) internal pure returns (uint256 result) {\n        unchecked {\n            // 512-bit multiply [prod1 prod0] = x * y. Compute the product mod 2^256 and mod 2^256 - 1, then use\n            // use the Chinese Remainder Theorem to reconstruct the 512 bit result. The result is stored in two 256\n            // variables such that product = prod1 * 2^256 + prod0.\n            uint256 prod0; // Least significant 256 bits of the product\n            uint256 prod1; // Most significant 256 bits of the product\n            assembly {\n                let mm := mulmod(x, y, not(0))\n                prod0 := mul(x, y)\n                prod1 := sub(sub(mm, prod0), lt(mm, prod0))\n            }\n\n            // Handle non-overflow cases, 256 by 256 division.\n            if (prod1 == 0) {\n                return prod0 / denominator;\n            }\n\n            // Make sure the result is less than 2^256. Also prevents denominator == 0.\n            require(denominator > prod1);\n\n            ///////////////////////////////////////////////\n            // 512 by 256 division.\n            ///////////////////////////////////////////////\n\n            // Make division exact by subtracting the remainder from [prod1 prod0].\n            uint256 remainder;\n            assembly {\n                // Compute remainder using mulmod.\n                remainder := mulmod(x, y, denominator)\n\n                // Subtract 256 bit number from 512 bit number.\n                prod1 := sub(prod1, gt(remainder, prod0))\n                prod0 := sub(prod0, remainder)\n            }\n\n            // Factor powers of two out of denominator and compute largest power of two divisor of denominator. Always >= 1.\n            // See https://cs.stackexchange.com/q/138556/92363.\n\n            // Does not overflow because the denominator cannot be zero at this stage in the function.\n            uint256 twos = denominator & (~denominator + 1);\n            assembly {\n                // Divide denominator by twos.\n                denominator := div(denominator, twos)\n\n                // Divide [prod1 prod0] by twos.\n                prod0 := div(prod0, twos)\n\n                // Flip twos such that it is 2^256 / twos. If twos is zero, then it becomes one.\n                twos := add(div(sub(0, twos), twos), 1)\n            }\n\n            // Shift in bits from prod1 into prod0.\n            prod0 |= prod1 * twos;\n\n            // Invert denominator mod 2^256. Now that denominator is an odd number, it has an inverse modulo 2^256 such\n            // that denominator * inv = 1 mod 2^256. Compute the inverse by starting with a seed that is correct for\n            // four bits. That is, denominator * inv = 1 mod 2^4.\n            uint256 inverse = (3 * denominator) ^ 2;\n\n            // Use the Newton-Raphson iteration to improve the precision. Thanks to Hensel's lifting lemma, this also works\n            // in modular arithmetic, doubling the correct bits in each step.\n            inverse *= 2 - denominator * inverse; // inverse mod 2^8\n            inverse *= 2 - denominator * inverse; // inverse mod 2^16\n            inverse *= 2 - denominator * inverse; // inverse mod 2^32\n            inverse *= 2 - denominator * inverse; // inverse mod 2^64\n            inverse *= 2 - denominator * inverse; // inverse mod 2^128\n            inverse *= 2 - denominator * inverse; // inverse mod 2^256\n\n            // Because the division is now exact we can divide by multiplying with the modular inverse of denominator.\n            // This will give us the correct result modulo 2^256. Since the preconditions guarantee that the outcome is\n            // less than 2^256, this is the final result. We don't need to compute the high bits of the result and prod1\n            // is no longer required.\n            result = prod0 * inverse;\n            return result;\n        }\n    }\n\n    /**\n     * @notice Calculates x * y / denominator with full precision, following the selected rounding direction.\n     */\n    function mulDiv(\n        uint256 x,\n        uint256 y,\n        uint256 denominator,\n        Rounding rounding\n    ) internal pure returns (uint256) {\n        uint256 result = mulDiv(x, y, denominator);\n        if (rounding == Rounding.Up && mulmod(x, y, denominator) > 0) {\n            result += 1;\n        }\n        return result;\n    }\n\n    /**\n     * @dev Returns the square root of a number. If the number is not a perfect square, the value is rounded down.\n     *\n     * Inspired by Henry S. Warren, Jr.'s \"Hacker's Delight\" (Chapter 11).\n     */\n    function sqrt(uint256 a) internal pure returns (uint256) {\n        if (a == 0) {\n            return 0;\n        }\n\n        // For our first guess, we get the biggest power of 2 which is smaller than the square root of the target.\n        //\n        // We know that the \"msb\" (most significant bit) of our target number `a` is a power of 2 such that we have\n        // `msb(a) <= a < 2*msb(a)`. This value can be written `msb(a)=2**k` with `k=log2(a)`.\n        //\n        // This can be rewritten `2**log2(a) <= a < 2**(log2(a) + 1)`\n        // → `sqrt(2**k) <= sqrt(a) < sqrt(2**(k+1))`\n        // → `2**(k/2) <= sqrt(a) < 2**((k+1)/2) <= 2**(k/2 + 1)`\n        //\n        // Consequently, `2**(log2(a) / 2)` is a good first approximation of `sqrt(a)` with at least 1 correct bit.\n        uint256 result = 1 << (log2(a) >> 1);\n\n        // At this point `result` is an estimation with one bit of precision. We know the true value is a uint128,\n        // since it is the square root of a uint256. Newton's method converges quadratically (precision doubles at\n        // every iteration). We thus need at most 7 iteration to turn our partial result with one bit of precision\n        // into the expected uint128 result.\n        unchecked {\n            result = (result + a / result) >> 1;\n            result = (result + a / result) >> 1;\n            result = (result + a / result) >> 1;\n            result = (result + a / result) >> 1;\n            result = (result + a / result) >> 1;\n            result = (result + a / result) >> 1;\n            result = (result + a / result) >> 1;\n            return min(result, a / result);\n        }\n    }\n\n    /**\n     * @notice Calculates sqrt(a), following the selected rounding direction.\n     */\n    function sqrt(uint256 a, Rounding rounding) internal pure returns (uint256) {\n        unchecked {\n            uint256 result = sqrt(a);\n            return result + (rounding == Rounding.Up && result * result < a ? 1 : 0);\n        }\n    }\n\n    /**\n     * @dev Return the log in base 2, rounded down, of a positive value.\n     * Returns 0 if given 0.\n     */\n    function log2(uint256 value) internal pure returns (uint256) {\n        uint256 result = 0;\n        unchecked {\n            if (value >> 128 > 0) {\n                value >>= 128;\n                result += 128;\n            }\n            if (value >> 64 > 0) {\n                value >>= 64;\n                result += 64;\n            }\n            if (value >> 32 > 0) {\n                value >>= 32;\n                result += 32;\n            }\n            if (value >> 16 > 0) {\n                value >>= 16;\n                result += 16;\n            }\n            if (value >> 8 > 0) {\n                value >>= 8;\n                result += 8;\n            }\n            if (value >> 4 > 0) {\n                value >>= 4;\n                result += 4;\n            }\n            if (value >> 2 > 0) {\n                value >>= 2;\n                result += 2;\n            }\n            if (value >> 1 > 0) {\n                result += 1;\n            }\n        }\n        return result;\n    }\n\n    /**\n     * @dev Return the log in base 2, following the selected rounding direction, of a positive value.\n     * Returns 0 if given 0.\n     */\n    function log2(uint256 value, Rounding rounding) internal pure returns (uint256) {\n        unchecked {\n            uint256 result = log2(value);\n            return result + (rounding == Rounding.Up && 1 << result < value ? 1 : 0);\n        }\n    }\n\n    /**\n     * @dev Return the log in base 10, rounded down, of a positive value.\n     * Returns 0 if given 0.\n     */\n    function log10(uint256 value) internal pure returns (uint256) {\n        uint256 result = 0;\n        unchecked {\n            if (value >= 10**64) {\n                value /= 10**64;\n                result += 64;\n            }\n            if (value >= 10**32) {\n                value /= 10**32;\n                result += 32;\n            }\n            if (value >= 10**16) {\n                value /= 10**16;\n                result += 16;\n            }\n            if (value >= 10**8) {\n                value /= 10**8;\n                result += 8;\n            }\n            if (value >= 10**4) {\n                value /= 10**4;\n                result += 4;\n            }\n            if (value >= 10**2) {\n                value /= 10**2;\n                result += 2;\n            }\n            if (value >= 10**1) {\n                result += 1;\n            }\n        }\n        return result;\n    }\n\n    /**\n     * @dev Return the log in base 10, following the selected rounding direction, of a positive value.\n     * Returns 0 if given 0.\n     */\n    function log10(uint256 value, Rounding rounding) internal pure returns (uint256) {\n        unchecked {\n            uint256 result = log10(value);\n            return result + (rounding == Rounding.Up && 10**result < value ? 1 : 0);\n        }\n    }\n\n    /**\n     * @dev Return the log in base 256, rounded down, of a positive value.\n     * Returns 0 if given 0.\n     *\n     * Adding one to the result gives the number of pairs of hex symbols needed to represent `value` as a hex string.\n     */\n    function log256(uint256 value) internal pure returns (uint256) {\n        uint256 result = 0;\n        unchecked {\n            if (value >> 128 > 0) {\n                value >>= 128;\n                result += 16;\n            }\n            if (value >> 64 > 0) {\n                value >>= 64;\n                result += 8;\n            }\n            if (value >> 32 > 0) {\n                value >>= 32;\n                result += 4;\n            }\n            if (value >> 16 > 0) {\n                value >>= 16;\n                result += 2;\n            }\n            if (value >> 8 > 0) {\n                result += 1;\n            }\n        }\n        return result;\n    }\n\n    /**\n     * @dev Return the log in base 10, following the selected rounding direction, of a positive value.\n     * Returns 0 if given 0.\n     */\n    function log256(uint256 value, Rounding rounding) internal pure returns (uint256) {\n        unchecked {\n            uint256 result = log256(value);\n            return result + (rounding == Rounding.Up && 1 << (result * 8) < value ? 1 : 0);\n        }\n    }\n}\n"
			}
		},
		"settings": {
			"optimizer": {
				"enabled": true,
				"runs": 200
			},
			"outputSelection": {
				"*": {
					"": [
						"ast"
					],
					"*": [
						"abi",
						"metadata",
						"devdoc",
						"userdoc",
						"storageLayout",
						"evm.legacyAssembly",
						"evm.bytecode",
						"evm.deployedBytecode",
						"evm.methodIdentifiers",
						"evm.gasEstimates",
						"evm.assembly"
					]
				}
			}
		}
	},
	"output": {
		"contracts": {
			"@openzeppelin/contracts/access/Ownable.sol": {
				"Ownable": {
					"abi": [
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "previousOwner",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "newOwner",
									"type": "address"
								}
							],
							"name": "OwnershipTransferred",
							"type": "event"
						},
						{
							"inputs": [],
							"name": "owner",
							"outputs": [
								{
									"internalType": "address",
									"name": "",
									"type": "address"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "renounceOwnership",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "newOwner",
									"type": "address"
								}
							],
							"name": "transferOwnership",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						}
					],
					"devdoc": {
						"details": "Contract module which provides a basic access control mechanism, where there is an account (an owner) that can be granted exclusive access to specific functions. By default, the owner account will be the one that deploys the contract. This can later be changed with {transferOwnership}. This module is used through inheritance. It will make available the modifier `onlyOwner`, which can be applied to your functions to restrict their use to the owner.",
						"kind": "dev",
						"methods": {
							"constructor": {
								"details": "Initializes the contract setting the deployer as the initial owner."
							},
							"owner()": {
								"details": "Returns the address of the current owner."
							},
							"renounceOwnership()": {
								"details": "Leaves the contract without owner. It will not be possible to call `onlyOwner` functions anymore. Can only be called by the current owner. NOTE: Renouncing ownership will leave the contract without an owner, thereby removing any functionality that is only available to the owner."
							},
							"transferOwnership(address)": {
								"details": "Transfers ownership of the contract to a new account (`newOwner`). Can only be called by the current owner."
							}
						},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {
							"owner()": "8da5cb5b",
							"renounceOwnership()": "715018a6",
							"transferOwnership(address)": "f2fde38b"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.21+commit.d9974bed\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"previousOwner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"OwnershipTransferred\",\"type\":\"event\"},{\"inputs\":[],\"name\":\"owner\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"renounceOwnership\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"transferOwnership\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"Contract module which provides a basic access control mechanism, where there is an account (an owner) that can be granted exclusive access to specific functions. By default, the owner account will be the one that deploys the contract. This can later be changed with {transferOwnership}. This module is used through inheritance. It will make available the modifier `onlyOwner`, which can be applied to your functions to restrict their use to the owner.\",\"kind\":\"dev\",\"methods\":{\"constructor\":{\"details\":\"Initializes the contract setting the deployer as the initial owner.\"},\"owner()\":{\"details\":\"Returns the address of the current owner.\"},\"renounceOwnership()\":{\"details\":\"Leaves the contract without owner. It will not be possible to call `onlyOwner` functions anymore. Can only be called by the current owner. NOTE: Renouncing ownership will leave the contract without an owner, thereby removing any functionality that is only available to the owner.\"},\"transferOwnership(address)\":{\"details\":\"Transfers ownership of the contract to a new account (`newOwner`). Can only be called by the current owner.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/access/Ownable.sol\":\"Ownable\"},\"evmVersion\":\"shanghai\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/access/Ownable.sol\":{\"keccak256\":\"0xa94b34880e3c1b0b931662cb1c09e5dfa6662f31cba80e07c5ee71cd135c9673\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://40fb1b5102468f783961d0af743f91b9980cf66b50d1d12009f6bb1869cea4d2\",\"dweb:/ipfs/QmYqEbJML4jB1GHbzD4cUZDtJg5wVwNm3vDJq1GbyDus8y\"]},\"@openzeppelin/contracts/utils/Context.sol\":{\"keccak256\":\"0xe2e337e6dde9ef6b680e07338c493ebea1b5fd09b43424112868e9cc1706bca7\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://6df0ddf21ce9f58271bdfaa85cde98b200ef242a05a3f85c2bc10a8294800a92\",\"dweb:/ipfs/QmRK2Y5Yc6BK7tGKkgsgn3aJEQGi5aakeSPZvS65PV8Xp3\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [
							{
								"astId": 7,
								"contract": "@openzeppelin/contracts/access/Ownable.sol:Ownable",
								"label": "_owner",
								"offset": 0,
								"slot": "0",
								"type": "t_address"
							}
						],
						"types": {
							"t_address": {
								"encoding": "inplace",
								"label": "address",
								"numberOfBytes": "20"
							}
						}
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"@openzeppelin/contracts/security/ReentrancyGuard.sol": {
				"ReentrancyGuard": {
					"abi": [],
					"devdoc": {
						"details": "Contract module that helps prevent reentrant calls to a function. Inheriting from `ReentrancyGuard` will make the {nonReentrant} modifier available, which can be applied to functions to make sure there are no nested (reentrant) calls to them. Note that because there is a single `nonReentrant` guard, functions marked as `nonReentrant` may not call one another. This can be worked around by making those functions `private`, and then adding `external` `nonReentrant` entry points to them. TIP: If you would like to learn more about reentrancy and alternative ways to protect against it, check out our blog post https://blog.openzeppelin.com/reentrancy-after-istanbul/[Reentrancy After Istanbul].",
						"kind": "dev",
						"methods": {},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.21+commit.d9974bed\"},\"language\":\"Solidity\",\"output\":{\"abi\":[],\"devdoc\":{\"details\":\"Contract module that helps prevent reentrant calls to a function. Inheriting from `ReentrancyGuard` will make the {nonReentrant} modifier available, which can be applied to functions to make sure there are no nested (reentrant) calls to them. Note that because there is a single `nonReentrant` guard, functions marked as `nonReentrant` may not call one another. This can be worked around by making those functions `private`, and then adding `external` `nonReentrant` entry points to them. TIP: If you would like to learn more about reentrancy and alternative ways to protect against it, check out our blog post https://blog.openzeppelin.com/reentrancy-after-istanbul/[Reentrancy After Istanbul].\",\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/security/ReentrancyGuard.sol\":\"ReentrancyGuard\"},\"evmVersion\":\"shanghai\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/security/ReentrancyGuard.sol\":{\"keccak256\":\"0x190dd6f8d592b7e4e930feb7f4313aeb8e1c4ad3154c27ce1cf6a512fc30d8cc\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://4ce8dfb62d0c4fa260d6eec8f1cd47f5f2a044e11bde5b31d18072fa6e7d9010\",\"dweb:/ipfs/QmTyFztU3tLEcEDnqqiaW4UJetqsU77LXc6pjc9oTXCK5u\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [
							{
								"astId": 123,
								"contract": "@openzeppelin/contracts/security/ReentrancyGuard.sol:ReentrancyGuard",
								"label": "_status",
								"offset": 0,
								"slot": "0",
								"type": "t_uint256"
							}
						],
						"types": {
							"t_uint256": {
								"encoding": "inplace",
								"label": "uint256",
								"numberOfBytes": "32"
							}
						}
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"@openzeppelin/contracts/token/ERC721/ERC721.sol": {
				"ERC721": {
					"abi": [
						{
							"inputs": [
								{
									"internalType": "string",
									"name": "name_",
									"type": "string"
								},
								{
									"internalType": "string",
									"name": "symbol_",
									"type": "string"
								}
							],
							"stateMutability": "nonpayable",
							"type": "constructor"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "approved",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								}
							],
							"name": "Approval",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "operator",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "bool",
									"name": "approved",
									"type": "bool"
								}
							],
							"name": "ApprovalForAll",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								}
							],
							"name": "Transfer",
							"type": "event"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								}
							],
							"name": "approve",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "owner",
									"type": "address"
								}
							],
							"name": "balanceOf",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								}
							],
							"name": "getApproved",
							"outputs": [
								{
									"internalType": "address",
									"name": "",
									"type": "address"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "operator",
									"type": "address"
								}
							],
							"name": "isApprovedForAll",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "name",
							"outputs": [
								{
									"internalType": "string",
									"name": "",
									"type": "string"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								}
							],
							"name": "ownerOf",
							"outputs": [
								{
									"internalType": "address",
									"name": "",
									"type": "address"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								}
							],
							"name": "safeTransferFrom",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								},
								{
									"internalType": "bytes",
									"name": "data",
									"type": "bytes"
								}
							],
							"name": "safeTransferFrom",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "operator",
									"type": "address"
								},
								{
									"internalType": "bool",
									"name": "approved",
									"type": "bool"
								}
							],
							"name": "setApprovalForAll",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "bytes4",
									"name": "interfaceId",
									"type": "bytes4"
								}
							],
							"name": "supportsInterface",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "symbol",
							"outputs": [
								{
									"internalType": "string",
									"name": "",
									"type": "string"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								}
							],
							"name": "tokenURI",
							"outputs": [
								{
									"internalType": "string",
									"name": "",
									"type": "string"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								}
							],
							"name": "transferFrom",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						}
					],
					"devdoc": {
						"details": "Implementation of https://eips.ethereum.org/EIPS/eip-721[ERC721] Non-Fungible Token Standard, including the Metadata extension, but not including the Enumerable extension, which is available separately as {ERC721Enumerable}.",
						"events": {
							"Approval(address,address,uint256)": {
								"details": "Emitted when `owner` enables `approved` to manage the `tokenId` token."
							},
							"ApprovalForAll(address,address,bool)": {
								"details": "Emitted when `owner` enables or disables (`approved`) `operator` to manage all of its assets."
							},
							"Transfer(address,address,uint256)": {
								"details": "Emitted when `tokenId` token is transferred from `from` to `to`."
							}
						},
						"kind": "dev",
						"methods": {
							"approve(address,uint256)": {
								"details": "See {IERC721-approve}."
							},
							"balanceOf(address)": {
								"details": "See {IERC721-balanceOf}."
							},
							"constructor": {
								"details": "Initializes the contract by setting a `name` and a `symbol` to the token collection."
							},
							"getApproved(uint256)": {
								"details": "See {IERC721-getApproved}."
							},
							"isApprovedForAll(address,address)": {
								"details": "See {IERC721-isApprovedForAll}."
							},
							"name()": {
								"details": "See {IERC721Metadata-name}."
							},
							"ownerOf(uint256)": {
								"details": "See {IERC721-ownerOf}."
							},
							"safeTransferFrom(address,address,uint256)": {
								"details": "See {IERC721-safeTransferFrom}."
							},
							"safeTransferFrom(address,address,uint256,bytes)": {
								"details": "See {IERC721-safeTransferFrom}."
							},
							"setApprovalForAll(address,bool)": {
								"details": "See {IERC721-setApprovalForAll}."
							},
							"supportsInterface(bytes4)": {
								"details": "See {IERC165-supportsInterface}."
							},
							"symbol()": {
								"details": "See {IERC721Metadata-symbol}."
							},
							"tokenURI(uint256)": {
								"details": "See {IERC721Metadata-tokenURI}."
							},
							"transferFrom(address,address,uint256)": {
								"details": "See {IERC721-transferFrom}."
							}
						},
						"version": 1
					},
					"evm": {
						"assembly": "    /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":628:16955  contract ERC721 is Context, ERC165, IERC721, IERC721Metadata {... */\n  mstore(0x40, 0x80)\n    /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":1390:1503  constructor(string memory name_, string memory symbol_) {... */\n  callvalue\n  dup1\n  iszero\n  tag_1\n  jumpi\n  0x00\n  dup1\n  revert\ntag_1:\n  pop\n  mload(0x40)\n  sub(codesize, bytecodeSize)\n  dup1\n  bytecodeSize\n  dup4\n  codecopy\n  dup2\n  add\n  0x40\n  dup2\n  swap1\n  mstore\n  tag_2\n  swap2\n  tag_3\n  jump\t// in\ntag_2:\n    /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":1456:1461  _name */\n  0x00\n    /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":1456:1469  _name = name_ */\n  tag_6\n    /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":1464:1469  name_ */\n  dup4\n    /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":1456:1461  _name */\n  dup3\n    /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":1456:1469  _name = name_ */\n  tag_7\n  jump\t// in\ntag_6:\n  pop\n    /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":1479:1486  _symbol */\n  0x01\n    /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":1479:1496  _symbol = symbol_ */\n  tag_8\n    /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":1489:1496  symbol_ */\n  dup3\n    /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":1479:1486  _symbol */\n  dup3\n    /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":1479:1496  _symbol = symbol_ */\n  tag_7\n  jump\t// in\ntag_8:\n  pop\n    /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":1390:1503  constructor(string memory name_, string memory symbol_) {... */\n  pop\n  pop\n    /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":628:16955  contract ERC721 is Context, ERC165, IERC721, IERC721Metadata {... */\n  jump(tag_16)\n    /* \"#utility.yul\":14:141   */\ntag_10:\n    /* \"#utility.yul\":75:85   */\n  0x4e487b71\n    /* \"#utility.yul\":70:73   */\n  0xe0\n    /* \"#utility.yul\":66:86   */\n  shl\n    /* \"#utility.yul\":63:64   */\n  0x00\n    /* \"#utility.yul\":56:87   */\n  mstore\n    /* \"#utility.yul\":106:110   */\n  0x41\n    /* \"#utility.yul\":103:104   */\n  0x04\n    /* \"#utility.yul\":96:111   */\n  mstore\n    /* \"#utility.yul\":130:134   */\n  0x24\n    /* \"#utility.yul\":127:128   */\n  0x00\n    /* \"#utility.yul\":120:135   */\n  revert\n    /* \"#utility.yul\":146:986   */\ntag_11:\n    /* \"#utility.yul\":200:205   */\n  0x00\n    /* \"#utility.yul\":253:256   */\n  dup3\n    /* \"#utility.yul\":246:250   */\n  0x1f\n    /* \"#utility.yul\":238:244   */\n  dup4\n    /* \"#utility.yul\":234:251   */\n  add\n    /* \"#utility.yul\":230:257   */\n  slt\n    /* \"#utility.yul\":220:275   */\n  tag_19\n  jumpi\n    /* \"#utility.yul\":271:272   */\n  0x00\n    /* \"#utility.yul\":268:269   */\n  dup1\n    /* \"#utility.yul\":261:273   */\n  revert\n    /* \"#utility.yul\":220:275   */\ntag_19:\n    /* \"#utility.yul\":294:307   */\n  dup2\n  mload\n  sub(shl(0x40, 0x01), 0x01)\n    /* \"#utility.yul\":356:366   */\n  dup1\n  dup3\n  gt\n    /* \"#utility.yul\":353:389   */\n  iszero\n  tag_21\n  jumpi\n    /* \"#utility.yul\":369:387   */\n  tag_21\n  tag_10\n  jump\t// in\ntag_21:\n    /* \"#utility.yul\":444:446   */\n  0x40\n    /* \"#utility.yul\":438:447   */\n  mload\n    /* \"#utility.yul\":412:414   */\n  0x1f\n    /* \"#utility.yul\":498:511   */\n  dup4\n  add\n  not(0x1f)\n    /* \"#utility.yul\":494:516   */\n  swap1\n  dup2\n  and\n    /* \"#utility.yul\":518:520   */\n  0x3f\n    /* \"#utility.yul\":490:521   */\n  add\n    /* \"#utility.yul\":486:526   */\n  and\n    /* \"#utility.yul\":474:527   */\n  dup2\n  add\n  swap1\n    /* \"#utility.yul\":542:560   */\n  dup3\n  dup3\n  gt\n    /* \"#utility.yul\":562:584   */\n  dup2\n  dup4\n  lt\n    /* \"#utility.yul\":539:585   */\n  or\n    /* \"#utility.yul\":536:608   */\n  iszero\n  tag_23\n  jumpi\n    /* \"#utility.yul\":588:606   */\n  tag_23\n  tag_10\n  jump\t// in\ntag_23:\n    /* \"#utility.yul\":628:638   */\n  dup2\n    /* \"#utility.yul\":624:626   */\n  0x40\n    /* \"#utility.yul\":617:639   */\n  mstore\n    /* \"#utility.yul\":663:665   */\n  dup4\n    /* \"#utility.yul\":655:661   */\n  dup2\n    /* \"#utility.yul\":648:666   */\n  mstore\n    /* \"#utility.yul\":685:689   */\n  0x20\n    /* \"#utility.yul\":675:689   */\n  swap3\n  pop\n    /* \"#utility.yul\":730:733   */\n  dup7\n    /* \"#utility.yul\":725:727   */\n  dup4\n    /* \"#utility.yul\":720:722   */\n  dup6\n    /* \"#utility.yul\":712:718   */\n  dup9\n    /* \"#utility.yul\":708:723   */\n  add\n    /* \"#utility.yul\":704:728   */\n  add\n    /* \"#utility.yul\":701:734   */\n  gt\n    /* \"#utility.yul\":698:751   */\n  iszero\n  tag_24\n  jumpi\n    /* \"#utility.yul\":747:748   */\n  0x00\n    /* \"#utility.yul\":744:745   */\n  dup1\n    /* \"#utility.yul\":737:749   */\n  revert\n    /* \"#utility.yul\":698:751   */\ntag_24:\n    /* \"#utility.yul\":769:770   */\n  0x00\n    /* \"#utility.yul\":760:770   */\n  swap2\n  pop\n    /* \"#utility.yul\":779:912   */\ntag_25:\n    /* \"#utility.yul\":793:795   */\n  dup4\n    /* \"#utility.yul\":790:791   */\n  dup3\n    /* \"#utility.yul\":787:796   */\n  lt\n    /* \"#utility.yul\":779:912   */\n  iszero\n  tag_27\n  jumpi\n    /* \"#utility.yul\":881:895   */\n  dup6\n  dup3\n  add\n    /* \"#utility.yul\":877:900   */\n  dup4\n  add\n    /* \"#utility.yul\":871:901   */\n  mload\n    /* \"#utility.yul\":850:864   */\n  dup2\n  dup4\n  add\n    /* \"#utility.yul\":846:869   */\n  dup5\n  add\n    /* \"#utility.yul\":839:902   */\n  mstore\n    /* \"#utility.yul\":804:814   */\n  swap1\n  dup3\n  add\n  swap1\n    /* \"#utility.yul\":779:912   */\n  jump(tag_25)\ntag_27:\n    /* \"#utility.yul\":954:955   */\n  0x00\n    /* \"#utility.yul\":932:947   */\n  swap4\n  dup2\n  add\n    /* \"#utility.yul\":928:952   */\n  swap1\n  swap3\n  add\n    /* \"#utility.yul\":921:956   */\n  swap3\n  swap1\n  swap3\n  mstore\n    /* \"#utility.yul\":936:942   */\n  swap5\n    /* \"#utility.yul\":146:986   */\n  swap4\n  pop\n  pop\n  pop\n  pop\n  jump\t// out\n    /* \"#utility.yul\":991:1553   */\ntag_3:\n    /* \"#utility.yul\":1090:1096   */\n  0x00\n    /* \"#utility.yul\":1098:1104   */\n  dup1\n    /* \"#utility.yul\":1151:1153   */\n  0x40\n    /* \"#utility.yul\":1139:1148   */\n  dup4\n    /* \"#utility.yul\":1130:1137   */\n  dup6\n    /* \"#utility.yul\":1126:1149   */\n  sub\n    /* \"#utility.yul\":1122:1154   */\n  slt\n    /* \"#utility.yul\":1119:1171   */\n  iszero\n  tag_29\n  jumpi\n    /* \"#utility.yul\":1167:1168   */\n  0x00\n    /* \"#utility.yul\":1164:1165   */\n  dup1\n    /* \"#utility.yul\":1157:1169   */\n  revert\n    /* \"#utility.yul\":1119:1171   */\ntag_29:\n    /* \"#utility.yul\":1194:1210   */\n  dup3\n  mload\n  sub(shl(0x40, 0x01), 0x01)\n    /* \"#utility.yul\":1259:1273   */\n  dup1\n  dup3\n  gt\n    /* \"#utility.yul\":1256:1290   */\n  iszero\n  tag_30\n  jumpi\n    /* \"#utility.yul\":1286:1287   */\n  0x00\n    /* \"#utility.yul\":1283:1284   */\n  dup1\n    /* \"#utility.yul\":1276:1288   */\n  revert\n    /* \"#utility.yul\":1256:1290   */\ntag_30:\n    /* \"#utility.yul\":1309:1370   */\n  tag_31\n    /* \"#utility.yul\":1362:1369   */\n  dup7\n    /* \"#utility.yul\":1353:1359   */\n  dup4\n    /* \"#utility.yul\":1342:1351   */\n  dup8\n    /* \"#utility.yul\":1338:1360   */\n  add\n    /* \"#utility.yul\":1309:1370   */\n  tag_11\n  jump\t// in\ntag_31:\n    /* \"#utility.yul\":1299:1370   */\n  swap4\n  pop\n    /* \"#utility.yul\":1416:1418   */\n  0x20\n    /* \"#utility.yul\":1405:1414   */\n  dup6\n    /* \"#utility.yul\":1401:1419   */\n  add\n    /* \"#utility.yul\":1395:1420   */\n  mload\n    /* \"#utility.yul\":1379:1420   */\n  swap2\n  pop\n    /* \"#utility.yul\":1445:1447   */\n  dup1\n    /* \"#utility.yul\":1435:1443   */\n  dup3\n    /* \"#utility.yul\":1432:1448   */\n  gt\n    /* \"#utility.yul\":1429:1465   */\n  iszero\n  tag_32\n  jumpi\n    /* \"#utility.yul\":1461:1462   */\n  0x00\n    /* \"#utility.yul\":1458:1459   */\n  dup1\n    /* \"#utility.yul\":1451:1463   */\n  revert\n    /* \"#utility.yul\":1429:1465   */\ntag_32:\n  pop\n    /* \"#utility.yul\":1484:1547   */\n  tag_33\n    /* \"#utility.yul\":1539:1546   */\n  dup6\n    /* \"#utility.yul\":1528:1536   */\n  dup3\n    /* \"#utility.yul\":1517:1526   */\n  dup7\n    /* \"#utility.yul\":1513:1537   */\n  add\n    /* \"#utility.yul\":1484:1547   */\n  tag_11\n  jump\t// in\ntag_33:\n    /* \"#utility.yul\":1474:1547   */\n  swap2\n  pop\n  pop\n    /* \"#utility.yul\":991:1553   */\n  swap3\n  pop\n  swap3\n  swap1\n  pop\n  jump\t// out\n    /* \"#utility.yul\":1558:1938   */\ntag_12:\n    /* \"#utility.yul\":1637:1638   */\n  0x01\n    /* \"#utility.yul\":1633:1645   */\n  dup2\n  dup2\n  shr\n  swap1\n    /* \"#utility.yul\":1680:1692   */\n  dup3\n  and\n  dup1\n    /* \"#utility.yul\":1701:1762   */\n  tag_35\n  jumpi\n    /* \"#utility.yul\":1755:1759   */\n  0x7f\n    /* \"#utility.yul\":1747:1753   */\n  dup3\n    /* \"#utility.yul\":1743:1760   */\n  and\n    /* \"#utility.yul\":1733:1760   */\n  swap2\n  pop\n    /* \"#utility.yul\":1701:1762   */\ntag_35:\n    /* \"#utility.yul\":1808:1810   */\n  0x20\n    /* \"#utility.yul\":1800:1806   */\n  dup3\n    /* \"#utility.yul\":1797:1811   */\n  lt\n    /* \"#utility.yul\":1777:1795   */\n  dup2\n    /* \"#utility.yul\":1774:1812   */\n  sub\n    /* \"#utility.yul\":1771:1932   */\n  tag_36\n  jumpi\n    /* \"#utility.yul\":1854:1864   */\n  0x4e487b71\n    /* \"#utility.yul\":1849:1852   */\n  0xe0\n    /* \"#utility.yul\":1845:1865   */\n  shl\n    /* \"#utility.yul\":1842:1843   */\n  0x00\n    /* \"#utility.yul\":1835:1866   */\n  mstore\n    /* \"#utility.yul\":1889:1893   */\n  0x22\n    /* \"#utility.yul\":1886:1887   */\n  0x04\n    /* \"#utility.yul\":1879:1894   */\n  mstore\n    /* \"#utility.yul\":1917:1921   */\n  0x24\n    /* \"#utility.yul\":1914:1915   */\n  0x00\n    /* \"#utility.yul\":1907:1922   */\n  revert\n    /* \"#utility.yul\":1771:1932   */\ntag_36:\n  pop\n    /* \"#utility.yul\":1558:1938   */\n  swap2\n  swap1\n  pop\n  jump\t// out\n    /* \"#utility.yul\":2069:2614   */\ntag_14:\n    /* \"#utility.yul\":2171:2173   */\n  0x1f\n    /* \"#utility.yul\":2166:2169   */\n  dup3\n    /* \"#utility.yul\":2163:2174   */\n  gt\n    /* \"#utility.yul\":2160:2608   */\n  iszero\n  tag_39\n  jumpi\n    /* \"#utility.yul\":2207:2208   */\n  0x00\n    /* \"#utility.yul\":2232:2237   */\n  dup2\n    /* \"#utility.yul\":2228:2230   */\n  dup2\n    /* \"#utility.yul\":2221:2238   */\n  mstore\n    /* \"#utility.yul\":2277:2281   */\n  0x20\n    /* \"#utility.yul\":2273:2275   */\n  dup2\n    /* \"#utility.yul\":2263:2282   */\n  keccak256\n    /* \"#utility.yul\":2347:2349   */\n  0x1f\n    /* \"#utility.yul\":2335:2345   */\n  dup6\n    /* \"#utility.yul\":2331:2350   */\n  add\n    /* \"#utility.yul\":2328:2329   */\n  0x05\n    /* \"#utility.yul\":2324:2351   */\n  shr\n    /* \"#utility.yul\":2318:2322   */\n  dup2\n    /* \"#utility.yul\":2314:2352   */\n  add\n    /* \"#utility.yul\":2383:2387   */\n  0x20\n    /* \"#utility.yul\":2371:2381   */\n  dup7\n    /* \"#utility.yul\":2368:2388   */\n  lt\n    /* \"#utility.yul\":2365:2412   */\n  iszero\n  tag_40\n  jumpi\n  pop\n    /* \"#utility.yul\":2406:2410   */\n  dup1\n    /* \"#utility.yul\":2365:2412   */\ntag_40:\n    /* \"#utility.yul\":2461:2463   */\n  0x1f\n    /* \"#utility.yul\":2456:2459   */\n  dup6\n    /* \"#utility.yul\":2452:2464   */\n  add\n    /* \"#utility.yul\":2449:2450   */\n  0x05\n    /* \"#utility.yul\":2445:2465   */\n  shr\n    /* \"#utility.yul\":2439:2443   */\n  dup3\n    /* \"#utility.yul\":2435:2466   */\n  add\n    /* \"#utility.yul\":2425:2466   */\n  swap2\n  pop\n    /* \"#utility.yul\":2516:2598   */\ntag_41:\n    /* \"#utility.yul\":2534:2536   */\n  dup2\n    /* \"#utility.yul\":2527:2532   */\n  dup2\n    /* \"#utility.yul\":2524:2537   */\n  lt\n    /* \"#utility.yul\":2516:2598   */\n  iszero\n  tag_43\n  jumpi\n    /* \"#utility.yul\":2579:2596   */\n  dup3\n  dup2\n  sstore\n    /* \"#utility.yul\":2560:2561   */\n  0x01\n    /* \"#utility.yul\":2549:2562   */\n  add\n    /* \"#utility.yul\":2516:2598   */\n  jump(tag_41)\ntag_43:\n    /* \"#utility.yul\":2520:2523   */\n  pop\n  pop\n  pop\n    /* \"#utility.yul\":2160:2608   */\ntag_39:\n    /* \"#utility.yul\":2069:2614   */\n  pop\n  pop\n  pop\n  jump\t// out\n    /* \"#utility.yul\":2790:4142   */\ntag_7:\n    /* \"#utility.yul\":2910:2920   */\n  dup2\n  mload\n  sub(shl(0x40, 0x01), 0x01)\n    /* \"#utility.yul\":2932:2962   */\n  dup2\n  gt\n    /* \"#utility.yul\":2929:2985   */\n  iszero\n  tag_47\n  jumpi\n    /* \"#utility.yul\":2965:2983   */\n  tag_47\n  tag_10\n  jump\t// in\ntag_47:\n    /* \"#utility.yul\":2994:3091   */\n  tag_48\n    /* \"#utility.yul\":3084:3090   */\n  dup2\n    /* \"#utility.yul\":3044:3082   */\n  tag_49\n    /* \"#utility.yul\":3076:3080   */\n  dup5\n    /* \"#utility.yul\":3070:3081   */\n  sload\n    /* \"#utility.yul\":3044:3082   */\n  tag_12\n  jump\t// in\ntag_49:\n    /* \"#utility.yul\":3038:3042   */\n  dup5\n    /* \"#utility.yul\":2994:3091   */\n  tag_14\n  jump\t// in\ntag_48:\n    /* \"#utility.yul\":3146:3150   */\n  0x20\n  dup1\n    /* \"#utility.yul\":3210:3212   */\n  0x1f\n    /* \"#utility.yul\":3199:3213   */\n  dup4\n  gt\n    /* \"#utility.yul\":3227:3228   */\n  0x01\n    /* \"#utility.yul\":3222:3885   */\n  dup2\n  eq\n  tag_51\n  jumpi\n    /* \"#utility.yul\":3929:3930   */\n  0x00\n    /* \"#utility.yul\":3946:3952   */\n  dup5\n    /* \"#utility.yul\":3943:4032   */\n  iszero\n  tag_52\n  jumpi\n  pop\n    /* \"#utility.yul\":3998:4017   */\n  dup6\n  dup4\n  add\n    /* \"#utility.yul\":3992:4018   */\n  mload\n    /* \"#utility.yul\":3943:4032   */\ntag_52:\n  not(0x00)\n    /* \"#utility.yul\":2747:2748   */\n  0x03\n    /* \"#utility.yul\":2743:2754   */\n  dup7\n  swap1\n  shl\n    /* \"#utility.yul\":2739:2763   */\n  shr\n    /* \"#utility.yul\":2735:2764   */\n  not\n    /* \"#utility.yul\":2725:2765   */\n  and\n    /* \"#utility.yul\":2771:2772   */\n  0x01\n    /* \"#utility.yul\":2767:2778   */\n  dup6\n  swap1\n  shl\n    /* \"#utility.yul\":2722:2779   */\n  or\n    /* \"#utility.yul\":4045:4126   */\n  dup6\n  sstore\n    /* \"#utility.yul\":3192:4136   */\n  jump(tag_43)\n    /* \"#utility.yul\":3222:3885   */\ntag_51:\n    /* \"#utility.yul\":2016:2017   */\n  0x00\n    /* \"#utility.yul\":2009:2023   */\n  dup6\n  dup2\n  mstore\n    /* \"#utility.yul\":2053:2057   */\n  0x20\n    /* \"#utility.yul\":2040:2058   */\n  dup2\n  keccak256\n  not(0x1f)\n    /* \"#utility.yul\":3258:3278   */\n  dup7\n  and\n  swap2\n    /* \"#utility.yul\":3376:3612   */\ntag_55:\n    /* \"#utility.yul\":3390:3397   */\n  dup3\n    /* \"#utility.yul\":3387:3388   */\n  dup2\n    /* \"#utility.yul\":3384:3398   */\n  lt\n    /* \"#utility.yul\":3376:3612   */\n  iszero\n  tag_57\n  jumpi\n    /* \"#utility.yul\":3479:3498   */\n  dup9\n  dup7\n  add\n    /* \"#utility.yul\":3473:3499   */\n  mload\n    /* \"#utility.yul\":3458:3500   */\n  dup3\n  sstore\n    /* \"#utility.yul\":3571:3598   */\n  swap5\n  dup5\n  add\n  swap5\n    /* \"#utility.yul\":3539:3540   */\n  0x01\n    /* \"#utility.yul\":3527:3541   */\n  swap1\n  swap2\n  add\n  swap1\n    /* \"#utility.yul\":3406:3425   */\n  dup5\n  add\n    /* \"#utility.yul\":3376:3612   */\n  jump(tag_55)\ntag_57:\n    /* \"#utility.yul\":3380:3383   */\n  pop\n    /* \"#utility.yul\":3640:3646   */\n  dup6\n    /* \"#utility.yul\":3631:3638   */\n  dup3\n    /* \"#utility.yul\":3628:3647   */\n  lt\n    /* \"#utility.yul\":3625:3826   */\n  iszero\n  tag_58\n  jumpi\n    /* \"#utility.yul\":3701:3720   */\n  dup8\n  dup6\n  add\n    /* \"#utility.yul\":3695:3721   */\n  mload\n  not(0x00)\n    /* \"#utility.yul\":3784:3785   */\n  0x03\n    /* \"#utility.yul\":3780:3794   */\n  dup9\n  swap1\n  shl\n    /* \"#utility.yul\":3796:3799   */\n  0xf8\n    /* \"#utility.yul\":3776:3800   */\n  and\n    /* \"#utility.yul\":3772:3809   */\n  shr\n    /* \"#utility.yul\":3768:3810   */\n  not\n    /* \"#utility.yul\":3753:3811   */\n  and\n    /* \"#utility.yul\":3738:3812   */\n  dup2\n  sstore\n    /* \"#utility.yul\":3625:3826   */\ntag_58:\n  pop\n  pop\n  pop\n  pop\n  pop\n    /* \"#utility.yul\":3872:3873   */\n  0x01\n    /* \"#utility.yul\":3856:3870   */\n  swap1\n  dup2\n  shl\n    /* \"#utility.yul\":3852:3874   */\n  add\n    /* \"#utility.yul\":3839:3875   */\n  swap1\n  sstore\n  pop\n    /* \"#utility.yul\":2790:4142   */\n  jump\t// out\ntag_16:\n    /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":628:16955  contract ERC721 is Context, ERC165, IERC721, IERC721Metadata {... */\n  dataSize(sub_0)\n  dup1\n  dataOffset(sub_0)\n  0x00\n  codecopy\n  0x00\n  return\nstop\n\nsub_0: assembly {\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":628:16955  contract ERC721 is Context, ERC165, IERC721, IERC721Metadata {... */\n      mstore(0x40, 0x80)\n      callvalue\n      dup1\n      iszero\n      tag_1\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_1:\n      pop\n      jumpi(tag_2, lt(calldatasize, 0x04))\n      shr(0xe0, calldataload(0x00))\n      dup1\n      0x6352211e\n      gt\n      tag_16\n      jumpi\n      dup1\n      0xa22cb465\n      gt\n      tag_17\n      jumpi\n      dup1\n      0xa22cb465\n      eq\n      tag_12\n      jumpi\n      dup1\n      0xb88d4fde\n      eq\n      tag_13\n      jumpi\n      dup1\n      0xc87b56dd\n      eq\n      tag_14\n      jumpi\n      dup1\n      0xe985e9c5\n      eq\n      tag_15\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_17:\n      dup1\n      0x6352211e\n      eq\n      tag_9\n      jumpi\n      dup1\n      0x70a08231\n      eq\n      tag_10\n      jumpi\n      dup1\n      0x95d89b41\n      eq\n      tag_11\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_16:\n      dup1\n      0x01ffc9a7\n      eq\n      tag_3\n      jumpi\n      dup1\n      0x06fdde03\n      eq\n      tag_4\n      jumpi\n      dup1\n      0x081812fc\n      eq\n      tag_5\n      jumpi\n      dup1\n      0x095ea7b3\n      eq\n      tag_6\n      jumpi\n      dup1\n      0x23b872dd\n      eq\n      tag_7\n      jumpi\n      dup1\n      0x42842e0e\n      eq\n      tag_8\n      jumpi\n    tag_2:\n      0x00\n      dup1\n      revert\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":1570:1870  function supportsInterface(bytes4 interfaceId) public view virtual override(ERC165, IERC165) returns (bool) {... */\n    tag_3:\n      tag_18\n      tag_19\n      calldatasize\n      0x04\n      tag_20\n      jump\t// in\n    tag_19:\n      tag_21\n      jump\t// in\n    tag_18:\n      mload(0x40)\n        /* \"#utility.yul\":565:579   */\n      swap1\n      iszero\n        /* \"#utility.yul\":558:580   */\n      iszero\n        /* \"#utility.yul\":540:581   */\n      dup2\n      mstore\n        /* \"#utility.yul\":528:530   */\n      0x20\n        /* \"#utility.yul\":513:531   */\n      add\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":1570:1870  function supportsInterface(bytes4 interfaceId) public view virtual override(ERC165, IERC165) returns (bool) {... */\n    tag_22:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":2471:2569  function name() public view virtual override returns (string memory) {... */\n    tag_4:\n      tag_24\n      tag_25\n      jump\t// in\n    tag_24:\n      mload(0x40)\n      tag_22\n      swap2\n      swap1\n      tag_27\n      jump\t// in\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":3935:4102  function getApproved(uint256 tokenId) public view virtual override returns (address) {... */\n    tag_5:\n      tag_28\n      tag_29\n      calldatasize\n      0x04\n      tag_30\n      jump\t// in\n    tag_29:\n      tag_31\n      jump\t// in\n    tag_28:\n      mload(0x40)\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"#utility.yul\":1697:1729   */\n      swap1\n      swap2\n      and\n        /* \"#utility.yul\":1679:1730   */\n      dup2\n      mstore\n        /* \"#utility.yul\":1667:1669   */\n      0x20\n        /* \"#utility.yul\":1652:1670   */\n      add\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":3935:4102  function getApproved(uint256 tokenId) public view virtual override returns (address) {... */\n      tag_22\n        /* \"#utility.yul\":1533:1736   */\n      jump\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":3468:3874  function approve(address to, uint256 tokenId) public virtual override {... */\n    tag_6:\n      tag_34\n      tag_35\n      calldatasize\n      0x04\n      tag_36\n      jump\t// in\n    tag_35:\n      tag_37\n      jump\t// in\n    tag_34:\n      stop\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":4612:4938  function transferFrom(... */\n    tag_7:\n      tag_34\n      tag_39\n      calldatasize\n      0x04\n      tag_40\n      jump\t// in\n    tag_39:\n      tag_41\n      jump\t// in\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":5004:5183  function safeTransferFrom(... */\n    tag_8:\n      tag_34\n      tag_43\n      calldatasize\n      0x04\n      tag_40\n      jump\t// in\n    tag_43:\n      tag_44\n      jump\t// in\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":2190:2409  function ownerOf(uint256 tokenId) public view virtual override returns (address) {... */\n    tag_9:\n      tag_28\n      tag_46\n      calldatasize\n      0x04\n      tag_30\n      jump\t// in\n    tag_46:\n      tag_47\n      jump\t// in\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":1929:2133  function balanceOf(address owner) public view virtual override returns (uint256) {... */\n    tag_10:\n      tag_49\n      tag_50\n      calldatasize\n      0x04\n      tag_51\n      jump\t// in\n    tag_50:\n      tag_52\n      jump\t// in\n    tag_49:\n      mload(0x40)\n        /* \"#utility.yul\":2848:2873   */\n      swap1\n      dup2\n      mstore\n        /* \"#utility.yul\":2836:2838   */\n      0x20\n        /* \"#utility.yul\":2821:2839   */\n      add\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":1929:2133  function balanceOf(address owner) public view virtual override returns (uint256) {... */\n      tag_22\n        /* \"#utility.yul\":2702:2879   */\n      jump\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":2633:2735  function symbol() public view virtual override returns (string memory) {... */\n    tag_11:\n      tag_24\n      tag_56\n      jump\t// in\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":4169:4322  function setApprovalForAll(address operator, bool approved) public virtual override {... */\n    tag_12:\n      tag_34\n      tag_59\n      calldatasize\n      0x04\n      tag_60\n      jump\t// in\n    tag_59:\n      tag_61\n      jump\t// in\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":5249:5563  function safeTransferFrom(... */\n    tag_13:\n      tag_34\n      tag_63\n      calldatasize\n      0x04\n      tag_64\n      jump\t// in\n    tag_63:\n      tag_65\n      jump\t// in\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":2801:3077  function tokenURI(uint256 tokenId) public view virtual override returns (string memory) {... */\n    tag_14:\n      tag_24\n      tag_67\n      calldatasize\n      0x04\n      tag_30\n      jump\t// in\n    tag_67:\n      tag_68\n      jump\t// in\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":4388:4550  function isApprovedForAll(address owner, address operator) public view virtual override returns (bool) {... */\n    tag_15:\n      tag_18\n      tag_71\n      calldatasize\n      0x04\n      tag_72\n      jump\t// in\n    tag_71:\n      tag_73\n      jump\t// in\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":1570:1870  function supportsInterface(bytes4 interfaceId) public view virtual override(ERC165, IERC165) returns (bool) {... */\n    tag_21:\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":1672:1676  bool */\n      0x00\n      not(sub(shl(0xe0, 0x01), 0x01))\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":1707:1747  interfaceId == type(IERC721).interfaceId */\n      dup3\n      and\n      shl(0xe0, 0x80ac58cd)\n      eq\n      dup1\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":1707:1811  interfaceId == type(IERC721).interfaceId ||... */\n      tag_76\n      jumpi\n      pop\n      not(sub(shl(0xe0, 0x01), 0x01))\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":1763:1811  interfaceId == type(IERC721Metadata).interfaceId */\n      dup3\n      and\n      shl(0xe0, 0x5b5e139f)\n      eq\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":1707:1811  interfaceId == type(IERC721).interfaceId ||... */\n    tag_76:\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":1707:1863  interfaceId == type(IERC721).interfaceId ||... */\n      dup1\n      tag_78\n      jumpi\n      pop\n      shl(0xe0, 0x01ffc9a7)\n      not(sub(shl(0xe0, 0x01), 0x01))\n        /* \"@openzeppelin/contracts/utils/introspection/ERC165.sol\":937:977  interfaceId == type(IERC165).interfaceId */\n      dup4\n      and\n      eq\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":1827:1863  super.supportsInterface(interfaceId) */\n    tag_78:\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":1688:1863  return... */\n      swap3\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":1570:1870  function supportsInterface(bytes4 interfaceId) public view virtual override(ERC165, IERC165) returns (bool) {... */\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":2471:2569  function name() public view virtual override returns (string memory) {... */\n    tag_25:\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":2525:2538  string memory */\n      0x60\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":2557:2562  _name */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":2550:2562  return _name */\n      dup1\n      sload\n      tag_81\n      swap1\n      tag_82\n      jump\t// in\n    tag_81:\n      dup1\n      0x1f\n      add\n      0x20\n      dup1\n      swap2\n      div\n      mul\n      0x20\n      add\n      mload(0x40)\n      swap1\n      dup2\n      add\n      0x40\n      mstore\n      dup1\n      swap3\n      swap2\n      swap1\n      dup2\n      dup2\n      mstore\n      0x20\n      add\n      dup3\n      dup1\n      sload\n      tag_83\n      swap1\n      tag_82\n      jump\t// in\n    tag_83:\n      dup1\n      iszero\n      tag_84\n      jumpi\n      dup1\n      0x1f\n      lt\n      tag_85\n      jumpi\n      0x0100\n      dup1\n      dup4\n      sload\n      div\n      mul\n      dup4\n      mstore\n      swap2\n      0x20\n      add\n      swap2\n      jump(tag_84)\n    tag_85:\n      dup3\n      add\n      swap2\n      swap1\n      0x00\n      mstore\n      keccak256(0x00, 0x20)\n      swap1\n    tag_86:\n      dup2\n      sload\n      dup2\n      mstore\n      swap1\n      0x01\n      add\n      swap1\n      0x20\n      add\n      dup1\n      dup4\n      gt\n      tag_86\n      jumpi\n      dup3\n      swap1\n      sub\n      0x1f\n      and\n      dup3\n      add\n      swap2\n    tag_84:\n      pop\n      pop\n      pop\n      pop\n      pop\n      swap1\n      pop\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":2471:2569  function name() public view virtual override returns (string memory) {... */\n      swap1\n      jump\t// out\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":3935:4102  function getApproved(uint256 tokenId) public view virtual override returns (address) {... */\n    tag_31:\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":4011:4018  address */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":4030:4053  _requireMinted(tokenId) */\n      tag_88\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":4045:4052  tokenId */\n      dup3\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":4030:4044  _requireMinted */\n      tag_89\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":4030:4053  _requireMinted(tokenId) */\n      jump\t// in\n    tag_88:\n      pop\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":4071:4095  _tokenApprovals[tokenId] */\n      0x00\n      swap1\n      dup2\n      mstore\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":4071:4086  _tokenApprovals */\n      0x04\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":4071:4095  _tokenApprovals[tokenId] */\n      0x20\n      mstore\n      0x40\n      swap1\n      keccak256\n      sload\n      sub(shl(0xa0, 0x01), 0x01)\n      and\n      swap1\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":3935:4102  function getApproved(uint256 tokenId) public view virtual override returns (address) {... */\n      jump\t// out\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":3468:3874  function approve(address to, uint256 tokenId) public virtual override {... */\n    tag_37:\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":3548:3561  address owner */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":3564:3587  ERC721.ownerOf(tokenId) */\n      tag_91\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":3579:3586  tokenId */\n      dup3\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":3564:3578  ERC721.ownerOf */\n      tag_47\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":3564:3587  ERC721.ownerOf(tokenId) */\n      jump\t// in\n    tag_91:\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":3548:3587  address owner = ERC721.ownerOf(tokenId) */\n      swap1\n      pop\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":3611:3616  owner */\n      dup1\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":3605:3616  to != owner */\n      and\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":3605:3607  to */\n      dup4\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":3605:3616  to != owner */\n      and\n      sub\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":3597:3654  require(to != owner, \"ERC721: approval to current owner\") */\n      tag_92\n      jumpi\n      mload(0x40)\n      shl(0xe5, 0x461bcd)\n      dup2\n      mstore\n        /* \"#utility.yul\":5363:5365   */\n      0x20\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":3597:3654  require(to != owner, \"ERC721: approval to current owner\") */\n      0x04\n      dup3\n      add\n        /* \"#utility.yul\":5345:5366   */\n      mstore\n        /* \"#utility.yul\":5402:5404   */\n      0x21\n        /* \"#utility.yul\":5382:5400   */\n      0x24\n      dup3\n      add\n        /* \"#utility.yul\":5375:5405   */\n      mstore\n        /* \"#utility.yul\":5441:5475   */\n      0x4552433732313a20617070726f76616c20746f2063757272656e74206f776e65\n        /* \"#utility.yul\":5421:5439   */\n      0x44\n      dup3\n      add\n        /* \"#utility.yul\":5414:5476   */\n      mstore\n      shl(0xf9, 0x39)\n        /* \"#utility.yul\":5492:5510   */\n      0x64\n      dup3\n      add\n        /* \"#utility.yul\":5485:5516   */\n      mstore\n        /* \"#utility.yul\":5533:5552   */\n      0x84\n      add\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":3597:3654  require(to != owner, \"ERC721: approval to current owner\") */\n    tag_93:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n    tag_92:\n        /* \"@openzeppelin/contracts/utils/Context.sol\":719:729  msg.sender */\n      caller\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":3686:3707  _msgSender() == owner */\n      dup3\n      and\n      eq\n      dup1\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":3686:3748  _msgSender() == owner || isApprovedForAll(owner, _msgSender()) */\n      tag_98\n      jumpi\n      pop\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":3711:3748  isApprovedForAll(owner, _msgSender()) */\n      tag_98\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":3728:3733  owner */\n      dup2\n        /* \"@openzeppelin/contracts/utils/Context.sol\":719:729  msg.sender */\n      caller\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":4388:4550  function isApprovedForAll(address owner, address operator) public view virtual override returns (bool) {... */\n      tag_73\n      jump\t// in\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":3711:3748  isApprovedForAll(owner, _msgSender()) */\n    tag_98:\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":3665:3835  require(... */\n      tag_100\n      jumpi\n      mload(0x40)\n      shl(0xe5, 0x461bcd)\n      dup2\n      mstore\n        /* \"#utility.yul\":5765:5767   */\n      0x20\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":3665:3835  require(... */\n      0x04\n      dup3\n      add\n        /* \"#utility.yul\":5747:5768   */\n      mstore\n        /* \"#utility.yul\":5804:5806   */\n      0x3d\n        /* \"#utility.yul\":5784:5802   */\n      0x24\n      dup3\n      add\n        /* \"#utility.yul\":5777:5807   */\n      mstore\n        /* \"#utility.yul\":5843:5877   */\n      0x4552433732313a20617070726f76652063616c6c6572206973206e6f7420746f\n        /* \"#utility.yul\":5823:5841   */\n      0x44\n      dup3\n      add\n        /* \"#utility.yul\":5816:5878   */\n      mstore\n        /* \"#utility.yul\":5914:5945   */\n      0x6b656e206f776e6572206f7220617070726f76656420666f7220616c6c000000\n        /* \"#utility.yul\":5894:5912   */\n      0x64\n      dup3\n      add\n        /* \"#utility.yul\":5887:5946   */\n      mstore\n        /* \"#utility.yul\":5963:5982   */\n      0x84\n      add\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":3665:3835  require(... */\n      tag_93\n        /* \"#utility.yul\":5563:5988   */\n      jump\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":3665:3835  require(... */\n    tag_100:\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":3846:3867  _approve(to, tokenId) */\n      tag_103\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":3855:3857  to */\n      dup4\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":3859:3866  tokenId */\n      dup4\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":3846:3854  _approve */\n      tag_104\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":3846:3867  _approve(to, tokenId) */\n      jump\t// in\n    tag_103:\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":3538:3874  {... */\n      pop\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":3468:3874  function approve(address to, uint256 tokenId) public virtual override {... */\n      pop\n      pop\n      jump\t// out\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":4612:4938  function transferFrom(... */\n    tag_41:\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":4801:4842  _isApprovedOrOwner(_msgSender(), tokenId) */\n      tag_106\n        /* \"@openzeppelin/contracts/utils/Context.sol\":719:729  msg.sender */\n      caller\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":4834:4841  tokenId */\n      dup3\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":4801:4819  _isApprovedOrOwner */\n      tag_108\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":4801:4842  _isApprovedOrOwner(_msgSender(), tokenId) */\n      jump\t// in\n    tag_106:\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":4793:4892  require(_isApprovedOrOwner(_msgSender(), tokenId), \"ERC721: caller is not token owner or approved\") */\n      tag_109\n      jumpi\n      mload(0x40)\n      shl(0xe5, 0x461bcd)\n      dup2\n      mstore\n      0x04\n      add\n      tag_93\n      swap1\n      tag_111\n      jump\t// in\n    tag_109:\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":4903:4931  _transfer(from, to, tokenId) */\n      tag_103\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":4913:4917  from */\n      dup4\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":4919:4921  to */\n      dup4\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":4923:4930  tokenId */\n      dup4\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":4903:4912  _transfer */\n      tag_113\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":4903:4931  _transfer(from, to, tokenId) */\n      jump\t// in\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":5004:5183  function safeTransferFrom(... */\n    tag_44:\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":5137:5176  safeTransferFrom(from, to, tokenId, \"\") */\n      tag_103\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":5154:5158  from */\n      dup4\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":5160:5162  to */\n      dup4\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":5164:5171  tokenId */\n      dup4\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":5137:5176  safeTransferFrom(from, to, tokenId, \"\") */\n      mload(0x40)\n      dup1\n      0x20\n      add\n      0x40\n      mstore\n      dup1\n      0x00\n      dup2\n      mstore\n      pop\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":5137:5153  safeTransferFrom */\n      tag_65\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":5137:5176  safeTransferFrom(from, to, tokenId, \"\") */\n      jump\t// in\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":2190:2409  function ownerOf(uint256 tokenId) public view virtual override returns (address) {... */\n    tag_47:\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":2262:2269  address */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":6930:6946  _owners[tokenId] */\n      dup2\n      dup2\n      mstore\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":6930:6937  _owners */\n      0x02\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":6930:6946  _owners[tokenId] */\n      0x20\n      mstore\n      0x40\n      dup2\n      keccak256\n      sload\n      sub(shl(0xa0, 0x01), 0x01)\n      and\n      dup1\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":2324:2380  require(owner != address(0), \"ERC721: invalid token ID\") */\n      tag_78\n      jumpi\n      mload(0x40)\n      shl(0xe5, 0x461bcd)\n      dup2\n      mstore\n        /* \"#utility.yul\":6609:6611   */\n      0x20\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":2324:2380  require(owner != address(0), \"ERC721: invalid token ID\") */\n      0x04\n      dup3\n      add\n        /* \"#utility.yul\":6591:6612   */\n      mstore\n        /* \"#utility.yul\":6648:6650   */\n      0x18\n        /* \"#utility.yul\":6628:6646   */\n      0x24\n      dup3\n      add\n        /* \"#utility.yul\":6621:6651   */\n      mstore\n      shl(0x42, 0x115490cdcc8c4e881a5b9d985b1a59081d1bdad95b881251)\n        /* \"#utility.yul\":6667:6685   */\n      0x44\n      dup3\n      add\n        /* \"#utility.yul\":6660:6714   */\n      mstore\n        /* \"#utility.yul\":6731:6749   */\n      0x64\n      add\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":2324:2380  require(owner != address(0), \"ERC721: invalid token ID\") */\n      tag_93\n        /* \"#utility.yul\":6407:6755   */\n      jump\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":1929:2133  function balanceOf(address owner) public view virtual override returns (uint256) {... */\n    tag_52:\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":2001:2008  uint256 */\n      0x00\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":2028:2047  owner != address(0) */\n      dup3\n      and\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":2020:2093  require(owner != address(0), \"ERC721: address zero is not a valid owner\") */\n      tag_123\n      jumpi\n      mload(0x40)\n      shl(0xe5, 0x461bcd)\n      dup2\n      mstore\n        /* \"#utility.yul\":6962:6964   */\n      0x20\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":2020:2093  require(owner != address(0), \"ERC721: address zero is not a valid owner\") */\n      0x04\n      dup3\n      add\n        /* \"#utility.yul\":6944:6965   */\n      mstore\n        /* \"#utility.yul\":7001:7003   */\n      0x29\n        /* \"#utility.yul\":6981:6999   */\n      0x24\n      dup3\n      add\n        /* \"#utility.yul\":6974:7004   */\n      mstore\n        /* \"#utility.yul\":7040:7074   */\n      0x4552433732313a2061646472657373207a65726f206973206e6f742061207661\n        /* \"#utility.yul\":7020:7038   */\n      0x44\n      dup3\n      add\n        /* \"#utility.yul\":7013:7075   */\n      mstore\n      shl(0xb9, 0x3634b21037bbb732b9)\n        /* \"#utility.yul\":7091:7109   */\n      0x64\n      dup3\n      add\n        /* \"#utility.yul\":7084:7123   */\n      mstore\n        /* \"#utility.yul\":7140:7159   */\n      0x84\n      add\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":2020:2093  require(owner != address(0), \"ERC721: address zero is not a valid owner\") */\n      tag_93\n        /* \"#utility.yul\":6760:7165   */\n      jump\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":2020:2093  require(owner != address(0), \"ERC721: address zero is not a valid owner\") */\n    tag_123:\n      pop\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":2110:2126  _balances[owner] */\n      and\n      0x00\n      swap1\n      dup2\n      mstore\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":2110:2119  _balances */\n      0x03\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":2110:2126  _balances[owner] */\n      0x20\n      mstore\n      0x40\n      swap1\n      keccak256\n      sload\n      swap1\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":1929:2133  function balanceOf(address owner) public view virtual override returns (uint256) {... */\n      jump\t// out\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":2633:2735  function symbol() public view virtual override returns (string memory) {... */\n    tag_56:\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":2689:2702  string memory */\n      0x60\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":2721:2728  _symbol */\n      0x01\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":2714:2728  return _symbol */\n      dup1\n      sload\n      tag_81\n      swap1\n      tag_82\n      jump\t// in\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":4169:4322  function setApprovalForAll(address operator, bool approved) public virtual override {... */\n    tag_61:\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":4263:4315  _setApprovalForAll(_msgSender(), operator, approved) */\n      tag_133\n        /* \"@openzeppelin/contracts/utils/Context.sol\":719:729  msg.sender */\n      caller\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":4296:4304  operator */\n      dup4\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":4306:4314  approved */\n      dup4\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":4263:4281  _setApprovalForAll */\n      tag_135\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":4263:4315  _setApprovalForAll(_msgSender(), operator, approved) */\n      jump\t// in\n    tag_133:\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":4169:4322  function setApprovalForAll(address operator, bool approved) public virtual override {... */\n      pop\n      pop\n      jump\t// out\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":5249:5563  function safeTransferFrom(... */\n    tag_65:\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":5417:5458  _isApprovedOrOwner(_msgSender(), tokenId) */\n      tag_137\n        /* \"@openzeppelin/contracts/utils/Context.sol\":719:729  msg.sender */\n      caller\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":5450:5457  tokenId */\n      dup4\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":5417:5435  _isApprovedOrOwner */\n      tag_108\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":5417:5458  _isApprovedOrOwner(_msgSender(), tokenId) */\n      jump\t// in\n    tag_137:\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":5409:5508  require(_isApprovedOrOwner(_msgSender(), tokenId), \"ERC721: caller is not token owner or approved\") */\n      tag_139\n      jumpi\n      mload(0x40)\n      shl(0xe5, 0x461bcd)\n      dup2\n      mstore\n      0x04\n      add\n      tag_93\n      swap1\n      tag_111\n      jump\t// in\n    tag_139:\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":5518:5556  _safeTransfer(from, to, tokenId, data) */\n      tag_141\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":5532:5536  from */\n      dup5\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":5538:5540  to */\n      dup5\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":5542:5549  tokenId */\n      dup5\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":5551:5555  data */\n      dup5\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":5518:5531  _safeTransfer */\n      tag_142\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":5518:5556  _safeTransfer(from, to, tokenId, data) */\n      jump\t// in\n    tag_141:\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":5249:5563  function safeTransferFrom(... */\n      pop\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":2801:3077  function tokenURI(uint256 tokenId) public view virtual override returns (string memory) {... */\n    tag_68:\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":2874:2887  string memory */\n      0x60\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":2899:2922  _requireMinted(tokenId) */\n      tag_144\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":2914:2921  tokenId */\n      dup3\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":2899:2913  _requireMinted */\n      tag_89\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":2899:2922  _requireMinted(tokenId) */\n      jump\t// in\n    tag_144:\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":2933:2954  string memory baseURI */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":2957:2967  _baseURI() */\n      tag_145\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":3395:3404  return \"\" */\n      0x40\n      dup1\n      mload\n      0x20\n      dup2\n      add\n      swap1\n      swap2\n      mstore\n      0x00\n      dup2\n      mstore\n      swap1\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":3319:3411  function _baseURI() internal view virtual returns (string memory) {... */\n      jump\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":2957:2967  _baseURI() */\n    tag_145:\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":2933:2967  string memory baseURI = _baseURI() */\n      swap1\n      pop\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":3008:3009  0 */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":2990:2997  baseURI */\n      dup2\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":2984:3005  bytes(baseURI).length */\n      mload\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":2984:3009  bytes(baseURI).length > 0 */\n      gt\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":2984:3070  bytes(baseURI).length > 0 ? string(abi.encodePacked(baseURI, tokenId.toString())) : \"\" */\n      tag_147\n      jumpi\n      mload(0x40)\n      dup1\n      0x20\n      add\n      0x40\n      mstore\n      dup1\n      0x00\n      dup2\n      mstore\n      pop\n      jump(tag_148)\n    tag_147:\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":3036:3043  baseURI */\n      dup1\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":3045:3063  tokenId.toString() */\n      tag_149\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":3045:3052  tokenId */\n      dup5\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":3045:3061  tokenId.toString */\n      tag_150\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":3045:3063  tokenId.toString() */\n      jump\t// in\n    tag_149:\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":3019:3064  abi.encodePacked(baseURI, tokenId.toString()) */\n      add(0x20, mload(0x40))\n      tag_151\n      swap3\n      swap2\n      swap1\n      tag_152\n      jump\t// in\n    tag_151:\n      mload(0x40)\n      0x20\n      dup2\n      dup4\n      sub\n      sub\n      dup2\n      mstore\n      swap1\n      0x40\n      mstore\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":2984:3070  bytes(baseURI).length > 0 ? string(abi.encodePacked(baseURI, tokenId.toString())) : \"\" */\n    tag_148:\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":2977:3070  return bytes(baseURI).length > 0 ? string(abi.encodePacked(baseURI, tokenId.toString())) : \"\" */\n      swap4\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":2801:3077  function tokenURI(uint256 tokenId) public view virtual override returns (string memory) {... */\n      swap3\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":4388:4550  function isApprovedForAll(address owner, address operator) public view virtual override returns (bool) {... */\n    tag_73:\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":4508:4533  _operatorApprovals[owner] */\n      swap2\n      dup3\n      and\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":4485:4489  bool */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":4508:4533  _operatorApprovals[owner] */\n      swap1\n      dup2\n      mstore\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":4508:4526  _operatorApprovals */\n      0x05\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":4508:4533  _operatorApprovals[owner] */\n      0x20\n      swap1\n      dup2\n      mstore\n      0x40\n      dup1\n      dup4\n      keccak256\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":4508:4543  _operatorApprovals[owner][operator] */\n      swap4\n      swap1\n      swap5\n      and\n      dup3\n      mstore\n      swap2\n      swap1\n      swap2\n      mstore\n      keccak256\n      sload\n      0xff\n      and\n      swap1\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":4388:4550  function isApprovedForAll(address owner, address operator) public view virtual override returns (bool) {... */\n      jump\t// out\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":13466:13599  function _requireMinted(uint256 tokenId) internal view virtual {... */\n    tag_89:\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":7321:7325  bool */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":6930:6946  _owners[tokenId] */\n      dup2\n      dup2\n      mstore\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":6930:6937  _owners */\n      0x02\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":6930:6946  _owners[tokenId] */\n      0x20\n      mstore\n      0x40\n      swap1\n      keccak256\n      sload\n      sub(shl(0xa0, 0x01), 0x01)\n      and\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":13539:13592  require(_exists(tokenId), \"ERC721: invalid token ID\") */\n      tag_158\n      jumpi\n      mload(0x40)\n      shl(0xe5, 0x461bcd)\n      dup2\n      mstore\n        /* \"#utility.yul\":6609:6611   */\n      0x20\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":13539:13592  require(_exists(tokenId), \"ERC721: invalid token ID\") */\n      0x04\n      dup3\n      add\n        /* \"#utility.yul\":6591:6612   */\n      mstore\n        /* \"#utility.yul\":6648:6650   */\n      0x18\n        /* \"#utility.yul\":6628:6646   */\n      0x24\n      dup3\n      add\n        /* \"#utility.yul\":6621:6651   */\n      mstore\n      shl(0x42, 0x115490cdcc8c4e881a5b9d985b1a59081d1bdad95b881251)\n        /* \"#utility.yul\":6667:6685   */\n      0x44\n      dup3\n      add\n        /* \"#utility.yul\":6660:6714   */\n      mstore\n        /* \"#utility.yul\":6731:6749   */\n      0x64\n      add\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":13539:13592  require(_exists(tokenId), \"ERC721: invalid token ID\") */\n      tag_93\n        /* \"#utility.yul\":6407:6755   */\n      jump\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":13539:13592  require(_exists(tokenId), \"ERC721: invalid token ID\") */\n    tag_158:\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":13466:13599  function _requireMinted(uint256 tokenId) internal view virtual {... */\n      pop\n      jump\t// out\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":12768:12939  function _approve(address to, uint256 tokenId) internal virtual {... */\n    tag_104:\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":12842:12866  _tokenApprovals[tokenId] */\n      0x00\n      dup2\n      dup2\n      mstore\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":12842:12857  _tokenApprovals */\n      0x04\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":12842:12866  _tokenApprovals[tokenId] */\n      0x20\n      mstore\n      0x40\n      swap1\n      keccak256\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":12842:12871  _tokenApprovals[tokenId] = to */\n      dup1\n      sload\n      not(sub(shl(0xa0, 0x01), 0x01))\n      and\n      sub(shl(0xa0, 0x01), 0x01)\n      dup5\n      and\n      swap1\n      dup2\n      or\n      swap1\n      swap2\n      sstore\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":12842:12866  _tokenApprovals[tokenId] */\n      dup2\n      swap1\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":12895:12918  ERC721.ownerOf(tokenId) */\n      tag_162\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":12842:12866  _tokenApprovals[tokenId] */\n      dup3\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":12895:12909  ERC721.ownerOf */\n      tag_47\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":12895:12918  ERC721.ownerOf(tokenId) */\n      jump\t// in\n    tag_162:\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":12886:12932  Approval(ERC721.ownerOf(tokenId), to, tokenId) */\n      and\n      0x8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b925\n      mload(0x40)\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      log4\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":12768:12939  function _approve(address to, uint256 tokenId) internal virtual {... */\n      pop\n      pop\n      jump\t// out\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":7540:7801  function _isApprovedOrOwner(address spender, uint256 tokenId) internal view virtual returns (bool) {... */\n    tag_108:\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":7633:7637  bool */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":7649:7662  address owner */\n      dup1\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":7665:7688  ERC721.ownerOf(tokenId) */\n      tag_164\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":7680:7687  tokenId */\n      dup4\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":7665:7679  ERC721.ownerOf */\n      tag_47\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":7665:7688  ERC721.ownerOf(tokenId) */\n      jump\t// in\n    tag_164:\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":7649:7688  address owner = ERC721.ownerOf(tokenId) */\n      swap1\n      pop\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":7717:7722  owner */\n      dup1\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":7706:7722  spender == owner */\n      and\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":7706:7713  spender */\n      dup5\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":7706:7722  spender == owner */\n      and\n      eq\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":7706:7758  spender == owner || isApprovedForAll(owner, spender) */\n      dup1\n      tag_166\n      jumpi\n      pop\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":7726:7758  isApprovedForAll(owner, spender) */\n      tag_166\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":7743:7748  owner */\n      dup2\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":7750:7757  spender */\n      dup6\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":7726:7742  isApprovedForAll */\n      tag_73\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":7726:7758  isApprovedForAll(owner, spender) */\n      jump\t// in\n    tag_166:\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":7706:7793  spender == owner || isApprovedForAll(owner, spender) || getApproved(tokenId) == spender */\n      dup1\n      tag_167\n      jumpi\n      pop\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":7786:7793  spender */\n      dup4\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":7762:7793  getApproved(tokenId) == spender */\n      and\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":7762:7782  getApproved(tokenId) */\n      tag_168\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":7774:7781  tokenId */\n      dup5\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":7762:7773  getApproved */\n      tag_31\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":7762:7782  getApproved(tokenId) */\n      jump\t// in\n    tag_168:\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":7762:7793  getApproved(tokenId) == spender */\n      and\n      eq\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":7706:7793  spender == owner || isApprovedForAll(owner, spender) || getApproved(tokenId) == spender */\n    tag_167:\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":7698:7794  return (spender == owner || isApprovedForAll(owner, spender) || getApproved(tokenId) == spender) */\n      swap5\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":7540:7801  function _isApprovedOrOwner(address spender, uint256 tokenId) internal view virtual returns (bool) {... */\n      swap4\n      pop\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":11423:12656  function _transfer(... */\n    tag_113:\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":11577:11581  from */\n      dup3\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":11550:11581  ERC721.ownerOf(tokenId) == from */\n      and\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":11550:11573  ERC721.ownerOf(tokenId) */\n      tag_170\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":11565:11572  tokenId */\n      dup3\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":11550:11564  ERC721.ownerOf */\n      tag_47\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":11550:11573  ERC721.ownerOf(tokenId) */\n      jump\t// in\n    tag_170:\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":11550:11581  ERC721.ownerOf(tokenId) == from */\n      and\n      eq\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":11542:11623  require(ERC721.ownerOf(tokenId) == from, \"ERC721: transfer from incorrect owner\") */\n      tag_171\n      jumpi\n      mload(0x40)\n      shl(0xe5, 0x461bcd)\n      dup2\n      mstore\n      0x04\n      add\n      tag_93\n      swap1\n      tag_173\n      jump\t// in\n    tag_171:\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":11641:11657  to != address(0) */\n      dup3\n      and\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":11633:11698  require(to != address(0), \"ERC721: transfer to the zero address\") */\n      tag_174\n      jumpi\n      mload(0x40)\n      shl(0xe5, 0x461bcd)\n      dup2\n      mstore\n        /* \"#utility.yul\":8279:8281   */\n      0x20\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":11633:11698  require(to != address(0), \"ERC721: transfer to the zero address\") */\n      0x04\n      dup3\n      add\n        /* \"#utility.yul\":8261:8282   */\n      mstore\n        /* \"#utility.yul\":8318:8320   */\n      0x24\n        /* \"#utility.yul\":8298:8316   */\n      dup1\n      dup3\n      add\n        /* \"#utility.yul\":8291:8321   */\n      mstore\n        /* \"#utility.yul\":8357:8391   */\n      0x4552433732313a207472616e7366657220746f20746865207a65726f20616464\n        /* \"#utility.yul\":8337:8355   */\n      0x44\n      dup3\n      add\n        /* \"#utility.yul\":8330:8392   */\n      mstore\n      shl(0xe0, 0x72657373)\n        /* \"#utility.yul\":8408:8426   */\n      0x64\n      dup3\n      add\n        /* \"#utility.yul\":8401:8435   */\n      mstore\n        /* \"#utility.yul\":8452:8471   */\n      0x84\n      add\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":11633:11698  require(to != address(0), \"ERC721: transfer to the zero address\") */\n      tag_93\n        /* \"#utility.yul\":8077:8477   */\n      jump\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":11633:11698  require(to != address(0), \"ERC721: transfer to the zero address\") */\n    tag_174:\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":11709:11751  _beforeTokenTransfer(from, to, tokenId, 1) */\n      tag_177\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":11730:11734  from */\n      dup4\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":11736:11738  to */\n      dup4\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":11740:11747  tokenId */\n      dup4\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":11749:11750  1 */\n      0x01\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":11709:11729  _beforeTokenTransfer */\n      tag_178\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":11709:11751  _beforeTokenTransfer(from, to, tokenId, 1) */\n      jump\t// in\n    tag_177:\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":11878:11882  from */\n      dup3\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":11851:11882  ERC721.ownerOf(tokenId) == from */\n      and\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":11851:11874  ERC721.ownerOf(tokenId) */\n      tag_179\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":11866:11873  tokenId */\n      dup3\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":11851:11865  ERC721.ownerOf */\n      tag_47\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":11851:11874  ERC721.ownerOf(tokenId) */\n      jump\t// in\n    tag_179:\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":11851:11882  ERC721.ownerOf(tokenId) == from */\n      and\n      eq\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":11843:11924  require(ERC721.ownerOf(tokenId) == from, \"ERC721: transfer from incorrect owner\") */\n      tag_180\n      jumpi\n      mload(0x40)\n      shl(0xe5, 0x461bcd)\n      dup2\n      mstore\n      0x04\n      add\n      tag_93\n      swap1\n      tag_173\n      jump\t// in\n    tag_180:\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":11993:12017  _tokenApprovals[tokenId] */\n      0x00\n      dup2\n      dup2\n      mstore\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":11993:12008  _tokenApprovals */\n      0x04\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":11993:12017  _tokenApprovals[tokenId] */\n      0x20\n      swap1\n      dup2\n      mstore\n      0x40\n      dup1\n      dup4\n      keccak256\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":11986:12017  delete _tokenApprovals[tokenId] */\n      dup1\n      sload\n      not(sub(shl(0xa0, 0x01), 0x01))\n      swap1\n      dup2\n      and\n      swap1\n      swap2\n      sstore\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":12461:12476  _balances[from] */\n      dup8\n      dup2\n      and\n      dup1\n      dup7\n      mstore\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":12461:12470  _balances */\n      0x03\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":12461:12476  _balances[from] */\n      dup6\n      mstore\n      dup4\n      dup7\n      keccak256\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":12461:12481  _balances[from] -= 1 */\n      dup1\n      sload\n      not(0x00)\n      add\n      swap1\n      sstore\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":12495:12508  _balances[to] */\n      swap1\n      dup8\n      and\n      dup1\n      dup7\n      mstore\n      dup4\n      dup7\n      keccak256\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":12495:12513  _balances[to] += 1 */\n      dup1\n      sload\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":11986:12017  delete _tokenApprovals[tokenId] */\n      0x01\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":12495:12513  _balances[to] += 1 */\n      add\n      swap1\n      sstore\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":12533:12549  _owners[tokenId] */\n      dup7\n      dup7\n      mstore\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":12533:12540  _owners */\n      0x02\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":12533:12549  _owners[tokenId] */\n      swap1\n      swap5\n      mstore\n      dup3\n      dup6\n      keccak256\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":12533:12554  _owners[tokenId] = to */\n      dup1\n      sload\n      swap1\n      swap3\n      and\n      dup5\n      or\n      swap1\n      swap2\n      sstore\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":12570:12597  Transfer(from, to, tokenId) */\n      swap1\n      mload\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":12009:12016  tokenId */\n      dup5\n      swap4\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":12570:12597  Transfer(from, to, tokenId) */\n      0xddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef\n      swap2\n      log4\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":3538:3874  {... */\n      pop\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":3468:3874  function approve(address to, uint256 tokenId) public virtual override {... */\n      pop\n      pop\n      jump\t// out\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":13075:13382  function _setApprovalForAll(... */\n    tag_135:\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":13225:13233  operator */\n      dup2\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":13216:13233  owner != operator */\n      and\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":13216:13221  owner */\n      dup4\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":13216:13233  owner != operator */\n      and\n      sub\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":13208:13263  require(owner != operator, \"ERC721: approve to caller\") */\n      tag_186\n      jumpi\n      mload(0x40)\n      shl(0xe5, 0x461bcd)\n      dup2\n      mstore\n        /* \"#utility.yul\":8684:8686   */\n      0x20\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":13208:13263  require(owner != operator, \"ERC721: approve to caller\") */\n      0x04\n      dup3\n      add\n        /* \"#utility.yul\":8666:8687   */\n      mstore\n        /* \"#utility.yul\":8723:8725   */\n      0x19\n        /* \"#utility.yul\":8703:8721   */\n      0x24\n      dup3\n      add\n        /* \"#utility.yul\":8696:8726   */\n      mstore\n        /* \"#utility.yul\":8762:8789   */\n      0x4552433732313a20617070726f766520746f2063616c6c657200000000000000\n        /* \"#utility.yul\":8742:8760   */\n      0x44\n      dup3\n      add\n        /* \"#utility.yul\":8735:8790   */\n      mstore\n        /* \"#utility.yul\":8807:8825   */\n      0x64\n      add\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":13208:13263  require(owner != operator, \"ERC721: approve to caller\") */\n      tag_93\n        /* \"#utility.yul\":8482:8831   */\n      jump\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":13208:13263  require(owner != operator, \"ERC721: approve to caller\") */\n    tag_186:\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":13273:13298  _operatorApprovals[owner] */\n      dup4\n      dup2\n      and\n      0x00\n      dup2\n      dup2\n      mstore\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":13273:13291  _operatorApprovals */\n      0x05\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":13273:13298  _operatorApprovals[owner] */\n      0x20\n      swap1\n      dup2\n      mstore\n      0x40\n      dup1\n      dup4\n      keccak256\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":13273:13308  _operatorApprovals[owner][operator] */\n      swap5\n      dup8\n      and\n      dup1\n      dup5\n      mstore\n      swap5\n      dup3\n      mstore\n      swap2\n      dup3\n      swap1\n      keccak256\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":13273:13319  _operatorApprovals[owner][operator] = approved */\n      dup1\n      sload\n      not(0xff)\n      and\n      dup7\n      iszero\n      iszero\n      swap1\n      dup2\n      or\n      swap1\n      swap2\n      sstore\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":13334:13375  ApprovalForAll(owner, operator, approved) */\n      swap2\n      mload\n        /* \"#utility.yul\":540:581   */\n      swap2\n      dup3\n      mstore\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":13334:13375  ApprovalForAll(owner, operator, approved) */\n      0x17307eab39ab6107e8899845ad3d59bd9653f200f220920489ca2b5937696c31\n      swap2\n        /* \"#utility.yul\":513:531   */\n      add\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":13334:13375  ApprovalForAll(owner, operator, approved) */\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      log3\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":13075:13382  function _setApprovalForAll(... */\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":6424:6729  function _safeTransfer(... */\n    tag_142:\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":6574:6602  _transfer(from, to, tokenId) */\n      tag_191\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":6584:6588  from */\n      dup5\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":6590:6592  to */\n      dup5\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":6594:6601  tokenId */\n      dup5\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":6574:6583  _transfer */\n      tag_113\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":6574:6602  _transfer(from, to, tokenId) */\n      jump\t// in\n    tag_191:\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":6620:6667  _checkOnERC721Received(from, to, tokenId, data) */\n      tag_192\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":6643:6647  from */\n      dup5\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":6649:6651  to */\n      dup5\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":6653:6660  tokenId */\n      dup5\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":6662:6666  data */\n      dup5\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":6620:6642  _checkOnERC721Received */\n      tag_193\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":6620:6667  _checkOnERC721Received(from, to, tokenId, data) */\n      jump\t// in\n    tag_192:\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":6612:6722  require(_checkOnERC721Received(from, to, tokenId, data), \"ERC721: transfer to non ERC721Receiver implementer\") */\n      tag_141\n      jumpi\n      mload(0x40)\n      shl(0xe5, 0x461bcd)\n      dup2\n      mstore\n      0x04\n      add\n      tag_93\n      swap1\n      tag_196\n      jump\t// in\n        /* \"@openzeppelin/contracts/utils/Strings.sol\":415:1111  function toString(uint256 value) internal pure returns (string memory) {... */\n    tag_150:\n        /* \"@openzeppelin/contracts/utils/Strings.sol\":471:484  string memory */\n      0x60\n        /* \"@openzeppelin/contracts/utils/Strings.sol\":520:534  uint256 length */\n      0x00\n        /* \"@openzeppelin/contracts/utils/Strings.sol\":537:554  Math.log10(value) */\n      tag_199\n        /* \"@openzeppelin/contracts/utils/Strings.sol\":548:553  value */\n      dup4\n        /* \"@openzeppelin/contracts/utils/Strings.sol\":537:547  Math.log10 */\n      tag_200\n        /* \"@openzeppelin/contracts/utils/Strings.sol\":537:554  Math.log10(value) */\n      jump\t// in\n    tag_199:\n        /* \"@openzeppelin/contracts/utils/Strings.sol\":557:558  1 */\n      0x01\n        /* \"@openzeppelin/contracts/utils/Strings.sol\":537:558  Math.log10(value) + 1 */\n      add\n        /* \"@openzeppelin/contracts/utils/Strings.sol\":520:558  uint256 length = Math.log10(value) + 1 */\n      swap1\n      pop\n        /* \"@openzeppelin/contracts/utils/Strings.sol\":572:592  string memory buffer */\n      0x00\n        /* \"@openzeppelin/contracts/utils/Strings.sol\":606:612  length */\n      dup2\n        /* \"@openzeppelin/contracts/utils/Strings.sol\":595:613  new string(length) */\n      0xffffffffffffffff\n      dup2\n      gt\n      iszero\n      tag_202\n      jumpi\n      tag_202\n      tag_203\n      jump\t// in\n    tag_202:\n      mload(0x40)\n      swap1\n      dup1\n      dup3\n      mstore\n      dup1\n      0x1f\n      add\n      not(0x1f)\n      and\n      0x20\n      add\n      dup3\n      add\n      0x40\n      mstore\n      dup1\n      iszero\n      tag_204\n      jumpi\n      0x20\n      dup3\n      add\n      dup2\n      dup1\n      calldatasize\n      dup4\n      calldatacopy\n      add\n      swap1\n      pop\n    tag_204:\n      pop\n        /* \"@openzeppelin/contracts/utils/Strings.sol\":572:613  string memory buffer = new string(length) */\n      swap1\n      pop\n        /* \"@openzeppelin/contracts/utils/Strings.sol\":733:761  add(buffer, add(32, length)) */\n      dup2\n      dup2\n      add\n        /* \"@openzeppelin/contracts/utils/Strings.sol\":749:751  32 */\n      0x20\n        /* \"@openzeppelin/contracts/utils/Strings.sol\":733:761  add(buffer, add(32, length)) */\n      add\n        /* \"@openzeppelin/contracts/utils/Strings.sol\":788:1068  while (true) {... */\n    tag_205:\n      not(0x00)\n        /* \"@openzeppelin/contracts/utils/Strings.sol\":819:824  ptr-- */\n      add\n      shl(0x81, 0x181899199a1a9b1b9c1cb0b131b232b3)\n        /* \"@openzeppelin/contracts/utils/Strings.sol\":953:955  10 */\n      0x0a\n        /* \"@openzeppelin/contracts/utils/Strings.sol\":942:956  mod(value, 10) */\n      dup7\n      mod\n        /* \"@openzeppelin/contracts/utils/Strings.sol\":937:967  byte(mod(value, 10), _SYMBOLS) */\n      byte\n        /* \"@openzeppelin/contracts/utils/Strings.sol\":819:824  ptr-- */\n      dup2\n        /* \"@openzeppelin/contracts/utils/Strings.sol\":924:968  mstore8(ptr, byte(mod(value, 10), _SYMBOLS)) */\n      mstore8\n        /* \"@openzeppelin/contracts/utils/Strings.sol\":1012:1014  10 */\n      0x0a\n        /* \"@openzeppelin/contracts/utils/Strings.sol\":1003:1014  value /= 10 */\n      dup6\n      div\n      swap5\n      pop\n        /* \"@openzeppelin/contracts/utils/Strings.sol\":1032:1053  if (value == 0) break */\n      dup5\n        /* \"@openzeppelin/contracts/utils/Strings.sol\":788:1068  while (true) {... */\n      tag_205\n        /* \"@openzeppelin/contracts/utils/Strings.sol\":1032:1053  if (value == 0) break */\n      jumpi\n      pop\n        /* \"@openzeppelin/contracts/utils/Strings.sol\":1088:1094  buffer */\n      swap4\n        /* \"@openzeppelin/contracts/utils/Strings.sol\":415:1111  function toString(uint256 value) internal pure returns (string memory) {... */\n      swap3\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":15698:16094  function _beforeTokenTransfer(... */\n    tag_178:\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":15882:15883  1 */\n      0x01\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":15870:15879  batchSize */\n      dup2\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":15870:15883  batchSize > 1 */\n      gt\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":15866:16088  if (batchSize > 1) {... */\n      iszero\n      tag_141\n      jumpi\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":15903:15921  from != address(0) */\n      dup5\n      and\n      iszero\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":15899:15984  if (from != address(0)) {... */\n      tag_215\n      jumpi\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":15941:15956  _balances[from] */\n      dup5\n      and\n      0x00\n      swap1\n      dup2\n      mstore\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":15941:15950  _balances */\n      0x03\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":15941:15956  _balances[from] */\n      0x20\n      mstore\n      0x40\n      dup2\n      keccak256\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":15941:15969  _balances[from] -= batchSize */\n      dup1\n      sload\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":15960:15969  batchSize */\n      dup4\n      swap3\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":15941:15956  _balances[from] */\n      swap1\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":15941:15969  _balances[from] -= batchSize */\n      tag_216\n      swap1\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":15960:15969  batchSize */\n      dup5\n      swap1\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":15941:15969  _balances[from] -= batchSize */\n      tag_217\n      jump\t// in\n    tag_216:\n      swap1\n      swap2\n      sstore\n      pop\n      pop\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":15899:15984  if (from != address(0)) {... */\n    tag_215:\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":16001:16017  to != address(0) */\n      dup4\n      and\n      iszero\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":15997:16078  if (to != address(0)) {... */\n      tag_141\n      jumpi\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":16037:16050  _balances[to] */\n      dup4\n      and\n      0x00\n      swap1\n      dup2\n      mstore\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":16037:16046  _balances */\n      0x03\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":16037:16050  _balances[to] */\n      0x20\n      mstore\n      0x40\n      dup2\n      keccak256\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":16037:16063  _balances[to] += batchSize */\n      dup1\n      sload\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":16054:16063  batchSize */\n      dup4\n      swap3\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":16037:16050  _balances[to] */\n      swap1\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":16037:16063  _balances[to] += batchSize */\n      tag_219\n      swap1\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":16054:16063  batchSize */\n      dup5\n      swap1\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":16037:16063  _balances[to] += batchSize */\n      tag_220\n      jump\t// in\n    tag_219:\n      swap1\n      swap2\n      sstore\n      pop\n      pop\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":15698:16094  function _beforeTokenTransfer(... */\n      pop\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":14151:14982  function _checkOnERC721Received(... */\n    tag_193:\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":14300:14304  bool */\n      0x00\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":14320:14333  to.isContract */\n      dup5\n      and\n        /* \"@openzeppelin/contracts/utils/Address.sol\":1465:1484  account.code.length */\n      extcodesize\n        /* \"@openzeppelin/contracts/utils/Address.sol\":1465:1488  account.code.length > 0 */\n      iszero\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":14316:14976  if (to.isContract()) {... */\n      tag_225\n      jumpi\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":14355:14426  IERC721Receiver(to).onERC721Received(_msgSender(), from, tokenId, data) */\n      mload(0x40)\n      shl(0xe1, 0x0a85bd01)\n      dup2\n      mstore\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":14355:14391  IERC721Receiver(to).onERC721Received */\n      dup6\n      and\n      swap1\n      0x150b7a02\n      swap1\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":14355:14426  IERC721Receiver(to).onERC721Received(_msgSender(), from, tokenId, data) */\n      tag_227\n      swap1\n        /* \"@openzeppelin/contracts/utils/Context.sol\":719:729  msg.sender */\n      caller\n      swap1\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":14406:14410  from */\n      dup10\n      swap1\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":14412:14419  tokenId */\n      dup9\n      swap1\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":14421:14425  data */\n      dup9\n      swap1\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":14355:14426  IERC721Receiver(to).onERC721Received(_msgSender(), from, tokenId, data) */\n      0x04\n      add\n      tag_228\n      jump\t// in\n    tag_227:\n      0x20\n      mload(0x40)\n      dup1\n      dup4\n      sub\n      dup2\n      0x00\n      dup8\n      gas\n      call\n      swap3\n      pop\n      pop\n      pop\n      dup1\n      iszero\n      tag_229\n      jumpi\n      pop\n      0x40\n      dup1\n      mload\n      0x1f\n      returndatasize\n      swap1\n      dup2\n      add\n      not(0x1f)\n      and\n      dup3\n      add\n      swap1\n      swap3\n      mstore\n      tag_230\n      swap2\n      dup2\n      add\n      swap1\n      tag_231\n      jump\t// in\n    tag_230:\n      0x01\n    tag_229:\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":14351:14924  try IERC721Receiver(to).onERC721Received(_msgSender(), from, tokenId, data) returns (bytes4 retval) {... */\n      tag_232\n      jumpi\n      returndatasize\n      dup1\n      dup1\n      iszero\n      tag_237\n      jumpi\n      mload(0x40)\n      swap2\n      pop\n      and(add(returndatasize, 0x3f), not(0x1f))\n      dup3\n      add\n      0x40\n      mstore\n      returndatasize\n      dup3\n      mstore\n      returndatasize\n      0x00\n      0x20\n      dup5\n      add\n      returndatacopy\n      jump(tag_236)\n    tag_237:\n      0x60\n      swap2\n      pop\n    tag_236:\n      pop\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":14593:14599  reason */\n      dup1\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":14593:14606  reason.length */\n      mload\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":14610:14611  0 */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":14593:14611  reason.length == 0 */\n      sub\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":14589:14910  if (reason.length == 0) {... */\n      tag_238\n      jumpi\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":14635:14695  revert(\"ERC721: transfer to non ERC721Receiver implementer\") */\n      mload(0x40)\n      shl(0xe5, 0x461bcd)\n      dup2\n      mstore\n      0x04\n      add\n      tag_93\n      swap1\n      tag_196\n      jump\t// in\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":14589:14910  if (reason.length == 0) {... */\n    tag_238:\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":14862:14868  reason */\n      dup1\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":14856:14869  mload(reason) */\n      mload\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":14847:14853  reason */\n      dup2\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":14843:14845  32 */\n      0x20\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":14839:14854  add(32, reason) */\n      add\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":14832:14870  revert(add(32, reason), mload(reason)) */\n      revert\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":14351:14924  try IERC721Receiver(to).onERC721Received(_msgSender(), from, tokenId, data) returns (bytes4 retval) {... */\n    tag_232:\n      not(sub(shl(0xe0, 0x01), 0x01))\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":14476:14527  retval == IERC721Receiver.onERC721Received.selector */\n      and\n      shl(0xe1, 0x0a85bd01)\n      eq\n      swap1\n      pop\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":14469:14527  return retval == IERC721Receiver.onERC721Received.selector */\n      jump(tag_167)\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":14316:14976  if (to.isContract()) {... */\n    tag_225:\n      pop\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":14961:14965  true */\n      0x01\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":14151:14982  function _checkOnERC721Received(... */\n      swap5\n      swap4\n      pop\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"@openzeppelin/contracts/utils/math/Math.sol\":9889:10779  function log10(uint256 value) internal pure returns (uint256) {... */\n    tag_200:\n        /* \"@openzeppelin/contracts/utils/math/Math.sol\":9942:9949  uint256 */\n      0x00\n      dup1\n      shl(0x40, 0x184f03e93ff9f4daa797ed6e38ed64bf6a1f01)\n        /* \"@openzeppelin/contracts/utils/math/Math.sol\":10017:10032  value >= 10**64 */\n      dup4\n      lt\n        /* \"@openzeppelin/contracts/utils/math/Math.sol\":10013:10112  if (value >= 10**64) {... */\n      tag_244\n      jumpi\n      shl(0x40, 0x184f03e93ff9f4daa797ed6e38ed64bf6a1f01)\n        /* \"@openzeppelin/contracts/utils/math/Math.sol\":10052:10067  value /= 10**64 */\n      dup4\n      div\n      swap3\n      pop\n        /* \"@openzeppelin/contracts/utils/math/Math.sol\":10095:10097  64 */\n      0x40\n        /* \"@openzeppelin/contracts/utils/math/Math.sol\":10085:10097  result += 64 */\n      add\n        /* \"@openzeppelin/contracts/utils/math/Math.sol\":10013:10112  if (value >= 10**64) {... */\n    tag_244:\n        /* \"@openzeppelin/contracts/utils/math/Math.sol\":10138:10144  10**32 */\n      0x04ee2d6d415b85acef8100000000\n        /* \"@openzeppelin/contracts/utils/math/Math.sol\":10129:10134  value */\n      dup4\n        /* \"@openzeppelin/contracts/utils/math/Math.sol\":10129:10144  value >= 10**32 */\n      lt\n        /* \"@openzeppelin/contracts/utils/math/Math.sol\":10125:10224  if (value >= 10**32) {... */\n      tag_247\n      jumpi\n        /* \"@openzeppelin/contracts/utils/math/Math.sol\":10173:10179  10**32 */\n      0x04ee2d6d415b85acef8100000000\n        /* \"@openzeppelin/contracts/utils/math/Math.sol\":10164:10179  value /= 10**32 */\n      dup4\n      div\n      swap3\n      pop\n        /* \"@openzeppelin/contracts/utils/math/Math.sol\":10207:10209  32 */\n      0x20\n        /* \"@openzeppelin/contracts/utils/math/Math.sol\":10197:10209  result += 32 */\n      add\n        /* \"@openzeppelin/contracts/utils/math/Math.sol\":10125:10224  if (value >= 10**32) {... */\n    tag_247:\n        /* \"@openzeppelin/contracts/utils/math/Math.sol\":10250:10256  10**16 */\n      0x2386f26fc10000\n        /* \"@openzeppelin/contracts/utils/math/Math.sol\":10241:10246  value */\n      dup4\n        /* \"@openzeppelin/contracts/utils/math/Math.sol\":10241:10256  value >= 10**16 */\n      lt\n        /* \"@openzeppelin/contracts/utils/math/Math.sol\":10237:10336  if (value >= 10**16) {... */\n      tag_250\n      jumpi\n        /* \"@openzeppelin/contracts/utils/math/Math.sol\":10285:10291  10**16 */\n      0x2386f26fc10000\n        /* \"@openzeppelin/contracts/utils/math/Math.sol\":10276:10291  value /= 10**16 */\n      dup4\n      div\n      swap3\n      pop\n        /* \"@openzeppelin/contracts/utils/math/Math.sol\":10319:10321  16 */\n      0x10\n        /* \"@openzeppelin/contracts/utils/math/Math.sol\":10309:10321  result += 16 */\n      add\n        /* \"@openzeppelin/contracts/utils/math/Math.sol\":10237:10336  if (value >= 10**16) {... */\n    tag_250:\n        /* \"@openzeppelin/contracts/utils/math/Math.sol\":10362:10367  10**8 */\n      0x05f5e100\n        /* \"@openzeppelin/contracts/utils/math/Math.sol\":10353:10358  value */\n      dup4\n        /* \"@openzeppelin/contracts/utils/math/Math.sol\":10353:10367  value >= 10**8 */\n      lt\n        /* \"@openzeppelin/contracts/utils/math/Math.sol\":10349:10445  if (value >= 10**8) {... */\n      tag_253\n      jumpi\n        /* \"@openzeppelin/contracts/utils/math/Math.sol\":10396:10401  10**8 */\n      0x05f5e100\n        /* \"@openzeppelin/contracts/utils/math/Math.sol\":10387:10401  value /= 10**8 */\n      dup4\n      div\n      swap3\n      pop\n        /* \"@openzeppelin/contracts/utils/math/Math.sol\":10429:10430  8 */\n      0x08\n        /* \"@openzeppelin/contracts/utils/math/Math.sol\":10419:10430  result += 8 */\n      add\n        /* \"@openzeppelin/contracts/utils/math/Math.sol\":10349:10445  if (value >= 10**8) {... */\n    tag_253:\n        /* \"@openzeppelin/contracts/utils/math/Math.sol\":10471:10476  10**4 */\n      0x2710\n        /* \"@openzeppelin/contracts/utils/math/Math.sol\":10462:10467  value */\n      dup4\n        /* \"@openzeppelin/contracts/utils/math/Math.sol\":10462:10476  value >= 10**4 */\n      lt\n        /* \"@openzeppelin/contracts/utils/math/Math.sol\":10458:10554  if (value >= 10**4) {... */\n      tag_256\n      jumpi\n        /* \"@openzeppelin/contracts/utils/math/Math.sol\":10505:10510  10**4 */\n      0x2710\n        /* \"@openzeppelin/contracts/utils/math/Math.sol\":10496:10510  value /= 10**4 */\n      dup4\n      div\n      swap3\n      pop\n        /* \"@openzeppelin/contracts/utils/math/Math.sol\":10538:10539  4 */\n      0x04\n        /* \"@openzeppelin/contracts/utils/math/Math.sol\":10528:10539  result += 4 */\n      add\n        /* \"@openzeppelin/contracts/utils/math/Math.sol\":10458:10554  if (value >= 10**4) {... */\n    tag_256:\n        /* \"@openzeppelin/contracts/utils/math/Math.sol\":10580:10585  10**2 */\n      0x64\n        /* \"@openzeppelin/contracts/utils/math/Math.sol\":10571:10576  value */\n      dup4\n        /* \"@openzeppelin/contracts/utils/math/Math.sol\":10571:10585  value >= 10**2 */\n      lt\n        /* \"@openzeppelin/contracts/utils/math/Math.sol\":10567:10663  if (value >= 10**2) {... */\n      tag_259\n      jumpi\n        /* \"@openzeppelin/contracts/utils/math/Math.sol\":10614:10619  10**2 */\n      0x64\n        /* \"@openzeppelin/contracts/utils/math/Math.sol\":10605:10619  value /= 10**2 */\n      dup4\n      div\n      swap3\n      pop\n        /* \"@openzeppelin/contracts/utils/math/Math.sol\":10647:10648  2 */\n      0x02\n        /* \"@openzeppelin/contracts/utils/math/Math.sol\":10637:10648  result += 2 */\n      add\n        /* \"@openzeppelin/contracts/utils/math/Math.sol\":10567:10663  if (value >= 10**2) {... */\n    tag_259:\n        /* \"@openzeppelin/contracts/utils/math/Math.sol\":10689:10694  10**1 */\n      0x0a\n        /* \"@openzeppelin/contracts/utils/math/Math.sol\":10680:10685  value */\n      dup4\n        /* \"@openzeppelin/contracts/utils/math/Math.sol\":10680:10694  value >= 10**1 */\n      lt\n        /* \"@openzeppelin/contracts/utils/math/Math.sol\":10676:10740  if (value >= 10**1) {... */\n      tag_78\n      jumpi\n        /* \"@openzeppelin/contracts/utils/math/Math.sol\":10724:10725  1 */\n      0x01\n        /* \"@openzeppelin/contracts/utils/math/Math.sol\":10714:10725  result += 1 */\n      add\n        /* \"@openzeppelin/contracts/utils/math/Math.sol\":10766:10772  result */\n      swap3\n        /* \"@openzeppelin/contracts/utils/math/Math.sol\":9889:10779  function log10(uint256 value) internal pure returns (uint256) {... */\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":14:145   */\n    tag_264:\n      not(sub(shl(0xe0, 0x01), 0x01))\n        /* \"#utility.yul\":88:120   */\n      dup2\n      and\n        /* \"#utility.yul\":78:121   */\n      dup2\n      eq\n        /* \"#utility.yul\":68:139   */\n      tag_158\n      jumpi\n        /* \"#utility.yul\":135:136   */\n      0x00\n        /* \"#utility.yul\":132:133   */\n      dup1\n        /* \"#utility.yul\":125:137   */\n      revert\n        /* \"#utility.yul\":150:395   */\n    tag_20:\n        /* \"#utility.yul\":208:214   */\n      0x00\n        /* \"#utility.yul\":261:263   */\n      0x20\n        /* \"#utility.yul\":249:258   */\n      dup3\n        /* \"#utility.yul\":240:247   */\n      dup5\n        /* \"#utility.yul\":236:259   */\n      sub\n        /* \"#utility.yul\":232:264   */\n      slt\n        /* \"#utility.yul\":229:281   */\n      iszero\n      tag_273\n      jumpi\n        /* \"#utility.yul\":277:278   */\n      0x00\n        /* \"#utility.yul\":274:275   */\n      dup1\n        /* \"#utility.yul\":267:279   */\n      revert\n        /* \"#utility.yul\":229:281   */\n    tag_273:\n        /* \"#utility.yul\":316:325   */\n      dup2\n        /* \"#utility.yul\":303:326   */\n      calldataload\n        /* \"#utility.yul\":335:365   */\n      tag_148\n        /* \"#utility.yul\":359:364   */\n      dup2\n        /* \"#utility.yul\":335:365   */\n      tag_264\n      jump\t// in\n        /* \"#utility.yul\":592:842   */\n    tag_265:\n        /* \"#utility.yul\":677:678   */\n      0x00\n        /* \"#utility.yul\":687:800   */\n    tag_277:\n        /* \"#utility.yul\":701:707   */\n      dup4\n        /* \"#utility.yul\":698:699   */\n      dup2\n        /* \"#utility.yul\":695:708   */\n      lt\n        /* \"#utility.yul\":687:800   */\n      iszero\n      tag_279\n      jumpi\n        /* \"#utility.yul\":777:788   */\n      dup2\n      dup2\n      add\n        /* \"#utility.yul\":771:789   */\n      mload\n        /* \"#utility.yul\":758:769   */\n      dup4\n      dup3\n      add\n        /* \"#utility.yul\":751:790   */\n      mstore\n        /* \"#utility.yul\":723:725   */\n      0x20\n        /* \"#utility.yul\":716:726   */\n      add\n        /* \"#utility.yul\":687:800   */\n      jump(tag_277)\n    tag_279:\n      pop\n      pop\n        /* \"#utility.yul\":834:835   */\n      0x00\n        /* \"#utility.yul\":816:832   */\n      swap2\n      add\n        /* \"#utility.yul\":809:836   */\n      mstore\n        /* \"#utility.yul\":592:842   */\n      jump\t// out\n        /* \"#utility.yul\":847:1118   */\n    tag_266:\n        /* \"#utility.yul\":889:892   */\n      0x00\n        /* \"#utility.yul\":927:932   */\n      dup2\n        /* \"#utility.yul\":921:933   */\n      mload\n        /* \"#utility.yul\":954:960   */\n      dup1\n        /* \"#utility.yul\":949:952   */\n      dup5\n        /* \"#utility.yul\":942:961   */\n      mstore\n        /* \"#utility.yul\":970:1046   */\n      tag_281\n        /* \"#utility.yul\":1039:1045   */\n      dup2\n        /* \"#utility.yul\":1032:1036   */\n      0x20\n        /* \"#utility.yul\":1027:1030   */\n      dup7\n        /* \"#utility.yul\":1023:1037   */\n      add\n        /* \"#utility.yul\":1016:1020   */\n      0x20\n        /* \"#utility.yul\":1009:1014   */\n      dup7\n        /* \"#utility.yul\":1005:1021   */\n      add\n        /* \"#utility.yul\":970:1046   */\n      tag_265\n      jump\t// in\n    tag_281:\n        /* \"#utility.yul\":1100:1102   */\n      0x1f\n        /* \"#utility.yul\":1079:1094   */\n      add\n      not(0x1f)\n        /* \"#utility.yul\":1075:1104   */\n      and\n        /* \"#utility.yul\":1066:1105   */\n      swap3\n      swap1\n      swap3\n      add\n        /* \"#utility.yul\":1107:1111   */\n      0x20\n        /* \"#utility.yul\":1062:1112   */\n      add\n      swap3\n        /* \"#utility.yul\":847:1118   */\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":1123:1343   */\n    tag_27:\n        /* \"#utility.yul\":1272:1274   */\n      0x20\n        /* \"#utility.yul\":1261:1270   */\n      dup2\n        /* \"#utility.yul\":1254:1275   */\n      mstore\n        /* \"#utility.yul\":1235:1239   */\n      0x00\n        /* \"#utility.yul\":1292:1337   */\n      tag_148\n        /* \"#utility.yul\":1333:1335   */\n      0x20\n        /* \"#utility.yul\":1322:1331   */\n      dup4\n        /* \"#utility.yul\":1318:1336   */\n      add\n        /* \"#utility.yul\":1310:1316   */\n      dup5\n        /* \"#utility.yul\":1292:1337   */\n      tag_266\n      jump\t// in\n        /* \"#utility.yul\":1348:1528   */\n    tag_30:\n        /* \"#utility.yul\":1407:1413   */\n      0x00\n        /* \"#utility.yul\":1460:1462   */\n      0x20\n        /* \"#utility.yul\":1448:1457   */\n      dup3\n        /* \"#utility.yul\":1439:1446   */\n      dup5\n        /* \"#utility.yul\":1435:1458   */\n      sub\n        /* \"#utility.yul\":1431:1463   */\n      slt\n        /* \"#utility.yul\":1428:1480   */\n      iszero\n      tag_285\n      jumpi\n        /* \"#utility.yul\":1476:1477   */\n      0x00\n        /* \"#utility.yul\":1473:1474   */\n      dup1\n        /* \"#utility.yul\":1466:1478   */\n      revert\n        /* \"#utility.yul\":1428:1480   */\n    tag_285:\n      pop\n        /* \"#utility.yul\":1499:1522   */\n      calldataload\n      swap2\n        /* \"#utility.yul\":1348:1528   */\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":1741:1914   */\n    tag_267:\n        /* \"#utility.yul\":1809:1829   */\n      dup1\n      calldataload\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"#utility.yul\":1858:1889   */\n      dup2\n      and\n        /* \"#utility.yul\":1848:1890   */\n      dup2\n      eq\n        /* \"#utility.yul\":1838:1908   */\n      tag_288\n      jumpi\n        /* \"#utility.yul\":1904:1905   */\n      0x00\n        /* \"#utility.yul\":1901:1902   */\n      dup1\n        /* \"#utility.yul\":1894:1906   */\n      revert\n        /* \"#utility.yul\":1838:1908   */\n    tag_288:\n        /* \"#utility.yul\":1741:1914   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":1919:2173   */\n    tag_36:\n        /* \"#utility.yul\":1987:1993   */\n      0x00\n        /* \"#utility.yul\":1995:2001   */\n      dup1\n        /* \"#utility.yul\":2048:2050   */\n      0x40\n        /* \"#utility.yul\":2036:2045   */\n      dup4\n        /* \"#utility.yul\":2027:2034   */\n      dup6\n        /* \"#utility.yul\":2023:2046   */\n      sub\n        /* \"#utility.yul\":2019:2051   */\n      slt\n        /* \"#utility.yul\":2016:2068   */\n      iszero\n      tag_290\n      jumpi\n        /* \"#utility.yul\":2064:2065   */\n      0x00\n        /* \"#utility.yul\":2061:2062   */\n      dup1\n        /* \"#utility.yul\":2054:2066   */\n      revert\n        /* \"#utility.yul\":2016:2068   */\n    tag_290:\n        /* \"#utility.yul\":2087:2116   */\n      tag_291\n        /* \"#utility.yul\":2106:2115   */\n      dup4\n        /* \"#utility.yul\":2087:2116   */\n      tag_267\n      jump\t// in\n    tag_291:\n        /* \"#utility.yul\":2077:2116   */\n      swap5\n        /* \"#utility.yul\":2163:2165   */\n      0x20\n        /* \"#utility.yul\":2148:2166   */\n      swap4\n      swap1\n      swap4\n      add\n        /* \"#utility.yul\":2135:2167   */\n      calldataload\n      swap4\n      pop\n      pop\n      pop\n        /* \"#utility.yul\":1919:2173   */\n      jump\t// out\n        /* \"#utility.yul\":2178:2506   */\n    tag_40:\n        /* \"#utility.yul\":2255:2261   */\n      0x00\n        /* \"#utility.yul\":2263:2269   */\n      dup1\n        /* \"#utility.yul\":2271:2277   */\n      0x00\n        /* \"#utility.yul\":2324:2326   */\n      0x60\n        /* \"#utility.yul\":2312:2321   */\n      dup5\n        /* \"#utility.yul\":2303:2310   */\n      dup7\n        /* \"#utility.yul\":2299:2322   */\n      sub\n        /* \"#utility.yul\":2295:2327   */\n      slt\n        /* \"#utility.yul\":2292:2344   */\n      iszero\n      tag_293\n      jumpi\n        /* \"#utility.yul\":2340:2341   */\n      0x00\n        /* \"#utility.yul\":2337:2338   */\n      dup1\n        /* \"#utility.yul\":2330:2342   */\n      revert\n        /* \"#utility.yul\":2292:2344   */\n    tag_293:\n        /* \"#utility.yul\":2363:2392   */\n      tag_294\n        /* \"#utility.yul\":2382:2391   */\n      dup5\n        /* \"#utility.yul\":2363:2392   */\n      tag_267\n      jump\t// in\n    tag_294:\n        /* \"#utility.yul\":2353:2392   */\n      swap3\n      pop\n        /* \"#utility.yul\":2411:2449   */\n      tag_295\n        /* \"#utility.yul\":2445:2447   */\n      0x20\n        /* \"#utility.yul\":2434:2443   */\n      dup6\n        /* \"#utility.yul\":2430:2448   */\n      add\n        /* \"#utility.yul\":2411:2449   */\n      tag_267\n      jump\t// in\n    tag_295:\n        /* \"#utility.yul\":2401:2449   */\n      swap2\n      pop\n        /* \"#utility.yul\":2496:2498   */\n      0x40\n        /* \"#utility.yul\":2485:2494   */\n      dup5\n        /* \"#utility.yul\":2481:2499   */\n      add\n        /* \"#utility.yul\":2468:2500   */\n      calldataload\n        /* \"#utility.yul\":2458:2500   */\n      swap1\n      pop\n        /* \"#utility.yul\":2178:2506   */\n      swap3\n      pop\n      swap3\n      pop\n      swap3\n      jump\t// out\n        /* \"#utility.yul\":2511:2697   */\n    tag_51:\n        /* \"#utility.yul\":2570:2576   */\n      0x00\n        /* \"#utility.yul\":2623:2625   */\n      0x20\n        /* \"#utility.yul\":2611:2620   */\n      dup3\n        /* \"#utility.yul\":2602:2609   */\n      dup5\n        /* \"#utility.yul\":2598:2621   */\n      sub\n        /* \"#utility.yul\":2594:2626   */\n      slt\n        /* \"#utility.yul\":2591:2643   */\n      iszero\n      tag_297\n      jumpi\n        /* \"#utility.yul\":2639:2640   */\n      0x00\n        /* \"#utility.yul\":2636:2637   */\n      dup1\n        /* \"#utility.yul\":2629:2641   */\n      revert\n        /* \"#utility.yul\":2591:2643   */\n    tag_297:\n        /* \"#utility.yul\":2662:2691   */\n      tag_148\n        /* \"#utility.yul\":2681:2690   */\n      dup3\n        /* \"#utility.yul\":2662:2691   */\n      tag_267\n      jump\t// in\n        /* \"#utility.yul\":2884:3231   */\n    tag_60:\n        /* \"#utility.yul\":2949:2955   */\n      0x00\n        /* \"#utility.yul\":2957:2963   */\n      dup1\n        /* \"#utility.yul\":3010:3012   */\n      0x40\n        /* \"#utility.yul\":2998:3007   */\n      dup4\n        /* \"#utility.yul\":2989:2996   */\n      dup6\n        /* \"#utility.yul\":2985:3008   */\n      sub\n        /* \"#utility.yul\":2981:3013   */\n      slt\n        /* \"#utility.yul\":2978:3030   */\n      iszero\n      tag_301\n      jumpi\n        /* \"#utility.yul\":3026:3027   */\n      0x00\n        /* \"#utility.yul\":3023:3024   */\n      dup1\n        /* \"#utility.yul\":3016:3028   */\n      revert\n        /* \"#utility.yul\":2978:3030   */\n    tag_301:\n        /* \"#utility.yul\":3049:3078   */\n      tag_302\n        /* \"#utility.yul\":3068:3077   */\n      dup4\n        /* \"#utility.yul\":3049:3078   */\n      tag_267\n      jump\t// in\n    tag_302:\n        /* \"#utility.yul\":3039:3078   */\n      swap2\n      pop\n        /* \"#utility.yul\":3128:3130   */\n      0x20\n        /* \"#utility.yul\":3117:3126   */\n      dup4\n        /* \"#utility.yul\":3113:3131   */\n      add\n        /* \"#utility.yul\":3100:3132   */\n      calldataload\n        /* \"#utility.yul\":3175:3180   */\n      dup1\n        /* \"#utility.yul\":3168:3181   */\n      iszero\n        /* \"#utility.yul\":3161:3182   */\n      iszero\n        /* \"#utility.yul\":3154:3159   */\n      dup2\n        /* \"#utility.yul\":3151:3183   */\n      eq\n        /* \"#utility.yul\":3141:3201   */\n      tag_303\n      jumpi\n        /* \"#utility.yul\":3197:3198   */\n      0x00\n        /* \"#utility.yul\":3194:3195   */\n      dup1\n        /* \"#utility.yul\":3187:3199   */\n      revert\n        /* \"#utility.yul\":3141:3201   */\n    tag_303:\n        /* \"#utility.yul\":3220:3225   */\n      dup1\n        /* \"#utility.yul\":3210:3225   */\n      swap2\n      pop\n      pop\n        /* \"#utility.yul\":2884:3231   */\n      swap3\n      pop\n      swap3\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":3236:3363   */\n    tag_203:\n        /* \"#utility.yul\":3297:3307   */\n      0x4e487b71\n        /* \"#utility.yul\":3292:3295   */\n      0xe0\n        /* \"#utility.yul\":3288:3308   */\n      shl\n        /* \"#utility.yul\":3285:3286   */\n      0x00\n        /* \"#utility.yul\":3278:3309   */\n      mstore\n        /* \"#utility.yul\":3328:3332   */\n      0x41\n        /* \"#utility.yul\":3325:3326   */\n      0x04\n        /* \"#utility.yul\":3318:3333   */\n      mstore\n        /* \"#utility.yul\":3352:3356   */\n      0x24\n        /* \"#utility.yul\":3349:3350   */\n      0x00\n        /* \"#utility.yul\":3342:3357   */\n      revert\n        /* \"#utility.yul\":3368:4506   */\n    tag_64:\n        /* \"#utility.yul\":3463:3469   */\n      0x00\n        /* \"#utility.yul\":3471:3477   */\n      dup1\n        /* \"#utility.yul\":3479:3485   */\n      0x00\n        /* \"#utility.yul\":3487:3493   */\n      dup1\n        /* \"#utility.yul\":3540:3543   */\n      0x80\n        /* \"#utility.yul\":3528:3537   */\n      dup6\n        /* \"#utility.yul\":3519:3526   */\n      dup8\n        /* \"#utility.yul\":3515:3538   */\n      sub\n        /* \"#utility.yul\":3511:3544   */\n      slt\n        /* \"#utility.yul\":3508:3561   */\n      iszero\n      tag_306\n      jumpi\n        /* \"#utility.yul\":3557:3558   */\n      0x00\n        /* \"#utility.yul\":3554:3555   */\n      dup1\n        /* \"#utility.yul\":3547:3559   */\n      revert\n        /* \"#utility.yul\":3508:3561   */\n    tag_306:\n        /* \"#utility.yul\":3580:3609   */\n      tag_307\n        /* \"#utility.yul\":3599:3608   */\n      dup6\n        /* \"#utility.yul\":3580:3609   */\n      tag_267\n      jump\t// in\n    tag_307:\n        /* \"#utility.yul\":3570:3609   */\n      swap4\n      pop\n        /* \"#utility.yul\":3628:3666   */\n      tag_308\n        /* \"#utility.yul\":3662:3664   */\n      0x20\n        /* \"#utility.yul\":3651:3660   */\n      dup7\n        /* \"#utility.yul\":3647:3665   */\n      add\n        /* \"#utility.yul\":3628:3666   */\n      tag_267\n      jump\t// in\n    tag_308:\n        /* \"#utility.yul\":3618:3666   */\n      swap3\n      pop\n        /* \"#utility.yul\":3713:3715   */\n      0x40\n        /* \"#utility.yul\":3702:3711   */\n      dup6\n        /* \"#utility.yul\":3698:3716   */\n      add\n        /* \"#utility.yul\":3685:3717   */\n      calldataload\n        /* \"#utility.yul\":3675:3717   */\n      swap2\n      pop\n        /* \"#utility.yul\":3768:3770   */\n      0x60\n        /* \"#utility.yul\":3757:3766   */\n      dup6\n        /* \"#utility.yul\":3753:3771   */\n      add\n        /* \"#utility.yul\":3740:3772   */\n      calldataload\n        /* \"#utility.yul\":3791:3809   */\n      0xffffffffffffffff\n        /* \"#utility.yul\":3832:3834   */\n      dup1\n        /* \"#utility.yul\":3824:3830   */\n      dup3\n        /* \"#utility.yul\":3821:3835   */\n      gt\n        /* \"#utility.yul\":3818:3852   */\n      iszero\n      tag_309\n      jumpi\n        /* \"#utility.yul\":3848:3849   */\n      0x00\n        /* \"#utility.yul\":3845:3846   */\n      dup1\n        /* \"#utility.yul\":3838:3850   */\n      revert\n        /* \"#utility.yul\":3818:3852   */\n    tag_309:\n        /* \"#utility.yul\":3886:3892   */\n      dup2\n        /* \"#utility.yul\":3875:3884   */\n      dup8\n        /* \"#utility.yul\":3871:3893   */\n      add\n        /* \"#utility.yul\":3861:3893   */\n      swap2\n      pop\n        /* \"#utility.yul\":3931:3938   */\n      dup8\n        /* \"#utility.yul\":3924:3928   */\n      0x1f\n        /* \"#utility.yul\":3920:3922   */\n      dup4\n        /* \"#utility.yul\":3916:3929   */\n      add\n        /* \"#utility.yul\":3912:3939   */\n      slt\n        /* \"#utility.yul\":3902:3957   */\n      tag_310\n      jumpi\n        /* \"#utility.yul\":3953:3954   */\n      0x00\n        /* \"#utility.yul\":3950:3951   */\n      dup1\n        /* \"#utility.yul\":3943:3955   */\n      revert\n        /* \"#utility.yul\":3902:3957   */\n    tag_310:\n        /* \"#utility.yul\":3989:3991   */\n      dup2\n        /* \"#utility.yul\":3976:3992   */\n      calldataload\n        /* \"#utility.yul\":4011:4013   */\n      dup2\n        /* \"#utility.yul\":4007:4009   */\n      dup2\n        /* \"#utility.yul\":4004:4014   */\n      gt\n        /* \"#utility.yul\":4001:4037   */\n      iszero\n      tag_312\n      jumpi\n        /* \"#utility.yul\":4017:4035   */\n      tag_312\n      tag_203\n      jump\t// in\n    tag_312:\n        /* \"#utility.yul\":4092:4094   */\n      0x40\n        /* \"#utility.yul\":4086:4095   */\n      mload\n        /* \"#utility.yul\":4060:4062   */\n      0x1f\n        /* \"#utility.yul\":4146:4159   */\n      dup3\n      add\n      not(0x1f)\n        /* \"#utility.yul\":4142:4164   */\n      swap1\n      dup2\n      and\n        /* \"#utility.yul\":4166:4168   */\n      0x3f\n        /* \"#utility.yul\":4138:4169   */\n      add\n        /* \"#utility.yul\":4134:4174   */\n      and\n        /* \"#utility.yul\":4122:4175   */\n      dup2\n      add\n      swap1\n        /* \"#utility.yul\":4190:4208   */\n      dup4\n      dup3\n      gt\n        /* \"#utility.yul\":4210:4232   */\n      dup2\n      dup4\n      lt\n        /* \"#utility.yul\":4187:4233   */\n      or\n        /* \"#utility.yul\":4184:4256   */\n      iszero\n      tag_314\n      jumpi\n        /* \"#utility.yul\":4236:4254   */\n      tag_314\n      tag_203\n      jump\t// in\n    tag_314:\n        /* \"#utility.yul\":4276:4286   */\n      dup2\n        /* \"#utility.yul\":4272:4274   */\n      0x40\n        /* \"#utility.yul\":4265:4287   */\n      mstore\n        /* \"#utility.yul\":4311:4313   */\n      dup3\n        /* \"#utility.yul\":4303:4309   */\n      dup2\n        /* \"#utility.yul\":4296:4314   */\n      mstore\n        /* \"#utility.yul\":4351:4358   */\n      dup11\n        /* \"#utility.yul\":4346:4348   */\n      0x20\n        /* \"#utility.yul\":4341:4343   */\n      dup5\n        /* \"#utility.yul\":4337:4339   */\n      dup8\n        /* \"#utility.yul\":4333:4344   */\n      add\n        /* \"#utility.yul\":4329:4349   */\n      add\n        /* \"#utility.yul\":4326:4359   */\n      gt\n        /* \"#utility.yul\":4323:4376   */\n      iszero\n      tag_315\n      jumpi\n        /* \"#utility.yul\":4372:4373   */\n      0x00\n        /* \"#utility.yul\":4369:4370   */\n      dup1\n        /* \"#utility.yul\":4362:4374   */\n      revert\n        /* \"#utility.yul\":4323:4376   */\n    tag_315:\n        /* \"#utility.yul\":4428:4430   */\n      dup3\n        /* \"#utility.yul\":4423:4425   */\n      0x20\n        /* \"#utility.yul\":4419:4421   */\n      dup7\n        /* \"#utility.yul\":4415:4426   */\n      add\n        /* \"#utility.yul\":4410:4412   */\n      0x20\n        /* \"#utility.yul\":4402:4408   */\n      dup4\n        /* \"#utility.yul\":4398:4413   */\n      add\n        /* \"#utility.yul\":4385:4431   */\n      calldatacopy\n        /* \"#utility.yul\":4473:4474   */\n      0x00\n        /* \"#utility.yul\":4468:4470   */\n      0x20\n        /* \"#utility.yul\":4463:4465   */\n      dup5\n        /* \"#utility.yul\":4455:4461   */\n      dup4\n        /* \"#utility.yul\":4451:4466   */\n      add\n        /* \"#utility.yul\":4447:4471   */\n      add\n        /* \"#utility.yul\":4440:4475   */\n      mstore\n        /* \"#utility.yul\":4494:4500   */\n      dup1\n        /* \"#utility.yul\":4484:4500   */\n      swap6\n      pop\n      pop\n      pop\n      pop\n      pop\n      pop\n        /* \"#utility.yul\":3368:4506   */\n      swap3\n      swap6\n      swap2\n      swap5\n      pop\n      swap3\n      pop\n      jump\t// out\n        /* \"#utility.yul\":4511:4771   */\n    tag_72:\n        /* \"#utility.yul\":4579:4585   */\n      0x00\n        /* \"#utility.yul\":4587:4593   */\n      dup1\n        /* \"#utility.yul\":4640:4642   */\n      0x40\n        /* \"#utility.yul\":4628:4637   */\n      dup4\n        /* \"#utility.yul\":4619:4626   */\n      dup6\n        /* \"#utility.yul\":4615:4638   */\n      sub\n        /* \"#utility.yul\":4611:4643   */\n      slt\n        /* \"#utility.yul\":4608:4660   */\n      iszero\n      tag_317\n      jumpi\n        /* \"#utility.yul\":4656:4657   */\n      0x00\n        /* \"#utility.yul\":4653:4654   */\n      dup1\n        /* \"#utility.yul\":4646:4658   */\n      revert\n        /* \"#utility.yul\":4608:4660   */\n    tag_317:\n        /* \"#utility.yul\":4679:4708   */\n      tag_318\n        /* \"#utility.yul\":4698:4707   */\n      dup4\n        /* \"#utility.yul\":4679:4708   */\n      tag_267\n      jump\t// in\n    tag_318:\n        /* \"#utility.yul\":4669:4708   */\n      swap2\n      pop\n        /* \"#utility.yul\":4727:4765   */\n      tag_319\n        /* \"#utility.yul\":4761:4763   */\n      0x20\n        /* \"#utility.yul\":4750:4759   */\n      dup5\n        /* \"#utility.yul\":4746:4764   */\n      add\n        /* \"#utility.yul\":4727:4765   */\n      tag_267\n      jump\t// in\n    tag_319:\n        /* \"#utility.yul\":4717:4765   */\n      swap1\n      pop\n        /* \"#utility.yul\":4511:4771   */\n      swap3\n      pop\n      swap3\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":4776:5156   */\n    tag_82:\n        /* \"#utility.yul\":4855:4856   */\n      0x01\n        /* \"#utility.yul\":4851:4863   */\n      dup2\n      dup2\n      shr\n      swap1\n        /* \"#utility.yul\":4898:4910   */\n      dup3\n      and\n      dup1\n        /* \"#utility.yul\":4919:4980   */\n      tag_321\n      jumpi\n        /* \"#utility.yul\":4973:4977   */\n      0x7f\n        /* \"#utility.yul\":4965:4971   */\n      dup3\n        /* \"#utility.yul\":4961:4978   */\n      and\n        /* \"#utility.yul\":4951:4978   */\n      swap2\n      pop\n        /* \"#utility.yul\":4919:4980   */\n    tag_321:\n        /* \"#utility.yul\":5026:5028   */\n      0x20\n        /* \"#utility.yul\":5018:5024   */\n      dup3\n        /* \"#utility.yul\":5015:5029   */\n      lt\n        /* \"#utility.yul\":4995:5013   */\n      dup2\n        /* \"#utility.yul\":4992:5030   */\n      sub\n        /* \"#utility.yul\":4989:5150   */\n      tag_322\n      jumpi\n        /* \"#utility.yul\":5072:5082   */\n      0x4e487b71\n        /* \"#utility.yul\":5067:5070   */\n      0xe0\n        /* \"#utility.yul\":5063:5083   */\n      shl\n        /* \"#utility.yul\":5060:5061   */\n      0x00\n        /* \"#utility.yul\":5053:5084   */\n      mstore\n        /* \"#utility.yul\":5107:5111   */\n      0x22\n        /* \"#utility.yul\":5104:5105   */\n      0x04\n        /* \"#utility.yul\":5097:5112   */\n      mstore\n        /* \"#utility.yul\":5135:5139   */\n      0x24\n        /* \"#utility.yul\":5132:5133   */\n      0x00\n        /* \"#utility.yul\":5125:5140   */\n      revert\n        /* \"#utility.yul\":4989:5150   */\n    tag_322:\n      pop\n        /* \"#utility.yul\":4776:5156   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":5993:6402   */\n    tag_111:\n        /* \"#utility.yul\":6195:6197   */\n      0x20\n        /* \"#utility.yul\":6177:6198   */\n      dup1\n      dup3\n      mstore\n        /* \"#utility.yul\":6234:6236   */\n      0x2d\n        /* \"#utility.yul\":6214:6232   */\n      swap1\n      dup3\n      add\n        /* \"#utility.yul\":6207:6237   */\n      mstore\n        /* \"#utility.yul\":6273:6307   */\n      0x4552433732313a2063616c6c6572206973206e6f7420746f6b656e206f776e65\n        /* \"#utility.yul\":6268:6270   */\n      0x40\n        /* \"#utility.yul\":6253:6271   */\n      dup3\n      add\n        /* \"#utility.yul\":6246:6308   */\n      mstore\n      shl(0x9a, 0x1c881bdc88185c1c1c9bdd9959)\n        /* \"#utility.yul\":6339:6341   */\n      0x60\n        /* \"#utility.yul\":6324:6342   */\n      dup3\n      add\n        /* \"#utility.yul\":6317:6360   */\n      mstore\n        /* \"#utility.yul\":6392:6395   */\n      0x80\n        /* \"#utility.yul\":6377:6396   */\n      add\n      swap1\n        /* \"#utility.yul\":5993:6402   */\n      jump\t// out\n        /* \"#utility.yul\":7170:7666   */\n    tag_152:\n        /* \"#utility.yul\":7349:7352   */\n      0x00\n        /* \"#utility.yul\":7387:7393   */\n      dup4\n        /* \"#utility.yul\":7381:7394   */\n      mload\n        /* \"#utility.yul\":7403:7469   */\n      tag_329\n        /* \"#utility.yul\":7462:7468   */\n      dup2\n        /* \"#utility.yul\":7457:7460   */\n      dup5\n        /* \"#utility.yul\":7450:7454   */\n      0x20\n        /* \"#utility.yul\":7442:7448   */\n      dup9\n        /* \"#utility.yul\":7438:7455   */\n      add\n        /* \"#utility.yul\":7403:7469   */\n      tag_265\n      jump\t// in\n    tag_329:\n        /* \"#utility.yul\":7532:7545   */\n      dup4\n      mload\n        /* \"#utility.yul\":7491:7507   */\n      swap1\n      dup4\n      add\n      swap1\n        /* \"#utility.yul\":7554:7624   */\n      tag_330\n        /* \"#utility.yul\":7532:7545   */\n      dup2\n        /* \"#utility.yul\":7491:7507   */\n      dup4\n        /* \"#utility.yul\":7601:7605   */\n      0x20\n        /* \"#utility.yul\":7589:7606   */\n      dup9\n      add\n        /* \"#utility.yul\":7554:7624   */\n      tag_265\n      jump\t// in\n    tag_330:\n        /* \"#utility.yul\":7640:7660   */\n      add\n      swap5\n        /* \"#utility.yul\":7170:7666   */\n      swap4\n      pop\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":7671:8072   */\n    tag_173:\n        /* \"#utility.yul\":7873:7875   */\n      0x20\n        /* \"#utility.yul\":7855:7876   */\n      dup1\n      dup3\n      mstore\n        /* \"#utility.yul\":7912:7914   */\n      0x25\n        /* \"#utility.yul\":7892:7910   */\n      swap1\n      dup3\n      add\n        /* \"#utility.yul\":7885:7915   */\n      mstore\n        /* \"#utility.yul\":7951:7985   */\n      0x4552433732313a207472616e736665722066726f6d20696e636f727265637420\n        /* \"#utility.yul\":7946:7948   */\n      0x40\n        /* \"#utility.yul\":7931:7949   */\n      dup3\n      add\n        /* \"#utility.yul\":7924:7986   */\n      mstore\n      shl(0xd9, 0x37bbb732b9)\n        /* \"#utility.yul\":8017:8019   */\n      0x60\n        /* \"#utility.yul\":8002:8020   */\n      dup3\n      add\n        /* \"#utility.yul\":7995:8030   */\n      mstore\n        /* \"#utility.yul\":8062:8065   */\n      0x80\n        /* \"#utility.yul\":8047:8066   */\n      add\n      swap1\n        /* \"#utility.yul\":7671:8072   */\n      jump\t// out\n        /* \"#utility.yul\":8836:9250   */\n    tag_196:\n        /* \"#utility.yul\":9038:9040   */\n      0x20\n        /* \"#utility.yul\":9020:9041   */\n      dup1\n      dup3\n      mstore\n        /* \"#utility.yul\":9077:9079   */\n      0x32\n        /* \"#utility.yul\":9057:9075   */\n      swap1\n      dup3\n      add\n        /* \"#utility.yul\":9050:9080   */\n      mstore\n        /* \"#utility.yul\":9116:9150   */\n      0x4552433732313a207472616e7366657220746f206e6f6e204552433732315265\n        /* \"#utility.yul\":9111:9113   */\n      0x40\n        /* \"#utility.yul\":9096:9114   */\n      dup3\n      add\n        /* \"#utility.yul\":9089:9151   */\n      mstore\n      shl(0x71, 0x31b2b4bb32b91034b6b83632b6b2b73a32b9)\n        /* \"#utility.yul\":9182:9184   */\n      0x60\n        /* \"#utility.yul\":9167:9185   */\n      dup3\n      add\n        /* \"#utility.yul\":9160:9208   */\n      mstore\n        /* \"#utility.yul\":9240:9243   */\n      0x80\n        /* \"#utility.yul\":9225:9244   */\n      add\n      swap1\n        /* \"#utility.yul\":8836:9250   */\n      jump\t// out\n        /* \"#utility.yul\":9387:9514   */\n    tag_268:\n        /* \"#utility.yul\":9448:9458   */\n      0x4e487b71\n        /* \"#utility.yul\":9443:9446   */\n      0xe0\n        /* \"#utility.yul\":9439:9459   */\n      shl\n        /* \"#utility.yul\":9436:9437   */\n      0x00\n        /* \"#utility.yul\":9429:9460   */\n      mstore\n        /* \"#utility.yul\":9479:9483   */\n      0x11\n        /* \"#utility.yul\":9476:9477   */\n      0x04\n        /* \"#utility.yul\":9469:9484   */\n      mstore\n        /* \"#utility.yul\":9503:9507   */\n      0x24\n        /* \"#utility.yul\":9500:9501   */\n      0x00\n        /* \"#utility.yul\":9493:9508   */\n      revert\n        /* \"#utility.yul\":9519:9647   */\n    tag_217:\n        /* \"#utility.yul\":9586:9595   */\n      dup2\n      dup2\n      sub\n        /* \"#utility.yul\":9607:9618   */\n      dup2\n      dup2\n      gt\n        /* \"#utility.yul\":9604:9641   */\n      iszero\n      tag_78\n      jumpi\n        /* \"#utility.yul\":9621:9639   */\n      tag_78\n      tag_268\n      jump\t// in\n        /* \"#utility.yul\":9652:9777   */\n    tag_220:\n        /* \"#utility.yul\":9717:9726   */\n      dup1\n      dup3\n      add\n        /* \"#utility.yul\":9738:9748   */\n      dup1\n      dup3\n      gt\n        /* \"#utility.yul\":9735:9771   */\n      iszero\n      tag_78\n      jumpi\n        /* \"#utility.yul\":9751:9769   */\n      tag_78\n      tag_268\n      jump\t// in\n        /* \"#utility.yul\":9782:10271   */\n    tag_228:\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"#utility.yul\":10051:10066   */\n      dup6\n      dup2\n      and\n        /* \"#utility.yul\":10033:10067   */\n      dup3\n      mstore\n        /* \"#utility.yul\":10103:10118   */\n      dup5\n      and\n        /* \"#utility.yul\":10098:10100   */\n      0x20\n        /* \"#utility.yul\":10083:10101   */\n      dup3\n      add\n        /* \"#utility.yul\":10076:10119   */\n      mstore\n        /* \"#utility.yul\":10150:10152   */\n      0x40\n        /* \"#utility.yul\":10135:10153   */\n      dup2\n      add\n        /* \"#utility.yul\":10128:10162   */\n      dup4\n      swap1\n      mstore\n        /* \"#utility.yul\":10198:10201   */\n      0x80\n        /* \"#utility.yul\":10193:10195   */\n      0x60\n        /* \"#utility.yul\":10178:10196   */\n      dup3\n      add\n        /* \"#utility.yul\":10171:10202   */\n      dup2\n      swap1\n      mstore\n        /* \"#utility.yul\":9976:9980   */\n      0x00\n      swap1\n        /* \"#utility.yul\":10219:10265   */\n      tag_344\n      swap1\n        /* \"#utility.yul\":10245:10264   */\n      dup4\n      add\n        /* \"#utility.yul\":10237:10243   */\n      dup5\n        /* \"#utility.yul\":10219:10265   */\n      tag_266\n      jump\t// in\n    tag_344:\n        /* \"#utility.yul\":10211:10265   */\n      swap7\n        /* \"#utility.yul\":9782:10271   */\n      swap6\n      pop\n      pop\n      pop\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":10276:10525   */\n    tag_231:\n        /* \"#utility.yul\":10345:10351   */\n      0x00\n        /* \"#utility.yul\":10398:10400   */\n      0x20\n        /* \"#utility.yul\":10386:10395   */\n      dup3\n        /* \"#utility.yul\":10377:10384   */\n      dup5\n        /* \"#utility.yul\":10373:10396   */\n      sub\n        /* \"#utility.yul\":10369:10401   */\n      slt\n        /* \"#utility.yul\":10366:10418   */\n      iszero\n      tag_346\n      jumpi\n        /* \"#utility.yul\":10414:10415   */\n      0x00\n        /* \"#utility.yul\":10411:10412   */\n      dup1\n        /* \"#utility.yul\":10404:10416   */\n      revert\n        /* \"#utility.yul\":10366:10418   */\n    tag_346:\n        /* \"#utility.yul\":10446:10455   */\n      dup2\n        /* \"#utility.yul\":10440:10456   */\n      mload\n        /* \"#utility.yul\":10465:10495   */\n      tag_148\n        /* \"#utility.yul\":10489:10494   */\n      dup2\n        /* \"#utility.yul\":10465:10495   */\n      tag_264\n      jump\t// in\n\n    auxdata: 0xa26469706673582212208668b10ade2ce4e39acc044f7dbefc7edadaae5a1fbb762e25bf9b747808bb8464736f6c63430008150033\n}\n",
						"bytecode": {
							"functionDebugData": {
								"@_229": {
									"entryPoint": null,
									"id": 229,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"abi_decode_string_fromMemory": {
									"entryPoint": 108,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_tuple_t_string_memory_ptrt_string_memory_ptr_fromMemory": {
									"entryPoint": 278,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 2
								},
								"array_dataslot_string_storage": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"clean_up_bytearray_end_slots_string_storage": {
									"entryPoint": 438,
									"id": null,
									"parameterSlots": 3,
									"returnSlots": 0
								},
								"copy_byte_array_to_storage_from_t_string_memory_ptr_to_t_string_storage": {
									"entryPoint": 520,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"extract_byte_array_length": {
									"entryPoint": 380,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"extract_used_part_and_set_length_of_short_byte_array": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"panic_error_0x41": {
									"entryPoint": 88,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								}
							},
							"generatedSources": [
								{
									"ast": {
										"nativeSrc": "0:4144:14",
										"nodeType": "YulBlock",
										"src": "0:4144:14",
										"statements": [
											{
												"nativeSrc": "6:3:14",
												"nodeType": "YulBlock",
												"src": "6:3:14",
												"statements": []
											},
											{
												"body": {
													"nativeSrc": "46:95:14",
													"nodeType": "YulBlock",
													"src": "46:95:14",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "63:1:14",
																		"nodeType": "YulLiteral",
																		"src": "63:1:14",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"arguments": [
																			{
																				"kind": "number",
																				"nativeSrc": "70:3:14",
																				"nodeType": "YulLiteral",
																				"src": "70:3:14",
																				"type": "",
																				"value": "224"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "75:10:14",
																				"nodeType": "YulLiteral",
																				"src": "75:10:14",
																				"type": "",
																				"value": "0x4e487b71"
																			}
																		],
																		"functionName": {
																			"name": "shl",
																			"nativeSrc": "66:3:14",
																			"nodeType": "YulIdentifier",
																			"src": "66:3:14"
																		},
																		"nativeSrc": "66:20:14",
																		"nodeType": "YulFunctionCall",
																		"src": "66:20:14"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "56:6:14",
																	"nodeType": "YulIdentifier",
																	"src": "56:6:14"
																},
																"nativeSrc": "56:31:14",
																"nodeType": "YulFunctionCall",
																"src": "56:31:14"
															},
															"nativeSrc": "56:31:14",
															"nodeType": "YulExpressionStatement",
															"src": "56:31:14"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "103:1:14",
																		"nodeType": "YulLiteral",
																		"src": "103:1:14",
																		"type": "",
																		"value": "4"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "106:4:14",
																		"nodeType": "YulLiteral",
																		"src": "106:4:14",
																		"type": "",
																		"value": "0x41"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "96:6:14",
																	"nodeType": "YulIdentifier",
																	"src": "96:6:14"
																},
																"nativeSrc": "96:15:14",
																"nodeType": "YulFunctionCall",
																"src": "96:15:14"
															},
															"nativeSrc": "96:15:14",
															"nodeType": "YulExpressionStatement",
															"src": "96:15:14"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "127:1:14",
																		"nodeType": "YulLiteral",
																		"src": "127:1:14",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "130:4:14",
																		"nodeType": "YulLiteral",
																		"src": "130:4:14",
																		"type": "",
																		"value": "0x24"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nativeSrc": "120:6:14",
																	"nodeType": "YulIdentifier",
																	"src": "120:6:14"
																},
																"nativeSrc": "120:15:14",
																"nodeType": "YulFunctionCall",
																"src": "120:15:14"
															},
															"nativeSrc": "120:15:14",
															"nodeType": "YulExpressionStatement",
															"src": "120:15:14"
														}
													]
												},
												"name": "panic_error_0x41",
												"nativeSrc": "14:127:14",
												"nodeType": "YulFunctionDefinition",
												"src": "14:127:14"
											},
											{
												"body": {
													"nativeSrc": "210:776:14",
													"nodeType": "YulBlock",
													"src": "210:776:14",
													"statements": [
														{
															"body": {
																"nativeSrc": "259:16:14",
																"nodeType": "YulBlock",
																"src": "259:16:14",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nativeSrc": "268:1:14",
																					"nodeType": "YulLiteral",
																					"src": "268:1:14",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "271:1:14",
																					"nodeType": "YulLiteral",
																					"src": "271:1:14",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nativeSrc": "261:6:14",
																				"nodeType": "YulIdentifier",
																				"src": "261:6:14"
																			},
																			"nativeSrc": "261:12:14",
																			"nodeType": "YulFunctionCall",
																			"src": "261:12:14"
																		},
																		"nativeSrc": "261:12:14",
																		"nodeType": "YulExpressionStatement",
																		"src": "261:12:14"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "offset",
																						"nativeSrc": "238:6:14",
																						"nodeType": "YulIdentifier",
																						"src": "238:6:14"
																					},
																					{
																						"kind": "number",
																						"nativeSrc": "246:4:14",
																						"nodeType": "YulLiteral",
																						"src": "246:4:14",
																						"type": "",
																						"value": "0x1f"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "234:3:14",
																					"nodeType": "YulIdentifier",
																					"src": "234:3:14"
																				},
																				"nativeSrc": "234:17:14",
																				"nodeType": "YulFunctionCall",
																				"src": "234:17:14"
																			},
																			{
																				"name": "end",
																				"nativeSrc": "253:3:14",
																				"nodeType": "YulIdentifier",
																				"src": "253:3:14"
																			}
																		],
																		"functionName": {
																			"name": "slt",
																			"nativeSrc": "230:3:14",
																			"nodeType": "YulIdentifier",
																			"src": "230:3:14"
																		},
																		"nativeSrc": "230:27:14",
																		"nodeType": "YulFunctionCall",
																		"src": "230:27:14"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nativeSrc": "223:6:14",
																	"nodeType": "YulIdentifier",
																	"src": "223:6:14"
																},
																"nativeSrc": "223:35:14",
																"nodeType": "YulFunctionCall",
																"src": "223:35:14"
															},
															"nativeSrc": "220:55:14",
															"nodeType": "YulIf",
															"src": "220:55:14"
														},
														{
															"nativeSrc": "284:23:14",
															"nodeType": "YulVariableDeclaration",
															"src": "284:23:14",
															"value": {
																"arguments": [
																	{
																		"name": "offset",
																		"nativeSrc": "300:6:14",
																		"nodeType": "YulIdentifier",
																		"src": "300:6:14"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nativeSrc": "294:5:14",
																	"nodeType": "YulIdentifier",
																	"src": "294:5:14"
																},
																"nativeSrc": "294:13:14",
																"nodeType": "YulFunctionCall",
																"src": "294:13:14"
															},
															"variables": [
																{
																	"name": "_1",
																	"nativeSrc": "288:2:14",
																	"nodeType": "YulTypedName",
																	"src": "288:2:14",
																	"type": ""
																}
															]
														},
														{
															"nativeSrc": "316:28:14",
															"nodeType": "YulVariableDeclaration",
															"src": "316:28:14",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"kind": "number",
																				"nativeSrc": "334:2:14",
																				"nodeType": "YulLiteral",
																				"src": "334:2:14",
																				"type": "",
																				"value": "64"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "338:1:14",
																				"nodeType": "YulLiteral",
																				"src": "338:1:14",
																				"type": "",
																				"value": "1"
																			}
																		],
																		"functionName": {
																			"name": "shl",
																			"nativeSrc": "330:3:14",
																			"nodeType": "YulIdentifier",
																			"src": "330:3:14"
																		},
																		"nativeSrc": "330:10:14",
																		"nodeType": "YulFunctionCall",
																		"src": "330:10:14"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "342:1:14",
																		"nodeType": "YulLiteral",
																		"src": "342:1:14",
																		"type": "",
																		"value": "1"
																	}
																],
																"functionName": {
																	"name": "sub",
																	"nativeSrc": "326:3:14",
																	"nodeType": "YulIdentifier",
																	"src": "326:3:14"
																},
																"nativeSrc": "326:18:14",
																"nodeType": "YulFunctionCall",
																"src": "326:18:14"
															},
															"variables": [
																{
																	"name": "_2",
																	"nativeSrc": "320:2:14",
																	"nodeType": "YulTypedName",
																	"src": "320:2:14",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nativeSrc": "367:22:14",
																"nodeType": "YulBlock",
																"src": "367:22:14",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "panic_error_0x41",
																				"nativeSrc": "369:16:14",
																				"nodeType": "YulIdentifier",
																				"src": "369:16:14"
																			},
																			"nativeSrc": "369:18:14",
																			"nodeType": "YulFunctionCall",
																			"src": "369:18:14"
																		},
																		"nativeSrc": "369:18:14",
																		"nodeType": "YulExpressionStatement",
																		"src": "369:18:14"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "_1",
																		"nativeSrc": "359:2:14",
																		"nodeType": "YulIdentifier",
																		"src": "359:2:14"
																	},
																	{
																		"name": "_2",
																		"nativeSrc": "363:2:14",
																		"nodeType": "YulIdentifier",
																		"src": "363:2:14"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nativeSrc": "356:2:14",
																	"nodeType": "YulIdentifier",
																	"src": "356:2:14"
																},
																"nativeSrc": "356:10:14",
																"nodeType": "YulFunctionCall",
																"src": "356:10:14"
															},
															"nativeSrc": "353:36:14",
															"nodeType": "YulIf",
															"src": "353:36:14"
														},
														{
															"nativeSrc": "398:17:14",
															"nodeType": "YulVariableDeclaration",
															"src": "398:17:14",
															"value": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "412:2:14",
																		"nodeType": "YulLiteral",
																		"src": "412:2:14",
																		"type": "",
																		"value": "31"
																	}
																],
																"functionName": {
																	"name": "not",
																	"nativeSrc": "408:3:14",
																	"nodeType": "YulIdentifier",
																	"src": "408:3:14"
																},
																"nativeSrc": "408:7:14",
																"nodeType": "YulFunctionCall",
																"src": "408:7:14"
															},
															"variables": [
																{
																	"name": "_3",
																	"nativeSrc": "402:2:14",
																	"nodeType": "YulTypedName",
																	"src": "402:2:14",
																	"type": ""
																}
															]
														},
														{
															"nativeSrc": "424:23:14",
															"nodeType": "YulVariableDeclaration",
															"src": "424:23:14",
															"value": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "444:2:14",
																		"nodeType": "YulLiteral",
																		"src": "444:2:14",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nativeSrc": "438:5:14",
																	"nodeType": "YulIdentifier",
																	"src": "438:5:14"
																},
																"nativeSrc": "438:9:14",
																"nodeType": "YulFunctionCall",
																"src": "438:9:14"
															},
															"variables": [
																{
																	"name": "memPtr",
																	"nativeSrc": "428:6:14",
																	"nodeType": "YulTypedName",
																	"src": "428:6:14",
																	"type": ""
																}
															]
														},
														{
															"nativeSrc": "456:71:14",
															"nodeType": "YulVariableDeclaration",
															"src": "456:71:14",
															"value": {
																"arguments": [
																	{
																		"name": "memPtr",
																		"nativeSrc": "478:6:14",
																		"nodeType": "YulIdentifier",
																		"src": "478:6:14"
																	},
																	{
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"arguments": [
																							{
																								"arguments": [
																									{
																										"name": "_1",
																										"nativeSrc": "502:2:14",
																										"nodeType": "YulIdentifier",
																										"src": "502:2:14"
																									},
																									{
																										"kind": "number",
																										"nativeSrc": "506:4:14",
																										"nodeType": "YulLiteral",
																										"src": "506:4:14",
																										"type": "",
																										"value": "0x1f"
																									}
																								],
																								"functionName": {
																									"name": "add",
																									"nativeSrc": "498:3:14",
																									"nodeType": "YulIdentifier",
																									"src": "498:3:14"
																								},
																								"nativeSrc": "498:13:14",
																								"nodeType": "YulFunctionCall",
																								"src": "498:13:14"
																							},
																							{
																								"name": "_3",
																								"nativeSrc": "513:2:14",
																								"nodeType": "YulIdentifier",
																								"src": "513:2:14"
																							}
																						],
																						"functionName": {
																							"name": "and",
																							"nativeSrc": "494:3:14",
																							"nodeType": "YulIdentifier",
																							"src": "494:3:14"
																						},
																						"nativeSrc": "494:22:14",
																						"nodeType": "YulFunctionCall",
																						"src": "494:22:14"
																					},
																					{
																						"kind": "number",
																						"nativeSrc": "518:2:14",
																						"nodeType": "YulLiteral",
																						"src": "518:2:14",
																						"type": "",
																						"value": "63"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "490:3:14",
																					"nodeType": "YulIdentifier",
																					"src": "490:3:14"
																				},
																				"nativeSrc": "490:31:14",
																				"nodeType": "YulFunctionCall",
																				"src": "490:31:14"
																			},
																			{
																				"name": "_3",
																				"nativeSrc": "523:2:14",
																				"nodeType": "YulIdentifier",
																				"src": "523:2:14"
																			}
																		],
																		"functionName": {
																			"name": "and",
																			"nativeSrc": "486:3:14",
																			"nodeType": "YulIdentifier",
																			"src": "486:3:14"
																		},
																		"nativeSrc": "486:40:14",
																		"nodeType": "YulFunctionCall",
																		"src": "486:40:14"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "474:3:14",
																	"nodeType": "YulIdentifier",
																	"src": "474:3:14"
																},
																"nativeSrc": "474:53:14",
																"nodeType": "YulFunctionCall",
																"src": "474:53:14"
															},
															"variables": [
																{
																	"name": "newFreePtr",
																	"nativeSrc": "460:10:14",
																	"nodeType": "YulTypedName",
																	"src": "460:10:14",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nativeSrc": "586:22:14",
																"nodeType": "YulBlock",
																"src": "586:22:14",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "panic_error_0x41",
																				"nativeSrc": "588:16:14",
																				"nodeType": "YulIdentifier",
																				"src": "588:16:14"
																			},
																			"nativeSrc": "588:18:14",
																			"nodeType": "YulFunctionCall",
																			"src": "588:18:14"
																		},
																		"nativeSrc": "588:18:14",
																		"nodeType": "YulExpressionStatement",
																		"src": "588:18:14"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "newFreePtr",
																				"nativeSrc": "545:10:14",
																				"nodeType": "YulIdentifier",
																				"src": "545:10:14"
																			},
																			{
																				"name": "_2",
																				"nativeSrc": "557:2:14",
																				"nodeType": "YulIdentifier",
																				"src": "557:2:14"
																			}
																		],
																		"functionName": {
																			"name": "gt",
																			"nativeSrc": "542:2:14",
																			"nodeType": "YulIdentifier",
																			"src": "542:2:14"
																		},
																		"nativeSrc": "542:18:14",
																		"nodeType": "YulFunctionCall",
																		"src": "542:18:14"
																	},
																	{
																		"arguments": [
																			{
																				"name": "newFreePtr",
																				"nativeSrc": "565:10:14",
																				"nodeType": "YulIdentifier",
																				"src": "565:10:14"
																			},
																			{
																				"name": "memPtr",
																				"nativeSrc": "577:6:14",
																				"nodeType": "YulIdentifier",
																				"src": "577:6:14"
																			}
																		],
																		"functionName": {
																			"name": "lt",
																			"nativeSrc": "562:2:14",
																			"nodeType": "YulIdentifier",
																			"src": "562:2:14"
																		},
																		"nativeSrc": "562:22:14",
																		"nodeType": "YulFunctionCall",
																		"src": "562:22:14"
																	}
																],
																"functionName": {
																	"name": "or",
																	"nativeSrc": "539:2:14",
																	"nodeType": "YulIdentifier",
																	"src": "539:2:14"
																},
																"nativeSrc": "539:46:14",
																"nodeType": "YulFunctionCall",
																"src": "539:46:14"
															},
															"nativeSrc": "536:72:14",
															"nodeType": "YulIf",
															"src": "536:72:14"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "624:2:14",
																		"nodeType": "YulLiteral",
																		"src": "624:2:14",
																		"type": "",
																		"value": "64"
																	},
																	{
																		"name": "newFreePtr",
																		"nativeSrc": "628:10:14",
																		"nodeType": "YulIdentifier",
																		"src": "628:10:14"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "617:6:14",
																	"nodeType": "YulIdentifier",
																	"src": "617:6:14"
																},
																"nativeSrc": "617:22:14",
																"nodeType": "YulFunctionCall",
																"src": "617:22:14"
															},
															"nativeSrc": "617:22:14",
															"nodeType": "YulExpressionStatement",
															"src": "617:22:14"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "memPtr",
																		"nativeSrc": "655:6:14",
																		"nodeType": "YulIdentifier",
																		"src": "655:6:14"
																	},
																	{
																		"name": "_1",
																		"nativeSrc": "663:2:14",
																		"nodeType": "YulIdentifier",
																		"src": "663:2:14"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "648:6:14",
																	"nodeType": "YulIdentifier",
																	"src": "648:6:14"
																},
																"nativeSrc": "648:18:14",
																"nodeType": "YulFunctionCall",
																"src": "648:18:14"
															},
															"nativeSrc": "648:18:14",
															"nodeType": "YulExpressionStatement",
															"src": "648:18:14"
														},
														{
															"nativeSrc": "675:14:14",
															"nodeType": "YulVariableDeclaration",
															"src": "675:14:14",
															"value": {
																"kind": "number",
																"nativeSrc": "685:4:14",
																"nodeType": "YulLiteral",
																"src": "685:4:14",
																"type": "",
																"value": "0x20"
															},
															"variables": [
																{
																	"name": "_4",
																	"nativeSrc": "679:2:14",
																	"nodeType": "YulTypedName",
																	"src": "679:2:14",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nativeSrc": "735:16:14",
																"nodeType": "YulBlock",
																"src": "735:16:14",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nativeSrc": "744:1:14",
																					"nodeType": "YulLiteral",
																					"src": "744:1:14",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "747:1:14",
																					"nodeType": "YulLiteral",
																					"src": "747:1:14",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nativeSrc": "737:6:14",
																				"nodeType": "YulIdentifier",
																				"src": "737:6:14"
																			},
																			"nativeSrc": "737:12:14",
																			"nodeType": "YulFunctionCall",
																			"src": "737:12:14"
																		},
																		"nativeSrc": "737:12:14",
																		"nodeType": "YulExpressionStatement",
																		"src": "737:12:14"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "offset",
																						"nativeSrc": "712:6:14",
																						"nodeType": "YulIdentifier",
																						"src": "712:6:14"
																					},
																					{
																						"name": "_1",
																						"nativeSrc": "720:2:14",
																						"nodeType": "YulIdentifier",
																						"src": "720:2:14"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "708:3:14",
																					"nodeType": "YulIdentifier",
																					"src": "708:3:14"
																				},
																				"nativeSrc": "708:15:14",
																				"nodeType": "YulFunctionCall",
																				"src": "708:15:14"
																			},
																			{
																				"name": "_4",
																				"nativeSrc": "725:2:14",
																				"nodeType": "YulIdentifier",
																				"src": "725:2:14"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "704:3:14",
																			"nodeType": "YulIdentifier",
																			"src": "704:3:14"
																		},
																		"nativeSrc": "704:24:14",
																		"nodeType": "YulFunctionCall",
																		"src": "704:24:14"
																	},
																	{
																		"name": "end",
																		"nativeSrc": "730:3:14",
																		"nodeType": "YulIdentifier",
																		"src": "730:3:14"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nativeSrc": "701:2:14",
																	"nodeType": "YulIdentifier",
																	"src": "701:2:14"
																},
																"nativeSrc": "701:33:14",
																"nodeType": "YulFunctionCall",
																"src": "701:33:14"
															},
															"nativeSrc": "698:53:14",
															"nodeType": "YulIf",
															"src": "698:53:14"
														},
														{
															"nativeSrc": "760:10:14",
															"nodeType": "YulVariableDeclaration",
															"src": "760:10:14",
															"value": {
																"kind": "number",
																"nativeSrc": "769:1:14",
																"nodeType": "YulLiteral",
																"src": "769:1:14",
																"type": "",
																"value": "0"
															},
															"variables": [
																{
																	"name": "i",
																	"nativeSrc": "764:1:14",
																	"nodeType": "YulTypedName",
																	"src": "764:1:14",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nativeSrc": "825:87:14",
																"nodeType": "YulBlock",
																"src": "825:87:14",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"arguments": [
																						{
																							"arguments": [
																								{
																									"name": "memPtr",
																									"nativeSrc": "854:6:14",
																									"nodeType": "YulIdentifier",
																									"src": "854:6:14"
																								},
																								{
																									"name": "i",
																									"nativeSrc": "862:1:14",
																									"nodeType": "YulIdentifier",
																									"src": "862:1:14"
																								}
																							],
																							"functionName": {
																								"name": "add",
																								"nativeSrc": "850:3:14",
																								"nodeType": "YulIdentifier",
																								"src": "850:3:14"
																							},
																							"nativeSrc": "850:14:14",
																							"nodeType": "YulFunctionCall",
																							"src": "850:14:14"
																						},
																						{
																							"name": "_4",
																							"nativeSrc": "866:2:14",
																							"nodeType": "YulIdentifier",
																							"src": "866:2:14"
																						}
																					],
																					"functionName": {
																						"name": "add",
																						"nativeSrc": "846:3:14",
																						"nodeType": "YulIdentifier",
																						"src": "846:3:14"
																					},
																					"nativeSrc": "846:23:14",
																					"nodeType": "YulFunctionCall",
																					"src": "846:23:14"
																				},
																				{
																					"arguments": [
																						{
																							"arguments": [
																								{
																									"arguments": [
																										{
																											"name": "offset",
																											"nativeSrc": "885:6:14",
																											"nodeType": "YulIdentifier",
																											"src": "885:6:14"
																										},
																										{
																											"name": "i",
																											"nativeSrc": "893:1:14",
																											"nodeType": "YulIdentifier",
																											"src": "893:1:14"
																										}
																									],
																									"functionName": {
																										"name": "add",
																										"nativeSrc": "881:3:14",
																										"nodeType": "YulIdentifier",
																										"src": "881:3:14"
																									},
																									"nativeSrc": "881:14:14",
																									"nodeType": "YulFunctionCall",
																									"src": "881:14:14"
																								},
																								{
																									"name": "_4",
																									"nativeSrc": "897:2:14",
																									"nodeType": "YulIdentifier",
																									"src": "897:2:14"
																								}
																							],
																							"functionName": {
																								"name": "add",
																								"nativeSrc": "877:3:14",
																								"nodeType": "YulIdentifier",
																								"src": "877:3:14"
																							},
																							"nativeSrc": "877:23:14",
																							"nodeType": "YulFunctionCall",
																							"src": "877:23:14"
																						}
																					],
																					"functionName": {
																						"name": "mload",
																						"nativeSrc": "871:5:14",
																						"nodeType": "YulIdentifier",
																						"src": "871:5:14"
																					},
																					"nativeSrc": "871:30:14",
																					"nodeType": "YulFunctionCall",
																					"src": "871:30:14"
																				}
																			],
																			"functionName": {
																				"name": "mstore",
																				"nativeSrc": "839:6:14",
																				"nodeType": "YulIdentifier",
																				"src": "839:6:14"
																			},
																			"nativeSrc": "839:63:14",
																			"nodeType": "YulFunctionCall",
																			"src": "839:63:14"
																		},
																		"nativeSrc": "839:63:14",
																		"nodeType": "YulExpressionStatement",
																		"src": "839:63:14"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "i",
																		"nativeSrc": "790:1:14",
																		"nodeType": "YulIdentifier",
																		"src": "790:1:14"
																	},
																	{
																		"name": "_1",
																		"nativeSrc": "793:2:14",
																		"nodeType": "YulIdentifier",
																		"src": "793:2:14"
																	}
																],
																"functionName": {
																	"name": "lt",
																	"nativeSrc": "787:2:14",
																	"nodeType": "YulIdentifier",
																	"src": "787:2:14"
																},
																"nativeSrc": "787:9:14",
																"nodeType": "YulFunctionCall",
																"src": "787:9:14"
															},
															"nativeSrc": "779:133:14",
															"nodeType": "YulForLoop",
															"post": {
																"nativeSrc": "797:19:14",
																"nodeType": "YulBlock",
																"src": "797:19:14",
																"statements": [
																	{
																		"nativeSrc": "799:15:14",
																		"nodeType": "YulAssignment",
																		"src": "799:15:14",
																		"value": {
																			"arguments": [
																				{
																					"name": "i",
																					"nativeSrc": "808:1:14",
																					"nodeType": "YulIdentifier",
																					"src": "808:1:14"
																				},
																				{
																					"name": "_4",
																					"nativeSrc": "811:2:14",
																					"nodeType": "YulIdentifier",
																					"src": "811:2:14"
																				}
																			],
																			"functionName": {
																				"name": "add",
																				"nativeSrc": "804:3:14",
																				"nodeType": "YulIdentifier",
																				"src": "804:3:14"
																			},
																			"nativeSrc": "804:10:14",
																			"nodeType": "YulFunctionCall",
																			"src": "804:10:14"
																		},
																		"variableNames": [
																			{
																				"name": "i",
																				"nativeSrc": "799:1:14",
																				"nodeType": "YulIdentifier",
																				"src": "799:1:14"
																			}
																		]
																	}
																]
															},
															"pre": {
																"nativeSrc": "783:3:14",
																"nodeType": "YulBlock",
																"src": "783:3:14",
																"statements": []
															},
															"src": "779:133:14"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "memPtr",
																						"nativeSrc": "936:6:14",
																						"nodeType": "YulIdentifier",
																						"src": "936:6:14"
																					},
																					{
																						"name": "_1",
																						"nativeSrc": "944:2:14",
																						"nodeType": "YulIdentifier",
																						"src": "944:2:14"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "932:3:14",
																					"nodeType": "YulIdentifier",
																					"src": "932:3:14"
																				},
																				"nativeSrc": "932:15:14",
																				"nodeType": "YulFunctionCall",
																				"src": "932:15:14"
																			},
																			{
																				"name": "_4",
																				"nativeSrc": "949:2:14",
																				"nodeType": "YulIdentifier",
																				"src": "949:2:14"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "928:3:14",
																			"nodeType": "YulIdentifier",
																			"src": "928:3:14"
																		},
																		"nativeSrc": "928:24:14",
																		"nodeType": "YulFunctionCall",
																		"src": "928:24:14"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "954:1:14",
																		"nodeType": "YulLiteral",
																		"src": "954:1:14",
																		"type": "",
																		"value": "0"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "921:6:14",
																	"nodeType": "YulIdentifier",
																	"src": "921:6:14"
																},
																"nativeSrc": "921:35:14",
																"nodeType": "YulFunctionCall",
																"src": "921:35:14"
															},
															"nativeSrc": "921:35:14",
															"nodeType": "YulExpressionStatement",
															"src": "921:35:14"
														},
														{
															"nativeSrc": "965:15:14",
															"nodeType": "YulAssignment",
															"src": "965:15:14",
															"value": {
																"name": "memPtr",
																"nativeSrc": "974:6:14",
																"nodeType": "YulIdentifier",
																"src": "974:6:14"
															},
															"variableNames": [
																{
																	"name": "array",
																	"nativeSrc": "965:5:14",
																	"nodeType": "YulIdentifier",
																	"src": "965:5:14"
																}
															]
														}
													]
												},
												"name": "abi_decode_string_fromMemory",
												"nativeSrc": "146:840:14",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "offset",
														"nativeSrc": "184:6:14",
														"nodeType": "YulTypedName",
														"src": "184:6:14",
														"type": ""
													},
													{
														"name": "end",
														"nativeSrc": "192:3:14",
														"nodeType": "YulTypedName",
														"src": "192:3:14",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "array",
														"nativeSrc": "200:5:14",
														"nodeType": "YulTypedName",
														"src": "200:5:14",
														"type": ""
													}
												],
												"src": "146:840:14"
											},
											{
												"body": {
													"nativeSrc": "1109:444:14",
													"nodeType": "YulBlock",
													"src": "1109:444:14",
													"statements": [
														{
															"body": {
																"nativeSrc": "1155:16:14",
																"nodeType": "YulBlock",
																"src": "1155:16:14",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nativeSrc": "1164:1:14",
																					"nodeType": "YulLiteral",
																					"src": "1164:1:14",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "1167:1:14",
																					"nodeType": "YulLiteral",
																					"src": "1167:1:14",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nativeSrc": "1157:6:14",
																				"nodeType": "YulIdentifier",
																				"src": "1157:6:14"
																			},
																			"nativeSrc": "1157:12:14",
																			"nodeType": "YulFunctionCall",
																			"src": "1157:12:14"
																		},
																		"nativeSrc": "1157:12:14",
																		"nodeType": "YulExpressionStatement",
																		"src": "1157:12:14"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nativeSrc": "1130:7:14",
																				"nodeType": "YulIdentifier",
																				"src": "1130:7:14"
																			},
																			{
																				"name": "headStart",
																				"nativeSrc": "1139:9:14",
																				"nodeType": "YulIdentifier",
																				"src": "1139:9:14"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "1126:3:14",
																			"nodeType": "YulIdentifier",
																			"src": "1126:3:14"
																		},
																		"nativeSrc": "1126:23:14",
																		"nodeType": "YulFunctionCall",
																		"src": "1126:23:14"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "1151:2:14",
																		"nodeType": "YulLiteral",
																		"src": "1151:2:14",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nativeSrc": "1122:3:14",
																	"nodeType": "YulIdentifier",
																	"src": "1122:3:14"
																},
																"nativeSrc": "1122:32:14",
																"nodeType": "YulFunctionCall",
																"src": "1122:32:14"
															},
															"nativeSrc": "1119:52:14",
															"nodeType": "YulIf",
															"src": "1119:52:14"
														},
														{
															"nativeSrc": "1180:30:14",
															"nodeType": "YulVariableDeclaration",
															"src": "1180:30:14",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "1200:9:14",
																		"nodeType": "YulIdentifier",
																		"src": "1200:9:14"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nativeSrc": "1194:5:14",
																	"nodeType": "YulIdentifier",
																	"src": "1194:5:14"
																},
																"nativeSrc": "1194:16:14",
																"nodeType": "YulFunctionCall",
																"src": "1194:16:14"
															},
															"variables": [
																{
																	"name": "offset",
																	"nativeSrc": "1184:6:14",
																	"nodeType": "YulTypedName",
																	"src": "1184:6:14",
																	"type": ""
																}
															]
														},
														{
															"nativeSrc": "1219:28:14",
															"nodeType": "YulVariableDeclaration",
															"src": "1219:28:14",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"kind": "number",
																				"nativeSrc": "1237:2:14",
																				"nodeType": "YulLiteral",
																				"src": "1237:2:14",
																				"type": "",
																				"value": "64"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "1241:1:14",
																				"nodeType": "YulLiteral",
																				"src": "1241:1:14",
																				"type": "",
																				"value": "1"
																			}
																		],
																		"functionName": {
																			"name": "shl",
																			"nativeSrc": "1233:3:14",
																			"nodeType": "YulIdentifier",
																			"src": "1233:3:14"
																		},
																		"nativeSrc": "1233:10:14",
																		"nodeType": "YulFunctionCall",
																		"src": "1233:10:14"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "1245:1:14",
																		"nodeType": "YulLiteral",
																		"src": "1245:1:14",
																		"type": "",
																		"value": "1"
																	}
																],
																"functionName": {
																	"name": "sub",
																	"nativeSrc": "1229:3:14",
																	"nodeType": "YulIdentifier",
																	"src": "1229:3:14"
																},
																"nativeSrc": "1229:18:14",
																"nodeType": "YulFunctionCall",
																"src": "1229:18:14"
															},
															"variables": [
																{
																	"name": "_1",
																	"nativeSrc": "1223:2:14",
																	"nodeType": "YulTypedName",
																	"src": "1223:2:14",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nativeSrc": "1274:16:14",
																"nodeType": "YulBlock",
																"src": "1274:16:14",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nativeSrc": "1283:1:14",
																					"nodeType": "YulLiteral",
																					"src": "1283:1:14",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "1286:1:14",
																					"nodeType": "YulLiteral",
																					"src": "1286:1:14",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nativeSrc": "1276:6:14",
																				"nodeType": "YulIdentifier",
																				"src": "1276:6:14"
																			},
																			"nativeSrc": "1276:12:14",
																			"nodeType": "YulFunctionCall",
																			"src": "1276:12:14"
																		},
																		"nativeSrc": "1276:12:14",
																		"nodeType": "YulExpressionStatement",
																		"src": "1276:12:14"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "offset",
																		"nativeSrc": "1262:6:14",
																		"nodeType": "YulIdentifier",
																		"src": "1262:6:14"
																	},
																	{
																		"name": "_1",
																		"nativeSrc": "1270:2:14",
																		"nodeType": "YulIdentifier",
																		"src": "1270:2:14"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nativeSrc": "1259:2:14",
																	"nodeType": "YulIdentifier",
																	"src": "1259:2:14"
																},
																"nativeSrc": "1259:14:14",
																"nodeType": "YulFunctionCall",
																"src": "1259:14:14"
															},
															"nativeSrc": "1256:34:14",
															"nodeType": "YulIf",
															"src": "1256:34:14"
														},
														{
															"nativeSrc": "1299:71:14",
															"nodeType": "YulAssignment",
															"src": "1299:71:14",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "1342:9:14",
																				"nodeType": "YulIdentifier",
																				"src": "1342:9:14"
																			},
																			{
																				"name": "offset",
																				"nativeSrc": "1353:6:14",
																				"nodeType": "YulIdentifier",
																				"src": "1353:6:14"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "1338:3:14",
																			"nodeType": "YulIdentifier",
																			"src": "1338:3:14"
																		},
																		"nativeSrc": "1338:22:14",
																		"nodeType": "YulFunctionCall",
																		"src": "1338:22:14"
																	},
																	{
																		"name": "dataEnd",
																		"nativeSrc": "1362:7:14",
																		"nodeType": "YulIdentifier",
																		"src": "1362:7:14"
																	}
																],
																"functionName": {
																	"name": "abi_decode_string_fromMemory",
																	"nativeSrc": "1309:28:14",
																	"nodeType": "YulIdentifier",
																	"src": "1309:28:14"
																},
																"nativeSrc": "1309:61:14",
																"nodeType": "YulFunctionCall",
																"src": "1309:61:14"
															},
															"variableNames": [
																{
																	"name": "value0",
																	"nativeSrc": "1299:6:14",
																	"nodeType": "YulIdentifier",
																	"src": "1299:6:14"
																}
															]
														},
														{
															"nativeSrc": "1379:41:14",
															"nodeType": "YulVariableDeclaration",
															"src": "1379:41:14",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "1405:9:14",
																				"nodeType": "YulIdentifier",
																				"src": "1405:9:14"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "1416:2:14",
																				"nodeType": "YulLiteral",
																				"src": "1416:2:14",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "1401:3:14",
																			"nodeType": "YulIdentifier",
																			"src": "1401:3:14"
																		},
																		"nativeSrc": "1401:18:14",
																		"nodeType": "YulFunctionCall",
																		"src": "1401:18:14"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nativeSrc": "1395:5:14",
																	"nodeType": "YulIdentifier",
																	"src": "1395:5:14"
																},
																"nativeSrc": "1395:25:14",
																"nodeType": "YulFunctionCall",
																"src": "1395:25:14"
															},
															"variables": [
																{
																	"name": "offset_1",
																	"nativeSrc": "1383:8:14",
																	"nodeType": "YulTypedName",
																	"src": "1383:8:14",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nativeSrc": "1449:16:14",
																"nodeType": "YulBlock",
																"src": "1449:16:14",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nativeSrc": "1458:1:14",
																					"nodeType": "YulLiteral",
																					"src": "1458:1:14",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "1461:1:14",
																					"nodeType": "YulLiteral",
																					"src": "1461:1:14",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nativeSrc": "1451:6:14",
																				"nodeType": "YulIdentifier",
																				"src": "1451:6:14"
																			},
																			"nativeSrc": "1451:12:14",
																			"nodeType": "YulFunctionCall",
																			"src": "1451:12:14"
																		},
																		"nativeSrc": "1451:12:14",
																		"nodeType": "YulExpressionStatement",
																		"src": "1451:12:14"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "offset_1",
																		"nativeSrc": "1435:8:14",
																		"nodeType": "YulIdentifier",
																		"src": "1435:8:14"
																	},
																	{
																		"name": "_1",
																		"nativeSrc": "1445:2:14",
																		"nodeType": "YulIdentifier",
																		"src": "1445:2:14"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nativeSrc": "1432:2:14",
																	"nodeType": "YulIdentifier",
																	"src": "1432:2:14"
																},
																"nativeSrc": "1432:16:14",
																"nodeType": "YulFunctionCall",
																"src": "1432:16:14"
															},
															"nativeSrc": "1429:36:14",
															"nodeType": "YulIf",
															"src": "1429:36:14"
														},
														{
															"nativeSrc": "1474:73:14",
															"nodeType": "YulAssignment",
															"src": "1474:73:14",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "1517:9:14",
																				"nodeType": "YulIdentifier",
																				"src": "1517:9:14"
																			},
																			{
																				"name": "offset_1",
																				"nativeSrc": "1528:8:14",
																				"nodeType": "YulIdentifier",
																				"src": "1528:8:14"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "1513:3:14",
																			"nodeType": "YulIdentifier",
																			"src": "1513:3:14"
																		},
																		"nativeSrc": "1513:24:14",
																		"nodeType": "YulFunctionCall",
																		"src": "1513:24:14"
																	},
																	{
																		"name": "dataEnd",
																		"nativeSrc": "1539:7:14",
																		"nodeType": "YulIdentifier",
																		"src": "1539:7:14"
																	}
																],
																"functionName": {
																	"name": "abi_decode_string_fromMemory",
																	"nativeSrc": "1484:28:14",
																	"nodeType": "YulIdentifier",
																	"src": "1484:28:14"
																},
																"nativeSrc": "1484:63:14",
																"nodeType": "YulFunctionCall",
																"src": "1484:63:14"
															},
															"variableNames": [
																{
																	"name": "value1",
																	"nativeSrc": "1474:6:14",
																	"nodeType": "YulIdentifier",
																	"src": "1474:6:14"
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_string_memory_ptrt_string_memory_ptr_fromMemory",
												"nativeSrc": "991:562:14",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "1067:9:14",
														"nodeType": "YulTypedName",
														"src": "1067:9:14",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nativeSrc": "1078:7:14",
														"nodeType": "YulTypedName",
														"src": "1078:7:14",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nativeSrc": "1090:6:14",
														"nodeType": "YulTypedName",
														"src": "1090:6:14",
														"type": ""
													},
													{
														"name": "value1",
														"nativeSrc": "1098:6:14",
														"nodeType": "YulTypedName",
														"src": "1098:6:14",
														"type": ""
													}
												],
												"src": "991:562:14"
											},
											{
												"body": {
													"nativeSrc": "1613:325:14",
													"nodeType": "YulBlock",
													"src": "1613:325:14",
													"statements": [
														{
															"nativeSrc": "1623:22:14",
															"nodeType": "YulAssignment",
															"src": "1623:22:14",
															"value": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "1637:1:14",
																		"nodeType": "YulLiteral",
																		"src": "1637:1:14",
																		"type": "",
																		"value": "1"
																	},
																	{
																		"name": "data",
																		"nativeSrc": "1640:4:14",
																		"nodeType": "YulIdentifier",
																		"src": "1640:4:14"
																	}
																],
																"functionName": {
																	"name": "shr",
																	"nativeSrc": "1633:3:14",
																	"nodeType": "YulIdentifier",
																	"src": "1633:3:14"
																},
																"nativeSrc": "1633:12:14",
																"nodeType": "YulFunctionCall",
																"src": "1633:12:14"
															},
															"variableNames": [
																{
																	"name": "length",
																	"nativeSrc": "1623:6:14",
																	"nodeType": "YulIdentifier",
																	"src": "1623:6:14"
																}
															]
														},
														{
															"nativeSrc": "1654:38:14",
															"nodeType": "YulVariableDeclaration",
															"src": "1654:38:14",
															"value": {
																"arguments": [
																	{
																		"name": "data",
																		"nativeSrc": "1684:4:14",
																		"nodeType": "YulIdentifier",
																		"src": "1684:4:14"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "1690:1:14",
																		"nodeType": "YulLiteral",
																		"src": "1690:1:14",
																		"type": "",
																		"value": "1"
																	}
																],
																"functionName": {
																	"name": "and",
																	"nativeSrc": "1680:3:14",
																	"nodeType": "YulIdentifier",
																	"src": "1680:3:14"
																},
																"nativeSrc": "1680:12:14",
																"nodeType": "YulFunctionCall",
																"src": "1680:12:14"
															},
															"variables": [
																{
																	"name": "outOfPlaceEncoding",
																	"nativeSrc": "1658:18:14",
																	"nodeType": "YulTypedName",
																	"src": "1658:18:14",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nativeSrc": "1731:31:14",
																"nodeType": "YulBlock",
																"src": "1731:31:14",
																"statements": [
																	{
																		"nativeSrc": "1733:27:14",
																		"nodeType": "YulAssignment",
																		"src": "1733:27:14",
																		"value": {
																			"arguments": [
																				{
																					"name": "length",
																					"nativeSrc": "1747:6:14",
																					"nodeType": "YulIdentifier",
																					"src": "1747:6:14"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "1755:4:14",
																					"nodeType": "YulLiteral",
																					"src": "1755:4:14",
																					"type": "",
																					"value": "0x7f"
																				}
																			],
																			"functionName": {
																				"name": "and",
																				"nativeSrc": "1743:3:14",
																				"nodeType": "YulIdentifier",
																				"src": "1743:3:14"
																			},
																			"nativeSrc": "1743:17:14",
																			"nodeType": "YulFunctionCall",
																			"src": "1743:17:14"
																		},
																		"variableNames": [
																			{
																				"name": "length",
																				"nativeSrc": "1733:6:14",
																				"nodeType": "YulIdentifier",
																				"src": "1733:6:14"
																			}
																		]
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "outOfPlaceEncoding",
																		"nativeSrc": "1711:18:14",
																		"nodeType": "YulIdentifier",
																		"src": "1711:18:14"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nativeSrc": "1704:6:14",
																	"nodeType": "YulIdentifier",
																	"src": "1704:6:14"
																},
																"nativeSrc": "1704:26:14",
																"nodeType": "YulFunctionCall",
																"src": "1704:26:14"
															},
															"nativeSrc": "1701:61:14",
															"nodeType": "YulIf",
															"src": "1701:61:14"
														},
														{
															"body": {
																"nativeSrc": "1821:111:14",
																"nodeType": "YulBlock",
																"src": "1821:111:14",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nativeSrc": "1842:1:14",
																					"nodeType": "YulLiteral",
																					"src": "1842:1:14",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"arguments": [
																						{
																							"kind": "number",
																							"nativeSrc": "1849:3:14",
																							"nodeType": "YulLiteral",
																							"src": "1849:3:14",
																							"type": "",
																							"value": "224"
																						},
																						{
																							"kind": "number",
																							"nativeSrc": "1854:10:14",
																							"nodeType": "YulLiteral",
																							"src": "1854:10:14",
																							"type": "",
																							"value": "0x4e487b71"
																						}
																					],
																					"functionName": {
																						"name": "shl",
																						"nativeSrc": "1845:3:14",
																						"nodeType": "YulIdentifier",
																						"src": "1845:3:14"
																					},
																					"nativeSrc": "1845:20:14",
																					"nodeType": "YulFunctionCall",
																					"src": "1845:20:14"
																				}
																			],
																			"functionName": {
																				"name": "mstore",
																				"nativeSrc": "1835:6:14",
																				"nodeType": "YulIdentifier",
																				"src": "1835:6:14"
																			},
																			"nativeSrc": "1835:31:14",
																			"nodeType": "YulFunctionCall",
																			"src": "1835:31:14"
																		},
																		"nativeSrc": "1835:31:14",
																		"nodeType": "YulExpressionStatement",
																		"src": "1835:31:14"
																	},
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nativeSrc": "1886:1:14",
																					"nodeType": "YulLiteral",
																					"src": "1886:1:14",
																					"type": "",
																					"value": "4"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "1889:4:14",
																					"nodeType": "YulLiteral",
																					"src": "1889:4:14",
																					"type": "",
																					"value": "0x22"
																				}
																			],
																			"functionName": {
																				"name": "mstore",
																				"nativeSrc": "1879:6:14",
																				"nodeType": "YulIdentifier",
																				"src": "1879:6:14"
																			},
																			"nativeSrc": "1879:15:14",
																			"nodeType": "YulFunctionCall",
																			"src": "1879:15:14"
																		},
																		"nativeSrc": "1879:15:14",
																		"nodeType": "YulExpressionStatement",
																		"src": "1879:15:14"
																	},
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nativeSrc": "1914:1:14",
																					"nodeType": "YulLiteral",
																					"src": "1914:1:14",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "1917:4:14",
																					"nodeType": "YulLiteral",
																					"src": "1917:4:14",
																					"type": "",
																					"value": "0x24"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nativeSrc": "1907:6:14",
																				"nodeType": "YulIdentifier",
																				"src": "1907:6:14"
																			},
																			"nativeSrc": "1907:15:14",
																			"nodeType": "YulFunctionCall",
																			"src": "1907:15:14"
																		},
																		"nativeSrc": "1907:15:14",
																		"nodeType": "YulExpressionStatement",
																		"src": "1907:15:14"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "outOfPlaceEncoding",
																		"nativeSrc": "1777:18:14",
																		"nodeType": "YulIdentifier",
																		"src": "1777:18:14"
																	},
																	{
																		"arguments": [
																			{
																				"name": "length",
																				"nativeSrc": "1800:6:14",
																				"nodeType": "YulIdentifier",
																				"src": "1800:6:14"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "1808:2:14",
																				"nodeType": "YulLiteral",
																				"src": "1808:2:14",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "lt",
																			"nativeSrc": "1797:2:14",
																			"nodeType": "YulIdentifier",
																			"src": "1797:2:14"
																		},
																		"nativeSrc": "1797:14:14",
																		"nodeType": "YulFunctionCall",
																		"src": "1797:14:14"
																	}
																],
																"functionName": {
																	"name": "eq",
																	"nativeSrc": "1774:2:14",
																	"nodeType": "YulIdentifier",
																	"src": "1774:2:14"
																},
																"nativeSrc": "1774:38:14",
																"nodeType": "YulFunctionCall",
																"src": "1774:38:14"
															},
															"nativeSrc": "1771:161:14",
															"nodeType": "YulIf",
															"src": "1771:161:14"
														}
													]
												},
												"name": "extract_byte_array_length",
												"nativeSrc": "1558:380:14",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "data",
														"nativeSrc": "1593:4:14",
														"nodeType": "YulTypedName",
														"src": "1593:4:14",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "length",
														"nativeSrc": "1602:6:14",
														"nodeType": "YulTypedName",
														"src": "1602:6:14",
														"type": ""
													}
												],
												"src": "1558:380:14"
											},
											{
												"body": {
													"nativeSrc": "1999:65:14",
													"nodeType": "YulBlock",
													"src": "1999:65:14",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "2016:1:14",
																		"nodeType": "YulLiteral",
																		"src": "2016:1:14",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"name": "ptr",
																		"nativeSrc": "2019:3:14",
																		"nodeType": "YulIdentifier",
																		"src": "2019:3:14"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "2009:6:14",
																	"nodeType": "YulIdentifier",
																	"src": "2009:6:14"
																},
																"nativeSrc": "2009:14:14",
																"nodeType": "YulFunctionCall",
																"src": "2009:14:14"
															},
															"nativeSrc": "2009:14:14",
															"nodeType": "YulExpressionStatement",
															"src": "2009:14:14"
														},
														{
															"nativeSrc": "2032:26:14",
															"nodeType": "YulAssignment",
															"src": "2032:26:14",
															"value": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "2050:1:14",
																		"nodeType": "YulLiteral",
																		"src": "2050:1:14",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "2053:4:14",
																		"nodeType": "YulLiteral",
																		"src": "2053:4:14",
																		"type": "",
																		"value": "0x20"
																	}
																],
																"functionName": {
																	"name": "keccak256",
																	"nativeSrc": "2040:9:14",
																	"nodeType": "YulIdentifier",
																	"src": "2040:9:14"
																},
																"nativeSrc": "2040:18:14",
																"nodeType": "YulFunctionCall",
																"src": "2040:18:14"
															},
															"variableNames": [
																{
																	"name": "data",
																	"nativeSrc": "2032:4:14",
																	"nodeType": "YulIdentifier",
																	"src": "2032:4:14"
																}
															]
														}
													]
												},
												"name": "array_dataslot_string_storage",
												"nativeSrc": "1943:121:14",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "ptr",
														"nativeSrc": "1982:3:14",
														"nodeType": "YulTypedName",
														"src": "1982:3:14",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "data",
														"nativeSrc": "1990:4:14",
														"nodeType": "YulTypedName",
														"src": "1990:4:14",
														"type": ""
													}
												],
												"src": "1943:121:14"
											},
											{
												"body": {
													"nativeSrc": "2150:464:14",
													"nodeType": "YulBlock",
													"src": "2150:464:14",
													"statements": [
														{
															"body": {
																"nativeSrc": "2183:425:14",
																"nodeType": "YulBlock",
																"src": "2183:425:14",
																"statements": [
																	{
																		"nativeSrc": "2197:11:14",
																		"nodeType": "YulVariableDeclaration",
																		"src": "2197:11:14",
																		"value": {
																			"kind": "number",
																			"nativeSrc": "2207:1:14",
																			"nodeType": "YulLiteral",
																			"src": "2207:1:14",
																			"type": "",
																			"value": "0"
																		},
																		"variables": [
																			{
																				"name": "_1",
																				"nativeSrc": "2201:2:14",
																				"nodeType": "YulTypedName",
																				"src": "2201:2:14",
																				"type": ""
																			}
																		]
																	},
																	{
																		"expression": {
																			"arguments": [
																				{
																					"name": "_1",
																					"nativeSrc": "2228:2:14",
																					"nodeType": "YulIdentifier",
																					"src": "2228:2:14"
																				},
																				{
																					"name": "array",
																					"nativeSrc": "2232:5:14",
																					"nodeType": "YulIdentifier",
																					"src": "2232:5:14"
																				}
																			],
																			"functionName": {
																				"name": "mstore",
																				"nativeSrc": "2221:6:14",
																				"nodeType": "YulIdentifier",
																				"src": "2221:6:14"
																			},
																			"nativeSrc": "2221:17:14",
																			"nodeType": "YulFunctionCall",
																			"src": "2221:17:14"
																		},
																		"nativeSrc": "2221:17:14",
																		"nodeType": "YulExpressionStatement",
																		"src": "2221:17:14"
																	},
																	{
																		"nativeSrc": "2251:31:14",
																		"nodeType": "YulVariableDeclaration",
																		"src": "2251:31:14",
																		"value": {
																			"arguments": [
																				{
																					"name": "_1",
																					"nativeSrc": "2273:2:14",
																					"nodeType": "YulIdentifier",
																					"src": "2273:2:14"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "2277:4:14",
																					"nodeType": "YulLiteral",
																					"src": "2277:4:14",
																					"type": "",
																					"value": "0x20"
																				}
																			],
																			"functionName": {
																				"name": "keccak256",
																				"nativeSrc": "2263:9:14",
																				"nodeType": "YulIdentifier",
																				"src": "2263:9:14"
																			},
																			"nativeSrc": "2263:19:14",
																			"nodeType": "YulFunctionCall",
																			"src": "2263:19:14"
																		},
																		"variables": [
																			{
																				"name": "data",
																				"nativeSrc": "2255:4:14",
																				"nodeType": "YulTypedName",
																				"src": "2255:4:14",
																				"type": ""
																			}
																		]
																	},
																	{
																		"nativeSrc": "2295:57:14",
																		"nodeType": "YulVariableDeclaration",
																		"src": "2295:57:14",
																		"value": {
																			"arguments": [
																				{
																					"name": "data",
																					"nativeSrc": "2318:4:14",
																					"nodeType": "YulIdentifier",
																					"src": "2318:4:14"
																				},
																				{
																					"arguments": [
																						{
																							"kind": "number",
																							"nativeSrc": "2328:1:14",
																							"nodeType": "YulLiteral",
																							"src": "2328:1:14",
																							"type": "",
																							"value": "5"
																						},
																						{
																							"arguments": [
																								{
																									"name": "startIndex",
																									"nativeSrc": "2335:10:14",
																									"nodeType": "YulIdentifier",
																									"src": "2335:10:14"
																								},
																								{
																									"kind": "number",
																									"nativeSrc": "2347:2:14",
																									"nodeType": "YulLiteral",
																									"src": "2347:2:14",
																									"type": "",
																									"value": "31"
																								}
																							],
																							"functionName": {
																								"name": "add",
																								"nativeSrc": "2331:3:14",
																								"nodeType": "YulIdentifier",
																								"src": "2331:3:14"
																							},
																							"nativeSrc": "2331:19:14",
																							"nodeType": "YulFunctionCall",
																							"src": "2331:19:14"
																						}
																					],
																					"functionName": {
																						"name": "shr",
																						"nativeSrc": "2324:3:14",
																						"nodeType": "YulIdentifier",
																						"src": "2324:3:14"
																					},
																					"nativeSrc": "2324:27:14",
																					"nodeType": "YulFunctionCall",
																					"src": "2324:27:14"
																				}
																			],
																			"functionName": {
																				"name": "add",
																				"nativeSrc": "2314:3:14",
																				"nodeType": "YulIdentifier",
																				"src": "2314:3:14"
																			},
																			"nativeSrc": "2314:38:14",
																			"nodeType": "YulFunctionCall",
																			"src": "2314:38:14"
																		},
																		"variables": [
																			{
																				"name": "deleteStart",
																				"nativeSrc": "2299:11:14",
																				"nodeType": "YulTypedName",
																				"src": "2299:11:14",
																				"type": ""
																			}
																		]
																	},
																	{
																		"body": {
																			"nativeSrc": "2389:23:14",
																			"nodeType": "YulBlock",
																			"src": "2389:23:14",
																			"statements": [
																				{
																					"nativeSrc": "2391:19:14",
																					"nodeType": "YulAssignment",
																					"src": "2391:19:14",
																					"value": {
																						"name": "data",
																						"nativeSrc": "2406:4:14",
																						"nodeType": "YulIdentifier",
																						"src": "2406:4:14"
																					},
																					"variableNames": [
																						{
																							"name": "deleteStart",
																							"nativeSrc": "2391:11:14",
																							"nodeType": "YulIdentifier",
																							"src": "2391:11:14"
																						}
																					]
																				}
																			]
																		},
																		"condition": {
																			"arguments": [
																				{
																					"name": "startIndex",
																					"nativeSrc": "2371:10:14",
																					"nodeType": "YulIdentifier",
																					"src": "2371:10:14"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "2383:4:14",
																					"nodeType": "YulLiteral",
																					"src": "2383:4:14",
																					"type": "",
																					"value": "0x20"
																				}
																			],
																			"functionName": {
																				"name": "lt",
																				"nativeSrc": "2368:2:14",
																				"nodeType": "YulIdentifier",
																				"src": "2368:2:14"
																			},
																			"nativeSrc": "2368:20:14",
																			"nodeType": "YulFunctionCall",
																			"src": "2368:20:14"
																		},
																		"nativeSrc": "2365:47:14",
																		"nodeType": "YulIf",
																		"src": "2365:47:14"
																	},
																	{
																		"nativeSrc": "2425:41:14",
																		"nodeType": "YulVariableDeclaration",
																		"src": "2425:41:14",
																		"value": {
																			"arguments": [
																				{
																					"name": "data",
																					"nativeSrc": "2439:4:14",
																					"nodeType": "YulIdentifier",
																					"src": "2439:4:14"
																				},
																				{
																					"arguments": [
																						{
																							"kind": "number",
																							"nativeSrc": "2449:1:14",
																							"nodeType": "YulLiteral",
																							"src": "2449:1:14",
																							"type": "",
																							"value": "5"
																						},
																						{
																							"arguments": [
																								{
																									"name": "len",
																									"nativeSrc": "2456:3:14",
																									"nodeType": "YulIdentifier",
																									"src": "2456:3:14"
																								},
																								{
																									"kind": "number",
																									"nativeSrc": "2461:2:14",
																									"nodeType": "YulLiteral",
																									"src": "2461:2:14",
																									"type": "",
																									"value": "31"
																								}
																							],
																							"functionName": {
																								"name": "add",
																								"nativeSrc": "2452:3:14",
																								"nodeType": "YulIdentifier",
																								"src": "2452:3:14"
																							},
																							"nativeSrc": "2452:12:14",
																							"nodeType": "YulFunctionCall",
																							"src": "2452:12:14"
																						}
																					],
																					"functionName": {
																						"name": "shr",
																						"nativeSrc": "2445:3:14",
																						"nodeType": "YulIdentifier",
																						"src": "2445:3:14"
																					},
																					"nativeSrc": "2445:20:14",
																					"nodeType": "YulFunctionCall",
																					"src": "2445:20:14"
																				}
																			],
																			"functionName": {
																				"name": "add",
																				"nativeSrc": "2435:3:14",
																				"nodeType": "YulIdentifier",
																				"src": "2435:3:14"
																			},
																			"nativeSrc": "2435:31:14",
																			"nodeType": "YulFunctionCall",
																			"src": "2435:31:14"
																		},
																		"variables": [
																			{
																				"name": "_2",
																				"nativeSrc": "2429:2:14",
																				"nodeType": "YulTypedName",
																				"src": "2429:2:14",
																				"type": ""
																			}
																		]
																	},
																	{
																		"nativeSrc": "2479:24:14",
																		"nodeType": "YulVariableDeclaration",
																		"src": "2479:24:14",
																		"value": {
																			"name": "deleteStart",
																			"nativeSrc": "2492:11:14",
																			"nodeType": "YulIdentifier",
																			"src": "2492:11:14"
																		},
																		"variables": [
																			{
																				"name": "start",
																				"nativeSrc": "2483:5:14",
																				"nodeType": "YulTypedName",
																				"src": "2483:5:14",
																				"type": ""
																			}
																		]
																	},
																	{
																		"body": {
																			"nativeSrc": "2577:21:14",
																			"nodeType": "YulBlock",
																			"src": "2577:21:14",
																			"statements": [
																				{
																					"expression": {
																						"arguments": [
																							{
																								"name": "start",
																								"nativeSrc": "2586:5:14",
																								"nodeType": "YulIdentifier",
																								"src": "2586:5:14"
																							},
																							{
																								"name": "_1",
																								"nativeSrc": "2593:2:14",
																								"nodeType": "YulIdentifier",
																								"src": "2593:2:14"
																							}
																						],
																						"functionName": {
																							"name": "sstore",
																							"nativeSrc": "2579:6:14",
																							"nodeType": "YulIdentifier",
																							"src": "2579:6:14"
																						},
																						"nativeSrc": "2579:17:14",
																						"nodeType": "YulFunctionCall",
																						"src": "2579:17:14"
																					},
																					"nativeSrc": "2579:17:14",
																					"nodeType": "YulExpressionStatement",
																					"src": "2579:17:14"
																				}
																			]
																		},
																		"condition": {
																			"arguments": [
																				{
																					"name": "start",
																					"nativeSrc": "2527:5:14",
																					"nodeType": "YulIdentifier",
																					"src": "2527:5:14"
																				},
																				{
																					"name": "_2",
																					"nativeSrc": "2534:2:14",
																					"nodeType": "YulIdentifier",
																					"src": "2534:2:14"
																				}
																			],
																			"functionName": {
																				"name": "lt",
																				"nativeSrc": "2524:2:14",
																				"nodeType": "YulIdentifier",
																				"src": "2524:2:14"
																			},
																			"nativeSrc": "2524:13:14",
																			"nodeType": "YulFunctionCall",
																			"src": "2524:13:14"
																		},
																		"nativeSrc": "2516:82:14",
																		"nodeType": "YulForLoop",
																		"post": {
																			"nativeSrc": "2538:26:14",
																			"nodeType": "YulBlock",
																			"src": "2538:26:14",
																			"statements": [
																				{
																					"nativeSrc": "2540:22:14",
																					"nodeType": "YulAssignment",
																					"src": "2540:22:14",
																					"value": {
																						"arguments": [
																							{
																								"name": "start",
																								"nativeSrc": "2553:5:14",
																								"nodeType": "YulIdentifier",
																								"src": "2553:5:14"
																							},
																							{
																								"kind": "number",
																								"nativeSrc": "2560:1:14",
																								"nodeType": "YulLiteral",
																								"src": "2560:1:14",
																								"type": "",
																								"value": "1"
																							}
																						],
																						"functionName": {
																							"name": "add",
																							"nativeSrc": "2549:3:14",
																							"nodeType": "YulIdentifier",
																							"src": "2549:3:14"
																						},
																						"nativeSrc": "2549:13:14",
																						"nodeType": "YulFunctionCall",
																						"src": "2549:13:14"
																					},
																					"variableNames": [
																						{
																							"name": "start",
																							"nativeSrc": "2540:5:14",
																							"nodeType": "YulIdentifier",
																							"src": "2540:5:14"
																						}
																					]
																				}
																			]
																		},
																		"pre": {
																			"nativeSrc": "2520:3:14",
																			"nodeType": "YulBlock",
																			"src": "2520:3:14",
																			"statements": []
																		},
																		"src": "2516:82:14"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "len",
																		"nativeSrc": "2166:3:14",
																		"nodeType": "YulIdentifier",
																		"src": "2166:3:14"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "2171:2:14",
																		"nodeType": "YulLiteral",
																		"src": "2171:2:14",
																		"type": "",
																		"value": "31"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nativeSrc": "2163:2:14",
																	"nodeType": "YulIdentifier",
																	"src": "2163:2:14"
																},
																"nativeSrc": "2163:11:14",
																"nodeType": "YulFunctionCall",
																"src": "2163:11:14"
															},
															"nativeSrc": "2160:448:14",
															"nodeType": "YulIf",
															"src": "2160:448:14"
														}
													]
												},
												"name": "clean_up_bytearray_end_slots_string_storage",
												"nativeSrc": "2069:545:14",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "array",
														"nativeSrc": "2122:5:14",
														"nodeType": "YulTypedName",
														"src": "2122:5:14",
														"type": ""
													},
													{
														"name": "len",
														"nativeSrc": "2129:3:14",
														"nodeType": "YulTypedName",
														"src": "2129:3:14",
														"type": ""
													},
													{
														"name": "startIndex",
														"nativeSrc": "2134:10:14",
														"nodeType": "YulTypedName",
														"src": "2134:10:14",
														"type": ""
													}
												],
												"src": "2069:545:14"
											},
											{
												"body": {
													"nativeSrc": "2704:81:14",
													"nodeType": "YulBlock",
													"src": "2704:81:14",
													"statements": [
														{
															"nativeSrc": "2714:65:14",
															"nodeType": "YulAssignment",
															"src": "2714:65:14",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "data",
																				"nativeSrc": "2729:4:14",
																				"nodeType": "YulIdentifier",
																				"src": "2729:4:14"
																			},
																			{
																				"arguments": [
																					{
																						"arguments": [
																							{
																								"arguments": [
																									{
																										"kind": "number",
																										"nativeSrc": "2747:1:14",
																										"nodeType": "YulLiteral",
																										"src": "2747:1:14",
																										"type": "",
																										"value": "3"
																									},
																									{
																										"name": "len",
																										"nativeSrc": "2750:3:14",
																										"nodeType": "YulIdentifier",
																										"src": "2750:3:14"
																									}
																								],
																								"functionName": {
																									"name": "shl",
																									"nativeSrc": "2743:3:14",
																									"nodeType": "YulIdentifier",
																									"src": "2743:3:14"
																								},
																								"nativeSrc": "2743:11:14",
																								"nodeType": "YulFunctionCall",
																								"src": "2743:11:14"
																							},
																							{
																								"arguments": [
																									{
																										"kind": "number",
																										"nativeSrc": "2760:1:14",
																										"nodeType": "YulLiteral",
																										"src": "2760:1:14",
																										"type": "",
																										"value": "0"
																									}
																								],
																								"functionName": {
																									"name": "not",
																									"nativeSrc": "2756:3:14",
																									"nodeType": "YulIdentifier",
																									"src": "2756:3:14"
																								},
																								"nativeSrc": "2756:6:14",
																								"nodeType": "YulFunctionCall",
																								"src": "2756:6:14"
																							}
																						],
																						"functionName": {
																							"name": "shr",
																							"nativeSrc": "2739:3:14",
																							"nodeType": "YulIdentifier",
																							"src": "2739:3:14"
																						},
																						"nativeSrc": "2739:24:14",
																						"nodeType": "YulFunctionCall",
																						"src": "2739:24:14"
																					}
																				],
																				"functionName": {
																					"name": "not",
																					"nativeSrc": "2735:3:14",
																					"nodeType": "YulIdentifier",
																					"src": "2735:3:14"
																				},
																				"nativeSrc": "2735:29:14",
																				"nodeType": "YulFunctionCall",
																				"src": "2735:29:14"
																			}
																		],
																		"functionName": {
																			"name": "and",
																			"nativeSrc": "2725:3:14",
																			"nodeType": "YulIdentifier",
																			"src": "2725:3:14"
																		},
																		"nativeSrc": "2725:40:14",
																		"nodeType": "YulFunctionCall",
																		"src": "2725:40:14"
																	},
																	{
																		"arguments": [
																			{
																				"kind": "number",
																				"nativeSrc": "2771:1:14",
																				"nodeType": "YulLiteral",
																				"src": "2771:1:14",
																				"type": "",
																				"value": "1"
																			},
																			{
																				"name": "len",
																				"nativeSrc": "2774:3:14",
																				"nodeType": "YulIdentifier",
																				"src": "2774:3:14"
																			}
																		],
																		"functionName": {
																			"name": "shl",
																			"nativeSrc": "2767:3:14",
																			"nodeType": "YulIdentifier",
																			"src": "2767:3:14"
																		},
																		"nativeSrc": "2767:11:14",
																		"nodeType": "YulFunctionCall",
																		"src": "2767:11:14"
																	}
																],
																"functionName": {
																	"name": "or",
																	"nativeSrc": "2722:2:14",
																	"nodeType": "YulIdentifier",
																	"src": "2722:2:14"
																},
																"nativeSrc": "2722:57:14",
																"nodeType": "YulFunctionCall",
																"src": "2722:57:14"
															},
															"variableNames": [
																{
																	"name": "used",
																	"nativeSrc": "2714:4:14",
																	"nodeType": "YulIdentifier",
																	"src": "2714:4:14"
																}
															]
														}
													]
												},
												"name": "extract_used_part_and_set_length_of_short_byte_array",
												"nativeSrc": "2619:166:14",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "data",
														"nativeSrc": "2681:4:14",
														"nodeType": "YulTypedName",
														"src": "2681:4:14",
														"type": ""
													},
													{
														"name": "len",
														"nativeSrc": "2687:3:14",
														"nodeType": "YulTypedName",
														"src": "2687:3:14",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "used",
														"nativeSrc": "2695:4:14",
														"nodeType": "YulTypedName",
														"src": "2695:4:14",
														"type": ""
													}
												],
												"src": "2619:166:14"
											},
											{
												"body": {
													"nativeSrc": "2886:1256:14",
													"nodeType": "YulBlock",
													"src": "2886:1256:14",
													"statements": [
														{
															"nativeSrc": "2896:24:14",
															"nodeType": "YulVariableDeclaration",
															"src": "2896:24:14",
															"value": {
																"arguments": [
																	{
																		"name": "src",
																		"nativeSrc": "2916:3:14",
																		"nodeType": "YulIdentifier",
																		"src": "2916:3:14"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nativeSrc": "2910:5:14",
																	"nodeType": "YulIdentifier",
																	"src": "2910:5:14"
																},
																"nativeSrc": "2910:10:14",
																"nodeType": "YulFunctionCall",
																"src": "2910:10:14"
															},
															"variables": [
																{
																	"name": "newLen",
																	"nativeSrc": "2900:6:14",
																	"nodeType": "YulTypedName",
																	"src": "2900:6:14",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nativeSrc": "2963:22:14",
																"nodeType": "YulBlock",
																"src": "2963:22:14",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "panic_error_0x41",
																				"nativeSrc": "2965:16:14",
																				"nodeType": "YulIdentifier",
																				"src": "2965:16:14"
																			},
																			"nativeSrc": "2965:18:14",
																			"nodeType": "YulFunctionCall",
																			"src": "2965:18:14"
																		},
																		"nativeSrc": "2965:18:14",
																		"nodeType": "YulExpressionStatement",
																		"src": "2965:18:14"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "newLen",
																		"nativeSrc": "2935:6:14",
																		"nodeType": "YulIdentifier",
																		"src": "2935:6:14"
																	},
																	{
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"kind": "number",
																						"nativeSrc": "2951:2:14",
																						"nodeType": "YulLiteral",
																						"src": "2951:2:14",
																						"type": "",
																						"value": "64"
																					},
																					{
																						"kind": "number",
																						"nativeSrc": "2955:1:14",
																						"nodeType": "YulLiteral",
																						"src": "2955:1:14",
																						"type": "",
																						"value": "1"
																					}
																				],
																				"functionName": {
																					"name": "shl",
																					"nativeSrc": "2947:3:14",
																					"nodeType": "YulIdentifier",
																					"src": "2947:3:14"
																				},
																				"nativeSrc": "2947:10:14",
																				"nodeType": "YulFunctionCall",
																				"src": "2947:10:14"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "2959:1:14",
																				"nodeType": "YulLiteral",
																				"src": "2959:1:14",
																				"type": "",
																				"value": "1"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "2943:3:14",
																			"nodeType": "YulIdentifier",
																			"src": "2943:3:14"
																		},
																		"nativeSrc": "2943:18:14",
																		"nodeType": "YulFunctionCall",
																		"src": "2943:18:14"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nativeSrc": "2932:2:14",
																	"nodeType": "YulIdentifier",
																	"src": "2932:2:14"
																},
																"nativeSrc": "2932:30:14",
																"nodeType": "YulFunctionCall",
																"src": "2932:30:14"
															},
															"nativeSrc": "2929:56:14",
															"nodeType": "YulIf",
															"src": "2929:56:14"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "slot",
																		"nativeSrc": "3038:4:14",
																		"nodeType": "YulIdentifier",
																		"src": "3038:4:14"
																	},
																	{
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "slot",
																						"nativeSrc": "3076:4:14",
																						"nodeType": "YulIdentifier",
																						"src": "3076:4:14"
																					}
																				],
																				"functionName": {
																					"name": "sload",
																					"nativeSrc": "3070:5:14",
																					"nodeType": "YulIdentifier",
																					"src": "3070:5:14"
																				},
																				"nativeSrc": "3070:11:14",
																				"nodeType": "YulFunctionCall",
																				"src": "3070:11:14"
																			}
																		],
																		"functionName": {
																			"name": "extract_byte_array_length",
																			"nativeSrc": "3044:25:14",
																			"nodeType": "YulIdentifier",
																			"src": "3044:25:14"
																		},
																		"nativeSrc": "3044:38:14",
																		"nodeType": "YulFunctionCall",
																		"src": "3044:38:14"
																	},
																	{
																		"name": "newLen",
																		"nativeSrc": "3084:6:14",
																		"nodeType": "YulIdentifier",
																		"src": "3084:6:14"
																	}
																],
																"functionName": {
																	"name": "clean_up_bytearray_end_slots_string_storage",
																	"nativeSrc": "2994:43:14",
																	"nodeType": "YulIdentifier",
																	"src": "2994:43:14"
																},
																"nativeSrc": "2994:97:14",
																"nodeType": "YulFunctionCall",
																"src": "2994:97:14"
															},
															"nativeSrc": "2994:97:14",
															"nodeType": "YulExpressionStatement",
															"src": "2994:97:14"
														},
														{
															"nativeSrc": "3100:18:14",
															"nodeType": "YulVariableDeclaration",
															"src": "3100:18:14",
															"value": {
																"kind": "number",
																"nativeSrc": "3117:1:14",
																"nodeType": "YulLiteral",
																"src": "3117:1:14",
																"type": "",
																"value": "0"
															},
															"variables": [
																{
																	"name": "srcOffset",
																	"nativeSrc": "3104:9:14",
																	"nodeType": "YulTypedName",
																	"src": "3104:9:14",
																	"type": ""
																}
															]
														},
														{
															"nativeSrc": "3127:23:14",
															"nodeType": "YulVariableDeclaration",
															"src": "3127:23:14",
															"value": {
																"kind": "number",
																"nativeSrc": "3146:4:14",
																"nodeType": "YulLiteral",
																"src": "3146:4:14",
																"type": "",
																"value": "0x20"
															},
															"variables": [
																{
																	"name": "srcOffset_1",
																	"nativeSrc": "3131:11:14",
																	"nodeType": "YulTypedName",
																	"src": "3131:11:14",
																	"type": ""
																}
															]
														},
														{
															"nativeSrc": "3159:24:14",
															"nodeType": "YulAssignment",
															"src": "3159:24:14",
															"value": {
																"name": "srcOffset_1",
																"nativeSrc": "3172:11:14",
																"nodeType": "YulIdentifier",
																"src": "3172:11:14"
															},
															"variableNames": [
																{
																	"name": "srcOffset",
																	"nativeSrc": "3159:9:14",
																	"nodeType": "YulIdentifier",
																	"src": "3159:9:14"
																}
															]
														},
														{
															"cases": [
																{
																	"body": {
																		"nativeSrc": "3229:656:14",
																		"nodeType": "YulBlock",
																		"src": "3229:656:14",
																		"statements": [
																			{
																				"nativeSrc": "3243:35:14",
																				"nodeType": "YulVariableDeclaration",
																				"src": "3243:35:14",
																				"value": {
																					"arguments": [
																						{
																							"name": "newLen",
																							"nativeSrc": "3262:6:14",
																							"nodeType": "YulIdentifier",
																							"src": "3262:6:14"
																						},
																						{
																							"arguments": [
																								{
																									"kind": "number",
																									"nativeSrc": "3274:2:14",
																									"nodeType": "YulLiteral",
																									"src": "3274:2:14",
																									"type": "",
																									"value": "31"
																								}
																							],
																							"functionName": {
																								"name": "not",
																								"nativeSrc": "3270:3:14",
																								"nodeType": "YulIdentifier",
																								"src": "3270:3:14"
																							},
																							"nativeSrc": "3270:7:14",
																							"nodeType": "YulFunctionCall",
																							"src": "3270:7:14"
																						}
																					],
																					"functionName": {
																						"name": "and",
																						"nativeSrc": "3258:3:14",
																						"nodeType": "YulIdentifier",
																						"src": "3258:3:14"
																					},
																					"nativeSrc": "3258:20:14",
																					"nodeType": "YulFunctionCall",
																					"src": "3258:20:14"
																				},
																				"variables": [
																					{
																						"name": "loopEnd",
																						"nativeSrc": "3247:7:14",
																						"nodeType": "YulTypedName",
																						"src": "3247:7:14",
																						"type": ""
																					}
																				]
																			},
																			{
																				"nativeSrc": "3291:49:14",
																				"nodeType": "YulVariableDeclaration",
																				"src": "3291:49:14",
																				"value": {
																					"arguments": [
																						{
																							"name": "slot",
																							"nativeSrc": "3335:4:14",
																							"nodeType": "YulIdentifier",
																							"src": "3335:4:14"
																						}
																					],
																					"functionName": {
																						"name": "array_dataslot_string_storage",
																						"nativeSrc": "3305:29:14",
																						"nodeType": "YulIdentifier",
																						"src": "3305:29:14"
																					},
																					"nativeSrc": "3305:35:14",
																					"nodeType": "YulFunctionCall",
																					"src": "3305:35:14"
																				},
																				"variables": [
																					{
																						"name": "dstPtr",
																						"nativeSrc": "3295:6:14",
																						"nodeType": "YulTypedName",
																						"src": "3295:6:14",
																						"type": ""
																					}
																				]
																			},
																			{
																				"nativeSrc": "3353:10:14",
																				"nodeType": "YulVariableDeclaration",
																				"src": "3353:10:14",
																				"value": {
																					"kind": "number",
																					"nativeSrc": "3362:1:14",
																					"nodeType": "YulLiteral",
																					"src": "3362:1:14",
																					"type": "",
																					"value": "0"
																				},
																				"variables": [
																					{
																						"name": "i",
																						"nativeSrc": "3357:1:14",
																						"nodeType": "YulTypedName",
																						"src": "3357:1:14",
																						"type": ""
																					}
																				]
																			},
																			{
																				"body": {
																					"nativeSrc": "3440:172:14",
																					"nodeType": "YulBlock",
																					"src": "3440:172:14",
																					"statements": [
																						{
																							"expression": {
																								"arguments": [
																									{
																										"name": "dstPtr",
																										"nativeSrc": "3465:6:14",
																										"nodeType": "YulIdentifier",
																										"src": "3465:6:14"
																									},
																									{
																										"arguments": [
																											{
																												"arguments": [
																													{
																														"name": "src",
																														"nativeSrc": "3483:3:14",
																														"nodeType": "YulIdentifier",
																														"src": "3483:3:14"
																													},
																													{
																														"name": "srcOffset",
																														"nativeSrc": "3488:9:14",
																														"nodeType": "YulIdentifier",
																														"src": "3488:9:14"
																													}
																												],
																												"functionName": {
																													"name": "add",
																													"nativeSrc": "3479:3:14",
																													"nodeType": "YulIdentifier",
																													"src": "3479:3:14"
																												},
																												"nativeSrc": "3479:19:14",
																												"nodeType": "YulFunctionCall",
																												"src": "3479:19:14"
																											}
																										],
																										"functionName": {
																											"name": "mload",
																											"nativeSrc": "3473:5:14",
																											"nodeType": "YulIdentifier",
																											"src": "3473:5:14"
																										},
																										"nativeSrc": "3473:26:14",
																										"nodeType": "YulFunctionCall",
																										"src": "3473:26:14"
																									}
																								],
																								"functionName": {
																									"name": "sstore",
																									"nativeSrc": "3458:6:14",
																									"nodeType": "YulIdentifier",
																									"src": "3458:6:14"
																								},
																								"nativeSrc": "3458:42:14",
																								"nodeType": "YulFunctionCall",
																								"src": "3458:42:14"
																							},
																							"nativeSrc": "3458:42:14",
																							"nodeType": "YulExpressionStatement",
																							"src": "3458:42:14"
																						},
																						{
																							"nativeSrc": "3517:24:14",
																							"nodeType": "YulAssignment",
																							"src": "3517:24:14",
																							"value": {
																								"arguments": [
																									{
																										"name": "dstPtr",
																										"nativeSrc": "3531:6:14",
																										"nodeType": "YulIdentifier",
																										"src": "3531:6:14"
																									},
																									{
																										"kind": "number",
																										"nativeSrc": "3539:1:14",
																										"nodeType": "YulLiteral",
																										"src": "3539:1:14",
																										"type": "",
																										"value": "1"
																									}
																								],
																								"functionName": {
																									"name": "add",
																									"nativeSrc": "3527:3:14",
																									"nodeType": "YulIdentifier",
																									"src": "3527:3:14"
																								},
																								"nativeSrc": "3527:14:14",
																								"nodeType": "YulFunctionCall",
																								"src": "3527:14:14"
																							},
																							"variableNames": [
																								{
																									"name": "dstPtr",
																									"nativeSrc": "3517:6:14",
																									"nodeType": "YulIdentifier",
																									"src": "3517:6:14"
																								}
																							]
																						},
																						{
																							"nativeSrc": "3558:40:14",
																							"nodeType": "YulAssignment",
																							"src": "3558:40:14",
																							"value": {
																								"arguments": [
																									{
																										"name": "srcOffset",
																										"nativeSrc": "3575:9:14",
																										"nodeType": "YulIdentifier",
																										"src": "3575:9:14"
																									},
																									{
																										"name": "srcOffset_1",
																										"nativeSrc": "3586:11:14",
																										"nodeType": "YulIdentifier",
																										"src": "3586:11:14"
																									}
																								],
																								"functionName": {
																									"name": "add",
																									"nativeSrc": "3571:3:14",
																									"nodeType": "YulIdentifier",
																									"src": "3571:3:14"
																								},
																								"nativeSrc": "3571:27:14",
																								"nodeType": "YulFunctionCall",
																								"src": "3571:27:14"
																							},
																							"variableNames": [
																								{
																									"name": "srcOffset",
																									"nativeSrc": "3558:9:14",
																									"nodeType": "YulIdentifier",
																									"src": "3558:9:14"
																								}
																							]
																						}
																					]
																				},
																				"condition": {
																					"arguments": [
																						{
																							"name": "i",
																							"nativeSrc": "3387:1:14",
																							"nodeType": "YulIdentifier",
																							"src": "3387:1:14"
																						},
																						{
																							"name": "loopEnd",
																							"nativeSrc": "3390:7:14",
																							"nodeType": "YulIdentifier",
																							"src": "3390:7:14"
																						}
																					],
																					"functionName": {
																						"name": "lt",
																						"nativeSrc": "3384:2:14",
																						"nodeType": "YulIdentifier",
																						"src": "3384:2:14"
																					},
																					"nativeSrc": "3384:14:14",
																					"nodeType": "YulFunctionCall",
																					"src": "3384:14:14"
																				},
																				"nativeSrc": "3376:236:14",
																				"nodeType": "YulForLoop",
																				"post": {
																					"nativeSrc": "3399:28:14",
																					"nodeType": "YulBlock",
																					"src": "3399:28:14",
																					"statements": [
																						{
																							"nativeSrc": "3401:24:14",
																							"nodeType": "YulAssignment",
																							"src": "3401:24:14",
																							"value": {
																								"arguments": [
																									{
																										"name": "i",
																										"nativeSrc": "3410:1:14",
																										"nodeType": "YulIdentifier",
																										"src": "3410:1:14"
																									},
																									{
																										"name": "srcOffset_1",
																										"nativeSrc": "3413:11:14",
																										"nodeType": "YulIdentifier",
																										"src": "3413:11:14"
																									}
																								],
																								"functionName": {
																									"name": "add",
																									"nativeSrc": "3406:3:14",
																									"nodeType": "YulIdentifier",
																									"src": "3406:3:14"
																								},
																								"nativeSrc": "3406:19:14",
																								"nodeType": "YulFunctionCall",
																								"src": "3406:19:14"
																							},
																							"variableNames": [
																								{
																									"name": "i",
																									"nativeSrc": "3401:1:14",
																									"nodeType": "YulIdentifier",
																									"src": "3401:1:14"
																								}
																							]
																						}
																					]
																				},
																				"pre": {
																					"nativeSrc": "3380:3:14",
																					"nodeType": "YulBlock",
																					"src": "3380:3:14",
																					"statements": []
																				},
																				"src": "3376:236:14"
																			},
																			{
																				"body": {
																					"nativeSrc": "3660:166:14",
																					"nodeType": "YulBlock",
																					"src": "3660:166:14",
																					"statements": [
																						{
																							"nativeSrc": "3678:43:14",
																							"nodeType": "YulVariableDeclaration",
																							"src": "3678:43:14",
																							"value": {
																								"arguments": [
																									{
																										"arguments": [
																											{
																												"name": "src",
																												"nativeSrc": "3705:3:14",
																												"nodeType": "YulIdentifier",
																												"src": "3705:3:14"
																											},
																											{
																												"name": "srcOffset",
																												"nativeSrc": "3710:9:14",
																												"nodeType": "YulIdentifier",
																												"src": "3710:9:14"
																											}
																										],
																										"functionName": {
																											"name": "add",
																											"nativeSrc": "3701:3:14",
																											"nodeType": "YulIdentifier",
																											"src": "3701:3:14"
																										},
																										"nativeSrc": "3701:19:14",
																										"nodeType": "YulFunctionCall",
																										"src": "3701:19:14"
																									}
																								],
																								"functionName": {
																									"name": "mload",
																									"nativeSrc": "3695:5:14",
																									"nodeType": "YulIdentifier",
																									"src": "3695:5:14"
																								},
																								"nativeSrc": "3695:26:14",
																								"nodeType": "YulFunctionCall",
																								"src": "3695:26:14"
																							},
																							"variables": [
																								{
																									"name": "lastValue",
																									"nativeSrc": "3682:9:14",
																									"nodeType": "YulTypedName",
																									"src": "3682:9:14",
																									"type": ""
																								}
																							]
																						},
																						{
																							"expression": {
																								"arguments": [
																									{
																										"name": "dstPtr",
																										"nativeSrc": "3745:6:14",
																										"nodeType": "YulIdentifier",
																										"src": "3745:6:14"
																									},
																									{
																										"arguments": [
																											{
																												"name": "lastValue",
																												"nativeSrc": "3757:9:14",
																												"nodeType": "YulIdentifier",
																												"src": "3757:9:14"
																											},
																											{
																												"arguments": [
																													{
																														"arguments": [
																															{
																																"arguments": [
																																	{
																																		"arguments": [
																																			{
																																				"kind": "number",
																																				"nativeSrc": "3784:1:14",
																																				"nodeType": "YulLiteral",
																																				"src": "3784:1:14",
																																				"type": "",
																																				"value": "3"
																																			},
																																			{
																																				"name": "newLen",
																																				"nativeSrc": "3787:6:14",
																																				"nodeType": "YulIdentifier",
																																				"src": "3787:6:14"
																																			}
																																		],
																																		"functionName": {
																																			"name": "shl",
																																			"nativeSrc": "3780:3:14",
																																			"nodeType": "YulIdentifier",
																																			"src": "3780:3:14"
																																		},
																																		"nativeSrc": "3780:14:14",
																																		"nodeType": "YulFunctionCall",
																																		"src": "3780:14:14"
																																	},
																																	{
																																		"kind": "number",
																																		"nativeSrc": "3796:3:14",
																																		"nodeType": "YulLiteral",
																																		"src": "3796:3:14",
																																		"type": "",
																																		"value": "248"
																																	}
																																],
																																"functionName": {
																																	"name": "and",
																																	"nativeSrc": "3776:3:14",
																																	"nodeType": "YulIdentifier",
																																	"src": "3776:3:14"
																																},
																																"nativeSrc": "3776:24:14",
																																"nodeType": "YulFunctionCall",
																																"src": "3776:24:14"
																															},
																															{
																																"arguments": [
																																	{
																																		"kind": "number",
																																		"nativeSrc": "3806:1:14",
																																		"nodeType": "YulLiteral",
																																		"src": "3806:1:14",
																																		"type": "",
																																		"value": "0"
																																	}
																																],
																																"functionName": {
																																	"name": "not",
																																	"nativeSrc": "3802:3:14",
																																	"nodeType": "YulIdentifier",
																																	"src": "3802:3:14"
																																},
																																"nativeSrc": "3802:6:14",
																																"nodeType": "YulFunctionCall",
																																"src": "3802:6:14"
																															}
																														],
																														"functionName": {
																															"name": "shr",
																															"nativeSrc": "3772:3:14",
																															"nodeType": "YulIdentifier",
																															"src": "3772:3:14"
																														},
																														"nativeSrc": "3772:37:14",
																														"nodeType": "YulFunctionCall",
																														"src": "3772:37:14"
																													}
																												],
																												"functionName": {
																													"name": "not",
																													"nativeSrc": "3768:3:14",
																													"nodeType": "YulIdentifier",
																													"src": "3768:3:14"
																												},
																												"nativeSrc": "3768:42:14",
																												"nodeType": "YulFunctionCall",
																												"src": "3768:42:14"
																											}
																										],
																										"functionName": {
																											"name": "and",
																											"nativeSrc": "3753:3:14",
																											"nodeType": "YulIdentifier",
																											"src": "3753:3:14"
																										},
																										"nativeSrc": "3753:58:14",
																										"nodeType": "YulFunctionCall",
																										"src": "3753:58:14"
																									}
																								],
																								"functionName": {
																									"name": "sstore",
																									"nativeSrc": "3738:6:14",
																									"nodeType": "YulIdentifier",
																									"src": "3738:6:14"
																								},
																								"nativeSrc": "3738:74:14",
																								"nodeType": "YulFunctionCall",
																								"src": "3738:74:14"
																							},
																							"nativeSrc": "3738:74:14",
																							"nodeType": "YulExpressionStatement",
																							"src": "3738:74:14"
																						}
																					]
																				},
																				"condition": {
																					"arguments": [
																						{
																							"name": "loopEnd",
																							"nativeSrc": "3631:7:14",
																							"nodeType": "YulIdentifier",
																							"src": "3631:7:14"
																						},
																						{
																							"name": "newLen",
																							"nativeSrc": "3640:6:14",
																							"nodeType": "YulIdentifier",
																							"src": "3640:6:14"
																						}
																					],
																					"functionName": {
																						"name": "lt",
																						"nativeSrc": "3628:2:14",
																						"nodeType": "YulIdentifier",
																						"src": "3628:2:14"
																					},
																					"nativeSrc": "3628:19:14",
																					"nodeType": "YulFunctionCall",
																					"src": "3628:19:14"
																				},
																				"nativeSrc": "3625:201:14",
																				"nodeType": "YulIf",
																				"src": "3625:201:14"
																			},
																			{
																				"expression": {
																					"arguments": [
																						{
																							"name": "slot",
																							"nativeSrc": "3846:4:14",
																							"nodeType": "YulIdentifier",
																							"src": "3846:4:14"
																						},
																						{
																							"arguments": [
																								{
																									"arguments": [
																										{
																											"kind": "number",
																											"nativeSrc": "3860:1:14",
																											"nodeType": "YulLiteral",
																											"src": "3860:1:14",
																											"type": "",
																											"value": "1"
																										},
																										{
																											"name": "newLen",
																											"nativeSrc": "3863:6:14",
																											"nodeType": "YulIdentifier",
																											"src": "3863:6:14"
																										}
																									],
																									"functionName": {
																										"name": "shl",
																										"nativeSrc": "3856:3:14",
																										"nodeType": "YulIdentifier",
																										"src": "3856:3:14"
																									},
																									"nativeSrc": "3856:14:14",
																									"nodeType": "YulFunctionCall",
																									"src": "3856:14:14"
																								},
																								{
																									"kind": "number",
																									"nativeSrc": "3872:1:14",
																									"nodeType": "YulLiteral",
																									"src": "3872:1:14",
																									"type": "",
																									"value": "1"
																								}
																							],
																							"functionName": {
																								"name": "add",
																								"nativeSrc": "3852:3:14",
																								"nodeType": "YulIdentifier",
																								"src": "3852:3:14"
																							},
																							"nativeSrc": "3852:22:14",
																							"nodeType": "YulFunctionCall",
																							"src": "3852:22:14"
																						}
																					],
																					"functionName": {
																						"name": "sstore",
																						"nativeSrc": "3839:6:14",
																						"nodeType": "YulIdentifier",
																						"src": "3839:6:14"
																					},
																					"nativeSrc": "3839:36:14",
																					"nodeType": "YulFunctionCall",
																					"src": "3839:36:14"
																				},
																				"nativeSrc": "3839:36:14",
																				"nodeType": "YulExpressionStatement",
																				"src": "3839:36:14"
																			}
																		]
																	},
																	"nativeSrc": "3222:663:14",
																	"nodeType": "YulCase",
																	"src": "3222:663:14",
																	"value": {
																		"kind": "number",
																		"nativeSrc": "3227:1:14",
																		"nodeType": "YulLiteral",
																		"src": "3227:1:14",
																		"type": "",
																		"value": "1"
																	}
																},
																{
																	"body": {
																		"nativeSrc": "3902:234:14",
																		"nodeType": "YulBlock",
																		"src": "3902:234:14",
																		"statements": [
																			{
																				"nativeSrc": "3916:14:14",
																				"nodeType": "YulVariableDeclaration",
																				"src": "3916:14:14",
																				"value": {
																					"kind": "number",
																					"nativeSrc": "3929:1:14",
																					"nodeType": "YulLiteral",
																					"src": "3929:1:14",
																					"type": "",
																					"value": "0"
																				},
																				"variables": [
																					{
																						"name": "value",
																						"nativeSrc": "3920:5:14",
																						"nodeType": "YulTypedName",
																						"src": "3920:5:14",
																						"type": ""
																					}
																				]
																			},
																			{
																				"body": {
																					"nativeSrc": "3965:67:14",
																					"nodeType": "YulBlock",
																					"src": "3965:67:14",
																					"statements": [
																						{
																							"nativeSrc": "3983:35:14",
																							"nodeType": "YulAssignment",
																							"src": "3983:35:14",
																							"value": {
																								"arguments": [
																									{
																										"arguments": [
																											{
																												"name": "src",
																												"nativeSrc": "4002:3:14",
																												"nodeType": "YulIdentifier",
																												"src": "4002:3:14"
																											},
																											{
																												"name": "srcOffset",
																												"nativeSrc": "4007:9:14",
																												"nodeType": "YulIdentifier",
																												"src": "4007:9:14"
																											}
																										],
																										"functionName": {
																											"name": "add",
																											"nativeSrc": "3998:3:14",
																											"nodeType": "YulIdentifier",
																											"src": "3998:3:14"
																										},
																										"nativeSrc": "3998:19:14",
																										"nodeType": "YulFunctionCall",
																										"src": "3998:19:14"
																									}
																								],
																								"functionName": {
																									"name": "mload",
																									"nativeSrc": "3992:5:14",
																									"nodeType": "YulIdentifier",
																									"src": "3992:5:14"
																								},
																								"nativeSrc": "3992:26:14",
																								"nodeType": "YulFunctionCall",
																								"src": "3992:26:14"
																							},
																							"variableNames": [
																								{
																									"name": "value",
																									"nativeSrc": "3983:5:14",
																									"nodeType": "YulIdentifier",
																									"src": "3983:5:14"
																								}
																							]
																						}
																					]
																				},
																				"condition": {
																					"name": "newLen",
																					"nativeSrc": "3946:6:14",
																					"nodeType": "YulIdentifier",
																					"src": "3946:6:14"
																				},
																				"nativeSrc": "3943:89:14",
																				"nodeType": "YulIf",
																				"src": "3943:89:14"
																			},
																			{
																				"expression": {
																					"arguments": [
																						{
																							"name": "slot",
																							"nativeSrc": "4052:4:14",
																							"nodeType": "YulIdentifier",
																							"src": "4052:4:14"
																						},
																						{
																							"arguments": [
																								{
																									"name": "value",
																									"nativeSrc": "4111:5:14",
																									"nodeType": "YulIdentifier",
																									"src": "4111:5:14"
																								},
																								{
																									"name": "newLen",
																									"nativeSrc": "4118:6:14",
																									"nodeType": "YulIdentifier",
																									"src": "4118:6:14"
																								}
																							],
																							"functionName": {
																								"name": "extract_used_part_and_set_length_of_short_byte_array",
																								"nativeSrc": "4058:52:14",
																								"nodeType": "YulIdentifier",
																								"src": "4058:52:14"
																							},
																							"nativeSrc": "4058:67:14",
																							"nodeType": "YulFunctionCall",
																							"src": "4058:67:14"
																						}
																					],
																					"functionName": {
																						"name": "sstore",
																						"nativeSrc": "4045:6:14",
																						"nodeType": "YulIdentifier",
																						"src": "4045:6:14"
																					},
																					"nativeSrc": "4045:81:14",
																					"nodeType": "YulFunctionCall",
																					"src": "4045:81:14"
																				},
																				"nativeSrc": "4045:81:14",
																				"nodeType": "YulExpressionStatement",
																				"src": "4045:81:14"
																			}
																		]
																	},
																	"nativeSrc": "3894:242:14",
																	"nodeType": "YulCase",
																	"src": "3894:242:14",
																	"value": "default"
																}
															],
															"expression": {
																"arguments": [
																	{
																		"name": "newLen",
																		"nativeSrc": "3202:6:14",
																		"nodeType": "YulIdentifier",
																		"src": "3202:6:14"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "3210:2:14",
																		"nodeType": "YulLiteral",
																		"src": "3210:2:14",
																		"type": "",
																		"value": "31"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nativeSrc": "3199:2:14",
																	"nodeType": "YulIdentifier",
																	"src": "3199:2:14"
																},
																"nativeSrc": "3199:14:14",
																"nodeType": "YulFunctionCall",
																"src": "3199:14:14"
															},
															"nativeSrc": "3192:944:14",
															"nodeType": "YulSwitch",
															"src": "3192:944:14"
														}
													]
												},
												"name": "copy_byte_array_to_storage_from_t_string_memory_ptr_to_t_string_storage",
												"nativeSrc": "2790:1352:14",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "slot",
														"nativeSrc": "2871:4:14",
														"nodeType": "YulTypedName",
														"src": "2871:4:14",
														"type": ""
													},
													{
														"name": "src",
														"nativeSrc": "2877:3:14",
														"nodeType": "YulTypedName",
														"src": "2877:3:14",
														"type": ""
													}
												],
												"src": "2790:1352:14"
											}
										]
									},
									"contents": "{\n    { }\n    function panic_error_0x41()\n    {\n        mstore(0, shl(224, 0x4e487b71))\n        mstore(4, 0x41)\n        revert(0, 0x24)\n    }\n    function abi_decode_string_fromMemory(offset, end) -> array\n    {\n        if iszero(slt(add(offset, 0x1f), end)) { revert(0, 0) }\n        let _1 := mload(offset)\n        let _2 := sub(shl(64, 1), 1)\n        if gt(_1, _2) { panic_error_0x41() }\n        let _3 := not(31)\n        let memPtr := mload(64)\n        let newFreePtr := add(memPtr, and(add(and(add(_1, 0x1f), _3), 63), _3))\n        if or(gt(newFreePtr, _2), lt(newFreePtr, memPtr)) { panic_error_0x41() }\n        mstore(64, newFreePtr)\n        mstore(memPtr, _1)\n        let _4 := 0x20\n        if gt(add(add(offset, _1), _4), end) { revert(0, 0) }\n        let i := 0\n        for { } lt(i, _1) { i := add(i, _4) }\n        {\n            mstore(add(add(memPtr, i), _4), mload(add(add(offset, i), _4)))\n        }\n        mstore(add(add(memPtr, _1), _4), 0)\n        array := memPtr\n    }\n    function abi_decode_tuple_t_string_memory_ptrt_string_memory_ptr_fromMemory(headStart, dataEnd) -> value0, value1\n    {\n        if slt(sub(dataEnd, headStart), 64) { revert(0, 0) }\n        let offset := mload(headStart)\n        let _1 := sub(shl(64, 1), 1)\n        if gt(offset, _1) { revert(0, 0) }\n        value0 := abi_decode_string_fromMemory(add(headStart, offset), dataEnd)\n        let offset_1 := mload(add(headStart, 32))\n        if gt(offset_1, _1) { revert(0, 0) }\n        value1 := abi_decode_string_fromMemory(add(headStart, offset_1), dataEnd)\n    }\n    function extract_byte_array_length(data) -> length\n    {\n        length := shr(1, data)\n        let outOfPlaceEncoding := and(data, 1)\n        if iszero(outOfPlaceEncoding) { length := and(length, 0x7f) }\n        if eq(outOfPlaceEncoding, lt(length, 32))\n        {\n            mstore(0, shl(224, 0x4e487b71))\n            mstore(4, 0x22)\n            revert(0, 0x24)\n        }\n    }\n    function array_dataslot_string_storage(ptr) -> data\n    {\n        mstore(0, ptr)\n        data := keccak256(0, 0x20)\n    }\n    function clean_up_bytearray_end_slots_string_storage(array, len, startIndex)\n    {\n        if gt(len, 31)\n        {\n            let _1 := 0\n            mstore(_1, array)\n            let data := keccak256(_1, 0x20)\n            let deleteStart := add(data, shr(5, add(startIndex, 31)))\n            if lt(startIndex, 0x20) { deleteStart := data }\n            let _2 := add(data, shr(5, add(len, 31)))\n            let start := deleteStart\n            for { } lt(start, _2) { start := add(start, 1) }\n            { sstore(start, _1) }\n        }\n    }\n    function extract_used_part_and_set_length_of_short_byte_array(data, len) -> used\n    {\n        used := or(and(data, not(shr(shl(3, len), not(0)))), shl(1, len))\n    }\n    function copy_byte_array_to_storage_from_t_string_memory_ptr_to_t_string_storage(slot, src)\n    {\n        let newLen := mload(src)\n        if gt(newLen, sub(shl(64, 1), 1)) { panic_error_0x41() }\n        clean_up_bytearray_end_slots_string_storage(slot, extract_byte_array_length(sload(slot)), newLen)\n        let srcOffset := 0\n        let srcOffset_1 := 0x20\n        srcOffset := srcOffset_1\n        switch gt(newLen, 31)\n        case 1 {\n            let loopEnd := and(newLen, not(31))\n            let dstPtr := array_dataslot_string_storage(slot)\n            let i := 0\n            for { } lt(i, loopEnd) { i := add(i, srcOffset_1) }\n            {\n                sstore(dstPtr, mload(add(src, srcOffset)))\n                dstPtr := add(dstPtr, 1)\n                srcOffset := add(srcOffset, srcOffset_1)\n            }\n            if lt(loopEnd, newLen)\n            {\n                let lastValue := mload(add(src, srcOffset))\n                sstore(dstPtr, and(lastValue, not(shr(and(shl(3, newLen), 248), not(0)))))\n            }\n            sstore(slot, add(shl(1, newLen), 1))\n        }\n        default {\n            let value := 0\n            if newLen\n            {\n                value := mload(add(src, srcOffset))\n            }\n            sstore(slot, extract_used_part_and_set_length_of_short_byte_array(value, newLen))\n        }\n    }\n}",
									"id": 14,
									"language": "Yul",
									"name": "#utility.yul"
								}
							],
							"linkReferences": {},
							"object": "",
							"opcodes": "PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH3 0x10 JUMPI PUSH0 DUP1 REVERT JUMPDEST POP PUSH1 0x40 MLOAD PUSH3 0x143B CODESIZE SUB DUP1 PUSH3 0x143B DUP4 CODECOPY DUP2 ADD PUSH1 0x40 DUP2 SWAP1 MSTORE PUSH3 0x33 SWAP2 PUSH3 0x116 JUMP JUMPDEST PUSH0 PUSH3 0x40 DUP4 DUP3 PUSH3 0x208 JUMP JUMPDEST POP PUSH1 0x1 PUSH3 0x4F DUP3 DUP3 PUSH3 0x208 JUMP JUMPDEST POP POP POP PUSH3 0x2D0 JUMP JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH0 MSTORE PUSH1 0x41 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH0 REVERT JUMPDEST PUSH0 DUP3 PUSH1 0x1F DUP4 ADD SLT PUSH3 0x7C JUMPI PUSH0 DUP1 REVERT JUMPDEST DUP2 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0x40 SHL SUB DUP1 DUP3 GT ISZERO PUSH3 0x99 JUMPI PUSH3 0x99 PUSH3 0x58 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x1F DUP4 ADD PUSH1 0x1F NOT SWAP1 DUP2 AND PUSH1 0x3F ADD AND DUP2 ADD SWAP1 DUP3 DUP3 GT DUP2 DUP4 LT OR ISZERO PUSH3 0xC4 JUMPI PUSH3 0xC4 PUSH3 0x58 JUMP JUMPDEST DUP2 PUSH1 0x40 MSTORE DUP4 DUP2 MSTORE PUSH1 0x20 SWAP3 POP DUP7 DUP4 DUP6 DUP9 ADD ADD GT ISZERO PUSH3 0xE0 JUMPI PUSH0 DUP1 REVERT JUMPDEST PUSH0 SWAP2 POP JUMPDEST DUP4 DUP3 LT ISZERO PUSH3 0x103 JUMPI DUP6 DUP3 ADD DUP4 ADD MLOAD DUP2 DUP4 ADD DUP5 ADD MSTORE SWAP1 DUP3 ADD SWAP1 PUSH3 0xE4 JUMP JUMPDEST PUSH0 SWAP4 DUP2 ADD SWAP1 SWAP3 ADD SWAP3 SWAP1 SWAP3 MSTORE SWAP5 SWAP4 POP POP POP POP JUMP JUMPDEST PUSH0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH3 0x128 JUMPI PUSH0 DUP1 REVERT JUMPDEST DUP3 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0x40 SHL SUB DUP1 DUP3 GT ISZERO PUSH3 0x13F JUMPI PUSH0 DUP1 REVERT JUMPDEST PUSH3 0x14D DUP7 DUP4 DUP8 ADD PUSH3 0x6C JUMP JUMPDEST SWAP4 POP PUSH1 0x20 DUP6 ADD MLOAD SWAP2 POP DUP1 DUP3 GT ISZERO PUSH3 0x163 JUMPI PUSH0 DUP1 REVERT JUMPDEST POP PUSH3 0x172 DUP6 DUP3 DUP7 ADD PUSH3 0x6C JUMP JUMPDEST SWAP2 POP POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH1 0x1 DUP2 DUP2 SHR SWAP1 DUP3 AND DUP1 PUSH3 0x191 JUMPI PUSH1 0x7F DUP3 AND SWAP2 POP JUMPDEST PUSH1 0x20 DUP3 LT DUP2 SUB PUSH3 0x1B0 JUMPI PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH0 MSTORE PUSH1 0x22 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH0 REVERT JUMPDEST POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x1F DUP3 GT ISZERO PUSH3 0x203 JUMPI PUSH0 DUP2 DUP2 MSTORE PUSH1 0x20 DUP2 KECCAK256 PUSH1 0x1F DUP6 ADD PUSH1 0x5 SHR DUP2 ADD PUSH1 0x20 DUP7 LT ISZERO PUSH3 0x1DE JUMPI POP DUP1 JUMPDEST PUSH1 0x1F DUP6 ADD PUSH1 0x5 SHR DUP3 ADD SWAP2 POP JUMPDEST DUP2 DUP2 LT ISZERO PUSH3 0x1FF JUMPI DUP3 DUP2 SSTORE PUSH1 0x1 ADD PUSH3 0x1EA JUMP JUMPDEST POP POP POP JUMPDEST POP POP POP JUMP JUMPDEST DUP2 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0x40 SHL SUB DUP2 GT ISZERO PUSH3 0x224 JUMPI PUSH3 0x224 PUSH3 0x58 JUMP JUMPDEST PUSH3 0x23C DUP2 PUSH3 0x235 DUP5 SLOAD PUSH3 0x17C JUMP JUMPDEST DUP5 PUSH3 0x1B6 JUMP JUMPDEST PUSH1 0x20 DUP1 PUSH1 0x1F DUP4 GT PUSH1 0x1 DUP2 EQ PUSH3 0x272 JUMPI PUSH0 DUP5 ISZERO PUSH3 0x25A JUMPI POP DUP6 DUP4 ADD MLOAD JUMPDEST PUSH0 NOT PUSH1 0x3 DUP7 SWAP1 SHL SHR NOT AND PUSH1 0x1 DUP6 SWAP1 SHL OR DUP6 SSTORE PUSH3 0x1FF JUMP JUMPDEST PUSH0 DUP6 DUP2 MSTORE PUSH1 0x20 DUP2 KECCAK256 PUSH1 0x1F NOT DUP7 AND SWAP2 JUMPDEST DUP3 DUP2 LT ISZERO PUSH3 0x2A2 JUMPI DUP9 DUP7 ADD MLOAD DUP3 SSTORE SWAP5 DUP5 ADD SWAP5 PUSH1 0x1 SWAP1 SWAP2 ADD SWAP1 DUP5 ADD PUSH3 0x281 JUMP JUMPDEST POP DUP6 DUP3 LT ISZERO PUSH3 0x2C0 JUMPI DUP8 DUP6 ADD MLOAD PUSH0 NOT PUSH1 0x3 DUP9 SWAP1 SHL PUSH1 0xF8 AND SHR NOT AND DUP2 SSTORE JUMPDEST POP POP POP POP POP PUSH1 0x1 SWAP1 DUP2 SHL ADD SWAP1 SSTORE POP JUMP JUMPDEST PUSH2 0x115D DUP1 PUSH3 0x2DE PUSH0 CODECOPY PUSH0 RETURN INVALID PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH2 0xF JUMPI PUSH0 DUP1 REVERT JUMPDEST POP PUSH1 0x4 CALLDATASIZE LT PUSH2 0xCB JUMPI PUSH0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0x6352211E GT PUSH2 0x88 JUMPI DUP1 PUSH4 0xA22CB465 GT PUSH2 0x63 JUMPI DUP1 PUSH4 0xA22CB465 EQ PUSH2 0x1AE JUMPI DUP1 PUSH4 0xB88D4FDE EQ PUSH2 0x1C1 JUMPI DUP1 PUSH4 0xC87B56DD EQ PUSH2 0x1D4 JUMPI DUP1 PUSH4 0xE985E9C5 EQ PUSH2 0x1E7 JUMPI PUSH0 DUP1 REVERT JUMPDEST DUP1 PUSH4 0x6352211E EQ PUSH2 0x172 JUMPI DUP1 PUSH4 0x70A08231 EQ PUSH2 0x185 JUMPI DUP1 PUSH4 0x95D89B41 EQ PUSH2 0x1A6 JUMPI PUSH0 DUP1 REVERT JUMPDEST DUP1 PUSH4 0x1FFC9A7 EQ PUSH2 0xCF JUMPI DUP1 PUSH4 0x6FDDE03 EQ PUSH2 0xF7 JUMPI DUP1 PUSH4 0x81812FC EQ PUSH2 0x10C JUMPI DUP1 PUSH4 0x95EA7B3 EQ PUSH2 0x137 JUMPI DUP1 PUSH4 0x23B872DD EQ PUSH2 0x14C JUMPI DUP1 PUSH4 0x42842E0E EQ PUSH2 0x15F JUMPI JUMPDEST PUSH0 DUP1 REVERT JUMPDEST PUSH2 0xE2 PUSH2 0xDD CALLDATASIZE PUSH1 0x4 PUSH2 0xCD3 JUMP JUMPDEST PUSH2 0x1FA JUMP JUMPDEST PUSH1 0x40 MLOAD SWAP1 ISZERO ISZERO DUP2 MSTORE PUSH1 0x20 ADD JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0xFF PUSH2 0x24B JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0xEE SWAP2 SWAP1 PUSH2 0xD3B JUMP JUMPDEST PUSH2 0x11F PUSH2 0x11A CALLDATASIZE PUSH1 0x4 PUSH2 0xD4D JUMP JUMPDEST PUSH2 0x2DA JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 SWAP2 AND DUP2 MSTORE PUSH1 0x20 ADD PUSH2 0xEE JUMP JUMPDEST PUSH2 0x14A PUSH2 0x145 CALLDATASIZE PUSH1 0x4 PUSH2 0xD7F JUMP JUMPDEST PUSH2 0x2FF JUMP JUMPDEST STOP JUMPDEST PUSH2 0x14A PUSH2 0x15A CALLDATASIZE PUSH1 0x4 PUSH2 0xDA7 JUMP JUMPDEST PUSH2 0x418 JUMP JUMPDEST PUSH2 0x14A PUSH2 0x16D CALLDATASIZE PUSH1 0x4 PUSH2 0xDA7 JUMP JUMPDEST PUSH2 0x449 JUMP JUMPDEST PUSH2 0x11F PUSH2 0x180 CALLDATASIZE PUSH1 0x4 PUSH2 0xD4D JUMP JUMPDEST PUSH2 0x463 JUMP JUMPDEST PUSH2 0x198 PUSH2 0x193 CALLDATASIZE PUSH1 0x4 PUSH2 0xDE0 JUMP JUMPDEST PUSH2 0x4C2 JUMP JUMPDEST PUSH1 0x40 MLOAD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH2 0xEE JUMP JUMPDEST PUSH2 0xFF PUSH2 0x546 JUMP JUMPDEST PUSH2 0x14A PUSH2 0x1BC CALLDATASIZE PUSH1 0x4 PUSH2 0xDF9 JUMP JUMPDEST PUSH2 0x555 JUMP JUMPDEST PUSH2 0x14A PUSH2 0x1CF CALLDATASIZE PUSH1 0x4 PUSH2 0xE46 JUMP JUMPDEST PUSH2 0x564 JUMP JUMPDEST PUSH2 0xFF PUSH2 0x1E2 CALLDATASIZE PUSH1 0x4 PUSH2 0xD4D JUMP JUMPDEST PUSH2 0x59C JUMP JUMPDEST PUSH2 0xE2 PUSH2 0x1F5 CALLDATASIZE PUSH1 0x4 PUSH2 0xF1B JUMP JUMPDEST PUSH2 0x60C JUMP JUMPDEST PUSH0 PUSH1 0x1 PUSH1 0x1 PUSH1 0xE0 SHL SUB NOT DUP3 AND PUSH4 0x80AC58CD PUSH1 0xE0 SHL EQ DUP1 PUSH2 0x22A JUMPI POP PUSH1 0x1 PUSH1 0x1 PUSH1 0xE0 SHL SUB NOT DUP3 AND PUSH4 0x5B5E139F PUSH1 0xE0 SHL EQ JUMPDEST DUP1 PUSH2 0x245 JUMPI POP PUSH4 0x1FFC9A7 PUSH1 0xE0 SHL PUSH1 0x1 PUSH1 0x1 PUSH1 0xE0 SHL SUB NOT DUP4 AND EQ JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x60 PUSH0 DUP1 SLOAD PUSH2 0x259 SWAP1 PUSH2 0xF4C JUMP JUMPDEST DUP1 PUSH1 0x1F ADD PUSH1 0x20 DUP1 SWAP2 DIV MUL PUSH1 0x20 ADD PUSH1 0x40 MLOAD SWAP1 DUP2 ADD PUSH1 0x40 MSTORE DUP1 SWAP3 SWAP2 SWAP1 DUP2 DUP2 MSTORE PUSH1 0x20 ADD DUP3 DUP1 SLOAD PUSH2 0x285 SWAP1 PUSH2 0xF4C JUMP JUMPDEST DUP1 ISZERO PUSH2 0x2D0 JUMPI DUP1 PUSH1 0x1F LT PUSH2 0x2A7 JUMPI PUSH2 0x100 DUP1 DUP4 SLOAD DIV MUL DUP4 MSTORE SWAP2 PUSH1 0x20 ADD SWAP2 PUSH2 0x2D0 JUMP JUMPDEST DUP3 ADD SWAP2 SWAP1 PUSH0 MSTORE PUSH1 0x20 PUSH0 KECCAK256 SWAP1 JUMPDEST DUP2 SLOAD DUP2 MSTORE SWAP1 PUSH1 0x1 ADD SWAP1 PUSH1 0x20 ADD DUP1 DUP4 GT PUSH2 0x2B3 JUMPI DUP3 SWAP1 SUB PUSH1 0x1F AND DUP3 ADD SWAP2 JUMPDEST POP POP POP POP POP SWAP1 POP SWAP1 JUMP JUMPDEST PUSH0 PUSH2 0x2E4 DUP3 PUSH2 0x639 JUMP JUMPDEST POP PUSH0 SWAP1 DUP2 MSTORE PUSH1 0x4 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND SWAP1 JUMP JUMPDEST PUSH0 PUSH2 0x309 DUP3 PUSH2 0x463 JUMP JUMPDEST SWAP1 POP DUP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP4 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND SUB PUSH2 0x37B JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x21 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x4552433732313A20617070726F76616C20746F2063757272656E74206F776E65 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x39 PUSH1 0xF9 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST CALLER PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 AND EQ DUP1 PUSH2 0x397 JUMPI POP PUSH2 0x397 DUP2 CALLER PUSH2 0x60C JUMP JUMPDEST PUSH2 0x409 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x3D PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x4552433732313A20617070726F76652063616C6C6572206973206E6F7420746F PUSH1 0x44 DUP3 ADD MSTORE PUSH32 0x6B656E206F776E6572206F7220617070726F76656420666F7220616C6C000000 PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0x372 JUMP JUMPDEST PUSH2 0x413 DUP4 DUP4 PUSH2 0x69A JUMP JUMPDEST POP POP POP JUMP JUMPDEST PUSH2 0x422 CALLER DUP3 PUSH2 0x707 JUMP JUMPDEST PUSH2 0x43E JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x372 SWAP1 PUSH2 0xF84 JUMP JUMPDEST PUSH2 0x413 DUP4 DUP4 DUP4 PUSH2 0x765 JUMP JUMPDEST PUSH2 0x413 DUP4 DUP4 DUP4 PUSH1 0x40 MLOAD DUP1 PUSH1 0x20 ADD PUSH1 0x40 MSTORE DUP1 PUSH0 DUP2 MSTORE POP PUSH2 0x564 JUMP JUMPDEST PUSH0 DUP2 DUP2 MSTORE PUSH1 0x2 PUSH1 0x20 MSTORE PUSH1 0x40 DUP2 KECCAK256 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP1 PUSH2 0x245 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x18 PUSH1 0x24 DUP3 ADD MSTORE PUSH24 0x115490CDCC8C4E881A5B9D985B1A59081D1BDAD95B881251 PUSH1 0x42 SHL PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x372 JUMP JUMPDEST PUSH0 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 AND PUSH2 0x52B JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x29 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x4552433732313A2061646472657373207A65726F206973206E6F742061207661 PUSH1 0x44 DUP3 ADD MSTORE PUSH9 0x3634B21037BBB732B9 PUSH1 0xB9 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0x372 JUMP JUMPDEST POP PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH0 SWAP1 DUP2 MSTORE PUSH1 0x3 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD SWAP1 JUMP JUMPDEST PUSH1 0x60 PUSH1 0x1 DUP1 SLOAD PUSH2 0x259 SWAP1 PUSH2 0xF4C JUMP JUMPDEST PUSH2 0x560 CALLER DUP4 DUP4 PUSH2 0x8D4 JUMP JUMPDEST POP POP JUMP JUMPDEST PUSH2 0x56E CALLER DUP4 PUSH2 0x707 JUMP JUMPDEST PUSH2 0x58A JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x372 SWAP1 PUSH2 0xF84 JUMP JUMPDEST PUSH2 0x596 DUP5 DUP5 DUP5 DUP5 PUSH2 0x9A1 JUMP JUMPDEST POP POP POP POP JUMP JUMPDEST PUSH1 0x60 PUSH2 0x5A7 DUP3 PUSH2 0x639 JUMP JUMPDEST PUSH0 PUSH2 0x5BC PUSH1 0x40 DUP1 MLOAD PUSH1 0x20 DUP2 ADD SWAP1 SWAP2 MSTORE PUSH0 DUP2 MSTORE SWAP1 JUMP JUMPDEST SWAP1 POP PUSH0 DUP2 MLOAD GT PUSH2 0x5DA JUMPI PUSH1 0x40 MLOAD DUP1 PUSH1 0x20 ADD PUSH1 0x40 MSTORE DUP1 PUSH0 DUP2 MSTORE POP PUSH2 0x605 JUMP JUMPDEST DUP1 PUSH2 0x5E4 DUP5 PUSH2 0x9D4 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x20 ADD PUSH2 0x5F5 SWAP3 SWAP2 SWAP1 PUSH2 0xFD1 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x20 DUP2 DUP4 SUB SUB DUP2 MSTORE SWAP1 PUSH1 0x40 MSTORE JUMPDEST SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP2 DUP3 AND PUSH0 SWAP1 DUP2 MSTORE PUSH1 0x5 PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 SWAP4 SWAP1 SWAP5 AND DUP3 MSTORE SWAP2 SWAP1 SWAP2 MSTORE KECCAK256 SLOAD PUSH1 0xFF AND SWAP1 JUMP JUMPDEST PUSH0 DUP2 DUP2 MSTORE PUSH1 0x2 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH2 0x697 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x18 PUSH1 0x24 DUP3 ADD MSTORE PUSH24 0x115490CDCC8C4E881A5B9D985B1A59081D1BDAD95B881251 PUSH1 0x42 SHL PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x372 JUMP JUMPDEST POP JUMP JUMPDEST PUSH0 DUP2 DUP2 MSTORE PUSH1 0x4 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 DUP1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB NOT AND PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP5 AND SWAP1 DUP2 OR SWAP1 SWAP2 SSTORE DUP2 SWAP1 PUSH2 0x6CE DUP3 PUSH2 0x463 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH32 0x8C5BE1E5EBEC7D5BD14F71427D1E84F3DD0314C0F7B2291E5B200AC8C7C3B925 PUSH1 0x40 MLOAD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG4 POP POP JUMP JUMPDEST PUSH0 DUP1 PUSH2 0x712 DUP4 PUSH2 0x463 JUMP JUMPDEST SWAP1 POP DUP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP5 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND EQ DUP1 PUSH2 0x739 JUMPI POP PUSH2 0x739 DUP2 DUP6 PUSH2 0x60C JUMP JUMPDEST DUP1 PUSH2 0x75D JUMPI POP DUP4 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH2 0x752 DUP5 PUSH2 0x2DA JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND EQ JUMPDEST SWAP5 SWAP4 POP POP POP POP JUMP JUMPDEST DUP3 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH2 0x778 DUP3 PUSH2 0x463 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND EQ PUSH2 0x79E JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x372 SWAP1 PUSH2 0xFFF JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 AND PUSH2 0x800 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x24 DUP1 DUP3 ADD MSTORE PUSH32 0x4552433732313A207472616E7366657220746F20746865207A65726F20616464 PUSH1 0x44 DUP3 ADD MSTORE PUSH4 0x72657373 PUSH1 0xE0 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0x372 JUMP JUMPDEST PUSH2 0x80D DUP4 DUP4 DUP4 PUSH1 0x1 PUSH2 0xA64 JUMP JUMPDEST DUP3 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH2 0x820 DUP3 PUSH2 0x463 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND EQ PUSH2 0x846 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x372 SWAP1 PUSH2 0xFFF JUMP JUMPDEST PUSH0 DUP2 DUP2 MSTORE PUSH1 0x4 PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 DUP1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB NOT SWAP1 DUP2 AND SWAP1 SWAP2 SSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP8 DUP2 AND DUP1 DUP7 MSTORE PUSH1 0x3 DUP6 MSTORE DUP4 DUP7 KECCAK256 DUP1 SLOAD PUSH0 NOT ADD SWAP1 SSTORE SWAP1 DUP8 AND DUP1 DUP7 MSTORE DUP4 DUP7 KECCAK256 DUP1 SLOAD PUSH1 0x1 ADD SWAP1 SSTORE DUP7 DUP7 MSTORE PUSH1 0x2 SWAP1 SWAP5 MSTORE DUP3 DUP6 KECCAK256 DUP1 SLOAD SWAP1 SWAP3 AND DUP5 OR SWAP1 SWAP2 SSTORE SWAP1 MLOAD DUP5 SWAP4 PUSH32 0xDDF252AD1BE2C89B69C2B068FC378DAA952BA7F163C4A11628F55A4DF523B3EF SWAP2 LOG4 POP POP POP JUMP JUMPDEST DUP2 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP4 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND SUB PUSH2 0x935 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x19 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x4552433732313A20617070726F766520746F2063616C6C657200000000000000 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x372 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 DUP2 AND PUSH0 DUP2 DUP2 MSTORE PUSH1 0x5 PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 SWAP5 DUP8 AND DUP1 DUP5 MSTORE SWAP5 DUP3 MSTORE SWAP2 DUP3 SWAP1 KECCAK256 DUP1 SLOAD PUSH1 0xFF NOT AND DUP7 ISZERO ISZERO SWAP1 DUP2 OR SWAP1 SWAP2 SSTORE SWAP2 MLOAD SWAP2 DUP3 MSTORE PUSH32 0x17307EAB39AB6107E8899845AD3D59BD9653F200F220920489CA2B5937696C31 SWAP2 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 POP POP POP JUMP JUMPDEST PUSH2 0x9AC DUP5 DUP5 DUP5 PUSH2 0x765 JUMP JUMPDEST PUSH2 0x9B8 DUP5 DUP5 DUP5 DUP5 PUSH2 0xAEA JUMP JUMPDEST PUSH2 0x596 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x372 SWAP1 PUSH2 0x1044 JUMP JUMPDEST PUSH1 0x60 PUSH0 PUSH2 0x9E0 DUP4 PUSH2 0xBE7 JUMP JUMPDEST PUSH1 0x1 ADD SWAP1 POP PUSH0 DUP2 PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0x9FF JUMPI PUSH2 0x9FF PUSH2 0xE32 JUMP JUMPDEST PUSH1 0x40 MLOAD SWAP1 DUP1 DUP3 MSTORE DUP1 PUSH1 0x1F ADD PUSH1 0x1F NOT AND PUSH1 0x20 ADD DUP3 ADD PUSH1 0x40 MSTORE DUP1 ISZERO PUSH2 0xA29 JUMPI PUSH1 0x20 DUP3 ADD DUP2 DUP1 CALLDATASIZE DUP4 CALLDATACOPY ADD SWAP1 POP JUMPDEST POP SWAP1 POP DUP2 DUP2 ADD PUSH1 0x20 ADD JUMPDEST PUSH0 NOT ADD PUSH16 0x181899199A1A9B1B9C1CB0B131B232B3 PUSH1 0x81 SHL PUSH1 0xA DUP7 MOD BYTE DUP2 MSTORE8 PUSH1 0xA DUP6 DIV SWAP5 POP DUP5 PUSH2 0xA33 JUMPI POP SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x1 DUP2 GT ISZERO PUSH2 0x596 JUMPI PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP5 AND ISZERO PUSH2 0xAA9 JUMPI PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP5 AND PUSH0 SWAP1 DUP2 MSTORE PUSH1 0x3 PUSH1 0x20 MSTORE PUSH1 0x40 DUP2 KECCAK256 DUP1 SLOAD DUP4 SWAP3 SWAP1 PUSH2 0xAA3 SWAP1 DUP5 SWAP1 PUSH2 0x10AA JUMP JUMPDEST SWAP1 SWAP2 SSTORE POP POP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 AND ISZERO PUSH2 0x596 JUMPI PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 AND PUSH0 SWAP1 DUP2 MSTORE PUSH1 0x3 PUSH1 0x20 MSTORE PUSH1 0x40 DUP2 KECCAK256 DUP1 SLOAD DUP4 SWAP3 SWAP1 PUSH2 0xADF SWAP1 DUP5 SWAP1 PUSH2 0x10BD JUMP JUMPDEST SWAP1 SWAP2 SSTORE POP POP POP POP POP POP JUMP JUMPDEST PUSH0 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP5 AND EXTCODESIZE ISZERO PUSH2 0xBDC JUMPI PUSH1 0x40 MLOAD PUSH4 0xA85BD01 PUSH1 0xE1 SHL DUP2 MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP6 AND SWAP1 PUSH4 0x150B7A02 SWAP1 PUSH2 0xB2D SWAP1 CALLER SWAP1 DUP10 SWAP1 DUP9 SWAP1 DUP9 SWAP1 PUSH1 0x4 ADD PUSH2 0x10D0 JUMP JUMPDEST PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH0 DUP8 GAS CALL SWAP3 POP POP POP DUP1 ISZERO PUSH2 0xB67 JUMPI POP PUSH1 0x40 DUP1 MLOAD PUSH1 0x1F RETURNDATASIZE SWAP1 DUP2 ADD PUSH1 0x1F NOT AND DUP3 ADD SWAP1 SWAP3 MSTORE PUSH2 0xB64 SWAP2 DUP2 ADD SWAP1 PUSH2 0x110C JUMP JUMPDEST PUSH1 0x1 JUMPDEST PUSH2 0xBC2 JUMPI RETURNDATASIZE DUP1 DUP1 ISZERO PUSH2 0xB94 JUMPI PUSH1 0x40 MLOAD SWAP2 POP PUSH1 0x1F NOT PUSH1 0x3F RETURNDATASIZE ADD AND DUP3 ADD PUSH1 0x40 MSTORE RETURNDATASIZE DUP3 MSTORE RETURNDATASIZE PUSH0 PUSH1 0x20 DUP5 ADD RETURNDATACOPY PUSH2 0xB99 JUMP JUMPDEST PUSH1 0x60 SWAP2 POP JUMPDEST POP DUP1 MLOAD PUSH0 SUB PUSH2 0xBBA JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x372 SWAP1 PUSH2 0x1044 JUMP JUMPDEST DUP1 MLOAD DUP2 PUSH1 0x20 ADD REVERT JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xE0 SHL SUB NOT AND PUSH4 0xA85BD01 PUSH1 0xE1 SHL EQ SWAP1 POP PUSH2 0x75D JUMP JUMPDEST POP PUSH1 0x1 SWAP5 SWAP4 POP POP POP POP JUMP JUMPDEST PUSH0 DUP1 PUSH19 0x184F03E93FF9F4DAA797ED6E38ED64BF6A1F01 PUSH1 0x40 SHL DUP4 LT PUSH2 0xC25 JUMPI PUSH19 0x184F03E93FF9F4DAA797ED6E38ED64BF6A1F01 PUSH1 0x40 SHL DUP4 DIV SWAP3 POP PUSH1 0x40 ADD JUMPDEST PUSH14 0x4EE2D6D415B85ACEF8100000000 DUP4 LT PUSH2 0xC51 JUMPI PUSH14 0x4EE2D6D415B85ACEF8100000000 DUP4 DIV SWAP3 POP PUSH1 0x20 ADD JUMPDEST PUSH7 0x2386F26FC10000 DUP4 LT PUSH2 0xC6F JUMPI PUSH7 0x2386F26FC10000 DUP4 DIV SWAP3 POP PUSH1 0x10 ADD JUMPDEST PUSH4 0x5F5E100 DUP4 LT PUSH2 0xC87 JUMPI PUSH4 0x5F5E100 DUP4 DIV SWAP3 POP PUSH1 0x8 ADD JUMPDEST PUSH2 0x2710 DUP4 LT PUSH2 0xC9B JUMPI PUSH2 0x2710 DUP4 DIV SWAP3 POP PUSH1 0x4 ADD JUMPDEST PUSH1 0x64 DUP4 LT PUSH2 0xCAD JUMPI PUSH1 0x64 DUP4 DIV SWAP3 POP PUSH1 0x2 ADD JUMPDEST PUSH1 0xA DUP4 LT PUSH2 0x245 JUMPI PUSH1 0x1 ADD SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xE0 SHL SUB NOT DUP2 AND DUP2 EQ PUSH2 0x697 JUMPI PUSH0 DUP1 REVERT JUMPDEST PUSH0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0xCE3 JUMPI PUSH0 DUP1 REVERT JUMPDEST DUP2 CALLDATALOAD PUSH2 0x605 DUP2 PUSH2 0xCBE JUMP JUMPDEST PUSH0 JUMPDEST DUP4 DUP2 LT ISZERO PUSH2 0xD08 JUMPI DUP2 DUP2 ADD MLOAD DUP4 DUP3 ADD MSTORE PUSH1 0x20 ADD PUSH2 0xCF0 JUMP JUMPDEST POP POP PUSH0 SWAP2 ADD MSTORE JUMP JUMPDEST PUSH0 DUP2 MLOAD DUP1 DUP5 MSTORE PUSH2 0xD27 DUP2 PUSH1 0x20 DUP7 ADD PUSH1 0x20 DUP7 ADD PUSH2 0xCEE JUMP JUMPDEST PUSH1 0x1F ADD PUSH1 0x1F NOT AND SWAP3 SWAP1 SWAP3 ADD PUSH1 0x20 ADD SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x20 DUP2 MSTORE PUSH0 PUSH2 0x605 PUSH1 0x20 DUP4 ADD DUP5 PUSH2 0xD10 JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0xD5D JUMPI PUSH0 DUP1 REVERT JUMPDEST POP CALLDATALOAD SWAP2 SWAP1 POP JUMP JUMPDEST DUP1 CALLDATALOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND DUP2 EQ PUSH2 0xD7A JUMPI PUSH0 DUP1 REVERT JUMPDEST SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0xD90 JUMPI PUSH0 DUP1 REVERT JUMPDEST PUSH2 0xD99 DUP4 PUSH2 0xD64 JUMP JUMPDEST SWAP5 PUSH1 0x20 SWAP4 SWAP1 SWAP4 ADD CALLDATALOAD SWAP4 POP POP POP JUMP JUMPDEST PUSH0 DUP1 PUSH0 PUSH1 0x60 DUP5 DUP7 SUB SLT ISZERO PUSH2 0xDB9 JUMPI PUSH0 DUP1 REVERT JUMPDEST PUSH2 0xDC2 DUP5 PUSH2 0xD64 JUMP JUMPDEST SWAP3 POP PUSH2 0xDD0 PUSH1 0x20 DUP6 ADD PUSH2 0xD64 JUMP JUMPDEST SWAP2 POP PUSH1 0x40 DUP5 ADD CALLDATALOAD SWAP1 POP SWAP3 POP SWAP3 POP SWAP3 JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0xDF0 JUMPI PUSH0 DUP1 REVERT JUMPDEST PUSH2 0x605 DUP3 PUSH2 0xD64 JUMP JUMPDEST PUSH0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0xE0A JUMPI PUSH0 DUP1 REVERT JUMPDEST PUSH2 0xE13 DUP4 PUSH2 0xD64 JUMP JUMPDEST SWAP2 POP PUSH1 0x20 DUP4 ADD CALLDATALOAD DUP1 ISZERO ISZERO DUP2 EQ PUSH2 0xE27 JUMPI PUSH0 DUP1 REVERT JUMPDEST DUP1 SWAP2 POP POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH0 MSTORE PUSH1 0x41 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH0 REVERT JUMPDEST PUSH0 DUP1 PUSH0 DUP1 PUSH1 0x80 DUP6 DUP8 SUB SLT ISZERO PUSH2 0xE59 JUMPI PUSH0 DUP1 REVERT JUMPDEST PUSH2 0xE62 DUP6 PUSH2 0xD64 JUMP JUMPDEST SWAP4 POP PUSH2 0xE70 PUSH1 0x20 DUP7 ADD PUSH2 0xD64 JUMP JUMPDEST SWAP3 POP PUSH1 0x40 DUP6 ADD CALLDATALOAD SWAP2 POP PUSH1 0x60 DUP6 ADD CALLDATALOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP1 DUP3 GT ISZERO PUSH2 0xE93 JUMPI PUSH0 DUP1 REVERT JUMPDEST DUP2 DUP8 ADD SWAP2 POP DUP8 PUSH1 0x1F DUP4 ADD SLT PUSH2 0xEA6 JUMPI PUSH0 DUP1 REVERT JUMPDEST DUP2 CALLDATALOAD DUP2 DUP2 GT ISZERO PUSH2 0xEB8 JUMPI PUSH2 0xEB8 PUSH2 0xE32 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x1F DUP3 ADD PUSH1 0x1F NOT SWAP1 DUP2 AND PUSH1 0x3F ADD AND DUP2 ADD SWAP1 DUP4 DUP3 GT DUP2 DUP4 LT OR ISZERO PUSH2 0xEE0 JUMPI PUSH2 0xEE0 PUSH2 0xE32 JUMP JUMPDEST DUP2 PUSH1 0x40 MSTORE DUP3 DUP2 MSTORE DUP11 PUSH1 0x20 DUP5 DUP8 ADD ADD GT ISZERO PUSH2 0xEF8 JUMPI PUSH0 DUP1 REVERT JUMPDEST DUP3 PUSH1 0x20 DUP7 ADD PUSH1 0x20 DUP4 ADD CALLDATACOPY PUSH0 PUSH1 0x20 DUP5 DUP4 ADD ADD MSTORE DUP1 SWAP6 POP POP POP POP POP POP SWAP3 SWAP6 SWAP2 SWAP5 POP SWAP3 POP JUMP JUMPDEST PUSH0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0xF2C JUMPI PUSH0 DUP1 REVERT JUMPDEST PUSH2 0xF35 DUP4 PUSH2 0xD64 JUMP JUMPDEST SWAP2 POP PUSH2 0xF43 PUSH1 0x20 DUP5 ADD PUSH2 0xD64 JUMP JUMPDEST SWAP1 POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH1 0x1 DUP2 DUP2 SHR SWAP1 DUP3 AND DUP1 PUSH2 0xF60 JUMPI PUSH1 0x7F DUP3 AND SWAP2 POP JUMPDEST PUSH1 0x20 DUP3 LT DUP2 SUB PUSH2 0xF7E JUMPI PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH0 MSTORE PUSH1 0x22 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH0 REVERT JUMPDEST POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x20 DUP1 DUP3 MSTORE PUSH1 0x2D SWAP1 DUP3 ADD MSTORE PUSH32 0x4552433732313A2063616C6C6572206973206E6F7420746F6B656E206F776E65 PUSH1 0x40 DUP3 ADD MSTORE PUSH13 0x1C881BDC88185C1C1C9BDD9959 PUSH1 0x9A SHL PUSH1 0x60 DUP3 ADD MSTORE PUSH1 0x80 ADD SWAP1 JUMP JUMPDEST PUSH0 DUP4 MLOAD PUSH2 0xFE2 DUP2 DUP5 PUSH1 0x20 DUP9 ADD PUSH2 0xCEE JUMP JUMPDEST DUP4 MLOAD SWAP1 DUP4 ADD SWAP1 PUSH2 0xFF6 DUP2 DUP4 PUSH1 0x20 DUP9 ADD PUSH2 0xCEE JUMP JUMPDEST ADD SWAP5 SWAP4 POP POP POP POP JUMP JUMPDEST PUSH1 0x20 DUP1 DUP3 MSTORE PUSH1 0x25 SWAP1 DUP3 ADD MSTORE PUSH32 0x4552433732313A207472616E736665722066726F6D20696E636F727265637420 PUSH1 0x40 DUP3 ADD MSTORE PUSH5 0x37BBB732B9 PUSH1 0xD9 SHL PUSH1 0x60 DUP3 ADD MSTORE PUSH1 0x80 ADD SWAP1 JUMP JUMPDEST PUSH1 0x20 DUP1 DUP3 MSTORE PUSH1 0x32 SWAP1 DUP3 ADD MSTORE PUSH32 0x4552433732313A207472616E7366657220746F206E6F6E204552433732315265 PUSH1 0x40 DUP3 ADD MSTORE PUSH18 0x31B2B4BB32B91034B6B83632B6B2B73A32B9 PUSH1 0x71 SHL PUSH1 0x60 DUP3 ADD MSTORE PUSH1 0x80 ADD SWAP1 JUMP JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH0 MSTORE PUSH1 0x11 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH0 REVERT JUMPDEST DUP2 DUP2 SUB DUP2 DUP2 GT ISZERO PUSH2 0x245 JUMPI PUSH2 0x245 PUSH2 0x1096 JUMP JUMPDEST DUP1 DUP3 ADD DUP1 DUP3 GT ISZERO PUSH2 0x245 JUMPI PUSH2 0x245 PUSH2 0x1096 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP6 DUP2 AND DUP3 MSTORE DUP5 AND PUSH1 0x20 DUP3 ADD MSTORE PUSH1 0x40 DUP2 ADD DUP4 SWAP1 MSTORE PUSH1 0x80 PUSH1 0x60 DUP3 ADD DUP2 SWAP1 MSTORE PUSH0 SWAP1 PUSH2 0x1102 SWAP1 DUP4 ADD DUP5 PUSH2 0xD10 JUMP JUMPDEST SWAP7 SWAP6 POP POP POP POP POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x111C JUMPI PUSH0 DUP1 REVERT JUMPDEST DUP2 MLOAD PUSH2 0x605 DUP2 PUSH2 0xCBE JUMP INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 DUP7 PUSH9 0xB10ADE2CE4E39ACC04 0x4F PUSH30 0xBEFC7EDADAAE5A1FBB762E25BF9B747808BB8464736F6C63430008150033 ",
							"sourceMap": "628:16327:2:-:0;;;1390:113;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;1456:5;:13;1464:5;1456;:13;:::i;:::-;-1:-1:-1;1479:7:2;:17;1489:7;1479;:17;:::i;:::-;;1390:113;;628:16327;;14:127:14;75:10;70:3;66:20;63:1;56:31;106:4;103:1;96:15;130:4;127:1;120:15;146:840;200:5;253:3;246:4;238:6;234:17;230:27;220:55;;271:1;268;261:12;220:55;294:13;;-1:-1:-1;;;;;356:10:14;;;353:36;;;369:18;;:::i;:::-;444:2;438:9;412:2;498:13;;-1:-1:-1;;494:22:14;;;518:2;490:31;486:40;474:53;;;542:18;;;562:22;;;539:46;536:72;;;588:18;;:::i;:::-;628:10;624:2;617:22;663:2;655:6;648:18;685:4;675:14;;730:3;725:2;720;712:6;708:15;704:24;701:33;698:53;;;747:1;744;737:12;698:53;769:1;760:10;;779:133;793:2;790:1;787:9;779:133;;;881:14;;;877:23;;871:30;850:14;;;846:23;;839:63;804:10;;;;779:133;;;954:1;932:15;;;928:24;;;921:35;;;;936:6;146:840;-1:-1:-1;;;;146:840:14:o;991:562::-;1090:6;1098;1151:2;1139:9;1130:7;1126:23;1122:32;1119:52;;;1167:1;1164;1157:12;1119:52;1194:16;;-1:-1:-1;;;;;1259:14:14;;;1256:34;;;1286:1;1283;1276:12;1256:34;1309:61;1362:7;1353:6;1342:9;1338:22;1309:61;:::i;:::-;1299:71;;1416:2;1405:9;1401:18;1395:25;1379:41;;1445:2;1435:8;1432:16;1429:36;;;1461:1;1458;1451:12;1429:36;;1484:63;1539:7;1528:8;1517:9;1513:24;1484:63;:::i;:::-;1474:73;;;991:562;;;;;:::o;1558:380::-;1637:1;1633:12;;;;1680;;;1701:61;;1755:4;1747:6;1743:17;1733:27;;1701:61;1808:2;1800:6;1797:14;1777:18;1774:38;1771:161;;1854:10;1849:3;1845:20;1842:1;1835:31;1889:4;1886:1;1879:15;1917:4;1914:1;1907:15;1771:161;;1558:380;;;:::o;2069:545::-;2171:2;2166:3;2163:11;2160:448;;;2207:1;2232:5;2228:2;2221:17;2277:4;2273:2;2263:19;2347:2;2335:10;2331:19;2328:1;2324:27;2318:4;2314:38;2383:4;2371:10;2368:20;2365:47;;;-1:-1:-1;2406:4:14;2365:47;2461:2;2456:3;2452:12;2449:1;2445:20;2439:4;2435:31;2425:41;;2516:82;2534:2;2527:5;2524:13;2516:82;;;2579:17;;;2560:1;2549:13;2516:82;;;2520:3;;;2160:448;2069:545;;;:::o;2790:1352::-;2910:10;;-1:-1:-1;;;;;2932:30:14;;2929:56;;;2965:18;;:::i;:::-;2994:97;3084:6;3044:38;3076:4;3070:11;3044:38;:::i;:::-;3038:4;2994:97;:::i;:::-;3146:4;;3210:2;3199:14;;3227:1;3222:663;;;;3929:1;3946:6;3943:89;;;-1:-1:-1;3998:19:14;;;3992:26;3943:89;-1:-1:-1;;2747:1:14;2743:11;;;2739:24;2735:29;2725:40;2771:1;2767:11;;;2722:57;4045:81;;3192:944;;3222:663;2016:1;2009:14;;;2053:4;2040:18;;-1:-1:-1;;3258:20:14;;;3376:236;3390:7;3387:1;3384:14;3376:236;;;3479:19;;;3473:26;3458:42;;3571:27;;;;3539:1;3527:14;;;;3406:19;;3376:236;;;3380:3;3640:6;3631:7;3628:19;3625:201;;;3701:19;;;3695:26;-1:-1:-1;;3784:1:14;3780:14;;;3796:3;3776:24;3772:37;3768:42;3753:58;3738:74;;3625:201;-1:-1:-1;;;;;3872:1:14;3856:14;;;3852:22;3839:36;;-1:-1:-1;2790:1352:14:o;:::-;628:16327:2;;;;;;"
						},
						"deployedBytecode": {
							"functionDebugData": {
								"@_afterTokenTransfer_1110": {
									"entryPoint": null,
									"id": 1110,
									"parameterSlots": 4,
									"returnSlots": 0
								},
								"@_approve_943": {
									"entryPoint": 1690,
									"id": 943,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"@_baseURI_380": {
									"entryPoint": null,
									"id": 380,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"@_beforeTokenTransfer_1097": {
									"entryPoint": 2660,
									"id": 1097,
									"parameterSlots": 4,
									"returnSlots": 0
								},
								"@_checkOnERC721Received_1051": {
									"entryPoint": 2794,
									"id": 1051,
									"parameterSlots": 4,
									"returnSlots": 1
								},
								"@_exists_612": {
									"entryPoint": null,
									"id": 612,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"@_isApprovedOrOwner_646": {
									"entryPoint": 1799,
									"id": 646,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"@_msgSender_1614": {
									"entryPoint": null,
									"id": 1614,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"@_ownerOf_594": {
									"entryPoint": null,
									"id": 594,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"@_requireMinted_989": {
									"entryPoint": 1593,
									"id": 989,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"@_safeTransfer_581": {
									"entryPoint": 2465,
									"id": 581,
									"parameterSlots": 4,
									"returnSlots": 0
								},
								"@_setApprovalForAll_975": {
									"entryPoint": 2260,
									"id": 975,
									"parameterSlots": 3,
									"returnSlots": 0
								},
								"@_transfer_919": {
									"entryPoint": 1893,
									"id": 919,
									"parameterSlots": 3,
									"returnSlots": 0
								},
								"@approve_423": {
									"entryPoint": 767,
									"id": 423,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"@balanceOf_284": {
									"entryPoint": 1218,
									"id": 284,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"@getApproved_441": {
									"entryPoint": 730,
									"id": 441,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"@isApprovedForAll_476": {
									"entryPoint": 1548,
									"id": 476,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"@isContract_1290": {
									"entryPoint": null,
									"id": 1290,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"@log10_2611": {
									"entryPoint": 3047,
									"id": 2611,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"@name_322": {
									"entryPoint": 587,
									"id": 322,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"@ownerOf_312": {
									"entryPoint": 1123,
									"id": 312,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"@safeTransferFrom_522": {
									"entryPoint": 1097,
									"id": 522,
									"parameterSlots": 3,
									"returnSlots": 0
								},
								"@safeTransferFrom_552": {
									"entryPoint": 1380,
									"id": 552,
									"parameterSlots": 4,
									"returnSlots": 0
								},
								"@setApprovalForAll_458": {
									"entryPoint": 1365,
									"id": 458,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"@supportsInterface_1896": {
									"entryPoint": null,
									"id": 1896,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"@supportsInterface_260": {
									"entryPoint": 506,
									"id": 260,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"@symbol_332": {
									"entryPoint": 1350,
									"id": 332,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"@toString_1756": {
									"entryPoint": 2516,
									"id": 1756,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"@tokenURI_371": {
									"entryPoint": 1436,
									"id": 371,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"@transferFrom_503": {
									"entryPoint": 1048,
									"id": 503,
									"parameterSlots": 3,
									"returnSlots": 0
								},
								"abi_decode_address": {
									"entryPoint": 3428,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_decode_tuple_t_address": {
									"entryPoint": 3552,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_tuple_t_addresst_address": {
									"entryPoint": 3867,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 2
								},
								"abi_decode_tuple_t_addresst_addresst_uint256": {
									"entryPoint": 3495,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 3
								},
								"abi_decode_tuple_t_addresst_addresst_uint256t_bytes_memory_ptr": {
									"entryPoint": 3654,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 4
								},
								"abi_decode_tuple_t_addresst_bool": {
									"entryPoint": 3577,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 2
								},
								"abi_decode_tuple_t_addresst_uint256": {
									"entryPoint": 3455,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 2
								},
								"abi_decode_tuple_t_bytes4": {
									"entryPoint": 3283,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_tuple_t_bytes4_fromMemory": {
									"entryPoint": 4364,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_tuple_t_uint256": {
									"entryPoint": 3405,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_string": {
									"entryPoint": 3344,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_tuple_packed_t_string_memory_ptr_t_string_memory_ptr__to_t_string_memory_ptr_t_string_memory_ptr__nonPadded_inplace_fromStack_reversed": {
									"entryPoint": 4049,
									"id": null,
									"parameterSlots": 3,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_address__to_t_address__fromStack_reversed": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_address_t_address_t_uint256_t_bytes_memory_ptr__to_t_address_t_address_t_uint256_t_bytes_memory_ptr__fromStack_reversed": {
									"entryPoint": 4304,
									"id": null,
									"parameterSlots": 5,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_bool__to_t_bool__fromStack_reversed": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_string_memory_ptr__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": 3387,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_12a8e5623d251e191fe4a291d9a59bcc01a4db7a1f5c20fc8de44358c18308af__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": 3972,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_1e766a06da43a53d0f4c380e06e5a342e14d5af1bf8501996c844905530ca84e__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": 4164,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_277f8ee9d5b4fc3c4149386f24de0fc1bbc63a8210e2197bfd1c0376a2ac5f48__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": 4095,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_455fea98ea03c32d7dd1a6f1426917d80529bf47b3ccbde74e7206e889e709f4__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_45fe4329685be5ecd250fd0e6a25aea0ea4d0e30fb6a73c118b95749e6d70d05__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_6d05c90094f31cfeb8f0eb86f0a513af3f7f8992991fbde41b08aa7960677159__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_b08d2b0fec7cc108ab049809a8beb42779d969a49299d0c317c907d9db22974f__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_b51b4875eede07862961e8f9365c6749f5fe55c6ee5d7a9e42b6912ad0b15942__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_c6e14a63ffb144eeef7cce6988e5dce07c60a7e0a7b1ef25dbe18c61483e0a83__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"checked_add_t_uint256": {
									"entryPoint": 4285,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"checked_sub_t_uint256": {
									"entryPoint": 4266,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"copy_memory_to_memory_with_cleanup": {
									"entryPoint": 3310,
									"id": null,
									"parameterSlots": 3,
									"returnSlots": 0
								},
								"extract_byte_array_length": {
									"entryPoint": 3916,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"panic_error_0x11": {
									"entryPoint": 4246,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"panic_error_0x12": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"panic_error_0x41": {
									"entryPoint": 3634,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"validator_revert_bytes4": {
									"entryPoint": 3262,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								}
							},
							"generatedSources": [
								{
									"ast": {
										"nativeSrc": "0:10527:14",
										"nodeType": "YulBlock",
										"src": "0:10527:14",
										"statements": [
											{
												"nativeSrc": "6:3:14",
												"nodeType": "YulBlock",
												"src": "6:3:14",
												"statements": []
											},
											{
												"body": {
													"nativeSrc": "58:87:14",
													"nodeType": "YulBlock",
													"src": "58:87:14",
													"statements": [
														{
															"body": {
																"nativeSrc": "123:16:14",
																"nodeType": "YulBlock",
																"src": "123:16:14",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nativeSrc": "132:1:14",
																					"nodeType": "YulLiteral",
																					"src": "132:1:14",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "135:1:14",
																					"nodeType": "YulLiteral",
																					"src": "135:1:14",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nativeSrc": "125:6:14",
																				"nodeType": "YulIdentifier",
																				"src": "125:6:14"
																			},
																			"nativeSrc": "125:12:14",
																			"nodeType": "YulFunctionCall",
																			"src": "125:12:14"
																		},
																		"nativeSrc": "125:12:14",
																		"nodeType": "YulExpressionStatement",
																		"src": "125:12:14"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nativeSrc": "81:5:14",
																				"nodeType": "YulIdentifier",
																				"src": "81:5:14"
																			},
																			{
																				"arguments": [
																					{
																						"name": "value",
																						"nativeSrc": "92:5:14",
																						"nodeType": "YulIdentifier",
																						"src": "92:5:14"
																					},
																					{
																						"arguments": [
																							{
																								"kind": "number",
																								"nativeSrc": "103:3:14",
																								"nodeType": "YulLiteral",
																								"src": "103:3:14",
																								"type": "",
																								"value": "224"
																							},
																							{
																								"kind": "number",
																								"nativeSrc": "108:10:14",
																								"nodeType": "YulLiteral",
																								"src": "108:10:14",
																								"type": "",
																								"value": "0xffffffff"
																							}
																						],
																						"functionName": {
																							"name": "shl",
																							"nativeSrc": "99:3:14",
																							"nodeType": "YulIdentifier",
																							"src": "99:3:14"
																						},
																						"nativeSrc": "99:20:14",
																						"nodeType": "YulFunctionCall",
																						"src": "99:20:14"
																					}
																				],
																				"functionName": {
																					"name": "and",
																					"nativeSrc": "88:3:14",
																					"nodeType": "YulIdentifier",
																					"src": "88:3:14"
																				},
																				"nativeSrc": "88:32:14",
																				"nodeType": "YulFunctionCall",
																				"src": "88:32:14"
																			}
																		],
																		"functionName": {
																			"name": "eq",
																			"nativeSrc": "78:2:14",
																			"nodeType": "YulIdentifier",
																			"src": "78:2:14"
																		},
																		"nativeSrc": "78:43:14",
																		"nodeType": "YulFunctionCall",
																		"src": "78:43:14"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nativeSrc": "71:6:14",
																	"nodeType": "YulIdentifier",
																	"src": "71:6:14"
																},
																"nativeSrc": "71:51:14",
																"nodeType": "YulFunctionCall",
																"src": "71:51:14"
															},
															"nativeSrc": "68:71:14",
															"nodeType": "YulIf",
															"src": "68:71:14"
														}
													]
												},
												"name": "validator_revert_bytes4",
												"nativeSrc": "14:131:14",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "47:5:14",
														"nodeType": "YulTypedName",
														"src": "47:5:14",
														"type": ""
													}
												],
												"src": "14:131:14"
											},
											{
												"body": {
													"nativeSrc": "219:176:14",
													"nodeType": "YulBlock",
													"src": "219:176:14",
													"statements": [
														{
															"body": {
																"nativeSrc": "265:16:14",
																"nodeType": "YulBlock",
																"src": "265:16:14",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nativeSrc": "274:1:14",
																					"nodeType": "YulLiteral",
																					"src": "274:1:14",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "277:1:14",
																					"nodeType": "YulLiteral",
																					"src": "277:1:14",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nativeSrc": "267:6:14",
																				"nodeType": "YulIdentifier",
																				"src": "267:6:14"
																			},
																			"nativeSrc": "267:12:14",
																			"nodeType": "YulFunctionCall",
																			"src": "267:12:14"
																		},
																		"nativeSrc": "267:12:14",
																		"nodeType": "YulExpressionStatement",
																		"src": "267:12:14"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nativeSrc": "240:7:14",
																				"nodeType": "YulIdentifier",
																				"src": "240:7:14"
																			},
																			{
																				"name": "headStart",
																				"nativeSrc": "249:9:14",
																				"nodeType": "YulIdentifier",
																				"src": "249:9:14"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "236:3:14",
																			"nodeType": "YulIdentifier",
																			"src": "236:3:14"
																		},
																		"nativeSrc": "236:23:14",
																		"nodeType": "YulFunctionCall",
																		"src": "236:23:14"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "261:2:14",
																		"nodeType": "YulLiteral",
																		"src": "261:2:14",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nativeSrc": "232:3:14",
																	"nodeType": "YulIdentifier",
																	"src": "232:3:14"
																},
																"nativeSrc": "232:32:14",
																"nodeType": "YulFunctionCall",
																"src": "232:32:14"
															},
															"nativeSrc": "229:52:14",
															"nodeType": "YulIf",
															"src": "229:52:14"
														},
														{
															"nativeSrc": "290:36:14",
															"nodeType": "YulVariableDeclaration",
															"src": "290:36:14",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "316:9:14",
																		"nodeType": "YulIdentifier",
																		"src": "316:9:14"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nativeSrc": "303:12:14",
																	"nodeType": "YulIdentifier",
																	"src": "303:12:14"
																},
																"nativeSrc": "303:23:14",
																"nodeType": "YulFunctionCall",
																"src": "303:23:14"
															},
															"variables": [
																{
																	"name": "value",
																	"nativeSrc": "294:5:14",
																	"nodeType": "YulTypedName",
																	"src": "294:5:14",
																	"type": ""
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "359:5:14",
																		"nodeType": "YulIdentifier",
																		"src": "359:5:14"
																	}
																],
																"functionName": {
																	"name": "validator_revert_bytes4",
																	"nativeSrc": "335:23:14",
																	"nodeType": "YulIdentifier",
																	"src": "335:23:14"
																},
																"nativeSrc": "335:30:14",
																"nodeType": "YulFunctionCall",
																"src": "335:30:14"
															},
															"nativeSrc": "335:30:14",
															"nodeType": "YulExpressionStatement",
															"src": "335:30:14"
														},
														{
															"nativeSrc": "374:15:14",
															"nodeType": "YulAssignment",
															"src": "374:15:14",
															"value": {
																"name": "value",
																"nativeSrc": "384:5:14",
																"nodeType": "YulIdentifier",
																"src": "384:5:14"
															},
															"variableNames": [
																{
																	"name": "value0",
																	"nativeSrc": "374:6:14",
																	"nodeType": "YulIdentifier",
																	"src": "374:6:14"
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_bytes4",
												"nativeSrc": "150:245:14",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "185:9:14",
														"nodeType": "YulTypedName",
														"src": "185:9:14",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nativeSrc": "196:7:14",
														"nodeType": "YulTypedName",
														"src": "196:7:14",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nativeSrc": "208:6:14",
														"nodeType": "YulTypedName",
														"src": "208:6:14",
														"type": ""
													}
												],
												"src": "150:245:14"
											},
											{
												"body": {
													"nativeSrc": "495:92:14",
													"nodeType": "YulBlock",
													"src": "495:92:14",
													"statements": [
														{
															"nativeSrc": "505:26:14",
															"nodeType": "YulAssignment",
															"src": "505:26:14",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "517:9:14",
																		"nodeType": "YulIdentifier",
																		"src": "517:9:14"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "528:2:14",
																		"nodeType": "YulLiteral",
																		"src": "528:2:14",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "513:3:14",
																	"nodeType": "YulIdentifier",
																	"src": "513:3:14"
																},
																"nativeSrc": "513:18:14",
																"nodeType": "YulFunctionCall",
																"src": "513:18:14"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "505:4:14",
																	"nodeType": "YulIdentifier",
																	"src": "505:4:14"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "547:9:14",
																		"nodeType": "YulIdentifier",
																		"src": "547:9:14"
																	},
																	{
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "value0",
																						"nativeSrc": "572:6:14",
																						"nodeType": "YulIdentifier",
																						"src": "572:6:14"
																					}
																				],
																				"functionName": {
																					"name": "iszero",
																					"nativeSrc": "565:6:14",
																					"nodeType": "YulIdentifier",
																					"src": "565:6:14"
																				},
																				"nativeSrc": "565:14:14",
																				"nodeType": "YulFunctionCall",
																				"src": "565:14:14"
																			}
																		],
																		"functionName": {
																			"name": "iszero",
																			"nativeSrc": "558:6:14",
																			"nodeType": "YulIdentifier",
																			"src": "558:6:14"
																		},
																		"nativeSrc": "558:22:14",
																		"nodeType": "YulFunctionCall",
																		"src": "558:22:14"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "540:6:14",
																	"nodeType": "YulIdentifier",
																	"src": "540:6:14"
																},
																"nativeSrc": "540:41:14",
																"nodeType": "YulFunctionCall",
																"src": "540:41:14"
															},
															"nativeSrc": "540:41:14",
															"nodeType": "YulExpressionStatement",
															"src": "540:41:14"
														}
													]
												},
												"name": "abi_encode_tuple_t_bool__to_t_bool__fromStack_reversed",
												"nativeSrc": "400:187:14",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "464:9:14",
														"nodeType": "YulTypedName",
														"src": "464:9:14",
														"type": ""
													},
													{
														"name": "value0",
														"nativeSrc": "475:6:14",
														"nodeType": "YulTypedName",
														"src": "475:6:14",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "486:4:14",
														"nodeType": "YulTypedName",
														"src": "486:4:14",
														"type": ""
													}
												],
												"src": "400:187:14"
											},
											{
												"body": {
													"nativeSrc": "658:184:14",
													"nodeType": "YulBlock",
													"src": "658:184:14",
													"statements": [
														{
															"nativeSrc": "668:10:14",
															"nodeType": "YulVariableDeclaration",
															"src": "668:10:14",
															"value": {
																"kind": "number",
																"nativeSrc": "677:1:14",
																"nodeType": "YulLiteral",
																"src": "677:1:14",
																"type": "",
																"value": "0"
															},
															"variables": [
																{
																	"name": "i",
																	"nativeSrc": "672:1:14",
																	"nodeType": "YulTypedName",
																	"src": "672:1:14",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nativeSrc": "737:63:14",
																"nodeType": "YulBlock",
																"src": "737:63:14",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"arguments": [
																						{
																							"name": "dst",
																							"nativeSrc": "762:3:14",
																							"nodeType": "YulIdentifier",
																							"src": "762:3:14"
																						},
																						{
																							"name": "i",
																							"nativeSrc": "767:1:14",
																							"nodeType": "YulIdentifier",
																							"src": "767:1:14"
																						}
																					],
																					"functionName": {
																						"name": "add",
																						"nativeSrc": "758:3:14",
																						"nodeType": "YulIdentifier",
																						"src": "758:3:14"
																					},
																					"nativeSrc": "758:11:14",
																					"nodeType": "YulFunctionCall",
																					"src": "758:11:14"
																				},
																				{
																					"arguments": [
																						{
																							"arguments": [
																								{
																									"name": "src",
																									"nativeSrc": "781:3:14",
																									"nodeType": "YulIdentifier",
																									"src": "781:3:14"
																								},
																								{
																									"name": "i",
																									"nativeSrc": "786:1:14",
																									"nodeType": "YulIdentifier",
																									"src": "786:1:14"
																								}
																							],
																							"functionName": {
																								"name": "add",
																								"nativeSrc": "777:3:14",
																								"nodeType": "YulIdentifier",
																								"src": "777:3:14"
																							},
																							"nativeSrc": "777:11:14",
																							"nodeType": "YulFunctionCall",
																							"src": "777:11:14"
																						}
																					],
																					"functionName": {
																						"name": "mload",
																						"nativeSrc": "771:5:14",
																						"nodeType": "YulIdentifier",
																						"src": "771:5:14"
																					},
																					"nativeSrc": "771:18:14",
																					"nodeType": "YulFunctionCall",
																					"src": "771:18:14"
																				}
																			],
																			"functionName": {
																				"name": "mstore",
																				"nativeSrc": "751:6:14",
																				"nodeType": "YulIdentifier",
																				"src": "751:6:14"
																			},
																			"nativeSrc": "751:39:14",
																			"nodeType": "YulFunctionCall",
																			"src": "751:39:14"
																		},
																		"nativeSrc": "751:39:14",
																		"nodeType": "YulExpressionStatement",
																		"src": "751:39:14"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "i",
																		"nativeSrc": "698:1:14",
																		"nodeType": "YulIdentifier",
																		"src": "698:1:14"
																	},
																	{
																		"name": "length",
																		"nativeSrc": "701:6:14",
																		"nodeType": "YulIdentifier",
																		"src": "701:6:14"
																	}
																],
																"functionName": {
																	"name": "lt",
																	"nativeSrc": "695:2:14",
																	"nodeType": "YulIdentifier",
																	"src": "695:2:14"
																},
																"nativeSrc": "695:13:14",
																"nodeType": "YulFunctionCall",
																"src": "695:13:14"
															},
															"nativeSrc": "687:113:14",
															"nodeType": "YulForLoop",
															"post": {
																"nativeSrc": "709:19:14",
																"nodeType": "YulBlock",
																"src": "709:19:14",
																"statements": [
																	{
																		"nativeSrc": "711:15:14",
																		"nodeType": "YulAssignment",
																		"src": "711:15:14",
																		"value": {
																			"arguments": [
																				{
																					"name": "i",
																					"nativeSrc": "720:1:14",
																					"nodeType": "YulIdentifier",
																					"src": "720:1:14"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "723:2:14",
																					"nodeType": "YulLiteral",
																					"src": "723:2:14",
																					"type": "",
																					"value": "32"
																				}
																			],
																			"functionName": {
																				"name": "add",
																				"nativeSrc": "716:3:14",
																				"nodeType": "YulIdentifier",
																				"src": "716:3:14"
																			},
																			"nativeSrc": "716:10:14",
																			"nodeType": "YulFunctionCall",
																			"src": "716:10:14"
																		},
																		"variableNames": [
																			{
																				"name": "i",
																				"nativeSrc": "711:1:14",
																				"nodeType": "YulIdentifier",
																				"src": "711:1:14"
																			}
																		]
																	}
																]
															},
															"pre": {
																"nativeSrc": "691:3:14",
																"nodeType": "YulBlock",
																"src": "691:3:14",
																"statements": []
															},
															"src": "687:113:14"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dst",
																				"nativeSrc": "820:3:14",
																				"nodeType": "YulIdentifier",
																				"src": "820:3:14"
																			},
																			{
																				"name": "length",
																				"nativeSrc": "825:6:14",
																				"nodeType": "YulIdentifier",
																				"src": "825:6:14"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "816:3:14",
																			"nodeType": "YulIdentifier",
																			"src": "816:3:14"
																		},
																		"nativeSrc": "816:16:14",
																		"nodeType": "YulFunctionCall",
																		"src": "816:16:14"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "834:1:14",
																		"nodeType": "YulLiteral",
																		"src": "834:1:14",
																		"type": "",
																		"value": "0"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "809:6:14",
																	"nodeType": "YulIdentifier",
																	"src": "809:6:14"
																},
																"nativeSrc": "809:27:14",
																"nodeType": "YulFunctionCall",
																"src": "809:27:14"
															},
															"nativeSrc": "809:27:14",
															"nodeType": "YulExpressionStatement",
															"src": "809:27:14"
														}
													]
												},
												"name": "copy_memory_to_memory_with_cleanup",
												"nativeSrc": "592:250:14",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "src",
														"nativeSrc": "636:3:14",
														"nodeType": "YulTypedName",
														"src": "636:3:14",
														"type": ""
													},
													{
														"name": "dst",
														"nativeSrc": "641:3:14",
														"nodeType": "YulTypedName",
														"src": "641:3:14",
														"type": ""
													},
													{
														"name": "length",
														"nativeSrc": "646:6:14",
														"nodeType": "YulTypedName",
														"src": "646:6:14",
														"type": ""
													}
												],
												"src": "592:250:14"
											},
											{
												"body": {
													"nativeSrc": "897:221:14",
													"nodeType": "YulBlock",
													"src": "897:221:14",
													"statements": [
														{
															"nativeSrc": "907:26:14",
															"nodeType": "YulVariableDeclaration",
															"src": "907:26:14",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "927:5:14",
																		"nodeType": "YulIdentifier",
																		"src": "927:5:14"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nativeSrc": "921:5:14",
																	"nodeType": "YulIdentifier",
																	"src": "921:5:14"
																},
																"nativeSrc": "921:12:14",
																"nodeType": "YulFunctionCall",
																"src": "921:12:14"
															},
															"variables": [
																{
																	"name": "length",
																	"nativeSrc": "911:6:14",
																	"nodeType": "YulTypedName",
																	"src": "911:6:14",
																	"type": ""
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "949:3:14",
																		"nodeType": "YulIdentifier",
																		"src": "949:3:14"
																	},
																	{
																		"name": "length",
																		"nativeSrc": "954:6:14",
																		"nodeType": "YulIdentifier",
																		"src": "954:6:14"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "942:6:14",
																	"nodeType": "YulIdentifier",
																	"src": "942:6:14"
																},
																"nativeSrc": "942:19:14",
																"nodeType": "YulFunctionCall",
																"src": "942:19:14"
															},
															"nativeSrc": "942:19:14",
															"nodeType": "YulExpressionStatement",
															"src": "942:19:14"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nativeSrc": "1009:5:14",
																				"nodeType": "YulIdentifier",
																				"src": "1009:5:14"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "1016:4:14",
																				"nodeType": "YulLiteral",
																				"src": "1016:4:14",
																				"type": "",
																				"value": "0x20"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "1005:3:14",
																			"nodeType": "YulIdentifier",
																			"src": "1005:3:14"
																		},
																		"nativeSrc": "1005:16:14",
																		"nodeType": "YulFunctionCall",
																		"src": "1005:16:14"
																	},
																	{
																		"arguments": [
																			{
																				"name": "pos",
																				"nativeSrc": "1027:3:14",
																				"nodeType": "YulIdentifier",
																				"src": "1027:3:14"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "1032:4:14",
																				"nodeType": "YulLiteral",
																				"src": "1032:4:14",
																				"type": "",
																				"value": "0x20"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "1023:3:14",
																			"nodeType": "YulIdentifier",
																			"src": "1023:3:14"
																		},
																		"nativeSrc": "1023:14:14",
																		"nodeType": "YulFunctionCall",
																		"src": "1023:14:14"
																	},
																	{
																		"name": "length",
																		"nativeSrc": "1039:6:14",
																		"nodeType": "YulIdentifier",
																		"src": "1039:6:14"
																	}
																],
																"functionName": {
																	"name": "copy_memory_to_memory_with_cleanup",
																	"nativeSrc": "970:34:14",
																	"nodeType": "YulIdentifier",
																	"src": "970:34:14"
																},
																"nativeSrc": "970:76:14",
																"nodeType": "YulFunctionCall",
																"src": "970:76:14"
															},
															"nativeSrc": "970:76:14",
															"nodeType": "YulExpressionStatement",
															"src": "970:76:14"
														},
														{
															"nativeSrc": "1055:57:14",
															"nodeType": "YulAssignment",
															"src": "1055:57:14",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "pos",
																				"nativeSrc": "1070:3:14",
																				"nodeType": "YulIdentifier",
																				"src": "1070:3:14"
																			},
																			{
																				"arguments": [
																					{
																						"arguments": [
																							{
																								"name": "length",
																								"nativeSrc": "1083:6:14",
																								"nodeType": "YulIdentifier",
																								"src": "1083:6:14"
																							},
																							{
																								"kind": "number",
																								"nativeSrc": "1091:2:14",
																								"nodeType": "YulLiteral",
																								"src": "1091:2:14",
																								"type": "",
																								"value": "31"
																							}
																						],
																						"functionName": {
																							"name": "add",
																							"nativeSrc": "1079:3:14",
																							"nodeType": "YulIdentifier",
																							"src": "1079:3:14"
																						},
																						"nativeSrc": "1079:15:14",
																						"nodeType": "YulFunctionCall",
																						"src": "1079:15:14"
																					},
																					{
																						"arguments": [
																							{
																								"kind": "number",
																								"nativeSrc": "1100:2:14",
																								"nodeType": "YulLiteral",
																								"src": "1100:2:14",
																								"type": "",
																								"value": "31"
																							}
																						],
																						"functionName": {
																							"name": "not",
																							"nativeSrc": "1096:3:14",
																							"nodeType": "YulIdentifier",
																							"src": "1096:3:14"
																						},
																						"nativeSrc": "1096:7:14",
																						"nodeType": "YulFunctionCall",
																						"src": "1096:7:14"
																					}
																				],
																				"functionName": {
																					"name": "and",
																					"nativeSrc": "1075:3:14",
																					"nodeType": "YulIdentifier",
																					"src": "1075:3:14"
																				},
																				"nativeSrc": "1075:29:14",
																				"nodeType": "YulFunctionCall",
																				"src": "1075:29:14"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "1066:3:14",
																			"nodeType": "YulIdentifier",
																			"src": "1066:3:14"
																		},
																		"nativeSrc": "1066:39:14",
																		"nodeType": "YulFunctionCall",
																		"src": "1066:39:14"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "1107:4:14",
																		"nodeType": "YulLiteral",
																		"src": "1107:4:14",
																		"type": "",
																		"value": "0x20"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "1062:3:14",
																	"nodeType": "YulIdentifier",
																	"src": "1062:3:14"
																},
																"nativeSrc": "1062:50:14",
																"nodeType": "YulFunctionCall",
																"src": "1062:50:14"
															},
															"variableNames": [
																{
																	"name": "end",
																	"nativeSrc": "1055:3:14",
																	"nodeType": "YulIdentifier",
																	"src": "1055:3:14"
																}
															]
														}
													]
												},
												"name": "abi_encode_string",
												"nativeSrc": "847:271:14",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "874:5:14",
														"nodeType": "YulTypedName",
														"src": "874:5:14",
														"type": ""
													},
													{
														"name": "pos",
														"nativeSrc": "881:3:14",
														"nodeType": "YulTypedName",
														"src": "881:3:14",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "end",
														"nativeSrc": "889:3:14",
														"nodeType": "YulTypedName",
														"src": "889:3:14",
														"type": ""
													}
												],
												"src": "847:271:14"
											},
											{
												"body": {
													"nativeSrc": "1244:99:14",
													"nodeType": "YulBlock",
													"src": "1244:99:14",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "1261:9:14",
																		"nodeType": "YulIdentifier",
																		"src": "1261:9:14"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "1272:2:14",
																		"nodeType": "YulLiteral",
																		"src": "1272:2:14",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "1254:6:14",
																	"nodeType": "YulIdentifier",
																	"src": "1254:6:14"
																},
																"nativeSrc": "1254:21:14",
																"nodeType": "YulFunctionCall",
																"src": "1254:21:14"
															},
															"nativeSrc": "1254:21:14",
															"nodeType": "YulExpressionStatement",
															"src": "1254:21:14"
														},
														{
															"nativeSrc": "1284:53:14",
															"nodeType": "YulAssignment",
															"src": "1284:53:14",
															"value": {
																"arguments": [
																	{
																		"name": "value0",
																		"nativeSrc": "1310:6:14",
																		"nodeType": "YulIdentifier",
																		"src": "1310:6:14"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "1322:9:14",
																				"nodeType": "YulIdentifier",
																				"src": "1322:9:14"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "1333:2:14",
																				"nodeType": "YulLiteral",
																				"src": "1333:2:14",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "1318:3:14",
																			"nodeType": "YulIdentifier",
																			"src": "1318:3:14"
																		},
																		"nativeSrc": "1318:18:14",
																		"nodeType": "YulFunctionCall",
																		"src": "1318:18:14"
																	}
																],
																"functionName": {
																	"name": "abi_encode_string",
																	"nativeSrc": "1292:17:14",
																	"nodeType": "YulIdentifier",
																	"src": "1292:17:14"
																},
																"nativeSrc": "1292:45:14",
																"nodeType": "YulFunctionCall",
																"src": "1292:45:14"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "1284:4:14",
																	"nodeType": "YulIdentifier",
																	"src": "1284:4:14"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_string_memory_ptr__to_t_string_memory_ptr__fromStack_reversed",
												"nativeSrc": "1123:220:14",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "1213:9:14",
														"nodeType": "YulTypedName",
														"src": "1213:9:14",
														"type": ""
													},
													{
														"name": "value0",
														"nativeSrc": "1224:6:14",
														"nodeType": "YulTypedName",
														"src": "1224:6:14",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "1235:4:14",
														"nodeType": "YulTypedName",
														"src": "1235:4:14",
														"type": ""
													}
												],
												"src": "1123:220:14"
											},
											{
												"body": {
													"nativeSrc": "1418:110:14",
													"nodeType": "YulBlock",
													"src": "1418:110:14",
													"statements": [
														{
															"body": {
																"nativeSrc": "1464:16:14",
																"nodeType": "YulBlock",
																"src": "1464:16:14",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nativeSrc": "1473:1:14",
																					"nodeType": "YulLiteral",
																					"src": "1473:1:14",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "1476:1:14",
																					"nodeType": "YulLiteral",
																					"src": "1476:1:14",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nativeSrc": "1466:6:14",
																				"nodeType": "YulIdentifier",
																				"src": "1466:6:14"
																			},
																			"nativeSrc": "1466:12:14",
																			"nodeType": "YulFunctionCall",
																			"src": "1466:12:14"
																		},
																		"nativeSrc": "1466:12:14",
																		"nodeType": "YulExpressionStatement",
																		"src": "1466:12:14"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nativeSrc": "1439:7:14",
																				"nodeType": "YulIdentifier",
																				"src": "1439:7:14"
																			},
																			{
																				"name": "headStart",
																				"nativeSrc": "1448:9:14",
																				"nodeType": "YulIdentifier",
																				"src": "1448:9:14"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "1435:3:14",
																			"nodeType": "YulIdentifier",
																			"src": "1435:3:14"
																		},
																		"nativeSrc": "1435:23:14",
																		"nodeType": "YulFunctionCall",
																		"src": "1435:23:14"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "1460:2:14",
																		"nodeType": "YulLiteral",
																		"src": "1460:2:14",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nativeSrc": "1431:3:14",
																	"nodeType": "YulIdentifier",
																	"src": "1431:3:14"
																},
																"nativeSrc": "1431:32:14",
																"nodeType": "YulFunctionCall",
																"src": "1431:32:14"
															},
															"nativeSrc": "1428:52:14",
															"nodeType": "YulIf",
															"src": "1428:52:14"
														},
														{
															"nativeSrc": "1489:33:14",
															"nodeType": "YulAssignment",
															"src": "1489:33:14",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "1512:9:14",
																		"nodeType": "YulIdentifier",
																		"src": "1512:9:14"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nativeSrc": "1499:12:14",
																	"nodeType": "YulIdentifier",
																	"src": "1499:12:14"
																},
																"nativeSrc": "1499:23:14",
																"nodeType": "YulFunctionCall",
																"src": "1499:23:14"
															},
															"variableNames": [
																{
																	"name": "value0",
																	"nativeSrc": "1489:6:14",
																	"nodeType": "YulIdentifier",
																	"src": "1489:6:14"
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_uint256",
												"nativeSrc": "1348:180:14",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "1384:9:14",
														"nodeType": "YulTypedName",
														"src": "1384:9:14",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nativeSrc": "1395:7:14",
														"nodeType": "YulTypedName",
														"src": "1395:7:14",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nativeSrc": "1407:6:14",
														"nodeType": "YulTypedName",
														"src": "1407:6:14",
														"type": ""
													}
												],
												"src": "1348:180:14"
											},
											{
												"body": {
													"nativeSrc": "1634:102:14",
													"nodeType": "YulBlock",
													"src": "1634:102:14",
													"statements": [
														{
															"nativeSrc": "1644:26:14",
															"nodeType": "YulAssignment",
															"src": "1644:26:14",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "1656:9:14",
																		"nodeType": "YulIdentifier",
																		"src": "1656:9:14"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "1667:2:14",
																		"nodeType": "YulLiteral",
																		"src": "1667:2:14",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "1652:3:14",
																	"nodeType": "YulIdentifier",
																	"src": "1652:3:14"
																},
																"nativeSrc": "1652:18:14",
																"nodeType": "YulFunctionCall",
																"src": "1652:18:14"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "1644:4:14",
																	"nodeType": "YulIdentifier",
																	"src": "1644:4:14"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "1686:9:14",
																		"nodeType": "YulIdentifier",
																		"src": "1686:9:14"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value0",
																				"nativeSrc": "1701:6:14",
																				"nodeType": "YulIdentifier",
																				"src": "1701:6:14"
																			},
																			{
																				"arguments": [
																					{
																						"arguments": [
																							{
																								"kind": "number",
																								"nativeSrc": "1717:3:14",
																								"nodeType": "YulLiteral",
																								"src": "1717:3:14",
																								"type": "",
																								"value": "160"
																							},
																							{
																								"kind": "number",
																								"nativeSrc": "1722:1:14",
																								"nodeType": "YulLiteral",
																								"src": "1722:1:14",
																								"type": "",
																								"value": "1"
																							}
																						],
																						"functionName": {
																							"name": "shl",
																							"nativeSrc": "1713:3:14",
																							"nodeType": "YulIdentifier",
																							"src": "1713:3:14"
																						},
																						"nativeSrc": "1713:11:14",
																						"nodeType": "YulFunctionCall",
																						"src": "1713:11:14"
																					},
																					{
																						"kind": "number",
																						"nativeSrc": "1726:1:14",
																						"nodeType": "YulLiteral",
																						"src": "1726:1:14",
																						"type": "",
																						"value": "1"
																					}
																				],
																				"functionName": {
																					"name": "sub",
																					"nativeSrc": "1709:3:14",
																					"nodeType": "YulIdentifier",
																					"src": "1709:3:14"
																				},
																				"nativeSrc": "1709:19:14",
																				"nodeType": "YulFunctionCall",
																				"src": "1709:19:14"
																			}
																		],
																		"functionName": {
																			"name": "and",
																			"nativeSrc": "1697:3:14",
																			"nodeType": "YulIdentifier",
																			"src": "1697:3:14"
																		},
																		"nativeSrc": "1697:32:14",
																		"nodeType": "YulFunctionCall",
																		"src": "1697:32:14"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "1679:6:14",
																	"nodeType": "YulIdentifier",
																	"src": "1679:6:14"
																},
																"nativeSrc": "1679:51:14",
																"nodeType": "YulFunctionCall",
																"src": "1679:51:14"
															},
															"nativeSrc": "1679:51:14",
															"nodeType": "YulExpressionStatement",
															"src": "1679:51:14"
														}
													]
												},
												"name": "abi_encode_tuple_t_address__to_t_address__fromStack_reversed",
												"nativeSrc": "1533:203:14",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "1603:9:14",
														"nodeType": "YulTypedName",
														"src": "1603:9:14",
														"type": ""
													},
													{
														"name": "value0",
														"nativeSrc": "1614:6:14",
														"nodeType": "YulTypedName",
														"src": "1614:6:14",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "1625:4:14",
														"nodeType": "YulTypedName",
														"src": "1625:4:14",
														"type": ""
													}
												],
												"src": "1533:203:14"
											},
											{
												"body": {
													"nativeSrc": "1790:124:14",
													"nodeType": "YulBlock",
													"src": "1790:124:14",
													"statements": [
														{
															"nativeSrc": "1800:29:14",
															"nodeType": "YulAssignment",
															"src": "1800:29:14",
															"value": {
																"arguments": [
																	{
																		"name": "offset",
																		"nativeSrc": "1822:6:14",
																		"nodeType": "YulIdentifier",
																		"src": "1822:6:14"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nativeSrc": "1809:12:14",
																	"nodeType": "YulIdentifier",
																	"src": "1809:12:14"
																},
																"nativeSrc": "1809:20:14",
																"nodeType": "YulFunctionCall",
																"src": "1809:20:14"
															},
															"variableNames": [
																{
																	"name": "value",
																	"nativeSrc": "1800:5:14",
																	"nodeType": "YulIdentifier",
																	"src": "1800:5:14"
																}
															]
														},
														{
															"body": {
																"nativeSrc": "1892:16:14",
																"nodeType": "YulBlock",
																"src": "1892:16:14",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nativeSrc": "1901:1:14",
																					"nodeType": "YulLiteral",
																					"src": "1901:1:14",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "1904:1:14",
																					"nodeType": "YulLiteral",
																					"src": "1904:1:14",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nativeSrc": "1894:6:14",
																				"nodeType": "YulIdentifier",
																				"src": "1894:6:14"
																			},
																			"nativeSrc": "1894:12:14",
																			"nodeType": "YulFunctionCall",
																			"src": "1894:12:14"
																		},
																		"nativeSrc": "1894:12:14",
																		"nodeType": "YulExpressionStatement",
																		"src": "1894:12:14"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nativeSrc": "1851:5:14",
																				"nodeType": "YulIdentifier",
																				"src": "1851:5:14"
																			},
																			{
																				"arguments": [
																					{
																						"name": "value",
																						"nativeSrc": "1862:5:14",
																						"nodeType": "YulIdentifier",
																						"src": "1862:5:14"
																					},
																					{
																						"arguments": [
																							{
																								"arguments": [
																									{
																										"kind": "number",
																										"nativeSrc": "1877:3:14",
																										"nodeType": "YulLiteral",
																										"src": "1877:3:14",
																										"type": "",
																										"value": "160"
																									},
																									{
																										"kind": "number",
																										"nativeSrc": "1882:1:14",
																										"nodeType": "YulLiteral",
																										"src": "1882:1:14",
																										"type": "",
																										"value": "1"
																									}
																								],
																								"functionName": {
																									"name": "shl",
																									"nativeSrc": "1873:3:14",
																									"nodeType": "YulIdentifier",
																									"src": "1873:3:14"
																								},
																								"nativeSrc": "1873:11:14",
																								"nodeType": "YulFunctionCall",
																								"src": "1873:11:14"
																							},
																							{
																								"kind": "number",
																								"nativeSrc": "1886:1:14",
																								"nodeType": "YulLiteral",
																								"src": "1886:1:14",
																								"type": "",
																								"value": "1"
																							}
																						],
																						"functionName": {
																							"name": "sub",
																							"nativeSrc": "1869:3:14",
																							"nodeType": "YulIdentifier",
																							"src": "1869:3:14"
																						},
																						"nativeSrc": "1869:19:14",
																						"nodeType": "YulFunctionCall",
																						"src": "1869:19:14"
																					}
																				],
																				"functionName": {
																					"name": "and",
																					"nativeSrc": "1858:3:14",
																					"nodeType": "YulIdentifier",
																					"src": "1858:3:14"
																				},
																				"nativeSrc": "1858:31:14",
																				"nodeType": "YulFunctionCall",
																				"src": "1858:31:14"
																			}
																		],
																		"functionName": {
																			"name": "eq",
																			"nativeSrc": "1848:2:14",
																			"nodeType": "YulIdentifier",
																			"src": "1848:2:14"
																		},
																		"nativeSrc": "1848:42:14",
																		"nodeType": "YulFunctionCall",
																		"src": "1848:42:14"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nativeSrc": "1841:6:14",
																	"nodeType": "YulIdentifier",
																	"src": "1841:6:14"
																},
																"nativeSrc": "1841:50:14",
																"nodeType": "YulFunctionCall",
																"src": "1841:50:14"
															},
															"nativeSrc": "1838:70:14",
															"nodeType": "YulIf",
															"src": "1838:70:14"
														}
													]
												},
												"name": "abi_decode_address",
												"nativeSrc": "1741:173:14",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "offset",
														"nativeSrc": "1769:6:14",
														"nodeType": "YulTypedName",
														"src": "1769:6:14",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value",
														"nativeSrc": "1780:5:14",
														"nodeType": "YulTypedName",
														"src": "1780:5:14",
														"type": ""
													}
												],
												"src": "1741:173:14"
											},
											{
												"body": {
													"nativeSrc": "2006:167:14",
													"nodeType": "YulBlock",
													"src": "2006:167:14",
													"statements": [
														{
															"body": {
																"nativeSrc": "2052:16:14",
																"nodeType": "YulBlock",
																"src": "2052:16:14",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nativeSrc": "2061:1:14",
																					"nodeType": "YulLiteral",
																					"src": "2061:1:14",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "2064:1:14",
																					"nodeType": "YulLiteral",
																					"src": "2064:1:14",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nativeSrc": "2054:6:14",
																				"nodeType": "YulIdentifier",
																				"src": "2054:6:14"
																			},
																			"nativeSrc": "2054:12:14",
																			"nodeType": "YulFunctionCall",
																			"src": "2054:12:14"
																		},
																		"nativeSrc": "2054:12:14",
																		"nodeType": "YulExpressionStatement",
																		"src": "2054:12:14"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nativeSrc": "2027:7:14",
																				"nodeType": "YulIdentifier",
																				"src": "2027:7:14"
																			},
																			{
																				"name": "headStart",
																				"nativeSrc": "2036:9:14",
																				"nodeType": "YulIdentifier",
																				"src": "2036:9:14"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "2023:3:14",
																			"nodeType": "YulIdentifier",
																			"src": "2023:3:14"
																		},
																		"nativeSrc": "2023:23:14",
																		"nodeType": "YulFunctionCall",
																		"src": "2023:23:14"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "2048:2:14",
																		"nodeType": "YulLiteral",
																		"src": "2048:2:14",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nativeSrc": "2019:3:14",
																	"nodeType": "YulIdentifier",
																	"src": "2019:3:14"
																},
																"nativeSrc": "2019:32:14",
																"nodeType": "YulFunctionCall",
																"src": "2019:32:14"
															},
															"nativeSrc": "2016:52:14",
															"nodeType": "YulIf",
															"src": "2016:52:14"
														},
														{
															"nativeSrc": "2077:39:14",
															"nodeType": "YulAssignment",
															"src": "2077:39:14",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "2106:9:14",
																		"nodeType": "YulIdentifier",
																		"src": "2106:9:14"
																	}
																],
																"functionName": {
																	"name": "abi_decode_address",
																	"nativeSrc": "2087:18:14",
																	"nodeType": "YulIdentifier",
																	"src": "2087:18:14"
																},
																"nativeSrc": "2087:29:14",
																"nodeType": "YulFunctionCall",
																"src": "2087:29:14"
															},
															"variableNames": [
																{
																	"name": "value0",
																	"nativeSrc": "2077:6:14",
																	"nodeType": "YulIdentifier",
																	"src": "2077:6:14"
																}
															]
														},
														{
															"nativeSrc": "2125:42:14",
															"nodeType": "YulAssignment",
															"src": "2125:42:14",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "2152:9:14",
																				"nodeType": "YulIdentifier",
																				"src": "2152:9:14"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "2163:2:14",
																				"nodeType": "YulLiteral",
																				"src": "2163:2:14",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "2148:3:14",
																			"nodeType": "YulIdentifier",
																			"src": "2148:3:14"
																		},
																		"nativeSrc": "2148:18:14",
																		"nodeType": "YulFunctionCall",
																		"src": "2148:18:14"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nativeSrc": "2135:12:14",
																	"nodeType": "YulIdentifier",
																	"src": "2135:12:14"
																},
																"nativeSrc": "2135:32:14",
																"nodeType": "YulFunctionCall",
																"src": "2135:32:14"
															},
															"variableNames": [
																{
																	"name": "value1",
																	"nativeSrc": "2125:6:14",
																	"nodeType": "YulIdentifier",
																	"src": "2125:6:14"
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_addresst_uint256",
												"nativeSrc": "1919:254:14",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "1964:9:14",
														"nodeType": "YulTypedName",
														"src": "1964:9:14",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nativeSrc": "1975:7:14",
														"nodeType": "YulTypedName",
														"src": "1975:7:14",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nativeSrc": "1987:6:14",
														"nodeType": "YulTypedName",
														"src": "1987:6:14",
														"type": ""
													},
													{
														"name": "value1",
														"nativeSrc": "1995:6:14",
														"nodeType": "YulTypedName",
														"src": "1995:6:14",
														"type": ""
													}
												],
												"src": "1919:254:14"
											},
											{
												"body": {
													"nativeSrc": "2282:224:14",
													"nodeType": "YulBlock",
													"src": "2282:224:14",
													"statements": [
														{
															"body": {
																"nativeSrc": "2328:16:14",
																"nodeType": "YulBlock",
																"src": "2328:16:14",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nativeSrc": "2337:1:14",
																					"nodeType": "YulLiteral",
																					"src": "2337:1:14",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "2340:1:14",
																					"nodeType": "YulLiteral",
																					"src": "2340:1:14",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nativeSrc": "2330:6:14",
																				"nodeType": "YulIdentifier",
																				"src": "2330:6:14"
																			},
																			"nativeSrc": "2330:12:14",
																			"nodeType": "YulFunctionCall",
																			"src": "2330:12:14"
																		},
																		"nativeSrc": "2330:12:14",
																		"nodeType": "YulExpressionStatement",
																		"src": "2330:12:14"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nativeSrc": "2303:7:14",
																				"nodeType": "YulIdentifier",
																				"src": "2303:7:14"
																			},
																			{
																				"name": "headStart",
																				"nativeSrc": "2312:9:14",
																				"nodeType": "YulIdentifier",
																				"src": "2312:9:14"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "2299:3:14",
																			"nodeType": "YulIdentifier",
																			"src": "2299:3:14"
																		},
																		"nativeSrc": "2299:23:14",
																		"nodeType": "YulFunctionCall",
																		"src": "2299:23:14"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "2324:2:14",
																		"nodeType": "YulLiteral",
																		"src": "2324:2:14",
																		"type": "",
																		"value": "96"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nativeSrc": "2295:3:14",
																	"nodeType": "YulIdentifier",
																	"src": "2295:3:14"
																},
																"nativeSrc": "2295:32:14",
																"nodeType": "YulFunctionCall",
																"src": "2295:32:14"
															},
															"nativeSrc": "2292:52:14",
															"nodeType": "YulIf",
															"src": "2292:52:14"
														},
														{
															"nativeSrc": "2353:39:14",
															"nodeType": "YulAssignment",
															"src": "2353:39:14",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "2382:9:14",
																		"nodeType": "YulIdentifier",
																		"src": "2382:9:14"
																	}
																],
																"functionName": {
																	"name": "abi_decode_address",
																	"nativeSrc": "2363:18:14",
																	"nodeType": "YulIdentifier",
																	"src": "2363:18:14"
																},
																"nativeSrc": "2363:29:14",
																"nodeType": "YulFunctionCall",
																"src": "2363:29:14"
															},
															"variableNames": [
																{
																	"name": "value0",
																	"nativeSrc": "2353:6:14",
																	"nodeType": "YulIdentifier",
																	"src": "2353:6:14"
																}
															]
														},
														{
															"nativeSrc": "2401:48:14",
															"nodeType": "YulAssignment",
															"src": "2401:48:14",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "2434:9:14",
																				"nodeType": "YulIdentifier",
																				"src": "2434:9:14"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "2445:2:14",
																				"nodeType": "YulLiteral",
																				"src": "2445:2:14",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "2430:3:14",
																			"nodeType": "YulIdentifier",
																			"src": "2430:3:14"
																		},
																		"nativeSrc": "2430:18:14",
																		"nodeType": "YulFunctionCall",
																		"src": "2430:18:14"
																	}
																],
																"functionName": {
																	"name": "abi_decode_address",
																	"nativeSrc": "2411:18:14",
																	"nodeType": "YulIdentifier",
																	"src": "2411:18:14"
																},
																"nativeSrc": "2411:38:14",
																"nodeType": "YulFunctionCall",
																"src": "2411:38:14"
															},
															"variableNames": [
																{
																	"name": "value1",
																	"nativeSrc": "2401:6:14",
																	"nodeType": "YulIdentifier",
																	"src": "2401:6:14"
																}
															]
														},
														{
															"nativeSrc": "2458:42:14",
															"nodeType": "YulAssignment",
															"src": "2458:42:14",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "2485:9:14",
																				"nodeType": "YulIdentifier",
																				"src": "2485:9:14"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "2496:2:14",
																				"nodeType": "YulLiteral",
																				"src": "2496:2:14",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "2481:3:14",
																			"nodeType": "YulIdentifier",
																			"src": "2481:3:14"
																		},
																		"nativeSrc": "2481:18:14",
																		"nodeType": "YulFunctionCall",
																		"src": "2481:18:14"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nativeSrc": "2468:12:14",
																	"nodeType": "YulIdentifier",
																	"src": "2468:12:14"
																},
																"nativeSrc": "2468:32:14",
																"nodeType": "YulFunctionCall",
																"src": "2468:32:14"
															},
															"variableNames": [
																{
																	"name": "value2",
																	"nativeSrc": "2458:6:14",
																	"nodeType": "YulIdentifier",
																	"src": "2458:6:14"
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_addresst_addresst_uint256",
												"nativeSrc": "2178:328:14",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "2232:9:14",
														"nodeType": "YulTypedName",
														"src": "2232:9:14",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nativeSrc": "2243:7:14",
														"nodeType": "YulTypedName",
														"src": "2243:7:14",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nativeSrc": "2255:6:14",
														"nodeType": "YulTypedName",
														"src": "2255:6:14",
														"type": ""
													},
													{
														"name": "value1",
														"nativeSrc": "2263:6:14",
														"nodeType": "YulTypedName",
														"src": "2263:6:14",
														"type": ""
													},
													{
														"name": "value2",
														"nativeSrc": "2271:6:14",
														"nodeType": "YulTypedName",
														"src": "2271:6:14",
														"type": ""
													}
												],
												"src": "2178:328:14"
											},
											{
												"body": {
													"nativeSrc": "2581:116:14",
													"nodeType": "YulBlock",
													"src": "2581:116:14",
													"statements": [
														{
															"body": {
																"nativeSrc": "2627:16:14",
																"nodeType": "YulBlock",
																"src": "2627:16:14",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nativeSrc": "2636:1:14",
																					"nodeType": "YulLiteral",
																					"src": "2636:1:14",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "2639:1:14",
																					"nodeType": "YulLiteral",
																					"src": "2639:1:14",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nativeSrc": "2629:6:14",
																				"nodeType": "YulIdentifier",
																				"src": "2629:6:14"
																			},
																			"nativeSrc": "2629:12:14",
																			"nodeType": "YulFunctionCall",
																			"src": "2629:12:14"
																		},
																		"nativeSrc": "2629:12:14",
																		"nodeType": "YulExpressionStatement",
																		"src": "2629:12:14"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nativeSrc": "2602:7:14",
																				"nodeType": "YulIdentifier",
																				"src": "2602:7:14"
																			},
																			{
																				"name": "headStart",
																				"nativeSrc": "2611:9:14",
																				"nodeType": "YulIdentifier",
																				"src": "2611:9:14"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "2598:3:14",
																			"nodeType": "YulIdentifier",
																			"src": "2598:3:14"
																		},
																		"nativeSrc": "2598:23:14",
																		"nodeType": "YulFunctionCall",
																		"src": "2598:23:14"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "2623:2:14",
																		"nodeType": "YulLiteral",
																		"src": "2623:2:14",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nativeSrc": "2594:3:14",
																	"nodeType": "YulIdentifier",
																	"src": "2594:3:14"
																},
																"nativeSrc": "2594:32:14",
																"nodeType": "YulFunctionCall",
																"src": "2594:32:14"
															},
															"nativeSrc": "2591:52:14",
															"nodeType": "YulIf",
															"src": "2591:52:14"
														},
														{
															"nativeSrc": "2652:39:14",
															"nodeType": "YulAssignment",
															"src": "2652:39:14",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "2681:9:14",
																		"nodeType": "YulIdentifier",
																		"src": "2681:9:14"
																	}
																],
																"functionName": {
																	"name": "abi_decode_address",
																	"nativeSrc": "2662:18:14",
																	"nodeType": "YulIdentifier",
																	"src": "2662:18:14"
																},
																"nativeSrc": "2662:29:14",
																"nodeType": "YulFunctionCall",
																"src": "2662:29:14"
															},
															"variableNames": [
																{
																	"name": "value0",
																	"nativeSrc": "2652:6:14",
																	"nodeType": "YulIdentifier",
																	"src": "2652:6:14"
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_address",
												"nativeSrc": "2511:186:14",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "2547:9:14",
														"nodeType": "YulTypedName",
														"src": "2547:9:14",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nativeSrc": "2558:7:14",
														"nodeType": "YulTypedName",
														"src": "2558:7:14",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nativeSrc": "2570:6:14",
														"nodeType": "YulTypedName",
														"src": "2570:6:14",
														"type": ""
													}
												],
												"src": "2511:186:14"
											},
											{
												"body": {
													"nativeSrc": "2803:76:14",
													"nodeType": "YulBlock",
													"src": "2803:76:14",
													"statements": [
														{
															"nativeSrc": "2813:26:14",
															"nodeType": "YulAssignment",
															"src": "2813:26:14",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "2825:9:14",
																		"nodeType": "YulIdentifier",
																		"src": "2825:9:14"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "2836:2:14",
																		"nodeType": "YulLiteral",
																		"src": "2836:2:14",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "2821:3:14",
																	"nodeType": "YulIdentifier",
																	"src": "2821:3:14"
																},
																"nativeSrc": "2821:18:14",
																"nodeType": "YulFunctionCall",
																"src": "2821:18:14"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "2813:4:14",
																	"nodeType": "YulIdentifier",
																	"src": "2813:4:14"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "2855:9:14",
																		"nodeType": "YulIdentifier",
																		"src": "2855:9:14"
																	},
																	{
																		"name": "value0",
																		"nativeSrc": "2866:6:14",
																		"nodeType": "YulIdentifier",
																		"src": "2866:6:14"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "2848:6:14",
																	"nodeType": "YulIdentifier",
																	"src": "2848:6:14"
																},
																"nativeSrc": "2848:25:14",
																"nodeType": "YulFunctionCall",
																"src": "2848:25:14"
															},
															"nativeSrc": "2848:25:14",
															"nodeType": "YulExpressionStatement",
															"src": "2848:25:14"
														}
													]
												},
												"name": "abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed",
												"nativeSrc": "2702:177:14",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "2772:9:14",
														"nodeType": "YulTypedName",
														"src": "2772:9:14",
														"type": ""
													},
													{
														"name": "value0",
														"nativeSrc": "2783:6:14",
														"nodeType": "YulTypedName",
														"src": "2783:6:14",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "2794:4:14",
														"nodeType": "YulTypedName",
														"src": "2794:4:14",
														"type": ""
													}
												],
												"src": "2702:177:14"
											},
											{
												"body": {
													"nativeSrc": "2968:263:14",
													"nodeType": "YulBlock",
													"src": "2968:263:14",
													"statements": [
														{
															"body": {
																"nativeSrc": "3014:16:14",
																"nodeType": "YulBlock",
																"src": "3014:16:14",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nativeSrc": "3023:1:14",
																					"nodeType": "YulLiteral",
																					"src": "3023:1:14",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "3026:1:14",
																					"nodeType": "YulLiteral",
																					"src": "3026:1:14",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nativeSrc": "3016:6:14",
																				"nodeType": "YulIdentifier",
																				"src": "3016:6:14"
																			},
																			"nativeSrc": "3016:12:14",
																			"nodeType": "YulFunctionCall",
																			"src": "3016:12:14"
																		},
																		"nativeSrc": "3016:12:14",
																		"nodeType": "YulExpressionStatement",
																		"src": "3016:12:14"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nativeSrc": "2989:7:14",
																				"nodeType": "YulIdentifier",
																				"src": "2989:7:14"
																			},
																			{
																				"name": "headStart",
																				"nativeSrc": "2998:9:14",
																				"nodeType": "YulIdentifier",
																				"src": "2998:9:14"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "2985:3:14",
																			"nodeType": "YulIdentifier",
																			"src": "2985:3:14"
																		},
																		"nativeSrc": "2985:23:14",
																		"nodeType": "YulFunctionCall",
																		"src": "2985:23:14"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "3010:2:14",
																		"nodeType": "YulLiteral",
																		"src": "3010:2:14",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nativeSrc": "2981:3:14",
																	"nodeType": "YulIdentifier",
																	"src": "2981:3:14"
																},
																"nativeSrc": "2981:32:14",
																"nodeType": "YulFunctionCall",
																"src": "2981:32:14"
															},
															"nativeSrc": "2978:52:14",
															"nodeType": "YulIf",
															"src": "2978:52:14"
														},
														{
															"nativeSrc": "3039:39:14",
															"nodeType": "YulAssignment",
															"src": "3039:39:14",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "3068:9:14",
																		"nodeType": "YulIdentifier",
																		"src": "3068:9:14"
																	}
																],
																"functionName": {
																	"name": "abi_decode_address",
																	"nativeSrc": "3049:18:14",
																	"nodeType": "YulIdentifier",
																	"src": "3049:18:14"
																},
																"nativeSrc": "3049:29:14",
																"nodeType": "YulFunctionCall",
																"src": "3049:29:14"
															},
															"variableNames": [
																{
																	"name": "value0",
																	"nativeSrc": "3039:6:14",
																	"nodeType": "YulIdentifier",
																	"src": "3039:6:14"
																}
															]
														},
														{
															"nativeSrc": "3087:45:14",
															"nodeType": "YulVariableDeclaration",
															"src": "3087:45:14",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "3117:9:14",
																				"nodeType": "YulIdentifier",
																				"src": "3117:9:14"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "3128:2:14",
																				"nodeType": "YulLiteral",
																				"src": "3128:2:14",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "3113:3:14",
																			"nodeType": "YulIdentifier",
																			"src": "3113:3:14"
																		},
																		"nativeSrc": "3113:18:14",
																		"nodeType": "YulFunctionCall",
																		"src": "3113:18:14"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nativeSrc": "3100:12:14",
																	"nodeType": "YulIdentifier",
																	"src": "3100:12:14"
																},
																"nativeSrc": "3100:32:14",
																"nodeType": "YulFunctionCall",
																"src": "3100:32:14"
															},
															"variables": [
																{
																	"name": "value",
																	"nativeSrc": "3091:5:14",
																	"nodeType": "YulTypedName",
																	"src": "3091:5:14",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nativeSrc": "3185:16:14",
																"nodeType": "YulBlock",
																"src": "3185:16:14",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nativeSrc": "3194:1:14",
																					"nodeType": "YulLiteral",
																					"src": "3194:1:14",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "3197:1:14",
																					"nodeType": "YulLiteral",
																					"src": "3197:1:14",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nativeSrc": "3187:6:14",
																				"nodeType": "YulIdentifier",
																				"src": "3187:6:14"
																			},
																			"nativeSrc": "3187:12:14",
																			"nodeType": "YulFunctionCall",
																			"src": "3187:12:14"
																		},
																		"nativeSrc": "3187:12:14",
																		"nodeType": "YulExpressionStatement",
																		"src": "3187:12:14"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nativeSrc": "3154:5:14",
																				"nodeType": "YulIdentifier",
																				"src": "3154:5:14"
																			},
																			{
																				"arguments": [
																					{
																						"arguments": [
																							{
																								"name": "value",
																								"nativeSrc": "3175:5:14",
																								"nodeType": "YulIdentifier",
																								"src": "3175:5:14"
																							}
																						],
																						"functionName": {
																							"name": "iszero",
																							"nativeSrc": "3168:6:14",
																							"nodeType": "YulIdentifier",
																							"src": "3168:6:14"
																						},
																						"nativeSrc": "3168:13:14",
																						"nodeType": "YulFunctionCall",
																						"src": "3168:13:14"
																					}
																				],
																				"functionName": {
																					"name": "iszero",
																					"nativeSrc": "3161:6:14",
																					"nodeType": "YulIdentifier",
																					"src": "3161:6:14"
																				},
																				"nativeSrc": "3161:21:14",
																				"nodeType": "YulFunctionCall",
																				"src": "3161:21:14"
																			}
																		],
																		"functionName": {
																			"name": "eq",
																			"nativeSrc": "3151:2:14",
																			"nodeType": "YulIdentifier",
																			"src": "3151:2:14"
																		},
																		"nativeSrc": "3151:32:14",
																		"nodeType": "YulFunctionCall",
																		"src": "3151:32:14"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nativeSrc": "3144:6:14",
																	"nodeType": "YulIdentifier",
																	"src": "3144:6:14"
																},
																"nativeSrc": "3144:40:14",
																"nodeType": "YulFunctionCall",
																"src": "3144:40:14"
															},
															"nativeSrc": "3141:60:14",
															"nodeType": "YulIf",
															"src": "3141:60:14"
														},
														{
															"nativeSrc": "3210:15:14",
															"nodeType": "YulAssignment",
															"src": "3210:15:14",
															"value": {
																"name": "value",
																"nativeSrc": "3220:5:14",
																"nodeType": "YulIdentifier",
																"src": "3220:5:14"
															},
															"variableNames": [
																{
																	"name": "value1",
																	"nativeSrc": "3210:6:14",
																	"nodeType": "YulIdentifier",
																	"src": "3210:6:14"
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_addresst_bool",
												"nativeSrc": "2884:347:14",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "2926:9:14",
														"nodeType": "YulTypedName",
														"src": "2926:9:14",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nativeSrc": "2937:7:14",
														"nodeType": "YulTypedName",
														"src": "2937:7:14",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nativeSrc": "2949:6:14",
														"nodeType": "YulTypedName",
														"src": "2949:6:14",
														"type": ""
													},
													{
														"name": "value1",
														"nativeSrc": "2957:6:14",
														"nodeType": "YulTypedName",
														"src": "2957:6:14",
														"type": ""
													}
												],
												"src": "2884:347:14"
											},
											{
												"body": {
													"nativeSrc": "3268:95:14",
													"nodeType": "YulBlock",
													"src": "3268:95:14",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "3285:1:14",
																		"nodeType": "YulLiteral",
																		"src": "3285:1:14",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"arguments": [
																			{
																				"kind": "number",
																				"nativeSrc": "3292:3:14",
																				"nodeType": "YulLiteral",
																				"src": "3292:3:14",
																				"type": "",
																				"value": "224"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "3297:10:14",
																				"nodeType": "YulLiteral",
																				"src": "3297:10:14",
																				"type": "",
																				"value": "0x4e487b71"
																			}
																		],
																		"functionName": {
																			"name": "shl",
																			"nativeSrc": "3288:3:14",
																			"nodeType": "YulIdentifier",
																			"src": "3288:3:14"
																		},
																		"nativeSrc": "3288:20:14",
																		"nodeType": "YulFunctionCall",
																		"src": "3288:20:14"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "3278:6:14",
																	"nodeType": "YulIdentifier",
																	"src": "3278:6:14"
																},
																"nativeSrc": "3278:31:14",
																"nodeType": "YulFunctionCall",
																"src": "3278:31:14"
															},
															"nativeSrc": "3278:31:14",
															"nodeType": "YulExpressionStatement",
															"src": "3278:31:14"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "3325:1:14",
																		"nodeType": "YulLiteral",
																		"src": "3325:1:14",
																		"type": "",
																		"value": "4"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "3328:4:14",
																		"nodeType": "YulLiteral",
																		"src": "3328:4:14",
																		"type": "",
																		"value": "0x41"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "3318:6:14",
																	"nodeType": "YulIdentifier",
																	"src": "3318:6:14"
																},
																"nativeSrc": "3318:15:14",
																"nodeType": "YulFunctionCall",
																"src": "3318:15:14"
															},
															"nativeSrc": "3318:15:14",
															"nodeType": "YulExpressionStatement",
															"src": "3318:15:14"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "3349:1:14",
																		"nodeType": "YulLiteral",
																		"src": "3349:1:14",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "3352:4:14",
																		"nodeType": "YulLiteral",
																		"src": "3352:4:14",
																		"type": "",
																		"value": "0x24"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nativeSrc": "3342:6:14",
																	"nodeType": "YulIdentifier",
																	"src": "3342:6:14"
																},
																"nativeSrc": "3342:15:14",
																"nodeType": "YulFunctionCall",
																"src": "3342:15:14"
															},
															"nativeSrc": "3342:15:14",
															"nodeType": "YulExpressionStatement",
															"src": "3342:15:14"
														}
													]
												},
												"name": "panic_error_0x41",
												"nativeSrc": "3236:127:14",
												"nodeType": "YulFunctionDefinition",
												"src": "3236:127:14"
											},
											{
												"body": {
													"nativeSrc": "3498:1008:14",
													"nodeType": "YulBlock",
													"src": "3498:1008:14",
													"statements": [
														{
															"body": {
																"nativeSrc": "3545:16:14",
																"nodeType": "YulBlock",
																"src": "3545:16:14",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nativeSrc": "3554:1:14",
																					"nodeType": "YulLiteral",
																					"src": "3554:1:14",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "3557:1:14",
																					"nodeType": "YulLiteral",
																					"src": "3557:1:14",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nativeSrc": "3547:6:14",
																				"nodeType": "YulIdentifier",
																				"src": "3547:6:14"
																			},
																			"nativeSrc": "3547:12:14",
																			"nodeType": "YulFunctionCall",
																			"src": "3547:12:14"
																		},
																		"nativeSrc": "3547:12:14",
																		"nodeType": "YulExpressionStatement",
																		"src": "3547:12:14"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nativeSrc": "3519:7:14",
																				"nodeType": "YulIdentifier",
																				"src": "3519:7:14"
																			},
																			{
																				"name": "headStart",
																				"nativeSrc": "3528:9:14",
																				"nodeType": "YulIdentifier",
																				"src": "3528:9:14"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "3515:3:14",
																			"nodeType": "YulIdentifier",
																			"src": "3515:3:14"
																		},
																		"nativeSrc": "3515:23:14",
																		"nodeType": "YulFunctionCall",
																		"src": "3515:23:14"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "3540:3:14",
																		"nodeType": "YulLiteral",
																		"src": "3540:3:14",
																		"type": "",
																		"value": "128"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nativeSrc": "3511:3:14",
																	"nodeType": "YulIdentifier",
																	"src": "3511:3:14"
																},
																"nativeSrc": "3511:33:14",
																"nodeType": "YulFunctionCall",
																"src": "3511:33:14"
															},
															"nativeSrc": "3508:53:14",
															"nodeType": "YulIf",
															"src": "3508:53:14"
														},
														{
															"nativeSrc": "3570:39:14",
															"nodeType": "YulAssignment",
															"src": "3570:39:14",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "3599:9:14",
																		"nodeType": "YulIdentifier",
																		"src": "3599:9:14"
																	}
																],
																"functionName": {
																	"name": "abi_decode_address",
																	"nativeSrc": "3580:18:14",
																	"nodeType": "YulIdentifier",
																	"src": "3580:18:14"
																},
																"nativeSrc": "3580:29:14",
																"nodeType": "YulFunctionCall",
																"src": "3580:29:14"
															},
															"variableNames": [
																{
																	"name": "value0",
																	"nativeSrc": "3570:6:14",
																	"nodeType": "YulIdentifier",
																	"src": "3570:6:14"
																}
															]
														},
														{
															"nativeSrc": "3618:48:14",
															"nodeType": "YulAssignment",
															"src": "3618:48:14",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "3651:9:14",
																				"nodeType": "YulIdentifier",
																				"src": "3651:9:14"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "3662:2:14",
																				"nodeType": "YulLiteral",
																				"src": "3662:2:14",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "3647:3:14",
																			"nodeType": "YulIdentifier",
																			"src": "3647:3:14"
																		},
																		"nativeSrc": "3647:18:14",
																		"nodeType": "YulFunctionCall",
																		"src": "3647:18:14"
																	}
																],
																"functionName": {
																	"name": "abi_decode_address",
																	"nativeSrc": "3628:18:14",
																	"nodeType": "YulIdentifier",
																	"src": "3628:18:14"
																},
																"nativeSrc": "3628:38:14",
																"nodeType": "YulFunctionCall",
																"src": "3628:38:14"
															},
															"variableNames": [
																{
																	"name": "value1",
																	"nativeSrc": "3618:6:14",
																	"nodeType": "YulIdentifier",
																	"src": "3618:6:14"
																}
															]
														},
														{
															"nativeSrc": "3675:42:14",
															"nodeType": "YulAssignment",
															"src": "3675:42:14",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "3702:9:14",
																				"nodeType": "YulIdentifier",
																				"src": "3702:9:14"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "3713:2:14",
																				"nodeType": "YulLiteral",
																				"src": "3713:2:14",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "3698:3:14",
																			"nodeType": "YulIdentifier",
																			"src": "3698:3:14"
																		},
																		"nativeSrc": "3698:18:14",
																		"nodeType": "YulFunctionCall",
																		"src": "3698:18:14"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nativeSrc": "3685:12:14",
																	"nodeType": "YulIdentifier",
																	"src": "3685:12:14"
																},
																"nativeSrc": "3685:32:14",
																"nodeType": "YulFunctionCall",
																"src": "3685:32:14"
															},
															"variableNames": [
																{
																	"name": "value2",
																	"nativeSrc": "3675:6:14",
																	"nodeType": "YulIdentifier",
																	"src": "3675:6:14"
																}
															]
														},
														{
															"nativeSrc": "3726:46:14",
															"nodeType": "YulVariableDeclaration",
															"src": "3726:46:14",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "3757:9:14",
																				"nodeType": "YulIdentifier",
																				"src": "3757:9:14"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "3768:2:14",
																				"nodeType": "YulLiteral",
																				"src": "3768:2:14",
																				"type": "",
																				"value": "96"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "3753:3:14",
																			"nodeType": "YulIdentifier",
																			"src": "3753:3:14"
																		},
																		"nativeSrc": "3753:18:14",
																		"nodeType": "YulFunctionCall",
																		"src": "3753:18:14"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nativeSrc": "3740:12:14",
																	"nodeType": "YulIdentifier",
																	"src": "3740:12:14"
																},
																"nativeSrc": "3740:32:14",
																"nodeType": "YulFunctionCall",
																"src": "3740:32:14"
															},
															"variables": [
																{
																	"name": "offset",
																	"nativeSrc": "3730:6:14",
																	"nodeType": "YulTypedName",
																	"src": "3730:6:14",
																	"type": ""
																}
															]
														},
														{
															"nativeSrc": "3781:28:14",
															"nodeType": "YulVariableDeclaration",
															"src": "3781:28:14",
															"value": {
																"kind": "number",
																"nativeSrc": "3791:18:14",
																"nodeType": "YulLiteral",
																"src": "3791:18:14",
																"type": "",
																"value": "0xffffffffffffffff"
															},
															"variables": [
																{
																	"name": "_1",
																	"nativeSrc": "3785:2:14",
																	"nodeType": "YulTypedName",
																	"src": "3785:2:14",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nativeSrc": "3836:16:14",
																"nodeType": "YulBlock",
																"src": "3836:16:14",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nativeSrc": "3845:1:14",
																					"nodeType": "YulLiteral",
																					"src": "3845:1:14",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "3848:1:14",
																					"nodeType": "YulLiteral",
																					"src": "3848:1:14",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nativeSrc": "3838:6:14",
																				"nodeType": "YulIdentifier",
																				"src": "3838:6:14"
																			},
																			"nativeSrc": "3838:12:14",
																			"nodeType": "YulFunctionCall",
																			"src": "3838:12:14"
																		},
																		"nativeSrc": "3838:12:14",
																		"nodeType": "YulExpressionStatement",
																		"src": "3838:12:14"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "offset",
																		"nativeSrc": "3824:6:14",
																		"nodeType": "YulIdentifier",
																		"src": "3824:6:14"
																	},
																	{
																		"name": "_1",
																		"nativeSrc": "3832:2:14",
																		"nodeType": "YulIdentifier",
																		"src": "3832:2:14"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nativeSrc": "3821:2:14",
																	"nodeType": "YulIdentifier",
																	"src": "3821:2:14"
																},
																"nativeSrc": "3821:14:14",
																"nodeType": "YulFunctionCall",
																"src": "3821:14:14"
															},
															"nativeSrc": "3818:34:14",
															"nodeType": "YulIf",
															"src": "3818:34:14"
														},
														{
															"nativeSrc": "3861:32:14",
															"nodeType": "YulVariableDeclaration",
															"src": "3861:32:14",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "3875:9:14",
																		"nodeType": "YulIdentifier",
																		"src": "3875:9:14"
																	},
																	{
																		"name": "offset",
																		"nativeSrc": "3886:6:14",
																		"nodeType": "YulIdentifier",
																		"src": "3886:6:14"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "3871:3:14",
																	"nodeType": "YulIdentifier",
																	"src": "3871:3:14"
																},
																"nativeSrc": "3871:22:14",
																"nodeType": "YulFunctionCall",
																"src": "3871:22:14"
															},
															"variables": [
																{
																	"name": "_2",
																	"nativeSrc": "3865:2:14",
																	"nodeType": "YulTypedName",
																	"src": "3865:2:14",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nativeSrc": "3941:16:14",
																"nodeType": "YulBlock",
																"src": "3941:16:14",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nativeSrc": "3950:1:14",
																					"nodeType": "YulLiteral",
																					"src": "3950:1:14",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "3953:1:14",
																					"nodeType": "YulLiteral",
																					"src": "3953:1:14",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nativeSrc": "3943:6:14",
																				"nodeType": "YulIdentifier",
																				"src": "3943:6:14"
																			},
																			"nativeSrc": "3943:12:14",
																			"nodeType": "YulFunctionCall",
																			"src": "3943:12:14"
																		},
																		"nativeSrc": "3943:12:14",
																		"nodeType": "YulExpressionStatement",
																		"src": "3943:12:14"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "_2",
																						"nativeSrc": "3920:2:14",
																						"nodeType": "YulIdentifier",
																						"src": "3920:2:14"
																					},
																					{
																						"kind": "number",
																						"nativeSrc": "3924:4:14",
																						"nodeType": "YulLiteral",
																						"src": "3924:4:14",
																						"type": "",
																						"value": "0x1f"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "3916:3:14",
																					"nodeType": "YulIdentifier",
																					"src": "3916:3:14"
																				},
																				"nativeSrc": "3916:13:14",
																				"nodeType": "YulFunctionCall",
																				"src": "3916:13:14"
																			},
																			{
																				"name": "dataEnd",
																				"nativeSrc": "3931:7:14",
																				"nodeType": "YulIdentifier",
																				"src": "3931:7:14"
																			}
																		],
																		"functionName": {
																			"name": "slt",
																			"nativeSrc": "3912:3:14",
																			"nodeType": "YulIdentifier",
																			"src": "3912:3:14"
																		},
																		"nativeSrc": "3912:27:14",
																		"nodeType": "YulFunctionCall",
																		"src": "3912:27:14"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nativeSrc": "3905:6:14",
																	"nodeType": "YulIdentifier",
																	"src": "3905:6:14"
																},
																"nativeSrc": "3905:35:14",
																"nodeType": "YulFunctionCall",
																"src": "3905:35:14"
															},
															"nativeSrc": "3902:55:14",
															"nodeType": "YulIf",
															"src": "3902:55:14"
														},
														{
															"nativeSrc": "3966:26:14",
															"nodeType": "YulVariableDeclaration",
															"src": "3966:26:14",
															"value": {
																"arguments": [
																	{
																		"name": "_2",
																		"nativeSrc": "3989:2:14",
																		"nodeType": "YulIdentifier",
																		"src": "3989:2:14"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nativeSrc": "3976:12:14",
																	"nodeType": "YulIdentifier",
																	"src": "3976:12:14"
																},
																"nativeSrc": "3976:16:14",
																"nodeType": "YulFunctionCall",
																"src": "3976:16:14"
															},
															"variables": [
																{
																	"name": "_3",
																	"nativeSrc": "3970:2:14",
																	"nodeType": "YulTypedName",
																	"src": "3970:2:14",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nativeSrc": "4015:22:14",
																"nodeType": "YulBlock",
																"src": "4015:22:14",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "panic_error_0x41",
																				"nativeSrc": "4017:16:14",
																				"nodeType": "YulIdentifier",
																				"src": "4017:16:14"
																			},
																			"nativeSrc": "4017:18:14",
																			"nodeType": "YulFunctionCall",
																			"src": "4017:18:14"
																		},
																		"nativeSrc": "4017:18:14",
																		"nodeType": "YulExpressionStatement",
																		"src": "4017:18:14"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "_3",
																		"nativeSrc": "4007:2:14",
																		"nodeType": "YulIdentifier",
																		"src": "4007:2:14"
																	},
																	{
																		"name": "_1",
																		"nativeSrc": "4011:2:14",
																		"nodeType": "YulIdentifier",
																		"src": "4011:2:14"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nativeSrc": "4004:2:14",
																	"nodeType": "YulIdentifier",
																	"src": "4004:2:14"
																},
																"nativeSrc": "4004:10:14",
																"nodeType": "YulFunctionCall",
																"src": "4004:10:14"
															},
															"nativeSrc": "4001:36:14",
															"nodeType": "YulIf",
															"src": "4001:36:14"
														},
														{
															"nativeSrc": "4046:17:14",
															"nodeType": "YulVariableDeclaration",
															"src": "4046:17:14",
															"value": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "4060:2:14",
																		"nodeType": "YulLiteral",
																		"src": "4060:2:14",
																		"type": "",
																		"value": "31"
																	}
																],
																"functionName": {
																	"name": "not",
																	"nativeSrc": "4056:3:14",
																	"nodeType": "YulIdentifier",
																	"src": "4056:3:14"
																},
																"nativeSrc": "4056:7:14",
																"nodeType": "YulFunctionCall",
																"src": "4056:7:14"
															},
															"variables": [
																{
																	"name": "_4",
																	"nativeSrc": "4050:2:14",
																	"nodeType": "YulTypedName",
																	"src": "4050:2:14",
																	"type": ""
																}
															]
														},
														{
															"nativeSrc": "4072:23:14",
															"nodeType": "YulVariableDeclaration",
															"src": "4072:23:14",
															"value": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "4092:2:14",
																		"nodeType": "YulLiteral",
																		"src": "4092:2:14",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nativeSrc": "4086:5:14",
																	"nodeType": "YulIdentifier",
																	"src": "4086:5:14"
																},
																"nativeSrc": "4086:9:14",
																"nodeType": "YulFunctionCall",
																"src": "4086:9:14"
															},
															"variables": [
																{
																	"name": "memPtr",
																	"nativeSrc": "4076:6:14",
																	"nodeType": "YulTypedName",
																	"src": "4076:6:14",
																	"type": ""
																}
															]
														},
														{
															"nativeSrc": "4104:71:14",
															"nodeType": "YulVariableDeclaration",
															"src": "4104:71:14",
															"value": {
																"arguments": [
																	{
																		"name": "memPtr",
																		"nativeSrc": "4126:6:14",
																		"nodeType": "YulIdentifier",
																		"src": "4126:6:14"
																	},
																	{
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"arguments": [
																							{
																								"arguments": [
																									{
																										"name": "_3",
																										"nativeSrc": "4150:2:14",
																										"nodeType": "YulIdentifier",
																										"src": "4150:2:14"
																									},
																									{
																										"kind": "number",
																										"nativeSrc": "4154:4:14",
																										"nodeType": "YulLiteral",
																										"src": "4154:4:14",
																										"type": "",
																										"value": "0x1f"
																									}
																								],
																								"functionName": {
																									"name": "add",
																									"nativeSrc": "4146:3:14",
																									"nodeType": "YulIdentifier",
																									"src": "4146:3:14"
																								},
																								"nativeSrc": "4146:13:14",
																								"nodeType": "YulFunctionCall",
																								"src": "4146:13:14"
																							},
																							{
																								"name": "_4",
																								"nativeSrc": "4161:2:14",
																								"nodeType": "YulIdentifier",
																								"src": "4161:2:14"
																							}
																						],
																						"functionName": {
																							"name": "and",
																							"nativeSrc": "4142:3:14",
																							"nodeType": "YulIdentifier",
																							"src": "4142:3:14"
																						},
																						"nativeSrc": "4142:22:14",
																						"nodeType": "YulFunctionCall",
																						"src": "4142:22:14"
																					},
																					{
																						"kind": "number",
																						"nativeSrc": "4166:2:14",
																						"nodeType": "YulLiteral",
																						"src": "4166:2:14",
																						"type": "",
																						"value": "63"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "4138:3:14",
																					"nodeType": "YulIdentifier",
																					"src": "4138:3:14"
																				},
																				"nativeSrc": "4138:31:14",
																				"nodeType": "YulFunctionCall",
																				"src": "4138:31:14"
																			},
																			{
																				"name": "_4",
																				"nativeSrc": "4171:2:14",
																				"nodeType": "YulIdentifier",
																				"src": "4171:2:14"
																			}
																		],
																		"functionName": {
																			"name": "and",
																			"nativeSrc": "4134:3:14",
																			"nodeType": "YulIdentifier",
																			"src": "4134:3:14"
																		},
																		"nativeSrc": "4134:40:14",
																		"nodeType": "YulFunctionCall",
																		"src": "4134:40:14"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "4122:3:14",
																	"nodeType": "YulIdentifier",
																	"src": "4122:3:14"
																},
																"nativeSrc": "4122:53:14",
																"nodeType": "YulFunctionCall",
																"src": "4122:53:14"
															},
															"variables": [
																{
																	"name": "newFreePtr",
																	"nativeSrc": "4108:10:14",
																	"nodeType": "YulTypedName",
																	"src": "4108:10:14",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nativeSrc": "4234:22:14",
																"nodeType": "YulBlock",
																"src": "4234:22:14",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "panic_error_0x41",
																				"nativeSrc": "4236:16:14",
																				"nodeType": "YulIdentifier",
																				"src": "4236:16:14"
																			},
																			"nativeSrc": "4236:18:14",
																			"nodeType": "YulFunctionCall",
																			"src": "4236:18:14"
																		},
																		"nativeSrc": "4236:18:14",
																		"nodeType": "YulExpressionStatement",
																		"src": "4236:18:14"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "newFreePtr",
																				"nativeSrc": "4193:10:14",
																				"nodeType": "YulIdentifier",
																				"src": "4193:10:14"
																			},
																			{
																				"name": "_1",
																				"nativeSrc": "4205:2:14",
																				"nodeType": "YulIdentifier",
																				"src": "4205:2:14"
																			}
																		],
																		"functionName": {
																			"name": "gt",
																			"nativeSrc": "4190:2:14",
																			"nodeType": "YulIdentifier",
																			"src": "4190:2:14"
																		},
																		"nativeSrc": "4190:18:14",
																		"nodeType": "YulFunctionCall",
																		"src": "4190:18:14"
																	},
																	{
																		"arguments": [
																			{
																				"name": "newFreePtr",
																				"nativeSrc": "4213:10:14",
																				"nodeType": "YulIdentifier",
																				"src": "4213:10:14"
																			},
																			{
																				"name": "memPtr",
																				"nativeSrc": "4225:6:14",
																				"nodeType": "YulIdentifier",
																				"src": "4225:6:14"
																			}
																		],
																		"functionName": {
																			"name": "lt",
																			"nativeSrc": "4210:2:14",
																			"nodeType": "YulIdentifier",
																			"src": "4210:2:14"
																		},
																		"nativeSrc": "4210:22:14",
																		"nodeType": "YulFunctionCall",
																		"src": "4210:22:14"
																	}
																],
																"functionName": {
																	"name": "or",
																	"nativeSrc": "4187:2:14",
																	"nodeType": "YulIdentifier",
																	"src": "4187:2:14"
																},
																"nativeSrc": "4187:46:14",
																"nodeType": "YulFunctionCall",
																"src": "4187:46:14"
															},
															"nativeSrc": "4184:72:14",
															"nodeType": "YulIf",
															"src": "4184:72:14"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "4272:2:14",
																		"nodeType": "YulLiteral",
																		"src": "4272:2:14",
																		"type": "",
																		"value": "64"
																	},
																	{
																		"name": "newFreePtr",
																		"nativeSrc": "4276:10:14",
																		"nodeType": "YulIdentifier",
																		"src": "4276:10:14"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "4265:6:14",
																	"nodeType": "YulIdentifier",
																	"src": "4265:6:14"
																},
																"nativeSrc": "4265:22:14",
																"nodeType": "YulFunctionCall",
																"src": "4265:22:14"
															},
															"nativeSrc": "4265:22:14",
															"nodeType": "YulExpressionStatement",
															"src": "4265:22:14"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "memPtr",
																		"nativeSrc": "4303:6:14",
																		"nodeType": "YulIdentifier",
																		"src": "4303:6:14"
																	},
																	{
																		"name": "_3",
																		"nativeSrc": "4311:2:14",
																		"nodeType": "YulIdentifier",
																		"src": "4311:2:14"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "4296:6:14",
																	"nodeType": "YulIdentifier",
																	"src": "4296:6:14"
																},
																"nativeSrc": "4296:18:14",
																"nodeType": "YulFunctionCall",
																"src": "4296:18:14"
															},
															"nativeSrc": "4296:18:14",
															"nodeType": "YulExpressionStatement",
															"src": "4296:18:14"
														},
														{
															"body": {
																"nativeSrc": "4360:16:14",
																"nodeType": "YulBlock",
																"src": "4360:16:14",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nativeSrc": "4369:1:14",
																					"nodeType": "YulLiteral",
																					"src": "4369:1:14",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "4372:1:14",
																					"nodeType": "YulLiteral",
																					"src": "4372:1:14",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nativeSrc": "4362:6:14",
																				"nodeType": "YulIdentifier",
																				"src": "4362:6:14"
																			},
																			"nativeSrc": "4362:12:14",
																			"nodeType": "YulFunctionCall",
																			"src": "4362:12:14"
																		},
																		"nativeSrc": "4362:12:14",
																		"nodeType": "YulExpressionStatement",
																		"src": "4362:12:14"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "_2",
																						"nativeSrc": "4337:2:14",
																						"nodeType": "YulIdentifier",
																						"src": "4337:2:14"
																					},
																					{
																						"name": "_3",
																						"nativeSrc": "4341:2:14",
																						"nodeType": "YulIdentifier",
																						"src": "4341:2:14"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "4333:3:14",
																					"nodeType": "YulIdentifier",
																					"src": "4333:3:14"
																				},
																				"nativeSrc": "4333:11:14",
																				"nodeType": "YulFunctionCall",
																				"src": "4333:11:14"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "4346:2:14",
																				"nodeType": "YulLiteral",
																				"src": "4346:2:14",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "4329:3:14",
																			"nodeType": "YulIdentifier",
																			"src": "4329:3:14"
																		},
																		"nativeSrc": "4329:20:14",
																		"nodeType": "YulFunctionCall",
																		"src": "4329:20:14"
																	},
																	{
																		"name": "dataEnd",
																		"nativeSrc": "4351:7:14",
																		"nodeType": "YulIdentifier",
																		"src": "4351:7:14"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nativeSrc": "4326:2:14",
																	"nodeType": "YulIdentifier",
																	"src": "4326:2:14"
																},
																"nativeSrc": "4326:33:14",
																"nodeType": "YulFunctionCall",
																"src": "4326:33:14"
															},
															"nativeSrc": "4323:53:14",
															"nodeType": "YulIf",
															"src": "4323:53:14"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "memPtr",
																				"nativeSrc": "4402:6:14",
																				"nodeType": "YulIdentifier",
																				"src": "4402:6:14"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "4410:2:14",
																				"nodeType": "YulLiteral",
																				"src": "4410:2:14",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "4398:3:14",
																			"nodeType": "YulIdentifier",
																			"src": "4398:3:14"
																		},
																		"nativeSrc": "4398:15:14",
																		"nodeType": "YulFunctionCall",
																		"src": "4398:15:14"
																	},
																	{
																		"arguments": [
																			{
																				"name": "_2",
																				"nativeSrc": "4419:2:14",
																				"nodeType": "YulIdentifier",
																				"src": "4419:2:14"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "4423:2:14",
																				"nodeType": "YulLiteral",
																				"src": "4423:2:14",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "4415:3:14",
																			"nodeType": "YulIdentifier",
																			"src": "4415:3:14"
																		},
																		"nativeSrc": "4415:11:14",
																		"nodeType": "YulFunctionCall",
																		"src": "4415:11:14"
																	},
																	{
																		"name": "_3",
																		"nativeSrc": "4428:2:14",
																		"nodeType": "YulIdentifier",
																		"src": "4428:2:14"
																	}
																],
																"functionName": {
																	"name": "calldatacopy",
																	"nativeSrc": "4385:12:14",
																	"nodeType": "YulIdentifier",
																	"src": "4385:12:14"
																},
																"nativeSrc": "4385:46:14",
																"nodeType": "YulFunctionCall",
																"src": "4385:46:14"
															},
															"nativeSrc": "4385:46:14",
															"nodeType": "YulExpressionStatement",
															"src": "4385:46:14"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "memPtr",
																						"nativeSrc": "4455:6:14",
																						"nodeType": "YulIdentifier",
																						"src": "4455:6:14"
																					},
																					{
																						"name": "_3",
																						"nativeSrc": "4463:2:14",
																						"nodeType": "YulIdentifier",
																						"src": "4463:2:14"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "4451:3:14",
																					"nodeType": "YulIdentifier",
																					"src": "4451:3:14"
																				},
																				"nativeSrc": "4451:15:14",
																				"nodeType": "YulFunctionCall",
																				"src": "4451:15:14"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "4468:2:14",
																				"nodeType": "YulLiteral",
																				"src": "4468:2:14",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "4447:3:14",
																			"nodeType": "YulIdentifier",
																			"src": "4447:3:14"
																		},
																		"nativeSrc": "4447:24:14",
																		"nodeType": "YulFunctionCall",
																		"src": "4447:24:14"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "4473:1:14",
																		"nodeType": "YulLiteral",
																		"src": "4473:1:14",
																		"type": "",
																		"value": "0"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "4440:6:14",
																	"nodeType": "YulIdentifier",
																	"src": "4440:6:14"
																},
																"nativeSrc": "4440:35:14",
																"nodeType": "YulFunctionCall",
																"src": "4440:35:14"
															},
															"nativeSrc": "4440:35:14",
															"nodeType": "YulExpressionStatement",
															"src": "4440:35:14"
														},
														{
															"nativeSrc": "4484:16:14",
															"nodeType": "YulAssignment",
															"src": "4484:16:14",
															"value": {
																"name": "memPtr",
																"nativeSrc": "4494:6:14",
																"nodeType": "YulIdentifier",
																"src": "4494:6:14"
															},
															"variableNames": [
																{
																	"name": "value3",
																	"nativeSrc": "4484:6:14",
																	"nodeType": "YulIdentifier",
																	"src": "4484:6:14"
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_addresst_addresst_uint256t_bytes_memory_ptr",
												"nativeSrc": "3368:1138:14",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "3440:9:14",
														"nodeType": "YulTypedName",
														"src": "3440:9:14",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nativeSrc": "3451:7:14",
														"nodeType": "YulTypedName",
														"src": "3451:7:14",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nativeSrc": "3463:6:14",
														"nodeType": "YulTypedName",
														"src": "3463:6:14",
														"type": ""
													},
													{
														"name": "value1",
														"nativeSrc": "3471:6:14",
														"nodeType": "YulTypedName",
														"src": "3471:6:14",
														"type": ""
													},
													{
														"name": "value2",
														"nativeSrc": "3479:6:14",
														"nodeType": "YulTypedName",
														"src": "3479:6:14",
														"type": ""
													},
													{
														"name": "value3",
														"nativeSrc": "3487:6:14",
														"nodeType": "YulTypedName",
														"src": "3487:6:14",
														"type": ""
													}
												],
												"src": "3368:1138:14"
											},
											{
												"body": {
													"nativeSrc": "4598:173:14",
													"nodeType": "YulBlock",
													"src": "4598:173:14",
													"statements": [
														{
															"body": {
																"nativeSrc": "4644:16:14",
																"nodeType": "YulBlock",
																"src": "4644:16:14",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nativeSrc": "4653:1:14",
																					"nodeType": "YulLiteral",
																					"src": "4653:1:14",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "4656:1:14",
																					"nodeType": "YulLiteral",
																					"src": "4656:1:14",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nativeSrc": "4646:6:14",
																				"nodeType": "YulIdentifier",
																				"src": "4646:6:14"
																			},
																			"nativeSrc": "4646:12:14",
																			"nodeType": "YulFunctionCall",
																			"src": "4646:12:14"
																		},
																		"nativeSrc": "4646:12:14",
																		"nodeType": "YulExpressionStatement",
																		"src": "4646:12:14"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nativeSrc": "4619:7:14",
																				"nodeType": "YulIdentifier",
																				"src": "4619:7:14"
																			},
																			{
																				"name": "headStart",
																				"nativeSrc": "4628:9:14",
																				"nodeType": "YulIdentifier",
																				"src": "4628:9:14"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "4615:3:14",
																			"nodeType": "YulIdentifier",
																			"src": "4615:3:14"
																		},
																		"nativeSrc": "4615:23:14",
																		"nodeType": "YulFunctionCall",
																		"src": "4615:23:14"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "4640:2:14",
																		"nodeType": "YulLiteral",
																		"src": "4640:2:14",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nativeSrc": "4611:3:14",
																	"nodeType": "YulIdentifier",
																	"src": "4611:3:14"
																},
																"nativeSrc": "4611:32:14",
																"nodeType": "YulFunctionCall",
																"src": "4611:32:14"
															},
															"nativeSrc": "4608:52:14",
															"nodeType": "YulIf",
															"src": "4608:52:14"
														},
														{
															"nativeSrc": "4669:39:14",
															"nodeType": "YulAssignment",
															"src": "4669:39:14",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "4698:9:14",
																		"nodeType": "YulIdentifier",
																		"src": "4698:9:14"
																	}
																],
																"functionName": {
																	"name": "abi_decode_address",
																	"nativeSrc": "4679:18:14",
																	"nodeType": "YulIdentifier",
																	"src": "4679:18:14"
																},
																"nativeSrc": "4679:29:14",
																"nodeType": "YulFunctionCall",
																"src": "4679:29:14"
															},
															"variableNames": [
																{
																	"name": "value0",
																	"nativeSrc": "4669:6:14",
																	"nodeType": "YulIdentifier",
																	"src": "4669:6:14"
																}
															]
														},
														{
															"nativeSrc": "4717:48:14",
															"nodeType": "YulAssignment",
															"src": "4717:48:14",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "4750:9:14",
																				"nodeType": "YulIdentifier",
																				"src": "4750:9:14"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "4761:2:14",
																				"nodeType": "YulLiteral",
																				"src": "4761:2:14",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "4746:3:14",
																			"nodeType": "YulIdentifier",
																			"src": "4746:3:14"
																		},
																		"nativeSrc": "4746:18:14",
																		"nodeType": "YulFunctionCall",
																		"src": "4746:18:14"
																	}
																],
																"functionName": {
																	"name": "abi_decode_address",
																	"nativeSrc": "4727:18:14",
																	"nodeType": "YulIdentifier",
																	"src": "4727:18:14"
																},
																"nativeSrc": "4727:38:14",
																"nodeType": "YulFunctionCall",
																"src": "4727:38:14"
															},
															"variableNames": [
																{
																	"name": "value1",
																	"nativeSrc": "4717:6:14",
																	"nodeType": "YulIdentifier",
																	"src": "4717:6:14"
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_addresst_address",
												"nativeSrc": "4511:260:14",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "4556:9:14",
														"nodeType": "YulTypedName",
														"src": "4556:9:14",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nativeSrc": "4567:7:14",
														"nodeType": "YulTypedName",
														"src": "4567:7:14",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nativeSrc": "4579:6:14",
														"nodeType": "YulTypedName",
														"src": "4579:6:14",
														"type": ""
													},
													{
														"name": "value1",
														"nativeSrc": "4587:6:14",
														"nodeType": "YulTypedName",
														"src": "4587:6:14",
														"type": ""
													}
												],
												"src": "4511:260:14"
											},
											{
												"body": {
													"nativeSrc": "4831:325:14",
													"nodeType": "YulBlock",
													"src": "4831:325:14",
													"statements": [
														{
															"nativeSrc": "4841:22:14",
															"nodeType": "YulAssignment",
															"src": "4841:22:14",
															"value": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "4855:1:14",
																		"nodeType": "YulLiteral",
																		"src": "4855:1:14",
																		"type": "",
																		"value": "1"
																	},
																	{
																		"name": "data",
																		"nativeSrc": "4858:4:14",
																		"nodeType": "YulIdentifier",
																		"src": "4858:4:14"
																	}
																],
																"functionName": {
																	"name": "shr",
																	"nativeSrc": "4851:3:14",
																	"nodeType": "YulIdentifier",
																	"src": "4851:3:14"
																},
																"nativeSrc": "4851:12:14",
																"nodeType": "YulFunctionCall",
																"src": "4851:12:14"
															},
															"variableNames": [
																{
																	"name": "length",
																	"nativeSrc": "4841:6:14",
																	"nodeType": "YulIdentifier",
																	"src": "4841:6:14"
																}
															]
														},
														{
															"nativeSrc": "4872:38:14",
															"nodeType": "YulVariableDeclaration",
															"src": "4872:38:14",
															"value": {
																"arguments": [
																	{
																		"name": "data",
																		"nativeSrc": "4902:4:14",
																		"nodeType": "YulIdentifier",
																		"src": "4902:4:14"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "4908:1:14",
																		"nodeType": "YulLiteral",
																		"src": "4908:1:14",
																		"type": "",
																		"value": "1"
																	}
																],
																"functionName": {
																	"name": "and",
																	"nativeSrc": "4898:3:14",
																	"nodeType": "YulIdentifier",
																	"src": "4898:3:14"
																},
																"nativeSrc": "4898:12:14",
																"nodeType": "YulFunctionCall",
																"src": "4898:12:14"
															},
															"variables": [
																{
																	"name": "outOfPlaceEncoding",
																	"nativeSrc": "4876:18:14",
																	"nodeType": "YulTypedName",
																	"src": "4876:18:14",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nativeSrc": "4949:31:14",
																"nodeType": "YulBlock",
																"src": "4949:31:14",
																"statements": [
																	{
																		"nativeSrc": "4951:27:14",
																		"nodeType": "YulAssignment",
																		"src": "4951:27:14",
																		"value": {
																			"arguments": [
																				{
																					"name": "length",
																					"nativeSrc": "4965:6:14",
																					"nodeType": "YulIdentifier",
																					"src": "4965:6:14"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "4973:4:14",
																					"nodeType": "YulLiteral",
																					"src": "4973:4:14",
																					"type": "",
																					"value": "0x7f"
																				}
																			],
																			"functionName": {
																				"name": "and",
																				"nativeSrc": "4961:3:14",
																				"nodeType": "YulIdentifier",
																				"src": "4961:3:14"
																			},
																			"nativeSrc": "4961:17:14",
																			"nodeType": "YulFunctionCall",
																			"src": "4961:17:14"
																		},
																		"variableNames": [
																			{
																				"name": "length",
																				"nativeSrc": "4951:6:14",
																				"nodeType": "YulIdentifier",
																				"src": "4951:6:14"
																			}
																		]
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "outOfPlaceEncoding",
																		"nativeSrc": "4929:18:14",
																		"nodeType": "YulIdentifier",
																		"src": "4929:18:14"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nativeSrc": "4922:6:14",
																	"nodeType": "YulIdentifier",
																	"src": "4922:6:14"
																},
																"nativeSrc": "4922:26:14",
																"nodeType": "YulFunctionCall",
																"src": "4922:26:14"
															},
															"nativeSrc": "4919:61:14",
															"nodeType": "YulIf",
															"src": "4919:61:14"
														},
														{
															"body": {
																"nativeSrc": "5039:111:14",
																"nodeType": "YulBlock",
																"src": "5039:111:14",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nativeSrc": "5060:1:14",
																					"nodeType": "YulLiteral",
																					"src": "5060:1:14",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"arguments": [
																						{
																							"kind": "number",
																							"nativeSrc": "5067:3:14",
																							"nodeType": "YulLiteral",
																							"src": "5067:3:14",
																							"type": "",
																							"value": "224"
																						},
																						{
																							"kind": "number",
																							"nativeSrc": "5072:10:14",
																							"nodeType": "YulLiteral",
																							"src": "5072:10:14",
																							"type": "",
																							"value": "0x4e487b71"
																						}
																					],
																					"functionName": {
																						"name": "shl",
																						"nativeSrc": "5063:3:14",
																						"nodeType": "YulIdentifier",
																						"src": "5063:3:14"
																					},
																					"nativeSrc": "5063:20:14",
																					"nodeType": "YulFunctionCall",
																					"src": "5063:20:14"
																				}
																			],
																			"functionName": {
																				"name": "mstore",
																				"nativeSrc": "5053:6:14",
																				"nodeType": "YulIdentifier",
																				"src": "5053:6:14"
																			},
																			"nativeSrc": "5053:31:14",
																			"nodeType": "YulFunctionCall",
																			"src": "5053:31:14"
																		},
																		"nativeSrc": "5053:31:14",
																		"nodeType": "YulExpressionStatement",
																		"src": "5053:31:14"
																	},
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nativeSrc": "5104:1:14",
																					"nodeType": "YulLiteral",
																					"src": "5104:1:14",
																					"type": "",
																					"value": "4"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "5107:4:14",
																					"nodeType": "YulLiteral",
																					"src": "5107:4:14",
																					"type": "",
																					"value": "0x22"
																				}
																			],
																			"functionName": {
																				"name": "mstore",
																				"nativeSrc": "5097:6:14",
																				"nodeType": "YulIdentifier",
																				"src": "5097:6:14"
																			},
																			"nativeSrc": "5097:15:14",
																			"nodeType": "YulFunctionCall",
																			"src": "5097:15:14"
																		},
																		"nativeSrc": "5097:15:14",
																		"nodeType": "YulExpressionStatement",
																		"src": "5097:15:14"
																	},
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nativeSrc": "5132:1:14",
																					"nodeType": "YulLiteral",
																					"src": "5132:1:14",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "5135:4:14",
																					"nodeType": "YulLiteral",
																					"src": "5135:4:14",
																					"type": "",
																					"value": "0x24"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nativeSrc": "5125:6:14",
																				"nodeType": "YulIdentifier",
																				"src": "5125:6:14"
																			},
																			"nativeSrc": "5125:15:14",
																			"nodeType": "YulFunctionCall",
																			"src": "5125:15:14"
																		},
																		"nativeSrc": "5125:15:14",
																		"nodeType": "YulExpressionStatement",
																		"src": "5125:15:14"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "outOfPlaceEncoding",
																		"nativeSrc": "4995:18:14",
																		"nodeType": "YulIdentifier",
																		"src": "4995:18:14"
																	},
																	{
																		"arguments": [
																			{
																				"name": "length",
																				"nativeSrc": "5018:6:14",
																				"nodeType": "YulIdentifier",
																				"src": "5018:6:14"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "5026:2:14",
																				"nodeType": "YulLiteral",
																				"src": "5026:2:14",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "lt",
																			"nativeSrc": "5015:2:14",
																			"nodeType": "YulIdentifier",
																			"src": "5015:2:14"
																		},
																		"nativeSrc": "5015:14:14",
																		"nodeType": "YulFunctionCall",
																		"src": "5015:14:14"
																	}
																],
																"functionName": {
																	"name": "eq",
																	"nativeSrc": "4992:2:14",
																	"nodeType": "YulIdentifier",
																	"src": "4992:2:14"
																},
																"nativeSrc": "4992:38:14",
																"nodeType": "YulFunctionCall",
																"src": "4992:38:14"
															},
															"nativeSrc": "4989:161:14",
															"nodeType": "YulIf",
															"src": "4989:161:14"
														}
													]
												},
												"name": "extract_byte_array_length",
												"nativeSrc": "4776:380:14",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "data",
														"nativeSrc": "4811:4:14",
														"nodeType": "YulTypedName",
														"src": "4811:4:14",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "length",
														"nativeSrc": "4820:6:14",
														"nodeType": "YulTypedName",
														"src": "4820:6:14",
														"type": ""
													}
												],
												"src": "4776:380:14"
											},
											{
												"body": {
													"nativeSrc": "5335:223:14",
													"nodeType": "YulBlock",
													"src": "5335:223:14",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "5352:9:14",
																		"nodeType": "YulIdentifier",
																		"src": "5352:9:14"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "5363:2:14",
																		"nodeType": "YulLiteral",
																		"src": "5363:2:14",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "5345:6:14",
																	"nodeType": "YulIdentifier",
																	"src": "5345:6:14"
																},
																"nativeSrc": "5345:21:14",
																"nodeType": "YulFunctionCall",
																"src": "5345:21:14"
															},
															"nativeSrc": "5345:21:14",
															"nodeType": "YulExpressionStatement",
															"src": "5345:21:14"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "5386:9:14",
																				"nodeType": "YulIdentifier",
																				"src": "5386:9:14"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "5397:2:14",
																				"nodeType": "YulLiteral",
																				"src": "5397:2:14",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "5382:3:14",
																			"nodeType": "YulIdentifier",
																			"src": "5382:3:14"
																		},
																		"nativeSrc": "5382:18:14",
																		"nodeType": "YulFunctionCall",
																		"src": "5382:18:14"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "5402:2:14",
																		"nodeType": "YulLiteral",
																		"src": "5402:2:14",
																		"type": "",
																		"value": "33"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "5375:6:14",
																	"nodeType": "YulIdentifier",
																	"src": "5375:6:14"
																},
																"nativeSrc": "5375:30:14",
																"nodeType": "YulFunctionCall",
																"src": "5375:30:14"
															},
															"nativeSrc": "5375:30:14",
															"nodeType": "YulExpressionStatement",
															"src": "5375:30:14"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "5425:9:14",
																				"nodeType": "YulIdentifier",
																				"src": "5425:9:14"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "5436:2:14",
																				"nodeType": "YulLiteral",
																				"src": "5436:2:14",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "5421:3:14",
																			"nodeType": "YulIdentifier",
																			"src": "5421:3:14"
																		},
																		"nativeSrc": "5421:18:14",
																		"nodeType": "YulFunctionCall",
																		"src": "5421:18:14"
																	},
																	{
																		"hexValue": "4552433732313a20617070726f76616c20746f2063757272656e74206f776e65",
																		"kind": "string",
																		"nativeSrc": "5441:34:14",
																		"nodeType": "YulLiteral",
																		"src": "5441:34:14",
																		"type": "",
																		"value": "ERC721: approval to current owne"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "5414:6:14",
																	"nodeType": "YulIdentifier",
																	"src": "5414:6:14"
																},
																"nativeSrc": "5414:62:14",
																"nodeType": "YulFunctionCall",
																"src": "5414:62:14"
															},
															"nativeSrc": "5414:62:14",
															"nodeType": "YulExpressionStatement",
															"src": "5414:62:14"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "5496:9:14",
																				"nodeType": "YulIdentifier",
																				"src": "5496:9:14"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "5507:2:14",
																				"nodeType": "YulLiteral",
																				"src": "5507:2:14",
																				"type": "",
																				"value": "96"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "5492:3:14",
																			"nodeType": "YulIdentifier",
																			"src": "5492:3:14"
																		},
																		"nativeSrc": "5492:18:14",
																		"nodeType": "YulFunctionCall",
																		"src": "5492:18:14"
																	},
																	{
																		"hexValue": "72",
																		"kind": "string",
																		"nativeSrc": "5512:3:14",
																		"nodeType": "YulLiteral",
																		"src": "5512:3:14",
																		"type": "",
																		"value": "r"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "5485:6:14",
																	"nodeType": "YulIdentifier",
																	"src": "5485:6:14"
																},
																"nativeSrc": "5485:31:14",
																"nodeType": "YulFunctionCall",
																"src": "5485:31:14"
															},
															"nativeSrc": "5485:31:14",
															"nodeType": "YulExpressionStatement",
															"src": "5485:31:14"
														},
														{
															"nativeSrc": "5525:27:14",
															"nodeType": "YulAssignment",
															"src": "5525:27:14",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "5537:9:14",
																		"nodeType": "YulIdentifier",
																		"src": "5537:9:14"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "5548:3:14",
																		"nodeType": "YulLiteral",
																		"src": "5548:3:14",
																		"type": "",
																		"value": "128"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "5533:3:14",
																	"nodeType": "YulIdentifier",
																	"src": "5533:3:14"
																},
																"nativeSrc": "5533:19:14",
																"nodeType": "YulFunctionCall",
																"src": "5533:19:14"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "5525:4:14",
																	"nodeType": "YulIdentifier",
																	"src": "5525:4:14"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_b51b4875eede07862961e8f9365c6749f5fe55c6ee5d7a9e42b6912ad0b15942__to_t_string_memory_ptr__fromStack_reversed",
												"nativeSrc": "5161:397:14",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "5312:9:14",
														"nodeType": "YulTypedName",
														"src": "5312:9:14",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "5326:4:14",
														"nodeType": "YulTypedName",
														"src": "5326:4:14",
														"type": ""
													}
												],
												"src": "5161:397:14"
											},
											{
												"body": {
													"nativeSrc": "5737:251:14",
													"nodeType": "YulBlock",
													"src": "5737:251:14",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "5754:9:14",
																		"nodeType": "YulIdentifier",
																		"src": "5754:9:14"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "5765:2:14",
																		"nodeType": "YulLiteral",
																		"src": "5765:2:14",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "5747:6:14",
																	"nodeType": "YulIdentifier",
																	"src": "5747:6:14"
																},
																"nativeSrc": "5747:21:14",
																"nodeType": "YulFunctionCall",
																"src": "5747:21:14"
															},
															"nativeSrc": "5747:21:14",
															"nodeType": "YulExpressionStatement",
															"src": "5747:21:14"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "5788:9:14",
																				"nodeType": "YulIdentifier",
																				"src": "5788:9:14"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "5799:2:14",
																				"nodeType": "YulLiteral",
																				"src": "5799:2:14",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "5784:3:14",
																			"nodeType": "YulIdentifier",
																			"src": "5784:3:14"
																		},
																		"nativeSrc": "5784:18:14",
																		"nodeType": "YulFunctionCall",
																		"src": "5784:18:14"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "5804:2:14",
																		"nodeType": "YulLiteral",
																		"src": "5804:2:14",
																		"type": "",
																		"value": "61"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "5777:6:14",
																	"nodeType": "YulIdentifier",
																	"src": "5777:6:14"
																},
																"nativeSrc": "5777:30:14",
																"nodeType": "YulFunctionCall",
																"src": "5777:30:14"
															},
															"nativeSrc": "5777:30:14",
															"nodeType": "YulExpressionStatement",
															"src": "5777:30:14"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "5827:9:14",
																				"nodeType": "YulIdentifier",
																				"src": "5827:9:14"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "5838:2:14",
																				"nodeType": "YulLiteral",
																				"src": "5838:2:14",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "5823:3:14",
																			"nodeType": "YulIdentifier",
																			"src": "5823:3:14"
																		},
																		"nativeSrc": "5823:18:14",
																		"nodeType": "YulFunctionCall",
																		"src": "5823:18:14"
																	},
																	{
																		"hexValue": "4552433732313a20617070726f76652063616c6c6572206973206e6f7420746f",
																		"kind": "string",
																		"nativeSrc": "5843:34:14",
																		"nodeType": "YulLiteral",
																		"src": "5843:34:14",
																		"type": "",
																		"value": "ERC721: approve caller is not to"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "5816:6:14",
																	"nodeType": "YulIdentifier",
																	"src": "5816:6:14"
																},
																"nativeSrc": "5816:62:14",
																"nodeType": "YulFunctionCall",
																"src": "5816:62:14"
															},
															"nativeSrc": "5816:62:14",
															"nodeType": "YulExpressionStatement",
															"src": "5816:62:14"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "5898:9:14",
																				"nodeType": "YulIdentifier",
																				"src": "5898:9:14"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "5909:2:14",
																				"nodeType": "YulLiteral",
																				"src": "5909:2:14",
																				"type": "",
																				"value": "96"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "5894:3:14",
																			"nodeType": "YulIdentifier",
																			"src": "5894:3:14"
																		},
																		"nativeSrc": "5894:18:14",
																		"nodeType": "YulFunctionCall",
																		"src": "5894:18:14"
																	},
																	{
																		"hexValue": "6b656e206f776e6572206f7220617070726f76656420666f7220616c6c",
																		"kind": "string",
																		"nativeSrc": "5914:31:14",
																		"nodeType": "YulLiteral",
																		"src": "5914:31:14",
																		"type": "",
																		"value": "ken owner or approved for all"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "5887:6:14",
																	"nodeType": "YulIdentifier",
																	"src": "5887:6:14"
																},
																"nativeSrc": "5887:59:14",
																"nodeType": "YulFunctionCall",
																"src": "5887:59:14"
															},
															"nativeSrc": "5887:59:14",
															"nodeType": "YulExpressionStatement",
															"src": "5887:59:14"
														},
														{
															"nativeSrc": "5955:27:14",
															"nodeType": "YulAssignment",
															"src": "5955:27:14",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "5967:9:14",
																		"nodeType": "YulIdentifier",
																		"src": "5967:9:14"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "5978:3:14",
																		"nodeType": "YulLiteral",
																		"src": "5978:3:14",
																		"type": "",
																		"value": "128"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "5963:3:14",
																	"nodeType": "YulIdentifier",
																	"src": "5963:3:14"
																},
																"nativeSrc": "5963:19:14",
																"nodeType": "YulFunctionCall",
																"src": "5963:19:14"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "5955:4:14",
																	"nodeType": "YulIdentifier",
																	"src": "5955:4:14"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_c6e14a63ffb144eeef7cce6988e5dce07c60a7e0a7b1ef25dbe18c61483e0a83__to_t_string_memory_ptr__fromStack_reversed",
												"nativeSrc": "5563:425:14",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "5714:9:14",
														"nodeType": "YulTypedName",
														"src": "5714:9:14",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "5728:4:14",
														"nodeType": "YulTypedName",
														"src": "5728:4:14",
														"type": ""
													}
												],
												"src": "5563:425:14"
											},
											{
												"body": {
													"nativeSrc": "6167:235:14",
													"nodeType": "YulBlock",
													"src": "6167:235:14",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "6184:9:14",
																		"nodeType": "YulIdentifier",
																		"src": "6184:9:14"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "6195:2:14",
																		"nodeType": "YulLiteral",
																		"src": "6195:2:14",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "6177:6:14",
																	"nodeType": "YulIdentifier",
																	"src": "6177:6:14"
																},
																"nativeSrc": "6177:21:14",
																"nodeType": "YulFunctionCall",
																"src": "6177:21:14"
															},
															"nativeSrc": "6177:21:14",
															"nodeType": "YulExpressionStatement",
															"src": "6177:21:14"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "6218:9:14",
																				"nodeType": "YulIdentifier",
																				"src": "6218:9:14"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "6229:2:14",
																				"nodeType": "YulLiteral",
																				"src": "6229:2:14",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "6214:3:14",
																			"nodeType": "YulIdentifier",
																			"src": "6214:3:14"
																		},
																		"nativeSrc": "6214:18:14",
																		"nodeType": "YulFunctionCall",
																		"src": "6214:18:14"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "6234:2:14",
																		"nodeType": "YulLiteral",
																		"src": "6234:2:14",
																		"type": "",
																		"value": "45"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "6207:6:14",
																	"nodeType": "YulIdentifier",
																	"src": "6207:6:14"
																},
																"nativeSrc": "6207:30:14",
																"nodeType": "YulFunctionCall",
																"src": "6207:30:14"
															},
															"nativeSrc": "6207:30:14",
															"nodeType": "YulExpressionStatement",
															"src": "6207:30:14"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "6257:9:14",
																				"nodeType": "YulIdentifier",
																				"src": "6257:9:14"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "6268:2:14",
																				"nodeType": "YulLiteral",
																				"src": "6268:2:14",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "6253:3:14",
																			"nodeType": "YulIdentifier",
																			"src": "6253:3:14"
																		},
																		"nativeSrc": "6253:18:14",
																		"nodeType": "YulFunctionCall",
																		"src": "6253:18:14"
																	},
																	{
																		"hexValue": "4552433732313a2063616c6c6572206973206e6f7420746f6b656e206f776e65",
																		"kind": "string",
																		"nativeSrc": "6273:34:14",
																		"nodeType": "YulLiteral",
																		"src": "6273:34:14",
																		"type": "",
																		"value": "ERC721: caller is not token owne"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "6246:6:14",
																	"nodeType": "YulIdentifier",
																	"src": "6246:6:14"
																},
																"nativeSrc": "6246:62:14",
																"nodeType": "YulFunctionCall",
																"src": "6246:62:14"
															},
															"nativeSrc": "6246:62:14",
															"nodeType": "YulExpressionStatement",
															"src": "6246:62:14"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "6328:9:14",
																				"nodeType": "YulIdentifier",
																				"src": "6328:9:14"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "6339:2:14",
																				"nodeType": "YulLiteral",
																				"src": "6339:2:14",
																				"type": "",
																				"value": "96"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "6324:3:14",
																			"nodeType": "YulIdentifier",
																			"src": "6324:3:14"
																		},
																		"nativeSrc": "6324:18:14",
																		"nodeType": "YulFunctionCall",
																		"src": "6324:18:14"
																	},
																	{
																		"hexValue": "72206f7220617070726f766564",
																		"kind": "string",
																		"nativeSrc": "6344:15:14",
																		"nodeType": "YulLiteral",
																		"src": "6344:15:14",
																		"type": "",
																		"value": "r or approved"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "6317:6:14",
																	"nodeType": "YulIdentifier",
																	"src": "6317:6:14"
																},
																"nativeSrc": "6317:43:14",
																"nodeType": "YulFunctionCall",
																"src": "6317:43:14"
															},
															"nativeSrc": "6317:43:14",
															"nodeType": "YulExpressionStatement",
															"src": "6317:43:14"
														},
														{
															"nativeSrc": "6369:27:14",
															"nodeType": "YulAssignment",
															"src": "6369:27:14",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "6381:9:14",
																		"nodeType": "YulIdentifier",
																		"src": "6381:9:14"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "6392:3:14",
																		"nodeType": "YulLiteral",
																		"src": "6392:3:14",
																		"type": "",
																		"value": "128"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "6377:3:14",
																	"nodeType": "YulIdentifier",
																	"src": "6377:3:14"
																},
																"nativeSrc": "6377:19:14",
																"nodeType": "YulFunctionCall",
																"src": "6377:19:14"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "6369:4:14",
																	"nodeType": "YulIdentifier",
																	"src": "6369:4:14"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_12a8e5623d251e191fe4a291d9a59bcc01a4db7a1f5c20fc8de44358c18308af__to_t_string_memory_ptr__fromStack_reversed",
												"nativeSrc": "5993:409:14",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "6144:9:14",
														"nodeType": "YulTypedName",
														"src": "6144:9:14",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "6158:4:14",
														"nodeType": "YulTypedName",
														"src": "6158:4:14",
														"type": ""
													}
												],
												"src": "5993:409:14"
											},
											{
												"body": {
													"nativeSrc": "6581:174:14",
													"nodeType": "YulBlock",
													"src": "6581:174:14",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "6598:9:14",
																		"nodeType": "YulIdentifier",
																		"src": "6598:9:14"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "6609:2:14",
																		"nodeType": "YulLiteral",
																		"src": "6609:2:14",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "6591:6:14",
																	"nodeType": "YulIdentifier",
																	"src": "6591:6:14"
																},
																"nativeSrc": "6591:21:14",
																"nodeType": "YulFunctionCall",
																"src": "6591:21:14"
															},
															"nativeSrc": "6591:21:14",
															"nodeType": "YulExpressionStatement",
															"src": "6591:21:14"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "6632:9:14",
																				"nodeType": "YulIdentifier",
																				"src": "6632:9:14"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "6643:2:14",
																				"nodeType": "YulLiteral",
																				"src": "6643:2:14",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "6628:3:14",
																			"nodeType": "YulIdentifier",
																			"src": "6628:3:14"
																		},
																		"nativeSrc": "6628:18:14",
																		"nodeType": "YulFunctionCall",
																		"src": "6628:18:14"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "6648:2:14",
																		"nodeType": "YulLiteral",
																		"src": "6648:2:14",
																		"type": "",
																		"value": "24"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "6621:6:14",
																	"nodeType": "YulIdentifier",
																	"src": "6621:6:14"
																},
																"nativeSrc": "6621:30:14",
																"nodeType": "YulFunctionCall",
																"src": "6621:30:14"
															},
															"nativeSrc": "6621:30:14",
															"nodeType": "YulExpressionStatement",
															"src": "6621:30:14"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "6671:9:14",
																				"nodeType": "YulIdentifier",
																				"src": "6671:9:14"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "6682:2:14",
																				"nodeType": "YulLiteral",
																				"src": "6682:2:14",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "6667:3:14",
																			"nodeType": "YulIdentifier",
																			"src": "6667:3:14"
																		},
																		"nativeSrc": "6667:18:14",
																		"nodeType": "YulFunctionCall",
																		"src": "6667:18:14"
																	},
																	{
																		"hexValue": "4552433732313a20696e76616c696420746f6b656e204944",
																		"kind": "string",
																		"nativeSrc": "6687:26:14",
																		"nodeType": "YulLiteral",
																		"src": "6687:26:14",
																		"type": "",
																		"value": "ERC721: invalid token ID"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "6660:6:14",
																	"nodeType": "YulIdentifier",
																	"src": "6660:6:14"
																},
																"nativeSrc": "6660:54:14",
																"nodeType": "YulFunctionCall",
																"src": "6660:54:14"
															},
															"nativeSrc": "6660:54:14",
															"nodeType": "YulExpressionStatement",
															"src": "6660:54:14"
														},
														{
															"nativeSrc": "6723:26:14",
															"nodeType": "YulAssignment",
															"src": "6723:26:14",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "6735:9:14",
																		"nodeType": "YulIdentifier",
																		"src": "6735:9:14"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "6746:2:14",
																		"nodeType": "YulLiteral",
																		"src": "6746:2:14",
																		"type": "",
																		"value": "96"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "6731:3:14",
																	"nodeType": "YulIdentifier",
																	"src": "6731:3:14"
																},
																"nativeSrc": "6731:18:14",
																"nodeType": "YulFunctionCall",
																"src": "6731:18:14"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "6723:4:14",
																	"nodeType": "YulIdentifier",
																	"src": "6723:4:14"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_b08d2b0fec7cc108ab049809a8beb42779d969a49299d0c317c907d9db22974f__to_t_string_memory_ptr__fromStack_reversed",
												"nativeSrc": "6407:348:14",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "6558:9:14",
														"nodeType": "YulTypedName",
														"src": "6558:9:14",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "6572:4:14",
														"nodeType": "YulTypedName",
														"src": "6572:4:14",
														"type": ""
													}
												],
												"src": "6407:348:14"
											},
											{
												"body": {
													"nativeSrc": "6934:231:14",
													"nodeType": "YulBlock",
													"src": "6934:231:14",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "6951:9:14",
																		"nodeType": "YulIdentifier",
																		"src": "6951:9:14"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "6962:2:14",
																		"nodeType": "YulLiteral",
																		"src": "6962:2:14",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "6944:6:14",
																	"nodeType": "YulIdentifier",
																	"src": "6944:6:14"
																},
																"nativeSrc": "6944:21:14",
																"nodeType": "YulFunctionCall",
																"src": "6944:21:14"
															},
															"nativeSrc": "6944:21:14",
															"nodeType": "YulExpressionStatement",
															"src": "6944:21:14"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "6985:9:14",
																				"nodeType": "YulIdentifier",
																				"src": "6985:9:14"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "6996:2:14",
																				"nodeType": "YulLiteral",
																				"src": "6996:2:14",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "6981:3:14",
																			"nodeType": "YulIdentifier",
																			"src": "6981:3:14"
																		},
																		"nativeSrc": "6981:18:14",
																		"nodeType": "YulFunctionCall",
																		"src": "6981:18:14"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "7001:2:14",
																		"nodeType": "YulLiteral",
																		"src": "7001:2:14",
																		"type": "",
																		"value": "41"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "6974:6:14",
																	"nodeType": "YulIdentifier",
																	"src": "6974:6:14"
																},
																"nativeSrc": "6974:30:14",
																"nodeType": "YulFunctionCall",
																"src": "6974:30:14"
															},
															"nativeSrc": "6974:30:14",
															"nodeType": "YulExpressionStatement",
															"src": "6974:30:14"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "7024:9:14",
																				"nodeType": "YulIdentifier",
																				"src": "7024:9:14"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "7035:2:14",
																				"nodeType": "YulLiteral",
																				"src": "7035:2:14",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "7020:3:14",
																			"nodeType": "YulIdentifier",
																			"src": "7020:3:14"
																		},
																		"nativeSrc": "7020:18:14",
																		"nodeType": "YulFunctionCall",
																		"src": "7020:18:14"
																	},
																	{
																		"hexValue": "4552433732313a2061646472657373207a65726f206973206e6f742061207661",
																		"kind": "string",
																		"nativeSrc": "7040:34:14",
																		"nodeType": "YulLiteral",
																		"src": "7040:34:14",
																		"type": "",
																		"value": "ERC721: address zero is not a va"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "7013:6:14",
																	"nodeType": "YulIdentifier",
																	"src": "7013:6:14"
																},
																"nativeSrc": "7013:62:14",
																"nodeType": "YulFunctionCall",
																"src": "7013:62:14"
															},
															"nativeSrc": "7013:62:14",
															"nodeType": "YulExpressionStatement",
															"src": "7013:62:14"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "7095:9:14",
																				"nodeType": "YulIdentifier",
																				"src": "7095:9:14"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "7106:2:14",
																				"nodeType": "YulLiteral",
																				"src": "7106:2:14",
																				"type": "",
																				"value": "96"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "7091:3:14",
																			"nodeType": "YulIdentifier",
																			"src": "7091:3:14"
																		},
																		"nativeSrc": "7091:18:14",
																		"nodeType": "YulFunctionCall",
																		"src": "7091:18:14"
																	},
																	{
																		"hexValue": "6c6964206f776e6572",
																		"kind": "string",
																		"nativeSrc": "7111:11:14",
																		"nodeType": "YulLiteral",
																		"src": "7111:11:14",
																		"type": "",
																		"value": "lid owner"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "7084:6:14",
																	"nodeType": "YulIdentifier",
																	"src": "7084:6:14"
																},
																"nativeSrc": "7084:39:14",
																"nodeType": "YulFunctionCall",
																"src": "7084:39:14"
															},
															"nativeSrc": "7084:39:14",
															"nodeType": "YulExpressionStatement",
															"src": "7084:39:14"
														},
														{
															"nativeSrc": "7132:27:14",
															"nodeType": "YulAssignment",
															"src": "7132:27:14",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "7144:9:14",
																		"nodeType": "YulIdentifier",
																		"src": "7144:9:14"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "7155:3:14",
																		"nodeType": "YulLiteral",
																		"src": "7155:3:14",
																		"type": "",
																		"value": "128"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "7140:3:14",
																	"nodeType": "YulIdentifier",
																	"src": "7140:3:14"
																},
																"nativeSrc": "7140:19:14",
																"nodeType": "YulFunctionCall",
																"src": "7140:19:14"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "7132:4:14",
																	"nodeType": "YulIdentifier",
																	"src": "7132:4:14"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_6d05c90094f31cfeb8f0eb86f0a513af3f7f8992991fbde41b08aa7960677159__to_t_string_memory_ptr__fromStack_reversed",
												"nativeSrc": "6760:405:14",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "6911:9:14",
														"nodeType": "YulTypedName",
														"src": "6911:9:14",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "6925:4:14",
														"nodeType": "YulTypedName",
														"src": "6925:4:14",
														"type": ""
													}
												],
												"src": "6760:405:14"
											},
											{
												"body": {
													"nativeSrc": "7357:309:14",
													"nodeType": "YulBlock",
													"src": "7357:309:14",
													"statements": [
														{
															"nativeSrc": "7367:27:14",
															"nodeType": "YulVariableDeclaration",
															"src": "7367:27:14",
															"value": {
																"arguments": [
																	{
																		"name": "value0",
																		"nativeSrc": "7387:6:14",
																		"nodeType": "YulIdentifier",
																		"src": "7387:6:14"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nativeSrc": "7381:5:14",
																	"nodeType": "YulIdentifier",
																	"src": "7381:5:14"
																},
																"nativeSrc": "7381:13:14",
																"nodeType": "YulFunctionCall",
																"src": "7381:13:14"
															},
															"variables": [
																{
																	"name": "length",
																	"nativeSrc": "7371:6:14",
																	"nodeType": "YulTypedName",
																	"src": "7371:6:14",
																	"type": ""
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value0",
																				"nativeSrc": "7442:6:14",
																				"nodeType": "YulIdentifier",
																				"src": "7442:6:14"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "7450:4:14",
																				"nodeType": "YulLiteral",
																				"src": "7450:4:14",
																				"type": "",
																				"value": "0x20"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "7438:3:14",
																			"nodeType": "YulIdentifier",
																			"src": "7438:3:14"
																		},
																		"nativeSrc": "7438:17:14",
																		"nodeType": "YulFunctionCall",
																		"src": "7438:17:14"
																	},
																	{
																		"name": "pos",
																		"nativeSrc": "7457:3:14",
																		"nodeType": "YulIdentifier",
																		"src": "7457:3:14"
																	},
																	{
																		"name": "length",
																		"nativeSrc": "7462:6:14",
																		"nodeType": "YulIdentifier",
																		"src": "7462:6:14"
																	}
																],
																"functionName": {
																	"name": "copy_memory_to_memory_with_cleanup",
																	"nativeSrc": "7403:34:14",
																	"nodeType": "YulIdentifier",
																	"src": "7403:34:14"
																},
																"nativeSrc": "7403:66:14",
																"nodeType": "YulFunctionCall",
																"src": "7403:66:14"
															},
															"nativeSrc": "7403:66:14",
															"nodeType": "YulExpressionStatement",
															"src": "7403:66:14"
														},
														{
															"nativeSrc": "7478:29:14",
															"nodeType": "YulVariableDeclaration",
															"src": "7478:29:14",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "7495:3:14",
																		"nodeType": "YulIdentifier",
																		"src": "7495:3:14"
																	},
																	{
																		"name": "length",
																		"nativeSrc": "7500:6:14",
																		"nodeType": "YulIdentifier",
																		"src": "7500:6:14"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "7491:3:14",
																	"nodeType": "YulIdentifier",
																	"src": "7491:3:14"
																},
																"nativeSrc": "7491:16:14",
																"nodeType": "YulFunctionCall",
																"src": "7491:16:14"
															},
															"variables": [
																{
																	"name": "end_1",
																	"nativeSrc": "7482:5:14",
																	"nodeType": "YulTypedName",
																	"src": "7482:5:14",
																	"type": ""
																}
															]
														},
														{
															"nativeSrc": "7516:29:14",
															"nodeType": "YulVariableDeclaration",
															"src": "7516:29:14",
															"value": {
																"arguments": [
																	{
																		"name": "value1",
																		"nativeSrc": "7538:6:14",
																		"nodeType": "YulIdentifier",
																		"src": "7538:6:14"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nativeSrc": "7532:5:14",
																	"nodeType": "YulIdentifier",
																	"src": "7532:5:14"
																},
																"nativeSrc": "7532:13:14",
																"nodeType": "YulFunctionCall",
																"src": "7532:13:14"
															},
															"variables": [
																{
																	"name": "length_1",
																	"nativeSrc": "7520:8:14",
																	"nodeType": "YulTypedName",
																	"src": "7520:8:14",
																	"type": ""
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value1",
																				"nativeSrc": "7593:6:14",
																				"nodeType": "YulIdentifier",
																				"src": "7593:6:14"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "7601:4:14",
																				"nodeType": "YulLiteral",
																				"src": "7601:4:14",
																				"type": "",
																				"value": "0x20"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "7589:3:14",
																			"nodeType": "YulIdentifier",
																			"src": "7589:3:14"
																		},
																		"nativeSrc": "7589:17:14",
																		"nodeType": "YulFunctionCall",
																		"src": "7589:17:14"
																	},
																	{
																		"name": "end_1",
																		"nativeSrc": "7608:5:14",
																		"nodeType": "YulIdentifier",
																		"src": "7608:5:14"
																	},
																	{
																		"name": "length_1",
																		"nativeSrc": "7615:8:14",
																		"nodeType": "YulIdentifier",
																		"src": "7615:8:14"
																	}
																],
																"functionName": {
																	"name": "copy_memory_to_memory_with_cleanup",
																	"nativeSrc": "7554:34:14",
																	"nodeType": "YulIdentifier",
																	"src": "7554:34:14"
																},
																"nativeSrc": "7554:70:14",
																"nodeType": "YulFunctionCall",
																"src": "7554:70:14"
															},
															"nativeSrc": "7554:70:14",
															"nodeType": "YulExpressionStatement",
															"src": "7554:70:14"
														},
														{
															"nativeSrc": "7633:27:14",
															"nodeType": "YulAssignment",
															"src": "7633:27:14",
															"value": {
																"arguments": [
																	{
																		"name": "end_1",
																		"nativeSrc": "7644:5:14",
																		"nodeType": "YulIdentifier",
																		"src": "7644:5:14"
																	},
																	{
																		"name": "length_1",
																		"nativeSrc": "7651:8:14",
																		"nodeType": "YulIdentifier",
																		"src": "7651:8:14"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "7640:3:14",
																	"nodeType": "YulIdentifier",
																	"src": "7640:3:14"
																},
																"nativeSrc": "7640:20:14",
																"nodeType": "YulFunctionCall",
																"src": "7640:20:14"
															},
															"variableNames": [
																{
																	"name": "end",
																	"nativeSrc": "7633:3:14",
																	"nodeType": "YulIdentifier",
																	"src": "7633:3:14"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_packed_t_string_memory_ptr_t_string_memory_ptr__to_t_string_memory_ptr_t_string_memory_ptr__nonPadded_inplace_fromStack_reversed",
												"nativeSrc": "7170:496:14",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "pos",
														"nativeSrc": "7325:3:14",
														"nodeType": "YulTypedName",
														"src": "7325:3:14",
														"type": ""
													},
													{
														"name": "value1",
														"nativeSrc": "7330:6:14",
														"nodeType": "YulTypedName",
														"src": "7330:6:14",
														"type": ""
													},
													{
														"name": "value0",
														"nativeSrc": "7338:6:14",
														"nodeType": "YulTypedName",
														"src": "7338:6:14",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "end",
														"nativeSrc": "7349:3:14",
														"nodeType": "YulTypedName",
														"src": "7349:3:14",
														"type": ""
													}
												],
												"src": "7170:496:14"
											},
											{
												"body": {
													"nativeSrc": "7845:227:14",
													"nodeType": "YulBlock",
													"src": "7845:227:14",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "7862:9:14",
																		"nodeType": "YulIdentifier",
																		"src": "7862:9:14"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "7873:2:14",
																		"nodeType": "YulLiteral",
																		"src": "7873:2:14",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "7855:6:14",
																	"nodeType": "YulIdentifier",
																	"src": "7855:6:14"
																},
																"nativeSrc": "7855:21:14",
																"nodeType": "YulFunctionCall",
																"src": "7855:21:14"
															},
															"nativeSrc": "7855:21:14",
															"nodeType": "YulExpressionStatement",
															"src": "7855:21:14"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "7896:9:14",
																				"nodeType": "YulIdentifier",
																				"src": "7896:9:14"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "7907:2:14",
																				"nodeType": "YulLiteral",
																				"src": "7907:2:14",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "7892:3:14",
																			"nodeType": "YulIdentifier",
																			"src": "7892:3:14"
																		},
																		"nativeSrc": "7892:18:14",
																		"nodeType": "YulFunctionCall",
																		"src": "7892:18:14"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "7912:2:14",
																		"nodeType": "YulLiteral",
																		"src": "7912:2:14",
																		"type": "",
																		"value": "37"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "7885:6:14",
																	"nodeType": "YulIdentifier",
																	"src": "7885:6:14"
																},
																"nativeSrc": "7885:30:14",
																"nodeType": "YulFunctionCall",
																"src": "7885:30:14"
															},
															"nativeSrc": "7885:30:14",
															"nodeType": "YulExpressionStatement",
															"src": "7885:30:14"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "7935:9:14",
																				"nodeType": "YulIdentifier",
																				"src": "7935:9:14"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "7946:2:14",
																				"nodeType": "YulLiteral",
																				"src": "7946:2:14",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "7931:3:14",
																			"nodeType": "YulIdentifier",
																			"src": "7931:3:14"
																		},
																		"nativeSrc": "7931:18:14",
																		"nodeType": "YulFunctionCall",
																		"src": "7931:18:14"
																	},
																	{
																		"hexValue": "4552433732313a207472616e736665722066726f6d20696e636f727265637420",
																		"kind": "string",
																		"nativeSrc": "7951:34:14",
																		"nodeType": "YulLiteral",
																		"src": "7951:34:14",
																		"type": "",
																		"value": "ERC721: transfer from incorrect "
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "7924:6:14",
																	"nodeType": "YulIdentifier",
																	"src": "7924:6:14"
																},
																"nativeSrc": "7924:62:14",
																"nodeType": "YulFunctionCall",
																"src": "7924:62:14"
															},
															"nativeSrc": "7924:62:14",
															"nodeType": "YulExpressionStatement",
															"src": "7924:62:14"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "8006:9:14",
																				"nodeType": "YulIdentifier",
																				"src": "8006:9:14"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "8017:2:14",
																				"nodeType": "YulLiteral",
																				"src": "8017:2:14",
																				"type": "",
																				"value": "96"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "8002:3:14",
																			"nodeType": "YulIdentifier",
																			"src": "8002:3:14"
																		},
																		"nativeSrc": "8002:18:14",
																		"nodeType": "YulFunctionCall",
																		"src": "8002:18:14"
																	},
																	{
																		"hexValue": "6f776e6572",
																		"kind": "string",
																		"nativeSrc": "8022:7:14",
																		"nodeType": "YulLiteral",
																		"src": "8022:7:14",
																		"type": "",
																		"value": "owner"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "7995:6:14",
																	"nodeType": "YulIdentifier",
																	"src": "7995:6:14"
																},
																"nativeSrc": "7995:35:14",
																"nodeType": "YulFunctionCall",
																"src": "7995:35:14"
															},
															"nativeSrc": "7995:35:14",
															"nodeType": "YulExpressionStatement",
															"src": "7995:35:14"
														},
														{
															"nativeSrc": "8039:27:14",
															"nodeType": "YulAssignment",
															"src": "8039:27:14",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "8051:9:14",
																		"nodeType": "YulIdentifier",
																		"src": "8051:9:14"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "8062:3:14",
																		"nodeType": "YulLiteral",
																		"src": "8062:3:14",
																		"type": "",
																		"value": "128"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "8047:3:14",
																	"nodeType": "YulIdentifier",
																	"src": "8047:3:14"
																},
																"nativeSrc": "8047:19:14",
																"nodeType": "YulFunctionCall",
																"src": "8047:19:14"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "8039:4:14",
																	"nodeType": "YulIdentifier",
																	"src": "8039:4:14"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_277f8ee9d5b4fc3c4149386f24de0fc1bbc63a8210e2197bfd1c0376a2ac5f48__to_t_string_memory_ptr__fromStack_reversed",
												"nativeSrc": "7671:401:14",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "7822:9:14",
														"nodeType": "YulTypedName",
														"src": "7822:9:14",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "7836:4:14",
														"nodeType": "YulTypedName",
														"src": "7836:4:14",
														"type": ""
													}
												],
												"src": "7671:401:14"
											},
											{
												"body": {
													"nativeSrc": "8251:226:14",
													"nodeType": "YulBlock",
													"src": "8251:226:14",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "8268:9:14",
																		"nodeType": "YulIdentifier",
																		"src": "8268:9:14"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "8279:2:14",
																		"nodeType": "YulLiteral",
																		"src": "8279:2:14",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "8261:6:14",
																	"nodeType": "YulIdentifier",
																	"src": "8261:6:14"
																},
																"nativeSrc": "8261:21:14",
																"nodeType": "YulFunctionCall",
																"src": "8261:21:14"
															},
															"nativeSrc": "8261:21:14",
															"nodeType": "YulExpressionStatement",
															"src": "8261:21:14"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "8302:9:14",
																				"nodeType": "YulIdentifier",
																				"src": "8302:9:14"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "8313:2:14",
																				"nodeType": "YulLiteral",
																				"src": "8313:2:14",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "8298:3:14",
																			"nodeType": "YulIdentifier",
																			"src": "8298:3:14"
																		},
																		"nativeSrc": "8298:18:14",
																		"nodeType": "YulFunctionCall",
																		"src": "8298:18:14"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "8318:2:14",
																		"nodeType": "YulLiteral",
																		"src": "8318:2:14",
																		"type": "",
																		"value": "36"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "8291:6:14",
																	"nodeType": "YulIdentifier",
																	"src": "8291:6:14"
																},
																"nativeSrc": "8291:30:14",
																"nodeType": "YulFunctionCall",
																"src": "8291:30:14"
															},
															"nativeSrc": "8291:30:14",
															"nodeType": "YulExpressionStatement",
															"src": "8291:30:14"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "8341:9:14",
																				"nodeType": "YulIdentifier",
																				"src": "8341:9:14"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "8352:2:14",
																				"nodeType": "YulLiteral",
																				"src": "8352:2:14",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "8337:3:14",
																			"nodeType": "YulIdentifier",
																			"src": "8337:3:14"
																		},
																		"nativeSrc": "8337:18:14",
																		"nodeType": "YulFunctionCall",
																		"src": "8337:18:14"
																	},
																	{
																		"hexValue": "4552433732313a207472616e7366657220746f20746865207a65726f20616464",
																		"kind": "string",
																		"nativeSrc": "8357:34:14",
																		"nodeType": "YulLiteral",
																		"src": "8357:34:14",
																		"type": "",
																		"value": "ERC721: transfer to the zero add"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "8330:6:14",
																	"nodeType": "YulIdentifier",
																	"src": "8330:6:14"
																},
																"nativeSrc": "8330:62:14",
																"nodeType": "YulFunctionCall",
																"src": "8330:62:14"
															},
															"nativeSrc": "8330:62:14",
															"nodeType": "YulExpressionStatement",
															"src": "8330:62:14"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "8412:9:14",
																				"nodeType": "YulIdentifier",
																				"src": "8412:9:14"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "8423:2:14",
																				"nodeType": "YulLiteral",
																				"src": "8423:2:14",
																				"type": "",
																				"value": "96"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "8408:3:14",
																			"nodeType": "YulIdentifier",
																			"src": "8408:3:14"
																		},
																		"nativeSrc": "8408:18:14",
																		"nodeType": "YulFunctionCall",
																		"src": "8408:18:14"
																	},
																	{
																		"hexValue": "72657373",
																		"kind": "string",
																		"nativeSrc": "8428:6:14",
																		"nodeType": "YulLiteral",
																		"src": "8428:6:14",
																		"type": "",
																		"value": "ress"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "8401:6:14",
																	"nodeType": "YulIdentifier",
																	"src": "8401:6:14"
																},
																"nativeSrc": "8401:34:14",
																"nodeType": "YulFunctionCall",
																"src": "8401:34:14"
															},
															"nativeSrc": "8401:34:14",
															"nodeType": "YulExpressionStatement",
															"src": "8401:34:14"
														},
														{
															"nativeSrc": "8444:27:14",
															"nodeType": "YulAssignment",
															"src": "8444:27:14",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "8456:9:14",
																		"nodeType": "YulIdentifier",
																		"src": "8456:9:14"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "8467:3:14",
																		"nodeType": "YulLiteral",
																		"src": "8467:3:14",
																		"type": "",
																		"value": "128"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "8452:3:14",
																	"nodeType": "YulIdentifier",
																	"src": "8452:3:14"
																},
																"nativeSrc": "8452:19:14",
																"nodeType": "YulFunctionCall",
																"src": "8452:19:14"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "8444:4:14",
																	"nodeType": "YulIdentifier",
																	"src": "8444:4:14"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_455fea98ea03c32d7dd1a6f1426917d80529bf47b3ccbde74e7206e889e709f4__to_t_string_memory_ptr__fromStack_reversed",
												"nativeSrc": "8077:400:14",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "8228:9:14",
														"nodeType": "YulTypedName",
														"src": "8228:9:14",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "8242:4:14",
														"nodeType": "YulTypedName",
														"src": "8242:4:14",
														"type": ""
													}
												],
												"src": "8077:400:14"
											},
											{
												"body": {
													"nativeSrc": "8656:175:14",
													"nodeType": "YulBlock",
													"src": "8656:175:14",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "8673:9:14",
																		"nodeType": "YulIdentifier",
																		"src": "8673:9:14"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "8684:2:14",
																		"nodeType": "YulLiteral",
																		"src": "8684:2:14",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "8666:6:14",
																	"nodeType": "YulIdentifier",
																	"src": "8666:6:14"
																},
																"nativeSrc": "8666:21:14",
																"nodeType": "YulFunctionCall",
																"src": "8666:21:14"
															},
															"nativeSrc": "8666:21:14",
															"nodeType": "YulExpressionStatement",
															"src": "8666:21:14"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "8707:9:14",
																				"nodeType": "YulIdentifier",
																				"src": "8707:9:14"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "8718:2:14",
																				"nodeType": "YulLiteral",
																				"src": "8718:2:14",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "8703:3:14",
																			"nodeType": "YulIdentifier",
																			"src": "8703:3:14"
																		},
																		"nativeSrc": "8703:18:14",
																		"nodeType": "YulFunctionCall",
																		"src": "8703:18:14"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "8723:2:14",
																		"nodeType": "YulLiteral",
																		"src": "8723:2:14",
																		"type": "",
																		"value": "25"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "8696:6:14",
																	"nodeType": "YulIdentifier",
																	"src": "8696:6:14"
																},
																"nativeSrc": "8696:30:14",
																"nodeType": "YulFunctionCall",
																"src": "8696:30:14"
															},
															"nativeSrc": "8696:30:14",
															"nodeType": "YulExpressionStatement",
															"src": "8696:30:14"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "8746:9:14",
																				"nodeType": "YulIdentifier",
																				"src": "8746:9:14"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "8757:2:14",
																				"nodeType": "YulLiteral",
																				"src": "8757:2:14",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "8742:3:14",
																			"nodeType": "YulIdentifier",
																			"src": "8742:3:14"
																		},
																		"nativeSrc": "8742:18:14",
																		"nodeType": "YulFunctionCall",
																		"src": "8742:18:14"
																	},
																	{
																		"hexValue": "4552433732313a20617070726f766520746f2063616c6c6572",
																		"kind": "string",
																		"nativeSrc": "8762:27:14",
																		"nodeType": "YulLiteral",
																		"src": "8762:27:14",
																		"type": "",
																		"value": "ERC721: approve to caller"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "8735:6:14",
																	"nodeType": "YulIdentifier",
																	"src": "8735:6:14"
																},
																"nativeSrc": "8735:55:14",
																"nodeType": "YulFunctionCall",
																"src": "8735:55:14"
															},
															"nativeSrc": "8735:55:14",
															"nodeType": "YulExpressionStatement",
															"src": "8735:55:14"
														},
														{
															"nativeSrc": "8799:26:14",
															"nodeType": "YulAssignment",
															"src": "8799:26:14",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "8811:9:14",
																		"nodeType": "YulIdentifier",
																		"src": "8811:9:14"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "8822:2:14",
																		"nodeType": "YulLiteral",
																		"src": "8822:2:14",
																		"type": "",
																		"value": "96"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "8807:3:14",
																	"nodeType": "YulIdentifier",
																	"src": "8807:3:14"
																},
																"nativeSrc": "8807:18:14",
																"nodeType": "YulFunctionCall",
																"src": "8807:18:14"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "8799:4:14",
																	"nodeType": "YulIdentifier",
																	"src": "8799:4:14"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_45fe4329685be5ecd250fd0e6a25aea0ea4d0e30fb6a73c118b95749e6d70d05__to_t_string_memory_ptr__fromStack_reversed",
												"nativeSrc": "8482:349:14",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "8633:9:14",
														"nodeType": "YulTypedName",
														"src": "8633:9:14",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "8647:4:14",
														"nodeType": "YulTypedName",
														"src": "8647:4:14",
														"type": ""
													}
												],
												"src": "8482:349:14"
											},
											{
												"body": {
													"nativeSrc": "9010:240:14",
													"nodeType": "YulBlock",
													"src": "9010:240:14",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "9027:9:14",
																		"nodeType": "YulIdentifier",
																		"src": "9027:9:14"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "9038:2:14",
																		"nodeType": "YulLiteral",
																		"src": "9038:2:14",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "9020:6:14",
																	"nodeType": "YulIdentifier",
																	"src": "9020:6:14"
																},
																"nativeSrc": "9020:21:14",
																"nodeType": "YulFunctionCall",
																"src": "9020:21:14"
															},
															"nativeSrc": "9020:21:14",
															"nodeType": "YulExpressionStatement",
															"src": "9020:21:14"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "9061:9:14",
																				"nodeType": "YulIdentifier",
																				"src": "9061:9:14"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "9072:2:14",
																				"nodeType": "YulLiteral",
																				"src": "9072:2:14",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "9057:3:14",
																			"nodeType": "YulIdentifier",
																			"src": "9057:3:14"
																		},
																		"nativeSrc": "9057:18:14",
																		"nodeType": "YulFunctionCall",
																		"src": "9057:18:14"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "9077:2:14",
																		"nodeType": "YulLiteral",
																		"src": "9077:2:14",
																		"type": "",
																		"value": "50"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "9050:6:14",
																	"nodeType": "YulIdentifier",
																	"src": "9050:6:14"
																},
																"nativeSrc": "9050:30:14",
																"nodeType": "YulFunctionCall",
																"src": "9050:30:14"
															},
															"nativeSrc": "9050:30:14",
															"nodeType": "YulExpressionStatement",
															"src": "9050:30:14"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "9100:9:14",
																				"nodeType": "YulIdentifier",
																				"src": "9100:9:14"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "9111:2:14",
																				"nodeType": "YulLiteral",
																				"src": "9111:2:14",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "9096:3:14",
																			"nodeType": "YulIdentifier",
																			"src": "9096:3:14"
																		},
																		"nativeSrc": "9096:18:14",
																		"nodeType": "YulFunctionCall",
																		"src": "9096:18:14"
																	},
																	{
																		"hexValue": "4552433732313a207472616e7366657220746f206e6f6e204552433732315265",
																		"kind": "string",
																		"nativeSrc": "9116:34:14",
																		"nodeType": "YulLiteral",
																		"src": "9116:34:14",
																		"type": "",
																		"value": "ERC721: transfer to non ERC721Re"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "9089:6:14",
																	"nodeType": "YulIdentifier",
																	"src": "9089:6:14"
																},
																"nativeSrc": "9089:62:14",
																"nodeType": "YulFunctionCall",
																"src": "9089:62:14"
															},
															"nativeSrc": "9089:62:14",
															"nodeType": "YulExpressionStatement",
															"src": "9089:62:14"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "9171:9:14",
																				"nodeType": "YulIdentifier",
																				"src": "9171:9:14"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "9182:2:14",
																				"nodeType": "YulLiteral",
																				"src": "9182:2:14",
																				"type": "",
																				"value": "96"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "9167:3:14",
																			"nodeType": "YulIdentifier",
																			"src": "9167:3:14"
																		},
																		"nativeSrc": "9167:18:14",
																		"nodeType": "YulFunctionCall",
																		"src": "9167:18:14"
																	},
																	{
																		"hexValue": "63656976657220696d706c656d656e746572",
																		"kind": "string",
																		"nativeSrc": "9187:20:14",
																		"nodeType": "YulLiteral",
																		"src": "9187:20:14",
																		"type": "",
																		"value": "ceiver implementer"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "9160:6:14",
																	"nodeType": "YulIdentifier",
																	"src": "9160:6:14"
																},
																"nativeSrc": "9160:48:14",
																"nodeType": "YulFunctionCall",
																"src": "9160:48:14"
															},
															"nativeSrc": "9160:48:14",
															"nodeType": "YulExpressionStatement",
															"src": "9160:48:14"
														},
														{
															"nativeSrc": "9217:27:14",
															"nodeType": "YulAssignment",
															"src": "9217:27:14",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "9229:9:14",
																		"nodeType": "YulIdentifier",
																		"src": "9229:9:14"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "9240:3:14",
																		"nodeType": "YulLiteral",
																		"src": "9240:3:14",
																		"type": "",
																		"value": "128"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "9225:3:14",
																	"nodeType": "YulIdentifier",
																	"src": "9225:3:14"
																},
																"nativeSrc": "9225:19:14",
																"nodeType": "YulFunctionCall",
																"src": "9225:19:14"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "9217:4:14",
																	"nodeType": "YulIdentifier",
																	"src": "9217:4:14"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_1e766a06da43a53d0f4c380e06e5a342e14d5af1bf8501996c844905530ca84e__to_t_string_memory_ptr__fromStack_reversed",
												"nativeSrc": "8836:414:14",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "8987:9:14",
														"nodeType": "YulTypedName",
														"src": "8987:9:14",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "9001:4:14",
														"nodeType": "YulTypedName",
														"src": "9001:4:14",
														"type": ""
													}
												],
												"src": "8836:414:14"
											},
											{
												"body": {
													"nativeSrc": "9287:95:14",
													"nodeType": "YulBlock",
													"src": "9287:95:14",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "9304:1:14",
																		"nodeType": "YulLiteral",
																		"src": "9304:1:14",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"arguments": [
																			{
																				"kind": "number",
																				"nativeSrc": "9311:3:14",
																				"nodeType": "YulLiteral",
																				"src": "9311:3:14",
																				"type": "",
																				"value": "224"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "9316:10:14",
																				"nodeType": "YulLiteral",
																				"src": "9316:10:14",
																				"type": "",
																				"value": "0x4e487b71"
																			}
																		],
																		"functionName": {
																			"name": "shl",
																			"nativeSrc": "9307:3:14",
																			"nodeType": "YulIdentifier",
																			"src": "9307:3:14"
																		},
																		"nativeSrc": "9307:20:14",
																		"nodeType": "YulFunctionCall",
																		"src": "9307:20:14"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "9297:6:14",
																	"nodeType": "YulIdentifier",
																	"src": "9297:6:14"
																},
																"nativeSrc": "9297:31:14",
																"nodeType": "YulFunctionCall",
																"src": "9297:31:14"
															},
															"nativeSrc": "9297:31:14",
															"nodeType": "YulExpressionStatement",
															"src": "9297:31:14"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "9344:1:14",
																		"nodeType": "YulLiteral",
																		"src": "9344:1:14",
																		"type": "",
																		"value": "4"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "9347:4:14",
																		"nodeType": "YulLiteral",
																		"src": "9347:4:14",
																		"type": "",
																		"value": "0x12"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "9337:6:14",
																	"nodeType": "YulIdentifier",
																	"src": "9337:6:14"
																},
																"nativeSrc": "9337:15:14",
																"nodeType": "YulFunctionCall",
																"src": "9337:15:14"
															},
															"nativeSrc": "9337:15:14",
															"nodeType": "YulExpressionStatement",
															"src": "9337:15:14"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "9368:1:14",
																		"nodeType": "YulLiteral",
																		"src": "9368:1:14",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "9371:4:14",
																		"nodeType": "YulLiteral",
																		"src": "9371:4:14",
																		"type": "",
																		"value": "0x24"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nativeSrc": "9361:6:14",
																	"nodeType": "YulIdentifier",
																	"src": "9361:6:14"
																},
																"nativeSrc": "9361:15:14",
																"nodeType": "YulFunctionCall",
																"src": "9361:15:14"
															},
															"nativeSrc": "9361:15:14",
															"nodeType": "YulExpressionStatement",
															"src": "9361:15:14"
														}
													]
												},
												"name": "panic_error_0x12",
												"nativeSrc": "9255:127:14",
												"nodeType": "YulFunctionDefinition",
												"src": "9255:127:14"
											},
											{
												"body": {
													"nativeSrc": "9419:95:14",
													"nodeType": "YulBlock",
													"src": "9419:95:14",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "9436:1:14",
																		"nodeType": "YulLiteral",
																		"src": "9436:1:14",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"arguments": [
																			{
																				"kind": "number",
																				"nativeSrc": "9443:3:14",
																				"nodeType": "YulLiteral",
																				"src": "9443:3:14",
																				"type": "",
																				"value": "224"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "9448:10:14",
																				"nodeType": "YulLiteral",
																				"src": "9448:10:14",
																				"type": "",
																				"value": "0x4e487b71"
																			}
																		],
																		"functionName": {
																			"name": "shl",
																			"nativeSrc": "9439:3:14",
																			"nodeType": "YulIdentifier",
																			"src": "9439:3:14"
																		},
																		"nativeSrc": "9439:20:14",
																		"nodeType": "YulFunctionCall",
																		"src": "9439:20:14"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "9429:6:14",
																	"nodeType": "YulIdentifier",
																	"src": "9429:6:14"
																},
																"nativeSrc": "9429:31:14",
																"nodeType": "YulFunctionCall",
																"src": "9429:31:14"
															},
															"nativeSrc": "9429:31:14",
															"nodeType": "YulExpressionStatement",
															"src": "9429:31:14"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "9476:1:14",
																		"nodeType": "YulLiteral",
																		"src": "9476:1:14",
																		"type": "",
																		"value": "4"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "9479:4:14",
																		"nodeType": "YulLiteral",
																		"src": "9479:4:14",
																		"type": "",
																		"value": "0x11"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "9469:6:14",
																	"nodeType": "YulIdentifier",
																	"src": "9469:6:14"
																},
																"nativeSrc": "9469:15:14",
																"nodeType": "YulFunctionCall",
																"src": "9469:15:14"
															},
															"nativeSrc": "9469:15:14",
															"nodeType": "YulExpressionStatement",
															"src": "9469:15:14"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "9500:1:14",
																		"nodeType": "YulLiteral",
																		"src": "9500:1:14",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "9503:4:14",
																		"nodeType": "YulLiteral",
																		"src": "9503:4:14",
																		"type": "",
																		"value": "0x24"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nativeSrc": "9493:6:14",
																	"nodeType": "YulIdentifier",
																	"src": "9493:6:14"
																},
																"nativeSrc": "9493:15:14",
																"nodeType": "YulFunctionCall",
																"src": "9493:15:14"
															},
															"nativeSrc": "9493:15:14",
															"nodeType": "YulExpressionStatement",
															"src": "9493:15:14"
														}
													]
												},
												"name": "panic_error_0x11",
												"nativeSrc": "9387:127:14",
												"nodeType": "YulFunctionDefinition",
												"src": "9387:127:14"
											},
											{
												"body": {
													"nativeSrc": "9568:79:14",
													"nodeType": "YulBlock",
													"src": "9568:79:14",
													"statements": [
														{
															"nativeSrc": "9578:17:14",
															"nodeType": "YulAssignment",
															"src": "9578:17:14",
															"value": {
																"arguments": [
																	{
																		"name": "x",
																		"nativeSrc": "9590:1:14",
																		"nodeType": "YulIdentifier",
																		"src": "9590:1:14"
																	},
																	{
																		"name": "y",
																		"nativeSrc": "9593:1:14",
																		"nodeType": "YulIdentifier",
																		"src": "9593:1:14"
																	}
																],
																"functionName": {
																	"name": "sub",
																	"nativeSrc": "9586:3:14",
																	"nodeType": "YulIdentifier",
																	"src": "9586:3:14"
																},
																"nativeSrc": "9586:9:14",
																"nodeType": "YulFunctionCall",
																"src": "9586:9:14"
															},
															"variableNames": [
																{
																	"name": "diff",
																	"nativeSrc": "9578:4:14",
																	"nodeType": "YulIdentifier",
																	"src": "9578:4:14"
																}
															]
														},
														{
															"body": {
																"nativeSrc": "9619:22:14",
																"nodeType": "YulBlock",
																"src": "9619:22:14",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "panic_error_0x11",
																				"nativeSrc": "9621:16:14",
																				"nodeType": "YulIdentifier",
																				"src": "9621:16:14"
																			},
																			"nativeSrc": "9621:18:14",
																			"nodeType": "YulFunctionCall",
																			"src": "9621:18:14"
																		},
																		"nativeSrc": "9621:18:14",
																		"nodeType": "YulExpressionStatement",
																		"src": "9621:18:14"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "diff",
																		"nativeSrc": "9610:4:14",
																		"nodeType": "YulIdentifier",
																		"src": "9610:4:14"
																	},
																	{
																		"name": "x",
																		"nativeSrc": "9616:1:14",
																		"nodeType": "YulIdentifier",
																		"src": "9616:1:14"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nativeSrc": "9607:2:14",
																	"nodeType": "YulIdentifier",
																	"src": "9607:2:14"
																},
																"nativeSrc": "9607:11:14",
																"nodeType": "YulFunctionCall",
																"src": "9607:11:14"
															},
															"nativeSrc": "9604:37:14",
															"nodeType": "YulIf",
															"src": "9604:37:14"
														}
													]
												},
												"name": "checked_sub_t_uint256",
												"nativeSrc": "9519:128:14",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "x",
														"nativeSrc": "9550:1:14",
														"nodeType": "YulTypedName",
														"src": "9550:1:14",
														"type": ""
													},
													{
														"name": "y",
														"nativeSrc": "9553:1:14",
														"nodeType": "YulTypedName",
														"src": "9553:1:14",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "diff",
														"nativeSrc": "9559:4:14",
														"nodeType": "YulTypedName",
														"src": "9559:4:14",
														"type": ""
													}
												],
												"src": "9519:128:14"
											},
											{
												"body": {
													"nativeSrc": "9700:77:14",
													"nodeType": "YulBlock",
													"src": "9700:77:14",
													"statements": [
														{
															"nativeSrc": "9710:16:14",
															"nodeType": "YulAssignment",
															"src": "9710:16:14",
															"value": {
																"arguments": [
																	{
																		"name": "x",
																		"nativeSrc": "9721:1:14",
																		"nodeType": "YulIdentifier",
																		"src": "9721:1:14"
																	},
																	{
																		"name": "y",
																		"nativeSrc": "9724:1:14",
																		"nodeType": "YulIdentifier",
																		"src": "9724:1:14"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "9717:3:14",
																	"nodeType": "YulIdentifier",
																	"src": "9717:3:14"
																},
																"nativeSrc": "9717:9:14",
																"nodeType": "YulFunctionCall",
																"src": "9717:9:14"
															},
															"variableNames": [
																{
																	"name": "sum",
																	"nativeSrc": "9710:3:14",
																	"nodeType": "YulIdentifier",
																	"src": "9710:3:14"
																}
															]
														},
														{
															"body": {
																"nativeSrc": "9749:22:14",
																"nodeType": "YulBlock",
																"src": "9749:22:14",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "panic_error_0x11",
																				"nativeSrc": "9751:16:14",
																				"nodeType": "YulIdentifier",
																				"src": "9751:16:14"
																			},
																			"nativeSrc": "9751:18:14",
																			"nodeType": "YulFunctionCall",
																			"src": "9751:18:14"
																		},
																		"nativeSrc": "9751:18:14",
																		"nodeType": "YulExpressionStatement",
																		"src": "9751:18:14"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "x",
																		"nativeSrc": "9741:1:14",
																		"nodeType": "YulIdentifier",
																		"src": "9741:1:14"
																	},
																	{
																		"name": "sum",
																		"nativeSrc": "9744:3:14",
																		"nodeType": "YulIdentifier",
																		"src": "9744:3:14"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nativeSrc": "9738:2:14",
																	"nodeType": "YulIdentifier",
																	"src": "9738:2:14"
																},
																"nativeSrc": "9738:10:14",
																"nodeType": "YulFunctionCall",
																"src": "9738:10:14"
															},
															"nativeSrc": "9735:36:14",
															"nodeType": "YulIf",
															"src": "9735:36:14"
														}
													]
												},
												"name": "checked_add_t_uint256",
												"nativeSrc": "9652:125:14",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "x",
														"nativeSrc": "9683:1:14",
														"nodeType": "YulTypedName",
														"src": "9683:1:14",
														"type": ""
													},
													{
														"name": "y",
														"nativeSrc": "9686:1:14",
														"nodeType": "YulTypedName",
														"src": "9686:1:14",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "sum",
														"nativeSrc": "9692:3:14",
														"nodeType": "YulTypedName",
														"src": "9692:3:14",
														"type": ""
													}
												],
												"src": "9652:125:14"
											},
											{
												"body": {
													"nativeSrc": "9985:286:14",
													"nodeType": "YulBlock",
													"src": "9985:286:14",
													"statements": [
														{
															"nativeSrc": "9995:29:14",
															"nodeType": "YulVariableDeclaration",
															"src": "9995:29:14",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"kind": "number",
																				"nativeSrc": "10013:3:14",
																				"nodeType": "YulLiteral",
																				"src": "10013:3:14",
																				"type": "",
																				"value": "160"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "10018:1:14",
																				"nodeType": "YulLiteral",
																				"src": "10018:1:14",
																				"type": "",
																				"value": "1"
																			}
																		],
																		"functionName": {
																			"name": "shl",
																			"nativeSrc": "10009:3:14",
																			"nodeType": "YulIdentifier",
																			"src": "10009:3:14"
																		},
																		"nativeSrc": "10009:11:14",
																		"nodeType": "YulFunctionCall",
																		"src": "10009:11:14"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "10022:1:14",
																		"nodeType": "YulLiteral",
																		"src": "10022:1:14",
																		"type": "",
																		"value": "1"
																	}
																],
																"functionName": {
																	"name": "sub",
																	"nativeSrc": "10005:3:14",
																	"nodeType": "YulIdentifier",
																	"src": "10005:3:14"
																},
																"nativeSrc": "10005:19:14",
																"nodeType": "YulFunctionCall",
																"src": "10005:19:14"
															},
															"variables": [
																{
																	"name": "_1",
																	"nativeSrc": "9999:2:14",
																	"nodeType": "YulTypedName",
																	"src": "9999:2:14",
																	"type": ""
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "10040:9:14",
																		"nodeType": "YulIdentifier",
																		"src": "10040:9:14"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value0",
																				"nativeSrc": "10055:6:14",
																				"nodeType": "YulIdentifier",
																				"src": "10055:6:14"
																			},
																			{
																				"name": "_1",
																				"nativeSrc": "10063:2:14",
																				"nodeType": "YulIdentifier",
																				"src": "10063:2:14"
																			}
																		],
																		"functionName": {
																			"name": "and",
																			"nativeSrc": "10051:3:14",
																			"nodeType": "YulIdentifier",
																			"src": "10051:3:14"
																		},
																		"nativeSrc": "10051:15:14",
																		"nodeType": "YulFunctionCall",
																		"src": "10051:15:14"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "10033:6:14",
																	"nodeType": "YulIdentifier",
																	"src": "10033:6:14"
																},
																"nativeSrc": "10033:34:14",
																"nodeType": "YulFunctionCall",
																"src": "10033:34:14"
															},
															"nativeSrc": "10033:34:14",
															"nodeType": "YulExpressionStatement",
															"src": "10033:34:14"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "10087:9:14",
																				"nodeType": "YulIdentifier",
																				"src": "10087:9:14"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "10098:2:14",
																				"nodeType": "YulLiteral",
																				"src": "10098:2:14",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "10083:3:14",
																			"nodeType": "YulIdentifier",
																			"src": "10083:3:14"
																		},
																		"nativeSrc": "10083:18:14",
																		"nodeType": "YulFunctionCall",
																		"src": "10083:18:14"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value1",
																				"nativeSrc": "10107:6:14",
																				"nodeType": "YulIdentifier",
																				"src": "10107:6:14"
																			},
																			{
																				"name": "_1",
																				"nativeSrc": "10115:2:14",
																				"nodeType": "YulIdentifier",
																				"src": "10115:2:14"
																			}
																		],
																		"functionName": {
																			"name": "and",
																			"nativeSrc": "10103:3:14",
																			"nodeType": "YulIdentifier",
																			"src": "10103:3:14"
																		},
																		"nativeSrc": "10103:15:14",
																		"nodeType": "YulFunctionCall",
																		"src": "10103:15:14"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "10076:6:14",
																	"nodeType": "YulIdentifier",
																	"src": "10076:6:14"
																},
																"nativeSrc": "10076:43:14",
																"nodeType": "YulFunctionCall",
																"src": "10076:43:14"
															},
															"nativeSrc": "10076:43:14",
															"nodeType": "YulExpressionStatement",
															"src": "10076:43:14"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "10139:9:14",
																				"nodeType": "YulIdentifier",
																				"src": "10139:9:14"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "10150:2:14",
																				"nodeType": "YulLiteral",
																				"src": "10150:2:14",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "10135:3:14",
																			"nodeType": "YulIdentifier",
																			"src": "10135:3:14"
																		},
																		"nativeSrc": "10135:18:14",
																		"nodeType": "YulFunctionCall",
																		"src": "10135:18:14"
																	},
																	{
																		"name": "value2",
																		"nativeSrc": "10155:6:14",
																		"nodeType": "YulIdentifier",
																		"src": "10155:6:14"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "10128:6:14",
																	"nodeType": "YulIdentifier",
																	"src": "10128:6:14"
																},
																"nativeSrc": "10128:34:14",
																"nodeType": "YulFunctionCall",
																"src": "10128:34:14"
															},
															"nativeSrc": "10128:34:14",
															"nodeType": "YulExpressionStatement",
															"src": "10128:34:14"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "10182:9:14",
																				"nodeType": "YulIdentifier",
																				"src": "10182:9:14"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "10193:2:14",
																				"nodeType": "YulLiteral",
																				"src": "10193:2:14",
																				"type": "",
																				"value": "96"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "10178:3:14",
																			"nodeType": "YulIdentifier",
																			"src": "10178:3:14"
																		},
																		"nativeSrc": "10178:18:14",
																		"nodeType": "YulFunctionCall",
																		"src": "10178:18:14"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "10198:3:14",
																		"nodeType": "YulLiteral",
																		"src": "10198:3:14",
																		"type": "",
																		"value": "128"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "10171:6:14",
																	"nodeType": "YulIdentifier",
																	"src": "10171:6:14"
																},
																"nativeSrc": "10171:31:14",
																"nodeType": "YulFunctionCall",
																"src": "10171:31:14"
															},
															"nativeSrc": "10171:31:14",
															"nodeType": "YulExpressionStatement",
															"src": "10171:31:14"
														},
														{
															"nativeSrc": "10211:54:14",
															"nodeType": "YulAssignment",
															"src": "10211:54:14",
															"value": {
																"arguments": [
																	{
																		"name": "value3",
																		"nativeSrc": "10237:6:14",
																		"nodeType": "YulIdentifier",
																		"src": "10237:6:14"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "10249:9:14",
																				"nodeType": "YulIdentifier",
																				"src": "10249:9:14"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "10260:3:14",
																				"nodeType": "YulLiteral",
																				"src": "10260:3:14",
																				"type": "",
																				"value": "128"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "10245:3:14",
																			"nodeType": "YulIdentifier",
																			"src": "10245:3:14"
																		},
																		"nativeSrc": "10245:19:14",
																		"nodeType": "YulFunctionCall",
																		"src": "10245:19:14"
																	}
																],
																"functionName": {
																	"name": "abi_encode_string",
																	"nativeSrc": "10219:17:14",
																	"nodeType": "YulIdentifier",
																	"src": "10219:17:14"
																},
																"nativeSrc": "10219:46:14",
																"nodeType": "YulFunctionCall",
																"src": "10219:46:14"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "10211:4:14",
																	"nodeType": "YulIdentifier",
																	"src": "10211:4:14"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_address_t_address_t_uint256_t_bytes_memory_ptr__to_t_address_t_address_t_uint256_t_bytes_memory_ptr__fromStack_reversed",
												"nativeSrc": "9782:489:14",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "9930:9:14",
														"nodeType": "YulTypedName",
														"src": "9930:9:14",
														"type": ""
													},
													{
														"name": "value3",
														"nativeSrc": "9941:6:14",
														"nodeType": "YulTypedName",
														"src": "9941:6:14",
														"type": ""
													},
													{
														"name": "value2",
														"nativeSrc": "9949:6:14",
														"nodeType": "YulTypedName",
														"src": "9949:6:14",
														"type": ""
													},
													{
														"name": "value1",
														"nativeSrc": "9957:6:14",
														"nodeType": "YulTypedName",
														"src": "9957:6:14",
														"type": ""
													},
													{
														"name": "value0",
														"nativeSrc": "9965:6:14",
														"nodeType": "YulTypedName",
														"src": "9965:6:14",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "9976:4:14",
														"nodeType": "YulTypedName",
														"src": "9976:4:14",
														"type": ""
													}
												],
												"src": "9782:489:14"
											},
											{
												"body": {
													"nativeSrc": "10356:169:14",
													"nodeType": "YulBlock",
													"src": "10356:169:14",
													"statements": [
														{
															"body": {
																"nativeSrc": "10402:16:14",
																"nodeType": "YulBlock",
																"src": "10402:16:14",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nativeSrc": "10411:1:14",
																					"nodeType": "YulLiteral",
																					"src": "10411:1:14",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "10414:1:14",
																					"nodeType": "YulLiteral",
																					"src": "10414:1:14",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nativeSrc": "10404:6:14",
																				"nodeType": "YulIdentifier",
																				"src": "10404:6:14"
																			},
																			"nativeSrc": "10404:12:14",
																			"nodeType": "YulFunctionCall",
																			"src": "10404:12:14"
																		},
																		"nativeSrc": "10404:12:14",
																		"nodeType": "YulExpressionStatement",
																		"src": "10404:12:14"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nativeSrc": "10377:7:14",
																				"nodeType": "YulIdentifier",
																				"src": "10377:7:14"
																			},
																			{
																				"name": "headStart",
																				"nativeSrc": "10386:9:14",
																				"nodeType": "YulIdentifier",
																				"src": "10386:9:14"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "10373:3:14",
																			"nodeType": "YulIdentifier",
																			"src": "10373:3:14"
																		},
																		"nativeSrc": "10373:23:14",
																		"nodeType": "YulFunctionCall",
																		"src": "10373:23:14"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "10398:2:14",
																		"nodeType": "YulLiteral",
																		"src": "10398:2:14",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nativeSrc": "10369:3:14",
																	"nodeType": "YulIdentifier",
																	"src": "10369:3:14"
																},
																"nativeSrc": "10369:32:14",
																"nodeType": "YulFunctionCall",
																"src": "10369:32:14"
															},
															"nativeSrc": "10366:52:14",
															"nodeType": "YulIf",
															"src": "10366:52:14"
														},
														{
															"nativeSrc": "10427:29:14",
															"nodeType": "YulVariableDeclaration",
															"src": "10427:29:14",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "10446:9:14",
																		"nodeType": "YulIdentifier",
																		"src": "10446:9:14"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nativeSrc": "10440:5:14",
																	"nodeType": "YulIdentifier",
																	"src": "10440:5:14"
																},
																"nativeSrc": "10440:16:14",
																"nodeType": "YulFunctionCall",
																"src": "10440:16:14"
															},
															"variables": [
																{
																	"name": "value",
																	"nativeSrc": "10431:5:14",
																	"nodeType": "YulTypedName",
																	"src": "10431:5:14",
																	"type": ""
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "10489:5:14",
																		"nodeType": "YulIdentifier",
																		"src": "10489:5:14"
																	}
																],
																"functionName": {
																	"name": "validator_revert_bytes4",
																	"nativeSrc": "10465:23:14",
																	"nodeType": "YulIdentifier",
																	"src": "10465:23:14"
																},
																"nativeSrc": "10465:30:14",
																"nodeType": "YulFunctionCall",
																"src": "10465:30:14"
															},
															"nativeSrc": "10465:30:14",
															"nodeType": "YulExpressionStatement",
															"src": "10465:30:14"
														},
														{
															"nativeSrc": "10504:15:14",
															"nodeType": "YulAssignment",
															"src": "10504:15:14",
															"value": {
																"name": "value",
																"nativeSrc": "10514:5:14",
																"nodeType": "YulIdentifier",
																"src": "10514:5:14"
															},
															"variableNames": [
																{
																	"name": "value0",
																	"nativeSrc": "10504:6:14",
																	"nodeType": "YulIdentifier",
																	"src": "10504:6:14"
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_bytes4_fromMemory",
												"nativeSrc": "10276:249:14",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "10322:9:14",
														"nodeType": "YulTypedName",
														"src": "10322:9:14",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nativeSrc": "10333:7:14",
														"nodeType": "YulTypedName",
														"src": "10333:7:14",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nativeSrc": "10345:6:14",
														"nodeType": "YulTypedName",
														"src": "10345:6:14",
														"type": ""
													}
												],
												"src": "10276:249:14"
											}
										]
									},
									"contents": "{\n    { }\n    function validator_revert_bytes4(value)\n    {\n        if iszero(eq(value, and(value, shl(224, 0xffffffff)))) { revert(0, 0) }\n    }\n    function abi_decode_tuple_t_bytes4(headStart, dataEnd) -> value0\n    {\n        if slt(sub(dataEnd, headStart), 32) { revert(0, 0) }\n        let value := calldataload(headStart)\n        validator_revert_bytes4(value)\n        value0 := value\n    }\n    function abi_encode_tuple_t_bool__to_t_bool__fromStack_reversed(headStart, value0) -> tail\n    {\n        tail := add(headStart, 32)\n        mstore(headStart, iszero(iszero(value0)))\n    }\n    function copy_memory_to_memory_with_cleanup(src, dst, length)\n    {\n        let i := 0\n        for { } lt(i, length) { i := add(i, 32) }\n        {\n            mstore(add(dst, i), mload(add(src, i)))\n        }\n        mstore(add(dst, length), 0)\n    }\n    function abi_encode_string(value, pos) -> end\n    {\n        let length := mload(value)\n        mstore(pos, length)\n        copy_memory_to_memory_with_cleanup(add(value, 0x20), add(pos, 0x20), length)\n        end := add(add(pos, and(add(length, 31), not(31))), 0x20)\n    }\n    function abi_encode_tuple_t_string_memory_ptr__to_t_string_memory_ptr__fromStack_reversed(headStart, value0) -> tail\n    {\n        mstore(headStart, 32)\n        tail := abi_encode_string(value0, add(headStart, 32))\n    }\n    function abi_decode_tuple_t_uint256(headStart, dataEnd) -> value0\n    {\n        if slt(sub(dataEnd, headStart), 32) { revert(0, 0) }\n        value0 := calldataload(headStart)\n    }\n    function abi_encode_tuple_t_address__to_t_address__fromStack_reversed(headStart, value0) -> tail\n    {\n        tail := add(headStart, 32)\n        mstore(headStart, and(value0, sub(shl(160, 1), 1)))\n    }\n    function abi_decode_address(offset) -> value\n    {\n        value := calldataload(offset)\n        if iszero(eq(value, and(value, sub(shl(160, 1), 1)))) { revert(0, 0) }\n    }\n    function abi_decode_tuple_t_addresst_uint256(headStart, dataEnd) -> value0, value1\n    {\n        if slt(sub(dataEnd, headStart), 64) { revert(0, 0) }\n        value0 := abi_decode_address(headStart)\n        value1 := calldataload(add(headStart, 32))\n    }\n    function abi_decode_tuple_t_addresst_addresst_uint256(headStart, dataEnd) -> value0, value1, value2\n    {\n        if slt(sub(dataEnd, headStart), 96) { revert(0, 0) }\n        value0 := abi_decode_address(headStart)\n        value1 := abi_decode_address(add(headStart, 32))\n        value2 := calldataload(add(headStart, 64))\n    }\n    function abi_decode_tuple_t_address(headStart, dataEnd) -> value0\n    {\n        if slt(sub(dataEnd, headStart), 32) { revert(0, 0) }\n        value0 := abi_decode_address(headStart)\n    }\n    function abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed(headStart, value0) -> tail\n    {\n        tail := add(headStart, 32)\n        mstore(headStart, value0)\n    }\n    function abi_decode_tuple_t_addresst_bool(headStart, dataEnd) -> value0, value1\n    {\n        if slt(sub(dataEnd, headStart), 64) { revert(0, 0) }\n        value0 := abi_decode_address(headStart)\n        let value := calldataload(add(headStart, 32))\n        if iszero(eq(value, iszero(iszero(value)))) { revert(0, 0) }\n        value1 := value\n    }\n    function panic_error_0x41()\n    {\n        mstore(0, shl(224, 0x4e487b71))\n        mstore(4, 0x41)\n        revert(0, 0x24)\n    }\n    function abi_decode_tuple_t_addresst_addresst_uint256t_bytes_memory_ptr(headStart, dataEnd) -> value0, value1, value2, value3\n    {\n        if slt(sub(dataEnd, headStart), 128) { revert(0, 0) }\n        value0 := abi_decode_address(headStart)\n        value1 := abi_decode_address(add(headStart, 32))\n        value2 := calldataload(add(headStart, 64))\n        let offset := calldataload(add(headStart, 96))\n        let _1 := 0xffffffffffffffff\n        if gt(offset, _1) { revert(0, 0) }\n        let _2 := add(headStart, offset)\n        if iszero(slt(add(_2, 0x1f), dataEnd)) { revert(0, 0) }\n        let _3 := calldataload(_2)\n        if gt(_3, _1) { panic_error_0x41() }\n        let _4 := not(31)\n        let memPtr := mload(64)\n        let newFreePtr := add(memPtr, and(add(and(add(_3, 0x1f), _4), 63), _4))\n        if or(gt(newFreePtr, _1), lt(newFreePtr, memPtr)) { panic_error_0x41() }\n        mstore(64, newFreePtr)\n        mstore(memPtr, _3)\n        if gt(add(add(_2, _3), 32), dataEnd) { revert(0, 0) }\n        calldatacopy(add(memPtr, 32), add(_2, 32), _3)\n        mstore(add(add(memPtr, _3), 32), 0)\n        value3 := memPtr\n    }\n    function abi_decode_tuple_t_addresst_address(headStart, dataEnd) -> value0, value1\n    {\n        if slt(sub(dataEnd, headStart), 64) { revert(0, 0) }\n        value0 := abi_decode_address(headStart)\n        value1 := abi_decode_address(add(headStart, 32))\n    }\n    function extract_byte_array_length(data) -> length\n    {\n        length := shr(1, data)\n        let outOfPlaceEncoding := and(data, 1)\n        if iszero(outOfPlaceEncoding) { length := and(length, 0x7f) }\n        if eq(outOfPlaceEncoding, lt(length, 32))\n        {\n            mstore(0, shl(224, 0x4e487b71))\n            mstore(4, 0x22)\n            revert(0, 0x24)\n        }\n    }\n    function abi_encode_tuple_t_stringliteral_b51b4875eede07862961e8f9365c6749f5fe55c6ee5d7a9e42b6912ad0b15942__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 33)\n        mstore(add(headStart, 64), \"ERC721: approval to current owne\")\n        mstore(add(headStart, 96), \"r\")\n        tail := add(headStart, 128)\n    }\n    function abi_encode_tuple_t_stringliteral_c6e14a63ffb144eeef7cce6988e5dce07c60a7e0a7b1ef25dbe18c61483e0a83__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 61)\n        mstore(add(headStart, 64), \"ERC721: approve caller is not to\")\n        mstore(add(headStart, 96), \"ken owner or approved for all\")\n        tail := add(headStart, 128)\n    }\n    function abi_encode_tuple_t_stringliteral_12a8e5623d251e191fe4a291d9a59bcc01a4db7a1f5c20fc8de44358c18308af__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 45)\n        mstore(add(headStart, 64), \"ERC721: caller is not token owne\")\n        mstore(add(headStart, 96), \"r or approved\")\n        tail := add(headStart, 128)\n    }\n    function abi_encode_tuple_t_stringliteral_b08d2b0fec7cc108ab049809a8beb42779d969a49299d0c317c907d9db22974f__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 24)\n        mstore(add(headStart, 64), \"ERC721: invalid token ID\")\n        tail := add(headStart, 96)\n    }\n    function abi_encode_tuple_t_stringliteral_6d05c90094f31cfeb8f0eb86f0a513af3f7f8992991fbde41b08aa7960677159__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 41)\n        mstore(add(headStart, 64), \"ERC721: address zero is not a va\")\n        mstore(add(headStart, 96), \"lid owner\")\n        tail := add(headStart, 128)\n    }\n    function abi_encode_tuple_packed_t_string_memory_ptr_t_string_memory_ptr__to_t_string_memory_ptr_t_string_memory_ptr__nonPadded_inplace_fromStack_reversed(pos, value1, value0) -> end\n    {\n        let length := mload(value0)\n        copy_memory_to_memory_with_cleanup(add(value0, 0x20), pos, length)\n        let end_1 := add(pos, length)\n        let length_1 := mload(value1)\n        copy_memory_to_memory_with_cleanup(add(value1, 0x20), end_1, length_1)\n        end := add(end_1, length_1)\n    }\n    function abi_encode_tuple_t_stringliteral_277f8ee9d5b4fc3c4149386f24de0fc1bbc63a8210e2197bfd1c0376a2ac5f48__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 37)\n        mstore(add(headStart, 64), \"ERC721: transfer from incorrect \")\n        mstore(add(headStart, 96), \"owner\")\n        tail := add(headStart, 128)\n    }\n    function abi_encode_tuple_t_stringliteral_455fea98ea03c32d7dd1a6f1426917d80529bf47b3ccbde74e7206e889e709f4__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 36)\n        mstore(add(headStart, 64), \"ERC721: transfer to the zero add\")\n        mstore(add(headStart, 96), \"ress\")\n        tail := add(headStart, 128)\n    }\n    function abi_encode_tuple_t_stringliteral_45fe4329685be5ecd250fd0e6a25aea0ea4d0e30fb6a73c118b95749e6d70d05__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 25)\n        mstore(add(headStart, 64), \"ERC721: approve to caller\")\n        tail := add(headStart, 96)\n    }\n    function abi_encode_tuple_t_stringliteral_1e766a06da43a53d0f4c380e06e5a342e14d5af1bf8501996c844905530ca84e__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 50)\n        mstore(add(headStart, 64), \"ERC721: transfer to non ERC721Re\")\n        mstore(add(headStart, 96), \"ceiver implementer\")\n        tail := add(headStart, 128)\n    }\n    function panic_error_0x12()\n    {\n        mstore(0, shl(224, 0x4e487b71))\n        mstore(4, 0x12)\n        revert(0, 0x24)\n    }\n    function panic_error_0x11()\n    {\n        mstore(0, shl(224, 0x4e487b71))\n        mstore(4, 0x11)\n        revert(0, 0x24)\n    }\n    function checked_sub_t_uint256(x, y) -> diff\n    {\n        diff := sub(x, y)\n        if gt(diff, x) { panic_error_0x11() }\n    }\n    function checked_add_t_uint256(x, y) -> sum\n    {\n        sum := add(x, y)\n        if gt(x, sum) { panic_error_0x11() }\n    }\n    function abi_encode_tuple_t_address_t_address_t_uint256_t_bytes_memory_ptr__to_t_address_t_address_t_uint256_t_bytes_memory_ptr__fromStack_reversed(headStart, value3, value2, value1, value0) -> tail\n    {\n        let _1 := sub(shl(160, 1), 1)\n        mstore(headStart, and(value0, _1))\n        mstore(add(headStart, 32), and(value1, _1))\n        mstore(add(headStart, 64), value2)\n        mstore(add(headStart, 96), 128)\n        tail := abi_encode_string(value3, add(headStart, 128))\n    }\n    function abi_decode_tuple_t_bytes4_fromMemory(headStart, dataEnd) -> value0\n    {\n        if slt(sub(dataEnd, headStart), 32) { revert(0, 0) }\n        let value := mload(headStart)\n        validator_revert_bytes4(value)\n        value0 := value\n    }\n}",
									"id": 14,
									"language": "Yul",
									"name": "#utility.yul"
								}
							],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH2 0xF JUMPI PUSH0 DUP1 REVERT JUMPDEST POP PUSH1 0x4 CALLDATASIZE LT PUSH2 0xCB JUMPI PUSH0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0x6352211E GT PUSH2 0x88 JUMPI DUP1 PUSH4 0xA22CB465 GT PUSH2 0x63 JUMPI DUP1 PUSH4 0xA22CB465 EQ PUSH2 0x1AE JUMPI DUP1 PUSH4 0xB88D4FDE EQ PUSH2 0x1C1 JUMPI DUP1 PUSH4 0xC87B56DD EQ PUSH2 0x1D4 JUMPI DUP1 PUSH4 0xE985E9C5 EQ PUSH2 0x1E7 JUMPI PUSH0 DUP1 REVERT JUMPDEST DUP1 PUSH4 0x6352211E EQ PUSH2 0x172 JUMPI DUP1 PUSH4 0x70A08231 EQ PUSH2 0x185 JUMPI DUP1 PUSH4 0x95D89B41 EQ PUSH2 0x1A6 JUMPI PUSH0 DUP1 REVERT JUMPDEST DUP1 PUSH4 0x1FFC9A7 EQ PUSH2 0xCF JUMPI DUP1 PUSH4 0x6FDDE03 EQ PUSH2 0xF7 JUMPI DUP1 PUSH4 0x81812FC EQ PUSH2 0x10C JUMPI DUP1 PUSH4 0x95EA7B3 EQ PUSH2 0x137 JUMPI DUP1 PUSH4 0x23B872DD EQ PUSH2 0x14C JUMPI DUP1 PUSH4 0x42842E0E EQ PUSH2 0x15F JUMPI JUMPDEST PUSH0 DUP1 REVERT JUMPDEST PUSH2 0xE2 PUSH2 0xDD CALLDATASIZE PUSH1 0x4 PUSH2 0xCD3 JUMP JUMPDEST PUSH2 0x1FA JUMP JUMPDEST PUSH1 0x40 MLOAD SWAP1 ISZERO ISZERO DUP2 MSTORE PUSH1 0x20 ADD JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0xFF PUSH2 0x24B JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0xEE SWAP2 SWAP1 PUSH2 0xD3B JUMP JUMPDEST PUSH2 0x11F PUSH2 0x11A CALLDATASIZE PUSH1 0x4 PUSH2 0xD4D JUMP JUMPDEST PUSH2 0x2DA JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 SWAP2 AND DUP2 MSTORE PUSH1 0x20 ADD PUSH2 0xEE JUMP JUMPDEST PUSH2 0x14A PUSH2 0x145 CALLDATASIZE PUSH1 0x4 PUSH2 0xD7F JUMP JUMPDEST PUSH2 0x2FF JUMP JUMPDEST STOP JUMPDEST PUSH2 0x14A PUSH2 0x15A CALLDATASIZE PUSH1 0x4 PUSH2 0xDA7 JUMP JUMPDEST PUSH2 0x418 JUMP JUMPDEST PUSH2 0x14A PUSH2 0x16D CALLDATASIZE PUSH1 0x4 PUSH2 0xDA7 JUMP JUMPDEST PUSH2 0x449 JUMP JUMPDEST PUSH2 0x11F PUSH2 0x180 CALLDATASIZE PUSH1 0x4 PUSH2 0xD4D JUMP JUMPDEST PUSH2 0x463 JUMP JUMPDEST PUSH2 0x198 PUSH2 0x193 CALLDATASIZE PUSH1 0x4 PUSH2 0xDE0 JUMP JUMPDEST PUSH2 0x4C2 JUMP JUMPDEST PUSH1 0x40 MLOAD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH2 0xEE JUMP JUMPDEST PUSH2 0xFF PUSH2 0x546 JUMP JUMPDEST PUSH2 0x14A PUSH2 0x1BC CALLDATASIZE PUSH1 0x4 PUSH2 0xDF9 JUMP JUMPDEST PUSH2 0x555 JUMP JUMPDEST PUSH2 0x14A PUSH2 0x1CF CALLDATASIZE PUSH1 0x4 PUSH2 0xE46 JUMP JUMPDEST PUSH2 0x564 JUMP JUMPDEST PUSH2 0xFF PUSH2 0x1E2 CALLDATASIZE PUSH1 0x4 PUSH2 0xD4D JUMP JUMPDEST PUSH2 0x59C JUMP JUMPDEST PUSH2 0xE2 PUSH2 0x1F5 CALLDATASIZE PUSH1 0x4 PUSH2 0xF1B JUMP JUMPDEST PUSH2 0x60C JUMP JUMPDEST PUSH0 PUSH1 0x1 PUSH1 0x1 PUSH1 0xE0 SHL SUB NOT DUP3 AND PUSH4 0x80AC58CD PUSH1 0xE0 SHL EQ DUP1 PUSH2 0x22A JUMPI POP PUSH1 0x1 PUSH1 0x1 PUSH1 0xE0 SHL SUB NOT DUP3 AND PUSH4 0x5B5E139F PUSH1 0xE0 SHL EQ JUMPDEST DUP1 PUSH2 0x245 JUMPI POP PUSH4 0x1FFC9A7 PUSH1 0xE0 SHL PUSH1 0x1 PUSH1 0x1 PUSH1 0xE0 SHL SUB NOT DUP4 AND EQ JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x60 PUSH0 DUP1 SLOAD PUSH2 0x259 SWAP1 PUSH2 0xF4C JUMP JUMPDEST DUP1 PUSH1 0x1F ADD PUSH1 0x20 DUP1 SWAP2 DIV MUL PUSH1 0x20 ADD PUSH1 0x40 MLOAD SWAP1 DUP2 ADD PUSH1 0x40 MSTORE DUP1 SWAP3 SWAP2 SWAP1 DUP2 DUP2 MSTORE PUSH1 0x20 ADD DUP3 DUP1 SLOAD PUSH2 0x285 SWAP1 PUSH2 0xF4C JUMP JUMPDEST DUP1 ISZERO PUSH2 0x2D0 JUMPI DUP1 PUSH1 0x1F LT PUSH2 0x2A7 JUMPI PUSH2 0x100 DUP1 DUP4 SLOAD DIV MUL DUP4 MSTORE SWAP2 PUSH1 0x20 ADD SWAP2 PUSH2 0x2D0 JUMP JUMPDEST DUP3 ADD SWAP2 SWAP1 PUSH0 MSTORE PUSH1 0x20 PUSH0 KECCAK256 SWAP1 JUMPDEST DUP2 SLOAD DUP2 MSTORE SWAP1 PUSH1 0x1 ADD SWAP1 PUSH1 0x20 ADD DUP1 DUP4 GT PUSH2 0x2B3 JUMPI DUP3 SWAP1 SUB PUSH1 0x1F AND DUP3 ADD SWAP2 JUMPDEST POP POP POP POP POP SWAP1 POP SWAP1 JUMP JUMPDEST PUSH0 PUSH2 0x2E4 DUP3 PUSH2 0x639 JUMP JUMPDEST POP PUSH0 SWAP1 DUP2 MSTORE PUSH1 0x4 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND SWAP1 JUMP JUMPDEST PUSH0 PUSH2 0x309 DUP3 PUSH2 0x463 JUMP JUMPDEST SWAP1 POP DUP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP4 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND SUB PUSH2 0x37B JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x21 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x4552433732313A20617070726F76616C20746F2063757272656E74206F776E65 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x39 PUSH1 0xF9 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST CALLER PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 AND EQ DUP1 PUSH2 0x397 JUMPI POP PUSH2 0x397 DUP2 CALLER PUSH2 0x60C JUMP JUMPDEST PUSH2 0x409 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x3D PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x4552433732313A20617070726F76652063616C6C6572206973206E6F7420746F PUSH1 0x44 DUP3 ADD MSTORE PUSH32 0x6B656E206F776E6572206F7220617070726F76656420666F7220616C6C000000 PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0x372 JUMP JUMPDEST PUSH2 0x413 DUP4 DUP4 PUSH2 0x69A JUMP JUMPDEST POP POP POP JUMP JUMPDEST PUSH2 0x422 CALLER DUP3 PUSH2 0x707 JUMP JUMPDEST PUSH2 0x43E JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x372 SWAP1 PUSH2 0xF84 JUMP JUMPDEST PUSH2 0x413 DUP4 DUP4 DUP4 PUSH2 0x765 JUMP JUMPDEST PUSH2 0x413 DUP4 DUP4 DUP4 PUSH1 0x40 MLOAD DUP1 PUSH1 0x20 ADD PUSH1 0x40 MSTORE DUP1 PUSH0 DUP2 MSTORE POP PUSH2 0x564 JUMP JUMPDEST PUSH0 DUP2 DUP2 MSTORE PUSH1 0x2 PUSH1 0x20 MSTORE PUSH1 0x40 DUP2 KECCAK256 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP1 PUSH2 0x245 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x18 PUSH1 0x24 DUP3 ADD MSTORE PUSH24 0x115490CDCC8C4E881A5B9D985B1A59081D1BDAD95B881251 PUSH1 0x42 SHL PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x372 JUMP JUMPDEST PUSH0 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 AND PUSH2 0x52B JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x29 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x4552433732313A2061646472657373207A65726F206973206E6F742061207661 PUSH1 0x44 DUP3 ADD MSTORE PUSH9 0x3634B21037BBB732B9 PUSH1 0xB9 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0x372 JUMP JUMPDEST POP PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH0 SWAP1 DUP2 MSTORE PUSH1 0x3 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD SWAP1 JUMP JUMPDEST PUSH1 0x60 PUSH1 0x1 DUP1 SLOAD PUSH2 0x259 SWAP1 PUSH2 0xF4C JUMP JUMPDEST PUSH2 0x560 CALLER DUP4 DUP4 PUSH2 0x8D4 JUMP JUMPDEST POP POP JUMP JUMPDEST PUSH2 0x56E CALLER DUP4 PUSH2 0x707 JUMP JUMPDEST PUSH2 0x58A JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x372 SWAP1 PUSH2 0xF84 JUMP JUMPDEST PUSH2 0x596 DUP5 DUP5 DUP5 DUP5 PUSH2 0x9A1 JUMP JUMPDEST POP POP POP POP JUMP JUMPDEST PUSH1 0x60 PUSH2 0x5A7 DUP3 PUSH2 0x639 JUMP JUMPDEST PUSH0 PUSH2 0x5BC PUSH1 0x40 DUP1 MLOAD PUSH1 0x20 DUP2 ADD SWAP1 SWAP2 MSTORE PUSH0 DUP2 MSTORE SWAP1 JUMP JUMPDEST SWAP1 POP PUSH0 DUP2 MLOAD GT PUSH2 0x5DA JUMPI PUSH1 0x40 MLOAD DUP1 PUSH1 0x20 ADD PUSH1 0x40 MSTORE DUP1 PUSH0 DUP2 MSTORE POP PUSH2 0x605 JUMP JUMPDEST DUP1 PUSH2 0x5E4 DUP5 PUSH2 0x9D4 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x20 ADD PUSH2 0x5F5 SWAP3 SWAP2 SWAP1 PUSH2 0xFD1 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x20 DUP2 DUP4 SUB SUB DUP2 MSTORE SWAP1 PUSH1 0x40 MSTORE JUMPDEST SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP2 DUP3 AND PUSH0 SWAP1 DUP2 MSTORE PUSH1 0x5 PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 SWAP4 SWAP1 SWAP5 AND DUP3 MSTORE SWAP2 SWAP1 SWAP2 MSTORE KECCAK256 SLOAD PUSH1 0xFF AND SWAP1 JUMP JUMPDEST PUSH0 DUP2 DUP2 MSTORE PUSH1 0x2 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH2 0x697 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x18 PUSH1 0x24 DUP3 ADD MSTORE PUSH24 0x115490CDCC8C4E881A5B9D985B1A59081D1BDAD95B881251 PUSH1 0x42 SHL PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x372 JUMP JUMPDEST POP JUMP JUMPDEST PUSH0 DUP2 DUP2 MSTORE PUSH1 0x4 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 DUP1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB NOT AND PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP5 AND SWAP1 DUP2 OR SWAP1 SWAP2 SSTORE DUP2 SWAP1 PUSH2 0x6CE DUP3 PUSH2 0x463 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH32 0x8C5BE1E5EBEC7D5BD14F71427D1E84F3DD0314C0F7B2291E5B200AC8C7C3B925 PUSH1 0x40 MLOAD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG4 POP POP JUMP JUMPDEST PUSH0 DUP1 PUSH2 0x712 DUP4 PUSH2 0x463 JUMP JUMPDEST SWAP1 POP DUP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP5 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND EQ DUP1 PUSH2 0x739 JUMPI POP PUSH2 0x739 DUP2 DUP6 PUSH2 0x60C JUMP JUMPDEST DUP1 PUSH2 0x75D JUMPI POP DUP4 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH2 0x752 DUP5 PUSH2 0x2DA JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND EQ JUMPDEST SWAP5 SWAP4 POP POP POP POP JUMP JUMPDEST DUP3 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH2 0x778 DUP3 PUSH2 0x463 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND EQ PUSH2 0x79E JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x372 SWAP1 PUSH2 0xFFF JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 AND PUSH2 0x800 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x24 DUP1 DUP3 ADD MSTORE PUSH32 0x4552433732313A207472616E7366657220746F20746865207A65726F20616464 PUSH1 0x44 DUP3 ADD MSTORE PUSH4 0x72657373 PUSH1 0xE0 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0x372 JUMP JUMPDEST PUSH2 0x80D DUP4 DUP4 DUP4 PUSH1 0x1 PUSH2 0xA64 JUMP JUMPDEST DUP3 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH2 0x820 DUP3 PUSH2 0x463 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND EQ PUSH2 0x846 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x372 SWAP1 PUSH2 0xFFF JUMP JUMPDEST PUSH0 DUP2 DUP2 MSTORE PUSH1 0x4 PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 DUP1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB NOT SWAP1 DUP2 AND SWAP1 SWAP2 SSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP8 DUP2 AND DUP1 DUP7 MSTORE PUSH1 0x3 DUP6 MSTORE DUP4 DUP7 KECCAK256 DUP1 SLOAD PUSH0 NOT ADD SWAP1 SSTORE SWAP1 DUP8 AND DUP1 DUP7 MSTORE DUP4 DUP7 KECCAK256 DUP1 SLOAD PUSH1 0x1 ADD SWAP1 SSTORE DUP7 DUP7 MSTORE PUSH1 0x2 SWAP1 SWAP5 MSTORE DUP3 DUP6 KECCAK256 DUP1 SLOAD SWAP1 SWAP3 AND DUP5 OR SWAP1 SWAP2 SSTORE SWAP1 MLOAD DUP5 SWAP4 PUSH32 0xDDF252AD1BE2C89B69C2B068FC378DAA952BA7F163C4A11628F55A4DF523B3EF SWAP2 LOG4 POP POP POP JUMP JUMPDEST DUP2 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP4 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND SUB PUSH2 0x935 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x19 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x4552433732313A20617070726F766520746F2063616C6C657200000000000000 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x372 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 DUP2 AND PUSH0 DUP2 DUP2 MSTORE PUSH1 0x5 PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 SWAP5 DUP8 AND DUP1 DUP5 MSTORE SWAP5 DUP3 MSTORE SWAP2 DUP3 SWAP1 KECCAK256 DUP1 SLOAD PUSH1 0xFF NOT AND DUP7 ISZERO ISZERO SWAP1 DUP2 OR SWAP1 SWAP2 SSTORE SWAP2 MLOAD SWAP2 DUP3 MSTORE PUSH32 0x17307EAB39AB6107E8899845AD3D59BD9653F200F220920489CA2B5937696C31 SWAP2 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 POP POP POP JUMP JUMPDEST PUSH2 0x9AC DUP5 DUP5 DUP5 PUSH2 0x765 JUMP JUMPDEST PUSH2 0x9B8 DUP5 DUP5 DUP5 DUP5 PUSH2 0xAEA JUMP JUMPDEST PUSH2 0x596 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x372 SWAP1 PUSH2 0x1044 JUMP JUMPDEST PUSH1 0x60 PUSH0 PUSH2 0x9E0 DUP4 PUSH2 0xBE7 JUMP JUMPDEST PUSH1 0x1 ADD SWAP1 POP PUSH0 DUP2 PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0x9FF JUMPI PUSH2 0x9FF PUSH2 0xE32 JUMP JUMPDEST PUSH1 0x40 MLOAD SWAP1 DUP1 DUP3 MSTORE DUP1 PUSH1 0x1F ADD PUSH1 0x1F NOT AND PUSH1 0x20 ADD DUP3 ADD PUSH1 0x40 MSTORE DUP1 ISZERO PUSH2 0xA29 JUMPI PUSH1 0x20 DUP3 ADD DUP2 DUP1 CALLDATASIZE DUP4 CALLDATACOPY ADD SWAP1 POP JUMPDEST POP SWAP1 POP DUP2 DUP2 ADD PUSH1 0x20 ADD JUMPDEST PUSH0 NOT ADD PUSH16 0x181899199A1A9B1B9C1CB0B131B232B3 PUSH1 0x81 SHL PUSH1 0xA DUP7 MOD BYTE DUP2 MSTORE8 PUSH1 0xA DUP6 DIV SWAP5 POP DUP5 PUSH2 0xA33 JUMPI POP SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x1 DUP2 GT ISZERO PUSH2 0x596 JUMPI PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP5 AND ISZERO PUSH2 0xAA9 JUMPI PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP5 AND PUSH0 SWAP1 DUP2 MSTORE PUSH1 0x3 PUSH1 0x20 MSTORE PUSH1 0x40 DUP2 KECCAK256 DUP1 SLOAD DUP4 SWAP3 SWAP1 PUSH2 0xAA3 SWAP1 DUP5 SWAP1 PUSH2 0x10AA JUMP JUMPDEST SWAP1 SWAP2 SSTORE POP POP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 AND ISZERO PUSH2 0x596 JUMPI PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 AND PUSH0 SWAP1 DUP2 MSTORE PUSH1 0x3 PUSH1 0x20 MSTORE PUSH1 0x40 DUP2 KECCAK256 DUP1 SLOAD DUP4 SWAP3 SWAP1 PUSH2 0xADF SWAP1 DUP5 SWAP1 PUSH2 0x10BD JUMP JUMPDEST SWAP1 SWAP2 SSTORE POP POP POP POP POP POP JUMP JUMPDEST PUSH0 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP5 AND EXTCODESIZE ISZERO PUSH2 0xBDC JUMPI PUSH1 0x40 MLOAD PUSH4 0xA85BD01 PUSH1 0xE1 SHL DUP2 MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP6 AND SWAP1 PUSH4 0x150B7A02 SWAP1 PUSH2 0xB2D SWAP1 CALLER SWAP1 DUP10 SWAP1 DUP9 SWAP1 DUP9 SWAP1 PUSH1 0x4 ADD PUSH2 0x10D0 JUMP JUMPDEST PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH0 DUP8 GAS CALL SWAP3 POP POP POP DUP1 ISZERO PUSH2 0xB67 JUMPI POP PUSH1 0x40 DUP1 MLOAD PUSH1 0x1F RETURNDATASIZE SWAP1 DUP2 ADD PUSH1 0x1F NOT AND DUP3 ADD SWAP1 SWAP3 MSTORE PUSH2 0xB64 SWAP2 DUP2 ADD SWAP1 PUSH2 0x110C JUMP JUMPDEST PUSH1 0x1 JUMPDEST PUSH2 0xBC2 JUMPI RETURNDATASIZE DUP1 DUP1 ISZERO PUSH2 0xB94 JUMPI PUSH1 0x40 MLOAD SWAP2 POP PUSH1 0x1F NOT PUSH1 0x3F RETURNDATASIZE ADD AND DUP3 ADD PUSH1 0x40 MSTORE RETURNDATASIZE DUP3 MSTORE RETURNDATASIZE PUSH0 PUSH1 0x20 DUP5 ADD RETURNDATACOPY PUSH2 0xB99 JUMP JUMPDEST PUSH1 0x60 SWAP2 POP JUMPDEST POP DUP1 MLOAD PUSH0 SUB PUSH2 0xBBA JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x372 SWAP1 PUSH2 0x1044 JUMP JUMPDEST DUP1 MLOAD DUP2 PUSH1 0x20 ADD REVERT JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xE0 SHL SUB NOT AND PUSH4 0xA85BD01 PUSH1 0xE1 SHL EQ SWAP1 POP PUSH2 0x75D JUMP JUMPDEST POP PUSH1 0x1 SWAP5 SWAP4 POP POP POP POP JUMP JUMPDEST PUSH0 DUP1 PUSH19 0x184F03E93FF9F4DAA797ED6E38ED64BF6A1F01 PUSH1 0x40 SHL DUP4 LT PUSH2 0xC25 JUMPI PUSH19 0x184F03E93FF9F4DAA797ED6E38ED64BF6A1F01 PUSH1 0x40 SHL DUP4 DIV SWAP3 POP PUSH1 0x40 ADD JUMPDEST PUSH14 0x4EE2D6D415B85ACEF8100000000 DUP4 LT PUSH2 0xC51 JUMPI PUSH14 0x4EE2D6D415B85ACEF8100000000 DUP4 DIV SWAP3 POP PUSH1 0x20 ADD JUMPDEST PUSH7 0x2386F26FC10000 DUP4 LT PUSH2 0xC6F JUMPI PUSH7 0x2386F26FC10000 DUP4 DIV SWAP3 POP PUSH1 0x10 ADD JUMPDEST PUSH4 0x5F5E100 DUP4 LT PUSH2 0xC87 JUMPI PUSH4 0x5F5E100 DUP4 DIV SWAP3 POP PUSH1 0x8 ADD JUMPDEST PUSH2 0x2710 DUP4 LT PUSH2 0xC9B JUMPI PUSH2 0x2710 DUP4 DIV SWAP3 POP PUSH1 0x4 ADD JUMPDEST PUSH1 0x64 DUP4 LT PUSH2 0xCAD JUMPI PUSH1 0x64 DUP4 DIV SWAP3 POP PUSH1 0x2 ADD JUMPDEST PUSH1 0xA DUP4 LT PUSH2 0x245 JUMPI PUSH1 0x1 ADD SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xE0 SHL SUB NOT DUP2 AND DUP2 EQ PUSH2 0x697 JUMPI PUSH0 DUP1 REVERT JUMPDEST PUSH0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0xCE3 JUMPI PUSH0 DUP1 REVERT JUMPDEST DUP2 CALLDATALOAD PUSH2 0x605 DUP2 PUSH2 0xCBE JUMP JUMPDEST PUSH0 JUMPDEST DUP4 DUP2 LT ISZERO PUSH2 0xD08 JUMPI DUP2 DUP2 ADD MLOAD DUP4 DUP3 ADD MSTORE PUSH1 0x20 ADD PUSH2 0xCF0 JUMP JUMPDEST POP POP PUSH0 SWAP2 ADD MSTORE JUMP JUMPDEST PUSH0 DUP2 MLOAD DUP1 DUP5 MSTORE PUSH2 0xD27 DUP2 PUSH1 0x20 DUP7 ADD PUSH1 0x20 DUP7 ADD PUSH2 0xCEE JUMP JUMPDEST PUSH1 0x1F ADD PUSH1 0x1F NOT AND SWAP3 SWAP1 SWAP3 ADD PUSH1 0x20 ADD SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x20 DUP2 MSTORE PUSH0 PUSH2 0x605 PUSH1 0x20 DUP4 ADD DUP5 PUSH2 0xD10 JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0xD5D JUMPI PUSH0 DUP1 REVERT JUMPDEST POP CALLDATALOAD SWAP2 SWAP1 POP JUMP JUMPDEST DUP1 CALLDATALOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND DUP2 EQ PUSH2 0xD7A JUMPI PUSH0 DUP1 REVERT JUMPDEST SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0xD90 JUMPI PUSH0 DUP1 REVERT JUMPDEST PUSH2 0xD99 DUP4 PUSH2 0xD64 JUMP JUMPDEST SWAP5 PUSH1 0x20 SWAP4 SWAP1 SWAP4 ADD CALLDATALOAD SWAP4 POP POP POP JUMP JUMPDEST PUSH0 DUP1 PUSH0 PUSH1 0x60 DUP5 DUP7 SUB SLT ISZERO PUSH2 0xDB9 JUMPI PUSH0 DUP1 REVERT JUMPDEST PUSH2 0xDC2 DUP5 PUSH2 0xD64 JUMP JUMPDEST SWAP3 POP PUSH2 0xDD0 PUSH1 0x20 DUP6 ADD PUSH2 0xD64 JUMP JUMPDEST SWAP2 POP PUSH1 0x40 DUP5 ADD CALLDATALOAD SWAP1 POP SWAP3 POP SWAP3 POP SWAP3 JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0xDF0 JUMPI PUSH0 DUP1 REVERT JUMPDEST PUSH2 0x605 DUP3 PUSH2 0xD64 JUMP JUMPDEST PUSH0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0xE0A JUMPI PUSH0 DUP1 REVERT JUMPDEST PUSH2 0xE13 DUP4 PUSH2 0xD64 JUMP JUMPDEST SWAP2 POP PUSH1 0x20 DUP4 ADD CALLDATALOAD DUP1 ISZERO ISZERO DUP2 EQ PUSH2 0xE27 JUMPI PUSH0 DUP1 REVERT JUMPDEST DUP1 SWAP2 POP POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH0 MSTORE PUSH1 0x41 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH0 REVERT JUMPDEST PUSH0 DUP1 PUSH0 DUP1 PUSH1 0x80 DUP6 DUP8 SUB SLT ISZERO PUSH2 0xE59 JUMPI PUSH0 DUP1 REVERT JUMPDEST PUSH2 0xE62 DUP6 PUSH2 0xD64 JUMP JUMPDEST SWAP4 POP PUSH2 0xE70 PUSH1 0x20 DUP7 ADD PUSH2 0xD64 JUMP JUMPDEST SWAP3 POP PUSH1 0x40 DUP6 ADD CALLDATALOAD SWAP2 POP PUSH1 0x60 DUP6 ADD CALLDATALOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP1 DUP3 GT ISZERO PUSH2 0xE93 JUMPI PUSH0 DUP1 REVERT JUMPDEST DUP2 DUP8 ADD SWAP2 POP DUP8 PUSH1 0x1F DUP4 ADD SLT PUSH2 0xEA6 JUMPI PUSH0 DUP1 REVERT JUMPDEST DUP2 CALLDATALOAD DUP2 DUP2 GT ISZERO PUSH2 0xEB8 JUMPI PUSH2 0xEB8 PUSH2 0xE32 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x1F DUP3 ADD PUSH1 0x1F NOT SWAP1 DUP2 AND PUSH1 0x3F ADD AND DUP2 ADD SWAP1 DUP4 DUP3 GT DUP2 DUP4 LT OR ISZERO PUSH2 0xEE0 JUMPI PUSH2 0xEE0 PUSH2 0xE32 JUMP JUMPDEST DUP2 PUSH1 0x40 MSTORE DUP3 DUP2 MSTORE DUP11 PUSH1 0x20 DUP5 DUP8 ADD ADD GT ISZERO PUSH2 0xEF8 JUMPI PUSH0 DUP1 REVERT JUMPDEST DUP3 PUSH1 0x20 DUP7 ADD PUSH1 0x20 DUP4 ADD CALLDATACOPY PUSH0 PUSH1 0x20 DUP5 DUP4 ADD ADD MSTORE DUP1 SWAP6 POP POP POP POP POP POP SWAP3 SWAP6 SWAP2 SWAP5 POP SWAP3 POP JUMP JUMPDEST PUSH0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0xF2C JUMPI PUSH0 DUP1 REVERT JUMPDEST PUSH2 0xF35 DUP4 PUSH2 0xD64 JUMP JUMPDEST SWAP2 POP PUSH2 0xF43 PUSH1 0x20 DUP5 ADD PUSH2 0xD64 JUMP JUMPDEST SWAP1 POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH1 0x1 DUP2 DUP2 SHR SWAP1 DUP3 AND DUP1 PUSH2 0xF60 JUMPI PUSH1 0x7F DUP3 AND SWAP2 POP JUMPDEST PUSH1 0x20 DUP3 LT DUP2 SUB PUSH2 0xF7E JUMPI PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH0 MSTORE PUSH1 0x22 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH0 REVERT JUMPDEST POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x20 DUP1 DUP3 MSTORE PUSH1 0x2D SWAP1 DUP3 ADD MSTORE PUSH32 0x4552433732313A2063616C6C6572206973206E6F7420746F6B656E206F776E65 PUSH1 0x40 DUP3 ADD MSTORE PUSH13 0x1C881BDC88185C1C1C9BDD9959 PUSH1 0x9A SHL PUSH1 0x60 DUP3 ADD MSTORE PUSH1 0x80 ADD SWAP1 JUMP JUMPDEST PUSH0 DUP4 MLOAD PUSH2 0xFE2 DUP2 DUP5 PUSH1 0x20 DUP9 ADD PUSH2 0xCEE JUMP JUMPDEST DUP4 MLOAD SWAP1 DUP4 ADD SWAP1 PUSH2 0xFF6 DUP2 DUP4 PUSH1 0x20 DUP9 ADD PUSH2 0xCEE JUMP JUMPDEST ADD SWAP5 SWAP4 POP POP POP POP JUMP JUMPDEST PUSH1 0x20 DUP1 DUP3 MSTORE PUSH1 0x25 SWAP1 DUP3 ADD MSTORE PUSH32 0x4552433732313A207472616E736665722066726F6D20696E636F727265637420 PUSH1 0x40 DUP3 ADD MSTORE PUSH5 0x37BBB732B9 PUSH1 0xD9 SHL PUSH1 0x60 DUP3 ADD MSTORE PUSH1 0x80 ADD SWAP1 JUMP JUMPDEST PUSH1 0x20 DUP1 DUP3 MSTORE PUSH1 0x32 SWAP1 DUP3 ADD MSTORE PUSH32 0x4552433732313A207472616E7366657220746F206E6F6E204552433732315265 PUSH1 0x40 DUP3 ADD MSTORE PUSH18 0x31B2B4BB32B91034B6B83632B6B2B73A32B9 PUSH1 0x71 SHL PUSH1 0x60 DUP3 ADD MSTORE PUSH1 0x80 ADD SWAP1 JUMP JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH0 MSTORE PUSH1 0x11 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH0 REVERT JUMPDEST DUP2 DUP2 SUB DUP2 DUP2 GT ISZERO PUSH2 0x245 JUMPI PUSH2 0x245 PUSH2 0x1096 JUMP JUMPDEST DUP1 DUP3 ADD DUP1 DUP3 GT ISZERO PUSH2 0x245 JUMPI PUSH2 0x245 PUSH2 0x1096 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP6 DUP2 AND DUP3 MSTORE DUP5 AND PUSH1 0x20 DUP3 ADD MSTORE PUSH1 0x40 DUP2 ADD DUP4 SWAP1 MSTORE PUSH1 0x80 PUSH1 0x60 DUP3 ADD DUP2 SWAP1 MSTORE PUSH0 SWAP1 PUSH2 0x1102 SWAP1 DUP4 ADD DUP5 PUSH2 0xD10 JUMP JUMPDEST SWAP7 SWAP6 POP POP POP POP POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x111C JUMPI PUSH0 DUP1 REVERT JUMPDEST DUP2 MLOAD PUSH2 0x605 DUP2 PUSH2 0xCBE JUMP INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 DUP7 PUSH9 0xB10ADE2CE4E39ACC04 0x4F PUSH30 0xBEFC7EDADAAE5A1FBB762E25BF9B747808BB8464736F6C63430008150033 ",
							"sourceMap": "628:16327:2:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1570:300;;;;;;:::i;:::-;;:::i;:::-;;;565:14:14;;558:22;540:41;;528:2;513:18;1570:300:2;;;;;;;;2471:98;;;:::i;:::-;;;;;;;:::i;3935:167::-;;;;;;:::i;:::-;;:::i;:::-;;;-1:-1:-1;;;;;1697:32:14;;;1679:51;;1667:2;1652:18;3935:167:2;1533:203:14;3468:406:2;;;;;;:::i;:::-;;:::i;:::-;;4612:326;;;;;;:::i;:::-;;:::i;5004:179::-;;;;;;:::i;:::-;;:::i;2190:219::-;;;;;;:::i;:::-;;:::i;1929:204::-;;;;;;:::i;:::-;;:::i;:::-;;;2848:25:14;;;2836:2;2821:18;1929:204:2;2702:177:14;2633:102:2;;;:::i;4169:153::-;;;;;;:::i;:::-;;:::i;5249:314::-;;;;;;:::i;:::-;;:::i;2801:276::-;;;;;;:::i;:::-;;:::i;4388:162::-;;;;;;:::i;:::-;;:::i;1570:300::-;1672:4;-1:-1:-1;;;;;;1707:40:2;;-1:-1:-1;;;1707:40:2;;:104;;-1:-1:-1;;;;;;;1763:48:2;;-1:-1:-1;;;1763:48:2;1707:104;:156;;;-1:-1:-1;;;;;;;;;;937:40:10;;;1827:36:2;1688:175;1570:300;-1:-1:-1;;1570:300:2:o;2471:98::-;2525:13;2557:5;2550:12;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;2471:98;:::o;3935:167::-;4011:7;4030:23;4045:7;4030:14;:23::i;:::-;-1:-1:-1;4071:24:2;;;;:15;:24;;;;;;-1:-1:-1;;;;;4071:24:2;;3935:167::o;3468:406::-;3548:13;3564:23;3579:7;3564:14;:23::i;:::-;3548:39;;3611:5;-1:-1:-1;;;;;3605:11:2;:2;-1:-1:-1;;;;;3605:11:2;;3597:57;;;;-1:-1:-1;;;3597:57:2;;5363:2:14;3597:57:2;;;5345:21:14;5402:2;5382:18;;;5375:30;5441:34;5421:18;;;5414:62;-1:-1:-1;;;5492:18:14;;;5485:31;5533:19;;3597:57:2;;;;;;;;;719:10:7;-1:-1:-1;;;;;3686:21:2;;;;:62;;-1:-1:-1;3711:37:2;3728:5;719:10:7;4388:162:2;:::i;3711:37::-;3665:170;;;;-1:-1:-1;;;3665:170:2;;5765:2:14;3665:170:2;;;5747:21:14;5804:2;5784:18;;;5777:30;5843:34;5823:18;;;5816:62;5914:31;5894:18;;;5887:59;5963:19;;3665:170:2;5563:425:14;3665:170:2;3846:21;3855:2;3859:7;3846:8;:21::i;:::-;3538:336;3468:406;;:::o;4612:326::-;4801:41;719:10:7;4834:7:2;4801:18;:41::i;:::-;4793:99;;;;-1:-1:-1;;;4793:99:2;;;;;;;:::i;:::-;4903:28;4913:4;4919:2;4923:7;4903:9;:28::i;5004:179::-;5137:39;5154:4;5160:2;5164:7;5137:39;;;;;;;;;;;;:16;:39::i;2190:219::-;2262:7;6930:16;;;:7;:16;;;;;;-1:-1:-1;;;;;6930:16:2;;2324:56;;;;-1:-1:-1;;;2324:56:2;;6609:2:14;2324:56:2;;;6591:21:14;6648:2;6628:18;;;6621:30;-1:-1:-1;;;6667:18:14;;;6660:54;6731:18;;2324:56:2;6407:348:14;1929:204:2;2001:7;-1:-1:-1;;;;;2028:19:2;;2020:73;;;;-1:-1:-1;;;2020:73:2;;6962:2:14;2020:73:2;;;6944:21:14;7001:2;6981:18;;;6974:30;7040:34;7020:18;;;7013:62;-1:-1:-1;;;7091:18:14;;;7084:39;7140:19;;2020:73:2;6760:405:14;2020:73:2;-1:-1:-1;;;;;;2110:16:2;;;;;:9;:16;;;;;;;1929:204::o;2633:102::-;2689:13;2721:7;2714:14;;;;;:::i;4169:153::-;4263:52;719:10:7;4296:8:2;4306;4263:18;:52::i;:::-;4169:153;;:::o;5249:314::-;5417:41;719:10:7;5450:7:2;5417:18;:41::i;:::-;5409:99;;;;-1:-1:-1;;;5409:99:2;;;;;;;:::i;:::-;5518:38;5532:4;5538:2;5542:7;5551:4;5518:13;:38::i;:::-;5249:314;;;;:::o;2801:276::-;2874:13;2899:23;2914:7;2899:14;:23::i;:::-;2933:21;2957:10;3395:9;;;;;;;;;-1:-1:-1;3395:9:2;;;3319:92;2957:10;2933:34;;3008:1;2990:7;2984:21;:25;:86;;;;;;;;;;;;;;;;;3036:7;3045:18;:7;:16;:18::i;:::-;3019:45;;;;;;;;;:::i;:::-;;;;;;;;;;;;;2984:86;2977:93;2801:276;-1:-1:-1;;;2801:276:2:o;4388:162::-;-1:-1:-1;;;;;4508:25:2;;;4485:4;4508:25;;;:18;:25;;;;;;;;:35;;;;;;;;;;;;;;;4388:162::o;13466:133::-;7321:4;6930:16;;;:7;:16;;;;;;-1:-1:-1;;;;;6930:16:2;13539:53;;;;-1:-1:-1;;;13539:53:2;;6609:2:14;13539:53:2;;;6591:21:14;6648:2;6628:18;;;6621:30;-1:-1:-1;;;6667:18:14;;;6660:54;6731:18;;13539:53:2;6407:348:14;13539:53:2;13466:133;:::o;12768:171::-;12842:24;;;;:15;:24;;;;;:29;;-1:-1:-1;;;;;;12842:29:2;-1:-1:-1;;;;;12842:29:2;;;;;;;;:24;;12895:23;12842:24;12895:14;:23::i;:::-;-1:-1:-1;;;;;12886:46:2;;;;;;;;;;;12768:171;;:::o;7540:261::-;7633:4;7649:13;7665:23;7680:7;7665:14;:23::i;:::-;7649:39;;7717:5;-1:-1:-1;;;;;7706:16:2;:7;-1:-1:-1;;;;;7706:16:2;;:52;;;;7726:32;7743:5;7750:7;7726:16;:32::i;:::-;7706:87;;;;7786:7;-1:-1:-1;;;;;7762:31:2;:20;7774:7;7762:11;:20::i;:::-;-1:-1:-1;;;;;7762:31:2;;7706:87;7698:96;7540:261;-1:-1:-1;;;;7540:261:2:o;11423:1233::-;11577:4;-1:-1:-1;;;;;11550:31:2;:23;11565:7;11550:14;:23::i;:::-;-1:-1:-1;;;;;11550:31:2;;11542:81;;;;-1:-1:-1;;;11542:81:2;;;;;;;:::i;:::-;-1:-1:-1;;;;;11641:16:2;;11633:65;;;;-1:-1:-1;;;11633:65:2;;8279:2:14;11633:65:2;;;8261:21:14;8318:2;8298:18;;;8291:30;8357:34;8337:18;;;8330:62;-1:-1:-1;;;8408:18:14;;;8401:34;8452:19;;11633:65:2;8077:400:14;11633:65:2;11709:42;11730:4;11736:2;11740:7;11749:1;11709:20;:42::i;:::-;11878:4;-1:-1:-1;;;;;11851:31:2;:23;11866:7;11851:14;:23::i;:::-;-1:-1:-1;;;;;11851:31:2;;11843:81;;;;-1:-1:-1;;;11843:81:2;;;;;;;:::i;:::-;11993:24;;;;:15;:24;;;;;;;;11986:31;;-1:-1:-1;;;;;;11986:31:2;;;;;;-1:-1:-1;;;;;12461:15:2;;;;;;:9;:15;;;;;:20;;-1:-1:-1;;12461:20:2;;;12495:13;;;;;;;;;:18;;11986:31;12495:18;;;12533:16;;;:7;:16;;;;;;:21;;;;;;;;;;12570:27;;12009:7;;12570:27;;;3538:336;3468:406;;:::o;13075:307::-;13225:8;-1:-1:-1;;;;;13216:17:2;:5;-1:-1:-1;;;;;13216:17:2;;13208:55;;;;-1:-1:-1;;;13208:55:2;;8684:2:14;13208:55:2;;;8666:21:14;8723:2;8703:18;;;8696:30;8762:27;8742:18;;;8735:55;8807:18;;13208:55:2;8482:349:14;13208:55:2;-1:-1:-1;;;;;13273:25:2;;;;;;;:18;:25;;;;;;;;:35;;;;;;;;;;;;;:46;;-1:-1:-1;;13273:46:2;;;;;;;;;;13334:41;;540::14;;;13334::2;;513:18:14;13334:41:2;;;;;;;13075:307;;;:::o;6424:305::-;6574:28;6584:4;6590:2;6594:7;6574:9;:28::i;:::-;6620:47;6643:4;6649:2;6653:7;6662:4;6620:22;:47::i;:::-;6612:110;;;;-1:-1:-1;;;6612:110:2;;;;;;;:::i;415:696:9:-;471:13;520:14;537:17;548:5;537:10;:17::i;:::-;557:1;537:21;520:38;;572:20;606:6;595:18;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;595:18:9;-1:-1:-1;572:41:9;-1:-1:-1;733:28:9;;;749:2;733:28;788:280;-1:-1:-1;;819:5:9;-1:-1:-1;;;953:2:9;942:14;;937:30;819:5;924:44;1012:2;1003:11;;;-1:-1:-1;1032:21:9;788:280;1032:21;-1:-1:-1;1088:6:9;415:696;-1:-1:-1;;;415:696:9:o;15698:396:2:-;15882:1;15870:9;:13;15866:222;;;-1:-1:-1;;;;;15903:18:2;;;15899:85;;-1:-1:-1;;;;;15941:15:2;;;;;;:9;:15;;;;;:28;;15960:9;;15941:15;:28;;15960:9;;15941:28;:::i;:::-;;;;-1:-1:-1;;15899:85:2;-1:-1:-1;;;;;16001:16:2;;;15997:81;;-1:-1:-1;;;;;16037:13:2;;;;;;:9;:13;;;;;:26;;16054:9;;16037:13;:26;;16054:9;;16037:26;:::i;:::-;;;;-1:-1:-1;;15698:396:2;;;;:::o;14151:831::-;14300:4;-1:-1:-1;;;;;14320:13:2;;1465:19:6;:23;14316:660:2;;14355:71;;-1:-1:-1;;;14355:71:2;;-1:-1:-1;;;;;14355:36:2;;;;;:71;;719:10:7;;14406:4:2;;14412:7;;14421:4;;14355:71;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;-1:-1:-1;14355:71:2;;;;;;;;-1:-1:-1;;14355:71:2;;;;;;;;;;;;:::i;:::-;;;14351:573;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;14593:6;:13;14610:1;14593:18;14589:321;;14635:60;;-1:-1:-1;;;14635:60:2;;;;;;;:::i;14589:321::-;14862:6;14856:13;14847:6;14843:2;14839:15;14832:38;14351:573;-1:-1:-1;;;;;;14476:51:2;-1:-1:-1;;;14476:51:2;;-1:-1:-1;14469:58:2;;14316:660;-1:-1:-1;14961:4:2;14151:831;;;;;;:::o;9889:890:12:-;9942:7;;-1:-1:-1;;;10017:15:12;;10013:99;;-1:-1:-1;;;10052:15:12;;;-1:-1:-1;10095:2:12;10085:12;10013:99;10138:6;10129:5;:15;10125:99;;10173:6;10164:15;;;-1:-1:-1;10207:2:12;10197:12;10125:99;10250:6;10241:5;:15;10237:99;;10285:6;10276:15;;;-1:-1:-1;10319:2:12;10309:12;10237:99;10362:5;10353;:14;10349:96;;10396:5;10387:14;;;-1:-1:-1;10429:1:12;10419:11;10349:96;10471:5;10462;:14;10458:96;;10505:5;10496:14;;;-1:-1:-1;10538:1:12;10528:11;10458:96;10580:5;10571;:14;10567:96;;10614:5;10605:14;;;-1:-1:-1;10647:1:12;10637:11;10567:96;10689:5;10680;:14;10676:64;;10724:1;10714:11;10766:6;9889:890;-1:-1:-1;;9889:890:12:o;14:131:14:-;-1:-1:-1;;;;;;88:32:14;;78:43;;68:71;;135:1;132;125:12;150:245;208:6;261:2;249:9;240:7;236:23;232:32;229:52;;;277:1;274;267:12;229:52;316:9;303:23;335:30;359:5;335:30;:::i;592:250::-;677:1;687:113;701:6;698:1;695:13;687:113;;;777:11;;;771:18;758:11;;;751:39;723:2;716:10;687:113;;;-1:-1:-1;;834:1:14;816:16;;809:27;592:250::o;847:271::-;889:3;927:5;921:12;954:6;949:3;942:19;970:76;1039:6;1032:4;1027:3;1023:14;1016:4;1009:5;1005:16;970:76;:::i;:::-;1100:2;1079:15;-1:-1:-1;;1075:29:14;1066:39;;;;1107:4;1062:50;;847:271;-1:-1:-1;;847:271:14:o;1123:220::-;1272:2;1261:9;1254:21;1235:4;1292:45;1333:2;1322:9;1318:18;1310:6;1292:45;:::i;1348:180::-;1407:6;1460:2;1448:9;1439:7;1435:23;1431:32;1428:52;;;1476:1;1473;1466:12;1428:52;-1:-1:-1;1499:23:14;;1348:180;-1:-1:-1;1348:180:14:o;1741:173::-;1809:20;;-1:-1:-1;;;;;1858:31:14;;1848:42;;1838:70;;1904:1;1901;1894:12;1838:70;1741:173;;;:::o;1919:254::-;1987:6;1995;2048:2;2036:9;2027:7;2023:23;2019:32;2016:52;;;2064:1;2061;2054:12;2016:52;2087:29;2106:9;2087:29;:::i;:::-;2077:39;2163:2;2148:18;;;;2135:32;;-1:-1:-1;;;1919:254:14:o;2178:328::-;2255:6;2263;2271;2324:2;2312:9;2303:7;2299:23;2295:32;2292:52;;;2340:1;2337;2330:12;2292:52;2363:29;2382:9;2363:29;:::i;:::-;2353:39;;2411:38;2445:2;2434:9;2430:18;2411:38;:::i;:::-;2401:48;;2496:2;2485:9;2481:18;2468:32;2458:42;;2178:328;;;;;:::o;2511:186::-;2570:6;2623:2;2611:9;2602:7;2598:23;2594:32;2591:52;;;2639:1;2636;2629:12;2591:52;2662:29;2681:9;2662:29;:::i;2884:347::-;2949:6;2957;3010:2;2998:9;2989:7;2985:23;2981:32;2978:52;;;3026:1;3023;3016:12;2978:52;3049:29;3068:9;3049:29;:::i;:::-;3039:39;;3128:2;3117:9;3113:18;3100:32;3175:5;3168:13;3161:21;3154:5;3151:32;3141:60;;3197:1;3194;3187:12;3141:60;3220:5;3210:15;;;2884:347;;;;;:::o;3236:127::-;3297:10;3292:3;3288:20;3285:1;3278:31;3328:4;3325:1;3318:15;3352:4;3349:1;3342:15;3368:1138;3463:6;3471;3479;3487;3540:3;3528:9;3519:7;3515:23;3511:33;3508:53;;;3557:1;3554;3547:12;3508:53;3580:29;3599:9;3580:29;:::i;:::-;3570:39;;3628:38;3662:2;3651:9;3647:18;3628:38;:::i;:::-;3618:48;;3713:2;3702:9;3698:18;3685:32;3675:42;;3768:2;3757:9;3753:18;3740:32;3791:18;3832:2;3824:6;3821:14;3818:34;;;3848:1;3845;3838:12;3818:34;3886:6;3875:9;3871:22;3861:32;;3931:7;3924:4;3920:2;3916:13;3912:27;3902:55;;3953:1;3950;3943:12;3902:55;3989:2;3976:16;4011:2;4007;4004:10;4001:36;;;4017:18;;:::i;:::-;4092:2;4086:9;4060:2;4146:13;;-1:-1:-1;;4142:22:14;;;4166:2;4138:31;4134:40;4122:53;;;4190:18;;;4210:22;;;4187:46;4184:72;;;4236:18;;:::i;:::-;4276:10;4272:2;4265:22;4311:2;4303:6;4296:18;4351:7;4346:2;4341;4337;4333:11;4329:20;4326:33;4323:53;;;4372:1;4369;4362:12;4323:53;4428:2;4423;4419;4415:11;4410:2;4402:6;4398:15;4385:46;4473:1;4468:2;4463;4455:6;4451:15;4447:24;4440:35;4494:6;4484:16;;;;;;;3368:1138;;;;;;;:::o;4511:260::-;4579:6;4587;4640:2;4628:9;4619:7;4615:23;4611:32;4608:52;;;4656:1;4653;4646:12;4608:52;4679:29;4698:9;4679:29;:::i;:::-;4669:39;;4727:38;4761:2;4750:9;4746:18;4727:38;:::i;:::-;4717:48;;4511:260;;;;;:::o;4776:380::-;4855:1;4851:12;;;;4898;;;4919:61;;4973:4;4965:6;4961:17;4951:27;;4919:61;5026:2;5018:6;5015:14;4995:18;4992:38;4989:161;;5072:10;5067:3;5063:20;5060:1;5053:31;5107:4;5104:1;5097:15;5135:4;5132:1;5125:15;4989:161;;4776:380;;;:::o;5993:409::-;6195:2;6177:21;;;6234:2;6214:18;;;6207:30;6273:34;6268:2;6253:18;;6246:62;-1:-1:-1;;;6339:2:14;6324:18;;6317:43;6392:3;6377:19;;5993:409::o;7170:496::-;7349:3;7387:6;7381:13;7403:66;7462:6;7457:3;7450:4;7442:6;7438:17;7403:66;:::i;:::-;7532:13;;7491:16;;;;7554:70;7532:13;7491:16;7601:4;7589:17;;7554:70;:::i;:::-;7640:20;;7170:496;-1:-1:-1;;;;7170:496:14:o;7671:401::-;7873:2;7855:21;;;7912:2;7892:18;;;7885:30;7951:34;7946:2;7931:18;;7924:62;-1:-1:-1;;;8017:2:14;8002:18;;7995:35;8062:3;8047:19;;7671:401::o;8836:414::-;9038:2;9020:21;;;9077:2;9057:18;;;9050:30;9116:34;9111:2;9096:18;;9089:62;-1:-1:-1;;;9182:2:14;9167:18;;9160:48;9240:3;9225:19;;8836:414::o;9387:127::-;9448:10;9443:3;9439:20;9436:1;9429:31;9479:4;9476:1;9469:15;9503:4;9500:1;9493:15;9519:128;9586:9;;;9607:11;;;9604:37;;;9621:18;;:::i;9652:125::-;9717:9;;;9738:10;;;9735:36;;;9751:18;;:::i;9782:489::-;-1:-1:-1;;;;;10051:15:14;;;10033:34;;10103:15;;10098:2;10083:18;;10076:43;10150:2;10135:18;;10128:34;;;10198:3;10193:2;10178:18;;10171:31;;;9976:4;;10219:46;;10245:19;;10237:6;10219:46;:::i;:::-;10211:54;9782:489;-1:-1:-1;;;;;;9782:489:14:o;10276:249::-;10345:6;10398:2;10386:9;10377:7;10373:23;10369:32;10366:52;;;10414:1;10411;10404:12;10366:52;10446:9;10440:16;10465:30;10489:5;10465:30;:::i"
						},
						"gasEstimates": {
							"creation": {
								"codeDepositCost": "889000",
								"executionCost": "infinite",
								"totalCost": "infinite"
							},
							"external": {
								"approve(address,uint256)": "infinite",
								"balanceOf(address)": "2630",
								"getApproved(uint256)": "4764",
								"isApprovedForAll(address,address)": "infinite",
								"name()": "infinite",
								"ownerOf(uint256)": "2558",
								"safeTransferFrom(address,address,uint256)": "infinite",
								"safeTransferFrom(address,address,uint256,bytes)": "infinite",
								"setApprovalForAll(address,bool)": "26702",
								"supportsInterface(bytes4)": "508",
								"symbol()": "infinite",
								"tokenURI(uint256)": "infinite",
								"transferFrom(address,address,uint256)": "infinite"
							},
							"internal": {
								"_afterTokenTransfer(address,address,uint256,uint256)": "infinite",
								"_approve(address,uint256)": "infinite",
								"_baseURI()": "infinite",
								"_beforeTokenTransfer(address,address,uint256,uint256)": "24512",
								"_burn(uint256)": "infinite",
								"_checkOnERC721Received(address,address,uint256,bytes memory)": "infinite",
								"_exists(uint256)": "infinite",
								"_isApprovedOrOwner(address,uint256)": "infinite",
								"_mint(address,uint256)": "infinite",
								"_ownerOf(uint256)": "infinite",
								"_requireMinted(uint256)": "infinite",
								"_safeMint(address,uint256)": "infinite",
								"_safeMint(address,uint256,bytes memory)": "infinite",
								"_safeTransfer(address,address,uint256,bytes memory)": "infinite",
								"_setApprovalForAll(address,address,bool)": "infinite",
								"_transfer(address,address,uint256)": "infinite"
							}
						},
						"legacyAssembly": {
							".code": [
								{
									"begin": 628,
									"end": 16955,
									"name": "PUSH",
									"source": 2,
									"value": "80"
								},
								{
									"begin": 628,
									"end": 16955,
									"name": "PUSH",
									"source": 2,
									"value": "40"
								},
								{
									"begin": 628,
									"end": 16955,
									"name": "MSTORE",
									"source": 2
								},
								{
									"begin": 1390,
									"end": 1503,
									"name": "CALLVALUE",
									"source": 2
								},
								{
									"begin": 1390,
									"end": 1503,
									"name": "DUP1",
									"source": 2
								},
								{
									"begin": 1390,
									"end": 1503,
									"name": "ISZERO",
									"source": 2
								},
								{
									"begin": 1390,
									"end": 1503,
									"name": "PUSH [tag]",
									"source": 2,
									"value": "1"
								},
								{
									"begin": 1390,
									"end": 1503,
									"name": "JUMPI",
									"source": 2
								},
								{
									"begin": 1390,
									"end": 1503,
									"name": "PUSH",
									"source": 2,
									"value": "0"
								},
								{
									"begin": 1390,
									"end": 1503,
									"name": "DUP1",
									"source": 2
								},
								{
									"begin": 1390,
									"end": 1503,
									"name": "REVERT",
									"source": 2
								},
								{
									"begin": 1390,
									"end": 1503,
									"name": "tag",
									"source": 2,
									"value": "1"
								},
								{
									"begin": 1390,
									"end": 1503,
									"name": "JUMPDEST",
									"source": 2
								},
								{
									"begin": 1390,
									"end": 1503,
									"name": "POP",
									"source": 2
								},
								{
									"begin": 1390,
									"end": 1503,
									"name": "PUSH",
									"source": 2,
									"value": "40"
								},
								{
									"begin": 1390,
									"end": 1503,
									"name": "MLOAD",
									"source": 2
								},
								{
									"begin": 1390,
									"end": 1503,
									"name": "PUSHSIZE",
									"source": 2
								},
								{
									"begin": 1390,
									"end": 1503,
									"name": "CODESIZE",
									"source": 2
								},
								{
									"begin": 1390,
									"end": 1503,
									"name": "SUB",
									"source": 2
								},
								{
									"begin": 1390,
									"end": 1503,
									"name": "DUP1",
									"source": 2
								},
								{
									"begin": 1390,
									"end": 1503,
									"name": "PUSHSIZE",
									"source": 2
								},
								{
									"begin": 1390,
									"end": 1503,
									"name": "DUP4",
									"source": 2
								},
								{
									"begin": 1390,
									"end": 1503,
									"name": "CODECOPY",
									"source": 2
								},
								{
									"begin": 1390,
									"end": 1503,
									"name": "DUP2",
									"source": 2
								},
								{
									"begin": 1390,
									"end": 1503,
									"name": "ADD",
									"source": 2
								},
								{
									"begin": 1390,
									"end": 1503,
									"name": "PUSH",
									"source": 2,
									"value": "40"
								},
								{
									"begin": 1390,
									"end": 1503,
									"name": "DUP2",
									"source": 2
								},
								{
									"begin": 1390,
									"end": 1503,
									"name": "SWAP1",
									"source": 2
								},
								{
									"begin": 1390,
									"end": 1503,
									"name": "MSTORE",
									"source": 2
								},
								{
									"begin": 1390,
									"end": 1503,
									"name": "PUSH [tag]",
									"source": 2,
									"value": "2"
								},
								{
									"begin": 1390,
									"end": 1503,
									"name": "SWAP2",
									"source": 2
								},
								{
									"begin": 1390,
									"end": 1503,
									"name": "PUSH [tag]",
									"source": 2,
									"value": "3"
								},
								{
									"begin": 1390,
									"end": 1503,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 2
								},
								{
									"begin": 1390,
									"end": 1503,
									"name": "tag",
									"source": 2,
									"value": "2"
								},
								{
									"begin": 1390,
									"end": 1503,
									"name": "JUMPDEST",
									"source": 2
								},
								{
									"begin": 1456,
									"end": 1461,
									"name": "PUSH",
									"source": 2,
									"value": "0"
								},
								{
									"begin": 1456,
									"end": 1469,
									"name": "PUSH [tag]",
									"source": 2,
									"value": "6"
								},
								{
									"begin": 1464,
									"end": 1469,
									"name": "DUP4",
									"source": 2
								},
								{
									"begin": 1456,
									"end": 1461,
									"name": "DUP3",
									"source": 2
								},
								{
									"begin": 1456,
									"end": 1469,
									"name": "PUSH [tag]",
									"source": 2,
									"value": "7"
								},
								{
									"begin": 1456,
									"end": 1469,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 2
								},
								{
									"begin": 1456,
									"end": 1469,
									"name": "tag",
									"source": 2,
									"value": "6"
								},
								{
									"begin": 1456,
									"end": 1469,
									"name": "JUMPDEST",
									"source": 2
								},
								{
									"begin": -1,
									"end": -1,
									"name": "POP",
									"source": -1
								},
								{
									"begin": 1479,
									"end": 1486,
									"name": "PUSH",
									"source": 2,
									"value": "1"
								},
								{
									"begin": 1479,
									"end": 1496,
									"name": "PUSH [tag]",
									"source": 2,
									"value": "8"
								},
								{
									"begin": 1489,
									"end": 1496,
									"name": "DUP3",
									"source": 2
								},
								{
									"begin": 1479,
									"end": 1486,
									"name": "DUP3",
									"source": 2
								},
								{
									"begin": 1479,
									"end": 1496,
									"name": "PUSH [tag]",
									"source": 2,
									"value": "7"
								},
								{
									"begin": 1479,
									"end": 1496,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 2
								},
								{
									"begin": 1479,
									"end": 1496,
									"name": "tag",
									"source": 2,
									"value": "8"
								},
								{
									"begin": 1479,
									"end": 1496,
									"name": "JUMPDEST",
									"source": 2
								},
								{
									"begin": 1479,
									"end": 1496,
									"name": "POP",
									"source": 2
								},
								{
									"begin": 1390,
									"end": 1503,
									"name": "POP",
									"source": 2
								},
								{
									"begin": 1390,
									"end": 1503,
									"name": "POP",
									"source": 2
								},
								{
									"begin": 628,
									"end": 16955,
									"name": "PUSH [tag]",
									"source": 2,
									"value": "16"
								},
								{
									"begin": 628,
									"end": 16955,
									"name": "JUMP",
									"source": 2
								},
								{
									"begin": 14,
									"end": 141,
									"name": "tag",
									"source": 14,
									"value": "10"
								},
								{
									"begin": 14,
									"end": 141,
									"name": "JUMPDEST",
									"source": 14
								},
								{
									"begin": 75,
									"end": 85,
									"name": "PUSH",
									"source": 14,
									"value": "4E487B71"
								},
								{
									"begin": 70,
									"end": 73,
									"name": "PUSH",
									"source": 14,
									"value": "E0"
								},
								{
									"begin": 66,
									"end": 86,
									"name": "SHL",
									"source": 14
								},
								{
									"begin": 63,
									"end": 64,
									"name": "PUSH",
									"source": 14,
									"value": "0"
								},
								{
									"begin": 56,
									"end": 87,
									"name": "MSTORE",
									"source": 14
								},
								{
									"begin": 106,
									"end": 110,
									"name": "PUSH",
									"source": 14,
									"value": "41"
								},
								{
									"begin": 103,
									"end": 104,
									"name": "PUSH",
									"source": 14,
									"value": "4"
								},
								{
									"begin": 96,
									"end": 111,
									"name": "MSTORE",
									"source": 14
								},
								{
									"begin": 130,
									"end": 134,
									"name": "PUSH",
									"source": 14,
									"value": "24"
								},
								{
									"begin": 127,
									"end": 128,
									"name": "PUSH",
									"source": 14,
									"value": "0"
								},
								{
									"begin": 120,
									"end": 135,
									"name": "REVERT",
									"source": 14
								},
								{
									"begin": 146,
									"end": 986,
									"name": "tag",
									"source": 14,
									"value": "11"
								},
								{
									"begin": 146,
									"end": 986,
									"name": "JUMPDEST",
									"source": 14
								},
								{
									"begin": 200,
									"end": 205,
									"name": "PUSH",
									"source": 14,
									"value": "0"
								},
								{
									"begin": 253,
									"end": 256,
									"name": "DUP3",
									"source": 14
								},
								{
									"begin": 246,
									"end": 250,
									"name": "PUSH",
									"source": 14,
									"value": "1F"
								},
								{
									"begin": 238,
									"end": 244,
									"name": "DUP4",
									"source": 14
								},
								{
									"begin": 234,
									"end": 251,
									"name": "ADD",
									"source": 14
								},
								{
									"begin": 230,
									"end": 257,
									"name": "SLT",
									"source": 14
								},
								{
									"begin": 220,
									"end": 275,
									"name": "PUSH [tag]",
									"source": 14,
									"value": "19"
								},
								{
									"begin": 220,
									"end": 275,
									"name": "JUMPI",
									"source": 14
								},
								{
									"begin": 271,
									"end": 272,
									"name": "PUSH",
									"source": 14,
									"value": "0"
								},
								{
									"begin": 268,
									"end": 269,
									"name": "DUP1",
									"source": 14
								},
								{
									"begin": 261,
									"end": 273,
									"name": "REVERT",
									"source": 14
								},
								{
									"begin": 220,
									"end": 275,
									"name": "tag",
									"source": 14,
									"value": "19"
								},
								{
									"begin": 220,
									"end": 275,
									"name": "JUMPDEST",
									"source": 14
								},
								{
									"begin": 294,
									"end": 307,
									"name": "DUP2",
									"source": 14
								},
								{
									"begin": 294,
									"end": 307,
									"name": "MLOAD",
									"source": 14
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "1"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "1"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "40"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SHL",
									"source": -1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SUB",
									"source": -1
								},
								{
									"begin": 356,
									"end": 366,
									"name": "DUP1",
									"source": 14
								},
								{
									"begin": 356,
									"end": 366,
									"name": "DUP3",
									"source": 14
								},
								{
									"begin": 356,
									"end": 366,
									"name": "GT",
									"source": 14
								},
								{
									"begin": 353,
									"end": 389,
									"name": "ISZERO",
									"source": 14
								},
								{
									"begin": 353,
									"end": 389,
									"name": "PUSH [tag]",
									"source": 14,
									"value": "21"
								},
								{
									"begin": 353,
									"end": 389,
									"name": "JUMPI",
									"source": 14
								},
								{
									"begin": 369,
									"end": 387,
									"name": "PUSH [tag]",
									"source": 14,
									"value": "21"
								},
								{
									"begin": 369,
									"end": 387,
									"name": "PUSH [tag]",
									"source": 14,
									"value": "10"
								},
								{
									"begin": 369,
									"end": 387,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 14
								},
								{
									"begin": 369,
									"end": 387,
									"name": "tag",
									"source": 14,
									"value": "21"
								},
								{
									"begin": 369,
									"end": 387,
									"name": "JUMPDEST",
									"source": 14
								},
								{
									"begin": 444,
									"end": 446,
									"name": "PUSH",
									"source": 14,
									"value": "40"
								},
								{
									"begin": 438,
									"end": 447,
									"name": "MLOAD",
									"source": 14
								},
								{
									"begin": 412,
									"end": 414,
									"name": "PUSH",
									"source": 14,
									"value": "1F"
								},
								{
									"begin": 498,
									"end": 511,
									"name": "DUP4",
									"source": 14
								},
								{
									"begin": 498,
									"end": 511,
									"name": "ADD",
									"source": 14
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "1F"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "NOT",
									"source": -1
								},
								{
									"begin": 494,
									"end": 516,
									"name": "SWAP1",
									"source": 14
								},
								{
									"begin": 494,
									"end": 516,
									"name": "DUP2",
									"source": 14
								},
								{
									"begin": 494,
									"end": 516,
									"name": "AND",
									"source": 14
								},
								{
									"begin": 518,
									"end": 520,
									"name": "PUSH",
									"source": 14,
									"value": "3F"
								},
								{
									"begin": 490,
									"end": 521,
									"name": "ADD",
									"source": 14
								},
								{
									"begin": 486,
									"end": 526,
									"name": "AND",
									"source": 14
								},
								{
									"begin": 474,
									"end": 527,
									"name": "DUP2",
									"source": 14
								},
								{
									"begin": 474,
									"end": 527,
									"name": "ADD",
									"source": 14
								},
								{
									"begin": 474,
									"end": 527,
									"name": "SWAP1",
									"source": 14
								},
								{
									"begin": 542,
									"end": 560,
									"name": "DUP3",
									"source": 14
								},
								{
									"begin": 542,
									"end": 560,
									"name": "DUP3",
									"source": 14
								},
								{
									"begin": 542,
									"end": 560,
									"name": "GT",
									"source": 14
								},
								{
									"begin": 562,
									"end": 584,
									"name": "DUP2",
									"source": 14
								},
								{
									"begin": 562,
									"end": 584,
									"name": "DUP4",
									"source": 14
								},
								{
									"begin": 562,
									"end": 584,
									"name": "LT",
									"source": 14
								},
								{
									"begin": 539,
									"end": 585,
									"name": "OR",
									"source": 14
								},
								{
									"begin": 536,
									"end": 608,
									"name": "ISZERO",
									"source": 14
								},
								{
									"begin": 536,
									"end": 608,
									"name": "PUSH [tag]",
									"source": 14,
									"value": "23"
								},
								{
									"begin": 536,
									"end": 608,
									"name": "JUMPI",
									"source": 14
								},
								{
									"begin": 588,
									"end": 606,
									"name": "PUSH [tag]",
									"source": 14,
									"value": "23"
								},
								{
									"begin": 588,
									"end": 606,
									"name": "PUSH [tag]",
									"source": 14,
									"value": "10"
								},
								{
									"begin": 588,
									"end": 606,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 14
								},
								{
									"begin": 588,
									"end": 606,
									"name": "tag",
									"source": 14,
									"value": "23"
								},
								{
									"begin": 588,
									"end": 606,
									"name": "JUMPDEST",
									"source": 14
								},
								{
									"begin": 628,
									"end": 638,
									"name": "DUP2",
									"source": 14
								},
								{
									"begin": 624,
									"end": 626,
									"name": "PUSH",
									"source": 14,
									"value": "40"
								},
								{
									"begin": 617,
									"end": 639,
									"name": "MSTORE",
									"source": 14
								},
								{
									"begin": 663,
									"end": 665,
									"name": "DUP4",
									"source": 14
								},
								{
									"begin": 655,
									"end": 661,
									"name": "DUP2",
									"source": 14
								},
								{
									"begin": 648,
									"end": 666,
									"name": "MSTORE",
									"source": 14
								},
								{
									"begin": 685,
									"end": 689,
									"name": "PUSH",
									"source": 14,
									"value": "20"
								},
								{
									"begin": 675,
									"end": 689,
									"name": "SWAP3",
									"source": 14
								},
								{
									"begin": 675,
									"end": 689,
									"name": "POP",
									"source": 14
								},
								{
									"begin": 730,
									"end": 733,
									"name": "DUP7",
									"source": 14
								},
								{
									"begin": 725,
									"end": 727,
									"name": "DUP4",
									"source": 14
								},
								{
									"begin": 720,
									"end": 722,
									"name": "DUP6",
									"source": 14
								},
								{
									"begin": 712,
									"end": 718,
									"name": "DUP9",
									"source": 14
								},
								{
									"begin": 708,
									"end": 723,
									"name": "ADD",
									"source": 14
								},
								{
									"begin": 704,
									"end": 728,
									"name": "ADD",
									"source": 14
								},
								{
									"begin": 701,
									"end": 734,
									"name": "GT",
									"source": 14
								},
								{
									"begin": 698,
									"end": 751,
									"name": "ISZERO",
									"source": 14
								},
								{
									"begin": 698,
									"end": 751,
									"name": "PUSH [tag]",
									"source": 14,
									"value": "24"
								},
								{
									"begin": 698,
									"end": 751,
									"name": "JUMPI",
									"source": 14
								},
								{
									"begin": 747,
									"end": 748,
									"name": "PUSH",
									"source": 14,
									"value": "0"
								},
								{
									"begin": 744,
									"end": 745,
									"name": "DUP1",
									"source": 14
								},
								{
									"begin": 737,
									"end": 749,
									"name": "REVERT",
									"source": 14
								},
								{
									"begin": 698,
									"end": 751,
									"name": "tag",
									"source": 14,
									"value": "24"
								},
								{
									"begin": 698,
									"end": 751,
									"name": "JUMPDEST",
									"source": 14
								},
								{
									"begin": 769,
									"end": 770,
									"name": "PUSH",
									"source": 14,
									"value": "0"
								},
								{
									"begin": 760,
									"end": 770,
									"name": "SWAP2",
									"source": 14
								},
								{
									"begin": 760,
									"end": 770,
									"name": "POP",
									"source": 14
								},
								{
									"begin": 779,
									"end": 912,
									"name": "tag",
									"source": 14,
									"value": "25"
								},
								{
									"begin": 779,
									"end": 912,
									"name": "JUMPDEST",
									"source": 14
								},
								{
									"begin": 793,
									"end": 795,
									"name": "DUP4",
									"source": 14
								},
								{
									"begin": 790,
									"end": 791,
									"name": "DUP3",
									"source": 14
								},
								{
									"begin": 787,
									"end": 796,
									"name": "LT",
									"source": 14
								},
								{
									"begin": 779,
									"end": 912,
									"name": "ISZERO",
									"source": 14
								},
								{
									"begin": 779,
									"end": 912,
									"name": "PUSH [tag]",
									"source": 14,
									"value": "27"
								},
								{
									"begin": 779,
									"end": 912,
									"name": "JUMPI",
									"source": 14
								},
								{
									"begin": 881,
									"end": 895,
									"name": "DUP6",
									"source": 14
								},
								{
									"begin": 881,
									"end": 895,
									"name": "DUP3",
									"source": 14
								},
								{
									"begin": 881,
									"end": 895,
									"name": "ADD",
									"source": 14
								},
								{
									"begin": 877,
									"end": 900,
									"name": "DUP4",
									"source": 14
								},
								{
									"begin": 877,
									"end": 900,
									"name": "ADD",
									"source": 14
								},
								{
									"begin": 871,
									"end": 901,
									"name": "MLOAD",
									"source": 14
								},
								{
									"begin": 850,
									"end": 864,
									"name": "DUP2",
									"source": 14
								},
								{
									"begin": 850,
									"end": 864,
									"name": "DUP4",
									"source": 14
								},
								{
									"begin": 850,
									"end": 864,
									"name": "ADD",
									"source": 14
								},
								{
									"begin": 846,
									"end": 869,
									"name": "DUP5",
									"source": 14
								},
								{
									"begin": 846,
									"end": 869,
									"name": "ADD",
									"source": 14
								},
								{
									"begin": 839,
									"end": 902,
									"name": "MSTORE",
									"source": 14
								},
								{
									"begin": 804,
									"end": 814,
									"name": "SWAP1",
									"source": 14
								},
								{
									"begin": 804,
									"end": 814,
									"name": "DUP3",
									"source": 14
								},
								{
									"begin": 804,
									"end": 814,
									"name": "ADD",
									"source": 14
								},
								{
									"begin": 804,
									"end": 814,
									"name": "SWAP1",
									"source": 14
								},
								{
									"begin": 779,
									"end": 912,
									"name": "PUSH [tag]",
									"source": 14,
									"value": "25"
								},
								{
									"begin": 779,
									"end": 912,
									"name": "JUMP",
									"source": 14
								},
								{
									"begin": 779,
									"end": 912,
									"name": "tag",
									"source": 14,
									"value": "27"
								},
								{
									"begin": 779,
									"end": 912,
									"name": "JUMPDEST",
									"source": 14
								},
								{
									"begin": 954,
									"end": 955,
									"name": "PUSH",
									"source": 14,
									"value": "0"
								},
								{
									"begin": 932,
									"end": 947,
									"name": "SWAP4",
									"source": 14
								},
								{
									"begin": 932,
									"end": 947,
									"name": "DUP2",
									"source": 14
								},
								{
									"begin": 932,
									"end": 947,
									"name": "ADD",
									"source": 14
								},
								{
									"begin": 928,
									"end": 952,
									"name": "SWAP1",
									"source": 14
								},
								{
									"begin": 928,
									"end": 952,
									"name": "SWAP3",
									"source": 14
								},
								{
									"begin": 928,
									"end": 952,
									"name": "ADD",
									"source": 14
								},
								{
									"begin": 921,
									"end": 956,
									"name": "SWAP3",
									"source": 14
								},
								{
									"begin": 921,
									"end": 956,
									"name": "SWAP1",
									"source": 14
								},
								{
									"begin": 921,
									"end": 956,
									"name": "SWAP3",
									"source": 14
								},
								{
									"begin": 921,
									"end": 956,
									"name": "MSTORE",
									"source": 14
								},
								{
									"begin": 936,
									"end": 942,
									"name": "SWAP5",
									"source": 14
								},
								{
									"begin": 146,
									"end": 986,
									"name": "SWAP4",
									"source": 14
								},
								{
									"begin": -1,
									"end": -1,
									"name": "POP",
									"source": -1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "POP",
									"source": -1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "POP",
									"source": -1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "POP",
									"source": -1
								},
								{
									"begin": 146,
									"end": 986,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 14
								},
								{
									"begin": 991,
									"end": 1553,
									"name": "tag",
									"source": 14,
									"value": "3"
								},
								{
									"begin": 991,
									"end": 1553,
									"name": "JUMPDEST",
									"source": 14
								},
								{
									"begin": 1090,
									"end": 1096,
									"name": "PUSH",
									"source": 14,
									"value": "0"
								},
								{
									"begin": 1098,
									"end": 1104,
									"name": "DUP1",
									"source": 14
								},
								{
									"begin": 1151,
									"end": 1153,
									"name": "PUSH",
									"source": 14,
									"value": "40"
								},
								{
									"begin": 1139,
									"end": 1148,
									"name": "DUP4",
									"source": 14
								},
								{
									"begin": 1130,
									"end": 1137,
									"name": "DUP6",
									"source": 14
								},
								{
									"begin": 1126,
									"end": 1149,
									"name": "SUB",
									"source": 14
								},
								{
									"begin": 1122,
									"end": 1154,
									"name": "SLT",
									"source": 14
								},
								{
									"begin": 1119,
									"end": 1171,
									"name": "ISZERO",
									"source": 14
								},
								{
									"begin": 1119,
									"end": 1171,
									"name": "PUSH [tag]",
									"source": 14,
									"value": "29"
								},
								{
									"begin": 1119,
									"end": 1171,
									"name": "JUMPI",
									"source": 14
								},
								{
									"begin": 1167,
									"end": 1168,
									"name": "PUSH",
									"source": 14,
									"value": "0"
								},
								{
									"begin": 1164,
									"end": 1165,
									"name": "DUP1",
									"source": 14
								},
								{
									"begin": 1157,
									"end": 1169,
									"name": "REVERT",
									"source": 14
								},
								{
									"begin": 1119,
									"end": 1171,
									"name": "tag",
									"source": 14,
									"value": "29"
								},
								{
									"begin": 1119,
									"end": 1171,
									"name": "JUMPDEST",
									"source": 14
								},
								{
									"begin": 1194,
									"end": 1210,
									"name": "DUP3",
									"source": 14
								},
								{
									"begin": 1194,
									"end": 1210,
									"name": "MLOAD",
									"source": 14
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "1"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "1"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "40"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SHL",
									"source": -1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SUB",
									"source": -1
								},
								{
									"begin": 1259,
									"end": 1273,
									"name": "DUP1",
									"source": 14
								},
								{
									"begin": 1259,
									"end": 1273,
									"name": "DUP3",
									"source": 14
								},
								{
									"begin": 1259,
									"end": 1273,
									"name": "GT",
									"source": 14
								},
								{
									"begin": 1256,
									"end": 1290,
									"name": "ISZERO",
									"source": 14
								},
								{
									"begin": 1256,
									"end": 1290,
									"name": "PUSH [tag]",
									"source": 14,
									"value": "30"
								},
								{
									"begin": 1256,
									"end": 1290,
									"name": "JUMPI",
									"source": 14
								},
								{
									"begin": 1286,
									"end": 1287,
									"name": "PUSH",
									"source": 14,
									"value": "0"
								},
								{
									"begin": 1283,
									"end": 1284,
									"name": "DUP1",
									"source": 14
								},
								{
									"begin": 1276,
									"end": 1288,
									"name": "REVERT",
									"source": 14
								},
								{
									"begin": 1256,
									"end": 1290,
									"name": "tag",
									"source": 14,
									"value": "30"
								},
								{
									"begin": 1256,
									"end": 1290,
									"name": "JUMPDEST",
									"source": 14
								},
								{
									"begin": 1309,
									"end": 1370,
									"name": "PUSH [tag]",
									"source": 14,
									"value": "31"
								},
								{
									"begin": 1362,
									"end": 1369,
									"name": "DUP7",
									"source": 14
								},
								{
									"begin": 1353,
									"end": 1359,
									"name": "DUP4",
									"source": 14
								},
								{
									"begin": 1342,
									"end": 1351,
									"name": "DUP8",
									"source": 14
								},
								{
									"begin": 1338,
									"end": 1360,
									"name": "ADD",
									"source": 14
								},
								{
									"begin": 1309,
									"end": 1370,
									"name": "PUSH [tag]",
									"source": 14,
									"value": "11"
								},
								{
									"begin": 1309,
									"end": 1370,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 14
								},
								{
									"begin": 1309,
									"end": 1370,
									"name": "tag",
									"source": 14,
									"value": "31"
								},
								{
									"begin": 1309,
									"end": 1370,
									"name": "JUMPDEST",
									"source": 14
								},
								{
									"begin": 1299,
									"end": 1370,
									"name": "SWAP4",
									"source": 14
								},
								{
									"begin": 1299,
									"end": 1370,
									"name": "POP",
									"source": 14
								},
								{
									"begin": 1416,
									"end": 1418,
									"name": "PUSH",
									"source": 14,
									"value": "20"
								},
								{
									"begin": 1405,
									"end": 1414,
									"name": "DUP6",
									"source": 14
								},
								{
									"begin": 1401,
									"end": 1419,
									"name": "ADD",
									"source": 14
								},
								{
									"begin": 1395,
									"end": 1420,
									"name": "MLOAD",
									"source": 14
								},
								{
									"begin": 1379,
									"end": 1420,
									"name": "SWAP2",
									"source": 14
								},
								{
									"begin": 1379,
									"end": 1420,
									"name": "POP",
									"source": 14
								},
								{
									"begin": 1445,
									"end": 1447,
									"name": "DUP1",
									"source": 14
								},
								{
									"begin": 1435,
									"end": 1443,
									"name": "DUP3",
									"source": 14
								},
								{
									"begin": 1432,
									"end": 1448,
									"name": "GT",
									"source": 14
								},
								{
									"begin": 1429,
									"end": 1465,
									"name": "ISZERO",
									"source": 14
								},
								{
									"begin": 1429,
									"end": 1465,
									"name": "PUSH [tag]",
									"source": 14,
									"value": "32"
								},
								{
									"begin": 1429,
									"end": 1465,
									"name": "JUMPI",
									"source": 14
								},
								{
									"begin": 1461,
									"end": 1462,
									"name": "PUSH",
									"source": 14,
									"value": "0"
								},
								{
									"begin": 1458,
									"end": 1459,
									"name": "DUP1",
									"source": 14
								},
								{
									"begin": 1451,
									"end": 1463,
									"name": "REVERT",
									"source": 14
								},
								{
									"begin": 1429,
									"end": 1465,
									"name": "tag",
									"source": 14,
									"value": "32"
								},
								{
									"begin": 1429,
									"end": 1465,
									"name": "JUMPDEST",
									"source": 14
								},
								{
									"begin": 1429,
									"end": 1465,
									"name": "POP",
									"source": 14
								},
								{
									"begin": 1484,
									"end": 1547,
									"name": "PUSH [tag]",
									"source": 14,
									"value": "33"
								},
								{
									"begin": 1539,
									"end": 1546,
									"name": "DUP6",
									"source": 14
								},
								{
									"begin": 1528,
									"end": 1536,
									"name": "DUP3",
									"source": 14
								},
								{
									"begin": 1517,
									"end": 1526,
									"name": "DUP7",
									"source": 14
								},
								{
									"begin": 1513,
									"end": 1537,
									"name": "ADD",
									"source": 14
								},
								{
									"begin": 1484,
									"end": 1547,
									"name": "PUSH [tag]",
									"source": 14,
									"value": "11"
								},
								{
									"begin": 1484,
									"end": 1547,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 14
								},
								{
									"begin": 1484,
									"end": 1547,
									"name": "tag",
									"source": 14,
									"value": "33"
								},
								{
									"begin": 1484,
									"end": 1547,
									"name": "JUMPDEST",
									"source": 14
								},
								{
									"begin": 1474,
									"end": 1547,
									"name": "SWAP2",
									"source": 14
								},
								{
									"begin": 1474,
									"end": 1547,
									"name": "POP",
									"source": 14
								},
								{
									"begin": 1474,
									"end": 1547,
									"name": "POP",
									"source": 14
								},
								{
									"begin": 991,
									"end": 1553,
									"name": "SWAP3",
									"source": 14
								},
								{
									"begin": 991,
									"end": 1553,
									"name": "POP",
									"source": 14
								},
								{
									"begin": 991,
									"end": 1553,
									"name": "SWAP3",
									"source": 14
								},
								{
									"begin": 991,
									"end": 1553,
									"name": "SWAP1",
									"source": 14
								},
								{
									"begin": 991,
									"end": 1553,
									"name": "POP",
									"source": 14
								},
								{
									"begin": 991,
									"end": 1553,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 14
								},
								{
									"begin": 1558,
									"end": 1938,
									"name": "tag",
									"source": 14,
									"value": "12"
								},
								{
									"begin": 1558,
									"end": 1938,
									"name": "JUMPDEST",
									"source": 14
								},
								{
									"begin": 1637,
									"end": 1638,
									"name": "PUSH",
									"source": 14,
									"value": "1"
								},
								{
									"begin": 1633,
									"end": 1645,
									"name": "DUP2",
									"source": 14
								},
								{
									"begin": 1633,
									"end": 1645,
									"name": "DUP2",
									"source": 14
								},
								{
									"begin": 1633,
									"end": 1645,
									"name": "SHR",
									"source": 14
								},
								{
									"begin": 1633,
									"end": 1645,
									"name": "SWAP1",
									"source": 14
								},
								{
									"begin": 1680,
									"end": 1692,
									"name": "DUP3",
									"source": 14
								},
								{
									"begin": 1680,
									"end": 1692,
									"name": "AND",
									"source": 14
								},
								{
									"begin": 1680,
									"end": 1692,
									"name": "DUP1",
									"source": 14
								},
								{
									"begin": 1701,
									"end": 1762,
									"name": "PUSH [tag]",
									"source": 14,
									"value": "35"
								},
								{
									"begin": 1701,
									"end": 1762,
									"name": "JUMPI",
									"source": 14
								},
								{
									"begin": 1755,
									"end": 1759,
									"name": "PUSH",
									"source": 14,
									"value": "7F"
								},
								{
									"begin": 1747,
									"end": 1753,
									"name": "DUP3",
									"source": 14
								},
								{
									"begin": 1743,
									"end": 1760,
									"name": "AND",
									"source": 14
								},
								{
									"begin": 1733,
									"end": 1760,
									"name": "SWAP2",
									"source": 14
								},
								{
									"begin": 1733,
									"end": 1760,
									"name": "POP",
									"source": 14
								},
								{
									"begin": 1701,
									"end": 1762,
									"name": "tag",
									"source": 14,
									"value": "35"
								},
								{
									"begin": 1701,
									"end": 1762,
									"name": "JUMPDEST",
									"source": 14
								},
								{
									"begin": 1808,
									"end": 1810,
									"name": "PUSH",
									"source": 14,
									"value": "20"
								},
								{
									"begin": 1800,
									"end": 1806,
									"name": "DUP3",
									"source": 14
								},
								{
									"begin": 1797,
									"end": 1811,
									"name": "LT",
									"source": 14
								},
								{
									"begin": 1777,
									"end": 1795,
									"name": "DUP2",
									"source": 14
								},
								{
									"begin": 1774,
									"end": 1812,
									"name": "SUB",
									"source": 14
								},
								{
									"begin": 1771,
									"end": 1932,
									"name": "PUSH [tag]",
									"source": 14,
									"value": "36"
								},
								{
									"begin": 1771,
									"end": 1932,
									"name": "JUMPI",
									"source": 14
								},
								{
									"begin": 1854,
									"end": 1864,
									"name": "PUSH",
									"source": 14,
									"value": "4E487B71"
								},
								{
									"begin": 1849,
									"end": 1852,
									"name": "PUSH",
									"source": 14,
									"value": "E0"
								},
								{
									"begin": 1845,
									"end": 1865,
									"name": "SHL",
									"source": 14
								},
								{
									"begin": 1842,
									"end": 1843,
									"name": "PUSH",
									"source": 14,
									"value": "0"
								},
								{
									"begin": 1835,
									"end": 1866,
									"name": "MSTORE",
									"source": 14
								},
								{
									"begin": 1889,
									"end": 1893,
									"name": "PUSH",
									"source": 14,
									"value": "22"
								},
								{
									"begin": 1886,
									"end": 1887,
									"name": "PUSH",
									"source": 14,
									"value": "4"
								},
								{
									"begin": 1879,
									"end": 1894,
									"name": "MSTORE",
									"source": 14
								},
								{
									"begin": 1917,
									"end": 1921,
									"name": "PUSH",
									"source": 14,
									"value": "24"
								},
								{
									"begin": 1914,
									"end": 1915,
									"name": "PUSH",
									"source": 14,
									"value": "0"
								},
								{
									"begin": 1907,
									"end": 1922,
									"name": "REVERT",
									"source": 14
								},
								{
									"begin": 1771,
									"end": 1932,
									"name": "tag",
									"source": 14,
									"value": "36"
								},
								{
									"begin": 1771,
									"end": 1932,
									"name": "JUMPDEST",
									"source": 14
								},
								{
									"begin": 1771,
									"end": 1932,
									"name": "POP",
									"source": 14
								},
								{
									"begin": 1558,
									"end": 1938,
									"name": "SWAP2",
									"source": 14
								},
								{
									"begin": 1558,
									"end": 1938,
									"name": "SWAP1",
									"source": 14
								},
								{
									"begin": 1558,
									"end": 1938,
									"name": "POP",
									"source": 14
								},
								{
									"begin": 1558,
									"end": 1938,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 14
								},
								{
									"begin": 2069,
									"end": 2614,
									"name": "tag",
									"source": 14,
									"value": "14"
								},
								{
									"begin": 2069,
									"end": 2614,
									"name": "JUMPDEST",
									"source": 14
								},
								{
									"begin": 2171,
									"end": 2173,
									"name": "PUSH",
									"source": 14,
									"value": "1F"
								},
								{
									"begin": 2166,
									"end": 2169,
									"name": "DUP3",
									"source": 14
								},
								{
									"begin": 2163,
									"end": 2174,
									"name": "GT",
									"source": 14
								},
								{
									"begin": 2160,
									"end": 2608,
									"name": "ISZERO",
									"source": 14
								},
								{
									"begin": 2160,
									"end": 2608,
									"name": "PUSH [tag]",
									"source": 14,
									"value": "39"
								},
								{
									"begin": 2160,
									"end": 2608,
									"name": "JUMPI",
									"source": 14
								},
								{
									"begin": 2207,
									"end": 2208,
									"name": "PUSH",
									"source": 14,
									"value": "0"
								},
								{
									"begin": 2232,
									"end": 2237,
									"name": "DUP2",
									"source": 14
								},
								{
									"begin": 2228,
									"end": 2230,
									"name": "DUP2",
									"source": 14
								},
								{
									"begin": 2221,
									"end": 2238,
									"name": "MSTORE",
									"source": 14
								},
								{
									"begin": 2277,
									"end": 2281,
									"name": "PUSH",
									"source": 14,
									"value": "20"
								},
								{
									"begin": 2273,
									"end": 2275,
									"name": "DUP2",
									"source": 14
								},
								{
									"begin": 2263,
									"end": 2282,
									"name": "KECCAK256",
									"source": 14
								},
								{
									"begin": 2347,
									"end": 2349,
									"name": "PUSH",
									"source": 14,
									"value": "1F"
								},
								{
									"begin": 2335,
									"end": 2345,
									"name": "DUP6",
									"source": 14
								},
								{
									"begin": 2331,
									"end": 2350,
									"name": "ADD",
									"source": 14
								},
								{
									"begin": 2328,
									"end": 2329,
									"name": "PUSH",
									"source": 14,
									"value": "5"
								},
								{
									"begin": 2324,
									"end": 2351,
									"name": "SHR",
									"source": 14
								},
								{
									"begin": 2318,
									"end": 2322,
									"name": "DUP2",
									"source": 14
								},
								{
									"begin": 2314,
									"end": 2352,
									"name": "ADD",
									"source": 14
								},
								{
									"begin": 2383,
									"end": 2387,
									"name": "PUSH",
									"source": 14,
									"value": "20"
								},
								{
									"begin": 2371,
									"end": 2381,
									"name": "DUP7",
									"source": 14
								},
								{
									"begin": 2368,
									"end": 2388,
									"name": "LT",
									"source": 14
								},
								{
									"begin": 2365,
									"end": 2412,
									"name": "ISZERO",
									"source": 14
								},
								{
									"begin": 2365,
									"end": 2412,
									"name": "PUSH [tag]",
									"source": 14,
									"value": "40"
								},
								{
									"begin": 2365,
									"end": 2412,
									"name": "JUMPI",
									"source": 14
								},
								{
									"begin": -1,
									"end": -1,
									"name": "POP",
									"source": -1
								},
								{
									"begin": 2406,
									"end": 2410,
									"name": "DUP1",
									"source": 14
								},
								{
									"begin": 2365,
									"end": 2412,
									"name": "tag",
									"source": 14,
									"value": "40"
								},
								{
									"begin": 2365,
									"end": 2412,
									"name": "JUMPDEST",
									"source": 14
								},
								{
									"begin": 2461,
									"end": 2463,
									"name": "PUSH",
									"source": 14,
									"value": "1F"
								},
								{
									"begin": 2456,
									"end": 2459,
									"name": "DUP6",
									"source": 14
								},
								{
									"begin": 2452,
									"end": 2464,
									"name": "ADD",
									"source": 14
								},
								{
									"begin": 2449,
									"end": 2450,
									"name": "PUSH",
									"source": 14,
									"value": "5"
								},
								{
									"begin": 2445,
									"end": 2465,
									"name": "SHR",
									"source": 14
								},
								{
									"begin": 2439,
									"end": 2443,
									"name": "DUP3",
									"source": 14
								},
								{
									"begin": 2435,
									"end": 2466,
									"name": "ADD",
									"source": 14
								},
								{
									"begin": 2425,
									"end": 2466,
									"name": "SWAP2",
									"source": 14
								},
								{
									"begin": 2425,
									"end": 2466,
									"name": "POP",
									"source": 14
								},
								{
									"begin": 2516,
									"end": 2598,
									"name": "tag",
									"source": 14,
									"value": "41"
								},
								{
									"begin": 2516,
									"end": 2598,
									"name": "JUMPDEST",
									"source": 14
								},
								{
									"begin": 2534,
									"end": 2536,
									"name": "DUP2",
									"source": 14
								},
								{
									"begin": 2527,
									"end": 2532,
									"name": "DUP2",
									"source": 14
								},
								{
									"begin": 2524,
									"end": 2537,
									"name": "LT",
									"source": 14
								},
								{
									"begin": 2516,
									"end": 2598,
									"name": "ISZERO",
									"source": 14
								},
								{
									"begin": 2516,
									"end": 2598,
									"name": "PUSH [tag]",
									"source": 14,
									"value": "43"
								},
								{
									"begin": 2516,
									"end": 2598,
									"name": "JUMPI",
									"source": 14
								},
								{
									"begin": 2579,
									"end": 2596,
									"name": "DUP3",
									"source": 14
								},
								{
									"begin": 2579,
									"end": 2596,
									"name": "DUP2",
									"source": 14
								},
								{
									"begin": 2579,
									"end": 2596,
									"name": "SSTORE",
									"source": 14
								},
								{
									"begin": 2560,
									"end": 2561,
									"name": "PUSH",
									"source": 14,
									"value": "1"
								},
								{
									"begin": 2549,
									"end": 2562,
									"name": "ADD",
									"source": 14
								},
								{
									"begin": 2516,
									"end": 2598,
									"name": "PUSH [tag]",
									"source": 14,
									"value": "41"
								},
								{
									"begin": 2516,
									"end": 2598,
									"name": "JUMP",
									"source": 14
								},
								{
									"begin": 2516,
									"end": 2598,
									"name": "tag",
									"source": 14,
									"value": "43"
								},
								{
									"begin": 2516,
									"end": 2598,
									"name": "JUMPDEST",
									"source": 14
								},
								{
									"begin": 2520,
									"end": 2523,
									"name": "POP",
									"source": 14
								},
								{
									"begin": 2520,
									"end": 2523,
									"name": "POP",
									"source": 14
								},
								{
									"begin": 2520,
									"end": 2523,
									"name": "POP",
									"source": 14
								},
								{
									"begin": 2160,
									"end": 2608,
									"name": "tag",
									"source": 14,
									"value": "39"
								},
								{
									"begin": 2160,
									"end": 2608,
									"name": "JUMPDEST",
									"source": 14
								},
								{
									"begin": 2069,
									"end": 2614,
									"name": "POP",
									"source": 14
								},
								{
									"begin": 2069,
									"end": 2614,
									"name": "POP",
									"source": 14
								},
								{
									"begin": 2069,
									"end": 2614,
									"name": "POP",
									"source": 14
								},
								{
									"begin": 2069,
									"end": 2614,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 14
								},
								{
									"begin": 2790,
									"end": 4142,
									"name": "tag",
									"source": 14,
									"value": "7"
								},
								{
									"begin": 2790,
									"end": 4142,
									"name": "JUMPDEST",
									"source": 14
								},
								{
									"begin": 2910,
									"end": 2920,
									"name": "DUP2",
									"source": 14
								},
								{
									"begin": 2910,
									"end": 2920,
									"name": "MLOAD",
									"source": 14
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "1"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "1"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "40"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SHL",
									"source": -1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SUB",
									"source": -1
								},
								{
									"begin": 2932,
									"end": 2962,
									"name": "DUP2",
									"source": 14
								},
								{
									"begin": 2932,
									"end": 2962,
									"name": "GT",
									"source": 14
								},
								{
									"begin": 2929,
									"end": 2985,
									"name": "ISZERO",
									"source": 14
								},
								{
									"begin": 2929,
									"end": 2985,
									"name": "PUSH [tag]",
									"source": 14,
									"value": "47"
								},
								{
									"begin": 2929,
									"end": 2985,
									"name": "JUMPI",
									"source": 14
								},
								{
									"begin": 2965,
									"end": 2983,
									"name": "PUSH [tag]",
									"source": 14,
									"value": "47"
								},
								{
									"begin": 2965,
									"end": 2983,
									"name": "PUSH [tag]",
									"source": 14,
									"value": "10"
								},
								{
									"begin": 2965,
									"end": 2983,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 14
								},
								{
									"begin": 2965,
									"end": 2983,
									"name": "tag",
									"source": 14,
									"value": "47"
								},
								{
									"begin": 2965,
									"end": 2983,
									"name": "JUMPDEST",
									"source": 14
								},
								{
									"begin": 2994,
									"end": 3091,
									"name": "PUSH [tag]",
									"source": 14,
									"value": "48"
								},
								{
									"begin": 3084,
									"end": 3090,
									"name": "DUP2",
									"source": 14
								},
								{
									"begin": 3044,
									"end": 3082,
									"name": "PUSH [tag]",
									"source": 14,
									"value": "49"
								},
								{
									"begin": 3076,
									"end": 3080,
									"name": "DUP5",
									"source": 14
								},
								{
									"begin": 3070,
									"end": 3081,
									"name": "SLOAD",
									"source": 14
								},
								{
									"begin": 3044,
									"end": 3082,
									"name": "PUSH [tag]",
									"source": 14,
									"value": "12"
								},
								{
									"begin": 3044,
									"end": 3082,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 14
								},
								{
									"begin": 3044,
									"end": 3082,
									"name": "tag",
									"source": 14,
									"value": "49"
								},
								{
									"begin": 3044,
									"end": 3082,
									"name": "JUMPDEST",
									"source": 14
								},
								{
									"begin": 3038,
									"end": 3042,
									"name": "DUP5",
									"source": 14
								},
								{
									"begin": 2994,
									"end": 3091,
									"name": "PUSH [tag]",
									"source": 14,
									"value": "14"
								},
								{
									"begin": 2994,
									"end": 3091,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 14
								},
								{
									"begin": 2994,
									"end": 3091,
									"name": "tag",
									"source": 14,
									"value": "48"
								},
								{
									"begin": 2994,
									"end": 3091,
									"name": "JUMPDEST",
									"source": 14
								},
								{
									"begin": 3146,
									"end": 3150,
									"name": "PUSH",
									"source": 14,
									"value": "20"
								},
								{
									"begin": 3146,
									"end": 3150,
									"name": "DUP1",
									"source": 14
								},
								{
									"begin": 3210,
									"end": 3212,
									"name": "PUSH",
									"source": 14,
									"value": "1F"
								},
								{
									"begin": 3199,
									"end": 3213,
									"name": "DUP4",
									"source": 14
								},
								{
									"begin": 3199,
									"end": 3213,
									"name": "GT",
									"source": 14
								},
								{
									"begin": 3227,
									"end": 3228,
									"name": "PUSH",
									"source": 14,
									"value": "1"
								},
								{
									"begin": 3222,
									"end": 3885,
									"name": "DUP2",
									"source": 14
								},
								{
									"begin": 3222,
									"end": 3885,
									"name": "EQ",
									"source": 14
								},
								{
									"begin": 3222,
									"end": 3885,
									"name": "PUSH [tag]",
									"source": 14,
									"value": "51"
								},
								{
									"begin": 3222,
									"end": 3885,
									"name": "JUMPI",
									"source": 14
								},
								{
									"begin": 3929,
									"end": 3930,
									"name": "PUSH",
									"source": 14,
									"value": "0"
								},
								{
									"begin": 3946,
									"end": 3952,
									"name": "DUP5",
									"source": 14
								},
								{
									"begin": 3943,
									"end": 4032,
									"name": "ISZERO",
									"source": 14
								},
								{
									"begin": 3943,
									"end": 4032,
									"name": "PUSH [tag]",
									"source": 14,
									"value": "52"
								},
								{
									"begin": 3943,
									"end": 4032,
									"name": "JUMPI",
									"source": 14
								},
								{
									"begin": -1,
									"end": -1,
									"name": "POP",
									"source": -1
								},
								{
									"begin": 3998,
									"end": 4017,
									"name": "DUP6",
									"source": 14
								},
								{
									"begin": 3998,
									"end": 4017,
									"name": "DUP4",
									"source": 14
								},
								{
									"begin": 3998,
									"end": 4017,
									"name": "ADD",
									"source": 14
								},
								{
									"begin": 3992,
									"end": 4018,
									"name": "MLOAD",
									"source": 14
								},
								{
									"begin": 3943,
									"end": 4032,
									"name": "tag",
									"source": 14,
									"value": "52"
								},
								{
									"begin": 3943,
									"end": 4032,
									"name": "JUMPDEST",
									"source": 14
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "0"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "NOT",
									"source": -1
								},
								{
									"begin": 2747,
									"end": 2748,
									"name": "PUSH",
									"source": 14,
									"value": "3"
								},
								{
									"begin": 2743,
									"end": 2754,
									"name": "DUP7",
									"source": 14
								},
								{
									"begin": 2743,
									"end": 2754,
									"name": "SWAP1",
									"source": 14
								},
								{
									"begin": 2743,
									"end": 2754,
									"name": "SHL",
									"source": 14
								},
								{
									"begin": 2739,
									"end": 2763,
									"name": "SHR",
									"source": 14
								},
								{
									"begin": 2735,
									"end": 2764,
									"name": "NOT",
									"source": 14
								},
								{
									"begin": 2725,
									"end": 2765,
									"name": "AND",
									"source": 14
								},
								{
									"begin": 2771,
									"end": 2772,
									"name": "PUSH",
									"source": 14,
									"value": "1"
								},
								{
									"begin": 2767,
									"end": 2778,
									"name": "DUP6",
									"source": 14
								},
								{
									"begin": 2767,
									"end": 2778,
									"name": "SWAP1",
									"source": 14
								},
								{
									"begin": 2767,
									"end": 2778,
									"name": "SHL",
									"source": 14
								},
								{
									"begin": 2722,
									"end": 2779,
									"name": "OR",
									"source": 14
								},
								{
									"begin": 4045,
									"end": 4126,
									"name": "DUP6",
									"source": 14
								},
								{
									"begin": 4045,
									"end": 4126,
									"name": "SSTORE",
									"source": 14
								},
								{
									"begin": 3192,
									"end": 4136,
									"name": "PUSH [tag]",
									"source": 14,
									"value": "43"
								},
								{
									"begin": 3192,
									"end": 4136,
									"name": "JUMP",
									"source": 14
								},
								{
									"begin": 3222,
									"end": 3885,
									"name": "tag",
									"source": 14,
									"value": "51"
								},
								{
									"begin": 3222,
									"end": 3885,
									"name": "JUMPDEST",
									"source": 14
								},
								{
									"begin": 2016,
									"end": 2017,
									"name": "PUSH",
									"source": 14,
									"value": "0"
								},
								{
									"begin": 2009,
									"end": 2023,
									"name": "DUP6",
									"source": 14
								},
								{
									"begin": 2009,
									"end": 2023,
									"name": "DUP2",
									"source": 14
								},
								{
									"begin": 2009,
									"end": 2023,
									"name": "MSTORE",
									"source": 14
								},
								{
									"begin": 2053,
									"end": 2057,
									"name": "PUSH",
									"source": 14,
									"value": "20"
								},
								{
									"begin": 2040,
									"end": 2058,
									"name": "DUP2",
									"source": 14
								},
								{
									"begin": 2040,
									"end": 2058,
									"name": "KECCAK256",
									"source": 14
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "1F"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "NOT",
									"source": -1
								},
								{
									"begin": 3258,
									"end": 3278,
									"name": "DUP7",
									"source": 14
								},
								{
									"begin": 3258,
									"end": 3278,
									"name": "AND",
									"source": 14
								},
								{
									"begin": 3258,
									"end": 3278,
									"name": "SWAP2",
									"source": 14
								},
								{
									"begin": 3376,
									"end": 3612,
									"name": "tag",
									"source": 14,
									"value": "55"
								},
								{
									"begin": 3376,
									"end": 3612,
									"name": "JUMPDEST",
									"source": 14
								},
								{
									"begin": 3390,
									"end": 3397,
									"name": "DUP3",
									"source": 14
								},
								{
									"begin": 3387,
									"end": 3388,
									"name": "DUP2",
									"source": 14
								},
								{
									"begin": 3384,
									"end": 3398,
									"name": "LT",
									"source": 14
								},
								{
									"begin": 3376,
									"end": 3612,
									"name": "ISZERO",
									"source": 14
								},
								{
									"begin": 3376,
									"end": 3612,
									"name": "PUSH [tag]",
									"source": 14,
									"value": "57"
								},
								{
									"begin": 3376,
									"end": 3612,
									"name": "JUMPI",
									"source": 14
								},
								{
									"begin": 3479,
									"end": 3498,
									"name": "DUP9",
									"source": 14
								},
								{
									"begin": 3479,
									"end": 3498,
									"name": "DUP7",
									"source": 14
								},
								{
									"begin": 3479,
									"end": 3498,
									"name": "ADD",
									"source": 14
								},
								{
									"begin": 3473,
									"end": 3499,
									"name": "MLOAD",
									"source": 14
								},
								{
									"begin": 3458,
									"end": 3500,
									"name": "DUP3",
									"source": 14
								},
								{
									"begin": 3458,
									"end": 3500,
									"name": "SSTORE",
									"source": 14
								},
								{
									"begin": 3571,
									"end": 3598,
									"name": "SWAP5",
									"source": 14
								},
								{
									"begin": 3571,
									"end": 3598,
									"name": "DUP5",
									"source": 14
								},
								{
									"begin": 3571,
									"end": 3598,
									"name": "ADD",
									"source": 14
								},
								{
									"begin": 3571,
									"end": 3598,
									"name": "SWAP5",
									"source": 14
								},
								{
									"begin": 3539,
									"end": 3540,
									"name": "PUSH",
									"source": 14,
									"value": "1"
								},
								{
									"begin": 3527,
									"end": 3541,
									"name": "SWAP1",
									"source": 14
								},
								{
									"begin": 3527,
									"end": 3541,
									"name": "SWAP2",
									"source": 14
								},
								{
									"begin": 3527,
									"end": 3541,
									"name": "ADD",
									"source": 14
								},
								{
									"begin": 3527,
									"end": 3541,
									"name": "SWAP1",
									"source": 14
								},
								{
									"begin": 3406,
									"end": 3425,
									"name": "DUP5",
									"source": 14
								},
								{
									"begin": 3406,
									"end": 3425,
									"name": "ADD",
									"source": 14
								},
								{
									"begin": 3376,
									"end": 3612,
									"name": "PUSH [tag]",
									"source": 14,
									"value": "55"
								},
								{
									"begin": 3376,
									"end": 3612,
									"name": "JUMP",
									"source": 14
								},
								{
									"begin": 3376,
									"end": 3612,
									"name": "tag",
									"source": 14,
									"value": "57"
								},
								{
									"begin": 3376,
									"end": 3612,
									"name": "JUMPDEST",
									"source": 14
								},
								{
									"begin": 3380,
									"end": 3383,
									"name": "POP",
									"source": 14
								},
								{
									"begin": 3640,
									"end": 3646,
									"name": "DUP6",
									"source": 14
								},
								{
									"begin": 3631,
									"end": 3638,
									"name": "DUP3",
									"source": 14
								},
								{
									"begin": 3628,
									"end": 3647,
									"name": "LT",
									"source": 14
								},
								{
									"begin": 3625,
									"end": 3826,
									"name": "ISZERO",
									"source": 14
								},
								{
									"begin": 3625,
									"end": 3826,
									"name": "PUSH [tag]",
									"source": 14,
									"value": "58"
								},
								{
									"begin": 3625,
									"end": 3826,
									"name": "JUMPI",
									"source": 14
								},
								{
									"begin": 3701,
									"end": 3720,
									"name": "DUP8",
									"source": 14
								},
								{
									"begin": 3701,
									"end": 3720,
									"name": "DUP6",
									"source": 14
								},
								{
									"begin": 3701,
									"end": 3720,
									"name": "ADD",
									"source": 14
								},
								{
									"begin": 3695,
									"end": 3721,
									"name": "MLOAD",
									"source": 14
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "0"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "NOT",
									"source": -1
								},
								{
									"begin": 3784,
									"end": 3785,
									"name": "PUSH",
									"source": 14,
									"value": "3"
								},
								{
									"begin": 3780,
									"end": 3794,
									"name": "DUP9",
									"source": 14
								},
								{
									"begin": 3780,
									"end": 3794,
									"name": "SWAP1",
									"source": 14
								},
								{
									"begin": 3780,
									"end": 3794,
									"name": "SHL",
									"source": 14
								},
								{
									"begin": 3796,
									"end": 3799,
									"name": "PUSH",
									"source": 14,
									"value": "F8"
								},
								{
									"begin": 3776,
									"end": 3800,
									"name": "AND",
									"source": 14
								},
								{
									"begin": 3772,
									"end": 3809,
									"name": "SHR",
									"source": 14
								},
								{
									"begin": 3768,
									"end": 3810,
									"name": "NOT",
									"source": 14
								},
								{
									"begin": 3753,
									"end": 3811,
									"name": "AND",
									"source": 14
								},
								{
									"begin": 3738,
									"end": 3812,
									"name": "DUP2",
									"source": 14
								},
								{
									"begin": 3738,
									"end": 3812,
									"name": "SSTORE",
									"source": 14
								},
								{
									"begin": 3625,
									"end": 3826,
									"name": "tag",
									"source": 14,
									"value": "58"
								},
								{
									"begin": 3625,
									"end": 3826,
									"name": "JUMPDEST",
									"source": 14
								},
								{
									"begin": -1,
									"end": -1,
									"name": "POP",
									"source": -1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "POP",
									"source": -1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "POP",
									"source": -1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "POP",
									"source": -1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "POP",
									"source": -1
								},
								{
									"begin": 3872,
									"end": 3873,
									"name": "PUSH",
									"source": 14,
									"value": "1"
								},
								{
									"begin": 3856,
									"end": 3870,
									"name": "SWAP1",
									"source": 14
								},
								{
									"begin": 3856,
									"end": 3870,
									"name": "DUP2",
									"source": 14
								},
								{
									"begin": 3856,
									"end": 3870,
									"name": "SHL",
									"source": 14
								},
								{
									"begin": 3852,
									"end": 3874,
									"name": "ADD",
									"source": 14
								},
								{
									"begin": 3839,
									"end": 3875,
									"name": "SWAP1",
									"source": 14
								},
								{
									"begin": 3839,
									"end": 3875,
									"name": "SSTORE",
									"source": 14
								},
								{
									"begin": -1,
									"end": -1,
									"name": "POP",
									"source": -1
								},
								{
									"begin": 2790,
									"end": 4142,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 14
								},
								{
									"begin": 2790,
									"end": 4142,
									"name": "tag",
									"source": 14,
									"value": "16"
								},
								{
									"begin": 2790,
									"end": 4142,
									"name": "JUMPDEST",
									"source": 14
								},
								{
									"begin": 628,
									"end": 16955,
									"name": "PUSH #[$]",
									"source": 2,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 628,
									"end": 16955,
									"name": "DUP1",
									"source": 2
								},
								{
									"begin": 628,
									"end": 16955,
									"name": "PUSH [$]",
									"source": 2,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 628,
									"end": 16955,
									"name": "PUSH",
									"source": 2,
									"value": "0"
								},
								{
									"begin": 628,
									"end": 16955,
									"name": "CODECOPY",
									"source": 2
								},
								{
									"begin": 628,
									"end": 16955,
									"name": "PUSH",
									"source": 2,
									"value": "0"
								},
								{
									"begin": 628,
									"end": 16955,
									"name": "RETURN",
									"source": 2
								}
							],
							".data": {
								"0": {
									".auxdata": "a26469706673582212208668b10ade2ce4e39acc044f7dbefc7edadaae5a1fbb762e25bf9b747808bb8464736f6c63430008150033",
									".code": [
										{
											"begin": 628,
											"end": 16955,
											"name": "PUSH",
											"source": 2,
											"value": "80"
										},
										{
											"begin": 628,
											"end": 16955,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 628,
											"end": 16955,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 628,
											"end": 16955,
											"name": "CALLVALUE",
											"source": 2
										},
										{
											"begin": 628,
											"end": 16955,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 628,
											"end": 16955,
											"name": "ISZERO",
											"source": 2
										},
										{
											"begin": 628,
											"end": 16955,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "1"
										},
										{
											"begin": 628,
											"end": 16955,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 628,
											"end": 16955,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 628,
											"end": 16955,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 628,
											"end": 16955,
											"name": "REVERT",
											"source": 2
										},
										{
											"begin": 628,
											"end": 16955,
											"name": "tag",
											"source": 2,
											"value": "1"
										},
										{
											"begin": 628,
											"end": 16955,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 628,
											"end": 16955,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 628,
											"end": 16955,
											"name": "PUSH",
											"source": 2,
											"value": "4"
										},
										{
											"begin": 628,
											"end": 16955,
											"name": "CALLDATASIZE",
											"source": 2
										},
										{
											"begin": 628,
											"end": 16955,
											"name": "LT",
											"source": 2
										},
										{
											"begin": 628,
											"end": 16955,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "2"
										},
										{
											"begin": 628,
											"end": 16955,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 628,
											"end": 16955,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 628,
											"end": 16955,
											"name": "CALLDATALOAD",
											"source": 2
										},
										{
											"begin": 628,
											"end": 16955,
											"name": "PUSH",
											"source": 2,
											"value": "E0"
										},
										{
											"begin": 628,
											"end": 16955,
											"name": "SHR",
											"source": 2
										},
										{
											"begin": 628,
											"end": 16955,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 628,
											"end": 16955,
											"name": "PUSH",
											"source": 2,
											"value": "6352211E"
										},
										{
											"begin": 628,
											"end": 16955,
											"name": "GT",
											"source": 2
										},
										{
											"begin": 628,
											"end": 16955,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "16"
										},
										{
											"begin": 628,
											"end": 16955,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 628,
											"end": 16955,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 628,
											"end": 16955,
											"name": "PUSH",
											"source": 2,
											"value": "A22CB465"
										},
										{
											"begin": 628,
											"end": 16955,
											"name": "GT",
											"source": 2
										},
										{
											"begin": 628,
											"end": 16955,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "17"
										},
										{
											"begin": 628,
											"end": 16955,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 628,
											"end": 16955,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 628,
											"end": 16955,
											"name": "PUSH",
											"source": 2,
											"value": "A22CB465"
										},
										{
											"begin": 628,
											"end": 16955,
											"name": "EQ",
											"source": 2
										},
										{
											"begin": 628,
											"end": 16955,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "12"
										},
										{
											"begin": 628,
											"end": 16955,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 628,
											"end": 16955,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 628,
											"end": 16955,
											"name": "PUSH",
											"source": 2,
											"value": "B88D4FDE"
										},
										{
											"begin": 628,
											"end": 16955,
											"name": "EQ",
											"source": 2
										},
										{
											"begin": 628,
											"end": 16955,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "13"
										},
										{
											"begin": 628,
											"end": 16955,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 628,
											"end": 16955,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 628,
											"end": 16955,
											"name": "PUSH",
											"source": 2,
											"value": "C87B56DD"
										},
										{
											"begin": 628,
											"end": 16955,
											"name": "EQ",
											"source": 2
										},
										{
											"begin": 628,
											"end": 16955,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "14"
										},
										{
											"begin": 628,
											"end": 16955,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 628,
											"end": 16955,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 628,
											"end": 16955,
											"name": "PUSH",
											"source": 2,
											"value": "E985E9C5"
										},
										{
											"begin": 628,
											"end": 16955,
											"name": "EQ",
											"source": 2
										},
										{
											"begin": 628,
											"end": 16955,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "15"
										},
										{
											"begin": 628,
											"end": 16955,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 628,
											"end": 16955,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 628,
											"end": 16955,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 628,
											"end": 16955,
											"name": "REVERT",
											"source": 2
										},
										{
											"begin": 628,
											"end": 16955,
											"name": "tag",
											"source": 2,
											"value": "17"
										},
										{
											"begin": 628,
											"end": 16955,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 628,
											"end": 16955,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 628,
											"end": 16955,
											"name": "PUSH",
											"source": 2,
											"value": "6352211E"
										},
										{
											"begin": 628,
											"end": 16955,
											"name": "EQ",
											"source": 2
										},
										{
											"begin": 628,
											"end": 16955,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "9"
										},
										{
											"begin": 628,
											"end": 16955,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 628,
											"end": 16955,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 628,
											"end": 16955,
											"name": "PUSH",
											"source": 2,
											"value": "70A08231"
										},
										{
											"begin": 628,
											"end": 16955,
											"name": "EQ",
											"source": 2
										},
										{
											"begin": 628,
											"end": 16955,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "10"
										},
										{
											"begin": 628,
											"end": 16955,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 628,
											"end": 16955,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 628,
											"end": 16955,
											"name": "PUSH",
											"source": 2,
											"value": "95D89B41"
										},
										{
											"begin": 628,
											"end": 16955,
											"name": "EQ",
											"source": 2
										},
										{
											"begin": 628,
											"end": 16955,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "11"
										},
										{
											"begin": 628,
											"end": 16955,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 628,
											"end": 16955,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 628,
											"end": 16955,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 628,
											"end": 16955,
											"name": "REVERT",
											"source": 2
										},
										{
											"begin": 628,
											"end": 16955,
											"name": "tag",
											"source": 2,
											"value": "16"
										},
										{
											"begin": 628,
											"end": 16955,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 628,
											"end": 16955,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 628,
											"end": 16955,
											"name": "PUSH",
											"source": 2,
											"value": "1FFC9A7"
										},
										{
											"begin": 628,
											"end": 16955,
											"name": "EQ",
											"source": 2
										},
										{
											"begin": 628,
											"end": 16955,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "3"
										},
										{
											"begin": 628,
											"end": 16955,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 628,
											"end": 16955,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 628,
											"end": 16955,
											"name": "PUSH",
											"source": 2,
											"value": "6FDDE03"
										},
										{
											"begin": 628,
											"end": 16955,
											"name": "EQ",
											"source": 2
										},
										{
											"begin": 628,
											"end": 16955,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "4"
										},
										{
											"begin": 628,
											"end": 16955,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 628,
											"end": 16955,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 628,
											"end": 16955,
											"name": "PUSH",
											"source": 2,
											"value": "81812FC"
										},
										{
											"begin": 628,
											"end": 16955,
											"name": "EQ",
											"source": 2
										},
										{
											"begin": 628,
											"end": 16955,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "5"
										},
										{
											"begin": 628,
											"end": 16955,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 628,
											"end": 16955,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 628,
											"end": 16955,
											"name": "PUSH",
											"source": 2,
											"value": "95EA7B3"
										},
										{
											"begin": 628,
											"end": 16955,
											"name": "EQ",
											"source": 2
										},
										{
											"begin": 628,
											"end": 16955,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "6"
										},
										{
											"begin": 628,
											"end": 16955,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 628,
											"end": 16955,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 628,
											"end": 16955,
											"name": "PUSH",
											"source": 2,
											"value": "23B872DD"
										},
										{
											"begin": 628,
											"end": 16955,
											"name": "EQ",
											"source": 2
										},
										{
											"begin": 628,
											"end": 16955,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "7"
										},
										{
											"begin": 628,
											"end": 16955,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 628,
											"end": 16955,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 628,
											"end": 16955,
											"name": "PUSH",
											"source": 2,
											"value": "42842E0E"
										},
										{
											"begin": 628,
											"end": 16955,
											"name": "EQ",
											"source": 2
										},
										{
											"begin": 628,
											"end": 16955,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "8"
										},
										{
											"begin": 628,
											"end": 16955,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 628,
											"end": 16955,
											"name": "tag",
											"source": 2,
											"value": "2"
										},
										{
											"begin": 628,
											"end": 16955,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 628,
											"end": 16955,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 628,
											"end": 16955,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 628,
											"end": 16955,
											"name": "REVERT",
											"source": 2
										},
										{
											"begin": 1570,
											"end": 1870,
											"name": "tag",
											"source": 2,
											"value": "3"
										},
										{
											"begin": 1570,
											"end": 1870,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 1570,
											"end": 1870,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "18"
										},
										{
											"begin": 1570,
											"end": 1870,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "19"
										},
										{
											"begin": 1570,
											"end": 1870,
											"name": "CALLDATASIZE",
											"source": 2
										},
										{
											"begin": 1570,
											"end": 1870,
											"name": "PUSH",
											"source": 2,
											"value": "4"
										},
										{
											"begin": 1570,
											"end": 1870,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 1570,
											"end": 1870,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 1570,
											"end": 1870,
											"name": "tag",
											"source": 2,
											"value": "19"
										},
										{
											"begin": 1570,
											"end": 1870,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 1570,
											"end": 1870,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "21"
										},
										{
											"begin": 1570,
											"end": 1870,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 1570,
											"end": 1870,
											"name": "tag",
											"source": 2,
											"value": "18"
										},
										{
											"begin": 1570,
											"end": 1870,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 1570,
											"end": 1870,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 1570,
											"end": 1870,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 565,
											"end": 579,
											"name": "SWAP1",
											"source": 14
										},
										{
											"begin": 565,
											"end": 579,
											"name": "ISZERO",
											"source": 14
										},
										{
											"begin": 558,
											"end": 580,
											"name": "ISZERO",
											"source": 14
										},
										{
											"begin": 540,
											"end": 581,
											"name": "DUP2",
											"source": 14
										},
										{
											"begin": 540,
											"end": 581,
											"name": "MSTORE",
											"source": 14
										},
										{
											"begin": 528,
											"end": 530,
											"name": "PUSH",
											"source": 14,
											"value": "20"
										},
										{
											"begin": 513,
											"end": 531,
											"name": "ADD",
											"source": 14
										},
										{
											"begin": 1570,
											"end": 1870,
											"name": "tag",
											"source": 2,
											"value": "22"
										},
										{
											"begin": 1570,
											"end": 1870,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 1570,
											"end": 1870,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 1570,
											"end": 1870,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 1570,
											"end": 1870,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 1570,
											"end": 1870,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 1570,
											"end": 1870,
											"name": "SUB",
											"source": 2
										},
										{
											"begin": 1570,
											"end": 1870,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 1570,
											"end": 1870,
											"name": "RETURN",
											"source": 2
										},
										{
											"begin": 2471,
											"end": 2569,
											"name": "tag",
											"source": 2,
											"value": "4"
										},
										{
											"begin": 2471,
											"end": 2569,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 2471,
											"end": 2569,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "24"
										},
										{
											"begin": 2471,
											"end": 2569,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "25"
										},
										{
											"begin": 2471,
											"end": 2569,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 2471,
											"end": 2569,
											"name": "tag",
											"source": 2,
											"value": "24"
										},
										{
											"begin": 2471,
											"end": 2569,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 2471,
											"end": 2569,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 2471,
											"end": 2569,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 2471,
											"end": 2569,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "22"
										},
										{
											"begin": 2471,
											"end": 2569,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 2471,
											"end": 2569,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 2471,
											"end": 2569,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "27"
										},
										{
											"begin": 2471,
											"end": 2569,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 3935,
											"end": 4102,
											"name": "tag",
											"source": 2,
											"value": "5"
										},
										{
											"begin": 3935,
											"end": 4102,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 3935,
											"end": 4102,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "28"
										},
										{
											"begin": 3935,
											"end": 4102,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "29"
										},
										{
											"begin": 3935,
											"end": 4102,
											"name": "CALLDATASIZE",
											"source": 2
										},
										{
											"begin": 3935,
											"end": 4102,
											"name": "PUSH",
											"source": 2,
											"value": "4"
										},
										{
											"begin": 3935,
											"end": 4102,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "30"
										},
										{
											"begin": 3935,
											"end": 4102,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 3935,
											"end": 4102,
											"name": "tag",
											"source": 2,
											"value": "29"
										},
										{
											"begin": 3935,
											"end": 4102,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 3935,
											"end": 4102,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "31"
										},
										{
											"begin": 3935,
											"end": 4102,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 3935,
											"end": 4102,
											"name": "tag",
											"source": 2,
											"value": "28"
										},
										{
											"begin": 3935,
											"end": 4102,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 3935,
											"end": 4102,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 3935,
											"end": 4102,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 1697,
											"end": 1729,
											"name": "SWAP1",
											"source": 14
										},
										{
											"begin": 1697,
											"end": 1729,
											"name": "SWAP2",
											"source": 14
										},
										{
											"begin": 1697,
											"end": 1729,
											"name": "AND",
											"source": 14
										},
										{
											"begin": 1679,
											"end": 1730,
											"name": "DUP2",
											"source": 14
										},
										{
											"begin": 1679,
											"end": 1730,
											"name": "MSTORE",
											"source": 14
										},
										{
											"begin": 1667,
											"end": 1669,
											"name": "PUSH",
											"source": 14,
											"value": "20"
										},
										{
											"begin": 1652,
											"end": 1670,
											"name": "ADD",
											"source": 14
										},
										{
											"begin": 3935,
											"end": 4102,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "22"
										},
										{
											"begin": 1533,
											"end": 1736,
											"name": "JUMP",
											"source": 14
										},
										{
											"begin": 3468,
											"end": 3874,
											"name": "tag",
											"source": 2,
											"value": "6"
										},
										{
											"begin": 3468,
											"end": 3874,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 3468,
											"end": 3874,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "34"
										},
										{
											"begin": 3468,
											"end": 3874,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "35"
										},
										{
											"begin": 3468,
											"end": 3874,
											"name": "CALLDATASIZE",
											"source": 2
										},
										{
											"begin": 3468,
											"end": 3874,
											"name": "PUSH",
											"source": 2,
											"value": "4"
										},
										{
											"begin": 3468,
											"end": 3874,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "36"
										},
										{
											"begin": 3468,
											"end": 3874,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 3468,
											"end": 3874,
											"name": "tag",
											"source": 2,
											"value": "35"
										},
										{
											"begin": 3468,
											"end": 3874,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 3468,
											"end": 3874,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "37"
										},
										{
											"begin": 3468,
											"end": 3874,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 3468,
											"end": 3874,
											"name": "tag",
											"source": 2,
											"value": "34"
										},
										{
											"begin": 3468,
											"end": 3874,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 3468,
											"end": 3874,
											"name": "STOP",
											"source": 2
										},
										{
											"begin": 4612,
											"end": 4938,
											"name": "tag",
											"source": 2,
											"value": "7"
										},
										{
											"begin": 4612,
											"end": 4938,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 4612,
											"end": 4938,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "34"
										},
										{
											"begin": 4612,
											"end": 4938,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "39"
										},
										{
											"begin": 4612,
											"end": 4938,
											"name": "CALLDATASIZE",
											"source": 2
										},
										{
											"begin": 4612,
											"end": 4938,
											"name": "PUSH",
											"source": 2,
											"value": "4"
										},
										{
											"begin": 4612,
											"end": 4938,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 4612,
											"end": 4938,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 4612,
											"end": 4938,
											"name": "tag",
											"source": 2,
											"value": "39"
										},
										{
											"begin": 4612,
											"end": 4938,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 4612,
											"end": 4938,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "41"
										},
										{
											"begin": 4612,
											"end": 4938,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 5004,
											"end": 5183,
											"name": "tag",
											"source": 2,
											"value": "8"
										},
										{
											"begin": 5004,
											"end": 5183,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 5004,
											"end": 5183,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "34"
										},
										{
											"begin": 5004,
											"end": 5183,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "43"
										},
										{
											"begin": 5004,
											"end": 5183,
											"name": "CALLDATASIZE",
											"source": 2
										},
										{
											"begin": 5004,
											"end": 5183,
											"name": "PUSH",
											"source": 2,
											"value": "4"
										},
										{
											"begin": 5004,
											"end": 5183,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 5004,
											"end": 5183,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 5004,
											"end": 5183,
											"name": "tag",
											"source": 2,
											"value": "43"
										},
										{
											"begin": 5004,
											"end": 5183,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 5004,
											"end": 5183,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "44"
										},
										{
											"begin": 5004,
											"end": 5183,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 2190,
											"end": 2409,
											"name": "tag",
											"source": 2,
											"value": "9"
										},
										{
											"begin": 2190,
											"end": 2409,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 2190,
											"end": 2409,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "28"
										},
										{
											"begin": 2190,
											"end": 2409,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "46"
										},
										{
											"begin": 2190,
											"end": 2409,
											"name": "CALLDATASIZE",
											"source": 2
										},
										{
											"begin": 2190,
											"end": 2409,
											"name": "PUSH",
											"source": 2,
											"value": "4"
										},
										{
											"begin": 2190,
											"end": 2409,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "30"
										},
										{
											"begin": 2190,
											"end": 2409,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 2190,
											"end": 2409,
											"name": "tag",
											"source": 2,
											"value": "46"
										},
										{
											"begin": 2190,
											"end": 2409,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 2190,
											"end": 2409,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "47"
										},
										{
											"begin": 2190,
											"end": 2409,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 1929,
											"end": 2133,
											"name": "tag",
											"source": 2,
											"value": "10"
										},
										{
											"begin": 1929,
											"end": 2133,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 1929,
											"end": 2133,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "49"
										},
										{
											"begin": 1929,
											"end": 2133,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "50"
										},
										{
											"begin": 1929,
											"end": 2133,
											"name": "CALLDATASIZE",
											"source": 2
										},
										{
											"begin": 1929,
											"end": 2133,
											"name": "PUSH",
											"source": 2,
											"value": "4"
										},
										{
											"begin": 1929,
											"end": 2133,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "51"
										},
										{
											"begin": 1929,
											"end": 2133,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 1929,
											"end": 2133,
											"name": "tag",
											"source": 2,
											"value": "50"
										},
										{
											"begin": 1929,
											"end": 2133,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 1929,
											"end": 2133,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "52"
										},
										{
											"begin": 1929,
											"end": 2133,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 1929,
											"end": 2133,
											"name": "tag",
											"source": 2,
											"value": "49"
										},
										{
											"begin": 1929,
											"end": 2133,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 1929,
											"end": 2133,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 1929,
											"end": 2133,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 2848,
											"end": 2873,
											"name": "SWAP1",
											"source": 14
										},
										{
											"begin": 2848,
											"end": 2873,
											"name": "DUP2",
											"source": 14
										},
										{
											"begin": 2848,
											"end": 2873,
											"name": "MSTORE",
											"source": 14
										},
										{
											"begin": 2836,
											"end": 2838,
											"name": "PUSH",
											"source": 14,
											"value": "20"
										},
										{
											"begin": 2821,
											"end": 2839,
											"name": "ADD",
											"source": 14
										},
										{
											"begin": 1929,
											"end": 2133,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "22"
										},
										{
											"begin": 2702,
											"end": 2879,
											"name": "JUMP",
											"source": 14
										},
										{
											"begin": 2633,
											"end": 2735,
											"name": "tag",
											"source": 2,
											"value": "11"
										},
										{
											"begin": 2633,
											"end": 2735,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 2633,
											"end": 2735,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "24"
										},
										{
											"begin": 2633,
											"end": 2735,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "56"
										},
										{
											"begin": 2633,
											"end": 2735,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 4169,
											"end": 4322,
											"name": "tag",
											"source": 2,
											"value": "12"
										},
										{
											"begin": 4169,
											"end": 4322,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 4169,
											"end": 4322,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "34"
										},
										{
											"begin": 4169,
											"end": 4322,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "59"
										},
										{
											"begin": 4169,
											"end": 4322,
											"name": "CALLDATASIZE",
											"source": 2
										},
										{
											"begin": 4169,
											"end": 4322,
											"name": "PUSH",
											"source": 2,
											"value": "4"
										},
										{
											"begin": 4169,
											"end": 4322,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "60"
										},
										{
											"begin": 4169,
											"end": 4322,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 4169,
											"end": 4322,
											"name": "tag",
											"source": 2,
											"value": "59"
										},
										{
											"begin": 4169,
											"end": 4322,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 4169,
											"end": 4322,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "61"
										},
										{
											"begin": 4169,
											"end": 4322,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 5249,
											"end": 5563,
											"name": "tag",
											"source": 2,
											"value": "13"
										},
										{
											"begin": 5249,
											"end": 5563,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 5249,
											"end": 5563,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "34"
										},
										{
											"begin": 5249,
											"end": 5563,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "63"
										},
										{
											"begin": 5249,
											"end": 5563,
											"name": "CALLDATASIZE",
											"source": 2
										},
										{
											"begin": 5249,
											"end": 5563,
											"name": "PUSH",
											"source": 2,
											"value": "4"
										},
										{
											"begin": 5249,
											"end": 5563,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "64"
										},
										{
											"begin": 5249,
											"end": 5563,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 5249,
											"end": 5563,
											"name": "tag",
											"source": 2,
											"value": "63"
										},
										{
											"begin": 5249,
											"end": 5563,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 5249,
											"end": 5563,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "65"
										},
										{
											"begin": 5249,
											"end": 5563,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 2801,
											"end": 3077,
											"name": "tag",
											"source": 2,
											"value": "14"
										},
										{
											"begin": 2801,
											"end": 3077,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 2801,
											"end": 3077,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "24"
										},
										{
											"begin": 2801,
											"end": 3077,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "67"
										},
										{
											"begin": 2801,
											"end": 3077,
											"name": "CALLDATASIZE",
											"source": 2
										},
										{
											"begin": 2801,
											"end": 3077,
											"name": "PUSH",
											"source": 2,
											"value": "4"
										},
										{
											"begin": 2801,
											"end": 3077,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "30"
										},
										{
											"begin": 2801,
											"end": 3077,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 2801,
											"end": 3077,
											"name": "tag",
											"source": 2,
											"value": "67"
										},
										{
											"begin": 2801,
											"end": 3077,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 2801,
											"end": 3077,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "68"
										},
										{
											"begin": 2801,
											"end": 3077,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 4388,
											"end": 4550,
											"name": "tag",
											"source": 2,
											"value": "15"
										},
										{
											"begin": 4388,
											"end": 4550,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 4388,
											"end": 4550,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "18"
										},
										{
											"begin": 4388,
											"end": 4550,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "71"
										},
										{
											"begin": 4388,
											"end": 4550,
											"name": "CALLDATASIZE",
											"source": 2
										},
										{
											"begin": 4388,
											"end": 4550,
											"name": "PUSH",
											"source": 2,
											"value": "4"
										},
										{
											"begin": 4388,
											"end": 4550,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "72"
										},
										{
											"begin": 4388,
											"end": 4550,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 4388,
											"end": 4550,
											"name": "tag",
											"source": 2,
											"value": "71"
										},
										{
											"begin": 4388,
											"end": 4550,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 4388,
											"end": 4550,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "73"
										},
										{
											"begin": 4388,
											"end": 4550,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 1570,
											"end": 1870,
											"name": "tag",
											"source": 2,
											"value": "21"
										},
										{
											"begin": 1570,
											"end": 1870,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 1672,
											"end": 1676,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "NOT",
											"source": -1
										},
										{
											"begin": 1707,
											"end": 1747,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 1707,
											"end": 1747,
											"name": "AND",
											"source": 2
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "80AC58CD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 1707,
											"end": 1747,
											"name": "EQ",
											"source": 2
										},
										{
											"begin": 1707,
											"end": 1747,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 1707,
											"end": 1811,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "76"
										},
										{
											"begin": 1707,
											"end": 1811,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "NOT",
											"source": -1
										},
										{
											"begin": 1763,
											"end": 1811,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 1763,
											"end": 1811,
											"name": "AND",
											"source": 2
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "5B5E139F"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 1763,
											"end": 1811,
											"name": "EQ",
											"source": 2
										},
										{
											"begin": 1707,
											"end": 1811,
											"name": "tag",
											"source": 2,
											"value": "76"
										},
										{
											"begin": 1707,
											"end": 1811,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 1707,
											"end": 1863,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 1707,
											"end": 1863,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "78"
										},
										{
											"begin": 1707,
											"end": 1863,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1FFC9A7"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "NOT",
											"source": -1
										},
										{
											"begin": 937,
											"end": 977,
											"name": "DUP4",
											"source": 10
										},
										{
											"begin": 937,
											"end": 977,
											"name": "AND",
											"source": 10
										},
										{
											"begin": 937,
											"end": 977,
											"name": "EQ",
											"source": 10
										},
										{
											"begin": 1827,
											"end": 1863,
											"name": "tag",
											"source": 2,
											"value": "78"
										},
										{
											"begin": 1827,
											"end": 1863,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 1688,
											"end": 1863,
											"name": "SWAP3",
											"source": 2
										},
										{
											"begin": 1570,
											"end": 1870,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 1570,
											"end": 1870,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 2471,
											"end": 2569,
											"name": "tag",
											"source": 2,
											"value": "25"
										},
										{
											"begin": 2471,
											"end": 2569,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 2525,
											"end": 2538,
											"name": "PUSH",
											"source": 2,
											"value": "60"
										},
										{
											"begin": 2557,
											"end": 2562,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 2550,
											"end": 2562,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 2550,
											"end": 2562,
											"name": "SLOAD",
											"source": 2
										},
										{
											"begin": 2550,
											"end": 2562,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "81"
										},
										{
											"begin": 2550,
											"end": 2562,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 2550,
											"end": 2562,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "82"
										},
										{
											"begin": 2550,
											"end": 2562,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 2550,
											"end": 2562,
											"name": "tag",
											"source": 2,
											"value": "81"
										},
										{
											"begin": 2550,
											"end": 2562,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 2550,
											"end": 2562,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 2550,
											"end": 2562,
											"name": "PUSH",
											"source": 2,
											"value": "1F"
										},
										{
											"begin": 2550,
											"end": 2562,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 2550,
											"end": 2562,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 2550,
											"end": 2562,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 2550,
											"end": 2562,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 2550,
											"end": 2562,
											"name": "DIV",
											"source": 2
										},
										{
											"begin": 2550,
											"end": 2562,
											"name": "MUL",
											"source": 2
										},
										{
											"begin": 2550,
											"end": 2562,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 2550,
											"end": 2562,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 2550,
											"end": 2562,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 2550,
											"end": 2562,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 2550,
											"end": 2562,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 2550,
											"end": 2562,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 2550,
											"end": 2562,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 2550,
											"end": 2562,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 2550,
											"end": 2562,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 2550,
											"end": 2562,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 2550,
											"end": 2562,
											"name": "SWAP3",
											"source": 2
										},
										{
											"begin": 2550,
											"end": 2562,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 2550,
											"end": 2562,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 2550,
											"end": 2562,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 2550,
											"end": 2562,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 2550,
											"end": 2562,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 2550,
											"end": 2562,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 2550,
											"end": 2562,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 2550,
											"end": 2562,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 2550,
											"end": 2562,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 2550,
											"end": 2562,
											"name": "SLOAD",
											"source": 2
										},
										{
											"begin": 2550,
											"end": 2562,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "83"
										},
										{
											"begin": 2550,
											"end": 2562,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 2550,
											"end": 2562,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "82"
										},
										{
											"begin": 2550,
											"end": 2562,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 2550,
											"end": 2562,
											"name": "tag",
											"source": 2,
											"value": "83"
										},
										{
											"begin": 2550,
											"end": 2562,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 2550,
											"end": 2562,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 2550,
											"end": 2562,
											"name": "ISZERO",
											"source": 2
										},
										{
											"begin": 2550,
											"end": 2562,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "84"
										},
										{
											"begin": 2550,
											"end": 2562,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 2550,
											"end": 2562,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 2550,
											"end": 2562,
											"name": "PUSH",
											"source": 2,
											"value": "1F"
										},
										{
											"begin": 2550,
											"end": 2562,
											"name": "LT",
											"source": 2
										},
										{
											"begin": 2550,
											"end": 2562,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "85"
										},
										{
											"begin": 2550,
											"end": 2562,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 2550,
											"end": 2562,
											"name": "PUSH",
											"source": 2,
											"value": "100"
										},
										{
											"begin": 2550,
											"end": 2562,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 2550,
											"end": 2562,
											"name": "DUP4",
											"source": 2
										},
										{
											"begin": 2550,
											"end": 2562,
											"name": "SLOAD",
											"source": 2
										},
										{
											"begin": 2550,
											"end": 2562,
											"name": "DIV",
											"source": 2
										},
										{
											"begin": 2550,
											"end": 2562,
											"name": "MUL",
											"source": 2
										},
										{
											"begin": 2550,
											"end": 2562,
											"name": "DUP4",
											"source": 2
										},
										{
											"begin": 2550,
											"end": 2562,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 2550,
											"end": 2562,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 2550,
											"end": 2562,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 2550,
											"end": 2562,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 2550,
											"end": 2562,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 2550,
											"end": 2562,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "84"
										},
										{
											"begin": 2550,
											"end": 2562,
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 2550,
											"end": 2562,
											"name": "tag",
											"source": 2,
											"value": "85"
										},
										{
											"begin": 2550,
											"end": 2562,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 2550,
											"end": 2562,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 2550,
											"end": 2562,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 2550,
											"end": 2562,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 2550,
											"end": 2562,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 2550,
											"end": 2562,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 2550,
											"end": 2562,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 2550,
											"end": 2562,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 2550,
											"end": 2562,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 2550,
											"end": 2562,
											"name": "KECCAK256",
											"source": 2
										},
										{
											"begin": 2550,
											"end": 2562,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 2550,
											"end": 2562,
											"name": "tag",
											"source": 2,
											"value": "86"
										},
										{
											"begin": 2550,
											"end": 2562,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 2550,
											"end": 2562,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 2550,
											"end": 2562,
											"name": "SLOAD",
											"source": 2
										},
										{
											"begin": 2550,
											"end": 2562,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 2550,
											"end": 2562,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 2550,
											"end": 2562,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 2550,
											"end": 2562,
											"name": "PUSH",
											"source": 2,
											"value": "1"
										},
										{
											"begin": 2550,
											"end": 2562,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 2550,
											"end": 2562,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 2550,
											"end": 2562,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 2550,
											"end": 2562,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 2550,
											"end": 2562,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 2550,
											"end": 2562,
											"name": "DUP4",
											"source": 2
										},
										{
											"begin": 2550,
											"end": 2562,
											"name": "GT",
											"source": 2
										},
										{
											"begin": 2550,
											"end": 2562,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "86"
										},
										{
											"begin": 2550,
											"end": 2562,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 2550,
											"end": 2562,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 2550,
											"end": 2562,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 2550,
											"end": 2562,
											"name": "SUB",
											"source": 2
										},
										{
											"begin": 2550,
											"end": 2562,
											"name": "PUSH",
											"source": 2,
											"value": "1F"
										},
										{
											"begin": 2550,
											"end": 2562,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 2550,
											"end": 2562,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 2550,
											"end": 2562,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 2550,
											"end": 2562,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 2550,
											"end": 2562,
											"name": "tag",
											"source": 2,
											"value": "84"
										},
										{
											"begin": 2550,
											"end": 2562,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 2550,
											"end": 2562,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 2550,
											"end": 2562,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 2550,
											"end": 2562,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 2550,
											"end": 2562,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 2550,
											"end": 2562,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 2550,
											"end": 2562,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 2550,
											"end": 2562,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 2471,
											"end": 2569,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 2471,
											"end": 2569,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 3935,
											"end": 4102,
											"name": "tag",
											"source": 2,
											"value": "31"
										},
										{
											"begin": 3935,
											"end": 4102,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 4011,
											"end": 4018,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 4030,
											"end": 4053,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "88"
										},
										{
											"begin": 4045,
											"end": 4052,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 4030,
											"end": 4044,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "89"
										},
										{
											"begin": 4030,
											"end": 4053,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 4030,
											"end": 4053,
											"name": "tag",
											"source": 2,
											"value": "88"
										},
										{
											"begin": 4030,
											"end": 4053,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 4071,
											"end": 4095,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 4071,
											"end": 4095,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 4071,
											"end": 4095,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 4071,
											"end": 4095,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 4071,
											"end": 4086,
											"name": "PUSH",
											"source": 2,
											"value": "4"
										},
										{
											"begin": 4071,
											"end": 4095,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 4071,
											"end": 4095,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 4071,
											"end": 4095,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 4071,
											"end": 4095,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 4071,
											"end": 4095,
											"name": "KECCAK256",
											"source": 2
										},
										{
											"begin": 4071,
											"end": 4095,
											"name": "SLOAD",
											"source": 2
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 4071,
											"end": 4095,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 4071,
											"end": 4095,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 3935,
											"end": 4102,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 3468,
											"end": 3874,
											"name": "tag",
											"source": 2,
											"value": "37"
										},
										{
											"begin": 3468,
											"end": 3874,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 3548,
											"end": 3561,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 3564,
											"end": 3587,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "91"
										},
										{
											"begin": 3579,
											"end": 3586,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 3564,
											"end": 3578,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "47"
										},
										{
											"begin": 3564,
											"end": 3587,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 3564,
											"end": 3587,
											"name": "tag",
											"source": 2,
											"value": "91"
										},
										{
											"begin": 3564,
											"end": 3587,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 3548,
											"end": 3587,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 3548,
											"end": 3587,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 3611,
											"end": 3616,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 3605,
											"end": 3616,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 3605,
											"end": 3607,
											"name": "DUP4",
											"source": 2
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 3605,
											"end": 3616,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 3605,
											"end": 3616,
											"name": "SUB",
											"source": 2
										},
										{
											"begin": 3597,
											"end": 3654,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "92"
										},
										{
											"begin": 3597,
											"end": 3654,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 3597,
											"end": 3654,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 3597,
											"end": 3654,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "461BCD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E5"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 3597,
											"end": 3654,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 3597,
											"end": 3654,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 5363,
											"end": 5365,
											"name": "PUSH",
											"source": 14,
											"value": "20"
										},
										{
											"begin": 3597,
											"end": 3654,
											"name": "PUSH",
											"source": 2,
											"value": "4"
										},
										{
											"begin": 3597,
											"end": 3654,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 3597,
											"end": 3654,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 5345,
											"end": 5366,
											"name": "MSTORE",
											"source": 14
										},
										{
											"begin": 5402,
											"end": 5404,
											"name": "PUSH",
											"source": 14,
											"value": "21"
										},
										{
											"begin": 5382,
											"end": 5400,
											"name": "PUSH",
											"source": 14,
											"value": "24"
										},
										{
											"begin": 5382,
											"end": 5400,
											"name": "DUP3",
											"source": 14
										},
										{
											"begin": 5382,
											"end": 5400,
											"name": "ADD",
											"source": 14
										},
										{
											"begin": 5375,
											"end": 5405,
											"name": "MSTORE",
											"source": 14
										},
										{
											"begin": 5441,
											"end": 5475,
											"name": "PUSH",
											"source": 14,
											"value": "4552433732313A20617070726F76616C20746F2063757272656E74206F776E65"
										},
										{
											"begin": 5421,
											"end": 5439,
											"name": "PUSH",
											"source": 14,
											"value": "44"
										},
										{
											"begin": 5421,
											"end": 5439,
											"name": "DUP3",
											"source": 14
										},
										{
											"begin": 5421,
											"end": 5439,
											"name": "ADD",
											"source": 14
										},
										{
											"begin": 5414,
											"end": 5476,
											"name": "MSTORE",
											"source": 14
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "39"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "F9"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 5492,
											"end": 5510,
											"name": "PUSH",
											"source": 14,
											"value": "64"
										},
										{
											"begin": 5492,
											"end": 5510,
											"name": "DUP3",
											"source": 14
										},
										{
											"begin": 5492,
											"end": 5510,
											"name": "ADD",
											"source": 14
										},
										{
											"begin": 5485,
											"end": 5516,
											"name": "MSTORE",
											"source": 14
										},
										{
											"begin": 5533,
											"end": 5552,
											"name": "PUSH",
											"source": 14,
											"value": "84"
										},
										{
											"begin": 5533,
											"end": 5552,
											"name": "ADD",
											"source": 14
										},
										{
											"begin": 3597,
											"end": 3654,
											"name": "tag",
											"source": 2,
											"value": "93"
										},
										{
											"begin": 3597,
											"end": 3654,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 3597,
											"end": 3654,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 3597,
											"end": 3654,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 3597,
											"end": 3654,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 3597,
											"end": 3654,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 3597,
											"end": 3654,
											"name": "SUB",
											"source": 2
										},
										{
											"begin": 3597,
											"end": 3654,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 3597,
											"end": 3654,
											"name": "REVERT",
											"source": 2
										},
										{
											"begin": 3597,
											"end": 3654,
											"name": "tag",
											"source": 2,
											"value": "92"
										},
										{
											"begin": 3597,
											"end": 3654,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 719,
											"end": 729,
											"name": "CALLER",
											"source": 7
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 3686,
											"end": 3707,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 3686,
											"end": 3707,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 3686,
											"end": 3707,
											"name": "EQ",
											"source": 2
										},
										{
											"begin": 3686,
											"end": 3707,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 3686,
											"end": 3748,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "98"
										},
										{
											"begin": 3686,
											"end": 3748,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 3711,
											"end": 3748,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "98"
										},
										{
											"begin": 3728,
											"end": 3733,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 719,
											"end": 729,
											"name": "CALLER",
											"source": 7
										},
										{
											"begin": 4388,
											"end": 4550,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "73"
										},
										{
											"begin": 4388,
											"end": 4550,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 3711,
											"end": 3748,
											"name": "tag",
											"source": 2,
											"value": "98"
										},
										{
											"begin": 3711,
											"end": 3748,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 3665,
											"end": 3835,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "100"
										},
										{
											"begin": 3665,
											"end": 3835,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 3665,
											"end": 3835,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 3665,
											"end": 3835,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "461BCD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E5"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 3665,
											"end": 3835,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 3665,
											"end": 3835,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 5765,
											"end": 5767,
											"name": "PUSH",
											"source": 14,
											"value": "20"
										},
										{
											"begin": 3665,
											"end": 3835,
											"name": "PUSH",
											"source": 2,
											"value": "4"
										},
										{
											"begin": 3665,
											"end": 3835,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 3665,
											"end": 3835,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 5747,
											"end": 5768,
											"name": "MSTORE",
											"source": 14
										},
										{
											"begin": 5804,
											"end": 5806,
											"name": "PUSH",
											"source": 14,
											"value": "3D"
										},
										{
											"begin": 5784,
											"end": 5802,
											"name": "PUSH",
											"source": 14,
											"value": "24"
										},
										{
											"begin": 5784,
											"end": 5802,
											"name": "DUP3",
											"source": 14
										},
										{
											"begin": 5784,
											"end": 5802,
											"name": "ADD",
											"source": 14
										},
										{
											"begin": 5777,
											"end": 5807,
											"name": "MSTORE",
											"source": 14
										},
										{
											"begin": 5843,
											"end": 5877,
											"name": "PUSH",
											"source": 14,
											"value": "4552433732313A20617070726F76652063616C6C6572206973206E6F7420746F"
										},
										{
											"begin": 5823,
											"end": 5841,
											"name": "PUSH",
											"source": 14,
											"value": "44"
										},
										{
											"begin": 5823,
											"end": 5841,
											"name": "DUP3",
											"source": 14
										},
										{
											"begin": 5823,
											"end": 5841,
											"name": "ADD",
											"source": 14
										},
										{
											"begin": 5816,
											"end": 5878,
											"name": "MSTORE",
											"source": 14
										},
										{
											"begin": 5914,
											"end": 5945,
											"name": "PUSH",
											"source": 14,
											"value": "6B656E206F776E6572206F7220617070726F76656420666F7220616C6C000000"
										},
										{
											"begin": 5894,
											"end": 5912,
											"name": "PUSH",
											"source": 14,
											"value": "64"
										},
										{
											"begin": 5894,
											"end": 5912,
											"name": "DUP3",
											"source": 14
										},
										{
											"begin": 5894,
											"end": 5912,
											"name": "ADD",
											"source": 14
										},
										{
											"begin": 5887,
											"end": 5946,
											"name": "MSTORE",
											"source": 14
										},
										{
											"begin": 5963,
											"end": 5982,
											"name": "PUSH",
											"source": 14,
											"value": "84"
										},
										{
											"begin": 5963,
											"end": 5982,
											"name": "ADD",
											"source": 14
										},
										{
											"begin": 3665,
											"end": 3835,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "93"
										},
										{
											"begin": 5563,
											"end": 5988,
											"name": "JUMP",
											"source": 14
										},
										{
											"begin": 3665,
											"end": 3835,
											"name": "tag",
											"source": 2,
											"value": "100"
										},
										{
											"begin": 3665,
											"end": 3835,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 3846,
											"end": 3867,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "103"
										},
										{
											"begin": 3855,
											"end": 3857,
											"name": "DUP4",
											"source": 2
										},
										{
											"begin": 3859,
											"end": 3866,
											"name": "DUP4",
											"source": 2
										},
										{
											"begin": 3846,
											"end": 3854,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "104"
										},
										{
											"begin": 3846,
											"end": 3867,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 3846,
											"end": 3867,
											"name": "tag",
											"source": 2,
											"value": "103"
										},
										{
											"begin": 3846,
											"end": 3867,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 3538,
											"end": 3874,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 3468,
											"end": 3874,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 3468,
											"end": 3874,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 3468,
											"end": 3874,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 4612,
											"end": 4938,
											"name": "tag",
											"source": 2,
											"value": "41"
										},
										{
											"begin": 4612,
											"end": 4938,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 4801,
											"end": 4842,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "106"
										},
										{
											"begin": 719,
											"end": 729,
											"name": "CALLER",
											"source": 7
										},
										{
											"begin": 4834,
											"end": 4841,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 4801,
											"end": 4819,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "108"
										},
										{
											"begin": 4801,
											"end": 4842,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 4801,
											"end": 4842,
											"name": "tag",
											"source": 2,
											"value": "106"
										},
										{
											"begin": 4801,
											"end": 4842,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 4793,
											"end": 4892,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "109"
										},
										{
											"begin": 4793,
											"end": 4892,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 4793,
											"end": 4892,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 4793,
											"end": 4892,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "461BCD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E5"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 4793,
											"end": 4892,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 4793,
											"end": 4892,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 4793,
											"end": 4892,
											"name": "PUSH",
											"source": 2,
											"value": "4"
										},
										{
											"begin": 4793,
											"end": 4892,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 4793,
											"end": 4892,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "93"
										},
										{
											"begin": 4793,
											"end": 4892,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 4793,
											"end": 4892,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "111"
										},
										{
											"begin": 4793,
											"end": 4892,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 4793,
											"end": 4892,
											"name": "tag",
											"source": 2,
											"value": "109"
										},
										{
											"begin": 4793,
											"end": 4892,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 4903,
											"end": 4931,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "103"
										},
										{
											"begin": 4913,
											"end": 4917,
											"name": "DUP4",
											"source": 2
										},
										{
											"begin": 4919,
											"end": 4921,
											"name": "DUP4",
											"source": 2
										},
										{
											"begin": 4923,
											"end": 4930,
											"name": "DUP4",
											"source": 2
										},
										{
											"begin": 4903,
											"end": 4912,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "113"
										},
										{
											"begin": 4903,
											"end": 4931,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 5004,
											"end": 5183,
											"name": "tag",
											"source": 2,
											"value": "44"
										},
										{
											"begin": 5004,
											"end": 5183,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 5137,
											"end": 5176,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "103"
										},
										{
											"begin": 5154,
											"end": 5158,
											"name": "DUP4",
											"source": 2
										},
										{
											"begin": 5160,
											"end": 5162,
											"name": "DUP4",
											"source": 2
										},
										{
											"begin": 5164,
											"end": 5171,
											"name": "DUP4",
											"source": 2
										},
										{
											"begin": 5137,
											"end": 5176,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 5137,
											"end": 5176,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 5137,
											"end": 5176,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 5137,
											"end": 5176,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 5137,
											"end": 5176,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 5137,
											"end": 5176,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 5137,
											"end": 5176,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 5137,
											"end": 5176,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 5137,
											"end": 5176,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 5137,
											"end": 5176,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 5137,
											"end": 5176,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 5137,
											"end": 5176,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 5137,
											"end": 5153,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "65"
										},
										{
											"begin": 5137,
											"end": 5176,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 2190,
											"end": 2409,
											"name": "tag",
											"source": 2,
											"value": "47"
										},
										{
											"begin": 2190,
											"end": 2409,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 2262,
											"end": 2269,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 6930,
											"end": 6946,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 6930,
											"end": 6946,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 6930,
											"end": 6946,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 6930,
											"end": 6937,
											"name": "PUSH",
											"source": 2,
											"value": "2"
										},
										{
											"begin": 6930,
											"end": 6946,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 6930,
											"end": 6946,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 6930,
											"end": 6946,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 6930,
											"end": 6946,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 6930,
											"end": 6946,
											"name": "KECCAK256",
											"source": 2
										},
										{
											"begin": 6930,
											"end": 6946,
											"name": "SLOAD",
											"source": 2
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 6930,
											"end": 6946,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 6930,
											"end": 6946,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 2324,
											"end": 2380,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "78"
										},
										{
											"begin": 2324,
											"end": 2380,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 2324,
											"end": 2380,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 2324,
											"end": 2380,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "461BCD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E5"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 2324,
											"end": 2380,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 2324,
											"end": 2380,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 6609,
											"end": 6611,
											"name": "PUSH",
											"source": 14,
											"value": "20"
										},
										{
											"begin": 2324,
											"end": 2380,
											"name": "PUSH",
											"source": 2,
											"value": "4"
										},
										{
											"begin": 2324,
											"end": 2380,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 2324,
											"end": 2380,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 6591,
											"end": 6612,
											"name": "MSTORE",
											"source": 14
										},
										{
											"begin": 6648,
											"end": 6650,
											"name": "PUSH",
											"source": 14,
											"value": "18"
										},
										{
											"begin": 6628,
											"end": 6646,
											"name": "PUSH",
											"source": 14,
											"value": "24"
										},
										{
											"begin": 6628,
											"end": 6646,
											"name": "DUP3",
											"source": 14
										},
										{
											"begin": 6628,
											"end": 6646,
											"name": "ADD",
											"source": 14
										},
										{
											"begin": 6621,
											"end": 6651,
											"name": "MSTORE",
											"source": 14
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "115490CDCC8C4E881A5B9D985B1A59081D1BDAD95B881251"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "42"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 6667,
											"end": 6685,
											"name": "PUSH",
											"source": 14,
											"value": "44"
										},
										{
											"begin": 6667,
											"end": 6685,
											"name": "DUP3",
											"source": 14
										},
										{
											"begin": 6667,
											"end": 6685,
											"name": "ADD",
											"source": 14
										},
										{
											"begin": 6660,
											"end": 6714,
											"name": "MSTORE",
											"source": 14
										},
										{
											"begin": 6731,
											"end": 6749,
											"name": "PUSH",
											"source": 14,
											"value": "64"
										},
										{
											"begin": 6731,
											"end": 6749,
											"name": "ADD",
											"source": 14
										},
										{
											"begin": 2324,
											"end": 2380,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "93"
										},
										{
											"begin": 6407,
											"end": 6755,
											"name": "JUMP",
											"source": 14
										},
										{
											"begin": 1929,
											"end": 2133,
											"name": "tag",
											"source": 2,
											"value": "52"
										},
										{
											"begin": 1929,
											"end": 2133,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 2001,
											"end": 2008,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 2028,
											"end": 2047,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 2028,
											"end": 2047,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 2020,
											"end": 2093,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "123"
										},
										{
											"begin": 2020,
											"end": 2093,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 2020,
											"end": 2093,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 2020,
											"end": 2093,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "461BCD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E5"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 2020,
											"end": 2093,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 2020,
											"end": 2093,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 6962,
											"end": 6964,
											"name": "PUSH",
											"source": 14,
											"value": "20"
										},
										{
											"begin": 2020,
											"end": 2093,
											"name": "PUSH",
											"source": 2,
											"value": "4"
										},
										{
											"begin": 2020,
											"end": 2093,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 2020,
											"end": 2093,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 6944,
											"end": 6965,
											"name": "MSTORE",
											"source": 14
										},
										{
											"begin": 7001,
											"end": 7003,
											"name": "PUSH",
											"source": 14,
											"value": "29"
										},
										{
											"begin": 6981,
											"end": 6999,
											"name": "PUSH",
											"source": 14,
											"value": "24"
										},
										{
											"begin": 6981,
											"end": 6999,
											"name": "DUP3",
											"source": 14
										},
										{
											"begin": 6981,
											"end": 6999,
											"name": "ADD",
											"source": 14
										},
										{
											"begin": 6974,
											"end": 7004,
											"name": "MSTORE",
											"source": 14
										},
										{
											"begin": 7040,
											"end": 7074,
											"name": "PUSH",
											"source": 14,
											"value": "4552433732313A2061646472657373207A65726F206973206E6F742061207661"
										},
										{
											"begin": 7020,
											"end": 7038,
											"name": "PUSH",
											"source": 14,
											"value": "44"
										},
										{
											"begin": 7020,
											"end": 7038,
											"name": "DUP3",
											"source": 14
										},
										{
											"begin": 7020,
											"end": 7038,
											"name": "ADD",
											"source": 14
										},
										{
											"begin": 7013,
											"end": 7075,
											"name": "MSTORE",
											"source": 14
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "3634B21037BBB732B9"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "B9"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 7091,
											"end": 7109,
											"name": "PUSH",
											"source": 14,
											"value": "64"
										},
										{
											"begin": 7091,
											"end": 7109,
											"name": "DUP3",
											"source": 14
										},
										{
											"begin": 7091,
											"end": 7109,
											"name": "ADD",
											"source": 14
										},
										{
											"begin": 7084,
											"end": 7123,
											"name": "MSTORE",
											"source": 14
										},
										{
											"begin": 7140,
											"end": 7159,
											"name": "PUSH",
											"source": 14,
											"value": "84"
										},
										{
											"begin": 7140,
											"end": 7159,
											"name": "ADD",
											"source": 14
										},
										{
											"begin": 2020,
											"end": 2093,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "93"
										},
										{
											"begin": 6760,
											"end": 7165,
											"name": "JUMP",
											"source": 14
										},
										{
											"begin": 2020,
											"end": 2093,
											"name": "tag",
											"source": 2,
											"value": "123"
										},
										{
											"begin": 2020,
											"end": 2093,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 2110,
											"end": 2126,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 2110,
											"end": 2126,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 2110,
											"end": 2126,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 2110,
											"end": 2126,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 2110,
											"end": 2126,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 2110,
											"end": 2119,
											"name": "PUSH",
											"source": 2,
											"value": "3"
										},
										{
											"begin": 2110,
											"end": 2126,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 2110,
											"end": 2126,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 2110,
											"end": 2126,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 2110,
											"end": 2126,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 2110,
											"end": 2126,
											"name": "KECCAK256",
											"source": 2
										},
										{
											"begin": 2110,
											"end": 2126,
											"name": "SLOAD",
											"source": 2
										},
										{
											"begin": 2110,
											"end": 2126,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 1929,
											"end": 2133,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 2633,
											"end": 2735,
											"name": "tag",
											"source": 2,
											"value": "56"
										},
										{
											"begin": 2633,
											"end": 2735,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 2689,
											"end": 2702,
											"name": "PUSH",
											"source": 2,
											"value": "60"
										},
										{
											"begin": 2721,
											"end": 2728,
											"name": "PUSH",
											"source": 2,
											"value": "1"
										},
										{
											"begin": 2714,
											"end": 2728,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 2714,
											"end": 2728,
											"name": "SLOAD",
											"source": 2
										},
										{
											"begin": 2714,
											"end": 2728,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "81"
										},
										{
											"begin": 2714,
											"end": 2728,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 2714,
											"end": 2728,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "82"
										},
										{
											"begin": 2714,
											"end": 2728,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 4169,
											"end": 4322,
											"name": "tag",
											"source": 2,
											"value": "61"
										},
										{
											"begin": 4169,
											"end": 4322,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 4263,
											"end": 4315,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "133"
										},
										{
											"begin": 719,
											"end": 729,
											"name": "CALLER",
											"source": 7
										},
										{
											"begin": 4296,
											"end": 4304,
											"name": "DUP4",
											"source": 2
										},
										{
											"begin": 4306,
											"end": 4314,
											"name": "DUP4",
											"source": 2
										},
										{
											"begin": 4263,
											"end": 4281,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "135"
										},
										{
											"begin": 4263,
											"end": 4315,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 4263,
											"end": 4315,
											"name": "tag",
											"source": 2,
											"value": "133"
										},
										{
											"begin": 4263,
											"end": 4315,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 4169,
											"end": 4322,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 4169,
											"end": 4322,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 4169,
											"end": 4322,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 5249,
											"end": 5563,
											"name": "tag",
											"source": 2,
											"value": "65"
										},
										{
											"begin": 5249,
											"end": 5563,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 5417,
											"end": 5458,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "137"
										},
										{
											"begin": 719,
											"end": 729,
											"name": "CALLER",
											"source": 7
										},
										{
											"begin": 5450,
											"end": 5457,
											"name": "DUP4",
											"source": 2
										},
										{
											"begin": 5417,
											"end": 5435,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "108"
										},
										{
											"begin": 5417,
											"end": 5458,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 5417,
											"end": 5458,
											"name": "tag",
											"source": 2,
											"value": "137"
										},
										{
											"begin": 5417,
											"end": 5458,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 5409,
											"end": 5508,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "139"
										},
										{
											"begin": 5409,
											"end": 5508,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 5409,
											"end": 5508,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 5409,
											"end": 5508,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "461BCD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E5"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 5409,
											"end": 5508,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 5409,
											"end": 5508,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 5409,
											"end": 5508,
											"name": "PUSH",
											"source": 2,
											"value": "4"
										},
										{
											"begin": 5409,
											"end": 5508,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 5409,
											"end": 5508,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "93"
										},
										{
											"begin": 5409,
											"end": 5508,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 5409,
											"end": 5508,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "111"
										},
										{
											"begin": 5409,
											"end": 5508,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 5409,
											"end": 5508,
											"name": "tag",
											"source": 2,
											"value": "139"
										},
										{
											"begin": 5409,
											"end": 5508,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 5518,
											"end": 5556,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "141"
										},
										{
											"begin": 5532,
											"end": 5536,
											"name": "DUP5",
											"source": 2
										},
										{
											"begin": 5538,
											"end": 5540,
											"name": "DUP5",
											"source": 2
										},
										{
											"begin": 5542,
											"end": 5549,
											"name": "DUP5",
											"source": 2
										},
										{
											"begin": 5551,
											"end": 5555,
											"name": "DUP5",
											"source": 2
										},
										{
											"begin": 5518,
											"end": 5531,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "142"
										},
										{
											"begin": 5518,
											"end": 5556,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 5518,
											"end": 5556,
											"name": "tag",
											"source": 2,
											"value": "141"
										},
										{
											"begin": 5518,
											"end": 5556,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 5249,
											"end": 5563,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 5249,
											"end": 5563,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 5249,
											"end": 5563,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 5249,
											"end": 5563,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 5249,
											"end": 5563,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 2801,
											"end": 3077,
											"name": "tag",
											"source": 2,
											"value": "68"
										},
										{
											"begin": 2801,
											"end": 3077,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 2874,
											"end": 2887,
											"name": "PUSH",
											"source": 2,
											"value": "60"
										},
										{
											"begin": 2899,
											"end": 2922,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "144"
										},
										{
											"begin": 2914,
											"end": 2921,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 2899,
											"end": 2913,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "89"
										},
										{
											"begin": 2899,
											"end": 2922,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 2899,
											"end": 2922,
											"name": "tag",
											"source": 2,
											"value": "144"
										},
										{
											"begin": 2899,
											"end": 2922,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 2933,
											"end": 2954,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 2957,
											"end": 2967,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "145"
										},
										{
											"begin": 3395,
											"end": 3404,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 3395,
											"end": 3404,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 3395,
											"end": 3404,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 3395,
											"end": 3404,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 3395,
											"end": 3404,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 3395,
											"end": 3404,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 3395,
											"end": 3404,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 3395,
											"end": 3404,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 3395,
											"end": 3404,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "0"
										},
										{
											"begin": 3395,
											"end": 3404,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 3395,
											"end": 3404,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 3395,
											"end": 3404,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 3319,
											"end": 3411,
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 2957,
											"end": 2967,
											"name": "tag",
											"source": 2,
											"value": "145"
										},
										{
											"begin": 2957,
											"end": 2967,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 2933,
											"end": 2967,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 2933,
											"end": 2967,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 3008,
											"end": 3009,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 2990,
											"end": 2997,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 2984,
											"end": 3005,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 2984,
											"end": 3009,
											"name": "GT",
											"source": 2
										},
										{
											"begin": 2984,
											"end": 3070,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "147"
										},
										{
											"begin": 2984,
											"end": 3070,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 2984,
											"end": 3070,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 2984,
											"end": 3070,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 2984,
											"end": 3070,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 2984,
											"end": 3070,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 2984,
											"end": 3070,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 2984,
											"end": 3070,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 2984,
											"end": 3070,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 2984,
											"end": 3070,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 2984,
											"end": 3070,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 2984,
											"end": 3070,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 2984,
											"end": 3070,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 2984,
											"end": 3070,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 2984,
											"end": 3070,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "148"
										},
										{
											"begin": 2984,
											"end": 3070,
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 2984,
											"end": 3070,
											"name": "tag",
											"source": 2,
											"value": "147"
										},
										{
											"begin": 2984,
											"end": 3070,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 3036,
											"end": 3043,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 3045,
											"end": 3063,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "149"
										},
										{
											"begin": 3045,
											"end": 3052,
											"name": "DUP5",
											"source": 2
										},
										{
											"begin": 3045,
											"end": 3061,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "150"
										},
										{
											"begin": 3045,
											"end": 3063,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 3045,
											"end": 3063,
											"name": "tag",
											"source": 2,
											"value": "149"
										},
										{
											"begin": 3045,
											"end": 3063,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 3019,
											"end": 3064,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 3019,
											"end": 3064,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 3019,
											"end": 3064,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 3019,
											"end": 3064,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 3019,
											"end": 3064,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "151"
										},
										{
											"begin": 3019,
											"end": 3064,
											"name": "SWAP3",
											"source": 2
										},
										{
											"begin": 3019,
											"end": 3064,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 3019,
											"end": 3064,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 3019,
											"end": 3064,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "152"
										},
										{
											"begin": 3019,
											"end": 3064,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 3019,
											"end": 3064,
											"name": "tag",
											"source": 2,
											"value": "151"
										},
										{
											"begin": 3019,
											"end": 3064,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 3019,
											"end": 3064,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 3019,
											"end": 3064,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 3019,
											"end": 3064,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 3019,
											"end": 3064,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 3019,
											"end": 3064,
											"name": "DUP4",
											"source": 2
										},
										{
											"begin": 3019,
											"end": 3064,
											"name": "SUB",
											"source": 2
										},
										{
											"begin": 3019,
											"end": 3064,
											"name": "SUB",
											"source": 2
										},
										{
											"begin": 3019,
											"end": 3064,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 3019,
											"end": 3064,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 3019,
											"end": 3064,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 3019,
											"end": 3064,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 3019,
											"end": 3064,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 2984,
											"end": 3070,
											"name": "tag",
											"source": 2,
											"value": "148"
										},
										{
											"begin": 2984,
											"end": 3070,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 2977,
											"end": 3070,
											"name": "SWAP4",
											"source": 2
										},
										{
											"begin": 2801,
											"end": 3077,
											"name": "SWAP3",
											"source": 2
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 2801,
											"end": 3077,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 4388,
											"end": 4550,
											"name": "tag",
											"source": 2,
											"value": "73"
										},
										{
											"begin": 4388,
											"end": 4550,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 4508,
											"end": 4533,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 4508,
											"end": 4533,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 4508,
											"end": 4533,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 4485,
											"end": 4489,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 4508,
											"end": 4533,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 4508,
											"end": 4533,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 4508,
											"end": 4533,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 4508,
											"end": 4526,
											"name": "PUSH",
											"source": 2,
											"value": "5"
										},
										{
											"begin": 4508,
											"end": 4533,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 4508,
											"end": 4533,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 4508,
											"end": 4533,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 4508,
											"end": 4533,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 4508,
											"end": 4533,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 4508,
											"end": 4533,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 4508,
											"end": 4533,
											"name": "DUP4",
											"source": 2
										},
										{
											"begin": 4508,
											"end": 4533,
											"name": "KECCAK256",
											"source": 2
										},
										{
											"begin": 4508,
											"end": 4543,
											"name": "SWAP4",
											"source": 2
										},
										{
											"begin": 4508,
											"end": 4543,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 4508,
											"end": 4543,
											"name": "SWAP5",
											"source": 2
										},
										{
											"begin": 4508,
											"end": 4543,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 4508,
											"end": 4543,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 4508,
											"end": 4543,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 4508,
											"end": 4543,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 4508,
											"end": 4543,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 4508,
											"end": 4543,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 4508,
											"end": 4543,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 4508,
											"end": 4543,
											"name": "KECCAK256",
											"source": 2
										},
										{
											"begin": 4508,
											"end": 4543,
											"name": "SLOAD",
											"source": 2
										},
										{
											"begin": 4508,
											"end": 4543,
											"name": "PUSH",
											"source": 2,
											"value": "FF"
										},
										{
											"begin": 4508,
											"end": 4543,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 4508,
											"end": 4543,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 4388,
											"end": 4550,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 13466,
											"end": 13599,
											"name": "tag",
											"source": 2,
											"value": "89"
										},
										{
											"begin": 13466,
											"end": 13599,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 7321,
											"end": 7325,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 6930,
											"end": 6946,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 6930,
											"end": 6946,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 6930,
											"end": 6946,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 6930,
											"end": 6937,
											"name": "PUSH",
											"source": 2,
											"value": "2"
										},
										{
											"begin": 6930,
											"end": 6946,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 6930,
											"end": 6946,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 6930,
											"end": 6946,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 6930,
											"end": 6946,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 6930,
											"end": 6946,
											"name": "KECCAK256",
											"source": 2
										},
										{
											"begin": 6930,
											"end": 6946,
											"name": "SLOAD",
											"source": 2
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 6930,
											"end": 6946,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 13539,
											"end": 13592,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "158"
										},
										{
											"begin": 13539,
											"end": 13592,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 13539,
											"end": 13592,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 13539,
											"end": 13592,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "461BCD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E5"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 13539,
											"end": 13592,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 13539,
											"end": 13592,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 6609,
											"end": 6611,
											"name": "PUSH",
											"source": 14,
											"value": "20"
										},
										{
											"begin": 13539,
											"end": 13592,
											"name": "PUSH",
											"source": 2,
											"value": "4"
										},
										{
											"begin": 13539,
											"end": 13592,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 13539,
											"end": 13592,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 6591,
											"end": 6612,
											"name": "MSTORE",
											"source": 14
										},
										{
											"begin": 6648,
											"end": 6650,
											"name": "PUSH",
											"source": 14,
											"value": "18"
										},
										{
											"begin": 6628,
											"end": 6646,
											"name": "PUSH",
											"source": 14,
											"value": "24"
										},
										{
											"begin": 6628,
											"end": 6646,
											"name": "DUP3",
											"source": 14
										},
										{
											"begin": 6628,
											"end": 6646,
											"name": "ADD",
											"source": 14
										},
										{
											"begin": 6621,
											"end": 6651,
											"name": "MSTORE",
											"source": 14
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "115490CDCC8C4E881A5B9D985B1A59081D1BDAD95B881251"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "42"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 6667,
											"end": 6685,
											"name": "PUSH",
											"source": 14,
											"value": "44"
										},
										{
											"begin": 6667,
											"end": 6685,
											"name": "DUP3",
											"source": 14
										},
										{
											"begin": 6667,
											"end": 6685,
											"name": "ADD",
											"source": 14
										},
										{
											"begin": 6660,
											"end": 6714,
											"name": "MSTORE",
											"source": 14
										},
										{
											"begin": 6731,
											"end": 6749,
											"name": "PUSH",
											"source": 14,
											"value": "64"
										},
										{
											"begin": 6731,
											"end": 6749,
											"name": "ADD",
											"source": 14
										},
										{
											"begin": 13539,
											"end": 13592,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "93"
										},
										{
											"begin": 6407,
											"end": 6755,
											"name": "JUMP",
											"source": 14
										},
										{
											"begin": 13539,
											"end": 13592,
											"name": "tag",
											"source": 2,
											"value": "158"
										},
										{
											"begin": 13539,
											"end": 13592,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 13466,
											"end": 13599,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 13466,
											"end": 13599,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 12768,
											"end": 12939,
											"name": "tag",
											"source": 2,
											"value": "104"
										},
										{
											"begin": 12768,
											"end": 12939,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 12842,
											"end": 12866,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 12842,
											"end": 12866,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 12842,
											"end": 12866,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 12842,
											"end": 12866,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 12842,
											"end": 12857,
											"name": "PUSH",
											"source": 2,
											"value": "4"
										},
										{
											"begin": 12842,
											"end": 12866,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 12842,
											"end": 12866,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 12842,
											"end": 12866,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 12842,
											"end": 12866,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 12842,
											"end": 12866,
											"name": "KECCAK256",
											"source": 2
										},
										{
											"begin": 12842,
											"end": 12871,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 12842,
											"end": 12871,
											"name": "SLOAD",
											"source": 2
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "NOT",
											"source": -1
										},
										{
											"begin": 12842,
											"end": 12871,
											"name": "AND",
											"source": 2
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 12842,
											"end": 12871,
											"name": "DUP5",
											"source": 2
										},
										{
											"begin": 12842,
											"end": 12871,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 12842,
											"end": 12871,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 12842,
											"end": 12871,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 12842,
											"end": 12871,
											"name": "OR",
											"source": 2
										},
										{
											"begin": 12842,
											"end": 12871,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 12842,
											"end": 12871,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 12842,
											"end": 12871,
											"name": "SSTORE",
											"source": 2
										},
										{
											"begin": 12842,
											"end": 12866,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 12842,
											"end": 12866,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 12895,
											"end": 12918,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "162"
										},
										{
											"begin": 12842,
											"end": 12866,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 12895,
											"end": 12909,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "47"
										},
										{
											"begin": 12895,
											"end": 12918,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 12895,
											"end": 12918,
											"name": "tag",
											"source": 2,
											"value": "162"
										},
										{
											"begin": 12895,
											"end": 12918,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 12886,
											"end": 12932,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 12886,
											"end": 12932,
											"name": "PUSH",
											"source": 2,
											"value": "8C5BE1E5EBEC7D5BD14F71427D1E84F3DD0314C0F7B2291E5B200AC8C7C3B925"
										},
										{
											"begin": 12886,
											"end": 12932,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 12886,
											"end": 12932,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 12886,
											"end": 12932,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 12886,
											"end": 12932,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 12886,
											"end": 12932,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 12886,
											"end": 12932,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 12886,
											"end": 12932,
											"name": "SUB",
											"source": 2
										},
										{
											"begin": 12886,
											"end": 12932,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 12886,
											"end": 12932,
											"name": "LOG4",
											"source": 2
										},
										{
											"begin": 12768,
											"end": 12939,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 12768,
											"end": 12939,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 12768,
											"end": 12939,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 7540,
											"end": 7801,
											"name": "tag",
											"source": 2,
											"value": "108"
										},
										{
											"begin": 7540,
											"end": 7801,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 7633,
											"end": 7637,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 7649,
											"end": 7662,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 7665,
											"end": 7688,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "164"
										},
										{
											"begin": 7680,
											"end": 7687,
											"name": "DUP4",
											"source": 2
										},
										{
											"begin": 7665,
											"end": 7679,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "47"
										},
										{
											"begin": 7665,
											"end": 7688,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 7665,
											"end": 7688,
											"name": "tag",
											"source": 2,
											"value": "164"
										},
										{
											"begin": 7665,
											"end": 7688,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 7649,
											"end": 7688,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 7649,
											"end": 7688,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 7717,
											"end": 7722,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 7706,
											"end": 7722,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 7706,
											"end": 7713,
											"name": "DUP5",
											"source": 2
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 7706,
											"end": 7722,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 7706,
											"end": 7722,
											"name": "EQ",
											"source": 2
										},
										{
											"begin": 7706,
											"end": 7758,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 7706,
											"end": 7758,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "166"
										},
										{
											"begin": 7706,
											"end": 7758,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 7706,
											"end": 7758,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 7726,
											"end": 7758,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "166"
										},
										{
											"begin": 7743,
											"end": 7748,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 7750,
											"end": 7757,
											"name": "DUP6",
											"source": 2
										},
										{
											"begin": 7726,
											"end": 7742,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "73"
										},
										{
											"begin": 7726,
											"end": 7758,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 7726,
											"end": 7758,
											"name": "tag",
											"source": 2,
											"value": "166"
										},
										{
											"begin": 7726,
											"end": 7758,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 7706,
											"end": 7793,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 7706,
											"end": 7793,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "167"
										},
										{
											"begin": 7706,
											"end": 7793,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 7706,
											"end": 7793,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 7786,
											"end": 7793,
											"name": "DUP4",
											"source": 2
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 7762,
											"end": 7793,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 7762,
											"end": 7782,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "168"
										},
										{
											"begin": 7774,
											"end": 7781,
											"name": "DUP5",
											"source": 2
										},
										{
											"begin": 7762,
											"end": 7773,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "31"
										},
										{
											"begin": 7762,
											"end": 7782,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 7762,
											"end": 7782,
											"name": "tag",
											"source": 2,
											"value": "168"
										},
										{
											"begin": 7762,
											"end": 7782,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 7762,
											"end": 7793,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 7762,
											"end": 7793,
											"name": "EQ",
											"source": 2
										},
										{
											"begin": 7706,
											"end": 7793,
											"name": "tag",
											"source": 2,
											"value": "167"
										},
										{
											"begin": 7706,
											"end": 7793,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 7698,
											"end": 7794,
											"name": "SWAP5",
											"source": 2
										},
										{
											"begin": 7540,
											"end": 7801,
											"name": "SWAP4",
											"source": 2
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 7540,
											"end": 7801,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 11423,
											"end": 12656,
											"name": "tag",
											"source": 2,
											"value": "113"
										},
										{
											"begin": 11423,
											"end": 12656,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 11577,
											"end": 11581,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 11550,
											"end": 11581,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 11550,
											"end": 11573,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "170"
										},
										{
											"begin": 11565,
											"end": 11572,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 11550,
											"end": 11564,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "47"
										},
										{
											"begin": 11550,
											"end": 11573,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 11550,
											"end": 11573,
											"name": "tag",
											"source": 2,
											"value": "170"
										},
										{
											"begin": 11550,
											"end": 11573,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 11550,
											"end": 11581,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 11550,
											"end": 11581,
											"name": "EQ",
											"source": 2
										},
										{
											"begin": 11542,
											"end": 11623,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "171"
										},
										{
											"begin": 11542,
											"end": 11623,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 11542,
											"end": 11623,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 11542,
											"end": 11623,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "461BCD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E5"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 11542,
											"end": 11623,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 11542,
											"end": 11623,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 11542,
											"end": 11623,
											"name": "PUSH",
											"source": 2,
											"value": "4"
										},
										{
											"begin": 11542,
											"end": 11623,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 11542,
											"end": 11623,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "93"
										},
										{
											"begin": 11542,
											"end": 11623,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 11542,
											"end": 11623,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "173"
										},
										{
											"begin": 11542,
											"end": 11623,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 11542,
											"end": 11623,
											"name": "tag",
											"source": 2,
											"value": "171"
										},
										{
											"begin": 11542,
											"end": 11623,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 11641,
											"end": 11657,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 11641,
											"end": 11657,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 11633,
											"end": 11698,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "174"
										},
										{
											"begin": 11633,
											"end": 11698,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 11633,
											"end": 11698,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 11633,
											"end": 11698,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "461BCD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E5"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 11633,
											"end": 11698,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 11633,
											"end": 11698,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 8279,
											"end": 8281,
											"name": "PUSH",
											"source": 14,
											"value": "20"
										},
										{
											"begin": 11633,
											"end": 11698,
											"name": "PUSH",
											"source": 2,
											"value": "4"
										},
										{
											"begin": 11633,
											"end": 11698,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 11633,
											"end": 11698,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 8261,
											"end": 8282,
											"name": "MSTORE",
											"source": 14
										},
										{
											"begin": 8318,
											"end": 8320,
											"name": "PUSH",
											"source": 14,
											"value": "24"
										},
										{
											"begin": 8298,
											"end": 8316,
											"name": "DUP1",
											"source": 14
										},
										{
											"begin": 8298,
											"end": 8316,
											"name": "DUP3",
											"source": 14
										},
										{
											"begin": 8298,
											"end": 8316,
											"name": "ADD",
											"source": 14
										},
										{
											"begin": 8291,
											"end": 8321,
											"name": "MSTORE",
											"source": 14
										},
										{
											"begin": 8357,
											"end": 8391,
											"name": "PUSH",
											"source": 14,
											"value": "4552433732313A207472616E7366657220746F20746865207A65726F20616464"
										},
										{
											"begin": 8337,
											"end": 8355,
											"name": "PUSH",
											"source": 14,
											"value": "44"
										},
										{
											"begin": 8337,
											"end": 8355,
											"name": "DUP3",
											"source": 14
										},
										{
											"begin": 8337,
											"end": 8355,
											"name": "ADD",
											"source": 14
										},
										{
											"begin": 8330,
											"end": 8392,
											"name": "MSTORE",
											"source": 14
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "72657373"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 8408,
											"end": 8426,
											"name": "PUSH",
											"source": 14,
											"value": "64"
										},
										{
											"begin": 8408,
											"end": 8426,
											"name": "DUP3",
											"source": 14
										},
										{
											"begin": 8408,
											"end": 8426,
											"name": "ADD",
											"source": 14
										},
										{
											"begin": 8401,
											"end": 8435,
											"name": "MSTORE",
											"source": 14
										},
										{
											"begin": 8452,
											"end": 8471,
											"name": "PUSH",
											"source": 14,
											"value": "84"
										},
										{
											"begin": 8452,
											"end": 8471,
											"name": "ADD",
											"source": 14
										},
										{
											"begin": 11633,
											"end": 11698,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "93"
										},
										{
											"begin": 8077,
											"end": 8477,
											"name": "JUMP",
											"source": 14
										},
										{
											"begin": 11633,
											"end": 11698,
											"name": "tag",
											"source": 2,
											"value": "174"
										},
										{
											"begin": 11633,
											"end": 11698,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 11709,
											"end": 11751,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "177"
										},
										{
											"begin": 11730,
											"end": 11734,
											"name": "DUP4",
											"source": 2
										},
										{
											"begin": 11736,
											"end": 11738,
											"name": "DUP4",
											"source": 2
										},
										{
											"begin": 11740,
											"end": 11747,
											"name": "DUP4",
											"source": 2
										},
										{
											"begin": 11749,
											"end": 11750,
											"name": "PUSH",
											"source": 2,
											"value": "1"
										},
										{
											"begin": 11709,
											"end": 11729,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "178"
										},
										{
											"begin": 11709,
											"end": 11751,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 11709,
											"end": 11751,
											"name": "tag",
											"source": 2,
											"value": "177"
										},
										{
											"begin": 11709,
											"end": 11751,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 11878,
											"end": 11882,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 11851,
											"end": 11882,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 11851,
											"end": 11874,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "179"
										},
										{
											"begin": 11866,
											"end": 11873,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 11851,
											"end": 11865,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "47"
										},
										{
											"begin": 11851,
											"end": 11874,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 11851,
											"end": 11874,
											"name": "tag",
											"source": 2,
											"value": "179"
										},
										{
											"begin": 11851,
											"end": 11874,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 11851,
											"end": 11882,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 11851,
											"end": 11882,
											"name": "EQ",
											"source": 2
										},
										{
											"begin": 11843,
											"end": 11924,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "180"
										},
										{
											"begin": 11843,
											"end": 11924,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 11843,
											"end": 11924,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 11843,
											"end": 11924,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "461BCD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E5"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 11843,
											"end": 11924,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 11843,
											"end": 11924,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 11843,
											"end": 11924,
											"name": "PUSH",
											"source": 2,
											"value": "4"
										},
										{
											"begin": 11843,
											"end": 11924,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 11843,
											"end": 11924,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "93"
										},
										{
											"begin": 11843,
											"end": 11924,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 11843,
											"end": 11924,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "173"
										},
										{
											"begin": 11843,
											"end": 11924,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 11843,
											"end": 11924,
											"name": "tag",
											"source": 2,
											"value": "180"
										},
										{
											"begin": 11843,
											"end": 11924,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 11993,
											"end": 12017,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 11993,
											"end": 12017,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 11993,
											"end": 12017,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 11993,
											"end": 12017,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 11993,
											"end": 12008,
											"name": "PUSH",
											"source": 2,
											"value": "4"
										},
										{
											"begin": 11993,
											"end": 12017,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 11993,
											"end": 12017,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 11993,
											"end": 12017,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 11993,
											"end": 12017,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 11993,
											"end": 12017,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 11993,
											"end": 12017,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 11993,
											"end": 12017,
											"name": "DUP4",
											"source": 2
										},
										{
											"begin": 11993,
											"end": 12017,
											"name": "KECCAK256",
											"source": 2
										},
										{
											"begin": 11986,
											"end": 12017,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 11986,
											"end": 12017,
											"name": "SLOAD",
											"source": 2
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "NOT",
											"source": -1
										},
										{
											"begin": 11986,
											"end": 12017,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 11986,
											"end": 12017,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 11986,
											"end": 12017,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 11986,
											"end": 12017,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 11986,
											"end": 12017,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 11986,
											"end": 12017,
											"name": "SSTORE",
											"source": 2
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 12461,
											"end": 12476,
											"name": "DUP8",
											"source": 2
										},
										{
											"begin": 12461,
											"end": 12476,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 12461,
											"end": 12476,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 12461,
											"end": 12476,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 12461,
											"end": 12476,
											"name": "DUP7",
											"source": 2
										},
										{
											"begin": 12461,
											"end": 12476,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 12461,
											"end": 12470,
											"name": "PUSH",
											"source": 2,
											"value": "3"
										},
										{
											"begin": 12461,
											"end": 12476,
											"name": "DUP6",
											"source": 2
										},
										{
											"begin": 12461,
											"end": 12476,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 12461,
											"end": 12476,
											"name": "DUP4",
											"source": 2
										},
										{
											"begin": 12461,
											"end": 12476,
											"name": "DUP7",
											"source": 2
										},
										{
											"begin": 12461,
											"end": 12476,
											"name": "KECCAK256",
											"source": 2
										},
										{
											"begin": 12461,
											"end": 12481,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 12461,
											"end": 12481,
											"name": "SLOAD",
											"source": 2
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "NOT",
											"source": -1
										},
										{
											"begin": 12461,
											"end": 12481,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 12461,
											"end": 12481,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 12461,
											"end": 12481,
											"name": "SSTORE",
											"source": 2
										},
										{
											"begin": 12495,
											"end": 12508,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 12495,
											"end": 12508,
											"name": "DUP8",
											"source": 2
										},
										{
											"begin": 12495,
											"end": 12508,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 12495,
											"end": 12508,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 12495,
											"end": 12508,
											"name": "DUP7",
											"source": 2
										},
										{
											"begin": 12495,
											"end": 12508,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 12495,
											"end": 12508,
											"name": "DUP4",
											"source": 2
										},
										{
											"begin": 12495,
											"end": 12508,
											"name": "DUP7",
											"source": 2
										},
										{
											"begin": 12495,
											"end": 12508,
											"name": "KECCAK256",
											"source": 2
										},
										{
											"begin": 12495,
											"end": 12513,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 12495,
											"end": 12513,
											"name": "SLOAD",
											"source": 2
										},
										{
											"begin": 11986,
											"end": 12017,
											"name": "PUSH",
											"source": 2,
											"value": "1"
										},
										{
											"begin": 12495,
											"end": 12513,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 12495,
											"end": 12513,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 12495,
											"end": 12513,
											"name": "SSTORE",
											"source": 2
										},
										{
											"begin": 12533,
											"end": 12549,
											"name": "DUP7",
											"source": 2
										},
										{
											"begin": 12533,
											"end": 12549,
											"name": "DUP7",
											"source": 2
										},
										{
											"begin": 12533,
											"end": 12549,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 12533,
											"end": 12540,
											"name": "PUSH",
											"source": 2,
											"value": "2"
										},
										{
											"begin": 12533,
											"end": 12549,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 12533,
											"end": 12549,
											"name": "SWAP5",
											"source": 2
										},
										{
											"begin": 12533,
											"end": 12549,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 12533,
											"end": 12549,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 12533,
											"end": 12549,
											"name": "DUP6",
											"source": 2
										},
										{
											"begin": 12533,
											"end": 12549,
											"name": "KECCAK256",
											"source": 2
										},
										{
											"begin": 12533,
											"end": 12554,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 12533,
											"end": 12554,
											"name": "SLOAD",
											"source": 2
										},
										{
											"begin": 12533,
											"end": 12554,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 12533,
											"end": 12554,
											"name": "SWAP3",
											"source": 2
										},
										{
											"begin": 12533,
											"end": 12554,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 12533,
											"end": 12554,
											"name": "DUP5",
											"source": 2
										},
										{
											"begin": 12533,
											"end": 12554,
											"name": "OR",
											"source": 2
										},
										{
											"begin": 12533,
											"end": 12554,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 12533,
											"end": 12554,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 12533,
											"end": 12554,
											"name": "SSTORE",
											"source": 2
										},
										{
											"begin": 12570,
											"end": 12597,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 12570,
											"end": 12597,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 12009,
											"end": 12016,
											"name": "DUP5",
											"source": 2
										},
										{
											"begin": 12009,
											"end": 12016,
											"name": "SWAP4",
											"source": 2
										},
										{
											"begin": 12570,
											"end": 12597,
											"name": "PUSH",
											"source": 2,
											"value": "DDF252AD1BE2C89B69C2B068FC378DAA952BA7F163C4A11628F55A4DF523B3EF"
										},
										{
											"begin": 12570,
											"end": 12597,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 12570,
											"end": 12597,
											"name": "LOG4",
											"source": 2
										},
										{
											"begin": 3538,
											"end": 3874,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 3468,
											"end": 3874,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 3468,
											"end": 3874,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 3468,
											"end": 3874,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 13075,
											"end": 13382,
											"name": "tag",
											"source": 2,
											"value": "135"
										},
										{
											"begin": 13075,
											"end": 13382,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 13225,
											"end": 13233,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 13216,
											"end": 13233,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 13216,
											"end": 13221,
											"name": "DUP4",
											"source": 2
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 13216,
											"end": 13233,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 13216,
											"end": 13233,
											"name": "SUB",
											"source": 2
										},
										{
											"begin": 13208,
											"end": 13263,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "186"
										},
										{
											"begin": 13208,
											"end": 13263,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 13208,
											"end": 13263,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 13208,
											"end": 13263,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "461BCD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E5"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 13208,
											"end": 13263,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 13208,
											"end": 13263,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 8684,
											"end": 8686,
											"name": "PUSH",
											"source": 14,
											"value": "20"
										},
										{
											"begin": 13208,
											"end": 13263,
											"name": "PUSH",
											"source": 2,
											"value": "4"
										},
										{
											"begin": 13208,
											"end": 13263,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 13208,
											"end": 13263,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 8666,
											"end": 8687,
											"name": "MSTORE",
											"source": 14
										},
										{
											"begin": 8723,
											"end": 8725,
											"name": "PUSH",
											"source": 14,
											"value": "19"
										},
										{
											"begin": 8703,
											"end": 8721,
											"name": "PUSH",
											"source": 14,
											"value": "24"
										},
										{
											"begin": 8703,
											"end": 8721,
											"name": "DUP3",
											"source": 14
										},
										{
											"begin": 8703,
											"end": 8721,
											"name": "ADD",
											"source": 14
										},
										{
											"begin": 8696,
											"end": 8726,
											"name": "MSTORE",
											"source": 14
										},
										{
											"begin": 8762,
											"end": 8789,
											"name": "PUSH",
											"source": 14,
											"value": "4552433732313A20617070726F766520746F2063616C6C657200000000000000"
										},
										{
											"begin": 8742,
											"end": 8760,
											"name": "PUSH",
											"source": 14,
											"value": "44"
										},
										{
											"begin": 8742,
											"end": 8760,
											"name": "DUP3",
											"source": 14
										},
										{
											"begin": 8742,
											"end": 8760,
											"name": "ADD",
											"source": 14
										},
										{
											"begin": 8735,
											"end": 8790,
											"name": "MSTORE",
											"source": 14
										},
										{
											"begin": 8807,
											"end": 8825,
											"name": "PUSH",
											"source": 14,
											"value": "64"
										},
										{
											"begin": 8807,
											"end": 8825,
											"name": "ADD",
											"source": 14
										},
										{
											"begin": 13208,
											"end": 13263,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "93"
										},
										{
											"begin": 8482,
											"end": 8831,
											"name": "JUMP",
											"source": 14
										},
										{
											"begin": 13208,
											"end": 13263,
											"name": "tag",
											"source": 2,
											"value": "186"
										},
										{
											"begin": 13208,
											"end": 13263,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 13273,
											"end": 13298,
											"name": "DUP4",
											"source": 2
										},
										{
											"begin": 13273,
											"end": 13298,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 13273,
											"end": 13298,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 13273,
											"end": 13298,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 13273,
											"end": 13298,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 13273,
											"end": 13298,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 13273,
											"end": 13298,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 13273,
											"end": 13291,
											"name": "PUSH",
											"source": 2,
											"value": "5"
										},
										{
											"begin": 13273,
											"end": 13298,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 13273,
											"end": 13298,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 13273,
											"end": 13298,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 13273,
											"end": 13298,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 13273,
											"end": 13298,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 13273,
											"end": 13298,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 13273,
											"end": 13298,
											"name": "DUP4",
											"source": 2
										},
										{
											"begin": 13273,
											"end": 13298,
											"name": "KECCAK256",
											"source": 2
										},
										{
											"begin": 13273,
											"end": 13308,
											"name": "SWAP5",
											"source": 2
										},
										{
											"begin": 13273,
											"end": 13308,
											"name": "DUP8",
											"source": 2
										},
										{
											"begin": 13273,
											"end": 13308,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 13273,
											"end": 13308,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 13273,
											"end": 13308,
											"name": "DUP5",
											"source": 2
										},
										{
											"begin": 13273,
											"end": 13308,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 13273,
											"end": 13308,
											"name": "SWAP5",
											"source": 2
										},
										{
											"begin": 13273,
											"end": 13308,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 13273,
											"end": 13308,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 13273,
											"end": 13308,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 13273,
											"end": 13308,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 13273,
											"end": 13308,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 13273,
											"end": 13308,
											"name": "KECCAK256",
											"source": 2
										},
										{
											"begin": 13273,
											"end": 13319,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 13273,
											"end": 13319,
											"name": "SLOAD",
											"source": 2
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "FF"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "NOT",
											"source": -1
										},
										{
											"begin": 13273,
											"end": 13319,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 13273,
											"end": 13319,
											"name": "DUP7",
											"source": 2
										},
										{
											"begin": 13273,
											"end": 13319,
											"name": "ISZERO",
											"source": 2
										},
										{
											"begin": 13273,
											"end": 13319,
											"name": "ISZERO",
											"source": 2
										},
										{
											"begin": 13273,
											"end": 13319,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 13273,
											"end": 13319,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 13273,
											"end": 13319,
											"name": "OR",
											"source": 2
										},
										{
											"begin": 13273,
											"end": 13319,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 13273,
											"end": 13319,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 13273,
											"end": 13319,
											"name": "SSTORE",
											"source": 2
										},
										{
											"begin": 13334,
											"end": 13375,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 13334,
											"end": 13375,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 540,
											"end": 581,
											"name": "SWAP2",
											"source": 14
										},
										{
											"begin": 540,
											"end": 581,
											"name": "DUP3",
											"source": 14
										},
										{
											"begin": 540,
											"end": 581,
											"name": "MSTORE",
											"source": 14
										},
										{
											"begin": 13334,
											"end": 13375,
											"name": "PUSH",
											"source": 2,
											"value": "17307EAB39AB6107E8899845AD3D59BD9653F200F220920489CA2B5937696C31"
										},
										{
											"begin": 13334,
											"end": 13375,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 513,
											"end": 531,
											"name": "ADD",
											"source": 14
										},
										{
											"begin": 13334,
											"end": 13375,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 13334,
											"end": 13375,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 13334,
											"end": 13375,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 13334,
											"end": 13375,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 13334,
											"end": 13375,
											"name": "SUB",
											"source": 2
										},
										{
											"begin": 13334,
											"end": 13375,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 13334,
											"end": 13375,
											"name": "LOG3",
											"source": 2
										},
										{
											"begin": 13075,
											"end": 13382,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 13075,
											"end": 13382,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 13075,
											"end": 13382,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 13075,
											"end": 13382,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 6424,
											"end": 6729,
											"name": "tag",
											"source": 2,
											"value": "142"
										},
										{
											"begin": 6424,
											"end": 6729,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 6574,
											"end": 6602,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "191"
										},
										{
											"begin": 6584,
											"end": 6588,
											"name": "DUP5",
											"source": 2
										},
										{
											"begin": 6590,
											"end": 6592,
											"name": "DUP5",
											"source": 2
										},
										{
											"begin": 6594,
											"end": 6601,
											"name": "DUP5",
											"source": 2
										},
										{
											"begin": 6574,
											"end": 6583,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "113"
										},
										{
											"begin": 6574,
											"end": 6602,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 6574,
											"end": 6602,
											"name": "tag",
											"source": 2,
											"value": "191"
										},
										{
											"begin": 6574,
											"end": 6602,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 6620,
											"end": 6667,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "192"
										},
										{
											"begin": 6643,
											"end": 6647,
											"name": "DUP5",
											"source": 2
										},
										{
											"begin": 6649,
											"end": 6651,
											"name": "DUP5",
											"source": 2
										},
										{
											"begin": 6653,
											"end": 6660,
											"name": "DUP5",
											"source": 2
										},
										{
											"begin": 6662,
											"end": 6666,
											"name": "DUP5",
											"source": 2
										},
										{
											"begin": 6620,
											"end": 6642,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "193"
										},
										{
											"begin": 6620,
											"end": 6667,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 6620,
											"end": 6667,
											"name": "tag",
											"source": 2,
											"value": "192"
										},
										{
											"begin": 6620,
											"end": 6667,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 6612,
											"end": 6722,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "141"
										},
										{
											"begin": 6612,
											"end": 6722,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 6612,
											"end": 6722,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 6612,
											"end": 6722,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "461BCD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E5"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 6612,
											"end": 6722,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 6612,
											"end": 6722,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 6612,
											"end": 6722,
											"name": "PUSH",
											"source": 2,
											"value": "4"
										},
										{
											"begin": 6612,
											"end": 6722,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 6612,
											"end": 6722,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "93"
										},
										{
											"begin": 6612,
											"end": 6722,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 6612,
											"end": 6722,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "196"
										},
										{
											"begin": 6612,
											"end": 6722,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 415,
											"end": 1111,
											"name": "tag",
											"source": 9,
											"value": "150"
										},
										{
											"begin": 415,
											"end": 1111,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 471,
											"end": 484,
											"name": "PUSH",
											"source": 9,
											"value": "60"
										},
										{
											"begin": 520,
											"end": 534,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 537,
											"end": 554,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "199"
										},
										{
											"begin": 548,
											"end": 553,
											"name": "DUP4",
											"source": 9
										},
										{
											"begin": 537,
											"end": 547,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "200"
										},
										{
											"begin": 537,
											"end": 554,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 537,
											"end": 554,
											"name": "tag",
											"source": 9,
											"value": "199"
										},
										{
											"begin": 537,
											"end": 554,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 557,
											"end": 558,
											"name": "PUSH",
											"source": 9,
											"value": "1"
										},
										{
											"begin": 537,
											"end": 558,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 520,
											"end": 558,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 520,
											"end": 558,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 572,
											"end": 592,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 606,
											"end": 612,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 595,
											"end": 613,
											"name": "PUSH",
											"source": 9,
											"value": "FFFFFFFFFFFFFFFF"
										},
										{
											"begin": 595,
											"end": 613,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 595,
											"end": 613,
											"name": "GT",
											"source": 9
										},
										{
											"begin": 595,
											"end": 613,
											"name": "ISZERO",
											"source": 9
										},
										{
											"begin": 595,
											"end": 613,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "202"
										},
										{
											"begin": 595,
											"end": 613,
											"name": "JUMPI",
											"source": 9
										},
										{
											"begin": 595,
											"end": 613,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "202"
										},
										{
											"begin": 595,
											"end": 613,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "203"
										},
										{
											"begin": 595,
											"end": 613,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 595,
											"end": 613,
											"name": "tag",
											"source": 9,
											"value": "202"
										},
										{
											"begin": 595,
											"end": 613,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 595,
											"end": 613,
											"name": "PUSH",
											"source": 9,
											"value": "40"
										},
										{
											"begin": 595,
											"end": 613,
											"name": "MLOAD",
											"source": 9
										},
										{
											"begin": 595,
											"end": 613,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 595,
											"end": 613,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 595,
											"end": 613,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 595,
											"end": 613,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 595,
											"end": 613,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 595,
											"end": 613,
											"name": "PUSH",
											"source": 9,
											"value": "1F"
										},
										{
											"begin": 595,
											"end": 613,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 595,
											"end": 613,
											"name": "PUSH",
											"source": 9,
											"value": "1F"
										},
										{
											"begin": 595,
											"end": 613,
											"name": "NOT",
											"source": 9
										},
										{
											"begin": 595,
											"end": 613,
											"name": "AND",
											"source": 9
										},
										{
											"begin": 595,
											"end": 613,
											"name": "PUSH",
											"source": 9,
											"value": "20"
										},
										{
											"begin": 595,
											"end": 613,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 595,
											"end": 613,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 595,
											"end": 613,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 595,
											"end": 613,
											"name": "PUSH",
											"source": 9,
											"value": "40"
										},
										{
											"begin": 595,
											"end": 613,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 595,
											"end": 613,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 595,
											"end": 613,
											"name": "ISZERO",
											"source": 9
										},
										{
											"begin": 595,
											"end": 613,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "204"
										},
										{
											"begin": 595,
											"end": 613,
											"name": "JUMPI",
											"source": 9
										},
										{
											"begin": 595,
											"end": 613,
											"name": "PUSH",
											"source": 9,
											"value": "20"
										},
										{
											"begin": 595,
											"end": 613,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 595,
											"end": 613,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 595,
											"end": 613,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 595,
											"end": 613,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 595,
											"end": 613,
											"name": "CALLDATASIZE",
											"source": 9
										},
										{
											"begin": 595,
											"end": 613,
											"name": "DUP4",
											"source": 9
										},
										{
											"begin": 595,
											"end": 613,
											"name": "CALLDATACOPY",
											"source": 9
										},
										{
											"begin": 595,
											"end": 613,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 595,
											"end": 613,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 595,
											"end": 613,
											"name": "tag",
											"source": 9,
											"value": "204"
										},
										{
											"begin": 595,
											"end": 613,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 572,
											"end": 613,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 733,
											"end": 761,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 733,
											"end": 761,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 733,
											"end": 761,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 749,
											"end": 751,
											"name": "PUSH",
											"source": 9,
											"value": "20"
										},
										{
											"begin": 733,
											"end": 761,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 788,
											"end": 1068,
											"name": "tag",
											"source": 9,
											"value": "205"
										},
										{
											"begin": 788,
											"end": 1068,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "NOT",
											"source": -1
										},
										{
											"begin": 819,
											"end": 824,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "181899199A1A9B1B9C1CB0B131B232B3"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "81"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 953,
											"end": 955,
											"name": "PUSH",
											"source": 9,
											"value": "A"
										},
										{
											"begin": 942,
											"end": 956,
											"name": "DUP7",
											"source": 9
										},
										{
											"begin": 942,
											"end": 956,
											"name": "MOD",
											"source": 9
										},
										{
											"begin": 937,
											"end": 967,
											"name": "BYTE",
											"source": 9
										},
										{
											"begin": 819,
											"end": 824,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 924,
											"end": 968,
											"name": "MSTORE8",
											"source": 9
										},
										{
											"begin": 1012,
											"end": 1014,
											"name": "PUSH",
											"source": 9,
											"value": "A"
										},
										{
											"begin": 1003,
											"end": 1014,
											"name": "DUP6",
											"source": 9
										},
										{
											"begin": 1003,
											"end": 1014,
											"name": "DIV",
											"source": 9
										},
										{
											"begin": 1003,
											"end": 1014,
											"name": "SWAP5",
											"source": 9
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 1032,
											"end": 1053,
											"name": "DUP5",
											"source": 9
										},
										{
											"begin": 788,
											"end": 1068,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "205"
										},
										{
											"begin": 1032,
											"end": 1053,
											"name": "JUMPI",
											"source": 9
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 1088,
											"end": 1094,
											"name": "SWAP4",
											"source": 9
										},
										{
											"begin": 415,
											"end": 1111,
											"name": "SWAP3",
											"source": 9
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 415,
											"end": 1111,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 15698,
											"end": 16094,
											"name": "tag",
											"source": 2,
											"value": "178"
										},
										{
											"begin": 15698,
											"end": 16094,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 15882,
											"end": 15883,
											"name": "PUSH",
											"source": 2,
											"value": "1"
										},
										{
											"begin": 15870,
											"end": 15879,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 15870,
											"end": 15883,
											"name": "GT",
											"source": 2
										},
										{
											"begin": 15866,
											"end": 16088,
											"name": "ISZERO",
											"source": 2
										},
										{
											"begin": 15866,
											"end": 16088,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "141"
										},
										{
											"begin": 15866,
											"end": 16088,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 15903,
											"end": 15921,
											"name": "DUP5",
											"source": 2
										},
										{
											"begin": 15903,
											"end": 15921,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 15903,
											"end": 15921,
											"name": "ISZERO",
											"source": 2
										},
										{
											"begin": 15899,
											"end": 15984,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "215"
										},
										{
											"begin": 15899,
											"end": 15984,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 15941,
											"end": 15956,
											"name": "DUP5",
											"source": 2
										},
										{
											"begin": 15941,
											"end": 15956,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 15941,
											"end": 15956,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 15941,
											"end": 15956,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 15941,
											"end": 15956,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 15941,
											"end": 15956,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 15941,
											"end": 15950,
											"name": "PUSH",
											"source": 2,
											"value": "3"
										},
										{
											"begin": 15941,
											"end": 15956,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 15941,
											"end": 15956,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 15941,
											"end": 15956,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 15941,
											"end": 15956,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 15941,
											"end": 15956,
											"name": "KECCAK256",
											"source": 2
										},
										{
											"begin": 15941,
											"end": 15969,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 15941,
											"end": 15969,
											"name": "SLOAD",
											"source": 2
										},
										{
											"begin": 15960,
											"end": 15969,
											"name": "DUP4",
											"source": 2
										},
										{
											"begin": 15960,
											"end": 15969,
											"name": "SWAP3",
											"source": 2
										},
										{
											"begin": 15941,
											"end": 15956,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 15941,
											"end": 15969,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "216"
										},
										{
											"begin": 15941,
											"end": 15969,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 15960,
											"end": 15969,
											"name": "DUP5",
											"source": 2
										},
										{
											"begin": 15960,
											"end": 15969,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 15941,
											"end": 15969,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "217"
										},
										{
											"begin": 15941,
											"end": 15969,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 15941,
											"end": 15969,
											"name": "tag",
											"source": 2,
											"value": "216"
										},
										{
											"begin": 15941,
											"end": 15969,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 15941,
											"end": 15969,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 15941,
											"end": 15969,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 15941,
											"end": 15969,
											"name": "SSTORE",
											"source": 2
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 15899,
											"end": 15984,
											"name": "tag",
											"source": 2,
											"value": "215"
										},
										{
											"begin": 15899,
											"end": 15984,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 16001,
											"end": 16017,
											"name": "DUP4",
											"source": 2
										},
										{
											"begin": 16001,
											"end": 16017,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 16001,
											"end": 16017,
											"name": "ISZERO",
											"source": 2
										},
										{
											"begin": 15997,
											"end": 16078,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "141"
										},
										{
											"begin": 15997,
											"end": 16078,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 16037,
											"end": 16050,
											"name": "DUP4",
											"source": 2
										},
										{
											"begin": 16037,
											"end": 16050,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 16037,
											"end": 16050,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 16037,
											"end": 16050,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 16037,
											"end": 16050,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 16037,
											"end": 16050,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 16037,
											"end": 16046,
											"name": "PUSH",
											"source": 2,
											"value": "3"
										},
										{
											"begin": 16037,
											"end": 16050,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 16037,
											"end": 16050,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 16037,
											"end": 16050,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 16037,
											"end": 16050,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 16037,
											"end": 16050,
											"name": "KECCAK256",
											"source": 2
										},
										{
											"begin": 16037,
											"end": 16063,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 16037,
											"end": 16063,
											"name": "SLOAD",
											"source": 2
										},
										{
											"begin": 16054,
											"end": 16063,
											"name": "DUP4",
											"source": 2
										},
										{
											"begin": 16054,
											"end": 16063,
											"name": "SWAP3",
											"source": 2
										},
										{
											"begin": 16037,
											"end": 16050,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 16037,
											"end": 16063,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "219"
										},
										{
											"begin": 16037,
											"end": 16063,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 16054,
											"end": 16063,
											"name": "DUP5",
											"source": 2
										},
										{
											"begin": 16054,
											"end": 16063,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 16037,
											"end": 16063,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "220"
										},
										{
											"begin": 16037,
											"end": 16063,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 16037,
											"end": 16063,
											"name": "tag",
											"source": 2,
											"value": "219"
										},
										{
											"begin": 16037,
											"end": 16063,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 16037,
											"end": 16063,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 16037,
											"end": 16063,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 16037,
											"end": 16063,
											"name": "SSTORE",
											"source": 2
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 15698,
											"end": 16094,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 15698,
											"end": 16094,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 15698,
											"end": 16094,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 15698,
											"end": 16094,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 15698,
											"end": 16094,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 14151,
											"end": 14982,
											"name": "tag",
											"source": 2,
											"value": "193"
										},
										{
											"begin": 14151,
											"end": 14982,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 14300,
											"end": 14304,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 14320,
											"end": 14333,
											"name": "DUP5",
											"source": 2
										},
										{
											"begin": 14320,
											"end": 14333,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 1465,
											"end": 1484,
											"name": "EXTCODESIZE",
											"source": 6
										},
										{
											"begin": 1465,
											"end": 1488,
											"name": "ISZERO",
											"source": 6
										},
										{
											"begin": 14316,
											"end": 14976,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "225"
										},
										{
											"begin": 14316,
											"end": 14976,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 14355,
											"end": 14426,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 14355,
											"end": 14426,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A85BD01"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 14355,
											"end": 14426,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 14355,
											"end": 14426,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 14355,
											"end": 14391,
											"name": "DUP6",
											"source": 2
										},
										{
											"begin": 14355,
											"end": 14391,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 14355,
											"end": 14391,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 14355,
											"end": 14391,
											"name": "PUSH",
											"source": 2,
											"value": "150B7A02"
										},
										{
											"begin": 14355,
											"end": 14391,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 14355,
											"end": 14426,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "227"
										},
										{
											"begin": 14355,
											"end": 14426,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 719,
											"end": 729,
											"name": "CALLER",
											"source": 7
										},
										{
											"begin": 719,
											"end": 729,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 14406,
											"end": 14410,
											"name": "DUP10",
											"source": 2
										},
										{
											"begin": 14406,
											"end": 14410,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 14412,
											"end": 14419,
											"name": "DUP9",
											"source": 2
										},
										{
											"begin": 14412,
											"end": 14419,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 14421,
											"end": 14425,
											"name": "DUP9",
											"source": 2
										},
										{
											"begin": 14421,
											"end": 14425,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 14355,
											"end": 14426,
											"name": "PUSH",
											"source": 2,
											"value": "4"
										},
										{
											"begin": 14355,
											"end": 14426,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 14355,
											"end": 14426,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "228"
										},
										{
											"begin": 14355,
											"end": 14426,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 14355,
											"end": 14426,
											"name": "tag",
											"source": 2,
											"value": "227"
										},
										{
											"begin": 14355,
											"end": 14426,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 14355,
											"end": 14426,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 14355,
											"end": 14426,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 14355,
											"end": 14426,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 14355,
											"end": 14426,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 14355,
											"end": 14426,
											"name": "DUP4",
											"source": 2
										},
										{
											"begin": 14355,
											"end": 14426,
											"name": "SUB",
											"source": 2
										},
										{
											"begin": 14355,
											"end": 14426,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 14355,
											"end": 14426,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 14355,
											"end": 14426,
											"name": "DUP8",
											"source": 2
										},
										{
											"begin": 14355,
											"end": 14426,
											"name": "GAS",
											"source": 2
										},
										{
											"begin": 14355,
											"end": 14426,
											"name": "CALL",
											"source": 2
										},
										{
											"begin": 14355,
											"end": 14426,
											"name": "SWAP3",
											"source": 2
										},
										{
											"begin": 14355,
											"end": 14426,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 14355,
											"end": 14426,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 14355,
											"end": 14426,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 14355,
											"end": 14426,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 14355,
											"end": 14426,
											"name": "ISZERO",
											"source": 2
										},
										{
											"begin": 14355,
											"end": 14426,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "229"
										},
										{
											"begin": 14355,
											"end": 14426,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 14355,
											"end": 14426,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 14355,
											"end": 14426,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 14355,
											"end": 14426,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 14355,
											"end": 14426,
											"name": "PUSH",
											"source": 2,
											"value": "1F"
										},
										{
											"begin": 14355,
											"end": 14426,
											"name": "RETURNDATASIZE",
											"source": 2
										},
										{
											"begin": 14355,
											"end": 14426,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 14355,
											"end": 14426,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 14355,
											"end": 14426,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1F"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "NOT",
											"source": -1
										},
										{
											"begin": 14355,
											"end": 14426,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 14355,
											"end": 14426,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 14355,
											"end": 14426,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 14355,
											"end": 14426,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 14355,
											"end": 14426,
											"name": "SWAP3",
											"source": 2
										},
										{
											"begin": 14355,
											"end": 14426,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 14355,
											"end": 14426,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "230"
										},
										{
											"begin": 14355,
											"end": 14426,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 14355,
											"end": 14426,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 14355,
											"end": 14426,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 14355,
											"end": 14426,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 14355,
											"end": 14426,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "231"
										},
										{
											"begin": 14355,
											"end": 14426,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 14355,
											"end": 14426,
											"name": "tag",
											"source": 2,
											"value": "230"
										},
										{
											"begin": 14355,
											"end": 14426,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 14355,
											"end": 14426,
											"name": "PUSH",
											"source": 2,
											"value": "1"
										},
										{
											"begin": 14355,
											"end": 14426,
											"name": "tag",
											"source": 2,
											"value": "229"
										},
										{
											"begin": 14355,
											"end": 14426,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 14351,
											"end": 14924,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "232"
										},
										{
											"begin": 14351,
											"end": 14924,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 14351,
											"end": 14924,
											"name": "RETURNDATASIZE",
											"source": 2
										},
										{
											"begin": 14351,
											"end": 14924,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 14351,
											"end": 14924,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 14351,
											"end": 14924,
											"name": "ISZERO",
											"source": 2
										},
										{
											"begin": 14351,
											"end": 14924,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "237"
										},
										{
											"begin": 14351,
											"end": 14924,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 14351,
											"end": 14924,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 14351,
											"end": 14924,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 14351,
											"end": 14924,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 14351,
											"end": 14924,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 14351,
											"end": 14924,
											"name": "PUSH",
											"source": 2,
											"value": "1F"
										},
										{
											"begin": 14351,
											"end": 14924,
											"name": "NOT",
											"source": 2
										},
										{
											"begin": 14351,
											"end": 14924,
											"name": "PUSH",
											"source": 2,
											"value": "3F"
										},
										{
											"begin": 14351,
											"end": 14924,
											"name": "RETURNDATASIZE",
											"source": 2
										},
										{
											"begin": 14351,
											"end": 14924,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 14351,
											"end": 14924,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 14351,
											"end": 14924,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 14351,
											"end": 14924,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 14351,
											"end": 14924,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 14351,
											"end": 14924,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 14351,
											"end": 14924,
											"name": "RETURNDATASIZE",
											"source": 2
										},
										{
											"begin": 14351,
											"end": 14924,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 14351,
											"end": 14924,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 14351,
											"end": 14924,
											"name": "RETURNDATASIZE",
											"source": 2
										},
										{
											"begin": 14351,
											"end": 14924,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 14351,
											"end": 14924,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 14351,
											"end": 14924,
											"name": "DUP5",
											"source": 2
										},
										{
											"begin": 14351,
											"end": 14924,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 14351,
											"end": 14924,
											"name": "RETURNDATACOPY",
											"source": 2
										},
										{
											"begin": 14351,
											"end": 14924,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "236"
										},
										{
											"begin": 14351,
											"end": 14924,
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 14351,
											"end": 14924,
											"name": "tag",
											"source": 2,
											"value": "237"
										},
										{
											"begin": 14351,
											"end": 14924,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 14351,
											"end": 14924,
											"name": "PUSH",
											"source": 2,
											"value": "60"
										},
										{
											"begin": 14351,
											"end": 14924,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 14351,
											"end": 14924,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 14351,
											"end": 14924,
											"name": "tag",
											"source": 2,
											"value": "236"
										},
										{
											"begin": 14351,
											"end": 14924,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 14351,
											"end": 14924,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 14593,
											"end": 14599,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 14593,
											"end": 14606,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 14610,
											"end": 14611,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 14593,
											"end": 14611,
											"name": "SUB",
											"source": 2
										},
										{
											"begin": 14589,
											"end": 14910,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "238"
										},
										{
											"begin": 14589,
											"end": 14910,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 14635,
											"end": 14695,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 14635,
											"end": 14695,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "461BCD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E5"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 14635,
											"end": 14695,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 14635,
											"end": 14695,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 14635,
											"end": 14695,
											"name": "PUSH",
											"source": 2,
											"value": "4"
										},
										{
											"begin": 14635,
											"end": 14695,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 14635,
											"end": 14695,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "93"
										},
										{
											"begin": 14635,
											"end": 14695,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 14635,
											"end": 14695,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "196"
										},
										{
											"begin": 14635,
											"end": 14695,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 14589,
											"end": 14910,
											"name": "tag",
											"source": 2,
											"value": "238"
										},
										{
											"begin": 14589,
											"end": 14910,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 14862,
											"end": 14868,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 14856,
											"end": 14869,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 14847,
											"end": 14853,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 14843,
											"end": 14845,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 14839,
											"end": 14854,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 14832,
											"end": 14870,
											"name": "REVERT",
											"source": 2
										},
										{
											"begin": 14351,
											"end": 14924,
											"name": "tag",
											"source": 2,
											"value": "232"
										},
										{
											"begin": 14351,
											"end": 14924,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "NOT",
											"source": -1
										},
										{
											"begin": 14476,
											"end": 14527,
											"name": "AND",
											"source": 2
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A85BD01"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 14476,
											"end": 14527,
											"name": "EQ",
											"source": 2
										},
										{
											"begin": 14476,
											"end": 14527,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 14469,
											"end": 14527,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "167"
										},
										{
											"begin": 14469,
											"end": 14527,
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 14316,
											"end": 14976,
											"name": "tag",
											"source": 2,
											"value": "225"
										},
										{
											"begin": 14316,
											"end": 14976,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 14961,
											"end": 14965,
											"name": "PUSH",
											"source": 2,
											"value": "1"
										},
										{
											"begin": 14151,
											"end": 14982,
											"name": "SWAP5",
											"source": 2
										},
										{
											"begin": 14151,
											"end": 14982,
											"name": "SWAP4",
											"source": 2
										},
										{
											"begin": 14151,
											"end": 14982,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 14151,
											"end": 14982,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 14151,
											"end": 14982,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 14151,
											"end": 14982,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 14151,
											"end": 14982,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 9889,
											"end": 10779,
											"name": "tag",
											"source": 12,
											"value": "200"
										},
										{
											"begin": 9889,
											"end": 10779,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 9942,
											"end": 9949,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 9942,
											"end": 9949,
											"name": "DUP1",
											"source": 12
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "184F03E93FF9F4DAA797ED6E38ED64BF6A1F01"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "40"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 10017,
											"end": 10032,
											"name": "DUP4",
											"source": 12
										},
										{
											"begin": 10017,
											"end": 10032,
											"name": "LT",
											"source": 12
										},
										{
											"begin": 10013,
											"end": 10112,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "244"
										},
										{
											"begin": 10013,
											"end": 10112,
											"name": "JUMPI",
											"source": 12
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "184F03E93FF9F4DAA797ED6E38ED64BF6A1F01"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "40"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 10052,
											"end": 10067,
											"name": "DUP4",
											"source": 12
										},
										{
											"begin": 10052,
											"end": 10067,
											"name": "DIV",
											"source": 12
										},
										{
											"begin": 10052,
											"end": 10067,
											"name": "SWAP3",
											"source": 12
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 10095,
											"end": 10097,
											"name": "PUSH",
											"source": 12,
											"value": "40"
										},
										{
											"begin": 10085,
											"end": 10097,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 10013,
											"end": 10112,
											"name": "tag",
											"source": 12,
											"value": "244"
										},
										{
											"begin": 10013,
											"end": 10112,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 10138,
											"end": 10144,
											"name": "PUSH",
											"source": 12,
											"value": "4EE2D6D415B85ACEF8100000000"
										},
										{
											"begin": 10129,
											"end": 10134,
											"name": "DUP4",
											"source": 12
										},
										{
											"begin": 10129,
											"end": 10144,
											"name": "LT",
											"source": 12
										},
										{
											"begin": 10125,
											"end": 10224,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "247"
										},
										{
											"begin": 10125,
											"end": 10224,
											"name": "JUMPI",
											"source": 12
										},
										{
											"begin": 10173,
											"end": 10179,
											"name": "PUSH",
											"source": 12,
											"value": "4EE2D6D415B85ACEF8100000000"
										},
										{
											"begin": 10164,
											"end": 10179,
											"name": "DUP4",
											"source": 12
										},
										{
											"begin": 10164,
											"end": 10179,
											"name": "DIV",
											"source": 12
										},
										{
											"begin": 10164,
											"end": 10179,
											"name": "SWAP3",
											"source": 12
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 10207,
											"end": 10209,
											"name": "PUSH",
											"source": 12,
											"value": "20"
										},
										{
											"begin": 10197,
											"end": 10209,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 10125,
											"end": 10224,
											"name": "tag",
											"source": 12,
											"value": "247"
										},
										{
											"begin": 10125,
											"end": 10224,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 10250,
											"end": 10256,
											"name": "PUSH",
											"source": 12,
											"value": "2386F26FC10000"
										},
										{
											"begin": 10241,
											"end": 10246,
											"name": "DUP4",
											"source": 12
										},
										{
											"begin": 10241,
											"end": 10256,
											"name": "LT",
											"source": 12
										},
										{
											"begin": 10237,
											"end": 10336,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "250"
										},
										{
											"begin": 10237,
											"end": 10336,
											"name": "JUMPI",
											"source": 12
										},
										{
											"begin": 10285,
											"end": 10291,
											"name": "PUSH",
											"source": 12,
											"value": "2386F26FC10000"
										},
										{
											"begin": 10276,
											"end": 10291,
											"name": "DUP4",
											"source": 12
										},
										{
											"begin": 10276,
											"end": 10291,
											"name": "DIV",
											"source": 12
										},
										{
											"begin": 10276,
											"end": 10291,
											"name": "SWAP3",
											"source": 12
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 10319,
											"end": 10321,
											"name": "PUSH",
											"source": 12,
											"value": "10"
										},
										{
											"begin": 10309,
											"end": 10321,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 10237,
											"end": 10336,
											"name": "tag",
											"source": 12,
											"value": "250"
										},
										{
											"begin": 10237,
											"end": 10336,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 10362,
											"end": 10367,
											"name": "PUSH",
											"source": 12,
											"value": "5F5E100"
										},
										{
											"begin": 10353,
											"end": 10358,
											"name": "DUP4",
											"source": 12
										},
										{
											"begin": 10353,
											"end": 10367,
											"name": "LT",
											"source": 12
										},
										{
											"begin": 10349,
											"end": 10445,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "253"
										},
										{
											"begin": 10349,
											"end": 10445,
											"name": "JUMPI",
											"source": 12
										},
										{
											"begin": 10396,
											"end": 10401,
											"name": "PUSH",
											"source": 12,
											"value": "5F5E100"
										},
										{
											"begin": 10387,
											"end": 10401,
											"name": "DUP4",
											"source": 12
										},
										{
											"begin": 10387,
											"end": 10401,
											"name": "DIV",
											"source": 12
										},
										{
											"begin": 10387,
											"end": 10401,
											"name": "SWAP3",
											"source": 12
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 10429,
											"end": 10430,
											"name": "PUSH",
											"source": 12,
											"value": "8"
										},
										{
											"begin": 10419,
											"end": 10430,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 10349,
											"end": 10445,
											"name": "tag",
											"source": 12,
											"value": "253"
										},
										{
											"begin": 10349,
											"end": 10445,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 10471,
											"end": 10476,
											"name": "PUSH",
											"source": 12,
											"value": "2710"
										},
										{
											"begin": 10462,
											"end": 10467,
											"name": "DUP4",
											"source": 12
										},
										{
											"begin": 10462,
											"end": 10476,
											"name": "LT",
											"source": 12
										},
										{
											"begin": 10458,
											"end": 10554,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "256"
										},
										{
											"begin": 10458,
											"end": 10554,
											"name": "JUMPI",
											"source": 12
										},
										{
											"begin": 10505,
											"end": 10510,
											"name": "PUSH",
											"source": 12,
											"value": "2710"
										},
										{
											"begin": 10496,
											"end": 10510,
											"name": "DUP4",
											"source": 12
										},
										{
											"begin": 10496,
											"end": 10510,
											"name": "DIV",
											"source": 12
										},
										{
											"begin": 10496,
											"end": 10510,
											"name": "SWAP3",
											"source": 12
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 10538,
											"end": 10539,
											"name": "PUSH",
											"source": 12,
											"value": "4"
										},
										{
											"begin": 10528,
											"end": 10539,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 10458,
											"end": 10554,
											"name": "tag",
											"source": 12,
											"value": "256"
										},
										{
											"begin": 10458,
											"end": 10554,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 10580,
											"end": 10585,
											"name": "PUSH",
											"source": 12,
											"value": "64"
										},
										{
											"begin": 10571,
											"end": 10576,
											"name": "DUP4",
											"source": 12
										},
										{
											"begin": 10571,
											"end": 10585,
											"name": "LT",
											"source": 12
										},
										{
											"begin": 10567,
											"end": 10663,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "259"
										},
										{
											"begin": 10567,
											"end": 10663,
											"name": "JUMPI",
											"source": 12
										},
										{
											"begin": 10614,
											"end": 10619,
											"name": "PUSH",
											"source": 12,
											"value": "64"
										},
										{
											"begin": 10605,
											"end": 10619,
											"name": "DUP4",
											"source": 12
										},
										{
											"begin": 10605,
											"end": 10619,
											"name": "DIV",
											"source": 12
										},
										{
											"begin": 10605,
											"end": 10619,
											"name": "SWAP3",
											"source": 12
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 10647,
											"end": 10648,
											"name": "PUSH",
											"source": 12,
											"value": "2"
										},
										{
											"begin": 10637,
											"end": 10648,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 10567,
											"end": 10663,
											"name": "tag",
											"source": 12,
											"value": "259"
										},
										{
											"begin": 10567,
											"end": 10663,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 10689,
											"end": 10694,
											"name": "PUSH",
											"source": 12,
											"value": "A"
										},
										{
											"begin": 10680,
											"end": 10685,
											"name": "DUP4",
											"source": 12
										},
										{
											"begin": 10680,
											"end": 10694,
											"name": "LT",
											"source": 12
										},
										{
											"begin": 10676,
											"end": 10740,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "78"
										},
										{
											"begin": 10676,
											"end": 10740,
											"name": "JUMPI",
											"source": 12
										},
										{
											"begin": 10724,
											"end": 10725,
											"name": "PUSH",
											"source": 12,
											"value": "1"
										},
										{
											"begin": 10714,
											"end": 10725,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 10766,
											"end": 10772,
											"name": "SWAP3",
											"source": 12
										},
										{
											"begin": 9889,
											"end": 10779,
											"name": "SWAP2",
											"source": 12
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 9889,
											"end": 10779,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 14,
											"end": 145,
											"name": "tag",
											"source": 14,
											"value": "264"
										},
										{
											"begin": 14,
											"end": 145,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "NOT",
											"source": -1
										},
										{
											"begin": 88,
											"end": 120,
											"name": "DUP2",
											"source": 14
										},
										{
											"begin": 88,
											"end": 120,
											"name": "AND",
											"source": 14
										},
										{
											"begin": 78,
											"end": 121,
											"name": "DUP2",
											"source": 14
										},
										{
											"begin": 78,
											"end": 121,
											"name": "EQ",
											"source": 14
										},
										{
											"begin": 68,
											"end": 139,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "158"
										},
										{
											"begin": 68,
											"end": 139,
											"name": "JUMPI",
											"source": 14
										},
										{
											"begin": 135,
											"end": 136,
											"name": "PUSH",
											"source": 14,
											"value": "0"
										},
										{
											"begin": 132,
											"end": 133,
											"name": "DUP1",
											"source": 14
										},
										{
											"begin": 125,
											"end": 137,
											"name": "REVERT",
											"source": 14
										},
										{
											"begin": 150,
											"end": 395,
											"name": "tag",
											"source": 14,
											"value": "20"
										},
										{
											"begin": 150,
											"end": 395,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 208,
											"end": 214,
											"name": "PUSH",
											"source": 14,
											"value": "0"
										},
										{
											"begin": 261,
											"end": 263,
											"name": "PUSH",
											"source": 14,
											"value": "20"
										},
										{
											"begin": 249,
											"end": 258,
											"name": "DUP3",
											"source": 14
										},
										{
											"begin": 240,
											"end": 247,
											"name": "DUP5",
											"source": 14
										},
										{
											"begin": 236,
											"end": 259,
											"name": "SUB",
											"source": 14
										},
										{
											"begin": 232,
											"end": 264,
											"name": "SLT",
											"source": 14
										},
										{
											"begin": 229,
											"end": 281,
											"name": "ISZERO",
											"source": 14
										},
										{
											"begin": 229,
											"end": 281,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "273"
										},
										{
											"begin": 229,
											"end": 281,
											"name": "JUMPI",
											"source": 14
										},
										{
											"begin": 277,
											"end": 278,
											"name": "PUSH",
											"source": 14,
											"value": "0"
										},
										{
											"begin": 274,
											"end": 275,
											"name": "DUP1",
											"source": 14
										},
										{
											"begin": 267,
											"end": 279,
											"name": "REVERT",
											"source": 14
										},
										{
											"begin": 229,
											"end": 281,
											"name": "tag",
											"source": 14,
											"value": "273"
										},
										{
											"begin": 229,
											"end": 281,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 316,
											"end": 325,
											"name": "DUP2",
											"source": 14
										},
										{
											"begin": 303,
											"end": 326,
											"name": "CALLDATALOAD",
											"source": 14
										},
										{
											"begin": 335,
											"end": 365,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "148"
										},
										{
											"begin": 359,
											"end": 364,
											"name": "DUP2",
											"source": 14
										},
										{
											"begin": 335,
											"end": 365,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "264"
										},
										{
											"begin": 335,
											"end": 365,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 14
										},
										{
											"begin": 592,
											"end": 842,
											"name": "tag",
											"source": 14,
											"value": "265"
										},
										{
											"begin": 592,
											"end": 842,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 677,
											"end": 678,
											"name": "PUSH",
											"source": 14,
											"value": "0"
										},
										{
											"begin": 687,
											"end": 800,
											"name": "tag",
											"source": 14,
											"value": "277"
										},
										{
											"begin": 687,
											"end": 800,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 701,
											"end": 707,
											"name": "DUP4",
											"source": 14
										},
										{
											"begin": 698,
											"end": 699,
											"name": "DUP2",
											"source": 14
										},
										{
											"begin": 695,
											"end": 708,
											"name": "LT",
											"source": 14
										},
										{
											"begin": 687,
											"end": 800,
											"name": "ISZERO",
											"source": 14
										},
										{
											"begin": 687,
											"end": 800,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "279"
										},
										{
											"begin": 687,
											"end": 800,
											"name": "JUMPI",
											"source": 14
										},
										{
											"begin": 777,
											"end": 788,
											"name": "DUP2",
											"source": 14
										},
										{
											"begin": 777,
											"end": 788,
											"name": "DUP2",
											"source": 14
										},
										{
											"begin": 777,
											"end": 788,
											"name": "ADD",
											"source": 14
										},
										{
											"begin": 771,
											"end": 789,
											"name": "MLOAD",
											"source": 14
										},
										{
											"begin": 758,
											"end": 769,
											"name": "DUP4",
											"source": 14
										},
										{
											"begin": 758,
											"end": 769,
											"name": "DUP3",
											"source": 14
										},
										{
											"begin": 758,
											"end": 769,
											"name": "ADD",
											"source": 14
										},
										{
											"begin": 751,
											"end": 790,
											"name": "MSTORE",
											"source": 14
										},
										{
											"begin": 723,
											"end": 725,
											"name": "PUSH",
											"source": 14,
											"value": "20"
										},
										{
											"begin": 716,
											"end": 726,
											"name": "ADD",
											"source": 14
										},
										{
											"begin": 687,
											"end": 800,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "277"
										},
										{
											"begin": 687,
											"end": 800,
											"name": "JUMP",
											"source": 14
										},
										{
											"begin": 687,
											"end": 800,
											"name": "tag",
											"source": 14,
											"value": "279"
										},
										{
											"begin": 687,
											"end": 800,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 834,
											"end": 835,
											"name": "PUSH",
											"source": 14,
											"value": "0"
										},
										{
											"begin": 816,
											"end": 832,
											"name": "SWAP2",
											"source": 14
										},
										{
											"begin": 816,
											"end": 832,
											"name": "ADD",
											"source": 14
										},
										{
											"begin": 809,
											"end": 836,
											"name": "MSTORE",
											"source": 14
										},
										{
											"begin": 592,
											"end": 842,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 14
										},
										{
											"begin": 847,
											"end": 1118,
											"name": "tag",
											"source": 14,
											"value": "266"
										},
										{
											"begin": 847,
											"end": 1118,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 889,
											"end": 892,
											"name": "PUSH",
											"source": 14,
											"value": "0"
										},
										{
											"begin": 927,
											"end": 932,
											"name": "DUP2",
											"source": 14
										},
										{
											"begin": 921,
											"end": 933,
											"name": "MLOAD",
											"source": 14
										},
										{
											"begin": 954,
											"end": 960,
											"name": "DUP1",
											"source": 14
										},
										{
											"begin": 949,
											"end": 952,
											"name": "DUP5",
											"source": 14
										},
										{
											"begin": 942,
											"end": 961,
											"name": "MSTORE",
											"source": 14
										},
										{
											"begin": 970,
											"end": 1046,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "281"
										},
										{
											"begin": 1039,
											"end": 1045,
											"name": "DUP2",
											"source": 14
										},
										{
											"begin": 1032,
											"end": 1036,
											"name": "PUSH",
											"source": 14,
											"value": "20"
										},
										{
											"begin": 1027,
											"end": 1030,
											"name": "DUP7",
											"source": 14
										},
										{
											"begin": 1023,
											"end": 1037,
											"name": "ADD",
											"source": 14
										},
										{
											"begin": 1016,
											"end": 1020,
											"name": "PUSH",
											"source": 14,
											"value": "20"
										},
										{
											"begin": 1009,
											"end": 1014,
											"name": "DUP7",
											"source": 14
										},
										{
											"begin": 1005,
											"end": 1021,
											"name": "ADD",
											"source": 14
										},
										{
											"begin": 970,
											"end": 1046,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "265"
										},
										{
											"begin": 970,
											"end": 1046,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 14
										},
										{
											"begin": 970,
											"end": 1046,
											"name": "tag",
											"source": 14,
											"value": "281"
										},
										{
											"begin": 970,
											"end": 1046,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 1100,
											"end": 1102,
											"name": "PUSH",
											"source": 14,
											"value": "1F"
										},
										{
											"begin": 1079,
											"end": 1094,
											"name": "ADD",
											"source": 14
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1F"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "NOT",
											"source": -1
										},
										{
											"begin": 1075,
											"end": 1104,
											"name": "AND",
											"source": 14
										},
										{
											"begin": 1066,
											"end": 1105,
											"name": "SWAP3",
											"source": 14
										},
										{
											"begin": 1066,
											"end": 1105,
											"name": "SWAP1",
											"source": 14
										},
										{
											"begin": 1066,
											"end": 1105,
											"name": "SWAP3",
											"source": 14
										},
										{
											"begin": 1066,
											"end": 1105,
											"name": "ADD",
											"source": 14
										},
										{
											"begin": 1107,
											"end": 1111,
											"name": "PUSH",
											"source": 14,
											"value": "20"
										},
										{
											"begin": 1062,
											"end": 1112,
											"name": "ADD",
											"source": 14
										},
										{
											"begin": 1062,
											"end": 1112,
											"name": "SWAP3",
											"source": 14
										},
										{
											"begin": 847,
											"end": 1118,
											"name": "SWAP2",
											"source": 14
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 847,
											"end": 1118,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 14
										},
										{
											"begin": 1123,
											"end": 1343,
											"name": "tag",
											"source": 14,
											"value": "27"
										},
										{
											"begin": 1123,
											"end": 1343,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 1272,
											"end": 1274,
											"name": "PUSH",
											"source": 14,
											"value": "20"
										},
										{
											"begin": 1261,
											"end": 1270,
											"name": "DUP2",
											"source": 14
										},
										{
											"begin": 1254,
											"end": 1275,
											"name": "MSTORE",
											"source": 14
										},
										{
											"begin": 1235,
											"end": 1239,
											"name": "PUSH",
											"source": 14,
											"value": "0"
										},
										{
											"begin": 1292,
											"end": 1337,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "148"
										},
										{
											"begin": 1333,
											"end": 1335,
											"name": "PUSH",
											"source": 14,
											"value": "20"
										},
										{
											"begin": 1322,
											"end": 1331,
											"name": "DUP4",
											"source": 14
										},
										{
											"begin": 1318,
											"end": 1336,
											"name": "ADD",
											"source": 14
										},
										{
											"begin": 1310,
											"end": 1316,
											"name": "DUP5",
											"source": 14
										},
										{
											"begin": 1292,
											"end": 1337,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "266"
										},
										{
											"begin": 1292,
											"end": 1337,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 14
										},
										{
											"begin": 1348,
											"end": 1528,
											"name": "tag",
											"source": 14,
											"value": "30"
										},
										{
											"begin": 1348,
											"end": 1528,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 1407,
											"end": 1413,
											"name": "PUSH",
											"source": 14,
											"value": "0"
										},
										{
											"begin": 1460,
											"end": 1462,
											"name": "PUSH",
											"source": 14,
											"value": "20"
										},
										{
											"begin": 1448,
											"end": 1457,
											"name": "DUP3",
											"source": 14
										},
										{
											"begin": 1439,
											"end": 1446,
											"name": "DUP5",
											"source": 14
										},
										{
											"begin": 1435,
											"end": 1458,
											"name": "SUB",
											"source": 14
										},
										{
											"begin": 1431,
											"end": 1463,
											"name": "SLT",
											"source": 14
										},
										{
											"begin": 1428,
											"end": 1480,
											"name": "ISZERO",
											"source": 14
										},
										{
											"begin": 1428,
											"end": 1480,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "285"
										},
										{
											"begin": 1428,
											"end": 1480,
											"name": "JUMPI",
											"source": 14
										},
										{
											"begin": 1476,
											"end": 1477,
											"name": "PUSH",
											"source": 14,
											"value": "0"
										},
										{
											"begin": 1473,
											"end": 1474,
											"name": "DUP1",
											"source": 14
										},
										{
											"begin": 1466,
											"end": 1478,
											"name": "REVERT",
											"source": 14
										},
										{
											"begin": 1428,
											"end": 1480,
											"name": "tag",
											"source": 14,
											"value": "285"
										},
										{
											"begin": 1428,
											"end": 1480,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 1499,
											"end": 1522,
											"name": "CALLDATALOAD",
											"source": 14
										},
										{
											"begin": 1499,
											"end": 1522,
											"name": "SWAP2",
											"source": 14
										},
										{
											"begin": 1348,
											"end": 1528,
											"name": "SWAP1",
											"source": 14
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 1348,
											"end": 1528,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 14
										},
										{
											"begin": 1741,
											"end": 1914,
											"name": "tag",
											"source": 14,
											"value": "267"
										},
										{
											"begin": 1741,
											"end": 1914,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 1809,
											"end": 1829,
											"name": "DUP1",
											"source": 14
										},
										{
											"begin": 1809,
											"end": 1829,
											"name": "CALLDATALOAD",
											"source": 14
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 1858,
											"end": 1889,
											"name": "DUP2",
											"source": 14
										},
										{
											"begin": 1858,
											"end": 1889,
											"name": "AND",
											"source": 14
										},
										{
											"begin": 1848,
											"end": 1890,
											"name": "DUP2",
											"source": 14
										},
										{
											"begin": 1848,
											"end": 1890,
											"name": "EQ",
											"source": 14
										},
										{
											"begin": 1838,
											"end": 1908,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "288"
										},
										{
											"begin": 1838,
											"end": 1908,
											"name": "JUMPI",
											"source": 14
										},
										{
											"begin": 1904,
											"end": 1905,
											"name": "PUSH",
											"source": 14,
											"value": "0"
										},
										{
											"begin": 1901,
											"end": 1902,
											"name": "DUP1",
											"source": 14
										},
										{
											"begin": 1894,
											"end": 1906,
											"name": "REVERT",
											"source": 14
										},
										{
											"begin": 1838,
											"end": 1908,
											"name": "tag",
											"source": 14,
											"value": "288"
										},
										{
											"begin": 1838,
											"end": 1908,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 1741,
											"end": 1914,
											"name": "SWAP2",
											"source": 14
										},
										{
											"begin": 1741,
											"end": 1914,
											"name": "SWAP1",
											"source": 14
										},
										{
											"begin": 1741,
											"end": 1914,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 1741,
											"end": 1914,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 14
										},
										{
											"begin": 1919,
											"end": 2173,
											"name": "tag",
											"source": 14,
											"value": "36"
										},
										{
											"begin": 1919,
											"end": 2173,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 1987,
											"end": 1993,
											"name": "PUSH",
											"source": 14,
											"value": "0"
										},
										{
											"begin": 1995,
											"end": 2001,
											"name": "DUP1",
											"source": 14
										},
										{
											"begin": 2048,
											"end": 2050,
											"name": "PUSH",
											"source": 14,
											"value": "40"
										},
										{
											"begin": 2036,
											"end": 2045,
											"name": "DUP4",
											"source": 14
										},
										{
											"begin": 2027,
											"end": 2034,
											"name": "DUP6",
											"source": 14
										},
										{
											"begin": 2023,
											"end": 2046,
											"name": "SUB",
											"source": 14
										},
										{
											"begin": 2019,
											"end": 2051,
											"name": "SLT",
											"source": 14
										},
										{
											"begin": 2016,
											"end": 2068,
											"name": "ISZERO",
											"source": 14
										},
										{
											"begin": 2016,
											"end": 2068,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "290"
										},
										{
											"begin": 2016,
											"end": 2068,
											"name": "JUMPI",
											"source": 14
										},
										{
											"begin": 2064,
											"end": 2065,
											"name": "PUSH",
											"source": 14,
											"value": "0"
										},
										{
											"begin": 2061,
											"end": 2062,
											"name": "DUP1",
											"source": 14
										},
										{
											"begin": 2054,
											"end": 2066,
											"name": "REVERT",
											"source": 14
										},
										{
											"begin": 2016,
											"end": 2068,
											"name": "tag",
											"source": 14,
											"value": "290"
										},
										{
											"begin": 2016,
											"end": 2068,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 2087,
											"end": 2116,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "291"
										},
										{
											"begin": 2106,
											"end": 2115,
											"name": "DUP4",
											"source": 14
										},
										{
											"begin": 2087,
											"end": 2116,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "267"
										},
										{
											"begin": 2087,
											"end": 2116,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 14
										},
										{
											"begin": 2087,
											"end": 2116,
											"name": "tag",
											"source": 14,
											"value": "291"
										},
										{
											"begin": 2087,
											"end": 2116,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 2077,
											"end": 2116,
											"name": "SWAP5",
											"source": 14
										},
										{
											"begin": 2163,
											"end": 2165,
											"name": "PUSH",
											"source": 14,
											"value": "20"
										},
										{
											"begin": 2148,
											"end": 2166,
											"name": "SWAP4",
											"source": 14
										},
										{
											"begin": 2148,
											"end": 2166,
											"name": "SWAP1",
											"source": 14
										},
										{
											"begin": 2148,
											"end": 2166,
											"name": "SWAP4",
											"source": 14
										},
										{
											"begin": 2148,
											"end": 2166,
											"name": "ADD",
											"source": 14
										},
										{
											"begin": 2135,
											"end": 2167,
											"name": "CALLDATALOAD",
											"source": 14
										},
										{
											"begin": 2135,
											"end": 2167,
											"name": "SWAP4",
											"source": 14
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 1919,
											"end": 2173,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 14
										},
										{
											"begin": 2178,
											"end": 2506,
											"name": "tag",
											"source": 14,
											"value": "40"
										},
										{
											"begin": 2178,
											"end": 2506,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 2255,
											"end": 2261,
											"name": "PUSH",
											"source": 14,
											"value": "0"
										},
										{
											"begin": 2263,
											"end": 2269,
											"name": "DUP1",
											"source": 14
										},
										{
											"begin": 2271,
											"end": 2277,
											"name": "PUSH",
											"source": 14,
											"value": "0"
										},
										{
											"begin": 2324,
											"end": 2326,
											"name": "PUSH",
											"source": 14,
											"value": "60"
										},
										{
											"begin": 2312,
											"end": 2321,
											"name": "DUP5",
											"source": 14
										},
										{
											"begin": 2303,
											"end": 2310,
											"name": "DUP7",
											"source": 14
										},
										{
											"begin": 2299,
											"end": 2322,
											"name": "SUB",
											"source": 14
										},
										{
											"begin": 2295,
											"end": 2327,
											"name": "SLT",
											"source": 14
										},
										{
											"begin": 2292,
											"end": 2344,
											"name": "ISZERO",
											"source": 14
										},
										{
											"begin": 2292,
											"end": 2344,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "293"
										},
										{
											"begin": 2292,
											"end": 2344,
											"name": "JUMPI",
											"source": 14
										},
										{
											"begin": 2340,
											"end": 2341,
											"name": "PUSH",
											"source": 14,
											"value": "0"
										},
										{
											"begin": 2337,
											"end": 2338,
											"name": "DUP1",
											"source": 14
										},
										{
											"begin": 2330,
											"end": 2342,
											"name": "REVERT",
											"source": 14
										},
										{
											"begin": 2292,
											"end": 2344,
											"name": "tag",
											"source": 14,
											"value": "293"
										},
										{
											"begin": 2292,
											"end": 2344,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 2363,
											"end": 2392,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "294"
										},
										{
											"begin": 2382,
											"end": 2391,
											"name": "DUP5",
											"source": 14
										},
										{
											"begin": 2363,
											"end": 2392,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "267"
										},
										{
											"begin": 2363,
											"end": 2392,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 14
										},
										{
											"begin": 2363,
											"end": 2392,
											"name": "tag",
											"source": 14,
											"value": "294"
										},
										{
											"begin": 2363,
											"end": 2392,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 2353,
											"end": 2392,
											"name": "SWAP3",
											"source": 14
										},
										{
											"begin": 2353,
											"end": 2392,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 2411,
											"end": 2449,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "295"
										},
										{
											"begin": 2445,
											"end": 2447,
											"name": "PUSH",
											"source": 14,
											"value": "20"
										},
										{
											"begin": 2434,
											"end": 2443,
											"name": "DUP6",
											"source": 14
										},
										{
											"begin": 2430,
											"end": 2448,
											"name": "ADD",
											"source": 14
										},
										{
											"begin": 2411,
											"end": 2449,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "267"
										},
										{
											"begin": 2411,
											"end": 2449,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 14
										},
										{
											"begin": 2411,
											"end": 2449,
											"name": "tag",
											"source": 14,
											"value": "295"
										},
										{
											"begin": 2411,
											"end": 2449,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 2401,
											"end": 2449,
											"name": "SWAP2",
											"source": 14
										},
										{
											"begin": 2401,
											"end": 2449,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 2496,
											"end": 2498,
											"name": "PUSH",
											"source": 14,
											"value": "40"
										},
										{
											"begin": 2485,
											"end": 2494,
											"name": "DUP5",
											"source": 14
										},
										{
											"begin": 2481,
											"end": 2499,
											"name": "ADD",
											"source": 14
										},
										{
											"begin": 2468,
											"end": 2500,
											"name": "CALLDATALOAD",
											"source": 14
										},
										{
											"begin": 2458,
											"end": 2500,
											"name": "SWAP1",
											"source": 14
										},
										{
											"begin": 2458,
											"end": 2500,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 2178,
											"end": 2506,
											"name": "SWAP3",
											"source": 14
										},
										{
											"begin": 2178,
											"end": 2506,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 2178,
											"end": 2506,
											"name": "SWAP3",
											"source": 14
										},
										{
											"begin": 2178,
											"end": 2506,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 2178,
											"end": 2506,
											"name": "SWAP3",
											"source": 14
										},
										{
											"begin": 2178,
											"end": 2506,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 14
										},
										{
											"begin": 2511,
											"end": 2697,
											"name": "tag",
											"source": 14,
											"value": "51"
										},
										{
											"begin": 2511,
											"end": 2697,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 2570,
											"end": 2576,
											"name": "PUSH",
											"source": 14,
											"value": "0"
										},
										{
											"begin": 2623,
											"end": 2625,
											"name": "PUSH",
											"source": 14,
											"value": "20"
										},
										{
											"begin": 2611,
											"end": 2620,
											"name": "DUP3",
											"source": 14
										},
										{
											"begin": 2602,
											"end": 2609,
											"name": "DUP5",
											"source": 14
										},
										{
											"begin": 2598,
											"end": 2621,
											"name": "SUB",
											"source": 14
										},
										{
											"begin": 2594,
											"end": 2626,
											"name": "SLT",
											"source": 14
										},
										{
											"begin": 2591,
											"end": 2643,
											"name": "ISZERO",
											"source": 14
										},
										{
											"begin": 2591,
											"end": 2643,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "297"
										},
										{
											"begin": 2591,
											"end": 2643,
											"name": "JUMPI",
											"source": 14
										},
										{
											"begin": 2639,
											"end": 2640,
											"name": "PUSH",
											"source": 14,
											"value": "0"
										},
										{
											"begin": 2636,
											"end": 2637,
											"name": "DUP1",
											"source": 14
										},
										{
											"begin": 2629,
											"end": 2641,
											"name": "REVERT",
											"source": 14
										},
										{
											"begin": 2591,
											"end": 2643,
											"name": "tag",
											"source": 14,
											"value": "297"
										},
										{
											"begin": 2591,
											"end": 2643,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 2662,
											"end": 2691,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "148"
										},
										{
											"begin": 2681,
											"end": 2690,
											"name": "DUP3",
											"source": 14
										},
										{
											"begin": 2662,
											"end": 2691,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "267"
										},
										{
											"begin": 2662,
											"end": 2691,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 14
										},
										{
											"begin": 2884,
											"end": 3231,
											"name": "tag",
											"source": 14,
											"value": "60"
										},
										{
											"begin": 2884,
											"end": 3231,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 2949,
											"end": 2955,
											"name": "PUSH",
											"source": 14,
											"value": "0"
										},
										{
											"begin": 2957,
											"end": 2963,
											"name": "DUP1",
											"source": 14
										},
										{
											"begin": 3010,
											"end": 3012,
											"name": "PUSH",
											"source": 14,
											"value": "40"
										},
										{
											"begin": 2998,
											"end": 3007,
											"name": "DUP4",
											"source": 14
										},
										{
											"begin": 2989,
											"end": 2996,
											"name": "DUP6",
											"source": 14
										},
										{
											"begin": 2985,
											"end": 3008,
											"name": "SUB",
											"source": 14
										},
										{
											"begin": 2981,
											"end": 3013,
											"name": "SLT",
											"source": 14
										},
										{
											"begin": 2978,
											"end": 3030,
											"name": "ISZERO",
											"source": 14
										},
										{
											"begin": 2978,
											"end": 3030,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "301"
										},
										{
											"begin": 2978,
											"end": 3030,
											"name": "JUMPI",
											"source": 14
										},
										{
											"begin": 3026,
											"end": 3027,
											"name": "PUSH",
											"source": 14,
											"value": "0"
										},
										{
											"begin": 3023,
											"end": 3024,
											"name": "DUP1",
											"source": 14
										},
										{
											"begin": 3016,
											"end": 3028,
											"name": "REVERT",
											"source": 14
										},
										{
											"begin": 2978,
											"end": 3030,
											"name": "tag",
											"source": 14,
											"value": "301"
										},
										{
											"begin": 2978,
											"end": 3030,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 3049,
											"end": 3078,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "302"
										},
										{
											"begin": 3068,
											"end": 3077,
											"name": "DUP4",
											"source": 14
										},
										{
											"begin": 3049,
											"end": 3078,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "267"
										},
										{
											"begin": 3049,
											"end": 3078,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 14
										},
										{
											"begin": 3049,
											"end": 3078,
											"name": "tag",
											"source": 14,
											"value": "302"
										},
										{
											"begin": 3049,
											"end": 3078,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 3039,
											"end": 3078,
											"name": "SWAP2",
											"source": 14
										},
										{
											"begin": 3039,
											"end": 3078,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 3128,
											"end": 3130,
											"name": "PUSH",
											"source": 14,
											"value": "20"
										},
										{
											"begin": 3117,
											"end": 3126,
											"name": "DUP4",
											"source": 14
										},
										{
											"begin": 3113,
											"end": 3131,
											"name": "ADD",
											"source": 14
										},
										{
											"begin": 3100,
											"end": 3132,
											"name": "CALLDATALOAD",
											"source": 14
										},
										{
											"begin": 3175,
											"end": 3180,
											"name": "DUP1",
											"source": 14
										},
										{
											"begin": 3168,
											"end": 3181,
											"name": "ISZERO",
											"source": 14
										},
										{
											"begin": 3161,
											"end": 3182,
											"name": "ISZERO",
											"source": 14
										},
										{
											"begin": 3154,
											"end": 3159,
											"name": "DUP2",
											"source": 14
										},
										{
											"begin": 3151,
											"end": 3183,
											"name": "EQ",
											"source": 14
										},
										{
											"begin": 3141,
											"end": 3201,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "303"
										},
										{
											"begin": 3141,
											"end": 3201,
											"name": "JUMPI",
											"source": 14
										},
										{
											"begin": 3197,
											"end": 3198,
											"name": "PUSH",
											"source": 14,
											"value": "0"
										},
										{
											"begin": 3194,
											"end": 3195,
											"name": "DUP1",
											"source": 14
										},
										{
											"begin": 3187,
											"end": 3199,
											"name": "REVERT",
											"source": 14
										},
										{
											"begin": 3141,
											"end": 3201,
											"name": "tag",
											"source": 14,
											"value": "303"
										},
										{
											"begin": 3141,
											"end": 3201,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 3220,
											"end": 3225,
											"name": "DUP1",
											"source": 14
										},
										{
											"begin": 3210,
											"end": 3225,
											"name": "SWAP2",
											"source": 14
										},
										{
											"begin": 3210,
											"end": 3225,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 3210,
											"end": 3225,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 2884,
											"end": 3231,
											"name": "SWAP3",
											"source": 14
										},
										{
											"begin": 2884,
											"end": 3231,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 2884,
											"end": 3231,
											"name": "SWAP3",
											"source": 14
										},
										{
											"begin": 2884,
											"end": 3231,
											"name": "SWAP1",
											"source": 14
										},
										{
											"begin": 2884,
											"end": 3231,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 2884,
											"end": 3231,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 14
										},
										{
											"begin": 3236,
											"end": 3363,
											"name": "tag",
											"source": 14,
											"value": "203"
										},
										{
											"begin": 3236,
											"end": 3363,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 3297,
											"end": 3307,
											"name": "PUSH",
											"source": 14,
											"value": "4E487B71"
										},
										{
											"begin": 3292,
											"end": 3295,
											"name": "PUSH",
											"source": 14,
											"value": "E0"
										},
										{
											"begin": 3288,
											"end": 3308,
											"name": "SHL",
											"source": 14
										},
										{
											"begin": 3285,
											"end": 3286,
											"name": "PUSH",
											"source": 14,
											"value": "0"
										},
										{
											"begin": 3278,
											"end": 3309,
											"name": "MSTORE",
											"source": 14
										},
										{
											"begin": 3328,
											"end": 3332,
											"name": "PUSH",
											"source": 14,
											"value": "41"
										},
										{
											"begin": 3325,
											"end": 3326,
											"name": "PUSH",
											"source": 14,
											"value": "4"
										},
										{
											"begin": 3318,
											"end": 3333,
											"name": "MSTORE",
											"source": 14
										},
										{
											"begin": 3352,
											"end": 3356,
											"name": "PUSH",
											"source": 14,
											"value": "24"
										},
										{
											"begin": 3349,
											"end": 3350,
											"name": "PUSH",
											"source": 14,
											"value": "0"
										},
										{
											"begin": 3342,
											"end": 3357,
											"name": "REVERT",
											"source": 14
										},
										{
											"begin": 3368,
											"end": 4506,
											"name": "tag",
											"source": 14,
											"value": "64"
										},
										{
											"begin": 3368,
											"end": 4506,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 3463,
											"end": 3469,
											"name": "PUSH",
											"source": 14,
											"value": "0"
										},
										{
											"begin": 3471,
											"end": 3477,
											"name": "DUP1",
											"source": 14
										},
										{
											"begin": 3479,
											"end": 3485,
											"name": "PUSH",
											"source": 14,
											"value": "0"
										},
										{
											"begin": 3487,
											"end": 3493,
											"name": "DUP1",
											"source": 14
										},
										{
											"begin": 3540,
											"end": 3543,
											"name": "PUSH",
											"source": 14,
											"value": "80"
										},
										{
											"begin": 3528,
											"end": 3537,
											"name": "DUP6",
											"source": 14
										},
										{
											"begin": 3519,
											"end": 3526,
											"name": "DUP8",
											"source": 14
										},
										{
											"begin": 3515,
											"end": 3538,
											"name": "SUB",
											"source": 14
										},
										{
											"begin": 3511,
											"end": 3544,
											"name": "SLT",
											"source": 14
										},
										{
											"begin": 3508,
											"end": 3561,
											"name": "ISZERO",
											"source": 14
										},
										{
											"begin": 3508,
											"end": 3561,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "306"
										},
										{
											"begin": 3508,
											"end": 3561,
											"name": "JUMPI",
											"source": 14
										},
										{
											"begin": 3557,
											"end": 3558,
											"name": "PUSH",
											"source": 14,
											"value": "0"
										},
										{
											"begin": 3554,
											"end": 3555,
											"name": "DUP1",
											"source": 14
										},
										{
											"begin": 3547,
											"end": 3559,
											"name": "REVERT",
											"source": 14
										},
										{
											"begin": 3508,
											"end": 3561,
											"name": "tag",
											"source": 14,
											"value": "306"
										},
										{
											"begin": 3508,
											"end": 3561,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 3580,
											"end": 3609,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "307"
										},
										{
											"begin": 3599,
											"end": 3608,
											"name": "DUP6",
											"source": 14
										},
										{
											"begin": 3580,
											"end": 3609,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "267"
										},
										{
											"begin": 3580,
											"end": 3609,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 14
										},
										{
											"begin": 3580,
											"end": 3609,
											"name": "tag",
											"source": 14,
											"value": "307"
										},
										{
											"begin": 3580,
											"end": 3609,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 3570,
											"end": 3609,
											"name": "SWAP4",
											"source": 14
										},
										{
											"begin": 3570,
											"end": 3609,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 3628,
											"end": 3666,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "308"
										},
										{
											"begin": 3662,
											"end": 3664,
											"name": "PUSH",
											"source": 14,
											"value": "20"
										},
										{
											"begin": 3651,
											"end": 3660,
											"name": "DUP7",
											"source": 14
										},
										{
											"begin": 3647,
											"end": 3665,
											"name": "ADD",
											"source": 14
										},
										{
											"begin": 3628,
											"end": 3666,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "267"
										},
										{
											"begin": 3628,
											"end": 3666,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 14
										},
										{
											"begin": 3628,
											"end": 3666,
											"name": "tag",
											"source": 14,
											"value": "308"
										},
										{
											"begin": 3628,
											"end": 3666,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 3618,
											"end": 3666,
											"name": "SWAP3",
											"source": 14
										},
										{
											"begin": 3618,
											"end": 3666,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 3713,
											"end": 3715,
											"name": "PUSH",
											"source": 14,
											"value": "40"
										},
										{
											"begin": 3702,
											"end": 3711,
											"name": "DUP6",
											"source": 14
										},
										{
											"begin": 3698,
											"end": 3716,
											"name": "ADD",
											"source": 14
										},
										{
											"begin": 3685,
											"end": 3717,
											"name": "CALLDATALOAD",
											"source": 14
										},
										{
											"begin": 3675,
											"end": 3717,
											"name": "SWAP2",
											"source": 14
										},
										{
											"begin": 3675,
											"end": 3717,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 3768,
											"end": 3770,
											"name": "PUSH",
											"source": 14,
											"value": "60"
										},
										{
											"begin": 3757,
											"end": 3766,
											"name": "DUP6",
											"source": 14
										},
										{
											"begin": 3753,
											"end": 3771,
											"name": "ADD",
											"source": 14
										},
										{
											"begin": 3740,
											"end": 3772,
											"name": "CALLDATALOAD",
											"source": 14
										},
										{
											"begin": 3791,
											"end": 3809,
											"name": "PUSH",
											"source": 14,
											"value": "FFFFFFFFFFFFFFFF"
										},
										{
											"begin": 3832,
											"end": 3834,
											"name": "DUP1",
											"source": 14
										},
										{
											"begin": 3824,
											"end": 3830,
											"name": "DUP3",
											"source": 14
										},
										{
											"begin": 3821,
											"end": 3835,
											"name": "GT",
											"source": 14
										},
										{
											"begin": 3818,
											"end": 3852,
											"name": "ISZERO",
											"source": 14
										},
										{
											"begin": 3818,
											"end": 3852,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "309"
										},
										{
											"begin": 3818,
											"end": 3852,
											"name": "JUMPI",
											"source": 14
										},
										{
											"begin": 3848,
											"end": 3849,
											"name": "PUSH",
											"source": 14,
											"value": "0"
										},
										{
											"begin": 3845,
											"end": 3846,
											"name": "DUP1",
											"source": 14
										},
										{
											"begin": 3838,
											"end": 3850,
											"name": "REVERT",
											"source": 14
										},
										{
											"begin": 3818,
											"end": 3852,
											"name": "tag",
											"source": 14,
											"value": "309"
										},
										{
											"begin": 3818,
											"end": 3852,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 3886,
											"end": 3892,
											"name": "DUP2",
											"source": 14
										},
										{
											"begin": 3875,
											"end": 3884,
											"name": "DUP8",
											"source": 14
										},
										{
											"begin": 3871,
											"end": 3893,
											"name": "ADD",
											"source": 14
										},
										{
											"begin": 3861,
											"end": 3893,
											"name": "SWAP2",
											"source": 14
										},
										{
											"begin": 3861,
											"end": 3893,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 3931,
											"end": 3938,
											"name": "DUP8",
											"source": 14
										},
										{
											"begin": 3924,
											"end": 3928,
											"name": "PUSH",
											"source": 14,
											"value": "1F"
										},
										{
											"begin": 3920,
											"end": 3922,
											"name": "DUP4",
											"source": 14
										},
										{
											"begin": 3916,
											"end": 3929,
											"name": "ADD",
											"source": 14
										},
										{
											"begin": 3912,
											"end": 3939,
											"name": "SLT",
											"source": 14
										},
										{
											"begin": 3902,
											"end": 3957,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "310"
										},
										{
											"begin": 3902,
											"end": 3957,
											"name": "JUMPI",
											"source": 14
										},
										{
											"begin": 3953,
											"end": 3954,
											"name": "PUSH",
											"source": 14,
											"value": "0"
										},
										{
											"begin": 3950,
											"end": 3951,
											"name": "DUP1",
											"source": 14
										},
										{
											"begin": 3943,
											"end": 3955,
											"name": "REVERT",
											"source": 14
										},
										{
											"begin": 3902,
											"end": 3957,
											"name": "tag",
											"source": 14,
											"value": "310"
										},
										{
											"begin": 3902,
											"end": 3957,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 3989,
											"end": 3991,
											"name": "DUP2",
											"source": 14
										},
										{
											"begin": 3976,
											"end": 3992,
											"name": "CALLDATALOAD",
											"source": 14
										},
										{
											"begin": 4011,
											"end": 4013,
											"name": "DUP2",
											"source": 14
										},
										{
											"begin": 4007,
											"end": 4009,
											"name": "DUP2",
											"source": 14
										},
										{
											"begin": 4004,
											"end": 4014,
											"name": "GT",
											"source": 14
										},
										{
											"begin": 4001,
											"end": 4037,
											"name": "ISZERO",
											"source": 14
										},
										{
											"begin": 4001,
											"end": 4037,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "312"
										},
										{
											"begin": 4001,
											"end": 4037,
											"name": "JUMPI",
											"source": 14
										},
										{
											"begin": 4017,
											"end": 4035,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "312"
										},
										{
											"begin": 4017,
											"end": 4035,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "203"
										},
										{
											"begin": 4017,
											"end": 4035,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 14
										},
										{
											"begin": 4017,
											"end": 4035,
											"name": "tag",
											"source": 14,
											"value": "312"
										},
										{
											"begin": 4017,
											"end": 4035,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 4092,
											"end": 4094,
											"name": "PUSH",
											"source": 14,
											"value": "40"
										},
										{
											"begin": 4086,
											"end": 4095,
											"name": "MLOAD",
											"source": 14
										},
										{
											"begin": 4060,
											"end": 4062,
											"name": "PUSH",
											"source": 14,
											"value": "1F"
										},
										{
											"begin": 4146,
											"end": 4159,
											"name": "DUP3",
											"source": 14
										},
										{
											"begin": 4146,
											"end": 4159,
											"name": "ADD",
											"source": 14
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1F"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "NOT",
											"source": -1
										},
										{
											"begin": 4142,
											"end": 4164,
											"name": "SWAP1",
											"source": 14
										},
										{
											"begin": 4142,
											"end": 4164,
											"name": "DUP2",
											"source": 14
										},
										{
											"begin": 4142,
											"end": 4164,
											"name": "AND",
											"source": 14
										},
										{
											"begin": 4166,
											"end": 4168,
											"name": "PUSH",
											"source": 14,
											"value": "3F"
										},
										{
											"begin": 4138,
											"end": 4169,
											"name": "ADD",
											"source": 14
										},
										{
											"begin": 4134,
											"end": 4174,
											"name": "AND",
											"source": 14
										},
										{
											"begin": 4122,
											"end": 4175,
											"name": "DUP2",
											"source": 14
										},
										{
											"begin": 4122,
											"end": 4175,
											"name": "ADD",
											"source": 14
										},
										{
											"begin": 4122,
											"end": 4175,
											"name": "SWAP1",
											"source": 14
										},
										{
											"begin": 4190,
											"end": 4208,
											"name": "DUP4",
											"source": 14
										},
										{
											"begin": 4190,
											"end": 4208,
											"name": "DUP3",
											"source": 14
										},
										{
											"begin": 4190,
											"end": 4208,
											"name": "GT",
											"source": 14
										},
										{
											"begin": 4210,
											"end": 4232,
											"name": "DUP2",
											"source": 14
										},
										{
											"begin": 4210,
											"end": 4232,
											"name": "DUP4",
											"source": 14
										},
										{
											"begin": 4210,
											"end": 4232,
											"name": "LT",
											"source": 14
										},
										{
											"begin": 4187,
											"end": 4233,
											"name": "OR",
											"source": 14
										},
										{
											"begin": 4184,
											"end": 4256,
											"name": "ISZERO",
											"source": 14
										},
										{
											"begin": 4184,
											"end": 4256,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "314"
										},
										{
											"begin": 4184,
											"end": 4256,
											"name": "JUMPI",
											"source": 14
										},
										{
											"begin": 4236,
											"end": 4254,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "314"
										},
										{
											"begin": 4236,
											"end": 4254,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "203"
										},
										{
											"begin": 4236,
											"end": 4254,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 14
										},
										{
											"begin": 4236,
											"end": 4254,
											"name": "tag",
											"source": 14,
											"value": "314"
										},
										{
											"begin": 4236,
											"end": 4254,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 4276,
											"end": 4286,
											"name": "DUP2",
											"source": 14
										},
										{
											"begin": 4272,
											"end": 4274,
											"name": "PUSH",
											"source": 14,
											"value": "40"
										},
										{
											"begin": 4265,
											"end": 4287,
											"name": "MSTORE",
											"source": 14
										},
										{
											"begin": 4311,
											"end": 4313,
											"name": "DUP3",
											"source": 14
										},
										{
											"begin": 4303,
											"end": 4309,
											"name": "DUP2",
											"source": 14
										},
										{
											"begin": 4296,
											"end": 4314,
											"name": "MSTORE",
											"source": 14
										},
										{
											"begin": 4351,
											"end": 4358,
											"name": "DUP11",
											"source": 14
										},
										{
											"begin": 4346,
											"end": 4348,
											"name": "PUSH",
											"source": 14,
											"value": "20"
										},
										{
											"begin": 4341,
											"end": 4343,
											"name": "DUP5",
											"source": 14
										},
										{
											"begin": 4337,
											"end": 4339,
											"name": "DUP8",
											"source": 14
										},
										{
											"begin": 4333,
											"end": 4344,
											"name": "ADD",
											"source": 14
										},
										{
											"begin": 4329,
											"end": 4349,
											"name": "ADD",
											"source": 14
										},
										{
											"begin": 4326,
											"end": 4359,
											"name": "GT",
											"source": 14
										},
										{
											"begin": 4323,
											"end": 4376,
											"name": "ISZERO",
											"source": 14
										},
										{
											"begin": 4323,
											"end": 4376,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "315"
										},
										{
											"begin": 4323,
											"end": 4376,
											"name": "JUMPI",
											"source": 14
										},
										{
											"begin": 4372,
											"end": 4373,
											"name": "PUSH",
											"source": 14,
											"value": "0"
										},
										{
											"begin": 4369,
											"end": 4370,
											"name": "DUP1",
											"source": 14
										},
										{
											"begin": 4362,
											"end": 4374,
											"name": "REVERT",
											"source": 14
										},
										{
											"begin": 4323,
											"end": 4376,
											"name": "tag",
											"source": 14,
											"value": "315"
										},
										{
											"begin": 4323,
											"end": 4376,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 4428,
											"end": 4430,
											"name": "DUP3",
											"source": 14
										},
										{
											"begin": 4423,
											"end": 4425,
											"name": "PUSH",
											"source": 14,
											"value": "20"
										},
										{
											"begin": 4419,
											"end": 4421,
											"name": "DUP7",
											"source": 14
										},
										{
											"begin": 4415,
											"end": 4426,
											"name": "ADD",
											"source": 14
										},
										{
											"begin": 4410,
											"end": 4412,
											"name": "PUSH",
											"source": 14,
											"value": "20"
										},
										{
											"begin": 4402,
											"end": 4408,
											"name": "DUP4",
											"source": 14
										},
										{
											"begin": 4398,
											"end": 4413,
											"name": "ADD",
											"source": 14
										},
										{
											"begin": 4385,
											"end": 4431,
											"name": "CALLDATACOPY",
											"source": 14
										},
										{
											"begin": 4473,
											"end": 4474,
											"name": "PUSH",
											"source": 14,
											"value": "0"
										},
										{
											"begin": 4468,
											"end": 4470,
											"name": "PUSH",
											"source": 14,
											"value": "20"
										},
										{
											"begin": 4463,
											"end": 4465,
											"name": "DUP5",
											"source": 14
										},
										{
											"begin": 4455,
											"end": 4461,
											"name": "DUP4",
											"source": 14
										},
										{
											"begin": 4451,
											"end": 4466,
											"name": "ADD",
											"source": 14
										},
										{
											"begin": 4447,
											"end": 4471,
											"name": "ADD",
											"source": 14
										},
										{
											"begin": 4440,
											"end": 4475,
											"name": "MSTORE",
											"source": 14
										},
										{
											"begin": 4494,
											"end": 4500,
											"name": "DUP1",
											"source": 14
										},
										{
											"begin": 4484,
											"end": 4500,
											"name": "SWAP6",
											"source": 14
										},
										{
											"begin": 4484,
											"end": 4500,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 4484,
											"end": 4500,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 4484,
											"end": 4500,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 4484,
											"end": 4500,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 4484,
											"end": 4500,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 4484,
											"end": 4500,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 3368,
											"end": 4506,
											"name": "SWAP3",
											"source": 14
										},
										{
											"begin": 3368,
											"end": 4506,
											"name": "SWAP6",
											"source": 14
										},
										{
											"begin": 3368,
											"end": 4506,
											"name": "SWAP2",
											"source": 14
										},
										{
											"begin": 3368,
											"end": 4506,
											"name": "SWAP5",
											"source": 14
										},
										{
											"begin": 3368,
											"end": 4506,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 3368,
											"end": 4506,
											"name": "SWAP3",
											"source": 14
										},
										{
											"begin": 3368,
											"end": 4506,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 3368,
											"end": 4506,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 14
										},
										{
											"begin": 4511,
											"end": 4771,
											"name": "tag",
											"source": 14,
											"value": "72"
										},
										{
											"begin": 4511,
											"end": 4771,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 4579,
											"end": 4585,
											"name": "PUSH",
											"source": 14,
											"value": "0"
										},
										{
											"begin": 4587,
											"end": 4593,
											"name": "DUP1",
											"source": 14
										},
										{
											"begin": 4640,
											"end": 4642,
											"name": "PUSH",
											"source": 14,
											"value": "40"
										},
										{
											"begin": 4628,
											"end": 4637,
											"name": "DUP4",
											"source": 14
										},
										{
											"begin": 4619,
											"end": 4626,
											"name": "DUP6",
											"source": 14
										},
										{
											"begin": 4615,
											"end": 4638,
											"name": "SUB",
											"source": 14
										},
										{
											"begin": 4611,
											"end": 4643,
											"name": "SLT",
											"source": 14
										},
										{
											"begin": 4608,
											"end": 4660,
											"name": "ISZERO",
											"source": 14
										},
										{
											"begin": 4608,
											"end": 4660,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "317"
										},
										{
											"begin": 4608,
											"end": 4660,
											"name": "JUMPI",
											"source": 14
										},
										{
											"begin": 4656,
											"end": 4657,
											"name": "PUSH",
											"source": 14,
											"value": "0"
										},
										{
											"begin": 4653,
											"end": 4654,
											"name": "DUP1",
											"source": 14
										},
										{
											"begin": 4646,
											"end": 4658,
											"name": "REVERT",
											"source": 14
										},
										{
											"begin": 4608,
											"end": 4660,
											"name": "tag",
											"source": 14,
											"value": "317"
										},
										{
											"begin": 4608,
											"end": 4660,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 4679,
											"end": 4708,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "318"
										},
										{
											"begin": 4698,
											"end": 4707,
											"name": "DUP4",
											"source": 14
										},
										{
											"begin": 4679,
											"end": 4708,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "267"
										},
										{
											"begin": 4679,
											"end": 4708,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 14
										},
										{
											"begin": 4679,
											"end": 4708,
											"name": "tag",
											"source": 14,
											"value": "318"
										},
										{
											"begin": 4679,
											"end": 4708,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 4669,
											"end": 4708,
											"name": "SWAP2",
											"source": 14
										},
										{
											"begin": 4669,
											"end": 4708,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 4727,
											"end": 4765,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "319"
										},
										{
											"begin": 4761,
											"end": 4763,
											"name": "PUSH",
											"source": 14,
											"value": "20"
										},
										{
											"begin": 4750,
											"end": 4759,
											"name": "DUP5",
											"source": 14
										},
										{
											"begin": 4746,
											"end": 4764,
											"name": "ADD",
											"source": 14
										},
										{
											"begin": 4727,
											"end": 4765,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "267"
										},
										{
											"begin": 4727,
											"end": 4765,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 14
										},
										{
											"begin": 4727,
											"end": 4765,
											"name": "tag",
											"source": 14,
											"value": "319"
										},
										{
											"begin": 4727,
											"end": 4765,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 4717,
											"end": 4765,
											"name": "SWAP1",
											"source": 14
										},
										{
											"begin": 4717,
											"end": 4765,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 4511,
											"end": 4771,
											"name": "SWAP3",
											"source": 14
										},
										{
											"begin": 4511,
											"end": 4771,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 4511,
											"end": 4771,
											"name": "SWAP3",
											"source": 14
										},
										{
											"begin": 4511,
											"end": 4771,
											"name": "SWAP1",
											"source": 14
										},
										{
											"begin": 4511,
											"end": 4771,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 4511,
											"end": 4771,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 14
										},
										{
											"begin": 4776,
											"end": 5156,
											"name": "tag",
											"source": 14,
											"value": "82"
										},
										{
											"begin": 4776,
											"end": 5156,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 4855,
											"end": 4856,
											"name": "PUSH",
											"source": 14,
											"value": "1"
										},
										{
											"begin": 4851,
											"end": 4863,
											"name": "DUP2",
											"source": 14
										},
										{
											"begin": 4851,
											"end": 4863,
											"name": "DUP2",
											"source": 14
										},
										{
											"begin": 4851,
											"end": 4863,
											"name": "SHR",
											"source": 14
										},
										{
											"begin": 4851,
											"end": 4863,
											"name": "SWAP1",
											"source": 14
										},
										{
											"begin": 4898,
											"end": 4910,
											"name": "DUP3",
											"source": 14
										},
										{
											"begin": 4898,
											"end": 4910,
											"name": "AND",
											"source": 14
										},
										{
											"begin": 4898,
											"end": 4910,
											"name": "DUP1",
											"source": 14
										},
										{
											"begin": 4919,
											"end": 4980,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "321"
										},
										{
											"begin": 4919,
											"end": 4980,
											"name": "JUMPI",
											"source": 14
										},
										{
											"begin": 4973,
											"end": 4977,
											"name": "PUSH",
											"source": 14,
											"value": "7F"
										},
										{
											"begin": 4965,
											"end": 4971,
											"name": "DUP3",
											"source": 14
										},
										{
											"begin": 4961,
											"end": 4978,
											"name": "AND",
											"source": 14
										},
										{
											"begin": 4951,
											"end": 4978,
											"name": "SWAP2",
											"source": 14
										},
										{
											"begin": 4951,
											"end": 4978,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 4919,
											"end": 4980,
											"name": "tag",
											"source": 14,
											"value": "321"
										},
										{
											"begin": 4919,
											"end": 4980,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 5026,
											"end": 5028,
											"name": "PUSH",
											"source": 14,
											"value": "20"
										},
										{
											"begin": 5018,
											"end": 5024,
											"name": "DUP3",
											"source": 14
										},
										{
											"begin": 5015,
											"end": 5029,
											"name": "LT",
											"source": 14
										},
										{
											"begin": 4995,
											"end": 5013,
											"name": "DUP2",
											"source": 14
										},
										{
											"begin": 4992,
											"end": 5030,
											"name": "SUB",
											"source": 14
										},
										{
											"begin": 4989,
											"end": 5150,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "322"
										},
										{
											"begin": 4989,
											"end": 5150,
											"name": "JUMPI",
											"source": 14
										},
										{
											"begin": 5072,
											"end": 5082,
											"name": "PUSH",
											"source": 14,
											"value": "4E487B71"
										},
										{
											"begin": 5067,
											"end": 5070,
											"name": "PUSH",
											"source": 14,
											"value": "E0"
										},
										{
											"begin": 5063,
											"end": 5083,
											"name": "SHL",
											"source": 14
										},
										{
											"begin": 5060,
											"end": 5061,
											"name": "PUSH",
											"source": 14,
											"value": "0"
										},
										{
											"begin": 5053,
											"end": 5084,
											"name": "MSTORE",
											"source": 14
										},
										{
											"begin": 5107,
											"end": 5111,
											"name": "PUSH",
											"source": 14,
											"value": "22"
										},
										{
											"begin": 5104,
											"end": 5105,
											"name": "PUSH",
											"source": 14,
											"value": "4"
										},
										{
											"begin": 5097,
											"end": 5112,
											"name": "MSTORE",
											"source": 14
										},
										{
											"begin": 5135,
											"end": 5139,
											"name": "PUSH",
											"source": 14,
											"value": "24"
										},
										{
											"begin": 5132,
											"end": 5133,
											"name": "PUSH",
											"source": 14,
											"value": "0"
										},
										{
											"begin": 5125,
											"end": 5140,
											"name": "REVERT",
											"source": 14
										},
										{
											"begin": 4989,
											"end": 5150,
											"name": "tag",
											"source": 14,
											"value": "322"
										},
										{
											"begin": 4989,
											"end": 5150,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 4989,
											"end": 5150,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 4776,
											"end": 5156,
											"name": "SWAP2",
											"source": 14
										},
										{
											"begin": 4776,
											"end": 5156,
											"name": "SWAP1",
											"source": 14
										},
										{
											"begin": 4776,
											"end": 5156,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 4776,
											"end": 5156,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 14
										},
										{
											"begin": 5993,
											"end": 6402,
											"name": "tag",
											"source": 14,
											"value": "111"
										},
										{
											"begin": 5993,
											"end": 6402,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 6195,
											"end": 6197,
											"name": "PUSH",
											"source": 14,
											"value": "20"
										},
										{
											"begin": 6177,
											"end": 6198,
											"name": "DUP1",
											"source": 14
										},
										{
											"begin": 6177,
											"end": 6198,
											"name": "DUP3",
											"source": 14
										},
										{
											"begin": 6177,
											"end": 6198,
											"name": "MSTORE",
											"source": 14
										},
										{
											"begin": 6234,
											"end": 6236,
											"name": "PUSH",
											"source": 14,
											"value": "2D"
										},
										{
											"begin": 6214,
											"end": 6232,
											"name": "SWAP1",
											"source": 14
										},
										{
											"begin": 6214,
											"end": 6232,
											"name": "DUP3",
											"source": 14
										},
										{
											"begin": 6214,
											"end": 6232,
											"name": "ADD",
											"source": 14
										},
										{
											"begin": 6207,
											"end": 6237,
											"name": "MSTORE",
											"source": 14
										},
										{
											"begin": 6273,
											"end": 6307,
											"name": "PUSH",
											"source": 14,
											"value": "4552433732313A2063616C6C6572206973206E6F7420746F6B656E206F776E65"
										},
										{
											"begin": 6268,
											"end": 6270,
											"name": "PUSH",
											"source": 14,
											"value": "40"
										},
										{
											"begin": 6253,
											"end": 6271,
											"name": "DUP3",
											"source": 14
										},
										{
											"begin": 6253,
											"end": 6271,
											"name": "ADD",
											"source": 14
										},
										{
											"begin": 6246,
											"end": 6308,
											"name": "MSTORE",
											"source": 14
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1C881BDC88185C1C1C9BDD9959"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "9A"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 6339,
											"end": 6341,
											"name": "PUSH",
											"source": 14,
											"value": "60"
										},
										{
											"begin": 6324,
											"end": 6342,
											"name": "DUP3",
											"source": 14
										},
										{
											"begin": 6324,
											"end": 6342,
											"name": "ADD",
											"source": 14
										},
										{
											"begin": 6317,
											"end": 6360,
											"name": "MSTORE",
											"source": 14
										},
										{
											"begin": 6392,
											"end": 6395,
											"name": "PUSH",
											"source": 14,
											"value": "80"
										},
										{
											"begin": 6377,
											"end": 6396,
											"name": "ADD",
											"source": 14
										},
										{
											"begin": 6377,
											"end": 6396,
											"name": "SWAP1",
											"source": 14
										},
										{
											"begin": 5993,
											"end": 6402,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 14
										},
										{
											"begin": 7170,
											"end": 7666,
											"name": "tag",
											"source": 14,
											"value": "152"
										},
										{
											"begin": 7170,
											"end": 7666,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 7349,
											"end": 7352,
											"name": "PUSH",
											"source": 14,
											"value": "0"
										},
										{
											"begin": 7387,
											"end": 7393,
											"name": "DUP4",
											"source": 14
										},
										{
											"begin": 7381,
											"end": 7394,
											"name": "MLOAD",
											"source": 14
										},
										{
											"begin": 7403,
											"end": 7469,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "329"
										},
										{
											"begin": 7462,
											"end": 7468,
											"name": "DUP2",
											"source": 14
										},
										{
											"begin": 7457,
											"end": 7460,
											"name": "DUP5",
											"source": 14
										},
										{
											"begin": 7450,
											"end": 7454,
											"name": "PUSH",
											"source": 14,
											"value": "20"
										},
										{
											"begin": 7442,
											"end": 7448,
											"name": "DUP9",
											"source": 14
										},
										{
											"begin": 7438,
											"end": 7455,
											"name": "ADD",
											"source": 14
										},
										{
											"begin": 7403,
											"end": 7469,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "265"
										},
										{
											"begin": 7403,
											"end": 7469,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 14
										},
										{
											"begin": 7403,
											"end": 7469,
											"name": "tag",
											"source": 14,
											"value": "329"
										},
										{
											"begin": 7403,
											"end": 7469,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 7532,
											"end": 7545,
											"name": "DUP4",
											"source": 14
										},
										{
											"begin": 7532,
											"end": 7545,
											"name": "MLOAD",
											"source": 14
										},
										{
											"begin": 7491,
											"end": 7507,
											"name": "SWAP1",
											"source": 14
										},
										{
											"begin": 7491,
											"end": 7507,
											"name": "DUP4",
											"source": 14
										},
										{
											"begin": 7491,
											"end": 7507,
											"name": "ADD",
											"source": 14
										},
										{
											"begin": 7491,
											"end": 7507,
											"name": "SWAP1",
											"source": 14
										},
										{
											"begin": 7554,
											"end": 7624,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "330"
										},
										{
											"begin": 7532,
											"end": 7545,
											"name": "DUP2",
											"source": 14
										},
										{
											"begin": 7491,
											"end": 7507,
											"name": "DUP4",
											"source": 14
										},
										{
											"begin": 7601,
											"end": 7605,
											"name": "PUSH",
											"source": 14,
											"value": "20"
										},
										{
											"begin": 7589,
											"end": 7606,
											"name": "DUP9",
											"source": 14
										},
										{
											"begin": 7589,
											"end": 7606,
											"name": "ADD",
											"source": 14
										},
										{
											"begin": 7554,
											"end": 7624,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "265"
										},
										{
											"begin": 7554,
											"end": 7624,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 14
										},
										{
											"begin": 7554,
											"end": 7624,
											"name": "tag",
											"source": 14,
											"value": "330"
										},
										{
											"begin": 7554,
											"end": 7624,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 7640,
											"end": 7660,
											"name": "ADD",
											"source": 14
										},
										{
											"begin": 7640,
											"end": 7660,
											"name": "SWAP5",
											"source": 14
										},
										{
											"begin": 7170,
											"end": 7666,
											"name": "SWAP4",
											"source": 14
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 7170,
											"end": 7666,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 14
										},
										{
											"begin": 7671,
											"end": 8072,
											"name": "tag",
											"source": 14,
											"value": "173"
										},
										{
											"begin": 7671,
											"end": 8072,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 7873,
											"end": 7875,
											"name": "PUSH",
											"source": 14,
											"value": "20"
										},
										{
											"begin": 7855,
											"end": 7876,
											"name": "DUP1",
											"source": 14
										},
										{
											"begin": 7855,
											"end": 7876,
											"name": "DUP3",
											"source": 14
										},
										{
											"begin": 7855,
											"end": 7876,
											"name": "MSTORE",
											"source": 14
										},
										{
											"begin": 7912,
											"end": 7914,
											"name": "PUSH",
											"source": 14,
											"value": "25"
										},
										{
											"begin": 7892,
											"end": 7910,
											"name": "SWAP1",
											"source": 14
										},
										{
											"begin": 7892,
											"end": 7910,
											"name": "DUP3",
											"source": 14
										},
										{
											"begin": 7892,
											"end": 7910,
											"name": "ADD",
											"source": 14
										},
										{
											"begin": 7885,
											"end": 7915,
											"name": "MSTORE",
											"source": 14
										},
										{
											"begin": 7951,
											"end": 7985,
											"name": "PUSH",
											"source": 14,
											"value": "4552433732313A207472616E736665722066726F6D20696E636F727265637420"
										},
										{
											"begin": 7946,
											"end": 7948,
											"name": "PUSH",
											"source": 14,
											"value": "40"
										},
										{
											"begin": 7931,
											"end": 7949,
											"name": "DUP3",
											"source": 14
										},
										{
											"begin": 7931,
											"end": 7949,
											"name": "ADD",
											"source": 14
										},
										{
											"begin": 7924,
											"end": 7986,
											"name": "MSTORE",
											"source": 14
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "37BBB732B9"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "D9"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 8017,
											"end": 8019,
											"name": "PUSH",
											"source": 14,
											"value": "60"
										},
										{
											"begin": 8002,
											"end": 8020,
											"name": "DUP3",
											"source": 14
										},
										{
											"begin": 8002,
											"end": 8020,
											"name": "ADD",
											"source": 14
										},
										{
											"begin": 7995,
											"end": 8030,
											"name": "MSTORE",
											"source": 14
										},
										{
											"begin": 8062,
											"end": 8065,
											"name": "PUSH",
											"source": 14,
											"value": "80"
										},
										{
											"begin": 8047,
											"end": 8066,
											"name": "ADD",
											"source": 14
										},
										{
											"begin": 8047,
											"end": 8066,
											"name": "SWAP1",
											"source": 14
										},
										{
											"begin": 7671,
											"end": 8072,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 14
										},
										{
											"begin": 8836,
											"end": 9250,
											"name": "tag",
											"source": 14,
											"value": "196"
										},
										{
											"begin": 8836,
											"end": 9250,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 9038,
											"end": 9040,
											"name": "PUSH",
											"source": 14,
											"value": "20"
										},
										{
											"begin": 9020,
											"end": 9041,
											"name": "DUP1",
											"source": 14
										},
										{
											"begin": 9020,
											"end": 9041,
											"name": "DUP3",
											"source": 14
										},
										{
											"begin": 9020,
											"end": 9041,
											"name": "MSTORE",
											"source": 14
										},
										{
											"begin": 9077,
											"end": 9079,
											"name": "PUSH",
											"source": 14,
											"value": "32"
										},
										{
											"begin": 9057,
											"end": 9075,
											"name": "SWAP1",
											"source": 14
										},
										{
											"begin": 9057,
											"end": 9075,
											"name": "DUP3",
											"source": 14
										},
										{
											"begin": 9057,
											"end": 9075,
											"name": "ADD",
											"source": 14
										},
										{
											"begin": 9050,
											"end": 9080,
											"name": "MSTORE",
											"source": 14
										},
										{
											"begin": 9116,
											"end": 9150,
											"name": "PUSH",
											"source": 14,
											"value": "4552433732313A207472616E7366657220746F206E6F6E204552433732315265"
										},
										{
											"begin": 9111,
											"end": 9113,
											"name": "PUSH",
											"source": 14,
											"value": "40"
										},
										{
											"begin": 9096,
											"end": 9114,
											"name": "DUP3",
											"source": 14
										},
										{
											"begin": 9096,
											"end": 9114,
											"name": "ADD",
											"source": 14
										},
										{
											"begin": 9089,
											"end": 9151,
											"name": "MSTORE",
											"source": 14
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "31B2B4BB32B91034B6B83632B6B2B73A32B9"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "71"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 9182,
											"end": 9184,
											"name": "PUSH",
											"source": 14,
											"value": "60"
										},
										{
											"begin": 9167,
											"end": 9185,
											"name": "DUP3",
											"source": 14
										},
										{
											"begin": 9167,
											"end": 9185,
											"name": "ADD",
											"source": 14
										},
										{
											"begin": 9160,
											"end": 9208,
											"name": "MSTORE",
											"source": 14
										},
										{
											"begin": 9240,
											"end": 9243,
											"name": "PUSH",
											"source": 14,
											"value": "80"
										},
										{
											"begin": 9225,
											"end": 9244,
											"name": "ADD",
											"source": 14
										},
										{
											"begin": 9225,
											"end": 9244,
											"name": "SWAP1",
											"source": 14
										},
										{
											"begin": 8836,
											"end": 9250,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 14
										},
										{
											"begin": 9387,
											"end": 9514,
											"name": "tag",
											"source": 14,
											"value": "268"
										},
										{
											"begin": 9387,
											"end": 9514,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 9448,
											"end": 9458,
											"name": "PUSH",
											"source": 14,
											"value": "4E487B71"
										},
										{
											"begin": 9443,
											"end": 9446,
											"name": "PUSH",
											"source": 14,
											"value": "E0"
										},
										{
											"begin": 9439,
											"end": 9459,
											"name": "SHL",
											"source": 14
										},
										{
											"begin": 9436,
											"end": 9437,
											"name": "PUSH",
											"source": 14,
											"value": "0"
										},
										{
											"begin": 9429,
											"end": 9460,
											"name": "MSTORE",
											"source": 14
										},
										{
											"begin": 9479,
											"end": 9483,
											"name": "PUSH",
											"source": 14,
											"value": "11"
										},
										{
											"begin": 9476,
											"end": 9477,
											"name": "PUSH",
											"source": 14,
											"value": "4"
										},
										{
											"begin": 9469,
											"end": 9484,
											"name": "MSTORE",
											"source": 14
										},
										{
											"begin": 9503,
											"end": 9507,
											"name": "PUSH",
											"source": 14,
											"value": "24"
										},
										{
											"begin": 9500,
											"end": 9501,
											"name": "PUSH",
											"source": 14,
											"value": "0"
										},
										{
											"begin": 9493,
											"end": 9508,
											"name": "REVERT",
											"source": 14
										},
										{
											"begin": 9519,
											"end": 9647,
											"name": "tag",
											"source": 14,
											"value": "217"
										},
										{
											"begin": 9519,
											"end": 9647,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 9586,
											"end": 9595,
											"name": "DUP2",
											"source": 14
										},
										{
											"begin": 9586,
											"end": 9595,
											"name": "DUP2",
											"source": 14
										},
										{
											"begin": 9586,
											"end": 9595,
											"name": "SUB",
											"source": 14
										},
										{
											"begin": 9607,
											"end": 9618,
											"name": "DUP2",
											"source": 14
										},
										{
											"begin": 9607,
											"end": 9618,
											"name": "DUP2",
											"source": 14
										},
										{
											"begin": 9607,
											"end": 9618,
											"name": "GT",
											"source": 14
										},
										{
											"begin": 9604,
											"end": 9641,
											"name": "ISZERO",
											"source": 14
										},
										{
											"begin": 9604,
											"end": 9641,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "78"
										},
										{
											"begin": 9604,
											"end": 9641,
											"name": "JUMPI",
											"source": 14
										},
										{
											"begin": 9621,
											"end": 9639,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "78"
										},
										{
											"begin": 9621,
											"end": 9639,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "268"
										},
										{
											"begin": 9621,
											"end": 9639,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 14
										},
										{
											"begin": 9652,
											"end": 9777,
											"name": "tag",
											"source": 14,
											"value": "220"
										},
										{
											"begin": 9652,
											"end": 9777,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 9717,
											"end": 9726,
											"name": "DUP1",
											"source": 14
										},
										{
											"begin": 9717,
											"end": 9726,
											"name": "DUP3",
											"source": 14
										},
										{
											"begin": 9717,
											"end": 9726,
											"name": "ADD",
											"source": 14
										},
										{
											"begin": 9738,
											"end": 9748,
											"name": "DUP1",
											"source": 14
										},
										{
											"begin": 9738,
											"end": 9748,
											"name": "DUP3",
											"source": 14
										},
										{
											"begin": 9738,
											"end": 9748,
											"name": "GT",
											"source": 14
										},
										{
											"begin": 9735,
											"end": 9771,
											"name": "ISZERO",
											"source": 14
										},
										{
											"begin": 9735,
											"end": 9771,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "78"
										},
										{
											"begin": 9735,
											"end": 9771,
											"name": "JUMPI",
											"source": 14
										},
										{
											"begin": 9751,
											"end": 9769,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "78"
										},
										{
											"begin": 9751,
											"end": 9769,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "268"
										},
										{
											"begin": 9751,
											"end": 9769,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 14
										},
										{
											"begin": 9782,
											"end": 10271,
											"name": "tag",
											"source": 14,
											"value": "228"
										},
										{
											"begin": 9782,
											"end": 10271,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 10051,
											"end": 10066,
											"name": "DUP6",
											"source": 14
										},
										{
											"begin": 10051,
											"end": 10066,
											"name": "DUP2",
											"source": 14
										},
										{
											"begin": 10051,
											"end": 10066,
											"name": "AND",
											"source": 14
										},
										{
											"begin": 10033,
											"end": 10067,
											"name": "DUP3",
											"source": 14
										},
										{
											"begin": 10033,
											"end": 10067,
											"name": "MSTORE",
											"source": 14
										},
										{
											"begin": 10103,
											"end": 10118,
											"name": "DUP5",
											"source": 14
										},
										{
											"begin": 10103,
											"end": 10118,
											"name": "AND",
											"source": 14
										},
										{
											"begin": 10098,
											"end": 10100,
											"name": "PUSH",
											"source": 14,
											"value": "20"
										},
										{
											"begin": 10083,
											"end": 10101,
											"name": "DUP3",
											"source": 14
										},
										{
											"begin": 10083,
											"end": 10101,
											"name": "ADD",
											"source": 14
										},
										{
											"begin": 10076,
											"end": 10119,
											"name": "MSTORE",
											"source": 14
										},
										{
											"begin": 10150,
											"end": 10152,
											"name": "PUSH",
											"source": 14,
											"value": "40"
										},
										{
											"begin": 10135,
											"end": 10153,
											"name": "DUP2",
											"source": 14
										},
										{
											"begin": 10135,
											"end": 10153,
											"name": "ADD",
											"source": 14
										},
										{
											"begin": 10128,
											"end": 10162,
											"name": "DUP4",
											"source": 14
										},
										{
											"begin": 10128,
											"end": 10162,
											"name": "SWAP1",
											"source": 14
										},
										{
											"begin": 10128,
											"end": 10162,
											"name": "MSTORE",
											"source": 14
										},
										{
											"begin": 10198,
											"end": 10201,
											"name": "PUSH",
											"source": 14,
											"value": "80"
										},
										{
											"begin": 10193,
											"end": 10195,
											"name": "PUSH",
											"source": 14,
											"value": "60"
										},
										{
											"begin": 10178,
											"end": 10196,
											"name": "DUP3",
											"source": 14
										},
										{
											"begin": 10178,
											"end": 10196,
											"name": "ADD",
											"source": 14
										},
										{
											"begin": 10171,
											"end": 10202,
											"name": "DUP2",
											"source": 14
										},
										{
											"begin": 10171,
											"end": 10202,
											"name": "SWAP1",
											"source": 14
										},
										{
											"begin": 10171,
											"end": 10202,
											"name": "MSTORE",
											"source": 14
										},
										{
											"begin": 9976,
											"end": 9980,
											"name": "PUSH",
											"source": 14,
											"value": "0"
										},
										{
											"begin": 9976,
											"end": 9980,
											"name": "SWAP1",
											"source": 14
										},
										{
											"begin": 10219,
											"end": 10265,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "344"
										},
										{
											"begin": 10219,
											"end": 10265,
											"name": "SWAP1",
											"source": 14
										},
										{
											"begin": 10245,
											"end": 10264,
											"name": "DUP4",
											"source": 14
										},
										{
											"begin": 10245,
											"end": 10264,
											"name": "ADD",
											"source": 14
										},
										{
											"begin": 10237,
											"end": 10243,
											"name": "DUP5",
											"source": 14
										},
										{
											"begin": 10219,
											"end": 10265,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "266"
										},
										{
											"begin": 10219,
											"end": 10265,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 14
										},
										{
											"begin": 10219,
											"end": 10265,
											"name": "tag",
											"source": 14,
											"value": "344"
										},
										{
											"begin": 10219,
											"end": 10265,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 10211,
											"end": 10265,
											"name": "SWAP7",
											"source": 14
										},
										{
											"begin": 9782,
											"end": 10271,
											"name": "SWAP6",
											"source": 14
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 9782,
											"end": 10271,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 14
										},
										{
											"begin": 10276,
											"end": 10525,
											"name": "tag",
											"source": 14,
											"value": "231"
										},
										{
											"begin": 10276,
											"end": 10525,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 10345,
											"end": 10351,
											"name": "PUSH",
											"source": 14,
											"value": "0"
										},
										{
											"begin": 10398,
											"end": 10400,
											"name": "PUSH",
											"source": 14,
											"value": "20"
										},
										{
											"begin": 10386,
											"end": 10395,
											"name": "DUP3",
											"source": 14
										},
										{
											"begin": 10377,
											"end": 10384,
											"name": "DUP5",
											"source": 14
										},
										{
											"begin": 10373,
											"end": 10396,
											"name": "SUB",
											"source": 14
										},
										{
											"begin": 10369,
											"end": 10401,
											"name": "SLT",
											"source": 14
										},
										{
											"begin": 10366,
											"end": 10418,
											"name": "ISZERO",
											"source": 14
										},
										{
											"begin": 10366,
											"end": 10418,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "346"
										},
										{
											"begin": 10366,
											"end": 10418,
											"name": "JUMPI",
											"source": 14
										},
										{
											"begin": 10414,
											"end": 10415,
											"name": "PUSH",
											"source": 14,
											"value": "0"
										},
										{
											"begin": 10411,
											"end": 10412,
											"name": "DUP1",
											"source": 14
										},
										{
											"begin": 10404,
											"end": 10416,
											"name": "REVERT",
											"source": 14
										},
										{
											"begin": 10366,
											"end": 10418,
											"name": "tag",
											"source": 14,
											"value": "346"
										},
										{
											"begin": 10366,
											"end": 10418,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 10446,
											"end": 10455,
											"name": "DUP2",
											"source": 14
										},
										{
											"begin": 10440,
											"end": 10456,
											"name": "MLOAD",
											"source": 14
										},
										{
											"begin": 10465,
											"end": 10495,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "148"
										},
										{
											"begin": 10489,
											"end": 10494,
											"name": "DUP2",
											"source": 14
										},
										{
											"begin": 10465,
											"end": 10495,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "264"
										},
										{
											"begin": 10465,
											"end": 10495,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 14
										}
									]
								}
							},
							"sourceList": [
								"@openzeppelin/contracts/access/Ownable.sol",
								"@openzeppelin/contracts/security/ReentrancyGuard.sol",
								"@openzeppelin/contracts/token/ERC721/ERC721.sol",
								"@openzeppelin/contracts/token/ERC721/IERC721.sol",
								"@openzeppelin/contracts/token/ERC721/IERC721Receiver.sol",
								"@openzeppelin/contracts/token/ERC721/extensions/IERC721Metadata.sol",
								"@openzeppelin/contracts/utils/Address.sol",
								"@openzeppelin/contracts/utils/Context.sol",
								"@openzeppelin/contracts/utils/Counters.sol",
								"@openzeppelin/contracts/utils/Strings.sol",
								"@openzeppelin/contracts/utils/introspection/ERC165.sol",
								"@openzeppelin/contracts/utils/introspection/IERC165.sol",
								"@openzeppelin/contracts/utils/math/Math.sol",
								"contracts/SmashNFT_Marketplace_1.sol",
								"#utility.yul"
							]
						},
						"methodIdentifiers": {
							"approve(address,uint256)": "095ea7b3",
							"balanceOf(address)": "70a08231",
							"getApproved(uint256)": "081812fc",
							"isApprovedForAll(address,address)": "e985e9c5",
							"name()": "06fdde03",
							"ownerOf(uint256)": "6352211e",
							"safeTransferFrom(address,address,uint256)": "42842e0e",
							"safeTransferFrom(address,address,uint256,bytes)": "b88d4fde",
							"setApprovalForAll(address,bool)": "a22cb465",
							"supportsInterface(bytes4)": "01ffc9a7",
							"symbol()": "95d89b41",
							"tokenURI(uint256)": "c87b56dd",
							"transferFrom(address,address,uint256)": "23b872dd"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.21+commit.d9974bed\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"string\",\"name\":\"name_\",\"type\":\"string\"},{\"internalType\":\"string\",\"name\":\"symbol_\",\"type\":\"string\"}],\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"approved\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"Approval\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"bool\",\"name\":\"approved\",\"type\":\"bool\"}],\"name\":\"ApprovalForAll\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"Transfer\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"approve\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"}],\"name\":\"balanceOf\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"getApproved\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"}],\"name\":\"isApprovedForAll\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"name\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"ownerOf\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"safeTransferFrom\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"},{\"internalType\":\"bytes\",\"name\":\"data\",\"type\":\"bytes\"}],\"name\":\"safeTransferFrom\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"},{\"internalType\":\"bool\",\"name\":\"approved\",\"type\":\"bool\"}],\"name\":\"setApprovalForAll\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes4\",\"name\":\"interfaceId\",\"type\":\"bytes4\"}],\"name\":\"supportsInterface\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"symbol\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"tokenURI\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"transferFrom\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"Implementation of https://eips.ethereum.org/EIPS/eip-721[ERC721] Non-Fungible Token Standard, including the Metadata extension, but not including the Enumerable extension, which is available separately as {ERC721Enumerable}.\",\"events\":{\"Approval(address,address,uint256)\":{\"details\":\"Emitted when `owner` enables `approved` to manage the `tokenId` token.\"},\"ApprovalForAll(address,address,bool)\":{\"details\":\"Emitted when `owner` enables or disables (`approved`) `operator` to manage all of its assets.\"},\"Transfer(address,address,uint256)\":{\"details\":\"Emitted when `tokenId` token is transferred from `from` to `to`.\"}},\"kind\":\"dev\",\"methods\":{\"approve(address,uint256)\":{\"details\":\"See {IERC721-approve}.\"},\"balanceOf(address)\":{\"details\":\"See {IERC721-balanceOf}.\"},\"constructor\":{\"details\":\"Initializes the contract by setting a `name` and a `symbol` to the token collection.\"},\"getApproved(uint256)\":{\"details\":\"See {IERC721-getApproved}.\"},\"isApprovedForAll(address,address)\":{\"details\":\"See {IERC721-isApprovedForAll}.\"},\"name()\":{\"details\":\"See {IERC721Metadata-name}.\"},\"ownerOf(uint256)\":{\"details\":\"See {IERC721-ownerOf}.\"},\"safeTransferFrom(address,address,uint256)\":{\"details\":\"See {IERC721-safeTransferFrom}.\"},\"safeTransferFrom(address,address,uint256,bytes)\":{\"details\":\"See {IERC721-safeTransferFrom}.\"},\"setApprovalForAll(address,bool)\":{\"details\":\"See {IERC721-setApprovalForAll}.\"},\"supportsInterface(bytes4)\":{\"details\":\"See {IERC165-supportsInterface}.\"},\"symbol()\":{\"details\":\"See {IERC721Metadata-symbol}.\"},\"tokenURI(uint256)\":{\"details\":\"See {IERC721Metadata-tokenURI}.\"},\"transferFrom(address,address,uint256)\":{\"details\":\"See {IERC721-transferFrom}.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/token/ERC721/ERC721.sol\":\"ERC721\"},\"evmVersion\":\"shanghai\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/token/ERC721/ERC721.sol\":{\"keccak256\":\"0xd89f3585b211fc9e3408384a4c4efdc3a93b2f877a3821046fa01c219d35be1b\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://5ea15ef7c8980240ccd46df13809d163f749bc0a01d8bced1875660d4872da1c\",\"dweb:/ipfs/QmbDfAT9VeCSG4cnPd6tjDMp8ED85dLHbWyMyv7wbmL4CH\"]},\"@openzeppelin/contracts/token/ERC721/IERC721.sol\":{\"keccak256\":\"0xab28a56179c1db258c9bf5235b382698cb650debecb51b23d12be9e241374b68\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://daae589a9d6fa7e55f99f86c0a16796ca490f243fb3693632c3711c0646c1d56\",\"dweb:/ipfs/QmR3zpd7wNw3rcUdekwiv6FYHJqksuTCXLVioTxu6Fbxk3\"]},\"@openzeppelin/contracts/token/ERC721/IERC721Receiver.sol\":{\"keccak256\":\"0xa82b58eca1ee256be466e536706850163d2ec7821945abd6b4778cfb3bee37da\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://6e75cf83beb757b8855791088546b8337e9d4684e169400c20d44a515353b708\",\"dweb:/ipfs/QmYvPafLfoquiDMEj7CKHtvbgHu7TJNPSVPSCjrtjV8HjV\"]},\"@openzeppelin/contracts/token/ERC721/extensions/IERC721Metadata.sol\":{\"keccak256\":\"0x75b829ff2f26c14355d1cba20e16fe7b29ca58eb5fef665ede48bc0f9c6c74b9\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://a0a107160525724f9e1bbbab031defc2f298296dd9e331f16a6f7130cec32146\",\"dweb:/ipfs/QmemujxSd7gX8A9M8UwmNbz4Ms3U9FG9QfudUgxwvTmPWf\"]},\"@openzeppelin/contracts/utils/Address.sol\":{\"keccak256\":\"0xf96f969e24029d43d0df89e59d365f277021dac62b48e1c1e3ebe0acdd7f1ca1\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://ec772b45a624be516f1c81970caa8a2e144301e9d0921cbc1a2789fef39a1269\",\"dweb:/ipfs/QmNyjwxCrGhQMyzLD93oUobJXVe9ceJvRvfXwbEtuxPiEj\"]},\"@openzeppelin/contracts/utils/Context.sol\":{\"keccak256\":\"0xe2e337e6dde9ef6b680e07338c493ebea1b5fd09b43424112868e9cc1706bca7\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://6df0ddf21ce9f58271bdfaa85cde98b200ef242a05a3f85c2bc10a8294800a92\",\"dweb:/ipfs/QmRK2Y5Yc6BK7tGKkgsgn3aJEQGi5aakeSPZvS65PV8Xp3\"]},\"@openzeppelin/contracts/utils/Strings.sol\":{\"keccak256\":\"0xa4d1d62251f8574deb032a35fc948386a9b4de74b812d4f545a1ac120486b48a\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://8c969013129ba9e651a20735ef659fef6d8a1139ea3607bd4b26ddea2d645634\",\"dweb:/ipfs/QmVhVa6LGuzAcB8qgDtVHRkucn4ihj5UZr8xBLcJkP6ucb\"]},\"@openzeppelin/contracts/utils/introspection/ERC165.sol\":{\"keccak256\":\"0xd10975de010d89fd1c78dc5e8a9a7e7f496198085c151648f20cba166b32582b\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://fb0048dee081f6fffa5f74afc3fb328483c2a30504e94a0ddd2a5114d731ec4d\",\"dweb:/ipfs/QmZptt1nmYoA5SgjwnSgWqgUSDgm4q52Yos3xhnMv3MV43\"]},\"@openzeppelin/contracts/utils/introspection/IERC165.sol\":{\"keccak256\":\"0x447a5f3ddc18419d41ff92b3773fb86471b1db25773e07f877f548918a185bf1\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://be161e54f24e5c6fae81a12db1a8ae87bc5ae1b0ddc805d82a1440a68455088f\",\"dweb:/ipfs/QmP7C3CHdY9urF4dEMb9wmsp1wMxHF6nhA2yQE5SKiPAdy\"]},\"@openzeppelin/contracts/utils/math/Math.sol\":{\"keccak256\":\"0xa1e8e83cd0087785df04ac79fb395d9f3684caeaf973d9e2c71caef723a3a5d6\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://33bbf48cc069be677705037ba7520c22b1b622c23b33e1a71495f2d36549d40b\",\"dweb:/ipfs/Qmct36zWXv3j7LZB83uwbg7TXwnZSN1fqHNDZ93GG98bGz\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [
							{
								"astId": 192,
								"contract": "@openzeppelin/contracts/token/ERC721/ERC721.sol:ERC721",
								"label": "_name",
								"offset": 0,
								"slot": "0",
								"type": "t_string_storage"
							},
							{
								"astId": 194,
								"contract": "@openzeppelin/contracts/token/ERC721/ERC721.sol:ERC721",
								"label": "_symbol",
								"offset": 0,
								"slot": "1",
								"type": "t_string_storage"
							},
							{
								"astId": 198,
								"contract": "@openzeppelin/contracts/token/ERC721/ERC721.sol:ERC721",
								"label": "_owners",
								"offset": 0,
								"slot": "2",
								"type": "t_mapping(t_uint256,t_address)"
							},
							{
								"astId": 202,
								"contract": "@openzeppelin/contracts/token/ERC721/ERC721.sol:ERC721",
								"label": "_balances",
								"offset": 0,
								"slot": "3",
								"type": "t_mapping(t_address,t_uint256)"
							},
							{
								"astId": 206,
								"contract": "@openzeppelin/contracts/token/ERC721/ERC721.sol:ERC721",
								"label": "_tokenApprovals",
								"offset": 0,
								"slot": "4",
								"type": "t_mapping(t_uint256,t_address)"
							},
							{
								"astId": 212,
								"contract": "@openzeppelin/contracts/token/ERC721/ERC721.sol:ERC721",
								"label": "_operatorApprovals",
								"offset": 0,
								"slot": "5",
								"type": "t_mapping(t_address,t_mapping(t_address,t_bool))"
							}
						],
						"types": {
							"t_address": {
								"encoding": "inplace",
								"label": "address",
								"numberOfBytes": "20"
							},
							"t_bool": {
								"encoding": "inplace",
								"label": "bool",
								"numberOfBytes": "1"
							},
							"t_mapping(t_address,t_bool)": {
								"encoding": "mapping",
								"key": "t_address",
								"label": "mapping(address => bool)",
								"numberOfBytes": "32",
								"value": "t_bool"
							},
							"t_mapping(t_address,t_mapping(t_address,t_bool))": {
								"encoding": "mapping",
								"key": "t_address",
								"label": "mapping(address => mapping(address => bool))",
								"numberOfBytes": "32",
								"value": "t_mapping(t_address,t_bool)"
							},
							"t_mapping(t_address,t_uint256)": {
								"encoding": "mapping",
								"key": "t_address",
								"label": "mapping(address => uint256)",
								"numberOfBytes": "32",
								"value": "t_uint256"
							},
							"t_mapping(t_uint256,t_address)": {
								"encoding": "mapping",
								"key": "t_uint256",
								"label": "mapping(uint256 => address)",
								"numberOfBytes": "32",
								"value": "t_address"
							},
							"t_string_storage": {
								"encoding": "bytes",
								"label": "string",
								"numberOfBytes": "32"
							},
							"t_uint256": {
								"encoding": "inplace",
								"label": "uint256",
								"numberOfBytes": "32"
							}
						}
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"@openzeppelin/contracts/token/ERC721/IERC721.sol": {
				"IERC721": {
					"abi": [
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "approved",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								}
							],
							"name": "Approval",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "operator",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "bool",
									"name": "approved",
									"type": "bool"
								}
							],
							"name": "ApprovalForAll",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								}
							],
							"name": "Transfer",
							"type": "event"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								}
							],
							"name": "approve",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "owner",
									"type": "address"
								}
							],
							"name": "balanceOf",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "balance",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								}
							],
							"name": "getApproved",
							"outputs": [
								{
									"internalType": "address",
									"name": "operator",
									"type": "address"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "operator",
									"type": "address"
								}
							],
							"name": "isApprovedForAll",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								}
							],
							"name": "ownerOf",
							"outputs": [
								{
									"internalType": "address",
									"name": "owner",
									"type": "address"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								}
							],
							"name": "safeTransferFrom",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								},
								{
									"internalType": "bytes",
									"name": "data",
									"type": "bytes"
								}
							],
							"name": "safeTransferFrom",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "operator",
									"type": "address"
								},
								{
									"internalType": "bool",
									"name": "_approved",
									"type": "bool"
								}
							],
							"name": "setApprovalForAll",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "bytes4",
									"name": "interfaceId",
									"type": "bytes4"
								}
							],
							"name": "supportsInterface",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								}
							],
							"name": "transferFrom",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						}
					],
					"devdoc": {
						"details": "Required interface of an ERC721 compliant contract.",
						"events": {
							"Approval(address,address,uint256)": {
								"details": "Emitted when `owner` enables `approved` to manage the `tokenId` token."
							},
							"ApprovalForAll(address,address,bool)": {
								"details": "Emitted when `owner` enables or disables (`approved`) `operator` to manage all of its assets."
							},
							"Transfer(address,address,uint256)": {
								"details": "Emitted when `tokenId` token is transferred from `from` to `to`."
							}
						},
						"kind": "dev",
						"methods": {
							"approve(address,uint256)": {
								"details": "Gives permission to `to` to transfer `tokenId` token to another account. The approval is cleared when the token is transferred. Only a single account can be approved at a time, so approving the zero address clears previous approvals. Requirements: - The caller must own the token or be an approved operator. - `tokenId` must exist. Emits an {Approval} event."
							},
							"balanceOf(address)": {
								"details": "Returns the number of tokens in ``owner``'s account."
							},
							"getApproved(uint256)": {
								"details": "Returns the account approved for `tokenId` token. Requirements: - `tokenId` must exist."
							},
							"isApprovedForAll(address,address)": {
								"details": "Returns if the `operator` is allowed to manage all of the assets of `owner`. See {setApprovalForAll}"
							},
							"ownerOf(uint256)": {
								"details": "Returns the owner of the `tokenId` token. Requirements: - `tokenId` must exist."
							},
							"safeTransferFrom(address,address,uint256)": {
								"details": "Safely transfers `tokenId` token from `from` to `to`, checking first that contract recipients are aware of the ERC721 protocol to prevent tokens from being forever locked. Requirements: - `from` cannot be the zero address. - `to` cannot be the zero address. - `tokenId` token must exist and be owned by `from`. - If the caller is not `from`, it must have been allowed to move this token by either {approve} or {setApprovalForAll}. - If `to` refers to a smart contract, it must implement {IERC721Receiver-onERC721Received}, which is called upon a safe transfer. Emits a {Transfer} event."
							},
							"safeTransferFrom(address,address,uint256,bytes)": {
								"details": "Safely transfers `tokenId` token from `from` to `to`. Requirements: - `from` cannot be the zero address. - `to` cannot be the zero address. - `tokenId` token must exist and be owned by `from`. - If the caller is not `from`, it must be approved to move this token by either {approve} or {setApprovalForAll}. - If `to` refers to a smart contract, it must implement {IERC721Receiver-onERC721Received}, which is called upon a safe transfer. Emits a {Transfer} event."
							},
							"setApprovalForAll(address,bool)": {
								"details": "Approve or remove `operator` as an operator for the caller. Operators can call {transferFrom} or {safeTransferFrom} for any token owned by the caller. Requirements: - The `operator` cannot be the caller. Emits an {ApprovalForAll} event."
							},
							"supportsInterface(bytes4)": {
								"details": "Returns true if this contract implements the interface defined by `interfaceId`. See the corresponding https://eips.ethereum.org/EIPS/eip-165#how-interfaces-are-identified[EIP section] to learn more about how these ids are created. This function call must use less than 30 000 gas."
							},
							"transferFrom(address,address,uint256)": {
								"details": "Transfers `tokenId` token from `from` to `to`. WARNING: Note that the caller is responsible to confirm that the recipient is capable of receiving ERC721 or else they may be permanently lost. Usage of {safeTransferFrom} prevents loss, though the caller must understand this adds an external call which potentially creates a reentrancy vulnerability. Requirements: - `from` cannot be the zero address. - `to` cannot be the zero address. - `tokenId` token must be owned by `from`. - If the caller is not `from`, it must be approved to move this token by either {approve} or {setApprovalForAll}. Emits a {Transfer} event."
							}
						},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {
							"approve(address,uint256)": "095ea7b3",
							"balanceOf(address)": "70a08231",
							"getApproved(uint256)": "081812fc",
							"isApprovedForAll(address,address)": "e985e9c5",
							"ownerOf(uint256)": "6352211e",
							"safeTransferFrom(address,address,uint256)": "42842e0e",
							"safeTransferFrom(address,address,uint256,bytes)": "b88d4fde",
							"setApprovalForAll(address,bool)": "a22cb465",
							"supportsInterface(bytes4)": "01ffc9a7",
							"transferFrom(address,address,uint256)": "23b872dd"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.21+commit.d9974bed\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"approved\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"Approval\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"bool\",\"name\":\"approved\",\"type\":\"bool\"}],\"name\":\"ApprovalForAll\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"Transfer\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"approve\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"}],\"name\":\"balanceOf\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"balance\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"getApproved\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"}],\"name\":\"isApprovedForAll\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"ownerOf\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"safeTransferFrom\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"},{\"internalType\":\"bytes\",\"name\":\"data\",\"type\":\"bytes\"}],\"name\":\"safeTransferFrom\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"},{\"internalType\":\"bool\",\"name\":\"_approved\",\"type\":\"bool\"}],\"name\":\"setApprovalForAll\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes4\",\"name\":\"interfaceId\",\"type\":\"bytes4\"}],\"name\":\"supportsInterface\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"transferFrom\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"Required interface of an ERC721 compliant contract.\",\"events\":{\"Approval(address,address,uint256)\":{\"details\":\"Emitted when `owner` enables `approved` to manage the `tokenId` token.\"},\"ApprovalForAll(address,address,bool)\":{\"details\":\"Emitted when `owner` enables or disables (`approved`) `operator` to manage all of its assets.\"},\"Transfer(address,address,uint256)\":{\"details\":\"Emitted when `tokenId` token is transferred from `from` to `to`.\"}},\"kind\":\"dev\",\"methods\":{\"approve(address,uint256)\":{\"details\":\"Gives permission to `to` to transfer `tokenId` token to another account. The approval is cleared when the token is transferred. Only a single account can be approved at a time, so approving the zero address clears previous approvals. Requirements: - The caller must own the token or be an approved operator. - `tokenId` must exist. Emits an {Approval} event.\"},\"balanceOf(address)\":{\"details\":\"Returns the number of tokens in ``owner``'s account.\"},\"getApproved(uint256)\":{\"details\":\"Returns the account approved for `tokenId` token. Requirements: - `tokenId` must exist.\"},\"isApprovedForAll(address,address)\":{\"details\":\"Returns if the `operator` is allowed to manage all of the assets of `owner`. See {setApprovalForAll}\"},\"ownerOf(uint256)\":{\"details\":\"Returns the owner of the `tokenId` token. Requirements: - `tokenId` must exist.\"},\"safeTransferFrom(address,address,uint256)\":{\"details\":\"Safely transfers `tokenId` token from `from` to `to`, checking first that contract recipients are aware of the ERC721 protocol to prevent tokens from being forever locked. Requirements: - `from` cannot be the zero address. - `to` cannot be the zero address. - `tokenId` token must exist and be owned by `from`. - If the caller is not `from`, it must have been allowed to move this token by either {approve} or {setApprovalForAll}. - If `to` refers to a smart contract, it must implement {IERC721Receiver-onERC721Received}, which is called upon a safe transfer. Emits a {Transfer} event.\"},\"safeTransferFrom(address,address,uint256,bytes)\":{\"details\":\"Safely transfers `tokenId` token from `from` to `to`. Requirements: - `from` cannot be the zero address. - `to` cannot be the zero address. - `tokenId` token must exist and be owned by `from`. - If the caller is not `from`, it must be approved to move this token by either {approve} or {setApprovalForAll}. - If `to` refers to a smart contract, it must implement {IERC721Receiver-onERC721Received}, which is called upon a safe transfer. Emits a {Transfer} event.\"},\"setApprovalForAll(address,bool)\":{\"details\":\"Approve or remove `operator` as an operator for the caller. Operators can call {transferFrom} or {safeTransferFrom} for any token owned by the caller. Requirements: - The `operator` cannot be the caller. Emits an {ApprovalForAll} event.\"},\"supportsInterface(bytes4)\":{\"details\":\"Returns true if this contract implements the interface defined by `interfaceId`. See the corresponding https://eips.ethereum.org/EIPS/eip-165#how-interfaces-are-identified[EIP section] to learn more about how these ids are created. This function call must use less than 30 000 gas.\"},\"transferFrom(address,address,uint256)\":{\"details\":\"Transfers `tokenId` token from `from` to `to`. WARNING: Note that the caller is responsible to confirm that the recipient is capable of receiving ERC721 or else they may be permanently lost. Usage of {safeTransferFrom} prevents loss, though the caller must understand this adds an external call which potentially creates a reentrancy vulnerability. Requirements: - `from` cannot be the zero address. - `to` cannot be the zero address. - `tokenId` token must be owned by `from`. - If the caller is not `from`, it must be approved to move this token by either {approve} or {setApprovalForAll}. Emits a {Transfer} event.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/token/ERC721/IERC721.sol\":\"IERC721\"},\"evmVersion\":\"shanghai\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/token/ERC721/IERC721.sol\":{\"keccak256\":\"0xab28a56179c1db258c9bf5235b382698cb650debecb51b23d12be9e241374b68\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://daae589a9d6fa7e55f99f86c0a16796ca490f243fb3693632c3711c0646c1d56\",\"dweb:/ipfs/QmR3zpd7wNw3rcUdekwiv6FYHJqksuTCXLVioTxu6Fbxk3\"]},\"@openzeppelin/contracts/utils/introspection/IERC165.sol\":{\"keccak256\":\"0x447a5f3ddc18419d41ff92b3773fb86471b1db25773e07f877f548918a185bf1\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://be161e54f24e5c6fae81a12db1a8ae87bc5ae1b0ddc805d82a1440a68455088f\",\"dweb:/ipfs/QmP7C3CHdY9urF4dEMb9wmsp1wMxHF6nhA2yQE5SKiPAdy\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"@openzeppelin/contracts/token/ERC721/IERC721Receiver.sol": {
				"IERC721Receiver": {
					"abi": [
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "operator",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								},
								{
									"internalType": "bytes",
									"name": "data",
									"type": "bytes"
								}
							],
							"name": "onERC721Received",
							"outputs": [
								{
									"internalType": "bytes4",
									"name": "",
									"type": "bytes4"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						}
					],
					"devdoc": {
						"details": "Interface for any contract that wants to support safeTransfers from ERC721 asset contracts.",
						"kind": "dev",
						"methods": {
							"onERC721Received(address,address,uint256,bytes)": {
								"details": "Whenever an {IERC721} `tokenId` token is transferred to this contract via {IERC721-safeTransferFrom} by `operator` from `from`, this function is called. It must return its Solidity selector to confirm the token transfer. If any other value is returned or the interface is not implemented by the recipient, the transfer will be reverted. The selector can be obtained in Solidity with `IERC721Receiver.onERC721Received.selector`."
							}
						},
						"title": "ERC721 token receiver interface",
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {
							"onERC721Received(address,address,uint256,bytes)": "150b7a02"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.21+commit.d9974bed\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"},{\"internalType\":\"bytes\",\"name\":\"data\",\"type\":\"bytes\"}],\"name\":\"onERC721Received\",\"outputs\":[{\"internalType\":\"bytes4\",\"name\":\"\",\"type\":\"bytes4\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"Interface for any contract that wants to support safeTransfers from ERC721 asset contracts.\",\"kind\":\"dev\",\"methods\":{\"onERC721Received(address,address,uint256,bytes)\":{\"details\":\"Whenever an {IERC721} `tokenId` token is transferred to this contract via {IERC721-safeTransferFrom} by `operator` from `from`, this function is called. It must return its Solidity selector to confirm the token transfer. If any other value is returned or the interface is not implemented by the recipient, the transfer will be reverted. The selector can be obtained in Solidity with `IERC721Receiver.onERC721Received.selector`.\"}},\"title\":\"ERC721 token receiver interface\",\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/token/ERC721/IERC721Receiver.sol\":\"IERC721Receiver\"},\"evmVersion\":\"shanghai\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/token/ERC721/IERC721Receiver.sol\":{\"keccak256\":\"0xa82b58eca1ee256be466e536706850163d2ec7821945abd6b4778cfb3bee37da\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://6e75cf83beb757b8855791088546b8337e9d4684e169400c20d44a515353b708\",\"dweb:/ipfs/QmYvPafLfoquiDMEj7CKHtvbgHu7TJNPSVPSCjrtjV8HjV\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"@openzeppelin/contracts/token/ERC721/extensions/IERC721Metadata.sol": {
				"IERC721Metadata": {
					"abi": [
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "approved",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								}
							],
							"name": "Approval",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "operator",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "bool",
									"name": "approved",
									"type": "bool"
								}
							],
							"name": "ApprovalForAll",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								}
							],
							"name": "Transfer",
							"type": "event"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								}
							],
							"name": "approve",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "owner",
									"type": "address"
								}
							],
							"name": "balanceOf",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "balance",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								}
							],
							"name": "getApproved",
							"outputs": [
								{
									"internalType": "address",
									"name": "operator",
									"type": "address"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "operator",
									"type": "address"
								}
							],
							"name": "isApprovedForAll",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "name",
							"outputs": [
								{
									"internalType": "string",
									"name": "",
									"type": "string"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								}
							],
							"name": "ownerOf",
							"outputs": [
								{
									"internalType": "address",
									"name": "owner",
									"type": "address"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								}
							],
							"name": "safeTransferFrom",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								},
								{
									"internalType": "bytes",
									"name": "data",
									"type": "bytes"
								}
							],
							"name": "safeTransferFrom",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "operator",
									"type": "address"
								},
								{
									"internalType": "bool",
									"name": "_approved",
									"type": "bool"
								}
							],
							"name": "setApprovalForAll",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "bytes4",
									"name": "interfaceId",
									"type": "bytes4"
								}
							],
							"name": "supportsInterface",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "symbol",
							"outputs": [
								{
									"internalType": "string",
									"name": "",
									"type": "string"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								}
							],
							"name": "tokenURI",
							"outputs": [
								{
									"internalType": "string",
									"name": "",
									"type": "string"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								}
							],
							"name": "transferFrom",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						}
					],
					"devdoc": {
						"details": "See https://eips.ethereum.org/EIPS/eip-721",
						"events": {
							"Approval(address,address,uint256)": {
								"details": "Emitted when `owner` enables `approved` to manage the `tokenId` token."
							},
							"ApprovalForAll(address,address,bool)": {
								"details": "Emitted when `owner` enables or disables (`approved`) `operator` to manage all of its assets."
							},
							"Transfer(address,address,uint256)": {
								"details": "Emitted when `tokenId` token is transferred from `from` to `to`."
							}
						},
						"kind": "dev",
						"methods": {
							"approve(address,uint256)": {
								"details": "Gives permission to `to` to transfer `tokenId` token to another account. The approval is cleared when the token is transferred. Only a single account can be approved at a time, so approving the zero address clears previous approvals. Requirements: - The caller must own the token or be an approved operator. - `tokenId` must exist. Emits an {Approval} event."
							},
							"balanceOf(address)": {
								"details": "Returns the number of tokens in ``owner``'s account."
							},
							"getApproved(uint256)": {
								"details": "Returns the account approved for `tokenId` token. Requirements: - `tokenId` must exist."
							},
							"isApprovedForAll(address,address)": {
								"details": "Returns if the `operator` is allowed to manage all of the assets of `owner`. See {setApprovalForAll}"
							},
							"name()": {
								"details": "Returns the token collection name."
							},
							"ownerOf(uint256)": {
								"details": "Returns the owner of the `tokenId` token. Requirements: - `tokenId` must exist."
							},
							"safeTransferFrom(address,address,uint256)": {
								"details": "Safely transfers `tokenId` token from `from` to `to`, checking first that contract recipients are aware of the ERC721 protocol to prevent tokens from being forever locked. Requirements: - `from` cannot be the zero address. - `to` cannot be the zero address. - `tokenId` token must exist and be owned by `from`. - If the caller is not `from`, it must have been allowed to move this token by either {approve} or {setApprovalForAll}. - If `to` refers to a smart contract, it must implement {IERC721Receiver-onERC721Received}, which is called upon a safe transfer. Emits a {Transfer} event."
							},
							"safeTransferFrom(address,address,uint256,bytes)": {
								"details": "Safely transfers `tokenId` token from `from` to `to`. Requirements: - `from` cannot be the zero address. - `to` cannot be the zero address. - `tokenId` token must exist and be owned by `from`. - If the caller is not `from`, it must be approved to move this token by either {approve} or {setApprovalForAll}. - If `to` refers to a smart contract, it must implement {IERC721Receiver-onERC721Received}, which is called upon a safe transfer. Emits a {Transfer} event."
							},
							"setApprovalForAll(address,bool)": {
								"details": "Approve or remove `operator` as an operator for the caller. Operators can call {transferFrom} or {safeTransferFrom} for any token owned by the caller. Requirements: - The `operator` cannot be the caller. Emits an {ApprovalForAll} event."
							},
							"supportsInterface(bytes4)": {
								"details": "Returns true if this contract implements the interface defined by `interfaceId`. See the corresponding https://eips.ethereum.org/EIPS/eip-165#how-interfaces-are-identified[EIP section] to learn more about how these ids are created. This function call must use less than 30 000 gas."
							},
							"symbol()": {
								"details": "Returns the token collection symbol."
							},
							"tokenURI(uint256)": {
								"details": "Returns the Uniform Resource Identifier (URI) for `tokenId` token."
							},
							"transferFrom(address,address,uint256)": {
								"details": "Transfers `tokenId` token from `from` to `to`. WARNING: Note that the caller is responsible to confirm that the recipient is capable of receiving ERC721 or else they may be permanently lost. Usage of {safeTransferFrom} prevents loss, though the caller must understand this adds an external call which potentially creates a reentrancy vulnerability. Requirements: - `from` cannot be the zero address. - `to` cannot be the zero address. - `tokenId` token must be owned by `from`. - If the caller is not `from`, it must be approved to move this token by either {approve} or {setApprovalForAll}. Emits a {Transfer} event."
							}
						},
						"title": "ERC-721 Non-Fungible Token Standard, optional metadata extension",
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {
							"approve(address,uint256)": "095ea7b3",
							"balanceOf(address)": "70a08231",
							"getApproved(uint256)": "081812fc",
							"isApprovedForAll(address,address)": "e985e9c5",
							"name()": "06fdde03",
							"ownerOf(uint256)": "6352211e",
							"safeTransferFrom(address,address,uint256)": "42842e0e",
							"safeTransferFrom(address,address,uint256,bytes)": "b88d4fde",
							"setApprovalForAll(address,bool)": "a22cb465",
							"supportsInterface(bytes4)": "01ffc9a7",
							"symbol()": "95d89b41",
							"tokenURI(uint256)": "c87b56dd",
							"transferFrom(address,address,uint256)": "23b872dd"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.21+commit.d9974bed\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"approved\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"Approval\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"bool\",\"name\":\"approved\",\"type\":\"bool\"}],\"name\":\"ApprovalForAll\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"Transfer\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"approve\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"}],\"name\":\"balanceOf\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"balance\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"getApproved\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"}],\"name\":\"isApprovedForAll\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"name\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"ownerOf\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"safeTransferFrom\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"},{\"internalType\":\"bytes\",\"name\":\"data\",\"type\":\"bytes\"}],\"name\":\"safeTransferFrom\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"},{\"internalType\":\"bool\",\"name\":\"_approved\",\"type\":\"bool\"}],\"name\":\"setApprovalForAll\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes4\",\"name\":\"interfaceId\",\"type\":\"bytes4\"}],\"name\":\"supportsInterface\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"symbol\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"tokenURI\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"transferFrom\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"See https://eips.ethereum.org/EIPS/eip-721\",\"events\":{\"Approval(address,address,uint256)\":{\"details\":\"Emitted when `owner` enables `approved` to manage the `tokenId` token.\"},\"ApprovalForAll(address,address,bool)\":{\"details\":\"Emitted when `owner` enables or disables (`approved`) `operator` to manage all of its assets.\"},\"Transfer(address,address,uint256)\":{\"details\":\"Emitted when `tokenId` token is transferred from `from` to `to`.\"}},\"kind\":\"dev\",\"methods\":{\"approve(address,uint256)\":{\"details\":\"Gives permission to `to` to transfer `tokenId` token to another account. The approval is cleared when the token is transferred. Only a single account can be approved at a time, so approving the zero address clears previous approvals. Requirements: - The caller must own the token or be an approved operator. - `tokenId` must exist. Emits an {Approval} event.\"},\"balanceOf(address)\":{\"details\":\"Returns the number of tokens in ``owner``'s account.\"},\"getApproved(uint256)\":{\"details\":\"Returns the account approved for `tokenId` token. Requirements: - `tokenId` must exist.\"},\"isApprovedForAll(address,address)\":{\"details\":\"Returns if the `operator` is allowed to manage all of the assets of `owner`. See {setApprovalForAll}\"},\"name()\":{\"details\":\"Returns the token collection name.\"},\"ownerOf(uint256)\":{\"details\":\"Returns the owner of the `tokenId` token. Requirements: - `tokenId` must exist.\"},\"safeTransferFrom(address,address,uint256)\":{\"details\":\"Safely transfers `tokenId` token from `from` to `to`, checking first that contract recipients are aware of the ERC721 protocol to prevent tokens from being forever locked. Requirements: - `from` cannot be the zero address. - `to` cannot be the zero address. - `tokenId` token must exist and be owned by `from`. - If the caller is not `from`, it must have been allowed to move this token by either {approve} or {setApprovalForAll}. - If `to` refers to a smart contract, it must implement {IERC721Receiver-onERC721Received}, which is called upon a safe transfer. Emits a {Transfer} event.\"},\"safeTransferFrom(address,address,uint256,bytes)\":{\"details\":\"Safely transfers `tokenId` token from `from` to `to`. Requirements: - `from` cannot be the zero address. - `to` cannot be the zero address. - `tokenId` token must exist and be owned by `from`. - If the caller is not `from`, it must be approved to move this token by either {approve} or {setApprovalForAll}. - If `to` refers to a smart contract, it must implement {IERC721Receiver-onERC721Received}, which is called upon a safe transfer. Emits a {Transfer} event.\"},\"setApprovalForAll(address,bool)\":{\"details\":\"Approve or remove `operator` as an operator for the caller. Operators can call {transferFrom} or {safeTransferFrom} for any token owned by the caller. Requirements: - The `operator` cannot be the caller. Emits an {ApprovalForAll} event.\"},\"supportsInterface(bytes4)\":{\"details\":\"Returns true if this contract implements the interface defined by `interfaceId`. See the corresponding https://eips.ethereum.org/EIPS/eip-165#how-interfaces-are-identified[EIP section] to learn more about how these ids are created. This function call must use less than 30 000 gas.\"},\"symbol()\":{\"details\":\"Returns the token collection symbol.\"},\"tokenURI(uint256)\":{\"details\":\"Returns the Uniform Resource Identifier (URI) for `tokenId` token.\"},\"transferFrom(address,address,uint256)\":{\"details\":\"Transfers `tokenId` token from `from` to `to`. WARNING: Note that the caller is responsible to confirm that the recipient is capable of receiving ERC721 or else they may be permanently lost. Usage of {safeTransferFrom} prevents loss, though the caller must understand this adds an external call which potentially creates a reentrancy vulnerability. Requirements: - `from` cannot be the zero address. - `to` cannot be the zero address. - `tokenId` token must be owned by `from`. - If the caller is not `from`, it must be approved to move this token by either {approve} or {setApprovalForAll}. Emits a {Transfer} event.\"}},\"title\":\"ERC-721 Non-Fungible Token Standard, optional metadata extension\",\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/token/ERC721/extensions/IERC721Metadata.sol\":\"IERC721Metadata\"},\"evmVersion\":\"shanghai\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/token/ERC721/IERC721.sol\":{\"keccak256\":\"0xab28a56179c1db258c9bf5235b382698cb650debecb51b23d12be9e241374b68\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://daae589a9d6fa7e55f99f86c0a16796ca490f243fb3693632c3711c0646c1d56\",\"dweb:/ipfs/QmR3zpd7wNw3rcUdekwiv6FYHJqksuTCXLVioTxu6Fbxk3\"]},\"@openzeppelin/contracts/token/ERC721/extensions/IERC721Metadata.sol\":{\"keccak256\":\"0x75b829ff2f26c14355d1cba20e16fe7b29ca58eb5fef665ede48bc0f9c6c74b9\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://a0a107160525724f9e1bbbab031defc2f298296dd9e331f16a6f7130cec32146\",\"dweb:/ipfs/QmemujxSd7gX8A9M8UwmNbz4Ms3U9FG9QfudUgxwvTmPWf\"]},\"@openzeppelin/contracts/utils/introspection/IERC165.sol\":{\"keccak256\":\"0x447a5f3ddc18419d41ff92b3773fb86471b1db25773e07f877f548918a185bf1\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://be161e54f24e5c6fae81a12db1a8ae87bc5ae1b0ddc805d82a1440a68455088f\",\"dweb:/ipfs/QmP7C3CHdY9urF4dEMb9wmsp1wMxHF6nhA2yQE5SKiPAdy\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"@openzeppelin/contracts/utils/Address.sol": {
				"Address": {
					"abi": [],
					"devdoc": {
						"details": "Collection of functions related to the address type",
						"kind": "dev",
						"methods": {},
						"version": 1
					},
					"evm": {
						"assembly": "    /* \"@openzeppelin/contracts/utils/Address.sol\":194:9158  library Address {... */\n  dataSize(sub_0)\n  dataOffset(sub_0)\n  0x0b\n  dup3\n  dup3\n  dup3\n  codecopy\n  dup1\n  mload\n  0x00\n  byte\n  0x73\n  eq\n  tag_1\n  jumpi\n  mstore(0x00, shl(0xe0, 0x4e487b71))\n  mstore(0x04, 0x00)\n  revert(0x00, 0x24)\ntag_1:\n  mstore(0x00, address)\n  0x73\n  dup2\n  mstore8\n  dup3\n  dup2\n  return\nstop\n\nsub_0: assembly {\n        /* \"@openzeppelin/contracts/utils/Address.sol\":194:9158  library Address {... */\n      eq(address, deployTimeAddress())\n      mstore(0x40, 0x80)\n      0x00\n      dup1\n      revert\n\n    auxdata: 0xa26469706673582212203cf0b5f5299e9bb2e9fa09500b8a85b67ff7da0cedc1893d41671c1bb134bc1e64736f6c63430008150033\n}\n",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "60556032600b8282823980515f1a607314602657634e487b7160e01b5f525f60045260245ffd5b305f52607381538281f3fe730000000000000000000000000000000000000000301460806040525f80fdfea26469706673582212203cf0b5f5299e9bb2e9fa09500b8a85b67ff7da0cedc1893d41671c1bb134bc1e64736f6c63430008150033",
							"opcodes": "PUSH1 0x55 PUSH1 0x32 PUSH1 0xB DUP3 DUP3 DUP3 CODECOPY DUP1 MLOAD PUSH0 BYTE PUSH1 0x73 EQ PUSH1 0x26 JUMPI PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH0 MSTORE PUSH0 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH0 REVERT JUMPDEST ADDRESS PUSH0 MSTORE PUSH1 0x73 DUP2 MSTORE8 DUP3 DUP2 RETURN INVALID PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 EXTCODECOPY CREATE 0xB5 CREATE2 0x29 SWAP15 SWAP12 0xB2 0xE9 STATICCALL MULMOD POP SIGNEXTEND DUP11 DUP6 0xB6 PUSH32 0xF7DA0CEDC1893D41671C1BB134BC1E64736F6C63430008150033000000000000 ",
							"sourceMap": "194:8964:6:-:0;;;;;;;;;;;;;;;-1:-1:-1;;;194:8964:6;;;;;;;;;;;;;;;;;"
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "730000000000000000000000000000000000000000301460806040525f80fdfea26469706673582212203cf0b5f5299e9bb2e9fa09500b8a85b67ff7da0cedc1893d41671c1bb134bc1e64736f6c63430008150033",
							"opcodes": "PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 EXTCODECOPY CREATE 0xB5 CREATE2 0x29 SWAP15 SWAP12 0xB2 0xE9 STATICCALL MULMOD POP SIGNEXTEND DUP11 DUP6 0xB6 PUSH32 0xF7DA0CEDC1893D41671C1BB134BC1E64736F6C63430008150033000000000000 ",
							"sourceMap": "194:8964:6:-:0;;;;;;;;"
						},
						"gasEstimates": {
							"creation": {
								"codeDepositCost": "17000",
								"executionCost": "96",
								"totalCost": "17096"
							},
							"internal": {
								"_revert(bytes memory,string memory)": "infinite",
								"functionCall(address,bytes memory)": "infinite",
								"functionCall(address,bytes memory,string memory)": "infinite",
								"functionCallWithValue(address,bytes memory,uint256)": "infinite",
								"functionCallWithValue(address,bytes memory,uint256,string memory)": "infinite",
								"functionDelegateCall(address,bytes memory)": "infinite",
								"functionDelegateCall(address,bytes memory,string memory)": "infinite",
								"functionStaticCall(address,bytes memory)": "infinite",
								"functionStaticCall(address,bytes memory,string memory)": "infinite",
								"isContract(address)": "infinite",
								"sendValue(address payable,uint256)": "infinite",
								"verifyCallResult(bool,bytes memory,string memory)": "infinite",
								"verifyCallResultFromTarget(address,bool,bytes memory,string memory)": "infinite"
							}
						},
						"legacyAssembly": {
							".code": [
								{
									"begin": 194,
									"end": 9158,
									"name": "PUSH #[$]",
									"source": 6,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 194,
									"end": 9158,
									"name": "PUSH [$]",
									"source": 6,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 194,
									"end": 9158,
									"name": "PUSH",
									"source": 6,
									"value": "B"
								},
								{
									"begin": 194,
									"end": 9158,
									"name": "DUP3",
									"source": 6
								},
								{
									"begin": 194,
									"end": 9158,
									"name": "DUP3",
									"source": 6
								},
								{
									"begin": 194,
									"end": 9158,
									"name": "DUP3",
									"source": 6
								},
								{
									"begin": 194,
									"end": 9158,
									"name": "CODECOPY",
									"source": 6
								},
								{
									"begin": 194,
									"end": 9158,
									"name": "DUP1",
									"source": 6
								},
								{
									"begin": 194,
									"end": 9158,
									"name": "MLOAD",
									"source": 6
								},
								{
									"begin": 194,
									"end": 9158,
									"name": "PUSH",
									"source": 6,
									"value": "0"
								},
								{
									"begin": 194,
									"end": 9158,
									"name": "BYTE",
									"source": 6
								},
								{
									"begin": 194,
									"end": 9158,
									"name": "PUSH",
									"source": 6,
									"value": "73"
								},
								{
									"begin": 194,
									"end": 9158,
									"name": "EQ",
									"source": 6
								},
								{
									"begin": 194,
									"end": 9158,
									"name": "PUSH [tag]",
									"source": 6,
									"value": "1"
								},
								{
									"begin": 194,
									"end": 9158,
									"name": "JUMPI",
									"source": 6
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "4E487B71"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "E0"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SHL",
									"source": -1
								},
								{
									"begin": 194,
									"end": 9158,
									"name": "PUSH",
									"source": 6,
									"value": "0"
								},
								{
									"begin": 194,
									"end": 9158,
									"name": "MSTORE",
									"source": 6
								},
								{
									"begin": 194,
									"end": 9158,
									"name": "PUSH",
									"source": 6,
									"value": "0"
								},
								{
									"begin": 194,
									"end": 9158,
									"name": "PUSH",
									"source": 6,
									"value": "4"
								},
								{
									"begin": 194,
									"end": 9158,
									"name": "MSTORE",
									"source": 6
								},
								{
									"begin": 194,
									"end": 9158,
									"name": "PUSH",
									"source": 6,
									"value": "24"
								},
								{
									"begin": 194,
									"end": 9158,
									"name": "PUSH",
									"source": 6,
									"value": "0"
								},
								{
									"begin": 194,
									"end": 9158,
									"name": "REVERT",
									"source": 6
								},
								{
									"begin": 194,
									"end": 9158,
									"name": "tag",
									"source": 6,
									"value": "1"
								},
								{
									"begin": 194,
									"end": 9158,
									"name": "JUMPDEST",
									"source": 6
								},
								{
									"begin": 194,
									"end": 9158,
									"name": "ADDRESS",
									"source": 6
								},
								{
									"begin": 194,
									"end": 9158,
									"name": "PUSH",
									"source": 6,
									"value": "0"
								},
								{
									"begin": 194,
									"end": 9158,
									"name": "MSTORE",
									"source": 6
								},
								{
									"begin": 194,
									"end": 9158,
									"name": "PUSH",
									"source": 6,
									"value": "73"
								},
								{
									"begin": 194,
									"end": 9158,
									"name": "DUP2",
									"source": 6
								},
								{
									"begin": 194,
									"end": 9158,
									"name": "MSTORE8",
									"source": 6
								},
								{
									"begin": 194,
									"end": 9158,
									"name": "DUP3",
									"source": 6
								},
								{
									"begin": 194,
									"end": 9158,
									"name": "DUP2",
									"source": 6
								},
								{
									"begin": 194,
									"end": 9158,
									"name": "RETURN",
									"source": 6
								}
							],
							".data": {
								"0": {
									".auxdata": "a26469706673582212203cf0b5f5299e9bb2e9fa09500b8a85b67ff7da0cedc1893d41671c1bb134bc1e64736f6c63430008150033",
									".code": [
										{
											"begin": 194,
											"end": 9158,
											"name": "PUSHDEPLOYADDRESS",
											"source": 6
										},
										{
											"begin": 194,
											"end": 9158,
											"name": "ADDRESS",
											"source": 6
										},
										{
											"begin": 194,
											"end": 9158,
											"name": "EQ",
											"source": 6
										},
										{
											"begin": 194,
											"end": 9158,
											"name": "PUSH",
											"source": 6,
											"value": "80"
										},
										{
											"begin": 194,
											"end": 9158,
											"name": "PUSH",
											"source": 6,
											"value": "40"
										},
										{
											"begin": 194,
											"end": 9158,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 194,
											"end": 9158,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 194,
											"end": 9158,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 194,
											"end": 9158,
											"name": "REVERT",
											"source": 6
										}
									]
								}
							},
							"sourceList": [
								"@openzeppelin/contracts/access/Ownable.sol",
								"@openzeppelin/contracts/security/ReentrancyGuard.sol",
								"@openzeppelin/contracts/token/ERC721/ERC721.sol",
								"@openzeppelin/contracts/token/ERC721/IERC721.sol",
								"@openzeppelin/contracts/token/ERC721/IERC721Receiver.sol",
								"@openzeppelin/contracts/token/ERC721/extensions/IERC721Metadata.sol",
								"@openzeppelin/contracts/utils/Address.sol",
								"@openzeppelin/contracts/utils/Context.sol",
								"@openzeppelin/contracts/utils/Counters.sol",
								"@openzeppelin/contracts/utils/Strings.sol",
								"@openzeppelin/contracts/utils/introspection/ERC165.sol",
								"@openzeppelin/contracts/utils/introspection/IERC165.sol",
								"@openzeppelin/contracts/utils/math/Math.sol",
								"contracts/SmashNFT_Marketplace_1.sol",
								"#utility.yul"
							]
						},
						"methodIdentifiers": {}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.21+commit.d9974bed\"},\"language\":\"Solidity\",\"output\":{\"abi\":[],\"devdoc\":{\"details\":\"Collection of functions related to the address type\",\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/utils/Address.sol\":\"Address\"},\"evmVersion\":\"shanghai\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/utils/Address.sol\":{\"keccak256\":\"0xf96f969e24029d43d0df89e59d365f277021dac62b48e1c1e3ebe0acdd7f1ca1\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://ec772b45a624be516f1c81970caa8a2e144301e9d0921cbc1a2789fef39a1269\",\"dweb:/ipfs/QmNyjwxCrGhQMyzLD93oUobJXVe9ceJvRvfXwbEtuxPiEj\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"@openzeppelin/contracts/utils/Context.sol": {
				"Context": {
					"abi": [],
					"devdoc": {
						"details": "Provides information about the current execution context, including the sender of the transaction and its data. While these are generally available via msg.sender and msg.data, they should not be accessed in such a direct manner, since when dealing with meta-transactions the account sending and paying for execution may not be the actual sender (as far as an application is concerned). This contract is only required for intermediate, library-like contracts.",
						"kind": "dev",
						"methods": {},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.21+commit.d9974bed\"},\"language\":\"Solidity\",\"output\":{\"abi\":[],\"devdoc\":{\"details\":\"Provides information about the current execution context, including the sender of the transaction and its data. While these are generally available via msg.sender and msg.data, they should not be accessed in such a direct manner, since when dealing with meta-transactions the account sending and paying for execution may not be the actual sender (as far as an application is concerned). This contract is only required for intermediate, library-like contracts.\",\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/utils/Context.sol\":\"Context\"},\"evmVersion\":\"shanghai\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/utils/Context.sol\":{\"keccak256\":\"0xe2e337e6dde9ef6b680e07338c493ebea1b5fd09b43424112868e9cc1706bca7\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://6df0ddf21ce9f58271bdfaa85cde98b200ef242a05a3f85c2bc10a8294800a92\",\"dweb:/ipfs/QmRK2Y5Yc6BK7tGKkgsgn3aJEQGi5aakeSPZvS65PV8Xp3\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"@openzeppelin/contracts/utils/Counters.sol": {
				"Counters": {
					"abi": [],
					"devdoc": {
						"author": "Matt Condon (@shrugs)",
						"details": "Provides counters that can only be incremented, decremented or reset. This can be used e.g. to track the number of elements in a mapping, issuing ERC721 ids, or counting request ids. Include with `using Counters for Counters.Counter;`",
						"kind": "dev",
						"methods": {},
						"title": "Counters",
						"version": 1
					},
					"evm": {
						"assembly": "    /* \"@openzeppelin/contracts/utils/Counters.sol\":424:1395  library Counters {... */\n  dataSize(sub_0)\n  dataOffset(sub_0)\n  0x0b\n  dup3\n  dup3\n  dup3\n  codecopy\n  dup1\n  mload\n  0x00\n  byte\n  0x73\n  eq\n  tag_1\n  jumpi\n  mstore(0x00, shl(0xe0, 0x4e487b71))\n  mstore(0x04, 0x00)\n  revert(0x00, 0x24)\ntag_1:\n  mstore(0x00, address)\n  0x73\n  dup2\n  mstore8\n  dup3\n  dup2\n  return\nstop\n\nsub_0: assembly {\n        /* \"@openzeppelin/contracts/utils/Counters.sol\":424:1395  library Counters {... */\n      eq(address, deployTimeAddress())\n      mstore(0x40, 0x80)\n      0x00\n      dup1\n      revert\n\n    auxdata: 0xa26469706673582212201c5453ff7a3509235b3182f9c0009b2c073ca0c4eda2827e18d4f66f2957448664736f6c63430008150033\n}\n",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "60556032600b8282823980515f1a607314602657634e487b7160e01b5f525f60045260245ffd5b305f52607381538281f3fe730000000000000000000000000000000000000000301460806040525f80fdfea26469706673582212201c5453ff7a3509235b3182f9c0009b2c073ca0c4eda2827e18d4f66f2957448664736f6c63430008150033",
							"opcodes": "PUSH1 0x55 PUSH1 0x32 PUSH1 0xB DUP3 DUP3 DUP3 CODECOPY DUP1 MLOAD PUSH0 BYTE PUSH1 0x73 EQ PUSH1 0x26 JUMPI PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH0 MSTORE PUSH0 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH0 REVERT JUMPDEST ADDRESS PUSH0 MSTORE PUSH1 0x73 DUP2 MSTORE8 DUP3 DUP2 RETURN INVALID PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 SHR SLOAD MSTORE8 SELFDESTRUCT PUSH27 0x3509235B3182F9C0009B2C073CA0C4EDA2827E18D4F66F29574486 PUSH5 0x736F6C6343 STOP ADDMOD ISZERO STOP CALLER ",
							"sourceMap": "424:971:8:-:0;;;;;;;;;;;;;;;-1:-1:-1;;;424:971:8;;;;;;;;;;;;;;;;;"
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "730000000000000000000000000000000000000000301460806040525f80fdfea26469706673582212201c5453ff7a3509235b3182f9c0009b2c073ca0c4eda2827e18d4f66f2957448664736f6c63430008150033",
							"opcodes": "PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 SHR SLOAD MSTORE8 SELFDESTRUCT PUSH27 0x3509235B3182F9C0009B2C073CA0C4EDA2827E18D4F66F29574486 PUSH5 0x736F6C6343 STOP ADDMOD ISZERO STOP CALLER ",
							"sourceMap": "424:971:8:-:0;;;;;;;;"
						},
						"gasEstimates": {
							"creation": {
								"codeDepositCost": "17000",
								"executionCost": "96",
								"totalCost": "17096"
							},
							"internal": {
								"current(struct Counters.Counter storage pointer)": "infinite",
								"decrement(struct Counters.Counter storage pointer)": "infinite",
								"increment(struct Counters.Counter storage pointer)": "infinite",
								"reset(struct Counters.Counter storage pointer)": "infinite"
							}
						},
						"legacyAssembly": {
							".code": [
								{
									"begin": 424,
									"end": 1395,
									"name": "PUSH #[$]",
									"source": 8,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 424,
									"end": 1395,
									"name": "PUSH [$]",
									"source": 8,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 424,
									"end": 1395,
									"name": "PUSH",
									"source": 8,
									"value": "B"
								},
								{
									"begin": 424,
									"end": 1395,
									"name": "DUP3",
									"source": 8
								},
								{
									"begin": 424,
									"end": 1395,
									"name": "DUP3",
									"source": 8
								},
								{
									"begin": 424,
									"end": 1395,
									"name": "DUP3",
									"source": 8
								},
								{
									"begin": 424,
									"end": 1395,
									"name": "CODECOPY",
									"source": 8
								},
								{
									"begin": 424,
									"end": 1395,
									"name": "DUP1",
									"source": 8
								},
								{
									"begin": 424,
									"end": 1395,
									"name": "MLOAD",
									"source": 8
								},
								{
									"begin": 424,
									"end": 1395,
									"name": "PUSH",
									"source": 8,
									"value": "0"
								},
								{
									"begin": 424,
									"end": 1395,
									"name": "BYTE",
									"source": 8
								},
								{
									"begin": 424,
									"end": 1395,
									"name": "PUSH",
									"source": 8,
									"value": "73"
								},
								{
									"begin": 424,
									"end": 1395,
									"name": "EQ",
									"source": 8
								},
								{
									"begin": 424,
									"end": 1395,
									"name": "PUSH [tag]",
									"source": 8,
									"value": "1"
								},
								{
									"begin": 424,
									"end": 1395,
									"name": "JUMPI",
									"source": 8
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "4E487B71"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "E0"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SHL",
									"source": -1
								},
								{
									"begin": 424,
									"end": 1395,
									"name": "PUSH",
									"source": 8,
									"value": "0"
								},
								{
									"begin": 424,
									"end": 1395,
									"name": "MSTORE",
									"source": 8
								},
								{
									"begin": 424,
									"end": 1395,
									"name": "PUSH",
									"source": 8,
									"value": "0"
								},
								{
									"begin": 424,
									"end": 1395,
									"name": "PUSH",
									"source": 8,
									"value": "4"
								},
								{
									"begin": 424,
									"end": 1395,
									"name": "MSTORE",
									"source": 8
								},
								{
									"begin": 424,
									"end": 1395,
									"name": "PUSH",
									"source": 8,
									"value": "24"
								},
								{
									"begin": 424,
									"end": 1395,
									"name": "PUSH",
									"source": 8,
									"value": "0"
								},
								{
									"begin": 424,
									"end": 1395,
									"name": "REVERT",
									"source": 8
								},
								{
									"begin": 424,
									"end": 1395,
									"name": "tag",
									"source": 8,
									"value": "1"
								},
								{
									"begin": 424,
									"end": 1395,
									"name": "JUMPDEST",
									"source": 8
								},
								{
									"begin": 424,
									"end": 1395,
									"name": "ADDRESS",
									"source": 8
								},
								{
									"begin": 424,
									"end": 1395,
									"name": "PUSH",
									"source": 8,
									"value": "0"
								},
								{
									"begin": 424,
									"end": 1395,
									"name": "MSTORE",
									"source": 8
								},
								{
									"begin": 424,
									"end": 1395,
									"name": "PUSH",
									"source": 8,
									"value": "73"
								},
								{
									"begin": 424,
									"end": 1395,
									"name": "DUP2",
									"source": 8
								},
								{
									"begin": 424,
									"end": 1395,
									"name": "MSTORE8",
									"source": 8
								},
								{
									"begin": 424,
									"end": 1395,
									"name": "DUP3",
									"source": 8
								},
								{
									"begin": 424,
									"end": 1395,
									"name": "DUP2",
									"source": 8
								},
								{
									"begin": 424,
									"end": 1395,
									"name": "RETURN",
									"source": 8
								}
							],
							".data": {
								"0": {
									".auxdata": "a26469706673582212201c5453ff7a3509235b3182f9c0009b2c073ca0c4eda2827e18d4f66f2957448664736f6c63430008150033",
									".code": [
										{
											"begin": 424,
											"end": 1395,
											"name": "PUSHDEPLOYADDRESS",
											"source": 8
										},
										{
											"begin": 424,
											"end": 1395,
											"name": "ADDRESS",
											"source": 8
										},
										{
											"begin": 424,
											"end": 1395,
											"name": "EQ",
											"source": 8
										},
										{
											"begin": 424,
											"end": 1395,
											"name": "PUSH",
											"source": 8,
											"value": "80"
										},
										{
											"begin": 424,
											"end": 1395,
											"name": "PUSH",
											"source": 8,
											"value": "40"
										},
										{
											"begin": 424,
											"end": 1395,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": 424,
											"end": 1395,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 424,
											"end": 1395,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 424,
											"end": 1395,
											"name": "REVERT",
											"source": 8
										}
									]
								}
							},
							"sourceList": [
								"@openzeppelin/contracts/access/Ownable.sol",
								"@openzeppelin/contracts/security/ReentrancyGuard.sol",
								"@openzeppelin/contracts/token/ERC721/ERC721.sol",
								"@openzeppelin/contracts/token/ERC721/IERC721.sol",
								"@openzeppelin/contracts/token/ERC721/IERC721Receiver.sol",
								"@openzeppelin/contracts/token/ERC721/extensions/IERC721Metadata.sol",
								"@openzeppelin/contracts/utils/Address.sol",
								"@openzeppelin/contracts/utils/Context.sol",
								"@openzeppelin/contracts/utils/Counters.sol",
								"@openzeppelin/contracts/utils/Strings.sol",
								"@openzeppelin/contracts/utils/introspection/ERC165.sol",
								"@openzeppelin/contracts/utils/introspection/IERC165.sol",
								"@openzeppelin/contracts/utils/math/Math.sol",
								"contracts/SmashNFT_Marketplace_1.sol",
								"#utility.yul"
							]
						},
						"methodIdentifiers": {}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.21+commit.d9974bed\"},\"language\":\"Solidity\",\"output\":{\"abi\":[],\"devdoc\":{\"author\":\"Matt Condon (@shrugs)\",\"details\":\"Provides counters that can only be incremented, decremented or reset. This can be used e.g. to track the number of elements in a mapping, issuing ERC721 ids, or counting request ids. Include with `using Counters for Counters.Counter;`\",\"kind\":\"dev\",\"methods\":{},\"title\":\"Counters\",\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/utils/Counters.sol\":\"Counters\"},\"evmVersion\":\"shanghai\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/utils/Counters.sol\":{\"keccak256\":\"0xf0018c2440fbe238dd3a8732fa8e17a0f9dce84d31451dc8a32f6d62b349c9f1\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://59e1c62884d55b70f3ae5432b44bb3166ad71ae3acd19c57ab6ddc3c87c325ee\",\"dweb:/ipfs/QmezuXg5GK5oeA4F91EZhozBFekhq5TD966bHPH18cCqhu\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"@openzeppelin/contracts/utils/Strings.sol": {
				"Strings": {
					"abi": [],
					"devdoc": {
						"details": "String operations.",
						"kind": "dev",
						"methods": {},
						"version": 1
					},
					"evm": {
						"assembly": "    /* \"@openzeppelin/contracts/utils/Strings.sol\":188:2253  library Strings {... */\n  dataSize(sub_0)\n  dataOffset(sub_0)\n  0x0b\n  dup3\n  dup3\n  dup3\n  codecopy\n  dup1\n  mload\n  0x00\n  byte\n  0x73\n  eq\n  tag_1\n  jumpi\n  mstore(0x00, shl(0xe0, 0x4e487b71))\n  mstore(0x04, 0x00)\n  revert(0x00, 0x24)\ntag_1:\n  mstore(0x00, address)\n  0x73\n  dup2\n  mstore8\n  dup3\n  dup2\n  return\nstop\n\nsub_0: assembly {\n        /* \"@openzeppelin/contracts/utils/Strings.sol\":188:2253  library Strings {... */\n      eq(address, deployTimeAddress())\n      mstore(0x40, 0x80)\n      0x00\n      dup1\n      revert\n\n    auxdata: 0xa2646970667358221220f058fd8821580e12bf5275d34b9af1a49d50f6ee695ccd2dce005393f03e5bb764736f6c63430008150033\n}\n",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "60556032600b8282823980515f1a607314602657634e487b7160e01b5f525f60045260245ffd5b305f52607381538281f3fe730000000000000000000000000000000000000000301460806040525f80fdfea2646970667358221220f058fd8821580e12bf5275d34b9af1a49d50f6ee695ccd2dce005393f03e5bb764736f6c63430008150033",
							"opcodes": "PUSH1 0x55 PUSH1 0x32 PUSH1 0xB DUP3 DUP3 DUP3 CODECOPY DUP1 MLOAD PUSH0 BYTE PUSH1 0x73 EQ PUSH1 0x26 JUMPI PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH0 MSTORE PUSH0 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH0 REVERT JUMPDEST ADDRESS PUSH0 MSTORE PUSH1 0x73 DUP2 MSTORE8 DUP3 DUP2 RETURN INVALID PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 CREATE PC REVERT DUP9 0x21 PC 0xE SLT 0xBF MSTORE PUSH22 0xD34B9AF1A49D50F6EE695CCD2DCE005393F03E5BB764 PUSH20 0x6F6C634300081500330000000000000000000000 ",
							"sourceMap": "188:2065:9:-:0;;;;;;;;;;;;;;;-1:-1:-1;;;188:2065:9;;;;;;;;;;;;;;;;;"
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "730000000000000000000000000000000000000000301460806040525f80fdfea2646970667358221220f058fd8821580e12bf5275d34b9af1a49d50f6ee695ccd2dce005393f03e5bb764736f6c63430008150033",
							"opcodes": "PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 CREATE PC REVERT DUP9 0x21 PC 0xE SLT 0xBF MSTORE PUSH22 0xD34B9AF1A49D50F6EE695CCD2DCE005393F03E5BB764 PUSH20 0x6F6C634300081500330000000000000000000000 ",
							"sourceMap": "188:2065:9:-:0;;;;;;;;"
						},
						"gasEstimates": {
							"creation": {
								"codeDepositCost": "17000",
								"executionCost": "96",
								"totalCost": "17096"
							},
							"internal": {
								"toHexString(address)": "infinite",
								"toHexString(uint256)": "infinite",
								"toHexString(uint256,uint256)": "infinite",
								"toString(uint256)": "infinite"
							}
						},
						"legacyAssembly": {
							".code": [
								{
									"begin": 188,
									"end": 2253,
									"name": "PUSH #[$]",
									"source": 9,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 188,
									"end": 2253,
									"name": "PUSH [$]",
									"source": 9,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 188,
									"end": 2253,
									"name": "PUSH",
									"source": 9,
									"value": "B"
								},
								{
									"begin": 188,
									"end": 2253,
									"name": "DUP3",
									"source": 9
								},
								{
									"begin": 188,
									"end": 2253,
									"name": "DUP3",
									"source": 9
								},
								{
									"begin": 188,
									"end": 2253,
									"name": "DUP3",
									"source": 9
								},
								{
									"begin": 188,
									"end": 2253,
									"name": "CODECOPY",
									"source": 9
								},
								{
									"begin": 188,
									"end": 2253,
									"name": "DUP1",
									"source": 9
								},
								{
									"begin": 188,
									"end": 2253,
									"name": "MLOAD",
									"source": 9
								},
								{
									"begin": 188,
									"end": 2253,
									"name": "PUSH",
									"source": 9,
									"value": "0"
								},
								{
									"begin": 188,
									"end": 2253,
									"name": "BYTE",
									"source": 9
								},
								{
									"begin": 188,
									"end": 2253,
									"name": "PUSH",
									"source": 9,
									"value": "73"
								},
								{
									"begin": 188,
									"end": 2253,
									"name": "EQ",
									"source": 9
								},
								{
									"begin": 188,
									"end": 2253,
									"name": "PUSH [tag]",
									"source": 9,
									"value": "1"
								},
								{
									"begin": 188,
									"end": 2253,
									"name": "JUMPI",
									"source": 9
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "4E487B71"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "E0"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SHL",
									"source": -1
								},
								{
									"begin": 188,
									"end": 2253,
									"name": "PUSH",
									"source": 9,
									"value": "0"
								},
								{
									"begin": 188,
									"end": 2253,
									"name": "MSTORE",
									"source": 9
								},
								{
									"begin": 188,
									"end": 2253,
									"name": "PUSH",
									"source": 9,
									"value": "0"
								},
								{
									"begin": 188,
									"end": 2253,
									"name": "PUSH",
									"source": 9,
									"value": "4"
								},
								{
									"begin": 188,
									"end": 2253,
									"name": "MSTORE",
									"source": 9
								},
								{
									"begin": 188,
									"end": 2253,
									"name": "PUSH",
									"source": 9,
									"value": "24"
								},
								{
									"begin": 188,
									"end": 2253,
									"name": "PUSH",
									"source": 9,
									"value": "0"
								},
								{
									"begin": 188,
									"end": 2253,
									"name": "REVERT",
									"source": 9
								},
								{
									"begin": 188,
									"end": 2253,
									"name": "tag",
									"source": 9,
									"value": "1"
								},
								{
									"begin": 188,
									"end": 2253,
									"name": "JUMPDEST",
									"source": 9
								},
								{
									"begin": 188,
									"end": 2253,
									"name": "ADDRESS",
									"source": 9
								},
								{
									"begin": 188,
									"end": 2253,
									"name": "PUSH",
									"source": 9,
									"value": "0"
								},
								{
									"begin": 188,
									"end": 2253,
									"name": "MSTORE",
									"source": 9
								},
								{
									"begin": 188,
									"end": 2253,
									"name": "PUSH",
									"source": 9,
									"value": "73"
								},
								{
									"begin": 188,
									"end": 2253,
									"name": "DUP2",
									"source": 9
								},
								{
									"begin": 188,
									"end": 2253,
									"name": "MSTORE8",
									"source": 9
								},
								{
									"begin": 188,
									"end": 2253,
									"name": "DUP3",
									"source": 9
								},
								{
									"begin": 188,
									"end": 2253,
									"name": "DUP2",
									"source": 9
								},
								{
									"begin": 188,
									"end": 2253,
									"name": "RETURN",
									"source": 9
								}
							],
							".data": {
								"0": {
									".auxdata": "a2646970667358221220f058fd8821580e12bf5275d34b9af1a49d50f6ee695ccd2dce005393f03e5bb764736f6c63430008150033",
									".code": [
										{
											"begin": 188,
											"end": 2253,
											"name": "PUSHDEPLOYADDRESS",
											"source": 9
										},
										{
											"begin": 188,
											"end": 2253,
											"name": "ADDRESS",
											"source": 9
										},
										{
											"begin": 188,
											"end": 2253,
											"name": "EQ",
											"source": 9
										},
										{
											"begin": 188,
											"end": 2253,
											"name": "PUSH",
											"source": 9,
											"value": "80"
										},
										{
											"begin": 188,
											"end": 2253,
											"name": "PUSH",
											"source": 9,
											"value": "40"
										},
										{
											"begin": 188,
											"end": 2253,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 188,
											"end": 2253,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 188,
											"end": 2253,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 188,
											"end": 2253,
											"name": "REVERT",
											"source": 9
										}
									]
								}
							},
							"sourceList": [
								"@openzeppelin/contracts/access/Ownable.sol",
								"@openzeppelin/contracts/security/ReentrancyGuard.sol",
								"@openzeppelin/contracts/token/ERC721/ERC721.sol",
								"@openzeppelin/contracts/token/ERC721/IERC721.sol",
								"@openzeppelin/contracts/token/ERC721/IERC721Receiver.sol",
								"@openzeppelin/contracts/token/ERC721/extensions/IERC721Metadata.sol",
								"@openzeppelin/contracts/utils/Address.sol",
								"@openzeppelin/contracts/utils/Context.sol",
								"@openzeppelin/contracts/utils/Counters.sol",
								"@openzeppelin/contracts/utils/Strings.sol",
								"@openzeppelin/contracts/utils/introspection/ERC165.sol",
								"@openzeppelin/contracts/utils/introspection/IERC165.sol",
								"@openzeppelin/contracts/utils/math/Math.sol",
								"contracts/SmashNFT_Marketplace_1.sol",
								"#utility.yul"
							]
						},
						"methodIdentifiers": {}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.21+commit.d9974bed\"},\"language\":\"Solidity\",\"output\":{\"abi\":[],\"devdoc\":{\"details\":\"String operations.\",\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/utils/Strings.sol\":\"Strings\"},\"evmVersion\":\"shanghai\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/utils/Strings.sol\":{\"keccak256\":\"0xa4d1d62251f8574deb032a35fc948386a9b4de74b812d4f545a1ac120486b48a\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://8c969013129ba9e651a20735ef659fef6d8a1139ea3607bd4b26ddea2d645634\",\"dweb:/ipfs/QmVhVa6LGuzAcB8qgDtVHRkucn4ihj5UZr8xBLcJkP6ucb\"]},\"@openzeppelin/contracts/utils/math/Math.sol\":{\"keccak256\":\"0xa1e8e83cd0087785df04ac79fb395d9f3684caeaf973d9e2c71caef723a3a5d6\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://33bbf48cc069be677705037ba7520c22b1b622c23b33e1a71495f2d36549d40b\",\"dweb:/ipfs/Qmct36zWXv3j7LZB83uwbg7TXwnZSN1fqHNDZ93GG98bGz\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"@openzeppelin/contracts/utils/introspection/ERC165.sol": {
				"ERC165": {
					"abi": [
						{
							"inputs": [
								{
									"internalType": "bytes4",
									"name": "interfaceId",
									"type": "bytes4"
								}
							],
							"name": "supportsInterface",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "view",
							"type": "function"
						}
					],
					"devdoc": {
						"details": "Implementation of the {IERC165} interface. Contracts that want to implement ERC165 should inherit from this contract and override {supportsInterface} to check for the additional interface id that will be supported. For example: ```solidity function supportsInterface(bytes4 interfaceId) public view virtual override returns (bool) {     return interfaceId == type(MyInterface).interfaceId || super.supportsInterface(interfaceId); } ``` Alternatively, {ERC165Storage} provides an easier to use but more expensive implementation.",
						"kind": "dev",
						"methods": {
							"supportsInterface(bytes4)": {
								"details": "See {IERC165-supportsInterface}."
							}
						},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {
							"supportsInterface(bytes4)": "01ffc9a7"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.21+commit.d9974bed\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"bytes4\",\"name\":\"interfaceId\",\"type\":\"bytes4\"}],\"name\":\"supportsInterface\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"Implementation of the {IERC165} interface. Contracts that want to implement ERC165 should inherit from this contract and override {supportsInterface} to check for the additional interface id that will be supported. For example: ```solidity function supportsInterface(bytes4 interfaceId) public view virtual override returns (bool) {     return interfaceId == type(MyInterface).interfaceId || super.supportsInterface(interfaceId); } ``` Alternatively, {ERC165Storage} provides an easier to use but more expensive implementation.\",\"kind\":\"dev\",\"methods\":{\"supportsInterface(bytes4)\":{\"details\":\"See {IERC165-supportsInterface}.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/utils/introspection/ERC165.sol\":\"ERC165\"},\"evmVersion\":\"shanghai\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/utils/introspection/ERC165.sol\":{\"keccak256\":\"0xd10975de010d89fd1c78dc5e8a9a7e7f496198085c151648f20cba166b32582b\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://fb0048dee081f6fffa5f74afc3fb328483c2a30504e94a0ddd2a5114d731ec4d\",\"dweb:/ipfs/QmZptt1nmYoA5SgjwnSgWqgUSDgm4q52Yos3xhnMv3MV43\"]},\"@openzeppelin/contracts/utils/introspection/IERC165.sol\":{\"keccak256\":\"0x447a5f3ddc18419d41ff92b3773fb86471b1db25773e07f877f548918a185bf1\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://be161e54f24e5c6fae81a12db1a8ae87bc5ae1b0ddc805d82a1440a68455088f\",\"dweb:/ipfs/QmP7C3CHdY9urF4dEMb9wmsp1wMxHF6nhA2yQE5SKiPAdy\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"@openzeppelin/contracts/utils/introspection/IERC165.sol": {
				"IERC165": {
					"abi": [
						{
							"inputs": [
								{
									"internalType": "bytes4",
									"name": "interfaceId",
									"type": "bytes4"
								}
							],
							"name": "supportsInterface",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "view",
							"type": "function"
						}
					],
					"devdoc": {
						"details": "Interface of the ERC165 standard, as defined in the https://eips.ethereum.org/EIPS/eip-165[EIP]. Implementers can declare support of contract interfaces, which can then be queried by others ({ERC165Checker}). For an implementation, see {ERC165}.",
						"kind": "dev",
						"methods": {
							"supportsInterface(bytes4)": {
								"details": "Returns true if this contract implements the interface defined by `interfaceId`. See the corresponding https://eips.ethereum.org/EIPS/eip-165#how-interfaces-are-identified[EIP section] to learn more about how these ids are created. This function call must use less than 30 000 gas."
							}
						},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {
							"supportsInterface(bytes4)": "01ffc9a7"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.21+commit.d9974bed\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"bytes4\",\"name\":\"interfaceId\",\"type\":\"bytes4\"}],\"name\":\"supportsInterface\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"Interface of the ERC165 standard, as defined in the https://eips.ethereum.org/EIPS/eip-165[EIP]. Implementers can declare support of contract interfaces, which can then be queried by others ({ERC165Checker}). For an implementation, see {ERC165}.\",\"kind\":\"dev\",\"methods\":{\"supportsInterface(bytes4)\":{\"details\":\"Returns true if this contract implements the interface defined by `interfaceId`. See the corresponding https://eips.ethereum.org/EIPS/eip-165#how-interfaces-are-identified[EIP section] to learn more about how these ids are created. This function call must use less than 30 000 gas.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/utils/introspection/IERC165.sol\":\"IERC165\"},\"evmVersion\":\"shanghai\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/utils/introspection/IERC165.sol\":{\"keccak256\":\"0x447a5f3ddc18419d41ff92b3773fb86471b1db25773e07f877f548918a185bf1\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://be161e54f24e5c6fae81a12db1a8ae87bc5ae1b0ddc805d82a1440a68455088f\",\"dweb:/ipfs/QmP7C3CHdY9urF4dEMb9wmsp1wMxHF6nhA2yQE5SKiPAdy\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"@openzeppelin/contracts/utils/math/Math.sol": {
				"Math": {
					"abi": [],
					"devdoc": {
						"details": "Standard math utilities missing in the Solidity language.",
						"kind": "dev",
						"methods": {},
						"version": 1
					},
					"evm": {
						"assembly": "    /* \"@openzeppelin/contracts/utils/math/Math.sol\":202:12504  library Math {... */\n  dataSize(sub_0)\n  dataOffset(sub_0)\n  0x0b\n  dup3\n  dup3\n  dup3\n  codecopy\n  dup1\n  mload\n  0x00\n  byte\n  0x73\n  eq\n  tag_1\n  jumpi\n  mstore(0x00, shl(0xe0, 0x4e487b71))\n  mstore(0x04, 0x00)\n  revert(0x00, 0x24)\ntag_1:\n  mstore(0x00, address)\n  0x73\n  dup2\n  mstore8\n  dup3\n  dup2\n  return\nstop\n\nsub_0: assembly {\n        /* \"@openzeppelin/contracts/utils/math/Math.sol\":202:12504  library Math {... */\n      eq(address, deployTimeAddress())\n      mstore(0x40, 0x80)\n      0x00\n      dup1\n      revert\n\n    auxdata: 0xa2646970667358221220e14816d127c31d579455e9c75e810c366324b185c9326bab601de8d11a9a48eb64736f6c63430008150033\n}\n",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "60556032600b8282823980515f1a607314602657634e487b7160e01b5f525f60045260245ffd5b305f52607381538281f3fe730000000000000000000000000000000000000000301460806040525f80fdfea2646970667358221220e14816d127c31d579455e9c75e810c366324b185c9326bab601de8d11a9a48eb64736f6c63430008150033",
							"opcodes": "PUSH1 0x55 PUSH1 0x32 PUSH1 0xB DUP3 DUP3 DUP3 CODECOPY DUP1 MLOAD PUSH0 BYTE PUSH1 0x73 EQ PUSH1 0x26 JUMPI PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH0 MSTORE PUSH0 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH0 REVERT JUMPDEST ADDRESS PUSH0 MSTORE PUSH1 0x73 DUP2 MSTORE8 DUP3 DUP2 RETURN INVALID PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 0xE1 BASEFEE AND 0xD1 0x27 0xC3 SAR JUMPI SWAP5 SSTORE 0xE9 0xC7 0x5E DUP2 0xC CALLDATASIZE PUSH4 0x24B185C9 ORIGIN PUSH12 0xAB601DE8D11A9A48EB64736F PUSH13 0x63430008150033000000000000 ",
							"sourceMap": "202:12302:12:-:0;;;;;;;;;;;;;;;-1:-1:-1;;;202:12302:12;;;;;;;;;;;;;;;;;"
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "730000000000000000000000000000000000000000301460806040525f80fdfea2646970667358221220e14816d127c31d579455e9c75e810c366324b185c9326bab601de8d11a9a48eb64736f6c63430008150033",
							"opcodes": "PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 0xE1 BASEFEE AND 0xD1 0x27 0xC3 SAR JUMPI SWAP5 SSTORE 0xE9 0xC7 0x5E DUP2 0xC CALLDATASIZE PUSH4 0x24B185C9 ORIGIN PUSH12 0xAB601DE8D11A9A48EB64736F PUSH13 0x63430008150033000000000000 ",
							"sourceMap": "202:12302:12:-:0;;;;;;;;"
						},
						"gasEstimates": {
							"creation": {
								"codeDepositCost": "17000",
								"executionCost": "96",
								"totalCost": "17096"
							},
							"internal": {
								"average(uint256,uint256)": "infinite",
								"ceilDiv(uint256,uint256)": "infinite",
								"log10(uint256)": "infinite",
								"log10(uint256,enum Math.Rounding)": "infinite",
								"log2(uint256)": "infinite",
								"log2(uint256,enum Math.Rounding)": "infinite",
								"log256(uint256)": "infinite",
								"log256(uint256,enum Math.Rounding)": "infinite",
								"max(uint256,uint256)": "infinite",
								"min(uint256,uint256)": "infinite",
								"mulDiv(uint256,uint256,uint256)": "infinite",
								"mulDiv(uint256,uint256,uint256,enum Math.Rounding)": "infinite",
								"sqrt(uint256)": "infinite",
								"sqrt(uint256,enum Math.Rounding)": "infinite"
							}
						},
						"legacyAssembly": {
							".code": [
								{
									"begin": 202,
									"end": 12504,
									"name": "PUSH #[$]",
									"source": 12,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 202,
									"end": 12504,
									"name": "PUSH [$]",
									"source": 12,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 202,
									"end": 12504,
									"name": "PUSH",
									"source": 12,
									"value": "B"
								},
								{
									"begin": 202,
									"end": 12504,
									"name": "DUP3",
									"source": 12
								},
								{
									"begin": 202,
									"end": 12504,
									"name": "DUP3",
									"source": 12
								},
								{
									"begin": 202,
									"end": 12504,
									"name": "DUP3",
									"source": 12
								},
								{
									"begin": 202,
									"end": 12504,
									"name": "CODECOPY",
									"source": 12
								},
								{
									"begin": 202,
									"end": 12504,
									"name": "DUP1",
									"source": 12
								},
								{
									"begin": 202,
									"end": 12504,
									"name": "MLOAD",
									"source": 12
								},
								{
									"begin": 202,
									"end": 12504,
									"name": "PUSH",
									"source": 12,
									"value": "0"
								},
								{
									"begin": 202,
									"end": 12504,
									"name": "BYTE",
									"source": 12
								},
								{
									"begin": 202,
									"end": 12504,
									"name": "PUSH",
									"source": 12,
									"value": "73"
								},
								{
									"begin": 202,
									"end": 12504,
									"name": "EQ",
									"source": 12
								},
								{
									"begin": 202,
									"end": 12504,
									"name": "PUSH [tag]",
									"source": 12,
									"value": "1"
								},
								{
									"begin": 202,
									"end": 12504,
									"name": "JUMPI",
									"source": 12
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "4E487B71"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "E0"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SHL",
									"source": -1
								},
								{
									"begin": 202,
									"end": 12504,
									"name": "PUSH",
									"source": 12,
									"value": "0"
								},
								{
									"begin": 202,
									"end": 12504,
									"name": "MSTORE",
									"source": 12
								},
								{
									"begin": 202,
									"end": 12504,
									"name": "PUSH",
									"source": 12,
									"value": "0"
								},
								{
									"begin": 202,
									"end": 12504,
									"name": "PUSH",
									"source": 12,
									"value": "4"
								},
								{
									"begin": 202,
									"end": 12504,
									"name": "MSTORE",
									"source": 12
								},
								{
									"begin": 202,
									"end": 12504,
									"name": "PUSH",
									"source": 12,
									"value": "24"
								},
								{
									"begin": 202,
									"end": 12504,
									"name": "PUSH",
									"source": 12,
									"value": "0"
								},
								{
									"begin": 202,
									"end": 12504,
									"name": "REVERT",
									"source": 12
								},
								{
									"begin": 202,
									"end": 12504,
									"name": "tag",
									"source": 12,
									"value": "1"
								},
								{
									"begin": 202,
									"end": 12504,
									"name": "JUMPDEST",
									"source": 12
								},
								{
									"begin": 202,
									"end": 12504,
									"name": "ADDRESS",
									"source": 12
								},
								{
									"begin": 202,
									"end": 12504,
									"name": "PUSH",
									"source": 12,
									"value": "0"
								},
								{
									"begin": 202,
									"end": 12504,
									"name": "MSTORE",
									"source": 12
								},
								{
									"begin": 202,
									"end": 12504,
									"name": "PUSH",
									"source": 12,
									"value": "73"
								},
								{
									"begin": 202,
									"end": 12504,
									"name": "DUP2",
									"source": 12
								},
								{
									"begin": 202,
									"end": 12504,
									"name": "MSTORE8",
									"source": 12
								},
								{
									"begin": 202,
									"end": 12504,
									"name": "DUP3",
									"source": 12
								},
								{
									"begin": 202,
									"end": 12504,
									"name": "DUP2",
									"source": 12
								},
								{
									"begin": 202,
									"end": 12504,
									"name": "RETURN",
									"source": 12
								}
							],
							".data": {
								"0": {
									".auxdata": "a2646970667358221220e14816d127c31d579455e9c75e810c366324b185c9326bab601de8d11a9a48eb64736f6c63430008150033",
									".code": [
										{
											"begin": 202,
											"end": 12504,
											"name": "PUSHDEPLOYADDRESS",
											"source": 12
										},
										{
											"begin": 202,
											"end": 12504,
											"name": "ADDRESS",
											"source": 12
										},
										{
											"begin": 202,
											"end": 12504,
											"name": "EQ",
											"source": 12
										},
										{
											"begin": 202,
											"end": 12504,
											"name": "PUSH",
											"source": 12,
											"value": "80"
										},
										{
											"begin": 202,
											"end": 12504,
											"name": "PUSH",
											"source": 12,
											"value": "40"
										},
										{
											"begin": 202,
											"end": 12504,
											"name": "MSTORE",
											"source": 12
										},
										{
											"begin": 202,
											"end": 12504,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 202,
											"end": 12504,
											"name": "DUP1",
											"source": 12
										},
										{
											"begin": 202,
											"end": 12504,
											"name": "REVERT",
											"source": 12
										}
									]
								}
							},
							"sourceList": [
								"@openzeppelin/contracts/access/Ownable.sol",
								"@openzeppelin/contracts/security/ReentrancyGuard.sol",
								"@openzeppelin/contracts/token/ERC721/ERC721.sol",
								"@openzeppelin/contracts/token/ERC721/IERC721.sol",
								"@openzeppelin/contracts/token/ERC721/IERC721Receiver.sol",
								"@openzeppelin/contracts/token/ERC721/extensions/IERC721Metadata.sol",
								"@openzeppelin/contracts/utils/Address.sol",
								"@openzeppelin/contracts/utils/Context.sol",
								"@openzeppelin/contracts/utils/Counters.sol",
								"@openzeppelin/contracts/utils/Strings.sol",
								"@openzeppelin/contracts/utils/introspection/ERC165.sol",
								"@openzeppelin/contracts/utils/introspection/IERC165.sol",
								"@openzeppelin/contracts/utils/math/Math.sol",
								"contracts/SmashNFT_Marketplace_1.sol",
								"#utility.yul"
							]
						},
						"methodIdentifiers": {}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.21+commit.d9974bed\"},\"language\":\"Solidity\",\"output\":{\"abi\":[],\"devdoc\":{\"details\":\"Standard math utilities missing in the Solidity language.\",\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/utils/math/Math.sol\":\"Math\"},\"evmVersion\":\"shanghai\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/utils/math/Math.sol\":{\"keccak256\":\"0xa1e8e83cd0087785df04ac79fb395d9f3684caeaf973d9e2c71caef723a3a5d6\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://33bbf48cc069be677705037ba7520c22b1b622c23b33e1a71495f2d36549d40b\",\"dweb:/ipfs/Qmct36zWXv3j7LZB83uwbg7TXwnZSN1fqHNDZ93GG98bGz\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"contracts/SmashNFT_Marketplace_1.sol": {
				"SmashNFT_Marketplace": {
					"abi": [
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "contractAddr",
									"type": "address"
								}
							],
							"stateMutability": "nonpayable",
							"type": "constructor"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": false,
									"internalType": "address",
									"name": "nftContract",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								},
								{
									"indexed": false,
									"internalType": "address",
									"name": "seller",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "price",
									"type": "uint256"
								}
							],
							"name": "NFTListed",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": false,
									"internalType": "address",
									"name": "nftContract",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								},
								{
									"indexed": false,
									"internalType": "address",
									"name": "seller",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "price",
									"type": "uint256"
								}
							],
							"name": "NFTSold",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "previousOwner",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "newOwner",
									"type": "address"
								}
							],
							"name": "OwnershipTransferred",
							"type": "event"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "_tokenId",
									"type": "uint256"
								}
							],
							"name": "CancelOffer",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "_price",
									"type": "uint256"
								}
							],
							"name": "ClaculatePrice",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "pure",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"name": "FirstOwner",
							"outputs": [
								{
									"internalType": "address",
									"name": "",
									"type": "address"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "GetListingFee",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "LISTING_FEE",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "_tokenId",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "_price",
									"type": "uint256"
								}
							],
							"name": "ListNft",
							"outputs": [],
							"stateMutability": "payable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "_tokenId",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "_price",
									"type": "uint256"
								}
							],
							"name": "ReSellNft",
							"outputs": [],
							"stateMutability": "payable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "_ListingFee",
									"type": "uint256"
								}
							],
							"name": "SetListingFee",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "_nftCount",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "_value",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "_nftsSold",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "_value",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "_tokenId",
									"type": "uint256"
								}
							],
							"name": "buyNft",
							"outputs": [],
							"stateMutability": "payable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"name": "check",
							"outputs": [
								{
									"internalType": "bool",
									"name": "_check",
									"type": "bool"
								},
								{
									"internalType": "address",
									"name": "_address",
									"type": "address"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "getListedNfts",
							"outputs": [
								{
									"components": [
										{
											"internalType": "address",
											"name": "nftContract",
											"type": "address"
										},
										{
											"internalType": "uint256",
											"name": "tokenId",
											"type": "uint256"
										},
										{
											"internalType": "address payable",
											"name": "seller",
											"type": "address"
										},
										{
											"internalType": "address payable",
											"name": "owner",
											"type": "address"
										},
										{
											"internalType": "uint256",
											"name": "price",
											"type": "uint256"
										},
										{
											"internalType": "bool",
											"name": "listed",
											"type": "bool"
										}
									],
									"internalType": "struct SmashNFT_Marketplace.NFT[]",
									"name": "",
									"type": "tuple[]"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "getMyListedNfts",
							"outputs": [
								{
									"components": [
										{
											"internalType": "address",
											"name": "nftContract",
											"type": "address"
										},
										{
											"internalType": "uint256",
											"name": "tokenId",
											"type": "uint256"
										},
										{
											"internalType": "address payable",
											"name": "seller",
											"type": "address"
										},
										{
											"internalType": "address payable",
											"name": "owner",
											"type": "address"
										},
										{
											"internalType": "uint256",
											"name": "price",
											"type": "uint256"
										},
										{
											"internalType": "bool",
											"name": "listed",
											"type": "bool"
										}
									],
									"internalType": "struct SmashNFT_Marketplace.NFT[]",
									"name": "",
									"type": "tuple[]"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "getMyNfts",
							"outputs": [
								{
									"components": [
										{
											"internalType": "address",
											"name": "nftContract",
											"type": "address"
										},
										{
											"internalType": "uint256",
											"name": "tokenId",
											"type": "uint256"
										},
										{
											"internalType": "address payable",
											"name": "seller",
											"type": "address"
										},
										{
											"internalType": "address payable",
											"name": "owner",
											"type": "address"
										},
										{
											"internalType": "uint256",
											"name": "price",
											"type": "uint256"
										},
										{
											"internalType": "bool",
											"name": "listed",
											"type": "bool"
										}
									],
									"internalType": "struct SmashNFT_Marketplace.NFT[]",
									"name": "",
									"type": "tuple[]"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "owner",
							"outputs": [
								{
									"internalType": "address",
									"name": "",
									"type": "address"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "renounceOwnership",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "newOwner",
									"type": "address"
								}
							],
							"name": "transferOwnership",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						}
					],
					"devdoc": {
						"kind": "dev",
						"methods": {
							"owner()": {
								"details": "Returns the address of the current owner."
							},
							"renounceOwnership()": {
								"details": "Leaves the contract without owner. It will not be possible to call `onlyOwner` functions anymore. Can only be called by the current owner. NOTE: Renouncing ownership will leave the contract without an owner, thereby removing any functionality that is only available to the owner."
							},
							"transferOwnership(address)": {
								"details": "Transfers ownership of the contract to a new account (`newOwner`). Can only be called by the current owner."
							}
						},
						"title": "MarketPlace",
						"version": 1
					},
					"evm": {
						"assembly": "    /* \"contracts/SmashNFT_Marketplace_1.sol\":317:8087  contract SmashNFT_Marketplace is ReentrancyGuard , Ownable{... */\n  mstore(0x40, 0x80)\n    /* \"contracts/SmashNFT_Marketplace_1.sol\":539:540  0 */\n  0x00\n    /* \"contracts/SmashNFT_Marketplace_1.sol\":510:540  uint256 public LISTING_FEE = 0 */\n  0x04\n  sstore\n    /* \"contracts/SmashNFT_Marketplace_1.sol\":1230:1346  constructor(address contractAddr){... */\n  callvalue\n  dup1\n  iszero\n  tag_1\n  jumpi\n  0x00\n  dup1\n  revert\ntag_1:\n  pop\n  mload(0x40)\n  sub(codesize, bytecodeSize)\n  dup1\n  bytecodeSize\n  dup4\n  codecopy\n  dup2\n  add\n  0x40\n  dup2\n  swap1\n  mstore\n  tag_2\n  swap2\n  tag_3\n  jump\t// in\ntag_2:\n    /* \"@openzeppelin/contracts/security/ReentrancyGuard.sol\":1716:1717  1 */\n  0x01\n    /* \"@openzeppelin/contracts/security/ReentrancyGuard.sol\":1821:1828  _status */\n  0x00\n    /* \"@openzeppelin/contracts/security/ReentrancyGuard.sol\":1821:1843  _status = _NOT_ENTERED */\n  sstore\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":936:968  _transferOwnership(_msgSender()) */\n  tag_9\n    /* \"@openzeppelin/contracts/utils/Context.sol\":719:729  msg.sender */\n  caller\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":936:954  _transferOwnership */\n  tag_12\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":936:968  _transferOwnership(_msgSender()) */\n  jump\t// in\ntag_9:\n    /* \"contracts/SmashNFT_Marketplace_1.sol\":1273:1278  token */\n  0x09\n    /* \"contracts/SmashNFT_Marketplace_1.sol\":1273:1301  token = ERC721(contractAddr) */\n  dup1\n  sload\n  sub(shl(0xa0, 0x01), 0x01)\n  swap1\n  swap3\n  and\n  not(sub(shl(0xa0, 0x01), 0x01))\n  swap3\n  dup4\n  and\n  dup2\n  or\n  swap1\n  swap2\n  sstore\n    /* \"contracts/SmashNFT_Marketplace_1.sol\":1311:1324  MinterAddress */\n  0x0a\n    /* \"contracts/SmashNFT_Marketplace_1.sol\":1311:1339  MinterAddress = contractAddr */\n  dup1\n  sload\n  swap1\n  swap3\n  and\n  or\n  swap1\n  sstore\n    /* \"contracts/SmashNFT_Marketplace_1.sol\":317:8087  contract SmashNFT_Marketplace is ReentrancyGuard , Ownable{... */\n  jump(tag_17)\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":2433:2620  function _transferOwnership(address newOwner) internal virtual {... */\ntag_12:\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":2525:2531  _owner */\n  0x01\n  dup1\n  sload\n  sub(shl(0xa0, 0x01), 0x01)\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":2541:2558  _owner = newOwner */\n  dup4\n  dup2\n  and\n  not(sub(shl(0xa0, 0x01), 0x01))\n  dup4\n  and\n  dup2\n  or\n  swap1\n  swap4\n  sstore\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":2573:2613  OwnershipTransferred(oldOwner, newOwner) */\n  mload(0x40)\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":2525:2531  _owner */\n  swap2\n  and\n  swap2\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":2541:2558  _owner = newOwner */\n  swap1\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":2525:2531  _owner */\n  dup3\n  swap1\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":2573:2613  OwnershipTransferred(oldOwner, newOwner) */\n  0x8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e0\n  swap1\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":2506:2522  address oldOwner */\n  0x00\n  swap1\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":2573:2613  OwnershipTransferred(oldOwner, newOwner) */\n  log3\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":2496:2620  {... */\n  pop\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":2433:2620  function _transferOwnership(address newOwner) internal virtual {... */\n  pop\n  jump\t// out\n    /* \"#utility.yul\":14:304   */\ntag_3:\n    /* \"#utility.yul\":84:90   */\n  0x00\n    /* \"#utility.yul\":137:139   */\n  0x20\n    /* \"#utility.yul\":125:134   */\n  dup3\n    /* \"#utility.yul\":116:123   */\n  dup5\n    /* \"#utility.yul\":112:135   */\n  sub\n    /* \"#utility.yul\":108:140   */\n  slt\n    /* \"#utility.yul\":105:157   */\n  iszero\n  tag_19\n  jumpi\n    /* \"#utility.yul\":153:154   */\n  0x00\n    /* \"#utility.yul\":150:151   */\n  dup1\n    /* \"#utility.yul\":143:155   */\n  revert\n    /* \"#utility.yul\":105:157   */\ntag_19:\n    /* \"#utility.yul\":179:195   */\n  dup2\n  mload\n  sub(shl(0xa0, 0x01), 0x01)\n    /* \"#utility.yul\":224:255   */\n  dup2\n  and\n    /* \"#utility.yul\":214:256   */\n  dup2\n  eq\n    /* \"#utility.yul\":204:274   */\n  tag_20\n  jumpi\n    /* \"#utility.yul\":270:271   */\n  0x00\n    /* \"#utility.yul\":267:268   */\n  dup1\n    /* \"#utility.yul\":260:272   */\n  revert\n    /* \"#utility.yul\":204:274   */\ntag_20:\n    /* \"#utility.yul\":293:298   */\n  swap4\n    /* \"#utility.yul\":14:304   */\n  swap3\n  pop\n  pop\n  pop\n  jump\t// out\ntag_17:\n    /* \"contracts/SmashNFT_Marketplace_1.sol\":317:8087  contract SmashNFT_Marketplace is ReentrancyGuard , Ownable{... */\n  dataSize(sub_0)\n  dup1\n  dataOffset(sub_0)\n  0x00\n  codecopy\n  0x00\n  return\nstop\n\nsub_0: assembly {\n        /* \"contracts/SmashNFT_Marketplace_1.sol\":317:8087  contract SmashNFT_Marketplace is ReentrancyGuard , Ownable{... */\n      mstore(0x40, 0x80)\n      jumpi(tag_1, lt(calldatasize, 0x04))\n      shr(0xe0, calldataload(0x00))\n      dup1\n      0x73a0c166\n      gt\n      tag_20\n      jumpi\n      dup1\n      0xa33f6c68\n      gt\n      tag_21\n      jumpi\n      dup1\n      0xa33f6c68\n      eq\n      tag_15\n      jumpi\n      dup1\n      0xd6cbb202\n      eq\n      tag_16\n      jumpi\n      dup1\n      0xe03de05c\n      eq\n      tag_17\n      jumpi\n      dup1\n      0xe47f018a\n      eq\n      tag_18\n      jumpi\n      dup1\n      0xf2fde38b\n      eq\n      tag_19\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_21:\n      dup1\n      0x73a0c166\n      eq\n      tag_11\n      jumpi\n      dup1\n      0x7ca7349b\n      eq\n      tag_12\n      jumpi\n      dup1\n      0x8d6cb3fb\n      eq\n      tag_13\n      jumpi\n      dup1\n      0x8da5cb5b\n      eq\n      tag_14\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_20:\n      dup1\n      0x31824a49\n      gt\n      tag_22\n      jumpi\n      dup1\n      0x31824a49\n      eq\n      tag_6\n      jumpi\n      dup1\n      0x36958adb\n      eq\n      tag_7\n      jumpi\n      dup1\n      0x4e455dbe\n      eq\n      tag_8\n      jumpi\n      dup1\n      0x5f72f450\n      eq\n      tag_9\n      jumpi\n      dup1\n      0x715018a6\n      eq\n      tag_10\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_22:\n      dup1\n      0x047b07bf\n      eq\n      tag_2\n      jumpi\n      dup1\n      0x1f4cc4db\n      eq\n      tag_3\n      jumpi\n      dup1\n      0x243adbdd\n      eq\n      tag_4\n      jumpi\n      dup1\n      0x2b86ae38\n      eq\n      tag_5\n      jumpi\n    tag_1:\n      0x00\n      dup1\n      revert\n        /* \"contracts/SmashNFT_Marketplace_1.sol\":6567:7176  function getMyNfts() public view returns (NFT[] memory) {... */\n    tag_2:\n      callvalue\n      dup1\n      iszero\n      tag_23\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_23:\n      pop\n      tag_24\n      tag_25\n      jump\t// in\n    tag_24:\n      mload(0x40)\n      tag_26\n      swap2\n      swap1\n      tag_27\n      jump\t// in\n    tag_26:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"contracts/SmashNFT_Marketplace_1.sol\":7402:8085  function getMyListedNfts() public view returns (NFT[] memory) {... */\n    tag_3:\n      callvalue\n      dup1\n      iszero\n      tag_28\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_28:\n      pop\n      tag_24\n      tag_30\n      jump\t// in\n        /* \"contracts/SmashNFT_Marketplace_1.sol\":2417:3183  function buyNft(uint256 _tokenId) public payable nonReentrant {... */\n    tag_4:\n      tag_32\n      tag_33\n      calldatasize\n      0x04\n      tag_34\n      jump\t// in\n    tag_33:\n      tag_35\n      jump\t// in\n    tag_32:\n      stop\n        /* \"contracts/SmashNFT_Marketplace_1.sol\":510:540  uint256 public LISTING_FEE = 0 */\n    tag_5:\n      callvalue\n      dup1\n      iszero\n      tag_36\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_36:\n      pop\n      tag_37\n      sload(0x04)\n      dup2\n      jump\n    tag_37:\n      mload(0x40)\n        /* \"#utility.yul\":1510:1535   */\n      swap1\n      dup2\n      mstore\n        /* \"#utility.yul\":1498:1500   */\n      0x20\n        /* \"#utility.yul\":1483:1501   */\n      add\n        /* \"contracts/SmashNFT_Marketplace_1.sol\":510:540  uint256 public LISTING_FEE = 0 */\n      tag_26\n        /* \"#utility.yul\":1364:1541   */\n      jump\n        /* \"contracts/SmashNFT_Marketplace_1.sol\":427:460  Counters.Counter public _nftsSold */\n    tag_6:\n      callvalue\n      dup1\n      iszero\n      tag_41\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_41:\n      pop\n      sload(0x02)\n      tag_37\n      swap1\n      dup2\n      jump\n        /* \"contracts/SmashNFT_Marketplace_1.sol\":5604:5706  function SetListingFee(uint256 _ListingFee) public onlyOwner{... */\n    tag_7:\n      callvalue\n      dup1\n      iszero\n      tag_45\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_45:\n      pop\n      tag_32\n      tag_47\n      calldatasize\n      0x04\n      tag_34\n      jump\t// in\n    tag_47:\n      tag_48\n      jump\t// in\n        /* \"contracts/SmashNFT_Marketplace_1.sol\":4440:4804  function CancelOffer(uint256 _tokenId) public{... */\n    tag_8:\n      callvalue\n      dup1\n      iszero\n      tag_49\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_49:\n      pop\n      tag_32\n      tag_51\n      calldatasize\n      0x04\n      tag_34\n      jump\t// in\n    tag_51:\n      tag_52\n      jump\t// in\n        /* \"contracts/SmashNFT_Marketplace_1.sol\":638:677  mapping (uint256 => Check) public check */\n    tag_9:\n      callvalue\n      dup1\n      iszero\n      tag_53\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_53:\n      pop\n      tag_54\n      tag_55\n      calldatasize\n      0x04\n      tag_34\n      jump\t// in\n    tag_55:\n      mstore(0x20, 0x07)\n      0x00\n      swap1\n      dup2\n      mstore\n      0x40\n      swap1\n      keccak256\n      sload\n      0xff\n      dup2\n      and\n      swap1\n      0x0100\n      swap1\n      div\n      sub(shl(0xa0, 0x01), 0x01)\n      and\n      dup3\n      jump\n    tag_54:\n      0x40\n      dup1\n      mload\n        /* \"#utility.yul\":1739:1753   */\n      swap3\n      iszero\n        /* \"#utility.yul\":1732:1754   */\n      iszero\n        /* \"#utility.yul\":1714:1755   */\n      dup4\n      mstore\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"#utility.yul\":1791:1823   */\n      swap1\n      swap2\n      and\n        /* \"#utility.yul\":1786:1788   */\n      0x20\n        /* \"#utility.yul\":1771:1789   */\n      dup4\n      add\n        /* \"#utility.yul\":1764:1824   */\n      mstore\n        /* \"#utility.yul\":1687:1705   */\n      add\n        /* \"contracts/SmashNFT_Marketplace_1.sol\":638:677  mapping (uint256 => Check) public check */\n      tag_26\n        /* \"#utility.yul\":1546:1830   */\n      jump\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1831:1932  function renounceOwnership() public virtual onlyOwner {... */\n    tag_10:\n      callvalue\n      dup1\n      iszero\n      tag_59\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_59:\n      pop\n      tag_32\n      tag_61\n      jump\t// in\n        /* \"contracts/SmashNFT_Marketplace_1.sol\":5325:5415  function GetListingFee() public view returns (uint256) {... */\n    tag_11:\n      callvalue\n      dup1\n      iszero\n      tag_62\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_62:\n      pop\n        /* \"contracts/SmashNFT_Marketplace_1.sol\":5397:5408  LISTING_FEE */\n      sload(0x04)\n        /* \"contracts/SmashNFT_Marketplace_1.sol\":5325:5415  function GetListingFee() public view returns (uint256) {... */\n      jump(tag_37)\n        /* \"contracts/SmashNFT_Marketplace_1.sol\":589:632  mapping (uint => address) public FirstOwner */\n    tag_12:\n      callvalue\n      dup1\n      iszero\n      tag_66\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_66:\n      pop\n      tag_67\n      tag_68\n      calldatasize\n      0x04\n      tag_34\n      jump\t// in\n    tag_68:\n      mstore(0x20, 0x06)\n      0x00\n      swap1\n      dup2\n      mstore\n      0x40\n      swap1\n      keccak256\n      sload\n      sub(shl(0xa0, 0x01), 0x01)\n      and\n      dup2\n      jump\n    tag_67:\n      mload(0x40)\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"#utility.yul\":1999:2031   */\n      swap1\n      swap2\n      and\n        /* \"#utility.yul\":1981:2032   */\n      dup2\n      mstore\n        /* \"#utility.yul\":1969:1971   */\n      0x20\n        /* \"#utility.yul\":1954:1972   */\n      add\n        /* \"contracts/SmashNFT_Marketplace_1.sol\":589:632  mapping (uint => address) public FirstOwner */\n      tag_26\n        /* \"#utility.yul\":1835:2038   */\n      jump\n        /* \"contracts/SmashNFT_Marketplace_1.sol\":5892:6371  function getListedNfts() public view returns (NFT[] memory) {... */\n    tag_13:\n      callvalue\n      dup1\n      iszero\n      tag_72\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_72:\n      pop\n      tag_24\n      tag_74\n      jump\t// in\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1201:1286  function owner() public view virtual returns (address) {... */\n    tag_14:\n      callvalue\n      dup1\n      iszero\n      tag_76\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_76:\n      pop\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1273:1279  _owner */\n      and(sub(shl(0xa0, 0x01), 0x01), sload(0x01))\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1201:1286  function owner() public view virtual returns (address) {... */\n      jump(tag_67)\n        /* \"contracts/SmashNFT_Marketplace_1.sol\":5008:5180  function ClaculatePrice(uint _price) public pure returns(uint){... */\n    tag_15:\n      callvalue\n      dup1\n      iszero\n      tag_80\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_80:\n      pop\n      tag_37\n      tag_82\n      calldatasize\n      0x04\n      tag_34\n      jump\t// in\n    tag_82:\n      tag_83\n      jump\t// in\n        /* \"contracts/SmashNFT_Marketplace_1.sol\":466:499  Counters.Counter public _nftCount */\n    tag_16:\n      callvalue\n      dup1\n      iszero\n      tag_85\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_85:\n      pop\n      sload(0x03)\n      tag_37\n      swap1\n      dup2\n      jump\n        /* \"contracts/SmashNFT_Marketplace_1.sol\":1572:2224  function ListNft(uint256 _tokenId, uint256 _price) public payable nonReentrant {... */\n    tag_17:\n      tag_32\n      tag_90\n      calldatasize\n      0x04\n      tag_91\n      jump\t// in\n    tag_90:\n      tag_92\n      jump\t// in\n        /* \"contracts/SmashNFT_Marketplace_1.sol\":3430:4270  function ReSellNft(uint256 _tokenId, uint256 _price) public payable nonReentrant {... */\n    tag_18:\n      tag_32\n      tag_94\n      calldatasize\n      0x04\n      tag_91\n      jump\t// in\n    tag_94:\n      tag_95\n      jump\t// in\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2081:2279  function transferOwnership(address newOwner) public virtual onlyOwner {... */\n    tag_19:\n      callvalue\n      dup1\n      iszero\n      tag_96\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_96:\n      pop\n      tag_32\n      tag_98\n      calldatasize\n      0x04\n      tag_99\n      jump\t// in\n    tag_98:\n      tag_100\n      jump\t// in\n        /* \"contracts/SmashNFT_Marketplace_1.sol\":6567:7176  function getMyNfts() public view returns (NFT[] memory) {... */\n    tag_25:\n        /* \"contracts/SmashNFT_Marketplace_1.sol\":6609:6621  NFT[] memory */\n      0x60\n        /* \"contracts/SmashNFT_Marketplace_1.sol\":6633:6646  uint nftCount */\n      0x00\n        /* \"contracts/SmashNFT_Marketplace_1.sol\":6649:6668  _nftCount.current() */\n      tag_102\n        /* \"contracts/SmashNFT_Marketplace_1.sol\":6649:6658  _nftCount */\n      0x03\n        /* \"@openzeppelin/contracts/utils/Counters.sol\":918:932  counter._value */\n      sload\n      swap1\n        /* \"@openzeppelin/contracts/utils/Counters.sol\":827:939  function current(Counter storage counter) internal view returns (uint256) {... */\n      jump\n        /* \"contracts/SmashNFT_Marketplace_1.sol\":6649:6668  _nftCount.current() */\n    tag_102:\n        /* \"contracts/SmashNFT_Marketplace_1.sol\":6633:6668  uint nftCount = _nftCount.current() */\n      swap1\n      pop\n        /* \"contracts/SmashNFT_Marketplace_1.sol\":6678:6693  uint myNftCount */\n      0x00\n        /* \"contracts/SmashNFT_Marketplace_1.sol\":6712:6718  uint i */\n      dup1\n        /* \"contracts/SmashNFT_Marketplace_1.sol\":6707:6853  for (uint i = 0; i < nftCount; i++) {... */\n    tag_104:\n        /* \"contracts/SmashNFT_Marketplace_1.sol\":6728:6736  nftCount */\n      dup3\n        /* \"contracts/SmashNFT_Marketplace_1.sol\":6724:6725  i */\n      dup2\n        /* \"contracts/SmashNFT_Marketplace_1.sol\":6724:6736  i < nftCount */\n      lt\n        /* \"contracts/SmashNFT_Marketplace_1.sol\":6707:6853  for (uint i = 0; i < nftCount; i++) {... */\n      iszero\n      tag_105\n      jumpi\n        /* \"contracts/SmashNFT_Marketplace_1.sol\":6786:6796  msg.sender */\n      caller\n        /* \"contracts/SmashNFT_Marketplace_1.sol\":6761:6769  _idToNFT */\n      0x08\n        /* \"contracts/SmashNFT_Marketplace_1.sol\":6761:6776  _idToNFT[i + 1] */\n      0x00\n        /* \"contracts/SmashNFT_Marketplace_1.sol\":6770:6775  i + 1 */\n      tag_107\n        /* \"contracts/SmashNFT_Marketplace_1.sol\":6770:6771  i */\n      dup5\n        /* \"contracts/SmashNFT_Marketplace_1.sol\":6774:6775  1 */\n      0x01\n        /* \"contracts/SmashNFT_Marketplace_1.sol\":6770:6775  i + 1 */\n      tag_108\n      jump\t// in\n    tag_107:\n        /* \"contracts/SmashNFT_Marketplace_1.sol\":6761:6776  _idToNFT[i + 1] */\n      dup2\n      mstore\n      0x20\n      dup2\n      add\n      swap2\n      swap1\n      swap2\n      mstore\n      0x40\n      add\n      0x00\n      keccak256\n        /* \"contracts/SmashNFT_Marketplace_1.sol\":6761:6782  _idToNFT[i + 1].owner */\n      0x03\n      add\n      sload\n      sub(shl(0xa0, 0x01), 0x01)\n      and\n        /* \"contracts/SmashNFT_Marketplace_1.sol\":6761:6796  _idToNFT[i + 1].owner == msg.sender */\n      sub\n        /* \"contracts/SmashNFT_Marketplace_1.sol\":6757:6843  if (_idToNFT[i + 1].owner == msg.sender) {... */\n      tag_109\n      jumpi\n        /* \"contracts/SmashNFT_Marketplace_1.sol\":6816:6828  myNftCount++ */\n      dup2\n      tag_110\n      dup2\n      tag_111\n      jump\t// in\n    tag_110:\n      swap3\n      pop\n      pop\n        /* \"contracts/SmashNFT_Marketplace_1.sol\":6757:6843  if (_idToNFT[i + 1].owner == msg.sender) {... */\n    tag_109:\n        /* \"contracts/SmashNFT_Marketplace_1.sol\":6738:6741  i++ */\n      dup1\n      tag_112\n      dup2\n      tag_111\n      jump\t// in\n    tag_112:\n      swap2\n      pop\n      pop\n        /* \"contracts/SmashNFT_Marketplace_1.sol\":6707:6853  for (uint i = 0; i < nftCount; i++) {... */\n      jump(tag_104)\n    tag_105:\n      pop\n        /* \"contracts/SmashNFT_Marketplace_1.sol\":6862:6879  NFT[] memory nfts */\n      0x00\n        /* \"contracts/SmashNFT_Marketplace_1.sol\":6892:6902  myNftCount */\n      dup2\n        /* \"contracts/SmashNFT_Marketplace_1.sol\":6882:6903  new NFT[](myNftCount) */\n      0xffffffffffffffff\n      dup2\n      gt\n      iszero\n      tag_114\n      jumpi\n      tag_114\n      tag_115\n      jump\t// in\n    tag_114:\n      mload(0x40)\n      swap1\n      dup1\n      dup3\n      mstore\n      dup1\n      0x20\n      mul\n      0x20\n      add\n      dup3\n      add\n      0x40\n      mstore\n      dup1\n      iszero\n      tag_116\n      jumpi\n      dup2\n      0x20\n      add\n    tag_117:\n      tag_118\n      tag_119\n      jump\t// in\n    tag_118:\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      0x01\n      swap1\n      sub\n      swap1\n      dup2\n      tag_117\n      jumpi\n      swap1\n      pop\n    tag_116:\n      pop\n        /* \"contracts/SmashNFT_Marketplace_1.sol\":6862:6903  NFT[] memory nfts = new NFT[](myNftCount) */\n      swap1\n      pop\n        /* \"contracts/SmashNFT_Marketplace_1.sol\":6917:6931  uint nftsIndex */\n      0x00\n        /* \"contracts/SmashNFT_Marketplace_1.sol\":6954:6960  uint i */\n      dup1\n        /* \"contracts/SmashNFT_Marketplace_1.sol\":6949:7149  for (uint i = 0; i < nftCount; i++) {... */\n    tag_120:\n        /* \"contracts/SmashNFT_Marketplace_1.sol\":6970:6978  nftCount */\n      dup5\n        /* \"contracts/SmashNFT_Marketplace_1.sol\":6966:6967  i */\n      dup2\n        /* \"contracts/SmashNFT_Marketplace_1.sol\":6966:6978  i < nftCount */\n      lt\n        /* \"contracts/SmashNFT_Marketplace_1.sol\":6949:7149  for (uint i = 0; i < nftCount; i++) {... */\n      iszero\n      tag_121\n      jumpi\n        /* \"contracts/SmashNFT_Marketplace_1.sol\":7032:7042  msg.sender */\n      caller\n        /* \"contracts/SmashNFT_Marketplace_1.sol\":7007:7015  _idToNFT */\n      0x08\n        /* \"contracts/SmashNFT_Marketplace_1.sol\":7007:7022  _idToNFT[i + 1] */\n      0x00\n        /* \"contracts/SmashNFT_Marketplace_1.sol\":7016:7021  i + 1 */\n      tag_123\n        /* \"contracts/SmashNFT_Marketplace_1.sol\":7016:7017  i */\n      dup5\n        /* \"contracts/SmashNFT_Marketplace_1.sol\":7020:7021  1 */\n      0x01\n        /* \"contracts/SmashNFT_Marketplace_1.sol\":7016:7021  i + 1 */\n      tag_108\n      jump\t// in\n    tag_123:\n        /* \"contracts/SmashNFT_Marketplace_1.sol\":7007:7022  _idToNFT[i + 1] */\n      dup2\n      mstore\n      0x20\n      dup2\n      add\n      swap2\n      swap1\n      swap2\n      mstore\n      0x40\n      add\n      0x00\n      keccak256\n        /* \"contracts/SmashNFT_Marketplace_1.sol\":7007:7028  _idToNFT[i + 1].owner */\n      0x03\n      add\n      sload\n      sub(shl(0xa0, 0x01), 0x01)\n      and\n        /* \"contracts/SmashNFT_Marketplace_1.sol\":7007:7042  _idToNFT[i + 1].owner == msg.sender */\n      sub\n        /* \"contracts/SmashNFT_Marketplace_1.sol\":7003:7139  if (_idToNFT[i + 1].owner == msg.sender) {... */\n      tag_124\n      jumpi\n        /* \"contracts/SmashNFT_Marketplace_1.sol\":7080:7088  _idToNFT */\n      0x08\n        /* \"contracts/SmashNFT_Marketplace_1.sol\":7080:7095  _idToNFT[i + 1] */\n      0x00\n        /* \"contracts/SmashNFT_Marketplace_1.sol\":7089:7094  i + 1 */\n      tag_125\n        /* \"contracts/SmashNFT_Marketplace_1.sol\":7089:7090  i */\n      dup4\n        /* \"contracts/SmashNFT_Marketplace_1.sol\":7093:7094  1 */\n      0x01\n        /* \"contracts/SmashNFT_Marketplace_1.sol\":7089:7094  i + 1 */\n      tag_108\n      jump\t// in\n    tag_125:\n        /* \"contracts/SmashNFT_Marketplace_1.sol\":7080:7095  _idToNFT[i + 1] */\n      dup2\n      mstore\n      0x20\n      dup1\n      dup3\n      add\n      swap3\n      swap1\n      swap3\n      mstore\n      0x40\n      swap1\n      dup2\n      add\n      0x00\n      keccak256\n        /* \"contracts/SmashNFT_Marketplace_1.sol\":7062:7095  nfts[nftsIndex] = _idToNFT[i + 1] */\n      dup2\n      mload\n      0xc0\n      dup2\n      add\n      dup4\n      mstore\n      dup2\n      sload\n      sub(shl(0xa0, 0x01), 0x01)\n      swap1\n      dup2\n      and\n      dup3\n      mstore\n      0x01\n      dup4\n      add\n      sload\n      swap5\n      dup3\n      add\n      swap5\n      swap1\n      swap5\n      mstore\n      0x02\n      dup3\n      add\n      sload\n      dup5\n      and\n      swap3\n      dup2\n      add\n      swap3\n      swap1\n      swap3\n      mstore\n      0x03\n      dup2\n      add\n      sload\n      swap1\n      swap3\n      and\n      0x60\n      dup3\n      add\n      mstore\n      0x04\n      dup3\n      add\n      sload\n      0x80\n      dup3\n      add\n      mstore\n      0x05\n      swap1\n      swap2\n      add\n      sload\n      0xff\n      and\n      iszero\n      iszero\n      0xa0\n      dup3\n      add\n      mstore\n        /* \"contracts/SmashNFT_Marketplace_1.sol\":7062:7077  nfts[nftsIndex] */\n      dup4\n      mload\n        /* \"contracts/SmashNFT_Marketplace_1.sol\":7062:7066  nfts */\n      dup5\n      swap1\n        /* \"contracts/SmashNFT_Marketplace_1.sol\":7067:7076  nftsIndex */\n      dup5\n      swap1\n        /* \"contracts/SmashNFT_Marketplace_1.sol\":7062:7077  nfts[nftsIndex] */\n      dup2\n      lt\n      tag_127\n      jumpi\n      tag_127\n      tag_128\n      jump\t// in\n    tag_127:\n      0x20\n      mul\n      0x20\n      add\n      add\n        /* \"contracts/SmashNFT_Marketplace_1.sol\":7062:7095  nfts[nftsIndex] = _idToNFT[i + 1] */\n      dup2\n      swap1\n      mstore\n      pop\n        /* \"contracts/SmashNFT_Marketplace_1.sol\":7113:7124  nftsIndex++ */\n      dup2\n      dup1\n      tag_129\n      swap1\n      tag_111\n      jump\t// in\n    tag_129:\n      swap3\n      pop\n      pop\n        /* \"contracts/SmashNFT_Marketplace_1.sol\":7003:7139  if (_idToNFT[i + 1].owner == msg.sender) {... */\n    tag_124:\n        /* \"contracts/SmashNFT_Marketplace_1.sol\":6980:6983  i++ */\n      dup1\n      tag_130\n      dup2\n      tag_111\n      jump\t// in\n    tag_130:\n      swap2\n      pop\n      pop\n        /* \"contracts/SmashNFT_Marketplace_1.sol\":6949:7149  for (uint i = 0; i < nftCount; i++) {... */\n      jump(tag_120)\n    tag_121:\n      pop\n        /* \"contracts/SmashNFT_Marketplace_1.sol\":7165:7169  nfts */\n      swap1\n      swap5\n        /* \"contracts/SmashNFT_Marketplace_1.sol\":6567:7176  function getMyNfts() public view returns (NFT[] memory) {... */\n      swap4\n      pop\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"contracts/SmashNFT_Marketplace_1.sol\":7402:8085  function getMyListedNfts() public view returns (NFT[] memory) {... */\n    tag_30:\n        /* \"contracts/SmashNFT_Marketplace_1.sol\":7450:7462  NFT[] memory */\n      0x60\n        /* \"contracts/SmashNFT_Marketplace_1.sol\":7474:7487  uint nftCount */\n      0x00\n        /* \"contracts/SmashNFT_Marketplace_1.sol\":7490:7509  _nftCount.current() */\n      tag_132\n        /* \"contracts/SmashNFT_Marketplace_1.sol\":7490:7499  _nftCount */\n      0x03\n        /* \"@openzeppelin/contracts/utils/Counters.sol\":918:932  counter._value */\n      sload\n      swap1\n        /* \"@openzeppelin/contracts/utils/Counters.sol\":827:939  function current(Counter storage counter) internal view returns (uint256) {... */\n      jump\n        /* \"contracts/SmashNFT_Marketplace_1.sol\":7490:7509  _nftCount.current() */\n    tag_132:\n        /* \"contracts/SmashNFT_Marketplace_1.sol\":7474:7509  uint nftCount = _nftCount.current() */\n      swap1\n      pop\n        /* \"contracts/SmashNFT_Marketplace_1.sol\":7519:7540  uint myListedNftCount */\n      0x00\n        /* \"contracts/SmashNFT_Marketplace_1.sol\":7559:7565  uint i */\n      dup1\n        /* \"contracts/SmashNFT_Marketplace_1.sol\":7554:7738  for (uint i = 0; i < nftCount; i++) {... */\n    tag_133:\n        /* \"contracts/SmashNFT_Marketplace_1.sol\":7575:7583  nftCount */\n      dup3\n        /* \"contracts/SmashNFT_Marketplace_1.sol\":7571:7572  i */\n      dup2\n        /* \"contracts/SmashNFT_Marketplace_1.sol\":7571:7583  i < nftCount */\n      lt\n        /* \"contracts/SmashNFT_Marketplace_1.sol\":7554:7738  for (uint i = 0; i < nftCount; i++) {... */\n      iszero\n      tag_134\n      jumpi\n        /* \"contracts/SmashNFT_Marketplace_1.sol\":7635:7645  msg.sender */\n      caller\n        /* \"contracts/SmashNFT_Marketplace_1.sol\":7609:7617  _idToNFT */\n      0x08\n        /* \"contracts/SmashNFT_Marketplace_1.sol\":7609:7624  _idToNFT[i + 1] */\n      0x00\n        /* \"contracts/SmashNFT_Marketplace_1.sol\":7618:7623  i + 1 */\n      tag_136\n        /* \"contracts/SmashNFT_Marketplace_1.sol\":7618:7619  i */\n      dup5\n        /* \"contracts/SmashNFT_Marketplace_1.sol\":7622:7623  1 */\n      0x01\n        /* \"contracts/SmashNFT_Marketplace_1.sol\":7618:7623  i + 1 */\n      tag_108\n      jump\t// in\n    tag_136:\n        /* \"contracts/SmashNFT_Marketplace_1.sol\":7609:7624  _idToNFT[i + 1] */\n      dup2\n      mstore\n      0x20\n      dup2\n      add\n      swap2\n      swap1\n      swap2\n      mstore\n      0x40\n      add\n      0x00\n      keccak256\n        /* \"contracts/SmashNFT_Marketplace_1.sol\":7609:7631  _idToNFT[i + 1].seller */\n      0x02\n      add\n      sload\n      sub(shl(0xa0, 0x01), 0x01)\n      and\n        /* \"contracts/SmashNFT_Marketplace_1.sol\":7609:7645  _idToNFT[i + 1].seller == msg.sender */\n      eq\n        /* \"contracts/SmashNFT_Marketplace_1.sol\":7608:7675  (_idToNFT[i + 1].seller == msg.sender) && (!_idToNFT[i + 1].listed) */\n      dup1\n      iszero\n      tag_137\n      jumpi\n      pop\n        /* \"contracts/SmashNFT_Marketplace_1.sol\":7652:7660  _idToNFT */\n      0x08\n        /* \"contracts/SmashNFT_Marketplace_1.sol\":7652:7667  _idToNFT[i + 1] */\n      0x00\n        /* \"contracts/SmashNFT_Marketplace_1.sol\":7661:7666  i + 1 */\n      tag_138\n        /* \"contracts/SmashNFT_Marketplace_1.sol\":7661:7662  i */\n      dup4\n        /* \"contracts/SmashNFT_Marketplace_1.sol\":7665:7666  1 */\n      0x01\n        /* \"contracts/SmashNFT_Marketplace_1.sol\":7661:7666  i + 1 */\n      tag_108\n      jump\t// in\n    tag_138:\n        /* \"contracts/SmashNFT_Marketplace_1.sol\":7652:7667  _idToNFT[i + 1] */\n      dup2\n      mstore\n      0x20\n      dup2\n      add\n      swap2\n      swap1\n      swap2\n      mstore\n      0x40\n      add\n      0x00\n      keccak256\n        /* \"contracts/SmashNFT_Marketplace_1.sol\":7652:7674  _idToNFT[i + 1].listed */\n      0x05\n      add\n      sload\n      0xff\n      and\n        /* \"contracts/SmashNFT_Marketplace_1.sol\":7651:7674  !_idToNFT[i + 1].listed */\n      iszero\n        /* \"contracts/SmashNFT_Marketplace_1.sol\":7608:7675  (_idToNFT[i + 1].seller == msg.sender) && (!_idToNFT[i + 1].listed) */\n    tag_137:\n        /* \"contracts/SmashNFT_Marketplace_1.sol\":7604:7728  if ((_idToNFT[i + 1].seller == msg.sender) && (!_idToNFT[i + 1].listed)) {... */\n      iszero\n      tag_139\n      jumpi\n        /* \"contracts/SmashNFT_Marketplace_1.sol\":7695:7713  myListedNftCount++ */\n      dup2\n      tag_140\n      dup2\n      tag_111\n      jump\t// in\n    tag_140:\n      swap3\n      pop\n      pop\n        /* \"contracts/SmashNFT_Marketplace_1.sol\":7604:7728  if ((_idToNFT[i + 1].seller == msg.sender) && (!_idToNFT[i + 1].listed)) {... */\n    tag_139:\n        /* \"contracts/SmashNFT_Marketplace_1.sol\":7585:7588  i++ */\n      dup1\n      tag_141\n      dup2\n      tag_111\n      jump\t// in\n    tag_141:\n      swap2\n      pop\n      pop\n        /* \"contracts/SmashNFT_Marketplace_1.sol\":7554:7738  for (uint i = 0; i < nftCount; i++) {... */\n      jump(tag_133)\n    tag_134:\n      pop\n        /* \"contracts/SmashNFT_Marketplace_1.sol\":7747:7764  NFT[] memory nfts */\n      0x00\n        /* \"contracts/SmashNFT_Marketplace_1.sol\":7777:7793  myListedNftCount */\n      dup2\n        /* \"contracts/SmashNFT_Marketplace_1.sol\":7767:7794  new NFT[](myListedNftCount) */\n      0xffffffffffffffff\n      dup2\n      gt\n      iszero\n      tag_143\n      jumpi\n      tag_143\n      tag_115\n      jump\t// in\n    tag_143:\n      mload(0x40)\n      swap1\n      dup1\n      dup3\n      mstore\n      dup1\n      0x20\n      mul\n      0x20\n      add\n      dup3\n      add\n      0x40\n      mstore\n      dup1\n      iszero\n      tag_144\n      jumpi\n      dup2\n      0x20\n      add\n    tag_145:\n      tag_146\n      tag_119\n      jump\t// in\n    tag_146:\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      0x01\n      swap1\n      sub\n      swap1\n      dup2\n      tag_145\n      jumpi\n      swap1\n      pop\n    tag_144:\n      pop\n        /* \"contracts/SmashNFT_Marketplace_1.sol\":7747:7794  NFT[] memory nfts = new NFT[](myListedNftCount) */\n      swap1\n      pop\n        /* \"contracts/SmashNFT_Marketplace_1.sol\":7804:7818  uint nftsIndex */\n      0x00\n        /* \"contracts/SmashNFT_Marketplace_1.sol\":7837:7843  uint i */\n      dup1\n        /* \"contracts/SmashNFT_Marketplace_1.sol\":7832:8058  for (uint i = 0; i < nftCount; i++) {... */\n    tag_147:\n        /* \"contracts/SmashNFT_Marketplace_1.sol\":7853:7861  nftCount */\n      dup5\n        /* \"contracts/SmashNFT_Marketplace_1.sol\":7849:7850  i */\n      dup2\n        /* \"contracts/SmashNFT_Marketplace_1.sol\":7849:7861  i < nftCount */\n      lt\n        /* \"contracts/SmashNFT_Marketplace_1.sol\":7832:8058  for (uint i = 0; i < nftCount; i++) {... */\n      iszero\n      tag_121\n      jumpi\n        /* \"contracts/SmashNFT_Marketplace_1.sol\":7912:7922  msg.sender */\n      caller\n        /* \"contracts/SmashNFT_Marketplace_1.sol\":7886:7894  _idToNFT */\n      0x08\n        /* \"contracts/SmashNFT_Marketplace_1.sol\":7886:7901  _idToNFT[i + 1] */\n      0x00\n        /* \"contracts/SmashNFT_Marketplace_1.sol\":7895:7900  i + 1 */\n      tag_150\n        /* \"contracts/SmashNFT_Marketplace_1.sol\":7895:7896  i */\n      dup5\n        /* \"contracts/SmashNFT_Marketplace_1.sol\":7899:7900  1 */\n      0x01\n        /* \"contracts/SmashNFT_Marketplace_1.sol\":7895:7900  i + 1 */\n      tag_108\n      jump\t// in\n    tag_150:\n        /* \"contracts/SmashNFT_Marketplace_1.sol\":7886:7901  _idToNFT[i + 1] */\n      dup2\n      mstore\n      0x20\n      dup2\n      add\n      swap2\n      swap1\n      swap2\n      mstore\n      0x40\n      add\n      0x00\n      keccak256\n        /* \"contracts/SmashNFT_Marketplace_1.sol\":7886:7908  _idToNFT[i + 1].seller */\n      0x02\n      add\n      sload\n      sub(shl(0xa0, 0x01), 0x01)\n      and\n        /* \"contracts/SmashNFT_Marketplace_1.sol\":7886:7922  _idToNFT[i + 1].seller == msg.sender */\n      eq\n        /* \"contracts/SmashNFT_Marketplace_1.sol\":7886:7951  _idToNFT[i + 1].seller == msg.sender && (!_idToNFT[i + 1].listed) */\n      dup1\n      iszero\n      tag_151\n      jumpi\n      pop\n        /* \"contracts/SmashNFT_Marketplace_1.sol\":7928:7936  _idToNFT */\n      0x08\n        /* \"contracts/SmashNFT_Marketplace_1.sol\":7928:7943  _idToNFT[i + 1] */\n      0x00\n        /* \"contracts/SmashNFT_Marketplace_1.sol\":7937:7942  i + 1 */\n      tag_152\n        /* \"contracts/SmashNFT_Marketplace_1.sol\":7937:7938  i */\n      dup4\n        /* \"contracts/SmashNFT_Marketplace_1.sol\":7941:7942  1 */\n      0x01\n        /* \"contracts/SmashNFT_Marketplace_1.sol\":7937:7942  i + 1 */\n      tag_108\n      jump\t// in\n    tag_152:\n        /* \"contracts/SmashNFT_Marketplace_1.sol\":7928:7943  _idToNFT[i + 1] */\n      dup2\n      mstore\n      0x20\n      dup2\n      add\n      swap2\n      swap1\n      swap2\n      mstore\n      0x40\n      add\n      0x00\n      keccak256\n        /* \"contracts/SmashNFT_Marketplace_1.sol\":7928:7950  _idToNFT[i + 1].listed */\n      0x05\n      add\n      sload\n      0xff\n      and\n        /* \"contracts/SmashNFT_Marketplace_1.sol\":7927:7950  !_idToNFT[i + 1].listed */\n      iszero\n        /* \"contracts/SmashNFT_Marketplace_1.sol\":7886:7951  _idToNFT[i + 1].seller == msg.sender && (!_idToNFT[i + 1].listed) */\n    tag_151:\n        /* \"contracts/SmashNFT_Marketplace_1.sol\":7882:8048  if (_idToNFT[i + 1].seller == msg.sender && (!_idToNFT[i + 1].listed)) {... */\n      iszero\n      tag_153\n      jumpi\n        /* \"contracts/SmashNFT_Marketplace_1.sol\":7989:7997  _idToNFT */\n      0x08\n        /* \"contracts/SmashNFT_Marketplace_1.sol\":7989:8004  _idToNFT[i + 1] */\n      0x00\n        /* \"contracts/SmashNFT_Marketplace_1.sol\":7998:8003  i + 1 */\n      tag_154\n        /* \"contracts/SmashNFT_Marketplace_1.sol\":7998:7999  i */\n      dup4\n        /* \"contracts/SmashNFT_Marketplace_1.sol\":8002:8003  1 */\n      0x01\n        /* \"contracts/SmashNFT_Marketplace_1.sol\":7998:8003  i + 1 */\n      tag_108\n      jump\t// in\n    tag_154:\n        /* \"contracts/SmashNFT_Marketplace_1.sol\":7989:8004  _idToNFT[i + 1] */\n      dup2\n      mstore\n      0x20\n      dup1\n      dup3\n      add\n      swap3\n      swap1\n      swap3\n      mstore\n      0x40\n      swap1\n      dup2\n      add\n      0x00\n      keccak256\n        /* \"contracts/SmashNFT_Marketplace_1.sol\":7971:8004  nfts[nftsIndex] = _idToNFT[i + 1] */\n      dup2\n      mload\n      0xc0\n      dup2\n      add\n      dup4\n      mstore\n      dup2\n      sload\n      sub(shl(0xa0, 0x01), 0x01)\n      swap1\n      dup2\n      and\n      dup3\n      mstore\n      0x01\n      dup4\n      add\n      sload\n      swap5\n      dup3\n      add\n      swap5\n      swap1\n      swap5\n      mstore\n      0x02\n      dup3\n      add\n      sload\n      dup5\n      and\n      swap3\n      dup2\n      add\n      swap3\n      swap1\n      swap3\n      mstore\n      0x03\n      dup2\n      add\n      sload\n      swap1\n      swap3\n      and\n      0x60\n      dup3\n      add\n      mstore\n      0x04\n      dup3\n      add\n      sload\n      0x80\n      dup3\n      add\n      mstore\n      0x05\n      swap1\n      swap2\n      add\n      sload\n      0xff\n      and\n      iszero\n      iszero\n      0xa0\n      dup3\n      add\n      mstore\n        /* \"contracts/SmashNFT_Marketplace_1.sol\":7971:7986  nfts[nftsIndex] */\n      dup4\n      mload\n        /* \"contracts/SmashNFT_Marketplace_1.sol\":7971:7975  nfts */\n      dup5\n      swap1\n        /* \"contracts/SmashNFT_Marketplace_1.sol\":7976:7985  nftsIndex */\n      dup5\n      swap1\n        /* \"contracts/SmashNFT_Marketplace_1.sol\":7971:7986  nfts[nftsIndex] */\n      dup2\n      lt\n      tag_156\n      jumpi\n      tag_156\n      tag_128\n      jump\t// in\n    tag_156:\n      0x20\n      mul\n      0x20\n      add\n      add\n        /* \"contracts/SmashNFT_Marketplace_1.sol\":7971:8004  nfts[nftsIndex] = _idToNFT[i + 1] */\n      dup2\n      swap1\n      mstore\n      pop\n        /* \"contracts/SmashNFT_Marketplace_1.sol\":8022:8033  nftsIndex++ */\n      dup2\n      dup1\n      tag_157\n      swap1\n      tag_111\n      jump\t// in\n    tag_157:\n      swap3\n      pop\n      pop\n        /* \"contracts/SmashNFT_Marketplace_1.sol\":7882:8048  if (_idToNFT[i + 1].seller == msg.sender && (!_idToNFT[i + 1].listed)) {... */\n    tag_153:\n        /* \"contracts/SmashNFT_Marketplace_1.sol\":7863:7866  i++ */\n      dup1\n      tag_158\n      dup2\n      tag_111\n      jump\t// in\n    tag_158:\n      swap2\n      pop\n      pop\n        /* \"contracts/SmashNFT_Marketplace_1.sol\":7832:8058  for (uint i = 0; i < nftCount; i++) {... */\n      jump(tag_147)\n        /* \"contracts/SmashNFT_Marketplace_1.sol\":2417:3183  function buyNft(uint256 _tokenId) public payable nonReentrant {... */\n    tag_35:\n        /* \"@openzeppelin/contracts/security/ReentrancyGuard.sol\":2261:2282  _nonReentrantBefore() */\n      tag_160\n        /* \"@openzeppelin/contracts/security/ReentrancyGuard.sol\":2261:2280  _nonReentrantBefore */\n      tag_161\n        /* \"@openzeppelin/contracts/security/ReentrancyGuard.sol\":2261:2282  _nonReentrantBefore() */\n      jump\t// in\n    tag_160:\n        /* \"contracts/SmashNFT_Marketplace_1.sol\":2489:2504  NFT storage nft */\n      0x00\n        /* \"contracts/SmashNFT_Marketplace_1.sol\":2507:2525  _idToNFT[_tokenId] */\n      dup2\n      dup2\n      mstore\n        /* \"contracts/SmashNFT_Marketplace_1.sol\":2507:2515  _idToNFT */\n      0x08\n        /* \"contracts/SmashNFT_Marketplace_1.sol\":2507:2525  _idToNFT[_tokenId] */\n      0x20\n      mstore\n      0x40\n      swap1\n      keccak256\n        /* \"contracts/SmashNFT_Marketplace_1.sol\":2556:2565  nft.price */\n      0x04\n      dup2\n      add\n      sload\n        /* \"contracts/SmashNFT_Marketplace_1.sol\":2543:2552  msg.value */\n      callvalue\n        /* \"contracts/SmashNFT_Marketplace_1.sol\":2543:2565  msg.value >= nft.price */\n      lt\n      iszero\n        /* \"contracts/SmashNFT_Marketplace_1.sol\":2535:2609  require(msg.value >= nft.price , \"Not enough ether to cover asking price\") */\n      tag_163\n      jumpi\n      mload(0x40)\n      shl(0xe5, 0x461bcd)\n      dup2\n      mstore\n        /* \"#utility.yul\":3455:3457   */\n      0x20\n        /* \"contracts/SmashNFT_Marketplace_1.sol\":2535:2609  require(msg.value >= nft.price , \"Not enough ether to cover asking price\") */\n      0x04\n      dup3\n      add\n        /* \"#utility.yul\":3437:3458   */\n      mstore\n        /* \"#utility.yul\":3494:3496   */\n      0x26\n        /* \"#utility.yul\":3474:3492   */\n      0x24\n      dup3\n      add\n        /* \"#utility.yul\":3467:3497   */\n      mstore\n        /* \"#utility.yul\":3533:3567   */\n      0x4e6f7420656e6f75676820657468657220746f20636f7665722061736b696e67\n        /* \"#utility.yul\":3513:3531   */\n      0x44\n      dup3\n      add\n        /* \"#utility.yul\":3506:3568   */\n      mstore\n      shl(0xd0, 0x207072696365)\n        /* \"#utility.yul\":3584:3602   */\n      0x64\n      dup3\n      add\n        /* \"#utility.yul\":3577:3613   */\n      mstore\n        /* \"#utility.yul\":3630:3649   */\n      0x84\n      add\n        /* \"contracts/SmashNFT_Marketplace_1.sol\":2535:2609  require(msg.value >= nft.price , \"Not enough ether to cover asking price\") */\n    tag_164:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n    tag_163:\n        /* \"contracts/SmashNFT_Marketplace_1.sol\":2627:2645  _idToNFT[_tokenId] */\n      0x00\n      dup3\n      dup2\n      mstore\n        /* \"contracts/SmashNFT_Marketplace_1.sol\":2627:2635  _idToNFT */\n      0x08\n        /* \"contracts/SmashNFT_Marketplace_1.sol\":2627:2645  _idToNFT[_tokenId] */\n      0x20\n      mstore\n      0x40\n      swap1\n      keccak256\n        /* \"contracts/SmashNFT_Marketplace_1.sol\":2627:2652  _idToNFT[_tokenId].seller */\n      0x02\n      add\n      sload\n        /* \"contracts/SmashNFT_Marketplace_1.sol\":2656:2666  msg.sender */\n      caller\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"contracts/SmashNFT_Marketplace_1.sol\":2627:2652  _idToNFT[_tokenId].seller */\n      swap1\n      swap2\n      and\n        /* \"contracts/SmashNFT_Marketplace_1.sol\":2627:2666  _idToNFT[_tokenId].seller != msg.sender */\n      sub\n        /* \"contracts/SmashNFT_Marketplace_1.sol\":2619:2702  require(_idToNFT[_tokenId].seller != msg.sender, \"An offer cannot buy this Seller\") */\n      tag_166\n      jumpi\n      mload(0x40)\n      shl(0xe5, 0x461bcd)\n      dup2\n      mstore\n        /* \"#utility.yul\":3862:3864   */\n      0x20\n        /* \"contracts/SmashNFT_Marketplace_1.sol\":2619:2702  require(_idToNFT[_tokenId].seller != msg.sender, \"An offer cannot buy this Seller\") */\n      0x04\n      dup3\n      add\n        /* \"#utility.yul\":3844:3865   */\n      mstore\n        /* \"#utility.yul\":3901:3903   */\n      0x1f\n        /* \"#utility.yul\":3881:3899   */\n      0x24\n      dup3\n      add\n        /* \"#utility.yul\":3874:3904   */\n      mstore\n        /* \"#utility.yul\":3940:3973   */\n      0x416e206f666665722063616e6e6f742062757920746869732053656c6c657200\n        /* \"#utility.yul\":3920:3938   */\n      0x44\n      dup3\n      add\n        /* \"#utility.yul\":3913:3974   */\n      mstore\n        /* \"#utility.yul\":3991:4009   */\n      0x64\n      add\n        /* \"contracts/SmashNFT_Marketplace_1.sol\":2619:2702  require(_idToNFT[_tokenId].seller != msg.sender, \"An offer cannot buy this Seller\") */\n      tag_164\n        /* \"#utility.yul\":3660:4015   */\n      jump\n        /* \"contracts/SmashNFT_Marketplace_1.sol\":2619:2702  require(_idToNFT[_tokenId].seller != msg.sender, \"An offer cannot buy this Seller\") */\n    tag_166:\n        /* \"contracts/SmashNFT_Marketplace_1.sol\":2712:2733  address payable buyer */\n      0x00\n        /* \"contracts/SmashNFT_Marketplace_1.sol\":2744:2754  msg.sender */\n      caller\n        /* \"contracts/SmashNFT_Marketplace_1.sol\":2712:2755  address payable buyer = payable(msg.sender) */\n      swap1\n      pop\n        /* \"contracts/SmashNFT_Marketplace_1.sol\":2765:2776  uint result */\n      0x00\n        /* \"contracts/SmashNFT_Marketplace_1.sol\":2791:2802  LISTING_FEE */\n      sload(0x04)\n        /* \"contracts/SmashNFT_Marketplace_1.sol\":2779:2782  nft */\n      dup4\n        /* \"contracts/SmashNFT_Marketplace_1.sol\":2779:2788  nft.price */\n      0x04\n      add\n      sload\n        /* \"contracts/SmashNFT_Marketplace_1.sol\":2779:2802  nft.price - LISTING_FEE */\n      tag_169\n      swap2\n      swap1\n      tag_170\n      jump\t// in\n    tag_169:\n        /* \"contracts/SmashNFT_Marketplace_1.sol\":2820:2830  nft.seller */\n      0x02\n      dup5\n      add\n      sload\n        /* \"contracts/SmashNFT_Marketplace_1.sol\":2812:2848  payable(nft.seller).transfer(result) */\n      mload(0x40)\n        /* \"contracts/SmashNFT_Marketplace_1.sol\":2765:2802  uint result = nft.price - LISTING_FEE */\n      swap2\n      swap3\n      pop\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"contracts/SmashNFT_Marketplace_1.sol\":2820:2830  nft.seller */\n      and\n      swap1\n        /* \"contracts/SmashNFT_Marketplace_1.sol\":2812:2848  payable(nft.seller).transfer(result) */\n      dup3\n      iszero\n      0x08fc\n      mul\n      swap1\n        /* \"contracts/SmashNFT_Marketplace_1.sol\":2765:2802  uint result = nft.price - LISTING_FEE */\n      dup4\n      swap1\n        /* \"contracts/SmashNFT_Marketplace_1.sol\":2820:2830  nft.seller */\n      0x00\n        /* \"contracts/SmashNFT_Marketplace_1.sol\":2812:2848  payable(nft.seller).transfer(result) */\n      dup2\n        /* \"contracts/SmashNFT_Marketplace_1.sol\":2820:2830  nft.seller */\n      dup2\n        /* \"contracts/SmashNFT_Marketplace_1.sol\":2812:2848  payable(nft.seller).transfer(result) */\n      dup2\n        /* \"contracts/SmashNFT_Marketplace_1.sol\":2765:2802  uint result = nft.price - LISTING_FEE */\n      dup6\n        /* \"contracts/SmashNFT_Marketplace_1.sol\":2820:2830  nft.seller */\n      dup9\n        /* \"contracts/SmashNFT_Marketplace_1.sol\":2812:2848  payable(nft.seller).transfer(result) */\n      dup9\n      call\n      swap4\n      pop\n      pop\n      pop\n      pop\n      iszero\n      dup1\n      iszero\n      tag_172\n      jumpi\n      returndatasize\n      0x00\n      dup1\n      returndatacopy\n      revert(0x00, returndatasize)\n    tag_172:\n      pop\n        /* \"contracts/SmashNFT_Marketplace_1.sol\":2858:2863  token */\n      sload(0x09)\n      0x01\n        /* \"contracts/SmashNFT_Marketplace_1.sol\":2899:2910  nft.tokenId */\n      dup5\n      add\n      sload\n        /* \"contracts/SmashNFT_Marketplace_1.sol\":2858:2911  token.transferFrom(address(this), buyer, nft.tokenId) */\n      mload(0x40)\n      shl(0xe0, 0x23b872dd)\n      dup2\n      mstore\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"contracts/SmashNFT_Marketplace_1.sol\":2858:2863  token */\n      swap1\n      swap3\n      and\n      swap2\n        /* \"contracts/SmashNFT_Marketplace_1.sol\":2858:2876  token.transferFrom */\n      0x23b872dd\n      swap2\n        /* \"contracts/SmashNFT_Marketplace_1.sol\":2858:2911  token.transferFrom(address(this), buyer, nft.tokenId) */\n      tag_173\n      swap2\n        /* \"contracts/SmashNFT_Marketplace_1.sol\":2885:2889  this */\n      address\n      swap2\n        /* \"contracts/SmashNFT_Marketplace_1.sol\":2892:2897  buyer */\n      dup8\n      swap2\n        /* \"contracts/SmashNFT_Marketplace_1.sol\":2858:2911  token.transferFrom(address(this), buyer, nft.tokenId) */\n      0x04\n      add\n      tag_174\n      jump\t// in\n    tag_173:\n      0x00\n      mload(0x40)\n      dup1\n      dup4\n      sub\n      dup2\n      0x00\n      dup8\n      dup1\n      extcodesize\n      iszero\n      dup1\n      iszero\n      tag_175\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_175:\n      pop\n      gas\n      call\n      iszero\n      dup1\n      iszero\n      tag_177\n      jumpi\n      returndatasize\n      0x00\n      dup1\n      returndatacopy\n      revert(0x00, returndatasize)\n    tag_177:\n      pop\n      pop\n      pop\n        /* \"contracts/SmashNFT_Marketplace_1.sol\":2931:2951  FirstOwner[_tokenId] */\n      0x00\n      dup6\n      dup2\n      mstore\n        /* \"contracts/SmashNFT_Marketplace_1.sol\":2931:2941  FirstOwner */\n      0x06\n        /* \"contracts/SmashNFT_Marketplace_1.sol\":2931:2951  FirstOwner[_tokenId] */\n      0x20\n      mstore\n      0x40\n      dup1\n      dup3\n      keccak256\n      sload\n        /* \"contracts/SmashNFT_Marketplace_1.sol\":2962:2973  LISTING_FEE */\n      sload(0x04)\n        /* \"contracts/SmashNFT_Marketplace_1.sol\":2923:2974  payable(FirstOwner[_tokenId]).transfer(LISTING_FEE) */\n      swap2\n      mload\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"contracts/SmashNFT_Marketplace_1.sol\":2931:2951  FirstOwner[_tokenId] */\n      swap1\n      swap2\n      and\n      swap4\n      pop\n        /* \"contracts/SmashNFT_Marketplace_1.sol\":2923:2974  payable(FirstOwner[_tokenId]).transfer(LISTING_FEE) */\n      dup2\n      iszero\n      0x08fc\n      mul\n      swap3\n      dup2\n        /* \"contracts/SmashNFT_Marketplace_1.sol\":2931:2951  FirstOwner[_tokenId] */\n      dup2\n        /* \"contracts/SmashNFT_Marketplace_1.sol\":2923:2974  payable(FirstOwner[_tokenId]).transfer(LISTING_FEE) */\n      dup2\n        /* \"contracts/SmashNFT_Marketplace_1.sol\":2962:2973  LISTING_FEE */\n      dup6\n        /* \"contracts/SmashNFT_Marketplace_1.sol\":2931:2951  FirstOwner[_tokenId] */\n      dup9\n        /* \"contracts/SmashNFT_Marketplace_1.sol\":2923:2974  payable(FirstOwner[_tokenId]).transfer(LISTING_FEE) */\n      dup9\n      call\n      swap4\n      pop\n      pop\n      pop\n      pop\n      iszero\n      dup1\n      iszero\n      tag_179\n      jumpi\n      returndatasize\n      0x00\n      dup1\n      returndatacopy\n      revert(0x00, returndatasize)\n    tag_179:\n      pop\n        /* \"contracts/SmashNFT_Marketplace_1.sol\":2984:2993  nft.owner */\n      0x03\n      dup4\n      add\n        /* \"contracts/SmashNFT_Marketplace_1.sol\":2984:3001  nft.owner = buyer */\n      dup1\n      sload\n      not(sub(shl(0xa0, 0x01), 0x01))\n      and\n      sub(shl(0xa0, 0x01), 0x01)\n      dup5\n      and\n      or\n      swap1\n      sstore\n        /* \"contracts/SmashNFT_Marketplace_1.sol\":3011:3021  nft.listed */\n      0x05\n      dup4\n      add\n        /* \"contracts/SmashNFT_Marketplace_1.sol\":3011:3026  nft.listed=true */\n      dup1\n      sload\n      not(0xff)\n      swap1\n      dup2\n      and\n      0x01\n      swap1\n      dup2\n      or\n      swap1\n      swap3\n      sstore\n      0x00\n        /* \"contracts/SmashNFT_Marketplace_1.sol\":3036:3051  check[_tokenId] */\n      dup7\n      dup2\n      mstore\n        /* \"contracts/SmashNFT_Marketplace_1.sol\":3036:3041  check */\n      0x07\n        /* \"contracts/SmashNFT_Marketplace_1.sol\":3036:3051  check[_tokenId] */\n      0x20\n      mstore\n      0x40\n      swap1\n      keccak256\n        /* \"contracts/SmashNFT_Marketplace_1.sol\":3036:3065  check[_tokenId]._check = true */\n      dup1\n      sload\n      swap1\n      swap2\n      and\n      dup3\n      or\n      swap1\n      sstore\n        /* \"contracts/SmashNFT_Marketplace_1.sol\":3075:3084  _nftsSold */\n      0x02\n        /* \"@openzeppelin/contracts/utils/Counters.sol\":1032:1051  counter._value += 1 */\n      dup1\n      sload\n      swap1\n      swap2\n      add\n      swap1\n      sstore\n        /* \"contracts/SmashNFT_Marketplace_1.sol\":3119:3132  MinterAddress */\n      sload(0x0a)\n      0x01\n        /* \"contracts/SmashNFT_Marketplace_1.sol\":3134:3145  nft.tokenId */\n      dup5\n      add\n      sload\n        /* \"contracts/SmashNFT_Marketplace_1.sol\":3147:3157  nft.seller */\n      0x02\n      dup6\n      add\n      sload\n        /* \"contracts/SmashNFT_Marketplace_1.sol\":3111:3176  NFTSold(MinterAddress, nft.tokenId, nft.seller, buyer, msg.value) */\n      mload(0x40)\n      0x16f1dbd97e6bf646d429ed186cce832f1f7fd9907814293b83181e9970ab7bd2\n      swap4\n      tag_182\n      swap4\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"contracts/SmashNFT_Marketplace_1.sol\":3119:3132  MinterAddress */\n      swap2\n      dup3\n      and\n      swap4\n        /* \"contracts/SmashNFT_Marketplace_1.sol\":3134:3145  nft.tokenId */\n      swap1\n      swap3\n        /* \"contracts/SmashNFT_Marketplace_1.sol\":3147:3157  nft.seller */\n      swap2\n      and\n      swap1\n        /* \"contracts/SmashNFT_Marketplace_1.sol\":3159:3164  buyer */\n      dup8\n      swap1\n        /* \"contracts/SmashNFT_Marketplace_1.sol\":3166:3175  msg.value */\n      callvalue\n      swap1\n        /* \"contracts/SmashNFT_Marketplace_1.sol\":3111:3176  NFTSold(MinterAddress, nft.tokenId, nft.seller, buyer, msg.value) */\n      tag_183\n      jump\t// in\n    tag_182:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      log1\n        /* \"contracts/SmashNFT_Marketplace_1.sol\":2479:3183  {... */\n      pop\n      pop\n      pop\n        /* \"@openzeppelin/contracts/security/ReentrancyGuard.sol\":2303:2323  _nonReentrantAfter() */\n      tag_184\n        /* \"@openzeppelin/contracts/security/ReentrancyGuard.sol\":1716:1717  1 */\n      0x01\n        /* \"@openzeppelin/contracts/security/ReentrancyGuard.sol\":2809:2816  _status */\n      0x00\n        /* \"@openzeppelin/contracts/security/ReentrancyGuard.sol\":2809:2831  _status = _NOT_ENTERED */\n      sstore\n        /* \"@openzeppelin/contracts/security/ReentrancyGuard.sol\":2629:2838  function _nonReentrantAfter() private {... */\n      jump\n        /* \"@openzeppelin/contracts/security/ReentrancyGuard.sol\":2303:2323  _nonReentrantAfter() */\n    tag_184:\n        /* \"contracts/SmashNFT_Marketplace_1.sol\":2417:3183  function buyNft(uint256 _tokenId) public payable nonReentrant {... */\n      pop\n      jump\t// out\n        /* \"contracts/SmashNFT_Marketplace_1.sol\":5604:5706  function SetListingFee(uint256 _ListingFee) public onlyOwner{... */\n    tag_48:\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1094:1107  _checkOwner() */\n      tag_187\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1094:1105  _checkOwner */\n      tag_188\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1094:1107  _checkOwner() */\n      jump\t// in\n    tag_187:\n        /* \"contracts/SmashNFT_Marketplace_1.sol\":5674:5685  LISTING_FEE */\n      0x04\n        /* \"contracts/SmashNFT_Marketplace_1.sol\":5674:5699  LISTING_FEE = _ListingFee */\n      sstore\n        /* \"contracts/SmashNFT_Marketplace_1.sol\":5604:5706  function SetListingFee(uint256 _ListingFee) public onlyOwner{... */\n      jump\t// out\n        /* \"contracts/SmashNFT_Marketplace_1.sol\":4440:4804  function CancelOffer(uint256 _tokenId) public{... */\n    tag_52:\n        /* \"contracts/SmashNFT_Marketplace_1.sol\":4503:4518  check[_tokenId] */\n      0x00\n      dup2\n      dup2\n      mstore\n        /* \"contracts/SmashNFT_Marketplace_1.sol\":4503:4508  check */\n      0x07\n        /* \"contracts/SmashNFT_Marketplace_1.sol\":4503:4518  check[_tokenId] */\n      0x20\n      mstore\n      0x40\n      swap1\n      keccak256\n        /* \"contracts/SmashNFT_Marketplace_1.sol\":4503:4527  check[_tokenId]._address */\n      sload\n      0x0100\n      swap1\n      div\n      sub(shl(0xa0, 0x01), 0x01)\n      and\n        /* \"contracts/SmashNFT_Marketplace_1.sol\":4531:4541  msg.sender */\n      caller\n        /* \"contracts/SmashNFT_Marketplace_1.sol\":4503:4541  check[_tokenId]._address == msg.sender */\n      eq\n        /* \"contracts/SmashNFT_Marketplace_1.sol\":4495:4566  require(check[_tokenId]._address == msg.sender,\"Only Owner can Cancel\") */\n      tag_191\n      jumpi\n      mload(0x40)\n      shl(0xe5, 0x461bcd)\n      dup2\n      mstore\n        /* \"#utility.yul\":5292:5294   */\n      0x20\n        /* \"contracts/SmashNFT_Marketplace_1.sol\":4495:4566  require(check[_tokenId]._address == msg.sender,\"Only Owner can Cancel\") */\n      0x04\n      dup3\n      add\n        /* \"#utility.yul\":5274:5295   */\n      mstore\n        /* \"#utility.yul\":5331:5333   */\n      0x15\n        /* \"#utility.yul\":5311:5329   */\n      0x24\n      dup3\n      add\n        /* \"#utility.yul\":5304:5334   */\n      mstore\n      shl(0x5a, 0x13db9b1e4813dddb995c8818d85b8810d85b98d95b)\n        /* \"#utility.yul\":5350:5368   */\n      0x44\n      dup3\n      add\n        /* \"#utility.yul\":5343:5394   */\n      mstore\n        /* \"#utility.yul\":5411:5429   */\n      0x64\n      add\n        /* \"contracts/SmashNFT_Marketplace_1.sol\":4495:4566  require(check[_tokenId]._address == msg.sender,\"Only Owner can Cancel\") */\n      tag_164\n        /* \"#utility.yul\":5090:5435   */\n      jump\n        /* \"contracts/SmashNFT_Marketplace_1.sol\":4495:4566  require(check[_tokenId]._address == msg.sender,\"Only Owner can Cancel\") */\n    tag_191:\n        /* \"contracts/SmashNFT_Marketplace_1.sol\":4576:4591  check[_tokenId] */\n      0x00\n      dup2\n      dup2\n      mstore\n        /* \"contracts/SmashNFT_Marketplace_1.sol\":4576:4581  check */\n      0x07\n        /* \"contracts/SmashNFT_Marketplace_1.sol\":4576:4591  check[_tokenId] */\n      0x20\n      swap1\n      dup2\n      mstore\n      0x40\n      dup1\n      dup4\n      keccak256\n        /* \"contracts/SmashNFT_Marketplace_1.sol\":4576:4605  check[_tokenId]._check = true */\n      dup1\n      sload\n        /* \"contracts/SmashNFT_Marketplace_1.sol\":4601:4605  true */\n      0x01\n      not(0xff)\n        /* \"contracts/SmashNFT_Marketplace_1.sol\":4576:4605  check[_tokenId]._check = true */\n      swap2\n      dup3\n      and\n      dup2\n      or\n      swap1\n      swap3\n      sstore\n        /* \"contracts/SmashNFT_Marketplace_1.sol\":4615:4623  _idToNFT */\n      0x08\n        /* \"contracts/SmashNFT_Marketplace_1.sol\":4615:4633  _idToNFT[_tokenId] */\n      swap1\n      swap4\n      mstore\n      swap3\n      dup2\n      swap1\n      keccak256\n        /* \"contracts/SmashNFT_Marketplace_1.sol\":4615:4640  _idToNFT[_tokenId].listed */\n      0x05\n      add\n        /* \"contracts/SmashNFT_Marketplace_1.sol\":4615:4645  _idToNFT[_tokenId].listed=true */\n      dup1\n      sload\n      swap1\n      swap3\n      and\n      swap1\n      swap3\n      or\n      swap1\n      sstore\n        /* \"contracts/SmashNFT_Marketplace_1.sol\":4655:4660  token */\n      sload(0x09)\n        /* \"contracts/SmashNFT_Marketplace_1.sol\":4655:4710  token.transferFrom(address(this), msg.sender, _tokenId) */\n      swap1\n      mload\n      shl(0xe0, 0x23b872dd)\n      dup2\n      mstore\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"contracts/SmashNFT_Marketplace_1.sol\":4655:4660  token */\n      swap1\n      swap2\n      and\n      swap1\n        /* \"contracts/SmashNFT_Marketplace_1.sol\":4655:4673  token.transferFrom */\n      0x23b872dd\n      swap1\n        /* \"contracts/SmashNFT_Marketplace_1.sol\":4655:4710  token.transferFrom(address(this), msg.sender, _tokenId) */\n      tag_194\n      swap1\n        /* \"contracts/SmashNFT_Marketplace_1.sol\":4682:4686  this */\n      address\n      swap1\n        /* \"contracts/SmashNFT_Marketplace_1.sol\":4689:4699  msg.sender */\n      caller\n      swap1\n        /* \"contracts/SmashNFT_Marketplace_1.sol\":4576:4591  check[_tokenId] */\n      dup7\n      swap1\n        /* \"contracts/SmashNFT_Marketplace_1.sol\":4655:4710  token.transferFrom(address(this), msg.sender, _tokenId) */\n      0x04\n      add\n      tag_174\n      jump\t// in\n    tag_194:\n      0x00\n      mload(0x40)\n      dup1\n      dup4\n      sub\n      dup2\n      0x00\n      dup8\n      dup1\n      extcodesize\n      iszero\n      dup1\n      iszero\n      tag_196\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_196:\n      pop\n      gas\n      call\n      iszero\n      dup1\n      iszero\n      tag_198\n      jumpi\n      returndatasize\n      0x00\n      dup1\n      returndatacopy\n      revert(0x00, returndatasize)\n    tag_198:\n      pop\n      pop\n      pop\n        /* \"contracts/SmashNFT_Marketplace_1.sol\":4720:4738  _idToNFT[_tokenId] */\n      0x00\n      dup3\n      dup2\n      mstore\n        /* \"contracts/SmashNFT_Marketplace_1.sol\":4720:4728  _idToNFT */\n      0x08\n        /* \"contracts/SmashNFT_Marketplace_1.sol\":4720:4738  _idToNFT[_tokenId] */\n      0x20\n      mstore\n      0x40\n      swap1\n      keccak256\n        /* \"contracts/SmashNFT_Marketplace_1.sol\":4720:4744  _idToNFT[_tokenId].owner */\n      0x03\n      add\n        /* \"contracts/SmashNFT_Marketplace_1.sol\":4720:4766  _idToNFT[_tokenId].owner = payable(msg.sender) */\n      dup1\n      sload\n      not(sub(shl(0xa0, 0x01), 0x01))\n      and\n        /* \"contracts/SmashNFT_Marketplace_1.sol\":4755:4765  msg.sender */\n      caller\n        /* \"contracts/SmashNFT_Marketplace_1.sol\":4720:4766  _idToNFT[_tokenId].owner = payable(msg.sender) */\n      or\n      swap1\n      sstore\n      pop\n        /* \"contracts/SmashNFT_Marketplace_1.sol\":4776:4797  _nftsSold.increment() */\n      tag_184\n        /* \"contracts/SmashNFT_Marketplace_1.sol\":4776:4785  _nftsSold */\n      0x02\n        /* \"@openzeppelin/contracts/utils/Counters.sol\":1032:1051  counter._value += 1 */\n      dup1\n      sload\n        /* \"@openzeppelin/contracts/utils/Counters.sol\":1050:1051  1 */\n      0x01\n        /* \"@openzeppelin/contracts/utils/Counters.sol\":1032:1051  counter._value += 1 */\n      add\n      swap1\n      sstore\n        /* \"@openzeppelin/contracts/utils/Counters.sol\":945:1068  function increment(Counter storage counter) internal {... */\n      jump\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1831:1932  function renounceOwnership() public virtual onlyOwner {... */\n    tag_61:\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1094:1107  _checkOwner() */\n      tag_201\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1094:1105  _checkOwner */\n      tag_188\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1094:1107  _checkOwner() */\n      jump\t// in\n    tag_201:\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1895:1925  _transferOwnership(address(0)) */\n      tag_203\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1922:1923  0 */\n      0x00\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1895:1913  _transferOwnership */\n      tag_204\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1895:1925  _transferOwnership(address(0)) */\n      jump\t// in\n    tag_203:\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1831:1932  function renounceOwnership() public virtual onlyOwner {... */\n      jump\t// out\n        /* \"contracts/SmashNFT_Marketplace_1.sol\":5892:6371  function getListedNfts() public view returns (NFT[] memory) {... */\n    tag_74:\n        /* \"contracts/SmashNFT_Marketplace_1.sol\":5938:5950  NFT[] memory */\n      0x60\n        /* \"contracts/SmashNFT_Marketplace_1.sol\":5962:5978  uint256 nftCount */\n      0x00\n        /* \"contracts/SmashNFT_Marketplace_1.sol\":5981:6000  _nftCount.current() */\n      tag_207\n        /* \"contracts/SmashNFT_Marketplace_1.sol\":5981:5990  _nftCount */\n      0x03\n        /* \"@openzeppelin/contracts/utils/Counters.sol\":918:932  counter._value */\n      sload\n      swap1\n        /* \"@openzeppelin/contracts/utils/Counters.sol\":827:939  function current(Counter storage counter) internal view returns (uint256) {... */\n      jump\n        /* \"contracts/SmashNFT_Marketplace_1.sol\":5981:6000  _nftCount.current() */\n    tag_207:\n        /* \"contracts/SmashNFT_Marketplace_1.sol\":5962:6000  uint256 nftCount = _nftCount.current() */\n      swap1\n      pop\n        /* \"contracts/SmashNFT_Marketplace_1.sol\":6010:6033  uint256 unsoldNftsCount */\n      0x00\n        /* \"contracts/SmashNFT_Marketplace_1.sol\":6047:6066  _nftsSold.current() */\n      tag_208\n        /* \"contracts/SmashNFT_Marketplace_1.sol\":6047:6056  _nftsSold */\n      0x02\n        /* \"@openzeppelin/contracts/utils/Counters.sol\":918:932  counter._value */\n      sload\n      swap1\n        /* \"@openzeppelin/contracts/utils/Counters.sol\":827:939  function current(Counter storage counter) internal view returns (uint256) {... */\n      jump\n        /* \"contracts/SmashNFT_Marketplace_1.sol\":6047:6066  _nftsSold.current() */\n    tag_208:\n        /* \"contracts/SmashNFT_Marketplace_1.sol\":6036:6066  nftCount - _nftsSold.current() */\n      tag_209\n      swap1\n        /* \"contracts/SmashNFT_Marketplace_1.sol\":6036:6044  nftCount */\n      dup4\n        /* \"contracts/SmashNFT_Marketplace_1.sol\":6036:6066  nftCount - _nftsSold.current() */\n      tag_170\n      jump\t// in\n    tag_209:\n        /* \"contracts/SmashNFT_Marketplace_1.sol\":6010:6066  uint256 unsoldNftsCount = nftCount - _nftsSold.current() */\n      swap1\n      pop\n        /* \"contracts/SmashNFT_Marketplace_1.sol\":6076:6093  NFT[] memory nfts */\n      0x00\n        /* \"contracts/SmashNFT_Marketplace_1.sol\":6106:6121  unsoldNftsCount */\n      dup2\n        /* \"contracts/SmashNFT_Marketplace_1.sol\":6096:6122  new NFT[](unsoldNftsCount) */\n      0xffffffffffffffff\n      dup2\n      gt\n      iszero\n      tag_211\n      jumpi\n      tag_211\n      tag_115\n      jump\t// in\n    tag_211:\n      mload(0x40)\n      swap1\n      dup1\n      dup3\n      mstore\n      dup1\n      0x20\n      mul\n      0x20\n      add\n      dup3\n      add\n      0x40\n      mstore\n      dup1\n      iszero\n      tag_212\n      jumpi\n      dup2\n      0x20\n      add\n    tag_213:\n      tag_214\n      tag_119\n      jump\t// in\n    tag_214:\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      0x01\n      swap1\n      sub\n      swap1\n      dup2\n      tag_213\n      jumpi\n      swap1\n      pop\n    tag_212:\n      pop\n        /* \"contracts/SmashNFT_Marketplace_1.sol\":6076:6122  NFT[] memory nfts = new NFT[](unsoldNftsCount) */\n      swap1\n      pop\n        /* \"contracts/SmashNFT_Marketplace_1.sol\":6132:6146  uint nftsIndex */\n      0x00\n        /* \"contracts/SmashNFT_Marketplace_1.sol\":6165:6171  uint i */\n      dup1\n        /* \"contracts/SmashNFT_Marketplace_1.sol\":6160:6344  for (uint i = 0; i < nftCount; i++) {... */\n    tag_215:\n        /* \"contracts/SmashNFT_Marketplace_1.sol\":6181:6189  nftCount */\n      dup5\n        /* \"contracts/SmashNFT_Marketplace_1.sol\":6177:6178  i */\n      dup2\n        /* \"contracts/SmashNFT_Marketplace_1.sol\":6177:6189  i < nftCount */\n      lt\n        /* \"contracts/SmashNFT_Marketplace_1.sol\":6160:6344  for (uint i = 0; i < nftCount; i++) {... */\n      iszero\n      tag_121\n      jumpi\n        /* \"contracts/SmashNFT_Marketplace_1.sol\":6215:6223  _idToNFT */\n      0x08\n        /* \"contracts/SmashNFT_Marketplace_1.sol\":6215:6230  _idToNFT[i + 1] */\n      0x00\n        /* \"contracts/SmashNFT_Marketplace_1.sol\":6224:6229  i + 1 */\n      tag_218\n        /* \"contracts/SmashNFT_Marketplace_1.sol\":6224:6225  i */\n      dup4\n        /* \"contracts/SmashNFT_Marketplace_1.sol\":6228:6229  1 */\n      0x01\n        /* \"contracts/SmashNFT_Marketplace_1.sol\":6224:6229  i + 1 */\n      tag_108\n      jump\t// in\n    tag_218:\n        /* \"contracts/SmashNFT_Marketplace_1.sol\":6215:6230  _idToNFT[i + 1] */\n      dup2\n      mstore\n      0x20\n      dup2\n      add\n      swap2\n      swap1\n      swap2\n      mstore\n      0x40\n      add\n      0x00\n      keccak256\n        /* \"contracts/SmashNFT_Marketplace_1.sol\":6215:6237  _idToNFT[i + 1].listed */\n      0x05\n      add\n      sload\n      0xff\n      and\n        /* \"contracts/SmashNFT_Marketplace_1.sol\":6210:6334  if (!_idToNFT[i + 1].listed) {... */\n      tag_219\n      jumpi\n        /* \"contracts/SmashNFT_Marketplace_1.sol\":6275:6283  _idToNFT */\n      0x08\n        /* \"contracts/SmashNFT_Marketplace_1.sol\":6275:6290  _idToNFT[i + 1] */\n      0x00\n        /* \"contracts/SmashNFT_Marketplace_1.sol\":6284:6289  i + 1 */\n      tag_220\n        /* \"contracts/SmashNFT_Marketplace_1.sol\":6284:6285  i */\n      dup4\n        /* \"contracts/SmashNFT_Marketplace_1.sol\":6288:6289  1 */\n      0x01\n        /* \"contracts/SmashNFT_Marketplace_1.sol\":6284:6289  i + 1 */\n      tag_108\n      jump\t// in\n    tag_220:\n        /* \"contracts/SmashNFT_Marketplace_1.sol\":6275:6290  _idToNFT[i + 1] */\n      dup2\n      mstore\n      0x20\n      dup1\n      dup3\n      add\n      swap3\n      swap1\n      swap3\n      mstore\n      0x40\n      swap1\n      dup2\n      add\n      0x00\n      keccak256\n        /* \"contracts/SmashNFT_Marketplace_1.sol\":6257:6290  nfts[nftsIndex] = _idToNFT[i + 1] */\n      dup2\n      mload\n      0xc0\n      dup2\n      add\n      dup4\n      mstore\n      dup2\n      sload\n      sub(shl(0xa0, 0x01), 0x01)\n      swap1\n      dup2\n      and\n      dup3\n      mstore\n      0x01\n      dup4\n      add\n      sload\n      swap5\n      dup3\n      add\n      swap5\n      swap1\n      swap5\n      mstore\n      0x02\n      dup3\n      add\n      sload\n      dup5\n      and\n      swap3\n      dup2\n      add\n      swap3\n      swap1\n      swap3\n      mstore\n      0x03\n      dup2\n      add\n      sload\n      swap1\n      swap3\n      and\n      0x60\n      dup3\n      add\n      mstore\n      0x04\n      dup3\n      add\n      sload\n      0x80\n      dup3\n      add\n      mstore\n      0x05\n      swap1\n      swap2\n      add\n      sload\n      0xff\n      and\n      iszero\n      iszero\n      0xa0\n      dup3\n      add\n      mstore\n        /* \"contracts/SmashNFT_Marketplace_1.sol\":6257:6272  nfts[nftsIndex] */\n      dup4\n      mload\n        /* \"contracts/SmashNFT_Marketplace_1.sol\":6257:6261  nfts */\n      dup5\n      swap1\n        /* \"contracts/SmashNFT_Marketplace_1.sol\":6262:6271  nftsIndex */\n      dup5\n      swap1\n        /* \"contracts/SmashNFT_Marketplace_1.sol\":6257:6272  nfts[nftsIndex] */\n      dup2\n      lt\n      tag_222\n      jumpi\n      tag_222\n      tag_128\n      jump\t// in\n    tag_222:\n      0x20\n      mul\n      0x20\n      add\n      add\n        /* \"contracts/SmashNFT_Marketplace_1.sol\":6257:6290  nfts[nftsIndex] = _idToNFT[i + 1] */\n      dup2\n      swap1\n      mstore\n      pop\n        /* \"contracts/SmashNFT_Marketplace_1.sol\":6308:6319  nftsIndex++ */\n      dup2\n      dup1\n      tag_223\n      swap1\n      tag_111\n      jump\t// in\n    tag_223:\n      swap3\n      pop\n      pop\n        /* \"contracts/SmashNFT_Marketplace_1.sol\":6210:6334  if (!_idToNFT[i + 1].listed) {... */\n    tag_219:\n        /* \"contracts/SmashNFT_Marketplace_1.sol\":6191:6194  i++ */\n      dup1\n      tag_224\n      dup2\n      tag_111\n      jump\t// in\n    tag_224:\n      swap2\n      pop\n      pop\n        /* \"contracts/SmashNFT_Marketplace_1.sol\":6160:6344  for (uint i = 0; i < nftCount; i++) {... */\n      jump(tag_215)\n        /* \"contracts/SmashNFT_Marketplace_1.sol\":5008:5180  function ClaculatePrice(uint _price) public pure returns(uint){... */\n    tag_83:\n        /* \"contracts/SmashNFT_Marketplace_1.sol\":5065:5069  uint */\n      0x00\n        /* \"contracts/SmashNFT_Marketplace_1.sol\":5089:5090  5 */\n      0x05\n        /* \"contracts/SmashNFT_Marketplace_1.sol\":5065:5069  uint */\n      dup2\n        /* \"contracts/SmashNFT_Marketplace_1.sol\":5141:5149  _price/a */\n      tag_227\n        /* \"contracts/SmashNFT_Marketplace_1.sol\":5089:5090  5 */\n      dup3\n        /* \"contracts/SmashNFT_Marketplace_1.sol\":5141:5147  _price */\n      dup6\n        /* \"contracts/SmashNFT_Marketplace_1.sol\":5141:5149  _price/a */\n      tag_228\n      jump\t// in\n    tag_227:\n        /* \"contracts/SmashNFT_Marketplace_1.sol\":5131:5150  _price + (_price/a) */\n      tag_229\n      swap1\n        /* \"contracts/SmashNFT_Marketplace_1.sol\":5131:5137  _price */\n      dup6\n        /* \"contracts/SmashNFT_Marketplace_1.sol\":5131:5150  _price + (_price/a) */\n      tag_108\n      jump\t// in\n    tag_229:\n        /* \"contracts/SmashNFT_Marketplace_1.sol\":5122:5150  result = _price + (_price/a) */\n      swap5\n        /* \"contracts/SmashNFT_Marketplace_1.sol\":5008:5180  function ClaculatePrice(uint _price) public pure returns(uint){... */\n      swap4\n      pop\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"contracts/SmashNFT_Marketplace_1.sol\":1572:2224  function ListNft(uint256 _tokenId, uint256 _price) public payable nonReentrant {... */\n    tag_92:\n        /* \"@openzeppelin/contracts/security/ReentrancyGuard.sol\":2261:2282  _nonReentrantBefore() */\n      tag_231\n        /* \"@openzeppelin/contracts/security/ReentrancyGuard.sol\":2261:2280  _nonReentrantBefore */\n      tag_161\n        /* \"@openzeppelin/contracts/security/ReentrancyGuard.sol\":2261:2282  _nonReentrantBefore() */\n      jump\t// in\n    tag_231:\n        /* \"contracts/SmashNFT_Marketplace_1.sol\":1679:1680  0 */\n      0x00\n        /* \"contracts/SmashNFT_Marketplace_1.sol\":1670:1676  _price */\n      dup2\n        /* \"contracts/SmashNFT_Marketplace_1.sol\":1670:1680  _price > 0 */\n      gt\n        /* \"contracts/SmashNFT_Marketplace_1.sol\":1662:1713  require(_price > 0, \"Price must be at least 1 wei\") */\n      tag_233\n      jumpi\n      mload(0x40)\n      shl(0xe5, 0x461bcd)\n      dup2\n      mstore\n        /* \"#utility.yul\":6244:6246   */\n      0x20\n        /* \"contracts/SmashNFT_Marketplace_1.sol\":1662:1713  require(_price > 0, \"Price must be at least 1 wei\") */\n      0x04\n      dup3\n      add\n        /* \"#utility.yul\":6226:6247   */\n      mstore\n        /* \"#utility.yul\":6283:6285   */\n      0x1c\n        /* \"#utility.yul\":6263:6281   */\n      0x24\n      dup3\n      add\n        /* \"#utility.yul\":6256:6286   */\n      mstore\n        /* \"#utility.yul\":6322:6352   */\n      0x5072696365206d757374206265206174206c6561737420312077656900000000\n        /* \"#utility.yul\":6302:6320   */\n      0x44\n      dup3\n      add\n        /* \"#utility.yul\":6295:6353   */\n      mstore\n        /* \"#utility.yul\":6370:6388   */\n      0x64\n      add\n        /* \"contracts/SmashNFT_Marketplace_1.sol\":1662:1713  require(_price > 0, \"Price must be at least 1 wei\") */\n      tag_164\n        /* \"#utility.yul\":6042:6394   */\n      jump\n        /* \"contracts/SmashNFT_Marketplace_1.sol\":1662:1713  require(_price > 0, \"Price must be at least 1 wei\") */\n    tag_233:\n        /* \"contracts/SmashNFT_Marketplace_1.sol\":1733:1748  check[_tokenId] */\n      0x00\n      dup3\n      dup2\n      mstore\n        /* \"contracts/SmashNFT_Marketplace_1.sol\":1733:1738  check */\n      0x07\n        /* \"contracts/SmashNFT_Marketplace_1.sol\":1733:1748  check[_tokenId] */\n      0x20\n      mstore\n      0x40\n      swap1\n      keccak256\n        /* \"contracts/SmashNFT_Marketplace_1.sol\":1733:1755  check[_tokenId]._check */\n      sload\n      0xff\n      and\n        /* \"contracts/SmashNFT_Marketplace_1.sol\":1731:1756  !(check[_tokenId]._check) */\n      iszero\n        /* \"contracts/SmashNFT_Marketplace_1.sol\":1723:1788  require(!(check[_tokenId]._check),\"One Token ID Listed One Time\") */\n      tag_236\n      jumpi\n      mload(0x40)\n      shl(0xe5, 0x461bcd)\n      dup2\n      mstore\n        /* \"#utility.yul\":6601:6603   */\n      0x20\n        /* \"contracts/SmashNFT_Marketplace_1.sol\":1723:1788  require(!(check[_tokenId]._check),\"One Token ID Listed One Time\") */\n      0x04\n      dup3\n      add\n        /* \"#utility.yul\":6583:6604   */\n      mstore\n        /* \"#utility.yul\":6640:6642   */\n      0x1c\n        /* \"#utility.yul\":6620:6638   */\n      0x24\n      dup3\n      add\n        /* \"#utility.yul\":6613:6643   */\n      mstore\n        /* \"#utility.yul\":6679:6709   */\n      0x4f6e6520546f6b656e204944204c6973746564204f6e652054696d6500000000\n        /* \"#utility.yul\":6659:6677   */\n      0x44\n      dup3\n      add\n        /* \"#utility.yul\":6652:6710   */\n      mstore\n        /* \"#utility.yul\":6727:6745   */\n      0x64\n      add\n        /* \"contracts/SmashNFT_Marketplace_1.sol\":1723:1788  require(!(check[_tokenId]._check),\"One Token ID Listed One Time\") */\n      tag_164\n        /* \"#utility.yul\":6399:6751   */\n      jump\n        /* \"contracts/SmashNFT_Marketplace_1.sol\":1723:1788  require(!(check[_tokenId]._check),\"One Token ID Listed One Time\") */\n    tag_236:\n        /* \"contracts/SmashNFT_Marketplace_1.sol\":1847:1852  token */\n      sload(0x09)\n        /* \"contracts/SmashNFT_Marketplace_1.sol\":1847:1902  token.transferFrom(msg.sender, address(this), _tokenId) */\n      mload(0x40)\n      shl(0xe0, 0x23b872dd)\n      dup2\n      mstore\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"contracts/SmashNFT_Marketplace_1.sol\":1847:1852  token */\n      swap1\n      swap2\n      and\n      swap1\n        /* \"contracts/SmashNFT_Marketplace_1.sol\":1847:1865  token.transferFrom */\n      0x23b872dd\n      swap1\n        /* \"contracts/SmashNFT_Marketplace_1.sol\":1847:1902  token.transferFrom(msg.sender, address(this), _tokenId) */\n      tag_239\n      swap1\n        /* \"contracts/SmashNFT_Marketplace_1.sol\":1866:1876  msg.sender */\n      caller\n      swap1\n        /* \"contracts/SmashNFT_Marketplace_1.sol\":1886:1890  this */\n      address\n      swap1\n        /* \"contracts/SmashNFT_Marketplace_1.sol\":1893:1901  _tokenId */\n      dup8\n      swap1\n        /* \"contracts/SmashNFT_Marketplace_1.sol\":1847:1902  token.transferFrom(msg.sender, address(this), _tokenId) */\n      0x04\n      add\n      tag_174\n      jump\t// in\n    tag_239:\n      0x00\n      mload(0x40)\n      dup1\n      dup4\n      sub\n      dup2\n      0x00\n      dup8\n      dup1\n      extcodesize\n      iszero\n      dup1\n      iszero\n      tag_240\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_240:\n      pop\n      gas\n      call\n      iszero\n      dup1\n      iszero\n      tag_242\n      jumpi\n      returndatasize\n      0x00\n      dup1\n      returndatacopy\n      revert(0x00, returndatasize)\n    tag_242:\n      pop\n      pop\n      pop\n      pop\n        /* \"contracts/SmashNFT_Marketplace_1.sol\":1912:1933  _nftCount.increment() */\n      tag_243\n        /* \"contracts/SmashNFT_Marketplace_1.sol\":1912:1921  _nftCount */\n      0x03\n        /* \"@openzeppelin/contracts/utils/Counters.sol\":1032:1051  counter._value += 1 */\n      dup1\n      sload\n        /* \"@openzeppelin/contracts/utils/Counters.sol\":1050:1051  1 */\n      0x01\n        /* \"@openzeppelin/contracts/utils/Counters.sol\":1032:1051  counter._value += 1 */\n      add\n      swap1\n      sstore\n        /* \"@openzeppelin/contracts/utils/Counters.sol\":945:1068  function increment(Counter storage counter) internal {... */\n      jump\n        /* \"contracts/SmashNFT_Marketplace_1.sol\":1912:1933  _nftCount.increment() */\n    tag_243:\n        /* \"contracts/SmashNFT_Marketplace_1.sol\":1964:2047  NFT(MinterAddress,_tokenId,payable(msg.sender),payable(address(this)),_price,false) */\n      0x40\n      dup1\n      mload\n      0xc0\n      dup2\n      add\n      dup3\n      mstore\n        /* \"contracts/SmashNFT_Marketplace_1.sol\":1968:1981  MinterAddress */\n      0x0a\n      dup1\n      sload\n      sub(shl(0xa0, 0x01), 0x01)\n      swap1\n      dup2\n      and\n        /* \"contracts/SmashNFT_Marketplace_1.sol\":1964:2047  NFT(MinterAddress,_tokenId,payable(msg.sender),payable(address(this)),_price,false) */\n      dup4\n      mstore\n      0x20\n      dup1\n      dup5\n      add\n      dup8\n      dup2\n      mstore\n        /* \"contracts/SmashNFT_Marketplace_1.sol\":1999:2009  msg.sender */\n      caller\n        /* \"contracts/SmashNFT_Marketplace_1.sol\":1964:2047  NFT(MinterAddress,_tokenId,payable(msg.sender),payable(address(this)),_price,false) */\n      dup6\n      dup8\n      add\n      dup2\n      dup2\n      mstore\n        /* \"contracts/SmashNFT_Marketplace_1.sol\":2027:2031  this */\n      address\n        /* \"contracts/SmashNFT_Marketplace_1.sol\":1964:2047  NFT(MinterAddress,_tokenId,payable(msg.sender),payable(address(this)),_price,false) */\n      0x60\n      dup9\n      add\n      dup2\n      dup2\n      mstore\n      0x80\n      dup10\n      add\n      dup12\n      dup2\n      mstore\n      0x00\n      0xa0\n      dup12\n      add\n      dup2\n      dup2\n      mstore\n        /* \"contracts/SmashNFT_Marketplace_1.sol\":1943:1961  _idToNFT[_tokenId] */\n      dup15\n      dup3\n      mstore\n        /* \"contracts/SmashNFT_Marketplace_1.sol\":1943:1951  _idToNFT */\n      0x08\n        /* \"contracts/SmashNFT_Marketplace_1.sol\":1943:1961  _idToNFT[_tokenId] */\n      dup10\n      mstore\n      dup13\n      dup3\n      keccak256\n        /* \"contracts/SmashNFT_Marketplace_1.sol\":1943:2047  _idToNFT[_tokenId] = NFT(MinterAddress,_tokenId,payable(msg.sender),payable(address(this)),_price,false) */\n      swap12\n      mload\n      dup13\n      sload\n      not(sub(shl(0xa0, 0x01), 0x01))\n      swap1\n      dup2\n      and\n      swap2\n      dup13\n      and\n      swap2\n      swap1\n      swap2\n      or\n      dup14\n      sstore\n      swap8\n      mload\n      0x01\n      dup14\n      add\n      sstore\n      swap5\n      mload\n      0x02\n      dup13\n      add\n      dup1\n      sload\n      dup10\n      and\n      swap2\n      dup12\n      and\n      swap2\n      swap1\n      swap2\n      or\n      swap1\n      sstore\n      swap2\n      mload\n      0x03\n      dup12\n      add\n      dup1\n      sload\n      dup9\n      and\n      swap2\n      dup11\n      and\n      swap2\n      swap1\n      swap2\n      or\n      swap1\n      sstore\n      mload\n      0x04\n      dup11\n      add\n      sstore\n      swap2\n      mload\n      0x05\n      swap1\n      swap9\n      add\n      dup1\n      sload\n      not(0xff)\n      and\n      swap9\n      iszero\n      iszero\n      swap9\n      swap1\n      swap9\n      or\n      swap1\n      swap8\n      sstore\n        /* \"contracts/SmashNFT_Marketplace_1.sol\":2057:2067  FirstOwner */\n      0x06\n        /* \"contracts/SmashNFT_Marketplace_1.sol\":2057:2077  FirstOwner[_tokenId] */\n      dup5\n      mstore\n      dup8\n      dup2\n      keccak256\n        /* \"contracts/SmashNFT_Marketplace_1.sol\":2057:2088  FirstOwner[_tokenId]=msg.sender */\n      dup1\n      sload\n      swap1\n      swap4\n      and\n      dup3\n      or\n      swap1\n      swap3\n      sstore\n        /* \"contracts/SmashNFT_Marketplace_1.sol\":2098:2103  check */\n      0x07\n        /* \"contracts/SmashNFT_Marketplace_1.sol\":2098:2113  check[_tokenId] */\n      swap1\n      swap3\n      mstore\n      dup6\n      swap1\n      keccak256\n        /* \"contracts/SmashNFT_Marketplace_1.sol\":2098:2133  check[_tokenId]._address=msg.sender */\n      dup1\n      sload\n      not(sub(shl(0xa8, 0x01), 0x0100))\n      and\n        /* \"contracts/SmashNFT_Marketplace_1.sol\":1968:1981  MinterAddress */\n      0x0100\n        /* \"contracts/SmashNFT_Marketplace_1.sol\":2098:2133  check[_tokenId]._address=msg.sender */\n      dup4\n      mul\n      or\n      swap1\n      sstore\n        /* \"contracts/SmashNFT_Marketplace_1.sol\":2158:2171  MinterAddress */\n      swap2\n      sload\n        /* \"contracts/SmashNFT_Marketplace_1.sol\":2148:2217  NFTListed(MinterAddress, _tokenId, msg.sender, address(this), _price) */\n      swap4\n      mload\n      0xa0c6c0d02d86fdacecbaa5fdf5894bab204e31a778250474108540733a9b8d19\n      swap5\n      tag_244\n      swap5\n        /* \"contracts/SmashNFT_Marketplace_1.sol\":2158:2171  MinterAddress */\n      swap3\n      and\n      swap3\n        /* \"contracts/SmashNFT_Marketplace_1.sol\":1964:2047  NFT(MinterAddress,_tokenId,payable(msg.sender),payable(address(this)),_price,false) */\n      dup8\n      swap3\n        /* \"contracts/SmashNFT_Marketplace_1.sol\":1999:2009  msg.sender */\n      swap1\n      swap2\n        /* \"contracts/SmashNFT_Marketplace_1.sol\":1964:2047  NFT(MinterAddress,_tokenId,payable(msg.sender),payable(address(this)),_price,false) */\n      dup8\n      swap1\n        /* \"contracts/SmashNFT_Marketplace_1.sol\":2148:2217  NFTListed(MinterAddress, _tokenId, msg.sender, address(this), _price) */\n      tag_183\n      jump\t// in\n    tag_244:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      log1\n        /* \"@openzeppelin/contracts/security/ReentrancyGuard.sol\":2303:2323  _nonReentrantAfter() */\n      tag_246\n        /* \"@openzeppelin/contracts/security/ReentrancyGuard.sol\":1716:1717  1 */\n      0x01\n        /* \"@openzeppelin/contracts/security/ReentrancyGuard.sol\":2809:2816  _status */\n      0x00\n        /* \"@openzeppelin/contracts/security/ReentrancyGuard.sol\":2809:2831  _status = _NOT_ENTERED */\n      sstore\n        /* \"@openzeppelin/contracts/security/ReentrancyGuard.sol\":2629:2838  function _nonReentrantAfter() private {... */\n      jump\n        /* \"@openzeppelin/contracts/security/ReentrancyGuard.sol\":2303:2323  _nonReentrantAfter() */\n    tag_246:\n        /* \"contracts/SmashNFT_Marketplace_1.sol\":1572:2224  function ListNft(uint256 _tokenId, uint256 _price) public payable nonReentrant {... */\n      pop\n      pop\n      jump\t// out\n        /* \"contracts/SmashNFT_Marketplace_1.sol\":3430:4270  function ReSellNft(uint256 _tokenId, uint256 _price) public payable nonReentrant {... */\n    tag_95:\n        /* \"@openzeppelin/contracts/security/ReentrancyGuard.sol\":2261:2282  _nonReentrantBefore() */\n      tag_248\n        /* \"@openzeppelin/contracts/security/ReentrancyGuard.sol\":2261:2280  _nonReentrantBefore */\n      tag_161\n        /* \"@openzeppelin/contracts/security/ReentrancyGuard.sol\":2261:2282  _nonReentrantBefore() */\n      jump\t// in\n    tag_248:\n        /* \"contracts/SmashNFT_Marketplace_1.sol\":3538:3539  0 */\n      0x00\n        /* \"contracts/SmashNFT_Marketplace_1.sol\":3529:3535  _price */\n      dup2\n        /* \"contracts/SmashNFT_Marketplace_1.sol\":3529:3539  _price > 0 */\n      gt\n        /* \"contracts/SmashNFT_Marketplace_1.sol\":3521:3572  require(_price > 0, \"Price must be at least 1 wei\") */\n      tag_250\n      jumpi\n      mload(0x40)\n      shl(0xe5, 0x461bcd)\n      dup2\n      mstore\n        /* \"#utility.yul\":6244:6246   */\n      0x20\n        /* \"contracts/SmashNFT_Marketplace_1.sol\":3521:3572  require(_price > 0, \"Price must be at least 1 wei\") */\n      0x04\n      dup3\n      add\n        /* \"#utility.yul\":6226:6247   */\n      mstore\n        /* \"#utility.yul\":6283:6285   */\n      0x1c\n        /* \"#utility.yul\":6263:6281   */\n      0x24\n      dup3\n      add\n        /* \"#utility.yul\":6256:6286   */\n      mstore\n        /* \"#utility.yul\":6322:6352   */\n      0x5072696365206d757374206265206174206c6561737420312077656900000000\n        /* \"#utility.yul\":6302:6320   */\n      0x44\n      dup3\n      add\n        /* \"#utility.yul\":6295:6353   */\n      mstore\n        /* \"#utility.yul\":6370:6388   */\n      0x64\n      add\n        /* \"contracts/SmashNFT_Marketplace_1.sol\":3521:3572  require(_price > 0, \"Price must be at least 1 wei\") */\n      tag_164\n        /* \"#utility.yul\":6042:6394   */\n      jump\n        /* \"contracts/SmashNFT_Marketplace_1.sol\":3521:3572  require(_price > 0, \"Price must be at least 1 wei\") */\n    tag_250:\n        /* \"contracts/SmashNFT_Marketplace_1.sol\":3590:3608  _idToNFT[_tokenId] */\n      0x00\n      dup3\n      dup2\n      mstore\n        /* \"contracts/SmashNFT_Marketplace_1.sol\":3590:3598  _idToNFT */\n      0x08\n        /* \"contracts/SmashNFT_Marketplace_1.sol\":3590:3608  _idToNFT[_tokenId] */\n      0x20\n      mstore\n      0x40\n      swap1\n      keccak256\n        /* \"contracts/SmashNFT_Marketplace_1.sol\":3590:3614  _idToNFT[_tokenId].owner */\n      0x03\n      add\n      sload\n      sub(shl(0xa0, 0x01), 0x01)\n      and\n        /* \"contracts/SmashNFT_Marketplace_1.sol\":3618:3628  msg.sender */\n      caller\n        /* \"contracts/SmashNFT_Marketplace_1.sol\":3590:3628  _idToNFT[_tokenId].owner == msg.sender */\n      eq\n        /* \"contracts/SmashNFT_Marketplace_1.sol\":3582:3667  require(_idToNFT[_tokenId].owner == msg.sender,\"Only owner Of this Token Can Resell\") */\n      tag_252\n      jumpi\n      mload(0x40)\n      shl(0xe5, 0x461bcd)\n      dup2\n      mstore\n        /* \"#utility.yul\":7491:7493   */\n      0x20\n        /* \"contracts/SmashNFT_Marketplace_1.sol\":3582:3667  require(_idToNFT[_tokenId].owner == msg.sender,\"Only owner Of this Token Can Resell\") */\n      0x04\n      dup3\n      add\n        /* \"#utility.yul\":7473:7494   */\n      mstore\n        /* \"#utility.yul\":7530:7532   */\n      0x23\n        /* \"#utility.yul\":7510:7528   */\n      0x24\n      dup3\n      add\n        /* \"#utility.yul\":7503:7533   */\n      mstore\n        /* \"#utility.yul\":7569:7603   */\n      0x4f6e6c79206f776e6572204f66207468697320546f6b656e2043616e20526573\n        /* \"#utility.yul\":7549:7567   */\n      0x44\n      dup3\n      add\n        /* \"#utility.yul\":7542:7604   */\n      mstore\n      shl(0xea, 0x195b1b)\n        /* \"#utility.yul\":7620:7638   */\n      0x64\n      dup3\n      add\n        /* \"#utility.yul\":7613:7646   */\n      mstore\n        /* \"#utility.yul\":7663:7682   */\n      0x84\n      add\n        /* \"contracts/SmashNFT_Marketplace_1.sol\":3582:3667  require(_idToNFT[_tokenId].owner == msg.sender,\"Only owner Of this Token Can Resell\") */\n      tag_164\n        /* \"#utility.yul\":7289:7688   */\n      jump\n        /* \"contracts/SmashNFT_Marketplace_1.sol\":3582:3667  require(_idToNFT[_tokenId].owner == msg.sender,\"Only owner Of this Token Can Resell\") */\n    tag_252:\n        /* \"contracts/SmashNFT_Marketplace_1.sol\":3709:3727  _idToNFT[_tokenId] */\n      0x00\n      dup3\n      dup2\n      mstore\n        /* \"contracts/SmashNFT_Marketplace_1.sol\":3709:3717  _idToNFT */\n      0x08\n        /* \"contracts/SmashNFT_Marketplace_1.sol\":3709:3727  _idToNFT[_tokenId] */\n      0x20\n      mstore\n      0x40\n      swap1\n      keccak256\n        /* \"contracts/SmashNFT_Marketplace_1.sol\":3709:3733  _idToNFT[_tokenId].owner */\n      0x03\n      dup2\n      add\n      sload\n        /* \"contracts/SmashNFT_Marketplace_1.sol\":3680:3705  _idToNFT[_tokenId].seller */\n      0x02\n      swap1\n      swap2\n      add\n      sload\n      sub(shl(0xa0, 0x01), 0x01)\n      swap1\n      dup2\n      and\n        /* \"contracts/SmashNFT_Marketplace_1.sol\":3709:3733  _idToNFT[_tokenId].owner */\n      swap2\n      and\n        /* \"contracts/SmashNFT_Marketplace_1.sol\":3680:3733  _idToNFT[_tokenId].seller != _idToNFT[_tokenId].owner */\n      eq\n        /* \"contracts/SmashNFT_Marketplace_1.sol\":3677:3849  if(_idToNFT[_tokenId].seller != _idToNFT[_tokenId].owner){... */\n      tag_257\n      jumpi\n        /* \"contracts/SmashNFT_Marketplace_1.sol\":3771:3789  _idToNFT[_tokenId] */\n      0x00\n      dup3\n      dup2\n      mstore\n        /* \"contracts/SmashNFT_Marketplace_1.sol\":3771:3779  _idToNFT */\n      0x08\n        /* \"contracts/SmashNFT_Marketplace_1.sol\":3771:3789  _idToNFT[_tokenId] */\n      0x20\n      mstore\n      0x40\n      swap1\n      keccak256\n        /* \"contracts/SmashNFT_Marketplace_1.sol\":3771:3795  _idToNFT[_tokenId].price */\n      0x04\n      add\n      sload\n        /* \"contracts/SmashNFT_Marketplace_1.sol\":3800:3806  _price */\n      dup2\n      swap1\n        /* \"contracts/SmashNFT_Marketplace_1.sol\":3756:3796  ClaculatePrice(_idToNFT[_tokenId].price) */\n      tag_256\n      swap1\n        /* \"contracts/SmashNFT_Marketplace_1.sol\":3756:3770  ClaculatePrice */\n      tag_83\n        /* \"contracts/SmashNFT_Marketplace_1.sol\":3756:3796  ClaculatePrice(_idToNFT[_tokenId].price) */\n      jump\t// in\n    tag_256:\n        /* \"contracts/SmashNFT_Marketplace_1.sol\":3756:3806  ClaculatePrice(_idToNFT[_tokenId].price) >= _price */\n      lt\n      iszero\n        /* \"contracts/SmashNFT_Marketplace_1.sol\":3748:3838  require(ClaculatePrice(_idToNFT[_tokenId].price) >= _price ,\"This Price Is More Than 20%\") */\n      tag_257\n      jumpi\n      mload(0x40)\n      shl(0xe5, 0x461bcd)\n      dup2\n      mstore\n        /* \"#utility.yul\":7895:7897   */\n      0x20\n        /* \"contracts/SmashNFT_Marketplace_1.sol\":3748:3838  require(ClaculatePrice(_idToNFT[_tokenId].price) >= _price ,\"This Price Is More Than 20%\") */\n      0x04\n      dup3\n      add\n        /* \"#utility.yul\":7877:7898   */\n      mstore\n        /* \"#utility.yul\":7934:7936   */\n      0x1b\n        /* \"#utility.yul\":7914:7932   */\n      0x24\n      dup3\n      add\n        /* \"#utility.yul\":7907:7937   */\n      mstore\n        /* \"#utility.yul\":7973:8002   */\n      0x54686973205072696365204973204d6f7265205468616e203230250000000000\n        /* \"#utility.yul\":7953:7971   */\n      0x44\n      dup3\n      add\n        /* \"#utility.yul\":7946:8003   */\n      mstore\n        /* \"#utility.yul\":8020:8038   */\n      0x64\n      add\n        /* \"contracts/SmashNFT_Marketplace_1.sol\":3748:3838  require(ClaculatePrice(_idToNFT[_tokenId].price) >= _price ,\"This Price Is More Than 20%\") */\n      tag_164\n        /* \"#utility.yul\":7693:8044   */\n      jump\n        /* \"contracts/SmashNFT_Marketplace_1.sol\":3748:3838  require(ClaculatePrice(_idToNFT[_tokenId].price) >= _price ,\"This Price Is More Than 20%\") */\n    tag_257:\n        /* \"contracts/SmashNFT_Marketplace_1.sol\":3858:3863  token */\n      sload(0x09)\n        /* \"contracts/SmashNFT_Marketplace_1.sol\":3858:3913  token.transferFrom(msg.sender, address(this), _tokenId) */\n      mload(0x40)\n      shl(0xe0, 0x23b872dd)\n      dup2\n      mstore\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"contracts/SmashNFT_Marketplace_1.sol\":3858:3863  token */\n      swap1\n      swap2\n      and\n      swap1\n        /* \"contracts/SmashNFT_Marketplace_1.sol\":3858:3876  token.transferFrom */\n      0x23b872dd\n      swap1\n        /* \"contracts/SmashNFT_Marketplace_1.sol\":3858:3913  token.transferFrom(msg.sender, address(this), _tokenId) */\n      tag_260\n      swap1\n        /* \"contracts/SmashNFT_Marketplace_1.sol\":3877:3887  msg.sender */\n      caller\n      swap1\n        /* \"contracts/SmashNFT_Marketplace_1.sol\":3897:3901  this */\n      address\n      swap1\n        /* \"contracts/SmashNFT_Marketplace_1.sol\":3904:3912  _tokenId */\n      dup8\n      swap1\n        /* \"contracts/SmashNFT_Marketplace_1.sol\":3858:3913  token.transferFrom(msg.sender, address(this), _tokenId) */\n      0x04\n      add\n      tag_174\n      jump\t// in\n    tag_260:\n      0x00\n      mload(0x40)\n      dup1\n      dup4\n      sub\n      dup2\n      0x00\n      dup8\n      dup1\n      extcodesize\n      iszero\n      dup1\n      iszero\n      tag_261\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_261:\n      pop\n      gas\n      call\n      iszero\n      dup1\n      iszero\n      tag_263\n      jumpi\n      returndatasize\n      0x00\n      dup1\n      returndatacopy\n      revert(0x00, returndatasize)\n    tag_263:\n      pop\n      pop\n      pop\n        /* \"contracts/SmashNFT_Marketplace_1.sol\":3923:3938  NFT storage nft */\n      0x00\n        /* \"contracts/SmashNFT_Marketplace_1.sol\":3941:3959  _idToNFT[_tokenId] */\n      dup4\n      dup2\n      mstore\n        /* \"contracts/SmashNFT_Marketplace_1.sol\":3941:3949  _idToNFT */\n      0x08\n        /* \"contracts/SmashNFT_Marketplace_1.sol\":3941:3959  _idToNFT[_tokenId] */\n      0x20\n      swap1\n      dup2\n      mstore\n      0x40\n      dup1\n      dup4\n      keccak256\n        /* \"contracts/SmashNFT_Marketplace_1.sol\":3969:3979  nft.seller */\n      0x02\n      dup1\n      dup3\n      add\n        /* \"contracts/SmashNFT_Marketplace_1.sol\":3969:4001  nft.seller = payable(msg.sender) */\n      dup1\n      sload\n        /* \"contracts/SmashNFT_Marketplace_1.sol\":3990:4000  msg.sender */\n      caller\n      not(sub(shl(0xa0, 0x01), 0x01))\n        /* \"contracts/SmashNFT_Marketplace_1.sol\":3969:4001  nft.seller = payable(msg.sender) */\n      swap2\n      dup3\n      and\n      dup2\n      or\n      swap1\n      swap3\n      sstore\n        /* \"contracts/SmashNFT_Marketplace_1.sol\":4011:4020  nft.owner */\n      0x03\n      dup5\n      add\n        /* \"contracts/SmashNFT_Marketplace_1.sol\":4011:4045  nft.owner = payable(address(this)) */\n      dup1\n      sload\n        /* \"contracts/SmashNFT_Marketplace_1.sol\":4039:4043  this */\n      address\n        /* \"contracts/SmashNFT_Marketplace_1.sol\":4011:4045  nft.owner = payable(address(this)) */\n      swap3\n      and\n      swap2\n      swap1\n      swap2\n      or\n      swap1\n      sstore\n        /* \"contracts/SmashNFT_Marketplace_1.sol\":4055:4065  nft.listed */\n      0x05\n      dup4\n      add\n        /* \"contracts/SmashNFT_Marketplace_1.sol\":4055:4073  nft.listed = false */\n      dup1\n      sload\n      not(0xff)\n      and\n      swap1\n      sstore\n        /* \"contracts/SmashNFT_Marketplace_1.sol\":4083:4092  nft.price */\n      0x04\n      dup4\n      add\n        /* \"contracts/SmashNFT_Marketplace_1.sol\":4083:4101  nft.price = _price */\n      dup9\n      swap1\n      sstore\n        /* \"contracts/SmashNFT_Marketplace_1.sol\":4111:4116  check */\n      0x07\n        /* \"contracts/SmashNFT_Marketplace_1.sol\":4111:4126  check[_tokenId] */\n      swap1\n      swap5\n      mstore\n      swap2\n      swap1\n      swap4\n      keccak256\n        /* \"contracts/SmashNFT_Marketplace_1.sol\":4111:4148  check[_tokenId]._address = msg.sender */\n      dup1\n      sload\n      not(sub(shl(0xa8, 0x01), 0x0100))\n      and\n        /* \"contracts/SmashNFT_Marketplace_1.sol\":3969:4001  nft.seller = payable(msg.sender) */\n      0x0100\n        /* \"contracts/SmashNFT_Marketplace_1.sol\":4111:4148  check[_tokenId]._address = msg.sender */\n      swap1\n      swap4\n      mul\n      swap3\n      swap1\n      swap3\n      or\n      swap1\n      swap2\n      sstore\n        /* \"contracts/SmashNFT_Marketplace_1.sol\":3941:3959  _idToNFT[_tokenId] */\n      swap1\n      swap2\n      pop\n        /* \"contracts/SmashNFT_Marketplace_1.sol\":4158:4179  _nftsSold.decrement() */\n      tag_264\n      swap1\n        /* \"contracts/SmashNFT_Marketplace_1.sol\":4158:4177  _nftsSold.decrement */\n      tag_265\n        /* \"contracts/SmashNFT_Marketplace_1.sol\":4158:4179  _nftsSold.decrement() */\n      jump\t// in\n    tag_264:\n        /* \"contracts/SmashNFT_Marketplace_1.sol\":4204:4217  MinterAddress */\n      sload(0x0a)\n        /* \"contracts/SmashNFT_Marketplace_1.sol\":4194:4263  NFTListed(MinterAddress, _tokenId, msg.sender, address(this), _price) */\n      mload(0x40)\n      0xa0c6c0d02d86fdacecbaa5fdf5894bab204e31a778250474108540733a9b8d19\n      swap2\n      tag_266\n      swap2\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"contracts/SmashNFT_Marketplace_1.sol\":4204:4217  MinterAddress */\n      swap1\n      swap2\n      and\n      swap1\n        /* \"contracts/SmashNFT_Marketplace_1.sol\":4219:4227  _tokenId */\n      dup7\n      swap1\n        /* \"contracts/SmashNFT_Marketplace_1.sol\":4229:4239  msg.sender */\n      caller\n      swap1\n        /* \"contracts/SmashNFT_Marketplace_1.sol\":4249:4253  this */\n      address\n      swap1\n        /* \"contracts/SmashNFT_Marketplace_1.sol\":4256:4262  _price */\n      dup9\n      swap1\n        /* \"contracts/SmashNFT_Marketplace_1.sol\":4194:4263  NFTListed(MinterAddress, _tokenId, msg.sender, address(this), _price) */\n      tag_183\n      jump\t// in\n    tag_266:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      log1\n        /* \"contracts/SmashNFT_Marketplace_1.sol\":3511:4270  {... */\n      pop\n        /* \"@openzeppelin/contracts/security/ReentrancyGuard.sol\":2303:2323  _nonReentrantAfter() */\n      tag_246\n        /* \"@openzeppelin/contracts/security/ReentrancyGuard.sol\":1716:1717  1 */\n      0x01\n        /* \"@openzeppelin/contracts/security/ReentrancyGuard.sol\":2809:2816  _status */\n      0x00\n        /* \"@openzeppelin/contracts/security/ReentrancyGuard.sol\":2809:2831  _status = _NOT_ENTERED */\n      sstore\n        /* \"@openzeppelin/contracts/security/ReentrancyGuard.sol\":2629:2838  function _nonReentrantAfter() private {... */\n      jump\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2081:2279  function transferOwnership(address newOwner) public virtual onlyOwner {... */\n    tag_100:\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1094:1107  _checkOwner() */\n      tag_269\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1094:1105  _checkOwner */\n      tag_188\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1094:1107  _checkOwner() */\n      jump\t// in\n    tag_269:\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2169:2191  newOwner != address(0) */\n      dup2\n      and\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2161:2234  require(newOwner != address(0), \"Ownable: new owner is the zero address\") */\n      tag_271\n      jumpi\n      mload(0x40)\n      shl(0xe5, 0x461bcd)\n      dup2\n      mstore\n        /* \"#utility.yul\":8251:8253   */\n      0x20\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2161:2234  require(newOwner != address(0), \"Ownable: new owner is the zero address\") */\n      0x04\n      dup3\n      add\n        /* \"#utility.yul\":8233:8254   */\n      mstore\n        /* \"#utility.yul\":8290:8292   */\n      0x26\n        /* \"#utility.yul\":8270:8288   */\n      0x24\n      dup3\n      add\n        /* \"#utility.yul\":8263:8293   */\n      mstore\n        /* \"#utility.yul\":8329:8363   */\n      0x4f776e61626c653a206e6577206f776e657220697320746865207a65726f2061\n        /* \"#utility.yul\":8309:8327   */\n      0x44\n      dup3\n      add\n        /* \"#utility.yul\":8302:8364   */\n      mstore\n      shl(0xd0, 0x646472657373)\n        /* \"#utility.yul\":8380:8398   */\n      0x64\n      dup3\n      add\n        /* \"#utility.yul\":8373:8409   */\n      mstore\n        /* \"#utility.yul\":8426:8445   */\n      0x84\n      add\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2161:2234  require(newOwner != address(0), \"Ownable: new owner is the zero address\") */\n      tag_164\n        /* \"#utility.yul\":8049:8451   */\n      jump\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2161:2234  require(newOwner != address(0), \"Ownable: new owner is the zero address\") */\n    tag_271:\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2244:2272  _transferOwnership(newOwner) */\n      tag_184\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2263:2271  newOwner */\n      dup2\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2244:2262  _transferOwnership */\n      tag_204\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2244:2272  _transferOwnership(newOwner) */\n      jump\t// in\n        /* \"@openzeppelin/contracts/security/ReentrancyGuard.sol\":2336:2623  function _nonReentrantBefore() private {... */\n    tag_161:\n        /* \"@openzeppelin/contracts/security/ReentrancyGuard.sol\":1759:1760  2 */\n      0x02\n        /* \"@openzeppelin/contracts/security/ReentrancyGuard.sol\":2468:2475  _status */\n      sload(0x00)\n        /* \"@openzeppelin/contracts/security/ReentrancyGuard.sol\":2468:2487  _status != _ENTERED */\n      sub\n        /* \"@openzeppelin/contracts/security/ReentrancyGuard.sol\":2460:2523  require(_status != _ENTERED, \"ReentrancyGuard: reentrant call\") */\n      tag_277\n      jumpi\n      mload(0x40)\n      shl(0xe5, 0x461bcd)\n      dup2\n      mstore\n        /* \"#utility.yul\":8658:8660   */\n      0x20\n        /* \"@openzeppelin/contracts/security/ReentrancyGuard.sol\":2460:2523  require(_status != _ENTERED, \"ReentrancyGuard: reentrant call\") */\n      0x04\n      dup3\n      add\n        /* \"#utility.yul\":8640:8661   */\n      mstore\n        /* \"#utility.yul\":8697:8699   */\n      0x1f\n        /* \"#utility.yul\":8677:8695   */\n      0x24\n      dup3\n      add\n        /* \"#utility.yul\":8670:8700   */\n      mstore\n        /* \"#utility.yul\":8736:8769   */\n      0x5265656e7472616e637947756172643a207265656e7472616e742063616c6c00\n        /* \"#utility.yul\":8716:8734   */\n      0x44\n      dup3\n      add\n        /* \"#utility.yul\":8709:8770   */\n      mstore\n        /* \"#utility.yul\":8787:8805   */\n      0x64\n      add\n        /* \"@openzeppelin/contracts/security/ReentrancyGuard.sol\":2460:2523  require(_status != _ENTERED, \"ReentrancyGuard: reentrant call\") */\n      tag_164\n        /* \"#utility.yul\":8456:8811   */\n      jump\n        /* \"@openzeppelin/contracts/security/ReentrancyGuard.sol\":2460:2523  require(_status != _ENTERED, \"ReentrancyGuard: reentrant call\") */\n    tag_277:\n        /* \"@openzeppelin/contracts/security/ReentrancyGuard.sol\":1759:1760  2 */\n      0x02\n        /* \"@openzeppelin/contracts/security/ReentrancyGuard.sol\":2598:2605  _status */\n      0x00\n        /* \"@openzeppelin/contracts/security/ReentrancyGuard.sol\":2598:2616  _status = _ENTERED */\n      sstore\n        /* \"@openzeppelin/contracts/security/ReentrancyGuard.sol\":2336:2623  function _nonReentrantBefore() private {... */\n      jump\t// out\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1359:1489  function _checkOwner() internal view virtual {... */\n    tag_188:\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1273:1279  _owner */\n      and(sub(shl(0xa0, 0x01), 0x01), sload(0x01))\n        /* \"@openzeppelin/contracts/utils/Context.sol\":719:729  msg.sender */\n      caller\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1422:1445  owner() == _msgSender() */\n      eq\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1414:1482  require(owner() == _msgSender(), \"Ownable: caller is not the owner\") */\n      tag_203\n      jumpi\n      mload(0x40)\n      shl(0xe5, 0x461bcd)\n      dup2\n      mstore\n        /* \"#utility.yul\":9018:9020   */\n      0x20\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1414:1482  require(owner() == _msgSender(), \"Ownable: caller is not the owner\") */\n      0x04\n      dup3\n      add\n        /* \"#utility.yul\":9000:9021   */\n      dup2\n      swap1\n      mstore\n        /* \"#utility.yul\":9037:9055   */\n      0x24\n      dup3\n      add\n        /* \"#utility.yul\":9030:9060   */\n      mstore\n        /* \"#utility.yul\":9096:9130   */\n      0x4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e6572\n        /* \"#utility.yul\":9076:9094   */\n      0x44\n      dup3\n      add\n        /* \"#utility.yul\":9069:9131   */\n      mstore\n        /* \"#utility.yul\":9148:9166   */\n      0x64\n      add\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1414:1482  require(owner() == _msgSender(), \"Ownable: caller is not the owner\") */\n      tag_164\n        /* \"#utility.yul\":8816:9172   */\n      jump\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2433:2620  function _transferOwnership(address newOwner) internal virtual {... */\n    tag_204:\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2525:2531  _owner */\n      0x01\n      dup1\n      sload\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2541:2558  _owner = newOwner */\n      dup4\n      dup2\n      and\n      not(sub(shl(0xa0, 0x01), 0x01))\n      dup4\n      and\n      dup2\n      or\n      swap1\n      swap4\n      sstore\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2573:2613  OwnershipTransferred(oldOwner, newOwner) */\n      mload(0x40)\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2525:2531  _owner */\n      swap2\n      and\n      swap2\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2541:2558  _owner = newOwner */\n      swap1\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2525:2531  _owner */\n      dup3\n      swap1\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2573:2613  OwnershipTransferred(oldOwner, newOwner) */\n      0x8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e0\n      swap1\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2506:2522  address oldOwner */\n      0x00\n      swap1\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2573:2613  OwnershipTransferred(oldOwner, newOwner) */\n      log3\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2496:2620  {... */\n      pop\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2433:2620  function _transferOwnership(address newOwner) internal virtual {... */\n      pop\n      jump\t// out\n        /* \"@openzeppelin/contracts/utils/Counters.sol\":1074:1303  function decrement(Counter storage counter) internal {... */\n    tag_265:\n        /* \"@openzeppelin/contracts/utils/Counters.sol\":1153:1167  counter._value */\n      dup1\n      sload\n        /* \"@openzeppelin/contracts/utils/Counters.sol\":1185:1194  value > 0 */\n      dup1\n        /* \"@openzeppelin/contracts/utils/Counters.sol\":1177:1226  require(value > 0, \"Counter: decrement overflow\") */\n      tag_291\n      jumpi\n      mload(0x40)\n      shl(0xe5, 0x461bcd)\n      dup2\n      mstore\n        /* \"#utility.yul\":9379:9381   */\n      0x20\n        /* \"@openzeppelin/contracts/utils/Counters.sol\":1177:1226  require(value > 0, \"Counter: decrement overflow\") */\n      0x04\n      dup3\n      add\n        /* \"#utility.yul\":9361:9382   */\n      mstore\n        /* \"#utility.yul\":9418:9420   */\n      0x1b\n        /* \"#utility.yul\":9398:9416   */\n      0x24\n      dup3\n      add\n        /* \"#utility.yul\":9391:9421   */\n      mstore\n        /* \"#utility.yul\":9457:9486   */\n      0x436f756e7465723a2064656372656d656e74206f766572666c6f770000000000\n        /* \"#utility.yul\":9437:9455   */\n      0x44\n      dup3\n      add\n        /* \"#utility.yul\":9430:9487   */\n      mstore\n        /* \"#utility.yul\":9504:9522   */\n      0x64\n      add\n        /* \"@openzeppelin/contracts/utils/Counters.sol\":1177:1226  require(value > 0, \"Counter: decrement overflow\") */\n      tag_164\n        /* \"#utility.yul\":9177:9528   */\n      jump\n        /* \"@openzeppelin/contracts/utils/Counters.sol\":1177:1226  require(value > 0, \"Counter: decrement overflow\") */\n    tag_291:\n      not(0x00)\n        /* \"@openzeppelin/contracts/utils/Counters.sol\":1277:1286  value - 1 */\n      add\n        /* \"@openzeppelin/contracts/utils/Counters.sol\":1260:1286  counter._value = value - 1 */\n      swap1\n      sstore\n        /* \"@openzeppelin/contracts/utils/Counters.sol\":1074:1303  function decrement(Counter storage counter) internal {... */\n      jump\t// out\n    tag_119:\n      0x40\n      dup1\n      mload\n      0xc0\n      dup2\n      add\n      dup3\n      mstore\n      0x00\n      dup1\n      dup3\n      mstore\n      0x20\n      dup3\n      add\n      dup2\n      swap1\n      mstore\n      swap2\n      dup2\n      add\n      dup3\n      swap1\n      mstore\n      0x60\n      dup2\n      add\n      dup3\n      swap1\n      mstore\n      0x80\n      dup2\n      add\n      dup3\n      swap1\n      mstore\n      0xa0\n      dup2\n      add\n      swap2\n      swap1\n      swap2\n      mstore\n      swap1\n      jump\t// out\n        /* \"#utility.yul\":14:1174   */\n    tag_27:\n        /* \"#utility.yul\":227:229   */\n      0x20\n        /* \"#utility.yul\":279:300   */\n      dup1\n      dup3\n      mstore\n        /* \"#utility.yul\":349:362   */\n      dup3\n      mload\n        /* \"#utility.yul\":252:270   */\n      dup3\n      dup3\n      add\n        /* \"#utility.yul\":371:393   */\n      dup2\n      swap1\n      mstore\n        /* \"#utility.yul\":198:202   */\n      0x00\n      swap2\n        /* \"#utility.yul\":227:229   */\n      swap1\n        /* \"#utility.yul\":412:414   */\n      0x40\n      swap1\n        /* \"#utility.yul\":430:448   */\n      dup2\n      dup6\n      add\n      swap1\n        /* \"#utility.yul\":471:486   */\n      dup7\n      dup5\n      add\n        /* \"#utility.yul\":198:202   */\n      dup6\n        /* \"#utility.yul\":514:1148   */\n    tag_298:\n        /* \"#utility.yul\":528:534   */\n      dup3\n        /* \"#utility.yul\":525:526   */\n      dup2\n        /* \"#utility.yul\":522:535   */\n      lt\n        /* \"#utility.yul\":514:1148   */\n      iszero\n      tag_300\n      jumpi\n        /* \"#utility.yul\":587:600   */\n      dup2\n      mload\n        /* \"#utility.yul\":671:680   */\n      dup1\n      mload\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"#utility.yul\":667:685   */\n      swap1\n      dup2\n      and\n        /* \"#utility.yul\":655:686   */\n      dup7\n      mstore\n        /* \"#utility.yul\":726:737   */\n      dup8\n      dup3\n      add\n        /* \"#utility.yul\":720:738   */\n      mload\n        /* \"#utility.yul\":706:718   */\n      dup9\n      dup8\n      add\n        /* \"#utility.yul\":699:739   */\n      mstore\n        /* \"#utility.yul\":783:794   */\n      dup7\n      dup3\n      add\n        /* \"#utility.yul\":777:795   */\n      mload\n        /* \"#utility.yul\":773:800   */\n      dup2\n      and\n        /* \"#utility.yul\":759:771   */\n      dup8\n      dup8\n      add\n        /* \"#utility.yul\":752:801   */\n      mstore\n        /* \"#utility.yul\":824:828   */\n      0x60\n        /* \"#utility.yul\":872:883   */\n      dup1\n      dup4\n      add\n        /* \"#utility.yul\":866:884   */\n      mload\n        /* \"#utility.yul\":862:889   */\n      swap1\n      swap2\n      and\n        /* \"#utility.yul\":848:860   */\n      swap1\n      dup7\n      add\n        /* \"#utility.yul\":841:890   */\n      mstore\n        /* \"#utility.yul\":913:917   */\n      0x80\n        /* \"#utility.yul\":957:968   */\n      dup1\n      dup3\n      add\n        /* \"#utility.yul\":951:969   */\n      mload\n        /* \"#utility.yul\":937:949   */\n      swap1\n      dup7\n      add\n        /* \"#utility.yul\":930:970   */\n      mstore\n        /* \"#utility.yul\":631:634   */\n      0xa0\n        /* \"#utility.yul\":1051:1062   */\n      swap1\n      dup2\n      add\n        /* \"#utility.yul\":1045:1063   */\n      mload\n        /* \"#utility.yul\":1038:1064   */\n      iszero\n        /* \"#utility.yul\":1031:1065   */\n      iszero\n        /* \"#utility.yul\":1017:1029   */\n      swap1\n      dup6\n      add\n        /* \"#utility.yul\":1010:1066   */\n      mstore\n        /* \"#utility.yul\":1095:1099   */\n      0xc0\n        /* \"#utility.yul\":1086:1100   */\n      swap1\n      swap4\n      add\n      swap3\n        /* \"#utility.yul\":1123:1138   */\n      swap1\n      dup6\n      add\n      swap1\n        /* \"#utility.yul\":640:641   */\n      0x01\n        /* \"#utility.yul\":543:552   */\n      add\n        /* \"#utility.yul\":514:1148   */\n      jump(tag_298)\n    tag_300:\n      pop\n        /* \"#utility.yul\":1165:1168   */\n      swap2\n      swap8\n        /* \"#utility.yul\":14:1174   */\n      swap7\n      pop\n      pop\n      pop\n      pop\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":1179:1359   */\n    tag_34:\n        /* \"#utility.yul\":1238:1244   */\n      0x00\n        /* \"#utility.yul\":1291:1293   */\n      0x20\n        /* \"#utility.yul\":1279:1288   */\n      dup3\n        /* \"#utility.yul\":1270:1277   */\n      dup5\n        /* \"#utility.yul\":1266:1289   */\n      sub\n        /* \"#utility.yul\":1262:1294   */\n      slt\n        /* \"#utility.yul\":1259:1311   */\n      iszero\n      tag_302\n      jumpi\n        /* \"#utility.yul\":1307:1308   */\n      0x00\n        /* \"#utility.yul\":1304:1305   */\n      dup1\n        /* \"#utility.yul\":1297:1309   */\n      revert\n        /* \"#utility.yul\":1259:1311   */\n    tag_302:\n      pop\n        /* \"#utility.yul\":1330:1353   */\n      calldataload\n      swap2\n        /* \"#utility.yul\":1179:1359   */\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":2043:2291   */\n    tag_91:\n        /* \"#utility.yul\":2111:2117   */\n      0x00\n        /* \"#utility.yul\":2119:2125   */\n      dup1\n        /* \"#utility.yul\":2172:2174   */\n      0x40\n        /* \"#utility.yul\":2160:2169   */\n      dup4\n        /* \"#utility.yul\":2151:2158   */\n      dup6\n        /* \"#utility.yul\":2147:2170   */\n      sub\n        /* \"#utility.yul\":2143:2175   */\n      slt\n        /* \"#utility.yul\":2140:2192   */\n      iszero\n      tag_307\n      jumpi\n        /* \"#utility.yul\":2188:2189   */\n      0x00\n        /* \"#utility.yul\":2185:2186   */\n      dup1\n        /* \"#utility.yul\":2178:2190   */\n      revert\n        /* \"#utility.yul\":2140:2192   */\n    tag_307:\n      pop\n      pop\n        /* \"#utility.yul\":2211:2234   */\n      dup1\n      calldataload\n      swap3\n        /* \"#utility.yul\":2281:2283   */\n      0x20\n        /* \"#utility.yul\":2266:2284   */\n      swap1\n      swap2\n      add\n        /* \"#utility.yul\":2253:2285   */\n      calldataload\n      swap2\n      pop\n        /* \"#utility.yul\":2043:2291   */\n      jump\t// out\n        /* \"#utility.yul\":2296:2582   */\n    tag_99:\n        /* \"#utility.yul\":2355:2361   */\n      0x00\n        /* \"#utility.yul\":2408:2410   */\n      0x20\n        /* \"#utility.yul\":2396:2405   */\n      dup3\n        /* \"#utility.yul\":2387:2394   */\n      dup5\n        /* \"#utility.yul\":2383:2406   */\n      sub\n        /* \"#utility.yul\":2379:2411   */\n      slt\n        /* \"#utility.yul\":2376:2428   */\n      iszero\n      tag_309\n      jumpi\n        /* \"#utility.yul\":2424:2425   */\n      0x00\n        /* \"#utility.yul\":2421:2422   */\n      dup1\n        /* \"#utility.yul\":2414:2426   */\n      revert\n        /* \"#utility.yul\":2376:2428   */\n    tag_309:\n        /* \"#utility.yul\":2450:2473   */\n      dup2\n      calldataload\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"#utility.yul\":2502:2533   */\n      dup2\n      and\n        /* \"#utility.yul\":2492:2534   */\n      dup2\n      eq\n        /* \"#utility.yul\":2482:2552   */\n      tag_310\n      jumpi\n        /* \"#utility.yul\":2548:2549   */\n      0x00\n        /* \"#utility.yul\":2545:2546   */\n      dup1\n        /* \"#utility.yul\":2538:2550   */\n      revert\n        /* \"#utility.yul\":2482:2552   */\n    tag_310:\n        /* \"#utility.yul\":2571:2576   */\n      swap4\n        /* \"#utility.yul\":2296:2582   */\n      swap3\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":2587:2714   */\n    tag_295:\n        /* \"#utility.yul\":2648:2658   */\n      0x4e487b71\n        /* \"#utility.yul\":2643:2646   */\n      0xe0\n        /* \"#utility.yul\":2639:2659   */\n      shl\n        /* \"#utility.yul\":2636:2637   */\n      0x00\n        /* \"#utility.yul\":2629:2660   */\n      mstore\n        /* \"#utility.yul\":2679:2683   */\n      0x11\n        /* \"#utility.yul\":2676:2677   */\n      0x04\n        /* \"#utility.yul\":2669:2684   */\n      mstore\n        /* \"#utility.yul\":2703:2707   */\n      0x24\n        /* \"#utility.yul\":2700:2701   */\n      0x00\n        /* \"#utility.yul\":2693:2708   */\n      revert\n        /* \"#utility.yul\":2719:2844   */\n    tag_108:\n        /* \"#utility.yul\":2784:2793   */\n      dup1\n      dup3\n      add\n        /* \"#utility.yul\":2805:2815   */\n      dup1\n      dup3\n      gt\n        /* \"#utility.yul\":2802:2838   */\n      iszero\n      tag_314\n      jumpi\n        /* \"#utility.yul\":2818:2836   */\n      tag_314\n      tag_295\n      jump\t// in\n    tag_314:\n        /* \"#utility.yul\":2719:2844   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":2849:2984   */\n    tag_111:\n        /* \"#utility.yul\":2888:2891   */\n      0x00\n        /* \"#utility.yul\":2909:2926   */\n      0x01\n      dup3\n      add\n        /* \"#utility.yul\":2906:2949   */\n      tag_317\n      jumpi\n        /* \"#utility.yul\":2929:2947   */\n      tag_317\n      tag_295\n      jump\t// in\n    tag_317:\n      pop\n        /* \"#utility.yul\":2976:2977   */\n      0x01\n        /* \"#utility.yul\":2965:2978   */\n      add\n      swap1\n        /* \"#utility.yul\":2849:2984   */\n      jump\t// out\n        /* \"#utility.yul\":2989:3116   */\n    tag_115:\n        /* \"#utility.yul\":3050:3060   */\n      0x4e487b71\n        /* \"#utility.yul\":3045:3048   */\n      0xe0\n        /* \"#utility.yul\":3041:3061   */\n      shl\n        /* \"#utility.yul\":3038:3039   */\n      0x00\n        /* \"#utility.yul\":3031:3062   */\n      mstore\n        /* \"#utility.yul\":3081:3085   */\n      0x41\n        /* \"#utility.yul\":3078:3079   */\n      0x04\n        /* \"#utility.yul\":3071:3086   */\n      mstore\n        /* \"#utility.yul\":3105:3109   */\n      0x24\n        /* \"#utility.yul\":3102:3103   */\n      0x00\n        /* \"#utility.yul\":3095:3110   */\n      revert\n        /* \"#utility.yul\":3121:3248   */\n    tag_128:\n        /* \"#utility.yul\":3182:3192   */\n      0x4e487b71\n        /* \"#utility.yul\":3177:3180   */\n      0xe0\n        /* \"#utility.yul\":3173:3193   */\n      shl\n        /* \"#utility.yul\":3170:3171   */\n      0x00\n        /* \"#utility.yul\":3163:3194   */\n      mstore\n        /* \"#utility.yul\":3213:3217   */\n      0x32\n        /* \"#utility.yul\":3210:3211   */\n      0x04\n        /* \"#utility.yul\":3203:3218   */\n      mstore\n        /* \"#utility.yul\":3237:3241   */\n      0x24\n        /* \"#utility.yul\":3234:3235   */\n      0x00\n        /* \"#utility.yul\":3227:3242   */\n      revert\n        /* \"#utility.yul\":4020:4148   */\n    tag_170:\n        /* \"#utility.yul\":4087:4096   */\n      dup2\n      dup2\n      sub\n        /* \"#utility.yul\":4108:4119   */\n      dup2\n      dup2\n      gt\n        /* \"#utility.yul\":4105:4142   */\n      iszero\n      tag_314\n      jumpi\n        /* \"#utility.yul\":4122:4140   */\n      tag_314\n      tag_295\n      jump\t// in\n        /* \"#utility.yul\":4153:4536   */\n    tag_174:\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"#utility.yul\":4419:4434   */\n      swap4\n      dup5\n      and\n        /* \"#utility.yul\":4401:4435   */\n      dup2\n      mstore\n        /* \"#utility.yul\":4471:4486   */\n      swap2\n      swap1\n      swap3\n      and\n        /* \"#utility.yul\":4466:4468   */\n      0x20\n        /* \"#utility.yul\":4451:4469   */\n      dup3\n      add\n        /* \"#utility.yul\":4444:4487   */\n      mstore\n        /* \"#utility.yul\":4518:4520   */\n      0x40\n        /* \"#utility.yul\":4503:4521   */\n      dup2\n      add\n        /* \"#utility.yul\":4496:4530   */\n      swap2\n      swap1\n      swap2\n      mstore\n        /* \"#utility.yul\":4351:4353   */\n      0x60\n        /* \"#utility.yul\":4336:4354   */\n      add\n      swap1\n        /* \"#utility.yul\":4153:4536   */\n      jump\t// out\n        /* \"#utility.yul\":4541:5085   */\n    tag_183:\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"#utility.yul\":4872:4887   */\n      swap6\n      dup7\n      and\n        /* \"#utility.yul\":4854:4888   */\n      dup2\n      mstore\n        /* \"#utility.yul\":4919:4921   */\n      0x20\n        /* \"#utility.yul\":4904:4922   */\n      dup2\n      add\n        /* \"#utility.yul\":4897:4931   */\n      swap5\n      swap1\n      swap5\n      mstore\n        /* \"#utility.yul\":4967:4982   */\n      swap2\n      dup5\n      and\n        /* \"#utility.yul\":4962:4964   */\n      0x40\n        /* \"#utility.yul\":4947:4965   */\n      dup5\n      add\n        /* \"#utility.yul\":4940:4983   */\n      mstore\n        /* \"#utility.yul\":5019:5034   */\n      swap1\n      swap3\n      and\n        /* \"#utility.yul\":5014:5016   */\n      0x60\n        /* \"#utility.yul\":4999:5017   */\n      dup3\n      add\n        /* \"#utility.yul\":4992:5035   */\n      mstore\n        /* \"#utility.yul\":5066:5069   */\n      0x80\n        /* \"#utility.yul\":5051:5070   */\n      dup2\n      add\n        /* \"#utility.yul\":5044:5079   */\n      swap2\n      swap1\n      swap2\n      mstore\n        /* \"#utility.yul\":4803:4806   */\n      0xa0\n        /* \"#utility.yul\":4788:4807   */\n      add\n      swap1\n        /* \"#utility.yul\":4541:5085   */\n      jump\t// out\n        /* \"#utility.yul\":5820:6037   */\n    tag_228:\n        /* \"#utility.yul\":5860:5861   */\n      0x00\n        /* \"#utility.yul\":5886:5887   */\n      dup3\n        /* \"#utility.yul\":5876:6008   */\n      tag_330\n      jumpi\n        /* \"#utility.yul\":5930:5940   */\n      0x4e487b71\n        /* \"#utility.yul\":5925:5928   */\n      0xe0\n        /* \"#utility.yul\":5921:5941   */\n      shl\n        /* \"#utility.yul\":5918:5919   */\n      0x00\n        /* \"#utility.yul\":5911:5942   */\n      mstore\n        /* \"#utility.yul\":5965:5969   */\n      0x12\n        /* \"#utility.yul\":5962:5963   */\n      0x04\n        /* \"#utility.yul\":5955:5970   */\n      mstore\n        /* \"#utility.yul\":5993:5997   */\n      0x24\n        /* \"#utility.yul\":5990:5991   */\n      0x00\n        /* \"#utility.yul\":5983:5998   */\n      revert\n        /* \"#utility.yul\":5876:6008   */\n    tag_330:\n      pop\n        /* \"#utility.yul\":6022:6031   */\n      div\n      swap1\n        /* \"#utility.yul\":5820:6037   */\n      jump\t// out\n\n    auxdata: 0xa26469706673582212206583cd1fa2906298c39759a9a7204d8eb863cd8ae99dd4b22122ef66fcb2372864736f6c63430008150033\n}\n",
						"bytecode": {
							"functionDebugData": {
								"@_131": {
									"entryPoint": null,
									"id": 131,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@_23": {
									"entryPoint": null,
									"id": 23,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@_2877": {
									"entryPoint": null,
									"id": 2877,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"@_msgSender_1614": {
									"entryPoint": null,
									"id": 1614,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"@_transferOwnership_111": {
									"entryPoint": 110,
									"id": 111,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"abi_decode_tuple_t_address_fromMemory": {
									"entryPoint": 191,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								}
							},
							"generatedSources": [
								{
									"ast": {
										"nativeSrc": "0:306:14",
										"nodeType": "YulBlock",
										"src": "0:306:14",
										"statements": [
											{
												"nativeSrc": "6:3:14",
												"nodeType": "YulBlock",
												"src": "6:3:14",
												"statements": []
											},
											{
												"body": {
													"nativeSrc": "95:209:14",
													"nodeType": "YulBlock",
													"src": "95:209:14",
													"statements": [
														{
															"body": {
																"nativeSrc": "141:16:14",
																"nodeType": "YulBlock",
																"src": "141:16:14",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nativeSrc": "150:1:14",
																					"nodeType": "YulLiteral",
																					"src": "150:1:14",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "153:1:14",
																					"nodeType": "YulLiteral",
																					"src": "153:1:14",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nativeSrc": "143:6:14",
																				"nodeType": "YulIdentifier",
																				"src": "143:6:14"
																			},
																			"nativeSrc": "143:12:14",
																			"nodeType": "YulFunctionCall",
																			"src": "143:12:14"
																		},
																		"nativeSrc": "143:12:14",
																		"nodeType": "YulExpressionStatement",
																		"src": "143:12:14"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nativeSrc": "116:7:14",
																				"nodeType": "YulIdentifier",
																				"src": "116:7:14"
																			},
																			{
																				"name": "headStart",
																				"nativeSrc": "125:9:14",
																				"nodeType": "YulIdentifier",
																				"src": "125:9:14"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "112:3:14",
																			"nodeType": "YulIdentifier",
																			"src": "112:3:14"
																		},
																		"nativeSrc": "112:23:14",
																		"nodeType": "YulFunctionCall",
																		"src": "112:23:14"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "137:2:14",
																		"nodeType": "YulLiteral",
																		"src": "137:2:14",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nativeSrc": "108:3:14",
																	"nodeType": "YulIdentifier",
																	"src": "108:3:14"
																},
																"nativeSrc": "108:32:14",
																"nodeType": "YulFunctionCall",
																"src": "108:32:14"
															},
															"nativeSrc": "105:52:14",
															"nodeType": "YulIf",
															"src": "105:52:14"
														},
														{
															"nativeSrc": "166:29:14",
															"nodeType": "YulVariableDeclaration",
															"src": "166:29:14",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "185:9:14",
																		"nodeType": "YulIdentifier",
																		"src": "185:9:14"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nativeSrc": "179:5:14",
																	"nodeType": "YulIdentifier",
																	"src": "179:5:14"
																},
																"nativeSrc": "179:16:14",
																"nodeType": "YulFunctionCall",
																"src": "179:16:14"
															},
															"variables": [
																{
																	"name": "value",
																	"nativeSrc": "170:5:14",
																	"nodeType": "YulTypedName",
																	"src": "170:5:14",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nativeSrc": "258:16:14",
																"nodeType": "YulBlock",
																"src": "258:16:14",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nativeSrc": "267:1:14",
																					"nodeType": "YulLiteral",
																					"src": "267:1:14",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "270:1:14",
																					"nodeType": "YulLiteral",
																					"src": "270:1:14",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nativeSrc": "260:6:14",
																				"nodeType": "YulIdentifier",
																				"src": "260:6:14"
																			},
																			"nativeSrc": "260:12:14",
																			"nodeType": "YulFunctionCall",
																			"src": "260:12:14"
																		},
																		"nativeSrc": "260:12:14",
																		"nodeType": "YulExpressionStatement",
																		"src": "260:12:14"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nativeSrc": "217:5:14",
																				"nodeType": "YulIdentifier",
																				"src": "217:5:14"
																			},
																			{
																				"arguments": [
																					{
																						"name": "value",
																						"nativeSrc": "228:5:14",
																						"nodeType": "YulIdentifier",
																						"src": "228:5:14"
																					},
																					{
																						"arguments": [
																							{
																								"arguments": [
																									{
																										"kind": "number",
																										"nativeSrc": "243:3:14",
																										"nodeType": "YulLiteral",
																										"src": "243:3:14",
																										"type": "",
																										"value": "160"
																									},
																									{
																										"kind": "number",
																										"nativeSrc": "248:1:14",
																										"nodeType": "YulLiteral",
																										"src": "248:1:14",
																										"type": "",
																										"value": "1"
																									}
																								],
																								"functionName": {
																									"name": "shl",
																									"nativeSrc": "239:3:14",
																									"nodeType": "YulIdentifier",
																									"src": "239:3:14"
																								},
																								"nativeSrc": "239:11:14",
																								"nodeType": "YulFunctionCall",
																								"src": "239:11:14"
																							},
																							{
																								"kind": "number",
																								"nativeSrc": "252:1:14",
																								"nodeType": "YulLiteral",
																								"src": "252:1:14",
																								"type": "",
																								"value": "1"
																							}
																						],
																						"functionName": {
																							"name": "sub",
																							"nativeSrc": "235:3:14",
																							"nodeType": "YulIdentifier",
																							"src": "235:3:14"
																						},
																						"nativeSrc": "235:19:14",
																						"nodeType": "YulFunctionCall",
																						"src": "235:19:14"
																					}
																				],
																				"functionName": {
																					"name": "and",
																					"nativeSrc": "224:3:14",
																					"nodeType": "YulIdentifier",
																					"src": "224:3:14"
																				},
																				"nativeSrc": "224:31:14",
																				"nodeType": "YulFunctionCall",
																				"src": "224:31:14"
																			}
																		],
																		"functionName": {
																			"name": "eq",
																			"nativeSrc": "214:2:14",
																			"nodeType": "YulIdentifier",
																			"src": "214:2:14"
																		},
																		"nativeSrc": "214:42:14",
																		"nodeType": "YulFunctionCall",
																		"src": "214:42:14"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nativeSrc": "207:6:14",
																	"nodeType": "YulIdentifier",
																	"src": "207:6:14"
																},
																"nativeSrc": "207:50:14",
																"nodeType": "YulFunctionCall",
																"src": "207:50:14"
															},
															"nativeSrc": "204:70:14",
															"nodeType": "YulIf",
															"src": "204:70:14"
														},
														{
															"nativeSrc": "283:15:14",
															"nodeType": "YulAssignment",
															"src": "283:15:14",
															"value": {
																"name": "value",
																"nativeSrc": "293:5:14",
																"nodeType": "YulIdentifier",
																"src": "293:5:14"
															},
															"variableNames": [
																{
																	"name": "value0",
																	"nativeSrc": "283:6:14",
																	"nodeType": "YulIdentifier",
																	"src": "283:6:14"
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_address_fromMemory",
												"nativeSrc": "14:290:14",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "61:9:14",
														"nodeType": "YulTypedName",
														"src": "61:9:14",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nativeSrc": "72:7:14",
														"nodeType": "YulTypedName",
														"src": "72:7:14",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nativeSrc": "84:6:14",
														"nodeType": "YulTypedName",
														"src": "84:6:14",
														"type": ""
													}
												],
												"src": "14:290:14"
											}
										]
									},
									"contents": "{\n    { }\n    function abi_decode_tuple_t_address_fromMemory(headStart, dataEnd) -> value0\n    {\n        if slt(sub(dataEnd, headStart), 32) { revert(0, 0) }\n        let value := mload(headStart)\n        if iszero(eq(value, and(value, sub(shl(160, 1), 1)))) { revert(0, 0) }\n        value0 := value\n    }\n}",
									"id": 14,
									"language": "Yul",
									"name": "#utility.yul"
								}
							],
							"linkReferences": {},
							"object": "60806040525f600455348015610013575f80fd5b5060405161166d38038061166d833981016040819052610032916100bf565b60015f5561003f3361006e565b600980546001600160a01b039092166001600160a01b03199283168117909155600a80549092161790556100ec565b600180546001600160a01b038381166001600160a01b0319831681179093556040519116919082907f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e0905f90a35050565b5f602082840312156100cf575f80fd5b81516001600160a01b03811681146100e5575f80fd5b9392505050565b611574806100f95f395ff3fe608060405260043610610105575f3560e01c806373a0c16611610092578063a33f6c6811610062578063a33f6c68146102d5578063d6cbb202146102f4578063e03de05c1461030a578063e47f018a1461031d578063f2fde38b14610330575f80fd5b806373a0c166146102445780637ca7349b146102585780638d6cb3fb146102a45780638da5cb5b146102b8575f80fd5b806331824a49116100d857806331824a491461017f57806336958adb146101955780634e455dbe146101b45780635f72f450146101d3578063715018a614610230575f80fd5b8063047b07bf146101095780631f4cc4db14610133578063243adbdd146101475780632b86ae381461015c575b5f80fd5b348015610114575f80fd5b5061011d61034f565b60405161012a919061135b565b60405180910390f35b34801561013e575f80fd5b5061011d61050c565b61015a6101553660046113e4565b61071b565b005b348015610167575f80fd5b5061017160045481565b60405190815260200161012a565b34801561018a575f80fd5b506002546101719081565b3480156101a0575f80fd5b5061015a6101af3660046113e4565b6109b2565b3480156101bf575f80fd5b5061015a6101ce3660046113e4565b6109bf565b3480156101de575f80fd5b506102116101ed3660046113e4565b60076020525f908152604090205460ff81169061010090046001600160a01b031682565b6040805192151583526001600160a01b0390911660208301520161012a565b34801561023b575f80fd5b5061015a610ae4565b34801561024f575f80fd5b50600454610171565b348015610263575f80fd5b5061028c6102723660046113e4565b60066020525f90815260409020546001600160a01b031681565b6040516001600160a01b03909116815260200161012a565b3480156102af575f80fd5b5061011d610af7565b3480156102c3575f80fd5b506001546001600160a01b031661028c565b3480156102e0575f80fd5b506101716102ef3660046113e4565b610c5c565b3480156102ff575f80fd5b506003546101719081565b61015a6103183660046113fb565b610c7c565b61015a61032b3660046113fb565b610ec9565b34801561033b575f80fd5b5061015a61034a36600461141b565b611159565b60605f61035b60035490565b90505f805b828110156103b8573360085f61037784600161145c565b815260208101919091526040015f20600301546001600160a01b0316036103a657816103a281611475565b9250505b806103b081611475565b915050610360565b505f8167ffffffffffffffff8111156103d3576103d361148d565b60405190808252806020026020018201604052801561040c57816020015b6103f9611327565b8152602001906001900390816103f15790505b5090505f805b84811015610502573360085f61042984600161145c565b815260208101919091526040015f20600301546001600160a01b0316036104f05760085f61045883600161145c565b815260208082019290925260409081015f20815160c08101835281546001600160a01b0390811682526001830154948201949094526002820154841692810192909252600381015490921660608201526004820154608082015260059091015460ff16151560a082015283518490849081106104d6576104d66114a1565b602002602001018190525081806104ec90611475565b9250505b806104fa81611475565b915050610412565b5090949350505050565b60605f61051860035490565b90505f805b828110156105a3573360085f61053484600161145c565b815260208101919091526040015f20600201546001600160a01b031614801561057e575060085f61056683600161145c565b815260208101919091526040015f206005015460ff16155b15610591578161058d81611475565b9250505b8061059b81611475565b91505061051d565b505f8167ffffffffffffffff8111156105be576105be61148d565b6040519080825280602002602001820160405280156105f757816020015b6105e4611327565b8152602001906001900390816105dc5790505b5090505f805b84811015610502573360085f61061484600161145c565b815260208101919091526040015f20600201546001600160a01b031614801561065e575060085f61064683600161145c565b815260208101919091526040015f206005015460ff16155b156107095760085f61067183600161145c565b815260208082019290925260409081015f20815160c08101835281546001600160a01b0390811682526001830154948201949094526002820154841692810192909252600381015490921660608201526004820154608082015260059091015460ff16151560a082015283518490849081106106ef576106ef6114a1565b6020026020010181905250818061070590611475565b9250505b8061071381611475565b9150506105fd565b6107236111cf565b5f81815260086020526040902060048101543410156107985760405162461bcd60e51b815260206004820152602660248201527f4e6f7420656e6f75676820657468657220746f20636f7665722061736b696e6760448201526520707269636560d01b60648201526084015b60405180910390fd5b5f82815260086020526040902060020154336001600160a01b03909116036108025760405162461bcd60e51b815260206004820152601f60248201527f416e206f666665722063616e6e6f742062757920746869732053656c6c657200604482015260640161078f565b5f3390505f600454836004015461081991906114b5565b60028401546040519192506001600160a01b03169082156108fc029083905f818181858888f19350505050158015610853573d5f803e3d5ffd5b5060095460018401546040516323b872dd60e01b81526001600160a01b03909216916323b872dd9161088b91309187916004016114c8565b5f604051808303815f87803b1580156108a2575f80fd5b505af11580156108b4573d5f803e3d5ffd5b5050505f858152600660205260408082205460045491516001600160a01b03909116935081156108fc0292818181858888f193505050501580156108fa573d5f803e3d5ffd5b506003830180546001600160a01b0319166001600160a01b03841617905560058301805460ff1990811660019081179092555f868152600760205260409020805490911682179055600280549091019055600a54600184015460028501546040517f16f1dbd97e6bf646d429ed186cce832f1f7fd9907814293b83181e9970ab7bd29361099b936001600160a01b03918216939092911690879034906114ec565b60405180910390a15050506109af60015f55565b50565b6109ba611226565b600455565b5f8181526007602052604090205461010090046001600160a01b03163314610a215760405162461bcd60e51b815260206004820152601560248201527413db9b1e4813dddb995c8818d85b8810d85b98d95b605a1b604482015260640161078f565b5f8181526007602090815260408083208054600160ff1991821681179092556008909352928190206005018054909216909217905560095490516323b872dd60e01b81526001600160a01b03909116906323b872dd90610a89903090339086906004016114c8565b5f604051808303815f87803b158015610aa0575f80fd5b505af1158015610ab2573d5f803e3d5ffd5b5050505f82815260086020526040902060030180546001600160a01b03191633179055506109af600280546001019055565b610aec611226565b610af55f611280565b565b60605f610b0360035490565b90505f610b0f60025490565b610b1990836114b5565b90505f8167ffffffffffffffff811115610b3557610b3561148d565b604051908082528060200260200182016040528015610b6e57816020015b610b5b611327565b815260200190600190039081610b535790505b5090505f805b848110156105025760085f610b8a83600161145c565b815260208101919091526040015f206005015460ff16610c4a5760085f610bb283600161145c565b815260208082019290925260409081015f20815160c08101835281546001600160a01b0390811682526001830154948201949094526002820154841692810192909252600381015490921660608201526004820154608082015260059091015460ff16151560a08201528351849084908110610c3057610c306114a1565b60200260200101819052508180610c4690611475565b9250505b80610c5481611475565b915050610b74565b5f600581610c6a828561151f565b610c74908561145c565b949350505050565b610c846111cf565b5f8111610cd35760405162461bcd60e51b815260206004820152601c60248201527f5072696365206d757374206265206174206c6561737420312077656900000000604482015260640161078f565b5f8281526007602052604090205460ff1615610d315760405162461bcd60e51b815260206004820152601c60248201527f4f6e6520546f6b656e204944204c6973746564204f6e652054696d6500000000604482015260640161078f565b6009546040516323b872dd60e01b81526001600160a01b03909116906323b872dd90610d65903390309087906004016114c8565b5f604051808303815f87803b158015610d7c575f80fd5b505af1158015610d8e573d5f803e3d5ffd5b50505050610da0600380546001019055565b6040805160c081018252600a80546001600160a01b0390811683526020808401878152338587018181523060608801818152608089018b81525f60a08b018181528e8252600889528c82209b518c546001600160a01b0319908116918c16919091178d55975160018d0155945160028c0180548916918b16919091179055915160038b0180548816918a169190911790555160048a015591516005909801805460ff191698151598909817909755600684528781208054909316821790925560079092528590208054610100600160a81b0319166101008302179055915493517fa0c6c0d02d86fdacecbaa5fdf5894bab204e31a778250474108540733a9b8d1994610eb4949216928792909187906114ec565b60405180910390a1610ec560015f55565b5050565b610ed16111cf565b5f8111610f205760405162461bcd60e51b815260206004820152601c60248201527f5072696365206d757374206265206174206c6561737420312077656900000000604482015260640161078f565b5f828152600860205260409020600301546001600160a01b03163314610f945760405162461bcd60e51b815260206004820152602360248201527f4f6e6c79206f776e6572204f66207468697320546f6b656e2043616e20526573604482015262195b1b60ea1b606482015260840161078f565b5f82815260086020526040902060038101546002909101546001600160a01b03908116911614611028575f828152600860205260409020600401548190610fda90610c5c565b10156110285760405162461bcd60e51b815260206004820152601b60248201527f54686973205072696365204973204d6f7265205468616e203230250000000000604482015260640161078f565b6009546040516323b872dd60e01b81526001600160a01b03909116906323b872dd9061105c903390309087906004016114c8565b5f604051808303815f87803b158015611073575f80fd5b505af1158015611085573d5f803e3d5ffd5b5050505f83815260086020908152604080832060028082018054336001600160a01b0319918216811790925560038401805430921691909117905560058301805460ff19169055600483018890556007909452919093208054610100600160a81b03191661010090930292909217909155909150611102906112d1565b600a546040517fa0c6c0d02d86fdacecbaa5fdf5894bab204e31a778250474108540733a9b8d1991611147916001600160a01b039091169086903390309088906114ec565b60405180910390a150610ec560015f55565b611161611226565b6001600160a01b0381166111c65760405162461bcd60e51b815260206004820152602660248201527f4f776e61626c653a206e6577206f776e657220697320746865207a65726f206160448201526564647265737360d01b606482015260840161078f565b6109af81611280565b60025f54036112205760405162461bcd60e51b815260206004820152601f60248201527f5265656e7472616e637947756172643a207265656e7472616e742063616c6c00604482015260640161078f565b60025f55565b6001546001600160a01b03163314610af55760405162461bcd60e51b815260206004820181905260248201527f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e6572604482015260640161078f565b600180546001600160a01b038381166001600160a01b0319831681179093556040519116919082907f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e0905f90a35050565b8054806113205760405162461bcd60e51b815260206004820152601b60248201527f436f756e7465723a2064656372656d656e74206f766572666c6f770000000000604482015260640161078f565b5f19019055565b6040805160c0810182525f80825260208201819052918101829052606081018290526080810182905260a081019190915290565b602080825282518282018190525f919060409081850190868401855b828110156113d757815180516001600160a01b039081168652878201518887015286820151811687870152606080830151909116908601526080808201519086015260a09081015115159085015260c09093019290850190600101611377565b5091979650505050505050565b5f602082840312156113f4575f80fd5b5035919050565b5f806040838503121561140c575f80fd5b50508035926020909101359150565b5f6020828403121561142b575f80fd5b81356001600160a01b0381168114611441575f80fd5b9392505050565b634e487b7160e01b5f52601160045260245ffd5b8082018082111561146f5761146f611448565b92915050565b5f6001820161148657611486611448565b5060010190565b634e487b7160e01b5f52604160045260245ffd5b634e487b7160e01b5f52603260045260245ffd5b8181038181111561146f5761146f611448565b6001600160a01b039384168152919092166020820152604081019190915260600190565b6001600160a01b039586168152602081019490945291841660408401529092166060820152608081019190915260a00190565b5f8261153957634e487b7160e01b5f52601260045260245ffd5b50049056fea26469706673582212206583cd1fa2906298c39759a9a7204d8eb863cd8ae99dd4b22122ef66fcb2372864736f6c63430008150033",
							"opcodes": "PUSH1 0x80 PUSH1 0x40 MSTORE PUSH0 PUSH1 0x4 SSTORE CALLVALUE DUP1 ISZERO PUSH2 0x13 JUMPI PUSH0 DUP1 REVERT JUMPDEST POP PUSH1 0x40 MLOAD PUSH2 0x166D CODESIZE SUB DUP1 PUSH2 0x166D DUP4 CODECOPY DUP2 ADD PUSH1 0x40 DUP2 SWAP1 MSTORE PUSH2 0x32 SWAP2 PUSH2 0xBF JUMP JUMPDEST PUSH1 0x1 PUSH0 SSTORE PUSH2 0x3F CALLER PUSH2 0x6E JUMP JUMPDEST PUSH1 0x9 DUP1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 SWAP3 AND PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB NOT SWAP3 DUP4 AND DUP2 OR SWAP1 SWAP2 SSTORE PUSH1 0xA DUP1 SLOAD SWAP1 SWAP3 AND OR SWAP1 SSTORE PUSH2 0xEC JUMP JUMPDEST PUSH1 0x1 DUP1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 DUP2 AND PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB NOT DUP4 AND DUP2 OR SWAP1 SWAP4 SSTORE PUSH1 0x40 MLOAD SWAP2 AND SWAP2 SWAP1 DUP3 SWAP1 PUSH32 0x8BE0079C531659141344CD1FD0A4F28419497F9722A3DAAFE3B4186F6B6457E0 SWAP1 PUSH0 SWAP1 LOG3 POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0xCF JUMPI PUSH0 DUP1 REVERT JUMPDEST DUP2 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND DUP2 EQ PUSH2 0xE5 JUMPI PUSH0 DUP1 REVERT JUMPDEST SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH2 0x1574 DUP1 PUSH2 0xF9 PUSH0 CODECOPY PUSH0 RETURN INVALID PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x4 CALLDATASIZE LT PUSH2 0x105 JUMPI PUSH0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0x73A0C166 GT PUSH2 0x92 JUMPI DUP1 PUSH4 0xA33F6C68 GT PUSH2 0x62 JUMPI DUP1 PUSH4 0xA33F6C68 EQ PUSH2 0x2D5 JUMPI DUP1 PUSH4 0xD6CBB202 EQ PUSH2 0x2F4 JUMPI DUP1 PUSH4 0xE03DE05C EQ PUSH2 0x30A JUMPI DUP1 PUSH4 0xE47F018A EQ PUSH2 0x31D JUMPI DUP1 PUSH4 0xF2FDE38B EQ PUSH2 0x330 JUMPI PUSH0 DUP1 REVERT JUMPDEST DUP1 PUSH4 0x73A0C166 EQ PUSH2 0x244 JUMPI DUP1 PUSH4 0x7CA7349B EQ PUSH2 0x258 JUMPI DUP1 PUSH4 0x8D6CB3FB EQ PUSH2 0x2A4 JUMPI DUP1 PUSH4 0x8DA5CB5B EQ PUSH2 0x2B8 JUMPI PUSH0 DUP1 REVERT JUMPDEST DUP1 PUSH4 0x31824A49 GT PUSH2 0xD8 JUMPI DUP1 PUSH4 0x31824A49 EQ PUSH2 0x17F JUMPI DUP1 PUSH4 0x36958ADB EQ PUSH2 0x195 JUMPI DUP1 PUSH4 0x4E455DBE EQ PUSH2 0x1B4 JUMPI DUP1 PUSH4 0x5F72F450 EQ PUSH2 0x1D3 JUMPI DUP1 PUSH4 0x715018A6 EQ PUSH2 0x230 JUMPI PUSH0 DUP1 REVERT JUMPDEST DUP1 PUSH4 0x47B07BF EQ PUSH2 0x109 JUMPI DUP1 PUSH4 0x1F4CC4DB EQ PUSH2 0x133 JUMPI DUP1 PUSH4 0x243ADBDD EQ PUSH2 0x147 JUMPI DUP1 PUSH4 0x2B86AE38 EQ PUSH2 0x15C JUMPI JUMPDEST PUSH0 DUP1 REVERT JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x114 JUMPI PUSH0 DUP1 REVERT JUMPDEST POP PUSH2 0x11D PUSH2 0x34F JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x12A SWAP2 SWAP1 PUSH2 0x135B JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x13E JUMPI PUSH0 DUP1 REVERT JUMPDEST POP PUSH2 0x11D PUSH2 0x50C JUMP JUMPDEST PUSH2 0x15A PUSH2 0x155 CALLDATASIZE PUSH1 0x4 PUSH2 0x13E4 JUMP JUMPDEST PUSH2 0x71B JUMP JUMPDEST STOP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x167 JUMPI PUSH0 DUP1 REVERT JUMPDEST POP PUSH2 0x171 PUSH1 0x4 SLOAD DUP2 JUMP JUMPDEST PUSH1 0x40 MLOAD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH2 0x12A JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x18A JUMPI PUSH0 DUP1 REVERT JUMPDEST POP PUSH1 0x2 SLOAD PUSH2 0x171 SWAP1 DUP2 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x1A0 JUMPI PUSH0 DUP1 REVERT JUMPDEST POP PUSH2 0x15A PUSH2 0x1AF CALLDATASIZE PUSH1 0x4 PUSH2 0x13E4 JUMP JUMPDEST PUSH2 0x9B2 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x1BF JUMPI PUSH0 DUP1 REVERT JUMPDEST POP PUSH2 0x15A PUSH2 0x1CE CALLDATASIZE PUSH1 0x4 PUSH2 0x13E4 JUMP JUMPDEST PUSH2 0x9BF JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x1DE JUMPI PUSH0 DUP1 REVERT JUMPDEST POP PUSH2 0x211 PUSH2 0x1ED CALLDATASIZE PUSH1 0x4 PUSH2 0x13E4 JUMP JUMPDEST PUSH1 0x7 PUSH1 0x20 MSTORE PUSH0 SWAP1 DUP2 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD PUSH1 0xFF DUP2 AND SWAP1 PUSH2 0x100 SWAP1 DIV PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP3 JUMP JUMPDEST PUSH1 0x40 DUP1 MLOAD SWAP3 ISZERO ISZERO DUP4 MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 SWAP2 AND PUSH1 0x20 DUP4 ADD MSTORE ADD PUSH2 0x12A JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x23B JUMPI PUSH0 DUP1 REVERT JUMPDEST POP PUSH2 0x15A PUSH2 0xAE4 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x24F JUMPI PUSH0 DUP1 REVERT JUMPDEST POP PUSH1 0x4 SLOAD PUSH2 0x171 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x263 JUMPI PUSH0 DUP1 REVERT JUMPDEST POP PUSH2 0x28C PUSH2 0x272 CALLDATASIZE PUSH1 0x4 PUSH2 0x13E4 JUMP JUMPDEST PUSH1 0x6 PUSH1 0x20 MSTORE PUSH0 SWAP1 DUP2 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP2 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 SWAP2 AND DUP2 MSTORE PUSH1 0x20 ADD PUSH2 0x12A JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x2AF JUMPI PUSH0 DUP1 REVERT JUMPDEST POP PUSH2 0x11D PUSH2 0xAF7 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x2C3 JUMPI PUSH0 DUP1 REVERT JUMPDEST POP PUSH1 0x1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH2 0x28C JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x2E0 JUMPI PUSH0 DUP1 REVERT JUMPDEST POP PUSH2 0x171 PUSH2 0x2EF CALLDATASIZE PUSH1 0x4 PUSH2 0x13E4 JUMP JUMPDEST PUSH2 0xC5C JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x2FF JUMPI PUSH0 DUP1 REVERT JUMPDEST POP PUSH1 0x3 SLOAD PUSH2 0x171 SWAP1 DUP2 JUMP JUMPDEST PUSH2 0x15A PUSH2 0x318 CALLDATASIZE PUSH1 0x4 PUSH2 0x13FB JUMP JUMPDEST PUSH2 0xC7C JUMP JUMPDEST PUSH2 0x15A PUSH2 0x32B CALLDATASIZE PUSH1 0x4 PUSH2 0x13FB JUMP JUMPDEST PUSH2 0xEC9 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x33B JUMPI PUSH0 DUP1 REVERT JUMPDEST POP PUSH2 0x15A PUSH2 0x34A CALLDATASIZE PUSH1 0x4 PUSH2 0x141B JUMP JUMPDEST PUSH2 0x1159 JUMP JUMPDEST PUSH1 0x60 PUSH0 PUSH2 0x35B PUSH1 0x3 SLOAD SWAP1 JUMP JUMPDEST SWAP1 POP PUSH0 DUP1 JUMPDEST DUP3 DUP2 LT ISZERO PUSH2 0x3B8 JUMPI CALLER PUSH1 0x8 PUSH0 PUSH2 0x377 DUP5 PUSH1 0x1 PUSH2 0x145C JUMP JUMPDEST DUP2 MSTORE PUSH1 0x20 DUP2 ADD SWAP2 SWAP1 SWAP2 MSTORE PUSH1 0x40 ADD PUSH0 KECCAK256 PUSH1 0x3 ADD SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND SUB PUSH2 0x3A6 JUMPI DUP2 PUSH2 0x3A2 DUP2 PUSH2 0x1475 JUMP JUMPDEST SWAP3 POP POP JUMPDEST DUP1 PUSH2 0x3B0 DUP2 PUSH2 0x1475 JUMP JUMPDEST SWAP2 POP POP PUSH2 0x360 JUMP JUMPDEST POP PUSH0 DUP2 PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0x3D3 JUMPI PUSH2 0x3D3 PUSH2 0x148D JUMP JUMPDEST PUSH1 0x40 MLOAD SWAP1 DUP1 DUP3 MSTORE DUP1 PUSH1 0x20 MUL PUSH1 0x20 ADD DUP3 ADD PUSH1 0x40 MSTORE DUP1 ISZERO PUSH2 0x40C JUMPI DUP2 PUSH1 0x20 ADD JUMPDEST PUSH2 0x3F9 PUSH2 0x1327 JUMP JUMPDEST DUP2 MSTORE PUSH1 0x20 ADD SWAP1 PUSH1 0x1 SWAP1 SUB SWAP1 DUP2 PUSH2 0x3F1 JUMPI SWAP1 POP JUMPDEST POP SWAP1 POP PUSH0 DUP1 JUMPDEST DUP5 DUP2 LT ISZERO PUSH2 0x502 JUMPI CALLER PUSH1 0x8 PUSH0 PUSH2 0x429 DUP5 PUSH1 0x1 PUSH2 0x145C JUMP JUMPDEST DUP2 MSTORE PUSH1 0x20 DUP2 ADD SWAP2 SWAP1 SWAP2 MSTORE PUSH1 0x40 ADD PUSH0 KECCAK256 PUSH1 0x3 ADD SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND SUB PUSH2 0x4F0 JUMPI PUSH1 0x8 PUSH0 PUSH2 0x458 DUP4 PUSH1 0x1 PUSH2 0x145C JUMP JUMPDEST DUP2 MSTORE PUSH1 0x20 DUP1 DUP3 ADD SWAP3 SWAP1 SWAP3 MSTORE PUSH1 0x40 SWAP1 DUP2 ADD PUSH0 KECCAK256 DUP2 MLOAD PUSH1 0xC0 DUP2 ADD DUP4 MSTORE DUP2 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 DUP2 AND DUP3 MSTORE PUSH1 0x1 DUP4 ADD SLOAD SWAP5 DUP3 ADD SWAP5 SWAP1 SWAP5 MSTORE PUSH1 0x2 DUP3 ADD SLOAD DUP5 AND SWAP3 DUP2 ADD SWAP3 SWAP1 SWAP3 MSTORE PUSH1 0x3 DUP2 ADD SLOAD SWAP1 SWAP3 AND PUSH1 0x60 DUP3 ADD MSTORE PUSH1 0x4 DUP3 ADD SLOAD PUSH1 0x80 DUP3 ADD MSTORE PUSH1 0x5 SWAP1 SWAP2 ADD SLOAD PUSH1 0xFF AND ISZERO ISZERO PUSH1 0xA0 DUP3 ADD MSTORE DUP4 MLOAD DUP5 SWAP1 DUP5 SWAP1 DUP2 LT PUSH2 0x4D6 JUMPI PUSH2 0x4D6 PUSH2 0x14A1 JUMP JUMPDEST PUSH1 0x20 MUL PUSH1 0x20 ADD ADD DUP2 SWAP1 MSTORE POP DUP2 DUP1 PUSH2 0x4EC SWAP1 PUSH2 0x1475 JUMP JUMPDEST SWAP3 POP POP JUMPDEST DUP1 PUSH2 0x4FA DUP2 PUSH2 0x1475 JUMP JUMPDEST SWAP2 POP POP PUSH2 0x412 JUMP JUMPDEST POP SWAP1 SWAP5 SWAP4 POP POP POP POP JUMP JUMPDEST PUSH1 0x60 PUSH0 PUSH2 0x518 PUSH1 0x3 SLOAD SWAP1 JUMP JUMPDEST SWAP1 POP PUSH0 DUP1 JUMPDEST DUP3 DUP2 LT ISZERO PUSH2 0x5A3 JUMPI CALLER PUSH1 0x8 PUSH0 PUSH2 0x534 DUP5 PUSH1 0x1 PUSH2 0x145C JUMP JUMPDEST DUP2 MSTORE PUSH1 0x20 DUP2 ADD SWAP2 SWAP1 SWAP2 MSTORE PUSH1 0x40 ADD PUSH0 KECCAK256 PUSH1 0x2 ADD SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND EQ DUP1 ISZERO PUSH2 0x57E JUMPI POP PUSH1 0x8 PUSH0 PUSH2 0x566 DUP4 PUSH1 0x1 PUSH2 0x145C JUMP JUMPDEST DUP2 MSTORE PUSH1 0x20 DUP2 ADD SWAP2 SWAP1 SWAP2 MSTORE PUSH1 0x40 ADD PUSH0 KECCAK256 PUSH1 0x5 ADD SLOAD PUSH1 0xFF AND ISZERO JUMPDEST ISZERO PUSH2 0x591 JUMPI DUP2 PUSH2 0x58D DUP2 PUSH2 0x1475 JUMP JUMPDEST SWAP3 POP POP JUMPDEST DUP1 PUSH2 0x59B DUP2 PUSH2 0x1475 JUMP JUMPDEST SWAP2 POP POP PUSH2 0x51D JUMP JUMPDEST POP PUSH0 DUP2 PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0x5BE JUMPI PUSH2 0x5BE PUSH2 0x148D JUMP JUMPDEST PUSH1 0x40 MLOAD SWAP1 DUP1 DUP3 MSTORE DUP1 PUSH1 0x20 MUL PUSH1 0x20 ADD DUP3 ADD PUSH1 0x40 MSTORE DUP1 ISZERO PUSH2 0x5F7 JUMPI DUP2 PUSH1 0x20 ADD JUMPDEST PUSH2 0x5E4 PUSH2 0x1327 JUMP JUMPDEST DUP2 MSTORE PUSH1 0x20 ADD SWAP1 PUSH1 0x1 SWAP1 SUB SWAP1 DUP2 PUSH2 0x5DC JUMPI SWAP1 POP JUMPDEST POP SWAP1 POP PUSH0 DUP1 JUMPDEST DUP5 DUP2 LT ISZERO PUSH2 0x502 JUMPI CALLER PUSH1 0x8 PUSH0 PUSH2 0x614 DUP5 PUSH1 0x1 PUSH2 0x145C JUMP JUMPDEST DUP2 MSTORE PUSH1 0x20 DUP2 ADD SWAP2 SWAP1 SWAP2 MSTORE PUSH1 0x40 ADD PUSH0 KECCAK256 PUSH1 0x2 ADD SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND EQ DUP1 ISZERO PUSH2 0x65E JUMPI POP PUSH1 0x8 PUSH0 PUSH2 0x646 DUP4 PUSH1 0x1 PUSH2 0x145C JUMP JUMPDEST DUP2 MSTORE PUSH1 0x20 DUP2 ADD SWAP2 SWAP1 SWAP2 MSTORE PUSH1 0x40 ADD PUSH0 KECCAK256 PUSH1 0x5 ADD SLOAD PUSH1 0xFF AND ISZERO JUMPDEST ISZERO PUSH2 0x709 JUMPI PUSH1 0x8 PUSH0 PUSH2 0x671 DUP4 PUSH1 0x1 PUSH2 0x145C JUMP JUMPDEST DUP2 MSTORE PUSH1 0x20 DUP1 DUP3 ADD SWAP3 SWAP1 SWAP3 MSTORE PUSH1 0x40 SWAP1 DUP2 ADD PUSH0 KECCAK256 DUP2 MLOAD PUSH1 0xC0 DUP2 ADD DUP4 MSTORE DUP2 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 DUP2 AND DUP3 MSTORE PUSH1 0x1 DUP4 ADD SLOAD SWAP5 DUP3 ADD SWAP5 SWAP1 SWAP5 MSTORE PUSH1 0x2 DUP3 ADD SLOAD DUP5 AND SWAP3 DUP2 ADD SWAP3 SWAP1 SWAP3 MSTORE PUSH1 0x3 DUP2 ADD SLOAD SWAP1 SWAP3 AND PUSH1 0x60 DUP3 ADD MSTORE PUSH1 0x4 DUP3 ADD SLOAD PUSH1 0x80 DUP3 ADD MSTORE PUSH1 0x5 SWAP1 SWAP2 ADD SLOAD PUSH1 0xFF AND ISZERO ISZERO PUSH1 0xA0 DUP3 ADD MSTORE DUP4 MLOAD DUP5 SWAP1 DUP5 SWAP1 DUP2 LT PUSH2 0x6EF JUMPI PUSH2 0x6EF PUSH2 0x14A1 JUMP JUMPDEST PUSH1 0x20 MUL PUSH1 0x20 ADD ADD DUP2 SWAP1 MSTORE POP DUP2 DUP1 PUSH2 0x705 SWAP1 PUSH2 0x1475 JUMP JUMPDEST SWAP3 POP POP JUMPDEST DUP1 PUSH2 0x713 DUP2 PUSH2 0x1475 JUMP JUMPDEST SWAP2 POP POP PUSH2 0x5FD JUMP JUMPDEST PUSH2 0x723 PUSH2 0x11CF JUMP JUMPDEST PUSH0 DUP2 DUP2 MSTORE PUSH1 0x8 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 PUSH1 0x4 DUP2 ADD SLOAD CALLVALUE LT ISZERO PUSH2 0x798 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x26 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x4E6F7420656E6F75676820657468657220746F20636F7665722061736B696E67 PUSH1 0x44 DUP3 ADD MSTORE PUSH6 0x207072696365 PUSH1 0xD0 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH0 DUP3 DUP2 MSTORE PUSH1 0x8 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 PUSH1 0x2 ADD SLOAD CALLER PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 SWAP2 AND SUB PUSH2 0x802 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x1F PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x416E206F666665722063616E6E6F742062757920746869732053656C6C657200 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x78F JUMP JUMPDEST PUSH0 CALLER SWAP1 POP PUSH0 PUSH1 0x4 SLOAD DUP4 PUSH1 0x4 ADD SLOAD PUSH2 0x819 SWAP2 SWAP1 PUSH2 0x14B5 JUMP JUMPDEST PUSH1 0x2 DUP5 ADD SLOAD PUSH1 0x40 MLOAD SWAP2 SWAP3 POP PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND SWAP1 DUP3 ISZERO PUSH2 0x8FC MUL SWAP1 DUP4 SWAP1 PUSH0 DUP2 DUP2 DUP2 DUP6 DUP9 DUP9 CALL SWAP4 POP POP POP POP ISZERO DUP1 ISZERO PUSH2 0x853 JUMPI RETURNDATASIZE PUSH0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH0 REVERT JUMPDEST POP PUSH1 0x9 SLOAD PUSH1 0x1 DUP5 ADD SLOAD PUSH1 0x40 MLOAD PUSH4 0x23B872DD PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 SWAP3 AND SWAP2 PUSH4 0x23B872DD SWAP2 PUSH2 0x88B SWAP2 ADDRESS SWAP2 DUP8 SWAP2 PUSH1 0x4 ADD PUSH2 0x14C8 JUMP JUMPDEST PUSH0 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH0 DUP8 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0x8A2 JUMPI PUSH0 DUP1 REVERT JUMPDEST POP GAS CALL ISZERO DUP1 ISZERO PUSH2 0x8B4 JUMPI RETURNDATASIZE PUSH0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH0 REVERT JUMPDEST POP POP POP PUSH0 DUP6 DUP2 MSTORE PUSH1 0x6 PUSH1 0x20 MSTORE PUSH1 0x40 DUP1 DUP3 KECCAK256 SLOAD PUSH1 0x4 SLOAD SWAP2 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 SWAP2 AND SWAP4 POP DUP2 ISZERO PUSH2 0x8FC MUL SWAP3 DUP2 DUP2 DUP2 DUP6 DUP9 DUP9 CALL SWAP4 POP POP POP POP ISZERO DUP1 ISZERO PUSH2 0x8FA JUMPI RETURNDATASIZE PUSH0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH0 REVERT JUMPDEST POP PUSH1 0x3 DUP4 ADD DUP1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB NOT AND PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP5 AND OR SWAP1 SSTORE PUSH1 0x5 DUP4 ADD DUP1 SLOAD PUSH1 0xFF NOT SWAP1 DUP2 AND PUSH1 0x1 SWAP1 DUP2 OR SWAP1 SWAP3 SSTORE PUSH0 DUP7 DUP2 MSTORE PUSH1 0x7 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 DUP1 SLOAD SWAP1 SWAP2 AND DUP3 OR SWAP1 SSTORE PUSH1 0x2 DUP1 SLOAD SWAP1 SWAP2 ADD SWAP1 SSTORE PUSH1 0xA SLOAD PUSH1 0x1 DUP5 ADD SLOAD PUSH1 0x2 DUP6 ADD SLOAD PUSH1 0x40 MLOAD PUSH32 0x16F1DBD97E6BF646D429ED186CCE832F1F7FD9907814293B83181E9970AB7BD2 SWAP4 PUSH2 0x99B SWAP4 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP2 DUP3 AND SWAP4 SWAP1 SWAP3 SWAP2 AND SWAP1 DUP8 SWAP1 CALLVALUE SWAP1 PUSH2 0x14EC JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG1 POP POP POP PUSH2 0x9AF PUSH1 0x1 PUSH0 SSTORE JUMP JUMPDEST POP JUMP JUMPDEST PUSH2 0x9BA PUSH2 0x1226 JUMP JUMPDEST PUSH1 0x4 SSTORE JUMP JUMPDEST PUSH0 DUP2 DUP2 MSTORE PUSH1 0x7 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD PUSH2 0x100 SWAP1 DIV PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND CALLER EQ PUSH2 0xA21 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x15 PUSH1 0x24 DUP3 ADD MSTORE PUSH21 0x13DB9B1E4813DDDB995C8818D85B8810D85B98D95B PUSH1 0x5A SHL PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x78F JUMP JUMPDEST PUSH0 DUP2 DUP2 MSTORE PUSH1 0x7 PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 DUP1 SLOAD PUSH1 0x1 PUSH1 0xFF NOT SWAP2 DUP3 AND DUP2 OR SWAP1 SWAP3 SSTORE PUSH1 0x8 SWAP1 SWAP4 MSTORE SWAP3 DUP2 SWAP1 KECCAK256 PUSH1 0x5 ADD DUP1 SLOAD SWAP1 SWAP3 AND SWAP1 SWAP3 OR SWAP1 SSTORE PUSH1 0x9 SLOAD SWAP1 MLOAD PUSH4 0x23B872DD PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 SWAP2 AND SWAP1 PUSH4 0x23B872DD SWAP1 PUSH2 0xA89 SWAP1 ADDRESS SWAP1 CALLER SWAP1 DUP7 SWAP1 PUSH1 0x4 ADD PUSH2 0x14C8 JUMP JUMPDEST PUSH0 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH0 DUP8 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0xAA0 JUMPI PUSH0 DUP1 REVERT JUMPDEST POP GAS CALL ISZERO DUP1 ISZERO PUSH2 0xAB2 JUMPI RETURNDATASIZE PUSH0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH0 REVERT JUMPDEST POP POP POP PUSH0 DUP3 DUP2 MSTORE PUSH1 0x8 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 PUSH1 0x3 ADD DUP1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB NOT AND CALLER OR SWAP1 SSTORE POP PUSH2 0x9AF PUSH1 0x2 DUP1 SLOAD PUSH1 0x1 ADD SWAP1 SSTORE JUMP JUMPDEST PUSH2 0xAEC PUSH2 0x1226 JUMP JUMPDEST PUSH2 0xAF5 PUSH0 PUSH2 0x1280 JUMP JUMPDEST JUMP JUMPDEST PUSH1 0x60 PUSH0 PUSH2 0xB03 PUSH1 0x3 SLOAD SWAP1 JUMP JUMPDEST SWAP1 POP PUSH0 PUSH2 0xB0F PUSH1 0x2 SLOAD SWAP1 JUMP JUMPDEST PUSH2 0xB19 SWAP1 DUP4 PUSH2 0x14B5 JUMP JUMPDEST SWAP1 POP PUSH0 DUP2 PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0xB35 JUMPI PUSH2 0xB35 PUSH2 0x148D JUMP JUMPDEST PUSH1 0x40 MLOAD SWAP1 DUP1 DUP3 MSTORE DUP1 PUSH1 0x20 MUL PUSH1 0x20 ADD DUP3 ADD PUSH1 0x40 MSTORE DUP1 ISZERO PUSH2 0xB6E JUMPI DUP2 PUSH1 0x20 ADD JUMPDEST PUSH2 0xB5B PUSH2 0x1327 JUMP JUMPDEST DUP2 MSTORE PUSH1 0x20 ADD SWAP1 PUSH1 0x1 SWAP1 SUB SWAP1 DUP2 PUSH2 0xB53 JUMPI SWAP1 POP JUMPDEST POP SWAP1 POP PUSH0 DUP1 JUMPDEST DUP5 DUP2 LT ISZERO PUSH2 0x502 JUMPI PUSH1 0x8 PUSH0 PUSH2 0xB8A DUP4 PUSH1 0x1 PUSH2 0x145C JUMP JUMPDEST DUP2 MSTORE PUSH1 0x20 DUP2 ADD SWAP2 SWAP1 SWAP2 MSTORE PUSH1 0x40 ADD PUSH0 KECCAK256 PUSH1 0x5 ADD SLOAD PUSH1 0xFF AND PUSH2 0xC4A JUMPI PUSH1 0x8 PUSH0 PUSH2 0xBB2 DUP4 PUSH1 0x1 PUSH2 0x145C JUMP JUMPDEST DUP2 MSTORE PUSH1 0x20 DUP1 DUP3 ADD SWAP3 SWAP1 SWAP3 MSTORE PUSH1 0x40 SWAP1 DUP2 ADD PUSH0 KECCAK256 DUP2 MLOAD PUSH1 0xC0 DUP2 ADD DUP4 MSTORE DUP2 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 DUP2 AND DUP3 MSTORE PUSH1 0x1 DUP4 ADD SLOAD SWAP5 DUP3 ADD SWAP5 SWAP1 SWAP5 MSTORE PUSH1 0x2 DUP3 ADD SLOAD DUP5 AND SWAP3 DUP2 ADD SWAP3 SWAP1 SWAP3 MSTORE PUSH1 0x3 DUP2 ADD SLOAD SWAP1 SWAP3 AND PUSH1 0x60 DUP3 ADD MSTORE PUSH1 0x4 DUP3 ADD SLOAD PUSH1 0x80 DUP3 ADD MSTORE PUSH1 0x5 SWAP1 SWAP2 ADD SLOAD PUSH1 0xFF AND ISZERO ISZERO PUSH1 0xA0 DUP3 ADD MSTORE DUP4 MLOAD DUP5 SWAP1 DUP5 SWAP1 DUP2 LT PUSH2 0xC30 JUMPI PUSH2 0xC30 PUSH2 0x14A1 JUMP JUMPDEST PUSH1 0x20 MUL PUSH1 0x20 ADD ADD DUP2 SWAP1 MSTORE POP DUP2 DUP1 PUSH2 0xC46 SWAP1 PUSH2 0x1475 JUMP JUMPDEST SWAP3 POP POP JUMPDEST DUP1 PUSH2 0xC54 DUP2 PUSH2 0x1475 JUMP JUMPDEST SWAP2 POP POP PUSH2 0xB74 JUMP JUMPDEST PUSH0 PUSH1 0x5 DUP2 PUSH2 0xC6A DUP3 DUP6 PUSH2 0x151F JUMP JUMPDEST PUSH2 0xC74 SWAP1 DUP6 PUSH2 0x145C JUMP JUMPDEST SWAP5 SWAP4 POP POP POP POP JUMP JUMPDEST PUSH2 0xC84 PUSH2 0x11CF JUMP JUMPDEST PUSH0 DUP2 GT PUSH2 0xCD3 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x1C PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x5072696365206D757374206265206174206C6561737420312077656900000000 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x78F JUMP JUMPDEST PUSH0 DUP3 DUP2 MSTORE PUSH1 0x7 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD PUSH1 0xFF AND ISZERO PUSH2 0xD31 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x1C PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x4F6E6520546F6B656E204944204C6973746564204F6E652054696D6500000000 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x78F JUMP JUMPDEST PUSH1 0x9 SLOAD PUSH1 0x40 MLOAD PUSH4 0x23B872DD PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 SWAP2 AND SWAP1 PUSH4 0x23B872DD SWAP1 PUSH2 0xD65 SWAP1 CALLER SWAP1 ADDRESS SWAP1 DUP8 SWAP1 PUSH1 0x4 ADD PUSH2 0x14C8 JUMP JUMPDEST PUSH0 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH0 DUP8 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0xD7C JUMPI PUSH0 DUP1 REVERT JUMPDEST POP GAS CALL ISZERO DUP1 ISZERO PUSH2 0xD8E JUMPI RETURNDATASIZE PUSH0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH0 REVERT JUMPDEST POP POP POP POP PUSH2 0xDA0 PUSH1 0x3 DUP1 SLOAD PUSH1 0x1 ADD SWAP1 SSTORE JUMP JUMPDEST PUSH1 0x40 DUP1 MLOAD PUSH1 0xC0 DUP2 ADD DUP3 MSTORE PUSH1 0xA DUP1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 DUP2 AND DUP4 MSTORE PUSH1 0x20 DUP1 DUP5 ADD DUP8 DUP2 MSTORE CALLER DUP6 DUP8 ADD DUP2 DUP2 MSTORE ADDRESS PUSH1 0x60 DUP9 ADD DUP2 DUP2 MSTORE PUSH1 0x80 DUP10 ADD DUP12 DUP2 MSTORE PUSH0 PUSH1 0xA0 DUP12 ADD DUP2 DUP2 MSTORE DUP15 DUP3 MSTORE PUSH1 0x8 DUP10 MSTORE DUP13 DUP3 KECCAK256 SWAP12 MLOAD DUP13 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB NOT SWAP1 DUP2 AND SWAP2 DUP13 AND SWAP2 SWAP1 SWAP2 OR DUP14 SSTORE SWAP8 MLOAD PUSH1 0x1 DUP14 ADD SSTORE SWAP5 MLOAD PUSH1 0x2 DUP13 ADD DUP1 SLOAD DUP10 AND SWAP2 DUP12 AND SWAP2 SWAP1 SWAP2 OR SWAP1 SSTORE SWAP2 MLOAD PUSH1 0x3 DUP12 ADD DUP1 SLOAD DUP9 AND SWAP2 DUP11 AND SWAP2 SWAP1 SWAP2 OR SWAP1 SSTORE MLOAD PUSH1 0x4 DUP11 ADD SSTORE SWAP2 MLOAD PUSH1 0x5 SWAP1 SWAP9 ADD DUP1 SLOAD PUSH1 0xFF NOT AND SWAP9 ISZERO ISZERO SWAP9 SWAP1 SWAP9 OR SWAP1 SWAP8 SSTORE PUSH1 0x6 DUP5 MSTORE DUP8 DUP2 KECCAK256 DUP1 SLOAD SWAP1 SWAP4 AND DUP3 OR SWAP1 SWAP3 SSTORE PUSH1 0x7 SWAP1 SWAP3 MSTORE DUP6 SWAP1 KECCAK256 DUP1 SLOAD PUSH2 0x100 PUSH1 0x1 PUSH1 0xA8 SHL SUB NOT AND PUSH2 0x100 DUP4 MUL OR SWAP1 SSTORE SWAP2 SLOAD SWAP4 MLOAD PUSH32 0xA0C6C0D02D86FDACECBAA5FDF5894BAB204E31A778250474108540733A9B8D19 SWAP5 PUSH2 0xEB4 SWAP5 SWAP3 AND SWAP3 DUP8 SWAP3 SWAP1 SWAP2 DUP8 SWAP1 PUSH2 0x14EC JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG1 PUSH2 0xEC5 PUSH1 0x1 PUSH0 SSTORE JUMP JUMPDEST POP POP JUMP JUMPDEST PUSH2 0xED1 PUSH2 0x11CF JUMP JUMPDEST PUSH0 DUP2 GT PUSH2 0xF20 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x1C PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x5072696365206D757374206265206174206C6561737420312077656900000000 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x78F JUMP JUMPDEST PUSH0 DUP3 DUP2 MSTORE PUSH1 0x8 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 PUSH1 0x3 ADD SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND CALLER EQ PUSH2 0xF94 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x23 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x4F6E6C79206F776E6572204F66207468697320546F6B656E2043616E20526573 PUSH1 0x44 DUP3 ADD MSTORE PUSH3 0x195B1B PUSH1 0xEA SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0x78F JUMP JUMPDEST PUSH0 DUP3 DUP2 MSTORE PUSH1 0x8 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 PUSH1 0x3 DUP2 ADD SLOAD PUSH1 0x2 SWAP1 SWAP2 ADD SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 DUP2 AND SWAP2 AND EQ PUSH2 0x1028 JUMPI PUSH0 DUP3 DUP2 MSTORE PUSH1 0x8 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 PUSH1 0x4 ADD SLOAD DUP2 SWAP1 PUSH2 0xFDA SWAP1 PUSH2 0xC5C JUMP JUMPDEST LT ISZERO PUSH2 0x1028 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x1B PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x54686973205072696365204973204D6F7265205468616E203230250000000000 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x78F JUMP JUMPDEST PUSH1 0x9 SLOAD PUSH1 0x40 MLOAD PUSH4 0x23B872DD PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 SWAP2 AND SWAP1 PUSH4 0x23B872DD SWAP1 PUSH2 0x105C SWAP1 CALLER SWAP1 ADDRESS SWAP1 DUP8 SWAP1 PUSH1 0x4 ADD PUSH2 0x14C8 JUMP JUMPDEST PUSH0 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH0 DUP8 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0x1073 JUMPI PUSH0 DUP1 REVERT JUMPDEST POP GAS CALL ISZERO DUP1 ISZERO PUSH2 0x1085 JUMPI RETURNDATASIZE PUSH0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH0 REVERT JUMPDEST POP POP POP PUSH0 DUP4 DUP2 MSTORE PUSH1 0x8 PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 PUSH1 0x2 DUP1 DUP3 ADD DUP1 SLOAD CALLER PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB NOT SWAP2 DUP3 AND DUP2 OR SWAP1 SWAP3 SSTORE PUSH1 0x3 DUP5 ADD DUP1 SLOAD ADDRESS SWAP3 AND SWAP2 SWAP1 SWAP2 OR SWAP1 SSTORE PUSH1 0x5 DUP4 ADD DUP1 SLOAD PUSH1 0xFF NOT AND SWAP1 SSTORE PUSH1 0x4 DUP4 ADD DUP9 SWAP1 SSTORE PUSH1 0x7 SWAP1 SWAP5 MSTORE SWAP2 SWAP1 SWAP4 KECCAK256 DUP1 SLOAD PUSH2 0x100 PUSH1 0x1 PUSH1 0xA8 SHL SUB NOT AND PUSH2 0x100 SWAP1 SWAP4 MUL SWAP3 SWAP1 SWAP3 OR SWAP1 SWAP2 SSTORE SWAP1 SWAP2 POP PUSH2 0x1102 SWAP1 PUSH2 0x12D1 JUMP JUMPDEST PUSH1 0xA SLOAD PUSH1 0x40 MLOAD PUSH32 0xA0C6C0D02D86FDACECBAA5FDF5894BAB204E31A778250474108540733A9B8D19 SWAP2 PUSH2 0x1147 SWAP2 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 SWAP2 AND SWAP1 DUP7 SWAP1 CALLER SWAP1 ADDRESS SWAP1 DUP9 SWAP1 PUSH2 0x14EC JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG1 POP PUSH2 0xEC5 PUSH1 0x1 PUSH0 SSTORE JUMP JUMPDEST PUSH2 0x1161 PUSH2 0x1226 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND PUSH2 0x11C6 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x26 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x4F776E61626C653A206E6577206F776E657220697320746865207A65726F2061 PUSH1 0x44 DUP3 ADD MSTORE PUSH6 0x646472657373 PUSH1 0xD0 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0x78F JUMP JUMPDEST PUSH2 0x9AF DUP2 PUSH2 0x1280 JUMP JUMPDEST PUSH1 0x2 PUSH0 SLOAD SUB PUSH2 0x1220 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x1F PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x5265656E7472616E637947756172643A207265656E7472616E742063616C6C00 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x78F JUMP JUMPDEST PUSH1 0x2 PUSH0 SSTORE JUMP JUMPDEST PUSH1 0x1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND CALLER EQ PUSH2 0xAF5 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD DUP2 SWAP1 MSTORE PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x4F776E61626C653A2063616C6C6572206973206E6F7420746865206F776E6572 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x78F JUMP JUMPDEST PUSH1 0x1 DUP1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 DUP2 AND PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB NOT DUP4 AND DUP2 OR SWAP1 SWAP4 SSTORE PUSH1 0x40 MLOAD SWAP2 AND SWAP2 SWAP1 DUP3 SWAP1 PUSH32 0x8BE0079C531659141344CD1FD0A4F28419497F9722A3DAAFE3B4186F6B6457E0 SWAP1 PUSH0 SWAP1 LOG3 POP POP JUMP JUMPDEST DUP1 SLOAD DUP1 PUSH2 0x1320 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x1B PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x436F756E7465723A2064656372656D656E74206F766572666C6F770000000000 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x78F JUMP JUMPDEST PUSH0 NOT ADD SWAP1 SSTORE JUMP JUMPDEST PUSH1 0x40 DUP1 MLOAD PUSH1 0xC0 DUP2 ADD DUP3 MSTORE PUSH0 DUP1 DUP3 MSTORE PUSH1 0x20 DUP3 ADD DUP2 SWAP1 MSTORE SWAP2 DUP2 ADD DUP3 SWAP1 MSTORE PUSH1 0x60 DUP2 ADD DUP3 SWAP1 MSTORE PUSH1 0x80 DUP2 ADD DUP3 SWAP1 MSTORE PUSH1 0xA0 DUP2 ADD SWAP2 SWAP1 SWAP2 MSTORE SWAP1 JUMP JUMPDEST PUSH1 0x20 DUP1 DUP3 MSTORE DUP3 MLOAD DUP3 DUP3 ADD DUP2 SWAP1 MSTORE PUSH0 SWAP2 SWAP1 PUSH1 0x40 SWAP1 DUP2 DUP6 ADD SWAP1 DUP7 DUP5 ADD DUP6 JUMPDEST DUP3 DUP2 LT ISZERO PUSH2 0x13D7 JUMPI DUP2 MLOAD DUP1 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 DUP2 AND DUP7 MSTORE DUP8 DUP3 ADD MLOAD DUP9 DUP8 ADD MSTORE DUP7 DUP3 ADD MLOAD DUP2 AND DUP8 DUP8 ADD MSTORE PUSH1 0x60 DUP1 DUP4 ADD MLOAD SWAP1 SWAP2 AND SWAP1 DUP7 ADD MSTORE PUSH1 0x80 DUP1 DUP3 ADD MLOAD SWAP1 DUP7 ADD MSTORE PUSH1 0xA0 SWAP1 DUP2 ADD MLOAD ISZERO ISZERO SWAP1 DUP6 ADD MSTORE PUSH1 0xC0 SWAP1 SWAP4 ADD SWAP3 SWAP1 DUP6 ADD SWAP1 PUSH1 0x1 ADD PUSH2 0x1377 JUMP JUMPDEST POP SWAP2 SWAP8 SWAP7 POP POP POP POP POP POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x13F4 JUMPI PUSH0 DUP1 REVERT JUMPDEST POP CALLDATALOAD SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x140C JUMPI PUSH0 DUP1 REVERT JUMPDEST POP POP DUP1 CALLDATALOAD SWAP3 PUSH1 0x20 SWAP1 SWAP2 ADD CALLDATALOAD SWAP2 POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x142B JUMPI PUSH0 DUP1 REVERT JUMPDEST DUP2 CALLDATALOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND DUP2 EQ PUSH2 0x1441 JUMPI PUSH0 DUP1 REVERT JUMPDEST SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH0 MSTORE PUSH1 0x11 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH0 REVERT JUMPDEST DUP1 DUP3 ADD DUP1 DUP3 GT ISZERO PUSH2 0x146F JUMPI PUSH2 0x146F PUSH2 0x1448 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH1 0x1 DUP3 ADD PUSH2 0x1486 JUMPI PUSH2 0x1486 PUSH2 0x1448 JUMP JUMPDEST POP PUSH1 0x1 ADD SWAP1 JUMP JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH0 MSTORE PUSH1 0x41 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH0 REVERT JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH0 MSTORE PUSH1 0x32 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH0 REVERT JUMPDEST DUP2 DUP2 SUB DUP2 DUP2 GT ISZERO PUSH2 0x146F JUMPI PUSH2 0x146F PUSH2 0x1448 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP4 DUP5 AND DUP2 MSTORE SWAP2 SWAP1 SWAP3 AND PUSH1 0x20 DUP3 ADD MSTORE PUSH1 0x40 DUP2 ADD SWAP2 SWAP1 SWAP2 MSTORE PUSH1 0x60 ADD SWAP1 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP6 DUP7 AND DUP2 MSTORE PUSH1 0x20 DUP2 ADD SWAP5 SWAP1 SWAP5 MSTORE SWAP2 DUP5 AND PUSH1 0x40 DUP5 ADD MSTORE SWAP1 SWAP3 AND PUSH1 0x60 DUP3 ADD MSTORE PUSH1 0x80 DUP2 ADD SWAP2 SWAP1 SWAP2 MSTORE PUSH1 0xA0 ADD SWAP1 JUMP JUMPDEST PUSH0 DUP3 PUSH2 0x1539 JUMPI PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH0 MSTORE PUSH1 0x12 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH0 REVERT JUMPDEST POP DIV SWAP1 JUMP INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 PUSH6 0x83CD1FA29062 SWAP9 0xC3 SWAP8 MSIZE 0xA9 0xA7 KECCAK256 0x4D DUP15 0xB8 PUSH4 0xCD8AE99D 0xD4 0xB2 0x21 0x22 0xEF PUSH7 0xFCB2372864736F PUSH13 0x63430008150033000000000000 ",
							"sourceMap": "317:7770:13:-:0;;;539:1;510:30;;1230:116;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;1716:1:1;1821:7;:22;936:32:0;719:10:7;936:18:0;:32::i;:::-;1273:5:13;:28;;-1:-1:-1;;;;;1273:28:13;;;-1:-1:-1;;;;;;1273:28:13;;;;;;;;1311:13;:28;;;;;;;;317:7770;;2433:187:0;2525:6;;;-1:-1:-1;;;;;2541:17:0;;;-1:-1:-1;;;;;;2541:17:0;;;;;;;2573:40;;2525:6;;;2541:17;2525:6;;2573:40;;2506:16;;2573:40;2496:124;2433:187;:::o;14:290:14:-;84:6;137:2;125:9;116:7;112:23;108:32;105:52;;;153:1;150;143:12;105:52;179:16;;-1:-1:-1;;;;;224:31:14;;214:42;;204:70;;270:1;267;260:12;204:70;293:5;14:290;-1:-1:-1;;;14:290:14:o;:::-;317:7770:13;;;;;;"
						},
						"deployedBytecode": {
							"functionDebugData": {
								"@CancelOffer_3275": {
									"entryPoint": 2495,
									"id": 3275,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"@ClaculatePrice_3301": {
									"entryPoint": 3164,
									"id": 3301,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"@FirstOwner_2804": {
									"entryPoint": null,
									"id": 2804,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@GetListingFee_3309": {
									"entryPoint": null,
									"id": 3309,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"@LISTING_FEE_2798": {
									"entryPoint": null,
									"id": 2798,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@ListNft_2971": {
									"entryPoint": 3196,
									"id": 2971,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"@ReSellNft_3216": {
									"entryPoint": 3785,
									"id": 3216,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"@SetListingFee_3321": {
									"entryPoint": 2482,
									"id": 3321,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"@_checkOwner_54": {
									"entryPoint": 4646,
									"id": 54,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@_msgSender_1614": {
									"entryPoint": null,
									"id": 1614,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"@_nftCount_2795": {
									"entryPoint": null,
									"id": 2795,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@_nftsSold_2792": {
									"entryPoint": null,
									"id": 2792,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@_nonReentrantAfter_165": {
									"entryPoint": null,
									"id": 165,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@_nonReentrantBefore_157": {
									"entryPoint": 4559,
									"id": 157,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@_transferOwnership_111": {
									"entryPoint": 4736,
									"id": 111,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"@buyNft_3087": {
									"entryPoint": 1819,
									"id": 3087,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"@check_2809": {
									"entryPoint": null,
									"id": 2809,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@current_1642": {
									"entryPoint": null,
									"id": 1642,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"@decrement_1684": {
									"entryPoint": 4817,
									"id": 1684,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"@getListedNfts_3395": {
									"entryPoint": 2807,
									"id": 3395,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"@getMyListedNfts_3610": {
									"entryPoint": 1292,
									"id": 3610,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"@getMyNfts_3493": {
									"entryPoint": 847,
									"id": 3493,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"@increment_1656": {
									"entryPoint": null,
									"id": 1656,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"@owner_40": {
									"entryPoint": null,
									"id": 40,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"@renounceOwnership_68": {
									"entryPoint": 2788,
									"id": 68,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@transferOwnership_91": {
									"entryPoint": 4441,
									"id": 91,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"abi_decode_tuple_t_address": {
									"entryPoint": 5147,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_tuple_t_uint256": {
									"entryPoint": 5092,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_tuple_t_uint256t_uint256": {
									"entryPoint": 5115,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 2
								},
								"abi_encode_tuple_t_address__to_t_address__fromStack_reversed": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_address_t_address_payable_t_uint256__to_t_address_t_address_t_uint256__fromStack_reversed": {
									"entryPoint": 5320,
									"id": null,
									"parameterSlots": 4,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_address_t_address_t_uint256__to_t_address_t_address_t_uint256__fromStack_reversed": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 4,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_address_t_uint256_t_address_payable_t_address_payable_t_uint256__to_t_address_t_uint256_t_address_t_address_t_uint256__fromStack_reversed": {
									"entryPoint": 5356,
									"id": null,
									"parameterSlots": 6,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_address_t_uint256_t_address_t_address_t_uint256__to_t_address_t_uint256_t_address_t_address_t_uint256__fromStack_reversed": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 6,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_array$_t_struct$_NFT_$2827_memory_ptr_$dyn_memory_ptr__to_t_array$_t_struct$_NFT_$2827_memory_ptr_$dyn_memory_ptr__fromStack_reversed": {
									"entryPoint": 4955,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_bool_t_address__to_t_bool_t_address__fromStack_reversed": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 3,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_00a2a60daad916a80621f3a1cf99deb91c2ee23995b0e12d7b477dbb9833db5b__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_1dfd0d5389474d871b8e8929aab9d4def041f55f90f625754fb5f9a9ba08af6f__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_245f15ff17f551913a7a18385165551503906a406f905ac1c2437281a7cd0cfe__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_288468593cf2e83c7107f8d1f595b66d7cf49de550d8901b5e7e75f7dc15cf6e__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_61f51060552d0392f4e47808f23bc9cbf7c6eab1ae2ff99074f6276698231311__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_727c3a12b158040924757c03f361b4f9478c9475f21c278861c9612a31524eb2__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_9924ebdf1add33d25d4ef888e16131f0a5687b0580a36c21b5c301a6c462effe__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_c3387487059bdef6bd8bd04aa3389df9f9fdc35f3503893b91dc4184d0b7d4da__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_d845632d98b9fd2d13e8dbaf0c8cf1267b41fc0621502f1ee910180b73047c73__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_ebf73bba305590e4764d5cb53b69bffd6d4d092d1a67551cb346f8cfcdab8619__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_ed429417bc253b1d285ade089363828076314dff0c77fc211ca9115957f5bdf9__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"checked_add_t_uint256": {
									"entryPoint": 5212,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"checked_div_t_uint256": {
									"entryPoint": 5407,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"checked_sub_t_uint256": {
									"entryPoint": 5301,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"increment_t_uint256": {
									"entryPoint": 5237,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"panic_error_0x11": {
									"entryPoint": 5192,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"panic_error_0x32": {
									"entryPoint": 5281,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"panic_error_0x41": {
									"entryPoint": 5261,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								}
							},
							"generatedSources": [
								{
									"ast": {
										"nativeSrc": "0:9530:14",
										"nodeType": "YulBlock",
										"src": "0:9530:14",
										"statements": [
											{
												"nativeSrc": "6:3:14",
												"nodeType": "YulBlock",
												"src": "6:3:14",
												"statements": []
											},
											{
												"body": {
													"nativeSrc": "207:967:14",
													"nodeType": "YulBlock",
													"src": "207:967:14",
													"statements": [
														{
															"nativeSrc": "217:12:14",
															"nodeType": "YulVariableDeclaration",
															"src": "217:12:14",
															"value": {
																"kind": "number",
																"nativeSrc": "227:2:14",
																"nodeType": "YulLiteral",
																"src": "227:2:14",
																"type": "",
																"value": "32"
															},
															"variables": [
																{
																	"name": "_1",
																	"nativeSrc": "221:2:14",
																	"nodeType": "YulTypedName",
																	"src": "221:2:14",
																	"type": ""
																}
															]
														},
														{
															"nativeSrc": "238:32:14",
															"nodeType": "YulVariableDeclaration",
															"src": "238:32:14",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "256:9:14",
																		"nodeType": "YulIdentifier",
																		"src": "256:9:14"
																	},
																	{
																		"name": "_1",
																		"nativeSrc": "267:2:14",
																		"nodeType": "YulIdentifier",
																		"src": "267:2:14"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "252:3:14",
																	"nodeType": "YulIdentifier",
																	"src": "252:3:14"
																},
																"nativeSrc": "252:18:14",
																"nodeType": "YulFunctionCall",
																"src": "252:18:14"
															},
															"variables": [
																{
																	"name": "tail_1",
																	"nativeSrc": "242:6:14",
																	"nodeType": "YulTypedName",
																	"src": "242:6:14",
																	"type": ""
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "286:9:14",
																		"nodeType": "YulIdentifier",
																		"src": "286:9:14"
																	},
																	{
																		"name": "_1",
																		"nativeSrc": "297:2:14",
																		"nodeType": "YulIdentifier",
																		"src": "297:2:14"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "279:6:14",
																	"nodeType": "YulIdentifier",
																	"src": "279:6:14"
																},
																"nativeSrc": "279:21:14",
																"nodeType": "YulFunctionCall",
																"src": "279:21:14"
															},
															"nativeSrc": "279:21:14",
															"nodeType": "YulExpressionStatement",
															"src": "279:21:14"
														},
														{
															"nativeSrc": "309:17:14",
															"nodeType": "YulVariableDeclaration",
															"src": "309:17:14",
															"value": {
																"name": "tail_1",
																"nativeSrc": "320:6:14",
																"nodeType": "YulIdentifier",
																"src": "320:6:14"
															},
															"variables": [
																{
																	"name": "pos",
																	"nativeSrc": "313:3:14",
																	"nodeType": "YulTypedName",
																	"src": "313:3:14",
																	"type": ""
																}
															]
														},
														{
															"nativeSrc": "335:27:14",
															"nodeType": "YulVariableDeclaration",
															"src": "335:27:14",
															"value": {
																"arguments": [
																	{
																		"name": "value0",
																		"nativeSrc": "355:6:14",
																		"nodeType": "YulIdentifier",
																		"src": "355:6:14"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nativeSrc": "349:5:14",
																	"nodeType": "YulIdentifier",
																	"src": "349:5:14"
																},
																"nativeSrc": "349:13:14",
																"nodeType": "YulFunctionCall",
																"src": "349:13:14"
															},
															"variables": [
																{
																	"name": "length",
																	"nativeSrc": "339:6:14",
																	"nodeType": "YulTypedName",
																	"src": "339:6:14",
																	"type": ""
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "tail_1",
																		"nativeSrc": "378:6:14",
																		"nodeType": "YulIdentifier",
																		"src": "378:6:14"
																	},
																	{
																		"name": "length",
																		"nativeSrc": "386:6:14",
																		"nodeType": "YulIdentifier",
																		"src": "386:6:14"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "371:6:14",
																	"nodeType": "YulIdentifier",
																	"src": "371:6:14"
																},
																"nativeSrc": "371:22:14",
																"nodeType": "YulFunctionCall",
																"src": "371:22:14"
															},
															"nativeSrc": "371:22:14",
															"nodeType": "YulExpressionStatement",
															"src": "371:22:14"
														},
														{
															"nativeSrc": "402:12:14",
															"nodeType": "YulVariableDeclaration",
															"src": "402:12:14",
															"value": {
																"kind": "number",
																"nativeSrc": "412:2:14",
																"nodeType": "YulLiteral",
																"src": "412:2:14",
																"type": "",
																"value": "64"
															},
															"variables": [
																{
																	"name": "_2",
																	"nativeSrc": "406:2:14",
																	"nodeType": "YulTypedName",
																	"src": "406:2:14",
																	"type": ""
																}
															]
														},
														{
															"nativeSrc": "423:25:14",
															"nodeType": "YulAssignment",
															"src": "423:25:14",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "434:9:14",
																		"nodeType": "YulIdentifier",
																		"src": "434:9:14"
																	},
																	{
																		"name": "_2",
																		"nativeSrc": "445:2:14",
																		"nodeType": "YulIdentifier",
																		"src": "445:2:14"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "430:3:14",
																	"nodeType": "YulIdentifier",
																	"src": "430:3:14"
																},
																"nativeSrc": "430:18:14",
																"nodeType": "YulFunctionCall",
																"src": "430:18:14"
															},
															"variableNames": [
																{
																	"name": "pos",
																	"nativeSrc": "423:3:14",
																	"nodeType": "YulIdentifier",
																	"src": "423:3:14"
																}
															]
														},
														{
															"nativeSrc": "457:29:14",
															"nodeType": "YulVariableDeclaration",
															"src": "457:29:14",
															"value": {
																"arguments": [
																	{
																		"name": "value0",
																		"nativeSrc": "475:6:14",
																		"nodeType": "YulIdentifier",
																		"src": "475:6:14"
																	},
																	{
																		"name": "_1",
																		"nativeSrc": "483:2:14",
																		"nodeType": "YulIdentifier",
																		"src": "483:2:14"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "471:3:14",
																	"nodeType": "YulIdentifier",
																	"src": "471:3:14"
																},
																"nativeSrc": "471:15:14",
																"nodeType": "YulFunctionCall",
																"src": "471:15:14"
															},
															"variables": [
																{
																	"name": "srcPtr",
																	"nativeSrc": "461:6:14",
																	"nodeType": "YulTypedName",
																	"src": "461:6:14",
																	"type": ""
																}
															]
														},
														{
															"nativeSrc": "495:10:14",
															"nodeType": "YulVariableDeclaration",
															"src": "495:10:14",
															"value": {
																"kind": "number",
																"nativeSrc": "504:1:14",
																"nodeType": "YulLiteral",
																"src": "504:1:14",
																"type": "",
																"value": "0"
															},
															"variables": [
																{
																	"name": "i",
																	"nativeSrc": "499:1:14",
																	"nodeType": "YulTypedName",
																	"src": "499:1:14",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nativeSrc": "563:585:14",
																"nodeType": "YulBlock",
																"src": "563:585:14",
																"statements": [
																	{
																		"nativeSrc": "577:23:14",
																		"nodeType": "YulVariableDeclaration",
																		"src": "577:23:14",
																		"value": {
																			"arguments": [
																				{
																					"name": "srcPtr",
																					"nativeSrc": "593:6:14",
																					"nodeType": "YulIdentifier",
																					"src": "593:6:14"
																				}
																			],
																			"functionName": {
																				"name": "mload",
																				"nativeSrc": "587:5:14",
																				"nodeType": "YulIdentifier",
																				"src": "587:5:14"
																			},
																			"nativeSrc": "587:13:14",
																			"nodeType": "YulFunctionCall",
																			"src": "587:13:14"
																		},
																		"variables": [
																			{
																				"name": "_3",
																				"nativeSrc": "581:2:14",
																				"nodeType": "YulTypedName",
																				"src": "581:2:14",
																				"type": ""
																			}
																		]
																	},
																	{
																		"nativeSrc": "613:29:14",
																		"nodeType": "YulVariableDeclaration",
																		"src": "613:29:14",
																		"value": {
																			"arguments": [
																				{
																					"arguments": [
																						{
																							"kind": "number",
																							"nativeSrc": "631:3:14",
																							"nodeType": "YulLiteral",
																							"src": "631:3:14",
																							"type": "",
																							"value": "160"
																						},
																						{
																							"kind": "number",
																							"nativeSrc": "636:1:14",
																							"nodeType": "YulLiteral",
																							"src": "636:1:14",
																							"type": "",
																							"value": "1"
																						}
																					],
																					"functionName": {
																						"name": "shl",
																						"nativeSrc": "627:3:14",
																						"nodeType": "YulIdentifier",
																						"src": "627:3:14"
																					},
																					"nativeSrc": "627:11:14",
																					"nodeType": "YulFunctionCall",
																					"src": "627:11:14"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "640:1:14",
																					"nodeType": "YulLiteral",
																					"src": "640:1:14",
																					"type": "",
																					"value": "1"
																				}
																			],
																			"functionName": {
																				"name": "sub",
																				"nativeSrc": "623:3:14",
																				"nodeType": "YulIdentifier",
																				"src": "623:3:14"
																			},
																			"nativeSrc": "623:19:14",
																			"nodeType": "YulFunctionCall",
																			"src": "623:19:14"
																		},
																		"variables": [
																			{
																				"name": "_4",
																				"nativeSrc": "617:2:14",
																				"nodeType": "YulTypedName",
																				"src": "617:2:14",
																				"type": ""
																			}
																		]
																	},
																	{
																		"expression": {
																			"arguments": [
																				{
																					"name": "pos",
																					"nativeSrc": "662:3:14",
																					"nodeType": "YulIdentifier",
																					"src": "662:3:14"
																				},
																				{
																					"arguments": [
																						{
																							"arguments": [
																								{
																									"name": "_3",
																									"nativeSrc": "677:2:14",
																									"nodeType": "YulIdentifier",
																									"src": "677:2:14"
																								}
																							],
																							"functionName": {
																								"name": "mload",
																								"nativeSrc": "671:5:14",
																								"nodeType": "YulIdentifier",
																								"src": "671:5:14"
																							},
																							"nativeSrc": "671:9:14",
																							"nodeType": "YulFunctionCall",
																							"src": "671:9:14"
																						},
																						{
																							"name": "_4",
																							"nativeSrc": "682:2:14",
																							"nodeType": "YulIdentifier",
																							"src": "682:2:14"
																						}
																					],
																					"functionName": {
																						"name": "and",
																						"nativeSrc": "667:3:14",
																						"nodeType": "YulIdentifier",
																						"src": "667:3:14"
																					},
																					"nativeSrc": "667:18:14",
																					"nodeType": "YulFunctionCall",
																					"src": "667:18:14"
																				}
																			],
																			"functionName": {
																				"name": "mstore",
																				"nativeSrc": "655:6:14",
																				"nodeType": "YulIdentifier",
																				"src": "655:6:14"
																			},
																			"nativeSrc": "655:31:14",
																			"nodeType": "YulFunctionCall",
																			"src": "655:31:14"
																		},
																		"nativeSrc": "655:31:14",
																		"nodeType": "YulExpressionStatement",
																		"src": "655:31:14"
																	},
																	{
																		"expression": {
																			"arguments": [
																				{
																					"arguments": [
																						{
																							"name": "pos",
																							"nativeSrc": "710:3:14",
																							"nodeType": "YulIdentifier",
																							"src": "710:3:14"
																						},
																						{
																							"name": "_1",
																							"nativeSrc": "715:2:14",
																							"nodeType": "YulIdentifier",
																							"src": "715:2:14"
																						}
																					],
																					"functionName": {
																						"name": "add",
																						"nativeSrc": "706:3:14",
																						"nodeType": "YulIdentifier",
																						"src": "706:3:14"
																					},
																					"nativeSrc": "706:12:14",
																					"nodeType": "YulFunctionCall",
																					"src": "706:12:14"
																				},
																				{
																					"arguments": [
																						{
																							"arguments": [
																								{
																									"name": "_3",
																									"nativeSrc": "730:2:14",
																									"nodeType": "YulIdentifier",
																									"src": "730:2:14"
																								},
																								{
																									"name": "_1",
																									"nativeSrc": "734:2:14",
																									"nodeType": "YulIdentifier",
																									"src": "734:2:14"
																								}
																							],
																							"functionName": {
																								"name": "add",
																								"nativeSrc": "726:3:14",
																								"nodeType": "YulIdentifier",
																								"src": "726:3:14"
																							},
																							"nativeSrc": "726:11:14",
																							"nodeType": "YulFunctionCall",
																							"src": "726:11:14"
																						}
																					],
																					"functionName": {
																						"name": "mload",
																						"nativeSrc": "720:5:14",
																						"nodeType": "YulIdentifier",
																						"src": "720:5:14"
																					},
																					"nativeSrc": "720:18:14",
																					"nodeType": "YulFunctionCall",
																					"src": "720:18:14"
																				}
																			],
																			"functionName": {
																				"name": "mstore",
																				"nativeSrc": "699:6:14",
																				"nodeType": "YulIdentifier",
																				"src": "699:6:14"
																			},
																			"nativeSrc": "699:40:14",
																			"nodeType": "YulFunctionCall",
																			"src": "699:40:14"
																		},
																		"nativeSrc": "699:40:14",
																		"nodeType": "YulExpressionStatement",
																		"src": "699:40:14"
																	},
																	{
																		"expression": {
																			"arguments": [
																				{
																					"arguments": [
																						{
																							"name": "pos",
																							"nativeSrc": "763:3:14",
																							"nodeType": "YulIdentifier",
																							"src": "763:3:14"
																						},
																						{
																							"name": "_2",
																							"nativeSrc": "768:2:14",
																							"nodeType": "YulIdentifier",
																							"src": "768:2:14"
																						}
																					],
																					"functionName": {
																						"name": "add",
																						"nativeSrc": "759:3:14",
																						"nodeType": "YulIdentifier",
																						"src": "759:3:14"
																					},
																					"nativeSrc": "759:12:14",
																					"nodeType": "YulFunctionCall",
																					"src": "759:12:14"
																				},
																				{
																					"arguments": [
																						{
																							"arguments": [
																								{
																									"arguments": [
																										{
																											"name": "_3",
																											"nativeSrc": "787:2:14",
																											"nodeType": "YulIdentifier",
																											"src": "787:2:14"
																										},
																										{
																											"name": "_2",
																											"nativeSrc": "791:2:14",
																											"nodeType": "YulIdentifier",
																											"src": "791:2:14"
																										}
																									],
																									"functionName": {
																										"name": "add",
																										"nativeSrc": "783:3:14",
																										"nodeType": "YulIdentifier",
																										"src": "783:3:14"
																									},
																									"nativeSrc": "783:11:14",
																									"nodeType": "YulFunctionCall",
																									"src": "783:11:14"
																								}
																							],
																							"functionName": {
																								"name": "mload",
																								"nativeSrc": "777:5:14",
																								"nodeType": "YulIdentifier",
																								"src": "777:5:14"
																							},
																							"nativeSrc": "777:18:14",
																							"nodeType": "YulFunctionCall",
																							"src": "777:18:14"
																						},
																						{
																							"name": "_4",
																							"nativeSrc": "797:2:14",
																							"nodeType": "YulIdentifier",
																							"src": "797:2:14"
																						}
																					],
																					"functionName": {
																						"name": "and",
																						"nativeSrc": "773:3:14",
																						"nodeType": "YulIdentifier",
																						"src": "773:3:14"
																					},
																					"nativeSrc": "773:27:14",
																					"nodeType": "YulFunctionCall",
																					"src": "773:27:14"
																				}
																			],
																			"functionName": {
																				"name": "mstore",
																				"nativeSrc": "752:6:14",
																				"nodeType": "YulIdentifier",
																				"src": "752:6:14"
																			},
																			"nativeSrc": "752:49:14",
																			"nodeType": "YulFunctionCall",
																			"src": "752:49:14"
																		},
																		"nativeSrc": "752:49:14",
																		"nodeType": "YulExpressionStatement",
																		"src": "752:49:14"
																	},
																	{
																		"nativeSrc": "814:14:14",
																		"nodeType": "YulVariableDeclaration",
																		"src": "814:14:14",
																		"value": {
																			"kind": "number",
																			"nativeSrc": "824:4:14",
																			"nodeType": "YulLiteral",
																			"src": "824:4:14",
																			"type": "",
																			"value": "0x60"
																		},
																		"variables": [
																			{
																				"name": "_5",
																				"nativeSrc": "818:2:14",
																				"nodeType": "YulTypedName",
																				"src": "818:2:14",
																				"type": ""
																			}
																		]
																	},
																	{
																		"expression": {
																			"arguments": [
																				{
																					"arguments": [
																						{
																							"name": "pos",
																							"nativeSrc": "852:3:14",
																							"nodeType": "YulIdentifier",
																							"src": "852:3:14"
																						},
																						{
																							"name": "_5",
																							"nativeSrc": "857:2:14",
																							"nodeType": "YulIdentifier",
																							"src": "857:2:14"
																						}
																					],
																					"functionName": {
																						"name": "add",
																						"nativeSrc": "848:3:14",
																						"nodeType": "YulIdentifier",
																						"src": "848:3:14"
																					},
																					"nativeSrc": "848:12:14",
																					"nodeType": "YulFunctionCall",
																					"src": "848:12:14"
																				},
																				{
																					"arguments": [
																						{
																							"arguments": [
																								{
																									"arguments": [
																										{
																											"name": "_3",
																											"nativeSrc": "876:2:14",
																											"nodeType": "YulIdentifier",
																											"src": "876:2:14"
																										},
																										{
																											"name": "_5",
																											"nativeSrc": "880:2:14",
																											"nodeType": "YulIdentifier",
																											"src": "880:2:14"
																										}
																									],
																									"functionName": {
																										"name": "add",
																										"nativeSrc": "872:3:14",
																										"nodeType": "YulIdentifier",
																										"src": "872:3:14"
																									},
																									"nativeSrc": "872:11:14",
																									"nodeType": "YulFunctionCall",
																									"src": "872:11:14"
																								}
																							],
																							"functionName": {
																								"name": "mload",
																								"nativeSrc": "866:5:14",
																								"nodeType": "YulIdentifier",
																								"src": "866:5:14"
																							},
																							"nativeSrc": "866:18:14",
																							"nodeType": "YulFunctionCall",
																							"src": "866:18:14"
																						},
																						{
																							"name": "_4",
																							"nativeSrc": "886:2:14",
																							"nodeType": "YulIdentifier",
																							"src": "886:2:14"
																						}
																					],
																					"functionName": {
																						"name": "and",
																						"nativeSrc": "862:3:14",
																						"nodeType": "YulIdentifier",
																						"src": "862:3:14"
																					},
																					"nativeSrc": "862:27:14",
																					"nodeType": "YulFunctionCall",
																					"src": "862:27:14"
																				}
																			],
																			"functionName": {
																				"name": "mstore",
																				"nativeSrc": "841:6:14",
																				"nodeType": "YulIdentifier",
																				"src": "841:6:14"
																			},
																			"nativeSrc": "841:49:14",
																			"nodeType": "YulFunctionCall",
																			"src": "841:49:14"
																		},
																		"nativeSrc": "841:49:14",
																		"nodeType": "YulExpressionStatement",
																		"src": "841:49:14"
																	},
																	{
																		"nativeSrc": "903:14:14",
																		"nodeType": "YulVariableDeclaration",
																		"src": "903:14:14",
																		"value": {
																			"kind": "number",
																			"nativeSrc": "913:4:14",
																			"nodeType": "YulLiteral",
																			"src": "913:4:14",
																			"type": "",
																			"value": "0x80"
																		},
																		"variables": [
																			{
																				"name": "_6",
																				"nativeSrc": "907:2:14",
																				"nodeType": "YulTypedName",
																				"src": "907:2:14",
																				"type": ""
																			}
																		]
																	},
																	{
																		"expression": {
																			"arguments": [
																				{
																					"arguments": [
																						{
																							"name": "pos",
																							"nativeSrc": "941:3:14",
																							"nodeType": "YulIdentifier",
																							"src": "941:3:14"
																						},
																						{
																							"name": "_6",
																							"nativeSrc": "946:2:14",
																							"nodeType": "YulIdentifier",
																							"src": "946:2:14"
																						}
																					],
																					"functionName": {
																						"name": "add",
																						"nativeSrc": "937:3:14",
																						"nodeType": "YulIdentifier",
																						"src": "937:3:14"
																					},
																					"nativeSrc": "937:12:14",
																					"nodeType": "YulFunctionCall",
																					"src": "937:12:14"
																				},
																				{
																					"arguments": [
																						{
																							"arguments": [
																								{
																									"name": "_3",
																									"nativeSrc": "961:2:14",
																									"nodeType": "YulIdentifier",
																									"src": "961:2:14"
																								},
																								{
																									"name": "_6",
																									"nativeSrc": "965:2:14",
																									"nodeType": "YulIdentifier",
																									"src": "965:2:14"
																								}
																							],
																							"functionName": {
																								"name": "add",
																								"nativeSrc": "957:3:14",
																								"nodeType": "YulIdentifier",
																								"src": "957:3:14"
																							},
																							"nativeSrc": "957:11:14",
																							"nodeType": "YulFunctionCall",
																							"src": "957:11:14"
																						}
																					],
																					"functionName": {
																						"name": "mload",
																						"nativeSrc": "951:5:14",
																						"nodeType": "YulIdentifier",
																						"src": "951:5:14"
																					},
																					"nativeSrc": "951:18:14",
																					"nodeType": "YulFunctionCall",
																					"src": "951:18:14"
																				}
																			],
																			"functionName": {
																				"name": "mstore",
																				"nativeSrc": "930:6:14",
																				"nodeType": "YulIdentifier",
																				"src": "930:6:14"
																			},
																			"nativeSrc": "930:40:14",
																			"nodeType": "YulFunctionCall",
																			"src": "930:40:14"
																		},
																		"nativeSrc": "930:40:14",
																		"nodeType": "YulExpressionStatement",
																		"src": "930:40:14"
																	},
																	{
																		"nativeSrc": "983:14:14",
																		"nodeType": "YulVariableDeclaration",
																		"src": "983:14:14",
																		"value": {
																			"kind": "number",
																			"nativeSrc": "993:4:14",
																			"nodeType": "YulLiteral",
																			"src": "993:4:14",
																			"type": "",
																			"value": "0xa0"
																		},
																		"variables": [
																			{
																				"name": "_7",
																				"nativeSrc": "987:2:14",
																				"nodeType": "YulTypedName",
																				"src": "987:2:14",
																				"type": ""
																			}
																		]
																	},
																	{
																		"expression": {
																			"arguments": [
																				{
																					"arguments": [
																						{
																							"name": "pos",
																							"nativeSrc": "1021:3:14",
																							"nodeType": "YulIdentifier",
																							"src": "1021:3:14"
																						},
																						{
																							"name": "_7",
																							"nativeSrc": "1026:2:14",
																							"nodeType": "YulIdentifier",
																							"src": "1026:2:14"
																						}
																					],
																					"functionName": {
																						"name": "add",
																						"nativeSrc": "1017:3:14",
																						"nodeType": "YulIdentifier",
																						"src": "1017:3:14"
																					},
																					"nativeSrc": "1017:12:14",
																					"nodeType": "YulFunctionCall",
																					"src": "1017:12:14"
																				},
																				{
																					"arguments": [
																						{
																							"arguments": [
																								{
																									"arguments": [
																										{
																											"arguments": [
																												{
																													"name": "_3",
																													"nativeSrc": "1055:2:14",
																													"nodeType": "YulIdentifier",
																													"src": "1055:2:14"
																												},
																												{
																													"name": "_7",
																													"nativeSrc": "1059:2:14",
																													"nodeType": "YulIdentifier",
																													"src": "1059:2:14"
																												}
																											],
																											"functionName": {
																												"name": "add",
																												"nativeSrc": "1051:3:14",
																												"nodeType": "YulIdentifier",
																												"src": "1051:3:14"
																											},
																											"nativeSrc": "1051:11:14",
																											"nodeType": "YulFunctionCall",
																											"src": "1051:11:14"
																										}
																									],
																									"functionName": {
																										"name": "mload",
																										"nativeSrc": "1045:5:14",
																										"nodeType": "YulIdentifier",
																										"src": "1045:5:14"
																									},
																									"nativeSrc": "1045:18:14",
																									"nodeType": "YulFunctionCall",
																									"src": "1045:18:14"
																								}
																							],
																							"functionName": {
																								"name": "iszero",
																								"nativeSrc": "1038:6:14",
																								"nodeType": "YulIdentifier",
																								"src": "1038:6:14"
																							},
																							"nativeSrc": "1038:26:14",
																							"nodeType": "YulFunctionCall",
																							"src": "1038:26:14"
																						}
																					],
																					"functionName": {
																						"name": "iszero",
																						"nativeSrc": "1031:6:14",
																						"nodeType": "YulIdentifier",
																						"src": "1031:6:14"
																					},
																					"nativeSrc": "1031:34:14",
																					"nodeType": "YulFunctionCall",
																					"src": "1031:34:14"
																				}
																			],
																			"functionName": {
																				"name": "mstore",
																				"nativeSrc": "1010:6:14",
																				"nodeType": "YulIdentifier",
																				"src": "1010:6:14"
																			},
																			"nativeSrc": "1010:56:14",
																			"nodeType": "YulFunctionCall",
																			"src": "1010:56:14"
																		},
																		"nativeSrc": "1010:56:14",
																		"nodeType": "YulExpressionStatement",
																		"src": "1010:56:14"
																	},
																	{
																		"nativeSrc": "1079:21:14",
																		"nodeType": "YulAssignment",
																		"src": "1079:21:14",
																		"value": {
																			"arguments": [
																				{
																					"name": "pos",
																					"nativeSrc": "1090:3:14",
																					"nodeType": "YulIdentifier",
																					"src": "1090:3:14"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "1095:4:14",
																					"nodeType": "YulLiteral",
																					"src": "1095:4:14",
																					"type": "",
																					"value": "0xc0"
																				}
																			],
																			"functionName": {
																				"name": "add",
																				"nativeSrc": "1086:3:14",
																				"nodeType": "YulIdentifier",
																				"src": "1086:3:14"
																			},
																			"nativeSrc": "1086:14:14",
																			"nodeType": "YulFunctionCall",
																			"src": "1086:14:14"
																		},
																		"variableNames": [
																			{
																				"name": "pos",
																				"nativeSrc": "1079:3:14",
																				"nodeType": "YulIdentifier",
																				"src": "1079:3:14"
																			}
																		]
																	},
																	{
																		"nativeSrc": "1113:25:14",
																		"nodeType": "YulAssignment",
																		"src": "1113:25:14",
																		"value": {
																			"arguments": [
																				{
																					"name": "srcPtr",
																					"nativeSrc": "1127:6:14",
																					"nodeType": "YulIdentifier",
																					"src": "1127:6:14"
																				},
																				{
																					"name": "_1",
																					"nativeSrc": "1135:2:14",
																					"nodeType": "YulIdentifier",
																					"src": "1135:2:14"
																				}
																			],
																			"functionName": {
																				"name": "add",
																				"nativeSrc": "1123:3:14",
																				"nodeType": "YulIdentifier",
																				"src": "1123:3:14"
																			},
																			"nativeSrc": "1123:15:14",
																			"nodeType": "YulFunctionCall",
																			"src": "1123:15:14"
																		},
																		"variableNames": [
																			{
																				"name": "srcPtr",
																				"nativeSrc": "1113:6:14",
																				"nodeType": "YulIdentifier",
																				"src": "1113:6:14"
																			}
																		]
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "i",
																		"nativeSrc": "525:1:14",
																		"nodeType": "YulIdentifier",
																		"src": "525:1:14"
																	},
																	{
																		"name": "length",
																		"nativeSrc": "528:6:14",
																		"nodeType": "YulIdentifier",
																		"src": "528:6:14"
																	}
																],
																"functionName": {
																	"name": "lt",
																	"nativeSrc": "522:2:14",
																	"nodeType": "YulIdentifier",
																	"src": "522:2:14"
																},
																"nativeSrc": "522:13:14",
																"nodeType": "YulFunctionCall",
																"src": "522:13:14"
															},
															"nativeSrc": "514:634:14",
															"nodeType": "YulForLoop",
															"post": {
																"nativeSrc": "536:18:14",
																"nodeType": "YulBlock",
																"src": "536:18:14",
																"statements": [
																	{
																		"nativeSrc": "538:14:14",
																		"nodeType": "YulAssignment",
																		"src": "538:14:14",
																		"value": {
																			"arguments": [
																				{
																					"name": "i",
																					"nativeSrc": "547:1:14",
																					"nodeType": "YulIdentifier",
																					"src": "547:1:14"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "550:1:14",
																					"nodeType": "YulLiteral",
																					"src": "550:1:14",
																					"type": "",
																					"value": "1"
																				}
																			],
																			"functionName": {
																				"name": "add",
																				"nativeSrc": "543:3:14",
																				"nodeType": "YulIdentifier",
																				"src": "543:3:14"
																			},
																			"nativeSrc": "543:9:14",
																			"nodeType": "YulFunctionCall",
																			"src": "543:9:14"
																		},
																		"variableNames": [
																			{
																				"name": "i",
																				"nativeSrc": "538:1:14",
																				"nodeType": "YulIdentifier",
																				"src": "538:1:14"
																			}
																		]
																	}
																]
															},
															"pre": {
																"nativeSrc": "518:3:14",
																"nodeType": "YulBlock",
																"src": "518:3:14",
																"statements": []
															},
															"src": "514:634:14"
														},
														{
															"nativeSrc": "1157:11:14",
															"nodeType": "YulAssignment",
															"src": "1157:11:14",
															"value": {
																"name": "pos",
																"nativeSrc": "1165:3:14",
																"nodeType": "YulIdentifier",
																"src": "1165:3:14"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "1157:4:14",
																	"nodeType": "YulIdentifier",
																	"src": "1157:4:14"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_array$_t_struct$_NFT_$2827_memory_ptr_$dyn_memory_ptr__to_t_array$_t_struct$_NFT_$2827_memory_ptr_$dyn_memory_ptr__fromStack_reversed",
												"nativeSrc": "14:1160:14",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "176:9:14",
														"nodeType": "YulTypedName",
														"src": "176:9:14",
														"type": ""
													},
													{
														"name": "value0",
														"nativeSrc": "187:6:14",
														"nodeType": "YulTypedName",
														"src": "187:6:14",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "198:4:14",
														"nodeType": "YulTypedName",
														"src": "198:4:14",
														"type": ""
													}
												],
												"src": "14:1160:14"
											},
											{
												"body": {
													"nativeSrc": "1249:110:14",
													"nodeType": "YulBlock",
													"src": "1249:110:14",
													"statements": [
														{
															"body": {
																"nativeSrc": "1295:16:14",
																"nodeType": "YulBlock",
																"src": "1295:16:14",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nativeSrc": "1304:1:14",
																					"nodeType": "YulLiteral",
																					"src": "1304:1:14",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "1307:1:14",
																					"nodeType": "YulLiteral",
																					"src": "1307:1:14",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nativeSrc": "1297:6:14",
																				"nodeType": "YulIdentifier",
																				"src": "1297:6:14"
																			},
																			"nativeSrc": "1297:12:14",
																			"nodeType": "YulFunctionCall",
																			"src": "1297:12:14"
																		},
																		"nativeSrc": "1297:12:14",
																		"nodeType": "YulExpressionStatement",
																		"src": "1297:12:14"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nativeSrc": "1270:7:14",
																				"nodeType": "YulIdentifier",
																				"src": "1270:7:14"
																			},
																			{
																				"name": "headStart",
																				"nativeSrc": "1279:9:14",
																				"nodeType": "YulIdentifier",
																				"src": "1279:9:14"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "1266:3:14",
																			"nodeType": "YulIdentifier",
																			"src": "1266:3:14"
																		},
																		"nativeSrc": "1266:23:14",
																		"nodeType": "YulFunctionCall",
																		"src": "1266:23:14"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "1291:2:14",
																		"nodeType": "YulLiteral",
																		"src": "1291:2:14",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nativeSrc": "1262:3:14",
																	"nodeType": "YulIdentifier",
																	"src": "1262:3:14"
																},
																"nativeSrc": "1262:32:14",
																"nodeType": "YulFunctionCall",
																"src": "1262:32:14"
															},
															"nativeSrc": "1259:52:14",
															"nodeType": "YulIf",
															"src": "1259:52:14"
														},
														{
															"nativeSrc": "1320:33:14",
															"nodeType": "YulAssignment",
															"src": "1320:33:14",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "1343:9:14",
																		"nodeType": "YulIdentifier",
																		"src": "1343:9:14"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nativeSrc": "1330:12:14",
																	"nodeType": "YulIdentifier",
																	"src": "1330:12:14"
																},
																"nativeSrc": "1330:23:14",
																"nodeType": "YulFunctionCall",
																"src": "1330:23:14"
															},
															"variableNames": [
																{
																	"name": "value0",
																	"nativeSrc": "1320:6:14",
																	"nodeType": "YulIdentifier",
																	"src": "1320:6:14"
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_uint256",
												"nativeSrc": "1179:180:14",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "1215:9:14",
														"nodeType": "YulTypedName",
														"src": "1215:9:14",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nativeSrc": "1226:7:14",
														"nodeType": "YulTypedName",
														"src": "1226:7:14",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nativeSrc": "1238:6:14",
														"nodeType": "YulTypedName",
														"src": "1238:6:14",
														"type": ""
													}
												],
												"src": "1179:180:14"
											},
											{
												"body": {
													"nativeSrc": "1465:76:14",
													"nodeType": "YulBlock",
													"src": "1465:76:14",
													"statements": [
														{
															"nativeSrc": "1475:26:14",
															"nodeType": "YulAssignment",
															"src": "1475:26:14",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "1487:9:14",
																		"nodeType": "YulIdentifier",
																		"src": "1487:9:14"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "1498:2:14",
																		"nodeType": "YulLiteral",
																		"src": "1498:2:14",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "1483:3:14",
																	"nodeType": "YulIdentifier",
																	"src": "1483:3:14"
																},
																"nativeSrc": "1483:18:14",
																"nodeType": "YulFunctionCall",
																"src": "1483:18:14"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "1475:4:14",
																	"nodeType": "YulIdentifier",
																	"src": "1475:4:14"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "1517:9:14",
																		"nodeType": "YulIdentifier",
																		"src": "1517:9:14"
																	},
																	{
																		"name": "value0",
																		"nativeSrc": "1528:6:14",
																		"nodeType": "YulIdentifier",
																		"src": "1528:6:14"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "1510:6:14",
																	"nodeType": "YulIdentifier",
																	"src": "1510:6:14"
																},
																"nativeSrc": "1510:25:14",
																"nodeType": "YulFunctionCall",
																"src": "1510:25:14"
															},
															"nativeSrc": "1510:25:14",
															"nodeType": "YulExpressionStatement",
															"src": "1510:25:14"
														}
													]
												},
												"name": "abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed",
												"nativeSrc": "1364:177:14",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "1434:9:14",
														"nodeType": "YulTypedName",
														"src": "1434:9:14",
														"type": ""
													},
													{
														"name": "value0",
														"nativeSrc": "1445:6:14",
														"nodeType": "YulTypedName",
														"src": "1445:6:14",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "1456:4:14",
														"nodeType": "YulTypedName",
														"src": "1456:4:14",
														"type": ""
													}
												],
												"src": "1364:177:14"
											},
											{
												"body": {
													"nativeSrc": "1669:161:14",
													"nodeType": "YulBlock",
													"src": "1669:161:14",
													"statements": [
														{
															"nativeSrc": "1679:26:14",
															"nodeType": "YulAssignment",
															"src": "1679:26:14",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "1691:9:14",
																		"nodeType": "YulIdentifier",
																		"src": "1691:9:14"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "1702:2:14",
																		"nodeType": "YulLiteral",
																		"src": "1702:2:14",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "1687:3:14",
																	"nodeType": "YulIdentifier",
																	"src": "1687:3:14"
																},
																"nativeSrc": "1687:18:14",
																"nodeType": "YulFunctionCall",
																"src": "1687:18:14"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "1679:4:14",
																	"nodeType": "YulIdentifier",
																	"src": "1679:4:14"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "1721:9:14",
																		"nodeType": "YulIdentifier",
																		"src": "1721:9:14"
																	},
																	{
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "value0",
																						"nativeSrc": "1746:6:14",
																						"nodeType": "YulIdentifier",
																						"src": "1746:6:14"
																					}
																				],
																				"functionName": {
																					"name": "iszero",
																					"nativeSrc": "1739:6:14",
																					"nodeType": "YulIdentifier",
																					"src": "1739:6:14"
																				},
																				"nativeSrc": "1739:14:14",
																				"nodeType": "YulFunctionCall",
																				"src": "1739:14:14"
																			}
																		],
																		"functionName": {
																			"name": "iszero",
																			"nativeSrc": "1732:6:14",
																			"nodeType": "YulIdentifier",
																			"src": "1732:6:14"
																		},
																		"nativeSrc": "1732:22:14",
																		"nodeType": "YulFunctionCall",
																		"src": "1732:22:14"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "1714:6:14",
																	"nodeType": "YulIdentifier",
																	"src": "1714:6:14"
																},
																"nativeSrc": "1714:41:14",
																"nodeType": "YulFunctionCall",
																"src": "1714:41:14"
															},
															"nativeSrc": "1714:41:14",
															"nodeType": "YulExpressionStatement",
															"src": "1714:41:14"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "1775:9:14",
																				"nodeType": "YulIdentifier",
																				"src": "1775:9:14"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "1786:2:14",
																				"nodeType": "YulLiteral",
																				"src": "1786:2:14",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "1771:3:14",
																			"nodeType": "YulIdentifier",
																			"src": "1771:3:14"
																		},
																		"nativeSrc": "1771:18:14",
																		"nodeType": "YulFunctionCall",
																		"src": "1771:18:14"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value1",
																				"nativeSrc": "1795:6:14",
																				"nodeType": "YulIdentifier",
																				"src": "1795:6:14"
																			},
																			{
																				"arguments": [
																					{
																						"arguments": [
																							{
																								"kind": "number",
																								"nativeSrc": "1811:3:14",
																								"nodeType": "YulLiteral",
																								"src": "1811:3:14",
																								"type": "",
																								"value": "160"
																							},
																							{
																								"kind": "number",
																								"nativeSrc": "1816:1:14",
																								"nodeType": "YulLiteral",
																								"src": "1816:1:14",
																								"type": "",
																								"value": "1"
																							}
																						],
																						"functionName": {
																							"name": "shl",
																							"nativeSrc": "1807:3:14",
																							"nodeType": "YulIdentifier",
																							"src": "1807:3:14"
																						},
																						"nativeSrc": "1807:11:14",
																						"nodeType": "YulFunctionCall",
																						"src": "1807:11:14"
																					},
																					{
																						"kind": "number",
																						"nativeSrc": "1820:1:14",
																						"nodeType": "YulLiteral",
																						"src": "1820:1:14",
																						"type": "",
																						"value": "1"
																					}
																				],
																				"functionName": {
																					"name": "sub",
																					"nativeSrc": "1803:3:14",
																					"nodeType": "YulIdentifier",
																					"src": "1803:3:14"
																				},
																				"nativeSrc": "1803:19:14",
																				"nodeType": "YulFunctionCall",
																				"src": "1803:19:14"
																			}
																		],
																		"functionName": {
																			"name": "and",
																			"nativeSrc": "1791:3:14",
																			"nodeType": "YulIdentifier",
																			"src": "1791:3:14"
																		},
																		"nativeSrc": "1791:32:14",
																		"nodeType": "YulFunctionCall",
																		"src": "1791:32:14"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "1764:6:14",
																	"nodeType": "YulIdentifier",
																	"src": "1764:6:14"
																},
																"nativeSrc": "1764:60:14",
																"nodeType": "YulFunctionCall",
																"src": "1764:60:14"
															},
															"nativeSrc": "1764:60:14",
															"nodeType": "YulExpressionStatement",
															"src": "1764:60:14"
														}
													]
												},
												"name": "abi_encode_tuple_t_bool_t_address__to_t_bool_t_address__fromStack_reversed",
												"nativeSrc": "1546:284:14",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "1630:9:14",
														"nodeType": "YulTypedName",
														"src": "1630:9:14",
														"type": ""
													},
													{
														"name": "value1",
														"nativeSrc": "1641:6:14",
														"nodeType": "YulTypedName",
														"src": "1641:6:14",
														"type": ""
													},
													{
														"name": "value0",
														"nativeSrc": "1649:6:14",
														"nodeType": "YulTypedName",
														"src": "1649:6:14",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "1660:4:14",
														"nodeType": "YulTypedName",
														"src": "1660:4:14",
														"type": ""
													}
												],
												"src": "1546:284:14"
											},
											{
												"body": {
													"nativeSrc": "1936:102:14",
													"nodeType": "YulBlock",
													"src": "1936:102:14",
													"statements": [
														{
															"nativeSrc": "1946:26:14",
															"nodeType": "YulAssignment",
															"src": "1946:26:14",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "1958:9:14",
																		"nodeType": "YulIdentifier",
																		"src": "1958:9:14"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "1969:2:14",
																		"nodeType": "YulLiteral",
																		"src": "1969:2:14",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "1954:3:14",
																	"nodeType": "YulIdentifier",
																	"src": "1954:3:14"
																},
																"nativeSrc": "1954:18:14",
																"nodeType": "YulFunctionCall",
																"src": "1954:18:14"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "1946:4:14",
																	"nodeType": "YulIdentifier",
																	"src": "1946:4:14"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "1988:9:14",
																		"nodeType": "YulIdentifier",
																		"src": "1988:9:14"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value0",
																				"nativeSrc": "2003:6:14",
																				"nodeType": "YulIdentifier",
																				"src": "2003:6:14"
																			},
																			{
																				"arguments": [
																					{
																						"arguments": [
																							{
																								"kind": "number",
																								"nativeSrc": "2019:3:14",
																								"nodeType": "YulLiteral",
																								"src": "2019:3:14",
																								"type": "",
																								"value": "160"
																							},
																							{
																								"kind": "number",
																								"nativeSrc": "2024:1:14",
																								"nodeType": "YulLiteral",
																								"src": "2024:1:14",
																								"type": "",
																								"value": "1"
																							}
																						],
																						"functionName": {
																							"name": "shl",
																							"nativeSrc": "2015:3:14",
																							"nodeType": "YulIdentifier",
																							"src": "2015:3:14"
																						},
																						"nativeSrc": "2015:11:14",
																						"nodeType": "YulFunctionCall",
																						"src": "2015:11:14"
																					},
																					{
																						"kind": "number",
																						"nativeSrc": "2028:1:14",
																						"nodeType": "YulLiteral",
																						"src": "2028:1:14",
																						"type": "",
																						"value": "1"
																					}
																				],
																				"functionName": {
																					"name": "sub",
																					"nativeSrc": "2011:3:14",
																					"nodeType": "YulIdentifier",
																					"src": "2011:3:14"
																				},
																				"nativeSrc": "2011:19:14",
																				"nodeType": "YulFunctionCall",
																				"src": "2011:19:14"
																			}
																		],
																		"functionName": {
																			"name": "and",
																			"nativeSrc": "1999:3:14",
																			"nodeType": "YulIdentifier",
																			"src": "1999:3:14"
																		},
																		"nativeSrc": "1999:32:14",
																		"nodeType": "YulFunctionCall",
																		"src": "1999:32:14"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "1981:6:14",
																	"nodeType": "YulIdentifier",
																	"src": "1981:6:14"
																},
																"nativeSrc": "1981:51:14",
																"nodeType": "YulFunctionCall",
																"src": "1981:51:14"
															},
															"nativeSrc": "1981:51:14",
															"nodeType": "YulExpressionStatement",
															"src": "1981:51:14"
														}
													]
												},
												"name": "abi_encode_tuple_t_address__to_t_address__fromStack_reversed",
												"nativeSrc": "1835:203:14",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "1905:9:14",
														"nodeType": "YulTypedName",
														"src": "1905:9:14",
														"type": ""
													},
													{
														"name": "value0",
														"nativeSrc": "1916:6:14",
														"nodeType": "YulTypedName",
														"src": "1916:6:14",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "1927:4:14",
														"nodeType": "YulTypedName",
														"src": "1927:4:14",
														"type": ""
													}
												],
												"src": "1835:203:14"
											},
											{
												"body": {
													"nativeSrc": "2130:161:14",
													"nodeType": "YulBlock",
													"src": "2130:161:14",
													"statements": [
														{
															"body": {
																"nativeSrc": "2176:16:14",
																"nodeType": "YulBlock",
																"src": "2176:16:14",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nativeSrc": "2185:1:14",
																					"nodeType": "YulLiteral",
																					"src": "2185:1:14",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "2188:1:14",
																					"nodeType": "YulLiteral",
																					"src": "2188:1:14",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nativeSrc": "2178:6:14",
																				"nodeType": "YulIdentifier",
																				"src": "2178:6:14"
																			},
																			"nativeSrc": "2178:12:14",
																			"nodeType": "YulFunctionCall",
																			"src": "2178:12:14"
																		},
																		"nativeSrc": "2178:12:14",
																		"nodeType": "YulExpressionStatement",
																		"src": "2178:12:14"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nativeSrc": "2151:7:14",
																				"nodeType": "YulIdentifier",
																				"src": "2151:7:14"
																			},
																			{
																				"name": "headStart",
																				"nativeSrc": "2160:9:14",
																				"nodeType": "YulIdentifier",
																				"src": "2160:9:14"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "2147:3:14",
																			"nodeType": "YulIdentifier",
																			"src": "2147:3:14"
																		},
																		"nativeSrc": "2147:23:14",
																		"nodeType": "YulFunctionCall",
																		"src": "2147:23:14"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "2172:2:14",
																		"nodeType": "YulLiteral",
																		"src": "2172:2:14",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nativeSrc": "2143:3:14",
																	"nodeType": "YulIdentifier",
																	"src": "2143:3:14"
																},
																"nativeSrc": "2143:32:14",
																"nodeType": "YulFunctionCall",
																"src": "2143:32:14"
															},
															"nativeSrc": "2140:52:14",
															"nodeType": "YulIf",
															"src": "2140:52:14"
														},
														{
															"nativeSrc": "2201:33:14",
															"nodeType": "YulAssignment",
															"src": "2201:33:14",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "2224:9:14",
																		"nodeType": "YulIdentifier",
																		"src": "2224:9:14"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nativeSrc": "2211:12:14",
																	"nodeType": "YulIdentifier",
																	"src": "2211:12:14"
																},
																"nativeSrc": "2211:23:14",
																"nodeType": "YulFunctionCall",
																"src": "2211:23:14"
															},
															"variableNames": [
																{
																	"name": "value0",
																	"nativeSrc": "2201:6:14",
																	"nodeType": "YulIdentifier",
																	"src": "2201:6:14"
																}
															]
														},
														{
															"nativeSrc": "2243:42:14",
															"nodeType": "YulAssignment",
															"src": "2243:42:14",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "2270:9:14",
																				"nodeType": "YulIdentifier",
																				"src": "2270:9:14"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "2281:2:14",
																				"nodeType": "YulLiteral",
																				"src": "2281:2:14",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "2266:3:14",
																			"nodeType": "YulIdentifier",
																			"src": "2266:3:14"
																		},
																		"nativeSrc": "2266:18:14",
																		"nodeType": "YulFunctionCall",
																		"src": "2266:18:14"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nativeSrc": "2253:12:14",
																	"nodeType": "YulIdentifier",
																	"src": "2253:12:14"
																},
																"nativeSrc": "2253:32:14",
																"nodeType": "YulFunctionCall",
																"src": "2253:32:14"
															},
															"variableNames": [
																{
																	"name": "value1",
																	"nativeSrc": "2243:6:14",
																	"nodeType": "YulIdentifier",
																	"src": "2243:6:14"
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_uint256t_uint256",
												"nativeSrc": "2043:248:14",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "2088:9:14",
														"nodeType": "YulTypedName",
														"src": "2088:9:14",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nativeSrc": "2099:7:14",
														"nodeType": "YulTypedName",
														"src": "2099:7:14",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nativeSrc": "2111:6:14",
														"nodeType": "YulTypedName",
														"src": "2111:6:14",
														"type": ""
													},
													{
														"name": "value1",
														"nativeSrc": "2119:6:14",
														"nodeType": "YulTypedName",
														"src": "2119:6:14",
														"type": ""
													}
												],
												"src": "2043:248:14"
											},
											{
												"body": {
													"nativeSrc": "2366:216:14",
													"nodeType": "YulBlock",
													"src": "2366:216:14",
													"statements": [
														{
															"body": {
																"nativeSrc": "2412:16:14",
																"nodeType": "YulBlock",
																"src": "2412:16:14",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nativeSrc": "2421:1:14",
																					"nodeType": "YulLiteral",
																					"src": "2421:1:14",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "2424:1:14",
																					"nodeType": "YulLiteral",
																					"src": "2424:1:14",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nativeSrc": "2414:6:14",
																				"nodeType": "YulIdentifier",
																				"src": "2414:6:14"
																			},
																			"nativeSrc": "2414:12:14",
																			"nodeType": "YulFunctionCall",
																			"src": "2414:12:14"
																		},
																		"nativeSrc": "2414:12:14",
																		"nodeType": "YulExpressionStatement",
																		"src": "2414:12:14"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nativeSrc": "2387:7:14",
																				"nodeType": "YulIdentifier",
																				"src": "2387:7:14"
																			},
																			{
																				"name": "headStart",
																				"nativeSrc": "2396:9:14",
																				"nodeType": "YulIdentifier",
																				"src": "2396:9:14"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "2383:3:14",
																			"nodeType": "YulIdentifier",
																			"src": "2383:3:14"
																		},
																		"nativeSrc": "2383:23:14",
																		"nodeType": "YulFunctionCall",
																		"src": "2383:23:14"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "2408:2:14",
																		"nodeType": "YulLiteral",
																		"src": "2408:2:14",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nativeSrc": "2379:3:14",
																	"nodeType": "YulIdentifier",
																	"src": "2379:3:14"
																},
																"nativeSrc": "2379:32:14",
																"nodeType": "YulFunctionCall",
																"src": "2379:32:14"
															},
															"nativeSrc": "2376:52:14",
															"nodeType": "YulIf",
															"src": "2376:52:14"
														},
														{
															"nativeSrc": "2437:36:14",
															"nodeType": "YulVariableDeclaration",
															"src": "2437:36:14",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "2463:9:14",
																		"nodeType": "YulIdentifier",
																		"src": "2463:9:14"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nativeSrc": "2450:12:14",
																	"nodeType": "YulIdentifier",
																	"src": "2450:12:14"
																},
																"nativeSrc": "2450:23:14",
																"nodeType": "YulFunctionCall",
																"src": "2450:23:14"
															},
															"variables": [
																{
																	"name": "value",
																	"nativeSrc": "2441:5:14",
																	"nodeType": "YulTypedName",
																	"src": "2441:5:14",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nativeSrc": "2536:16:14",
																"nodeType": "YulBlock",
																"src": "2536:16:14",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nativeSrc": "2545:1:14",
																					"nodeType": "YulLiteral",
																					"src": "2545:1:14",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "2548:1:14",
																					"nodeType": "YulLiteral",
																					"src": "2548:1:14",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nativeSrc": "2538:6:14",
																				"nodeType": "YulIdentifier",
																				"src": "2538:6:14"
																			},
																			"nativeSrc": "2538:12:14",
																			"nodeType": "YulFunctionCall",
																			"src": "2538:12:14"
																		},
																		"nativeSrc": "2538:12:14",
																		"nodeType": "YulExpressionStatement",
																		"src": "2538:12:14"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nativeSrc": "2495:5:14",
																				"nodeType": "YulIdentifier",
																				"src": "2495:5:14"
																			},
																			{
																				"arguments": [
																					{
																						"name": "value",
																						"nativeSrc": "2506:5:14",
																						"nodeType": "YulIdentifier",
																						"src": "2506:5:14"
																					},
																					{
																						"arguments": [
																							{
																								"arguments": [
																									{
																										"kind": "number",
																										"nativeSrc": "2521:3:14",
																										"nodeType": "YulLiteral",
																										"src": "2521:3:14",
																										"type": "",
																										"value": "160"
																									},
																									{
																										"kind": "number",
																										"nativeSrc": "2526:1:14",
																										"nodeType": "YulLiteral",
																										"src": "2526:1:14",
																										"type": "",
																										"value": "1"
																									}
																								],
																								"functionName": {
																									"name": "shl",
																									"nativeSrc": "2517:3:14",
																									"nodeType": "YulIdentifier",
																									"src": "2517:3:14"
																								},
																								"nativeSrc": "2517:11:14",
																								"nodeType": "YulFunctionCall",
																								"src": "2517:11:14"
																							},
																							{
																								"kind": "number",
																								"nativeSrc": "2530:1:14",
																								"nodeType": "YulLiteral",
																								"src": "2530:1:14",
																								"type": "",
																								"value": "1"
																							}
																						],
																						"functionName": {
																							"name": "sub",
																							"nativeSrc": "2513:3:14",
																							"nodeType": "YulIdentifier",
																							"src": "2513:3:14"
																						},
																						"nativeSrc": "2513:19:14",
																						"nodeType": "YulFunctionCall",
																						"src": "2513:19:14"
																					}
																				],
																				"functionName": {
																					"name": "and",
																					"nativeSrc": "2502:3:14",
																					"nodeType": "YulIdentifier",
																					"src": "2502:3:14"
																				},
																				"nativeSrc": "2502:31:14",
																				"nodeType": "YulFunctionCall",
																				"src": "2502:31:14"
																			}
																		],
																		"functionName": {
																			"name": "eq",
																			"nativeSrc": "2492:2:14",
																			"nodeType": "YulIdentifier",
																			"src": "2492:2:14"
																		},
																		"nativeSrc": "2492:42:14",
																		"nodeType": "YulFunctionCall",
																		"src": "2492:42:14"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nativeSrc": "2485:6:14",
																	"nodeType": "YulIdentifier",
																	"src": "2485:6:14"
																},
																"nativeSrc": "2485:50:14",
																"nodeType": "YulFunctionCall",
																"src": "2485:50:14"
															},
															"nativeSrc": "2482:70:14",
															"nodeType": "YulIf",
															"src": "2482:70:14"
														},
														{
															"nativeSrc": "2561:15:14",
															"nodeType": "YulAssignment",
															"src": "2561:15:14",
															"value": {
																"name": "value",
																"nativeSrc": "2571:5:14",
																"nodeType": "YulIdentifier",
																"src": "2571:5:14"
															},
															"variableNames": [
																{
																	"name": "value0",
																	"nativeSrc": "2561:6:14",
																	"nodeType": "YulIdentifier",
																	"src": "2561:6:14"
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_address",
												"nativeSrc": "2296:286:14",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "2332:9:14",
														"nodeType": "YulTypedName",
														"src": "2332:9:14",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nativeSrc": "2343:7:14",
														"nodeType": "YulTypedName",
														"src": "2343:7:14",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nativeSrc": "2355:6:14",
														"nodeType": "YulTypedName",
														"src": "2355:6:14",
														"type": ""
													}
												],
												"src": "2296:286:14"
											},
											{
												"body": {
													"nativeSrc": "2619:95:14",
													"nodeType": "YulBlock",
													"src": "2619:95:14",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "2636:1:14",
																		"nodeType": "YulLiteral",
																		"src": "2636:1:14",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"arguments": [
																			{
																				"kind": "number",
																				"nativeSrc": "2643:3:14",
																				"nodeType": "YulLiteral",
																				"src": "2643:3:14",
																				"type": "",
																				"value": "224"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "2648:10:14",
																				"nodeType": "YulLiteral",
																				"src": "2648:10:14",
																				"type": "",
																				"value": "0x4e487b71"
																			}
																		],
																		"functionName": {
																			"name": "shl",
																			"nativeSrc": "2639:3:14",
																			"nodeType": "YulIdentifier",
																			"src": "2639:3:14"
																		},
																		"nativeSrc": "2639:20:14",
																		"nodeType": "YulFunctionCall",
																		"src": "2639:20:14"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "2629:6:14",
																	"nodeType": "YulIdentifier",
																	"src": "2629:6:14"
																},
																"nativeSrc": "2629:31:14",
																"nodeType": "YulFunctionCall",
																"src": "2629:31:14"
															},
															"nativeSrc": "2629:31:14",
															"nodeType": "YulExpressionStatement",
															"src": "2629:31:14"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "2676:1:14",
																		"nodeType": "YulLiteral",
																		"src": "2676:1:14",
																		"type": "",
																		"value": "4"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "2679:4:14",
																		"nodeType": "YulLiteral",
																		"src": "2679:4:14",
																		"type": "",
																		"value": "0x11"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "2669:6:14",
																	"nodeType": "YulIdentifier",
																	"src": "2669:6:14"
																},
																"nativeSrc": "2669:15:14",
																"nodeType": "YulFunctionCall",
																"src": "2669:15:14"
															},
															"nativeSrc": "2669:15:14",
															"nodeType": "YulExpressionStatement",
															"src": "2669:15:14"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "2700:1:14",
																		"nodeType": "YulLiteral",
																		"src": "2700:1:14",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "2703:4:14",
																		"nodeType": "YulLiteral",
																		"src": "2703:4:14",
																		"type": "",
																		"value": "0x24"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nativeSrc": "2693:6:14",
																	"nodeType": "YulIdentifier",
																	"src": "2693:6:14"
																},
																"nativeSrc": "2693:15:14",
																"nodeType": "YulFunctionCall",
																"src": "2693:15:14"
															},
															"nativeSrc": "2693:15:14",
															"nodeType": "YulExpressionStatement",
															"src": "2693:15:14"
														}
													]
												},
												"name": "panic_error_0x11",
												"nativeSrc": "2587:127:14",
												"nodeType": "YulFunctionDefinition",
												"src": "2587:127:14"
											},
											{
												"body": {
													"nativeSrc": "2767:77:14",
													"nodeType": "YulBlock",
													"src": "2767:77:14",
													"statements": [
														{
															"nativeSrc": "2777:16:14",
															"nodeType": "YulAssignment",
															"src": "2777:16:14",
															"value": {
																"arguments": [
																	{
																		"name": "x",
																		"nativeSrc": "2788:1:14",
																		"nodeType": "YulIdentifier",
																		"src": "2788:1:14"
																	},
																	{
																		"name": "y",
																		"nativeSrc": "2791:1:14",
																		"nodeType": "YulIdentifier",
																		"src": "2791:1:14"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "2784:3:14",
																	"nodeType": "YulIdentifier",
																	"src": "2784:3:14"
																},
																"nativeSrc": "2784:9:14",
																"nodeType": "YulFunctionCall",
																"src": "2784:9:14"
															},
															"variableNames": [
																{
																	"name": "sum",
																	"nativeSrc": "2777:3:14",
																	"nodeType": "YulIdentifier",
																	"src": "2777:3:14"
																}
															]
														},
														{
															"body": {
																"nativeSrc": "2816:22:14",
																"nodeType": "YulBlock",
																"src": "2816:22:14",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "panic_error_0x11",
																				"nativeSrc": "2818:16:14",
																				"nodeType": "YulIdentifier",
																				"src": "2818:16:14"
																			},
																			"nativeSrc": "2818:18:14",
																			"nodeType": "YulFunctionCall",
																			"src": "2818:18:14"
																		},
																		"nativeSrc": "2818:18:14",
																		"nodeType": "YulExpressionStatement",
																		"src": "2818:18:14"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "x",
																		"nativeSrc": "2808:1:14",
																		"nodeType": "YulIdentifier",
																		"src": "2808:1:14"
																	},
																	{
																		"name": "sum",
																		"nativeSrc": "2811:3:14",
																		"nodeType": "YulIdentifier",
																		"src": "2811:3:14"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nativeSrc": "2805:2:14",
																	"nodeType": "YulIdentifier",
																	"src": "2805:2:14"
																},
																"nativeSrc": "2805:10:14",
																"nodeType": "YulFunctionCall",
																"src": "2805:10:14"
															},
															"nativeSrc": "2802:36:14",
															"nodeType": "YulIf",
															"src": "2802:36:14"
														}
													]
												},
												"name": "checked_add_t_uint256",
												"nativeSrc": "2719:125:14",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "x",
														"nativeSrc": "2750:1:14",
														"nodeType": "YulTypedName",
														"src": "2750:1:14",
														"type": ""
													},
													{
														"name": "y",
														"nativeSrc": "2753:1:14",
														"nodeType": "YulTypedName",
														"src": "2753:1:14",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "sum",
														"nativeSrc": "2759:3:14",
														"nodeType": "YulTypedName",
														"src": "2759:3:14",
														"type": ""
													}
												],
												"src": "2719:125:14"
											},
											{
												"body": {
													"nativeSrc": "2896:88:14",
													"nodeType": "YulBlock",
													"src": "2896:88:14",
													"statements": [
														{
															"body": {
																"nativeSrc": "2927:22:14",
																"nodeType": "YulBlock",
																"src": "2927:22:14",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "panic_error_0x11",
																				"nativeSrc": "2929:16:14",
																				"nodeType": "YulIdentifier",
																				"src": "2929:16:14"
																			},
																			"nativeSrc": "2929:18:14",
																			"nodeType": "YulFunctionCall",
																			"src": "2929:18:14"
																		},
																		"nativeSrc": "2929:18:14",
																		"nodeType": "YulExpressionStatement",
																		"src": "2929:18:14"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "2912:5:14",
																		"nodeType": "YulIdentifier",
																		"src": "2912:5:14"
																	},
																	{
																		"arguments": [
																			{
																				"kind": "number",
																				"nativeSrc": "2923:1:14",
																				"nodeType": "YulLiteral",
																				"src": "2923:1:14",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "not",
																			"nativeSrc": "2919:3:14",
																			"nodeType": "YulIdentifier",
																			"src": "2919:3:14"
																		},
																		"nativeSrc": "2919:6:14",
																		"nodeType": "YulFunctionCall",
																		"src": "2919:6:14"
																	}
																],
																"functionName": {
																	"name": "eq",
																	"nativeSrc": "2909:2:14",
																	"nodeType": "YulIdentifier",
																	"src": "2909:2:14"
																},
																"nativeSrc": "2909:17:14",
																"nodeType": "YulFunctionCall",
																"src": "2909:17:14"
															},
															"nativeSrc": "2906:43:14",
															"nodeType": "YulIf",
															"src": "2906:43:14"
														},
														{
															"nativeSrc": "2958:20:14",
															"nodeType": "YulAssignment",
															"src": "2958:20:14",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "2969:5:14",
																		"nodeType": "YulIdentifier",
																		"src": "2969:5:14"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "2976:1:14",
																		"nodeType": "YulLiteral",
																		"src": "2976:1:14",
																		"type": "",
																		"value": "1"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "2965:3:14",
																	"nodeType": "YulIdentifier",
																	"src": "2965:3:14"
																},
																"nativeSrc": "2965:13:14",
																"nodeType": "YulFunctionCall",
																"src": "2965:13:14"
															},
															"variableNames": [
																{
																	"name": "ret",
																	"nativeSrc": "2958:3:14",
																	"nodeType": "YulIdentifier",
																	"src": "2958:3:14"
																}
															]
														}
													]
												},
												"name": "increment_t_uint256",
												"nativeSrc": "2849:135:14",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "2878:5:14",
														"nodeType": "YulTypedName",
														"src": "2878:5:14",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "ret",
														"nativeSrc": "2888:3:14",
														"nodeType": "YulTypedName",
														"src": "2888:3:14",
														"type": ""
													}
												],
												"src": "2849:135:14"
											},
											{
												"body": {
													"nativeSrc": "3021:95:14",
													"nodeType": "YulBlock",
													"src": "3021:95:14",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "3038:1:14",
																		"nodeType": "YulLiteral",
																		"src": "3038:1:14",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"arguments": [
																			{
																				"kind": "number",
																				"nativeSrc": "3045:3:14",
																				"nodeType": "YulLiteral",
																				"src": "3045:3:14",
																				"type": "",
																				"value": "224"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "3050:10:14",
																				"nodeType": "YulLiteral",
																				"src": "3050:10:14",
																				"type": "",
																				"value": "0x4e487b71"
																			}
																		],
																		"functionName": {
																			"name": "shl",
																			"nativeSrc": "3041:3:14",
																			"nodeType": "YulIdentifier",
																			"src": "3041:3:14"
																		},
																		"nativeSrc": "3041:20:14",
																		"nodeType": "YulFunctionCall",
																		"src": "3041:20:14"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "3031:6:14",
																	"nodeType": "YulIdentifier",
																	"src": "3031:6:14"
																},
																"nativeSrc": "3031:31:14",
																"nodeType": "YulFunctionCall",
																"src": "3031:31:14"
															},
															"nativeSrc": "3031:31:14",
															"nodeType": "YulExpressionStatement",
															"src": "3031:31:14"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "3078:1:14",
																		"nodeType": "YulLiteral",
																		"src": "3078:1:14",
																		"type": "",
																		"value": "4"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "3081:4:14",
																		"nodeType": "YulLiteral",
																		"src": "3081:4:14",
																		"type": "",
																		"value": "0x41"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "3071:6:14",
																	"nodeType": "YulIdentifier",
																	"src": "3071:6:14"
																},
																"nativeSrc": "3071:15:14",
																"nodeType": "YulFunctionCall",
																"src": "3071:15:14"
															},
															"nativeSrc": "3071:15:14",
															"nodeType": "YulExpressionStatement",
															"src": "3071:15:14"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "3102:1:14",
																		"nodeType": "YulLiteral",
																		"src": "3102:1:14",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "3105:4:14",
																		"nodeType": "YulLiteral",
																		"src": "3105:4:14",
																		"type": "",
																		"value": "0x24"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nativeSrc": "3095:6:14",
																	"nodeType": "YulIdentifier",
																	"src": "3095:6:14"
																},
																"nativeSrc": "3095:15:14",
																"nodeType": "YulFunctionCall",
																"src": "3095:15:14"
															},
															"nativeSrc": "3095:15:14",
															"nodeType": "YulExpressionStatement",
															"src": "3095:15:14"
														}
													]
												},
												"name": "panic_error_0x41",
												"nativeSrc": "2989:127:14",
												"nodeType": "YulFunctionDefinition",
												"src": "2989:127:14"
											},
											{
												"body": {
													"nativeSrc": "3153:95:14",
													"nodeType": "YulBlock",
													"src": "3153:95:14",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "3170:1:14",
																		"nodeType": "YulLiteral",
																		"src": "3170:1:14",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"arguments": [
																			{
																				"kind": "number",
																				"nativeSrc": "3177:3:14",
																				"nodeType": "YulLiteral",
																				"src": "3177:3:14",
																				"type": "",
																				"value": "224"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "3182:10:14",
																				"nodeType": "YulLiteral",
																				"src": "3182:10:14",
																				"type": "",
																				"value": "0x4e487b71"
																			}
																		],
																		"functionName": {
																			"name": "shl",
																			"nativeSrc": "3173:3:14",
																			"nodeType": "YulIdentifier",
																			"src": "3173:3:14"
																		},
																		"nativeSrc": "3173:20:14",
																		"nodeType": "YulFunctionCall",
																		"src": "3173:20:14"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "3163:6:14",
																	"nodeType": "YulIdentifier",
																	"src": "3163:6:14"
																},
																"nativeSrc": "3163:31:14",
																"nodeType": "YulFunctionCall",
																"src": "3163:31:14"
															},
															"nativeSrc": "3163:31:14",
															"nodeType": "YulExpressionStatement",
															"src": "3163:31:14"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "3210:1:14",
																		"nodeType": "YulLiteral",
																		"src": "3210:1:14",
																		"type": "",
																		"value": "4"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "3213:4:14",
																		"nodeType": "YulLiteral",
																		"src": "3213:4:14",
																		"type": "",
																		"value": "0x32"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "3203:6:14",
																	"nodeType": "YulIdentifier",
																	"src": "3203:6:14"
																},
																"nativeSrc": "3203:15:14",
																"nodeType": "YulFunctionCall",
																"src": "3203:15:14"
															},
															"nativeSrc": "3203:15:14",
															"nodeType": "YulExpressionStatement",
															"src": "3203:15:14"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "3234:1:14",
																		"nodeType": "YulLiteral",
																		"src": "3234:1:14",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "3237:4:14",
																		"nodeType": "YulLiteral",
																		"src": "3237:4:14",
																		"type": "",
																		"value": "0x24"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nativeSrc": "3227:6:14",
																	"nodeType": "YulIdentifier",
																	"src": "3227:6:14"
																},
																"nativeSrc": "3227:15:14",
																"nodeType": "YulFunctionCall",
																"src": "3227:15:14"
															},
															"nativeSrc": "3227:15:14",
															"nodeType": "YulExpressionStatement",
															"src": "3227:15:14"
														}
													]
												},
												"name": "panic_error_0x32",
												"nativeSrc": "3121:127:14",
												"nodeType": "YulFunctionDefinition",
												"src": "3121:127:14"
											},
											{
												"body": {
													"nativeSrc": "3427:228:14",
													"nodeType": "YulBlock",
													"src": "3427:228:14",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "3444:9:14",
																		"nodeType": "YulIdentifier",
																		"src": "3444:9:14"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "3455:2:14",
																		"nodeType": "YulLiteral",
																		"src": "3455:2:14",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "3437:6:14",
																	"nodeType": "YulIdentifier",
																	"src": "3437:6:14"
																},
																"nativeSrc": "3437:21:14",
																"nodeType": "YulFunctionCall",
																"src": "3437:21:14"
															},
															"nativeSrc": "3437:21:14",
															"nodeType": "YulExpressionStatement",
															"src": "3437:21:14"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "3478:9:14",
																				"nodeType": "YulIdentifier",
																				"src": "3478:9:14"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "3489:2:14",
																				"nodeType": "YulLiteral",
																				"src": "3489:2:14",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "3474:3:14",
																			"nodeType": "YulIdentifier",
																			"src": "3474:3:14"
																		},
																		"nativeSrc": "3474:18:14",
																		"nodeType": "YulFunctionCall",
																		"src": "3474:18:14"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "3494:2:14",
																		"nodeType": "YulLiteral",
																		"src": "3494:2:14",
																		"type": "",
																		"value": "38"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "3467:6:14",
																	"nodeType": "YulIdentifier",
																	"src": "3467:6:14"
																},
																"nativeSrc": "3467:30:14",
																"nodeType": "YulFunctionCall",
																"src": "3467:30:14"
															},
															"nativeSrc": "3467:30:14",
															"nodeType": "YulExpressionStatement",
															"src": "3467:30:14"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "3517:9:14",
																				"nodeType": "YulIdentifier",
																				"src": "3517:9:14"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "3528:2:14",
																				"nodeType": "YulLiteral",
																				"src": "3528:2:14",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "3513:3:14",
																			"nodeType": "YulIdentifier",
																			"src": "3513:3:14"
																		},
																		"nativeSrc": "3513:18:14",
																		"nodeType": "YulFunctionCall",
																		"src": "3513:18:14"
																	},
																	{
																		"hexValue": "4e6f7420656e6f75676820657468657220746f20636f7665722061736b696e67",
																		"kind": "string",
																		"nativeSrc": "3533:34:14",
																		"nodeType": "YulLiteral",
																		"src": "3533:34:14",
																		"type": "",
																		"value": "Not enough ether to cover asking"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "3506:6:14",
																	"nodeType": "YulIdentifier",
																	"src": "3506:6:14"
																},
																"nativeSrc": "3506:62:14",
																"nodeType": "YulFunctionCall",
																"src": "3506:62:14"
															},
															"nativeSrc": "3506:62:14",
															"nodeType": "YulExpressionStatement",
															"src": "3506:62:14"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "3588:9:14",
																				"nodeType": "YulIdentifier",
																				"src": "3588:9:14"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "3599:2:14",
																				"nodeType": "YulLiteral",
																				"src": "3599:2:14",
																				"type": "",
																				"value": "96"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "3584:3:14",
																			"nodeType": "YulIdentifier",
																			"src": "3584:3:14"
																		},
																		"nativeSrc": "3584:18:14",
																		"nodeType": "YulFunctionCall",
																		"src": "3584:18:14"
																	},
																	{
																		"hexValue": "207072696365",
																		"kind": "string",
																		"nativeSrc": "3604:8:14",
																		"nodeType": "YulLiteral",
																		"src": "3604:8:14",
																		"type": "",
																		"value": " price"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "3577:6:14",
																	"nodeType": "YulIdentifier",
																	"src": "3577:6:14"
																},
																"nativeSrc": "3577:36:14",
																"nodeType": "YulFunctionCall",
																"src": "3577:36:14"
															},
															"nativeSrc": "3577:36:14",
															"nodeType": "YulExpressionStatement",
															"src": "3577:36:14"
														},
														{
															"nativeSrc": "3622:27:14",
															"nodeType": "YulAssignment",
															"src": "3622:27:14",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "3634:9:14",
																		"nodeType": "YulIdentifier",
																		"src": "3634:9:14"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "3645:3:14",
																		"nodeType": "YulLiteral",
																		"src": "3645:3:14",
																		"type": "",
																		"value": "128"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "3630:3:14",
																	"nodeType": "YulIdentifier",
																	"src": "3630:3:14"
																},
																"nativeSrc": "3630:19:14",
																"nodeType": "YulFunctionCall",
																"src": "3630:19:14"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "3622:4:14",
																	"nodeType": "YulIdentifier",
																	"src": "3622:4:14"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_288468593cf2e83c7107f8d1f595b66d7cf49de550d8901b5e7e75f7dc15cf6e__to_t_string_memory_ptr__fromStack_reversed",
												"nativeSrc": "3253:402:14",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "3404:9:14",
														"nodeType": "YulTypedName",
														"src": "3404:9:14",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "3418:4:14",
														"nodeType": "YulTypedName",
														"src": "3418:4:14",
														"type": ""
													}
												],
												"src": "3253:402:14"
											},
											{
												"body": {
													"nativeSrc": "3834:181:14",
													"nodeType": "YulBlock",
													"src": "3834:181:14",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "3851:9:14",
																		"nodeType": "YulIdentifier",
																		"src": "3851:9:14"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "3862:2:14",
																		"nodeType": "YulLiteral",
																		"src": "3862:2:14",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "3844:6:14",
																	"nodeType": "YulIdentifier",
																	"src": "3844:6:14"
																},
																"nativeSrc": "3844:21:14",
																"nodeType": "YulFunctionCall",
																"src": "3844:21:14"
															},
															"nativeSrc": "3844:21:14",
															"nodeType": "YulExpressionStatement",
															"src": "3844:21:14"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "3885:9:14",
																				"nodeType": "YulIdentifier",
																				"src": "3885:9:14"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "3896:2:14",
																				"nodeType": "YulLiteral",
																				"src": "3896:2:14",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "3881:3:14",
																			"nodeType": "YulIdentifier",
																			"src": "3881:3:14"
																		},
																		"nativeSrc": "3881:18:14",
																		"nodeType": "YulFunctionCall",
																		"src": "3881:18:14"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "3901:2:14",
																		"nodeType": "YulLiteral",
																		"src": "3901:2:14",
																		"type": "",
																		"value": "31"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "3874:6:14",
																	"nodeType": "YulIdentifier",
																	"src": "3874:6:14"
																},
																"nativeSrc": "3874:30:14",
																"nodeType": "YulFunctionCall",
																"src": "3874:30:14"
															},
															"nativeSrc": "3874:30:14",
															"nodeType": "YulExpressionStatement",
															"src": "3874:30:14"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "3924:9:14",
																				"nodeType": "YulIdentifier",
																				"src": "3924:9:14"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "3935:2:14",
																				"nodeType": "YulLiteral",
																				"src": "3935:2:14",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "3920:3:14",
																			"nodeType": "YulIdentifier",
																			"src": "3920:3:14"
																		},
																		"nativeSrc": "3920:18:14",
																		"nodeType": "YulFunctionCall",
																		"src": "3920:18:14"
																	},
																	{
																		"hexValue": "416e206f666665722063616e6e6f742062757920746869732053656c6c6572",
																		"kind": "string",
																		"nativeSrc": "3940:33:14",
																		"nodeType": "YulLiteral",
																		"src": "3940:33:14",
																		"type": "",
																		"value": "An offer cannot buy this Seller"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "3913:6:14",
																	"nodeType": "YulIdentifier",
																	"src": "3913:6:14"
																},
																"nativeSrc": "3913:61:14",
																"nodeType": "YulFunctionCall",
																"src": "3913:61:14"
															},
															"nativeSrc": "3913:61:14",
															"nodeType": "YulExpressionStatement",
															"src": "3913:61:14"
														},
														{
															"nativeSrc": "3983:26:14",
															"nodeType": "YulAssignment",
															"src": "3983:26:14",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "3995:9:14",
																		"nodeType": "YulIdentifier",
																		"src": "3995:9:14"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "4006:2:14",
																		"nodeType": "YulLiteral",
																		"src": "4006:2:14",
																		"type": "",
																		"value": "96"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "3991:3:14",
																	"nodeType": "YulIdentifier",
																	"src": "3991:3:14"
																},
																"nativeSrc": "3991:18:14",
																"nodeType": "YulFunctionCall",
																"src": "3991:18:14"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "3983:4:14",
																	"nodeType": "YulIdentifier",
																	"src": "3983:4:14"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_c3387487059bdef6bd8bd04aa3389df9f9fdc35f3503893b91dc4184d0b7d4da__to_t_string_memory_ptr__fromStack_reversed",
												"nativeSrc": "3660:355:14",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "3811:9:14",
														"nodeType": "YulTypedName",
														"src": "3811:9:14",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "3825:4:14",
														"nodeType": "YulTypedName",
														"src": "3825:4:14",
														"type": ""
													}
												],
												"src": "3660:355:14"
											},
											{
												"body": {
													"nativeSrc": "4069:79:14",
													"nodeType": "YulBlock",
													"src": "4069:79:14",
													"statements": [
														{
															"nativeSrc": "4079:17:14",
															"nodeType": "YulAssignment",
															"src": "4079:17:14",
															"value": {
																"arguments": [
																	{
																		"name": "x",
																		"nativeSrc": "4091:1:14",
																		"nodeType": "YulIdentifier",
																		"src": "4091:1:14"
																	},
																	{
																		"name": "y",
																		"nativeSrc": "4094:1:14",
																		"nodeType": "YulIdentifier",
																		"src": "4094:1:14"
																	}
																],
																"functionName": {
																	"name": "sub",
																	"nativeSrc": "4087:3:14",
																	"nodeType": "YulIdentifier",
																	"src": "4087:3:14"
																},
																"nativeSrc": "4087:9:14",
																"nodeType": "YulFunctionCall",
																"src": "4087:9:14"
															},
															"variableNames": [
																{
																	"name": "diff",
																	"nativeSrc": "4079:4:14",
																	"nodeType": "YulIdentifier",
																	"src": "4079:4:14"
																}
															]
														},
														{
															"body": {
																"nativeSrc": "4120:22:14",
																"nodeType": "YulBlock",
																"src": "4120:22:14",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "panic_error_0x11",
																				"nativeSrc": "4122:16:14",
																				"nodeType": "YulIdentifier",
																				"src": "4122:16:14"
																			},
																			"nativeSrc": "4122:18:14",
																			"nodeType": "YulFunctionCall",
																			"src": "4122:18:14"
																		},
																		"nativeSrc": "4122:18:14",
																		"nodeType": "YulExpressionStatement",
																		"src": "4122:18:14"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "diff",
																		"nativeSrc": "4111:4:14",
																		"nodeType": "YulIdentifier",
																		"src": "4111:4:14"
																	},
																	{
																		"name": "x",
																		"nativeSrc": "4117:1:14",
																		"nodeType": "YulIdentifier",
																		"src": "4117:1:14"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nativeSrc": "4108:2:14",
																	"nodeType": "YulIdentifier",
																	"src": "4108:2:14"
																},
																"nativeSrc": "4108:11:14",
																"nodeType": "YulFunctionCall",
																"src": "4108:11:14"
															},
															"nativeSrc": "4105:37:14",
															"nodeType": "YulIf",
															"src": "4105:37:14"
														}
													]
												},
												"name": "checked_sub_t_uint256",
												"nativeSrc": "4020:128:14",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "x",
														"nativeSrc": "4051:1:14",
														"nodeType": "YulTypedName",
														"src": "4051:1:14",
														"type": ""
													},
													{
														"name": "y",
														"nativeSrc": "4054:1:14",
														"nodeType": "YulTypedName",
														"src": "4054:1:14",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "diff",
														"nativeSrc": "4060:4:14",
														"nodeType": "YulTypedName",
														"src": "4060:4:14",
														"type": ""
													}
												],
												"src": "4020:128:14"
											},
											{
												"body": {
													"nativeSrc": "4318:218:14",
													"nodeType": "YulBlock",
													"src": "4318:218:14",
													"statements": [
														{
															"nativeSrc": "4328:26:14",
															"nodeType": "YulAssignment",
															"src": "4328:26:14",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "4340:9:14",
																		"nodeType": "YulIdentifier",
																		"src": "4340:9:14"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "4351:2:14",
																		"nodeType": "YulLiteral",
																		"src": "4351:2:14",
																		"type": "",
																		"value": "96"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "4336:3:14",
																	"nodeType": "YulIdentifier",
																	"src": "4336:3:14"
																},
																"nativeSrc": "4336:18:14",
																"nodeType": "YulFunctionCall",
																"src": "4336:18:14"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "4328:4:14",
																	"nodeType": "YulIdentifier",
																	"src": "4328:4:14"
																}
															]
														},
														{
															"nativeSrc": "4363:29:14",
															"nodeType": "YulVariableDeclaration",
															"src": "4363:29:14",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"kind": "number",
																				"nativeSrc": "4381:3:14",
																				"nodeType": "YulLiteral",
																				"src": "4381:3:14",
																				"type": "",
																				"value": "160"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "4386:1:14",
																				"nodeType": "YulLiteral",
																				"src": "4386:1:14",
																				"type": "",
																				"value": "1"
																			}
																		],
																		"functionName": {
																			"name": "shl",
																			"nativeSrc": "4377:3:14",
																			"nodeType": "YulIdentifier",
																			"src": "4377:3:14"
																		},
																		"nativeSrc": "4377:11:14",
																		"nodeType": "YulFunctionCall",
																		"src": "4377:11:14"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "4390:1:14",
																		"nodeType": "YulLiteral",
																		"src": "4390:1:14",
																		"type": "",
																		"value": "1"
																	}
																],
																"functionName": {
																	"name": "sub",
																	"nativeSrc": "4373:3:14",
																	"nodeType": "YulIdentifier",
																	"src": "4373:3:14"
																},
																"nativeSrc": "4373:19:14",
																"nodeType": "YulFunctionCall",
																"src": "4373:19:14"
															},
															"variables": [
																{
																	"name": "_1",
																	"nativeSrc": "4367:2:14",
																	"nodeType": "YulTypedName",
																	"src": "4367:2:14",
																	"type": ""
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "4408:9:14",
																		"nodeType": "YulIdentifier",
																		"src": "4408:9:14"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value0",
																				"nativeSrc": "4423:6:14",
																				"nodeType": "YulIdentifier",
																				"src": "4423:6:14"
																			},
																			{
																				"name": "_1",
																				"nativeSrc": "4431:2:14",
																				"nodeType": "YulIdentifier",
																				"src": "4431:2:14"
																			}
																		],
																		"functionName": {
																			"name": "and",
																			"nativeSrc": "4419:3:14",
																			"nodeType": "YulIdentifier",
																			"src": "4419:3:14"
																		},
																		"nativeSrc": "4419:15:14",
																		"nodeType": "YulFunctionCall",
																		"src": "4419:15:14"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "4401:6:14",
																	"nodeType": "YulIdentifier",
																	"src": "4401:6:14"
																},
																"nativeSrc": "4401:34:14",
																"nodeType": "YulFunctionCall",
																"src": "4401:34:14"
															},
															"nativeSrc": "4401:34:14",
															"nodeType": "YulExpressionStatement",
															"src": "4401:34:14"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "4455:9:14",
																				"nodeType": "YulIdentifier",
																				"src": "4455:9:14"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "4466:2:14",
																				"nodeType": "YulLiteral",
																				"src": "4466:2:14",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "4451:3:14",
																			"nodeType": "YulIdentifier",
																			"src": "4451:3:14"
																		},
																		"nativeSrc": "4451:18:14",
																		"nodeType": "YulFunctionCall",
																		"src": "4451:18:14"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value1",
																				"nativeSrc": "4475:6:14",
																				"nodeType": "YulIdentifier",
																				"src": "4475:6:14"
																			},
																			{
																				"name": "_1",
																				"nativeSrc": "4483:2:14",
																				"nodeType": "YulIdentifier",
																				"src": "4483:2:14"
																			}
																		],
																		"functionName": {
																			"name": "and",
																			"nativeSrc": "4471:3:14",
																			"nodeType": "YulIdentifier",
																			"src": "4471:3:14"
																		},
																		"nativeSrc": "4471:15:14",
																		"nodeType": "YulFunctionCall",
																		"src": "4471:15:14"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "4444:6:14",
																	"nodeType": "YulIdentifier",
																	"src": "4444:6:14"
																},
																"nativeSrc": "4444:43:14",
																"nodeType": "YulFunctionCall",
																"src": "4444:43:14"
															},
															"nativeSrc": "4444:43:14",
															"nodeType": "YulExpressionStatement",
															"src": "4444:43:14"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "4507:9:14",
																				"nodeType": "YulIdentifier",
																				"src": "4507:9:14"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "4518:2:14",
																				"nodeType": "YulLiteral",
																				"src": "4518:2:14",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "4503:3:14",
																			"nodeType": "YulIdentifier",
																			"src": "4503:3:14"
																		},
																		"nativeSrc": "4503:18:14",
																		"nodeType": "YulFunctionCall",
																		"src": "4503:18:14"
																	},
																	{
																		"name": "value2",
																		"nativeSrc": "4523:6:14",
																		"nodeType": "YulIdentifier",
																		"src": "4523:6:14"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "4496:6:14",
																	"nodeType": "YulIdentifier",
																	"src": "4496:6:14"
																},
																"nativeSrc": "4496:34:14",
																"nodeType": "YulFunctionCall",
																"src": "4496:34:14"
															},
															"nativeSrc": "4496:34:14",
															"nodeType": "YulExpressionStatement",
															"src": "4496:34:14"
														}
													]
												},
												"name": "abi_encode_tuple_t_address_t_address_payable_t_uint256__to_t_address_t_address_t_uint256__fromStack_reversed",
												"nativeSrc": "4153:383:14",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "4271:9:14",
														"nodeType": "YulTypedName",
														"src": "4271:9:14",
														"type": ""
													},
													{
														"name": "value2",
														"nativeSrc": "4282:6:14",
														"nodeType": "YulTypedName",
														"src": "4282:6:14",
														"type": ""
													},
													{
														"name": "value1",
														"nativeSrc": "4290:6:14",
														"nodeType": "YulTypedName",
														"src": "4290:6:14",
														"type": ""
													},
													{
														"name": "value0",
														"nativeSrc": "4298:6:14",
														"nodeType": "YulTypedName",
														"src": "4298:6:14",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "4309:4:14",
														"nodeType": "YulTypedName",
														"src": "4309:4:14",
														"type": ""
													}
												],
												"src": "4153:383:14"
											},
											{
												"body": {
													"nativeSrc": "4770:315:14",
													"nodeType": "YulBlock",
													"src": "4770:315:14",
													"statements": [
														{
															"nativeSrc": "4780:27:14",
															"nodeType": "YulAssignment",
															"src": "4780:27:14",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "4792:9:14",
																		"nodeType": "YulIdentifier",
																		"src": "4792:9:14"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "4803:3:14",
																		"nodeType": "YulLiteral",
																		"src": "4803:3:14",
																		"type": "",
																		"value": "160"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "4788:3:14",
																	"nodeType": "YulIdentifier",
																	"src": "4788:3:14"
																},
																"nativeSrc": "4788:19:14",
																"nodeType": "YulFunctionCall",
																"src": "4788:19:14"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "4780:4:14",
																	"nodeType": "YulIdentifier",
																	"src": "4780:4:14"
																}
															]
														},
														{
															"nativeSrc": "4816:29:14",
															"nodeType": "YulVariableDeclaration",
															"src": "4816:29:14",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"kind": "number",
																				"nativeSrc": "4834:3:14",
																				"nodeType": "YulLiteral",
																				"src": "4834:3:14",
																				"type": "",
																				"value": "160"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "4839:1:14",
																				"nodeType": "YulLiteral",
																				"src": "4839:1:14",
																				"type": "",
																				"value": "1"
																			}
																		],
																		"functionName": {
																			"name": "shl",
																			"nativeSrc": "4830:3:14",
																			"nodeType": "YulIdentifier",
																			"src": "4830:3:14"
																		},
																		"nativeSrc": "4830:11:14",
																		"nodeType": "YulFunctionCall",
																		"src": "4830:11:14"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "4843:1:14",
																		"nodeType": "YulLiteral",
																		"src": "4843:1:14",
																		"type": "",
																		"value": "1"
																	}
																],
																"functionName": {
																	"name": "sub",
																	"nativeSrc": "4826:3:14",
																	"nodeType": "YulIdentifier",
																	"src": "4826:3:14"
																},
																"nativeSrc": "4826:19:14",
																"nodeType": "YulFunctionCall",
																"src": "4826:19:14"
															},
															"variables": [
																{
																	"name": "_1",
																	"nativeSrc": "4820:2:14",
																	"nodeType": "YulTypedName",
																	"src": "4820:2:14",
																	"type": ""
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "4861:9:14",
																		"nodeType": "YulIdentifier",
																		"src": "4861:9:14"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value0",
																				"nativeSrc": "4876:6:14",
																				"nodeType": "YulIdentifier",
																				"src": "4876:6:14"
																			},
																			{
																				"name": "_1",
																				"nativeSrc": "4884:2:14",
																				"nodeType": "YulIdentifier",
																				"src": "4884:2:14"
																			}
																		],
																		"functionName": {
																			"name": "and",
																			"nativeSrc": "4872:3:14",
																			"nodeType": "YulIdentifier",
																			"src": "4872:3:14"
																		},
																		"nativeSrc": "4872:15:14",
																		"nodeType": "YulFunctionCall",
																		"src": "4872:15:14"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "4854:6:14",
																	"nodeType": "YulIdentifier",
																	"src": "4854:6:14"
																},
																"nativeSrc": "4854:34:14",
																"nodeType": "YulFunctionCall",
																"src": "4854:34:14"
															},
															"nativeSrc": "4854:34:14",
															"nodeType": "YulExpressionStatement",
															"src": "4854:34:14"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "4908:9:14",
																				"nodeType": "YulIdentifier",
																				"src": "4908:9:14"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "4919:2:14",
																				"nodeType": "YulLiteral",
																				"src": "4919:2:14",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "4904:3:14",
																			"nodeType": "YulIdentifier",
																			"src": "4904:3:14"
																		},
																		"nativeSrc": "4904:18:14",
																		"nodeType": "YulFunctionCall",
																		"src": "4904:18:14"
																	},
																	{
																		"name": "value1",
																		"nativeSrc": "4924:6:14",
																		"nodeType": "YulIdentifier",
																		"src": "4924:6:14"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "4897:6:14",
																	"nodeType": "YulIdentifier",
																	"src": "4897:6:14"
																},
																"nativeSrc": "4897:34:14",
																"nodeType": "YulFunctionCall",
																"src": "4897:34:14"
															},
															"nativeSrc": "4897:34:14",
															"nodeType": "YulExpressionStatement",
															"src": "4897:34:14"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "4951:9:14",
																				"nodeType": "YulIdentifier",
																				"src": "4951:9:14"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "4962:2:14",
																				"nodeType": "YulLiteral",
																				"src": "4962:2:14",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "4947:3:14",
																			"nodeType": "YulIdentifier",
																			"src": "4947:3:14"
																		},
																		"nativeSrc": "4947:18:14",
																		"nodeType": "YulFunctionCall",
																		"src": "4947:18:14"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value2",
																				"nativeSrc": "4971:6:14",
																				"nodeType": "YulIdentifier",
																				"src": "4971:6:14"
																			},
																			{
																				"name": "_1",
																				"nativeSrc": "4979:2:14",
																				"nodeType": "YulIdentifier",
																				"src": "4979:2:14"
																			}
																		],
																		"functionName": {
																			"name": "and",
																			"nativeSrc": "4967:3:14",
																			"nodeType": "YulIdentifier",
																			"src": "4967:3:14"
																		},
																		"nativeSrc": "4967:15:14",
																		"nodeType": "YulFunctionCall",
																		"src": "4967:15:14"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "4940:6:14",
																	"nodeType": "YulIdentifier",
																	"src": "4940:6:14"
																},
																"nativeSrc": "4940:43:14",
																"nodeType": "YulFunctionCall",
																"src": "4940:43:14"
															},
															"nativeSrc": "4940:43:14",
															"nodeType": "YulExpressionStatement",
															"src": "4940:43:14"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "5003:9:14",
																				"nodeType": "YulIdentifier",
																				"src": "5003:9:14"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "5014:2:14",
																				"nodeType": "YulLiteral",
																				"src": "5014:2:14",
																				"type": "",
																				"value": "96"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "4999:3:14",
																			"nodeType": "YulIdentifier",
																			"src": "4999:3:14"
																		},
																		"nativeSrc": "4999:18:14",
																		"nodeType": "YulFunctionCall",
																		"src": "4999:18:14"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value3",
																				"nativeSrc": "5023:6:14",
																				"nodeType": "YulIdentifier",
																				"src": "5023:6:14"
																			},
																			{
																				"name": "_1",
																				"nativeSrc": "5031:2:14",
																				"nodeType": "YulIdentifier",
																				"src": "5031:2:14"
																			}
																		],
																		"functionName": {
																			"name": "and",
																			"nativeSrc": "5019:3:14",
																			"nodeType": "YulIdentifier",
																			"src": "5019:3:14"
																		},
																		"nativeSrc": "5019:15:14",
																		"nodeType": "YulFunctionCall",
																		"src": "5019:15:14"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "4992:6:14",
																	"nodeType": "YulIdentifier",
																	"src": "4992:6:14"
																},
																"nativeSrc": "4992:43:14",
																"nodeType": "YulFunctionCall",
																"src": "4992:43:14"
															},
															"nativeSrc": "4992:43:14",
															"nodeType": "YulExpressionStatement",
															"src": "4992:43:14"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "5055:9:14",
																				"nodeType": "YulIdentifier",
																				"src": "5055:9:14"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "5066:3:14",
																				"nodeType": "YulLiteral",
																				"src": "5066:3:14",
																				"type": "",
																				"value": "128"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "5051:3:14",
																			"nodeType": "YulIdentifier",
																			"src": "5051:3:14"
																		},
																		"nativeSrc": "5051:19:14",
																		"nodeType": "YulFunctionCall",
																		"src": "5051:19:14"
																	},
																	{
																		"name": "value4",
																		"nativeSrc": "5072:6:14",
																		"nodeType": "YulIdentifier",
																		"src": "5072:6:14"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "5044:6:14",
																	"nodeType": "YulIdentifier",
																	"src": "5044:6:14"
																},
																"nativeSrc": "5044:35:14",
																"nodeType": "YulFunctionCall",
																"src": "5044:35:14"
															},
															"nativeSrc": "5044:35:14",
															"nodeType": "YulExpressionStatement",
															"src": "5044:35:14"
														}
													]
												},
												"name": "abi_encode_tuple_t_address_t_uint256_t_address_payable_t_address_payable_t_uint256__to_t_address_t_uint256_t_address_t_address_t_uint256__fromStack_reversed",
												"nativeSrc": "4541:544:14",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "4707:9:14",
														"nodeType": "YulTypedName",
														"src": "4707:9:14",
														"type": ""
													},
													{
														"name": "value4",
														"nativeSrc": "4718:6:14",
														"nodeType": "YulTypedName",
														"src": "4718:6:14",
														"type": ""
													},
													{
														"name": "value3",
														"nativeSrc": "4726:6:14",
														"nodeType": "YulTypedName",
														"src": "4726:6:14",
														"type": ""
													},
													{
														"name": "value2",
														"nativeSrc": "4734:6:14",
														"nodeType": "YulTypedName",
														"src": "4734:6:14",
														"type": ""
													},
													{
														"name": "value1",
														"nativeSrc": "4742:6:14",
														"nodeType": "YulTypedName",
														"src": "4742:6:14",
														"type": ""
													},
													{
														"name": "value0",
														"nativeSrc": "4750:6:14",
														"nodeType": "YulTypedName",
														"src": "4750:6:14",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "4761:4:14",
														"nodeType": "YulTypedName",
														"src": "4761:4:14",
														"type": ""
													}
												],
												"src": "4541:544:14"
											},
											{
												"body": {
													"nativeSrc": "5264:171:14",
													"nodeType": "YulBlock",
													"src": "5264:171:14",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "5281:9:14",
																		"nodeType": "YulIdentifier",
																		"src": "5281:9:14"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "5292:2:14",
																		"nodeType": "YulLiteral",
																		"src": "5292:2:14",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "5274:6:14",
																	"nodeType": "YulIdentifier",
																	"src": "5274:6:14"
																},
																"nativeSrc": "5274:21:14",
																"nodeType": "YulFunctionCall",
																"src": "5274:21:14"
															},
															"nativeSrc": "5274:21:14",
															"nodeType": "YulExpressionStatement",
															"src": "5274:21:14"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "5315:9:14",
																				"nodeType": "YulIdentifier",
																				"src": "5315:9:14"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "5326:2:14",
																				"nodeType": "YulLiteral",
																				"src": "5326:2:14",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "5311:3:14",
																			"nodeType": "YulIdentifier",
																			"src": "5311:3:14"
																		},
																		"nativeSrc": "5311:18:14",
																		"nodeType": "YulFunctionCall",
																		"src": "5311:18:14"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "5331:2:14",
																		"nodeType": "YulLiteral",
																		"src": "5331:2:14",
																		"type": "",
																		"value": "21"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "5304:6:14",
																	"nodeType": "YulIdentifier",
																	"src": "5304:6:14"
																},
																"nativeSrc": "5304:30:14",
																"nodeType": "YulFunctionCall",
																"src": "5304:30:14"
															},
															"nativeSrc": "5304:30:14",
															"nodeType": "YulExpressionStatement",
															"src": "5304:30:14"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "5354:9:14",
																				"nodeType": "YulIdentifier",
																				"src": "5354:9:14"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "5365:2:14",
																				"nodeType": "YulLiteral",
																				"src": "5365:2:14",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "5350:3:14",
																			"nodeType": "YulIdentifier",
																			"src": "5350:3:14"
																		},
																		"nativeSrc": "5350:18:14",
																		"nodeType": "YulFunctionCall",
																		"src": "5350:18:14"
																	},
																	{
																		"hexValue": "4f6e6c79204f776e65722063616e2043616e63656c",
																		"kind": "string",
																		"nativeSrc": "5370:23:14",
																		"nodeType": "YulLiteral",
																		"src": "5370:23:14",
																		"type": "",
																		"value": "Only Owner can Cancel"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "5343:6:14",
																	"nodeType": "YulIdentifier",
																	"src": "5343:6:14"
																},
																"nativeSrc": "5343:51:14",
																"nodeType": "YulFunctionCall",
																"src": "5343:51:14"
															},
															"nativeSrc": "5343:51:14",
															"nodeType": "YulExpressionStatement",
															"src": "5343:51:14"
														},
														{
															"nativeSrc": "5403:26:14",
															"nodeType": "YulAssignment",
															"src": "5403:26:14",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "5415:9:14",
																		"nodeType": "YulIdentifier",
																		"src": "5415:9:14"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "5426:2:14",
																		"nodeType": "YulLiteral",
																		"src": "5426:2:14",
																		"type": "",
																		"value": "96"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "5411:3:14",
																	"nodeType": "YulIdentifier",
																	"src": "5411:3:14"
																},
																"nativeSrc": "5411:18:14",
																"nodeType": "YulFunctionCall",
																"src": "5411:18:14"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "5403:4:14",
																	"nodeType": "YulIdentifier",
																	"src": "5403:4:14"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_727c3a12b158040924757c03f361b4f9478c9475f21c278861c9612a31524eb2__to_t_string_memory_ptr__fromStack_reversed",
												"nativeSrc": "5090:345:14",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "5241:9:14",
														"nodeType": "YulTypedName",
														"src": "5241:9:14",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "5255:4:14",
														"nodeType": "YulTypedName",
														"src": "5255:4:14",
														"type": ""
													}
												],
												"src": "5090:345:14"
											},
											{
												"body": {
													"nativeSrc": "5597:218:14",
													"nodeType": "YulBlock",
													"src": "5597:218:14",
													"statements": [
														{
															"nativeSrc": "5607:26:14",
															"nodeType": "YulAssignment",
															"src": "5607:26:14",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "5619:9:14",
																		"nodeType": "YulIdentifier",
																		"src": "5619:9:14"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "5630:2:14",
																		"nodeType": "YulLiteral",
																		"src": "5630:2:14",
																		"type": "",
																		"value": "96"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "5615:3:14",
																	"nodeType": "YulIdentifier",
																	"src": "5615:3:14"
																},
																"nativeSrc": "5615:18:14",
																"nodeType": "YulFunctionCall",
																"src": "5615:18:14"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "5607:4:14",
																	"nodeType": "YulIdentifier",
																	"src": "5607:4:14"
																}
															]
														},
														{
															"nativeSrc": "5642:29:14",
															"nodeType": "YulVariableDeclaration",
															"src": "5642:29:14",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"kind": "number",
																				"nativeSrc": "5660:3:14",
																				"nodeType": "YulLiteral",
																				"src": "5660:3:14",
																				"type": "",
																				"value": "160"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "5665:1:14",
																				"nodeType": "YulLiteral",
																				"src": "5665:1:14",
																				"type": "",
																				"value": "1"
																			}
																		],
																		"functionName": {
																			"name": "shl",
																			"nativeSrc": "5656:3:14",
																			"nodeType": "YulIdentifier",
																			"src": "5656:3:14"
																		},
																		"nativeSrc": "5656:11:14",
																		"nodeType": "YulFunctionCall",
																		"src": "5656:11:14"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "5669:1:14",
																		"nodeType": "YulLiteral",
																		"src": "5669:1:14",
																		"type": "",
																		"value": "1"
																	}
																],
																"functionName": {
																	"name": "sub",
																	"nativeSrc": "5652:3:14",
																	"nodeType": "YulIdentifier",
																	"src": "5652:3:14"
																},
																"nativeSrc": "5652:19:14",
																"nodeType": "YulFunctionCall",
																"src": "5652:19:14"
															},
															"variables": [
																{
																	"name": "_1",
																	"nativeSrc": "5646:2:14",
																	"nodeType": "YulTypedName",
																	"src": "5646:2:14",
																	"type": ""
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "5687:9:14",
																		"nodeType": "YulIdentifier",
																		"src": "5687:9:14"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value0",
																				"nativeSrc": "5702:6:14",
																				"nodeType": "YulIdentifier",
																				"src": "5702:6:14"
																			},
																			{
																				"name": "_1",
																				"nativeSrc": "5710:2:14",
																				"nodeType": "YulIdentifier",
																				"src": "5710:2:14"
																			}
																		],
																		"functionName": {
																			"name": "and",
																			"nativeSrc": "5698:3:14",
																			"nodeType": "YulIdentifier",
																			"src": "5698:3:14"
																		},
																		"nativeSrc": "5698:15:14",
																		"nodeType": "YulFunctionCall",
																		"src": "5698:15:14"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "5680:6:14",
																	"nodeType": "YulIdentifier",
																	"src": "5680:6:14"
																},
																"nativeSrc": "5680:34:14",
																"nodeType": "YulFunctionCall",
																"src": "5680:34:14"
															},
															"nativeSrc": "5680:34:14",
															"nodeType": "YulExpressionStatement",
															"src": "5680:34:14"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "5734:9:14",
																				"nodeType": "YulIdentifier",
																				"src": "5734:9:14"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "5745:2:14",
																				"nodeType": "YulLiteral",
																				"src": "5745:2:14",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "5730:3:14",
																			"nodeType": "YulIdentifier",
																			"src": "5730:3:14"
																		},
																		"nativeSrc": "5730:18:14",
																		"nodeType": "YulFunctionCall",
																		"src": "5730:18:14"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value1",
																				"nativeSrc": "5754:6:14",
																				"nodeType": "YulIdentifier",
																				"src": "5754:6:14"
																			},
																			{
																				"name": "_1",
																				"nativeSrc": "5762:2:14",
																				"nodeType": "YulIdentifier",
																				"src": "5762:2:14"
																			}
																		],
																		"functionName": {
																			"name": "and",
																			"nativeSrc": "5750:3:14",
																			"nodeType": "YulIdentifier",
																			"src": "5750:3:14"
																		},
																		"nativeSrc": "5750:15:14",
																		"nodeType": "YulFunctionCall",
																		"src": "5750:15:14"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "5723:6:14",
																	"nodeType": "YulIdentifier",
																	"src": "5723:6:14"
																},
																"nativeSrc": "5723:43:14",
																"nodeType": "YulFunctionCall",
																"src": "5723:43:14"
															},
															"nativeSrc": "5723:43:14",
															"nodeType": "YulExpressionStatement",
															"src": "5723:43:14"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "5786:9:14",
																				"nodeType": "YulIdentifier",
																				"src": "5786:9:14"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "5797:2:14",
																				"nodeType": "YulLiteral",
																				"src": "5797:2:14",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "5782:3:14",
																			"nodeType": "YulIdentifier",
																			"src": "5782:3:14"
																		},
																		"nativeSrc": "5782:18:14",
																		"nodeType": "YulFunctionCall",
																		"src": "5782:18:14"
																	},
																	{
																		"name": "value2",
																		"nativeSrc": "5802:6:14",
																		"nodeType": "YulIdentifier",
																		"src": "5802:6:14"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "5775:6:14",
																	"nodeType": "YulIdentifier",
																	"src": "5775:6:14"
																},
																"nativeSrc": "5775:34:14",
																"nodeType": "YulFunctionCall",
																"src": "5775:34:14"
															},
															"nativeSrc": "5775:34:14",
															"nodeType": "YulExpressionStatement",
															"src": "5775:34:14"
														}
													]
												},
												"name": "abi_encode_tuple_t_address_t_address_t_uint256__to_t_address_t_address_t_uint256__fromStack_reversed",
												"nativeSrc": "5440:375:14",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "5550:9:14",
														"nodeType": "YulTypedName",
														"src": "5550:9:14",
														"type": ""
													},
													{
														"name": "value2",
														"nativeSrc": "5561:6:14",
														"nodeType": "YulTypedName",
														"src": "5561:6:14",
														"type": ""
													},
													{
														"name": "value1",
														"nativeSrc": "5569:6:14",
														"nodeType": "YulTypedName",
														"src": "5569:6:14",
														"type": ""
													},
													{
														"name": "value0",
														"nativeSrc": "5577:6:14",
														"nodeType": "YulTypedName",
														"src": "5577:6:14",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "5588:4:14",
														"nodeType": "YulTypedName",
														"src": "5588:4:14",
														"type": ""
													}
												],
												"src": "5440:375:14"
											},
											{
												"body": {
													"nativeSrc": "5866:171:14",
													"nodeType": "YulBlock",
													"src": "5866:171:14",
													"statements": [
														{
															"body": {
																"nativeSrc": "5897:111:14",
																"nodeType": "YulBlock",
																"src": "5897:111:14",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nativeSrc": "5918:1:14",
																					"nodeType": "YulLiteral",
																					"src": "5918:1:14",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"arguments": [
																						{
																							"kind": "number",
																							"nativeSrc": "5925:3:14",
																							"nodeType": "YulLiteral",
																							"src": "5925:3:14",
																							"type": "",
																							"value": "224"
																						},
																						{
																							"kind": "number",
																							"nativeSrc": "5930:10:14",
																							"nodeType": "YulLiteral",
																							"src": "5930:10:14",
																							"type": "",
																							"value": "0x4e487b71"
																						}
																					],
																					"functionName": {
																						"name": "shl",
																						"nativeSrc": "5921:3:14",
																						"nodeType": "YulIdentifier",
																						"src": "5921:3:14"
																					},
																					"nativeSrc": "5921:20:14",
																					"nodeType": "YulFunctionCall",
																					"src": "5921:20:14"
																				}
																			],
																			"functionName": {
																				"name": "mstore",
																				"nativeSrc": "5911:6:14",
																				"nodeType": "YulIdentifier",
																				"src": "5911:6:14"
																			},
																			"nativeSrc": "5911:31:14",
																			"nodeType": "YulFunctionCall",
																			"src": "5911:31:14"
																		},
																		"nativeSrc": "5911:31:14",
																		"nodeType": "YulExpressionStatement",
																		"src": "5911:31:14"
																	},
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nativeSrc": "5962:1:14",
																					"nodeType": "YulLiteral",
																					"src": "5962:1:14",
																					"type": "",
																					"value": "4"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "5965:4:14",
																					"nodeType": "YulLiteral",
																					"src": "5965:4:14",
																					"type": "",
																					"value": "0x12"
																				}
																			],
																			"functionName": {
																				"name": "mstore",
																				"nativeSrc": "5955:6:14",
																				"nodeType": "YulIdentifier",
																				"src": "5955:6:14"
																			},
																			"nativeSrc": "5955:15:14",
																			"nodeType": "YulFunctionCall",
																			"src": "5955:15:14"
																		},
																		"nativeSrc": "5955:15:14",
																		"nodeType": "YulExpressionStatement",
																		"src": "5955:15:14"
																	},
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nativeSrc": "5990:1:14",
																					"nodeType": "YulLiteral",
																					"src": "5990:1:14",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "5993:4:14",
																					"nodeType": "YulLiteral",
																					"src": "5993:4:14",
																					"type": "",
																					"value": "0x24"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nativeSrc": "5983:6:14",
																				"nodeType": "YulIdentifier",
																				"src": "5983:6:14"
																			},
																			"nativeSrc": "5983:15:14",
																			"nodeType": "YulFunctionCall",
																			"src": "5983:15:14"
																		},
																		"nativeSrc": "5983:15:14",
																		"nodeType": "YulExpressionStatement",
																		"src": "5983:15:14"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "y",
																		"nativeSrc": "5886:1:14",
																		"nodeType": "YulIdentifier",
																		"src": "5886:1:14"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nativeSrc": "5879:6:14",
																	"nodeType": "YulIdentifier",
																	"src": "5879:6:14"
																},
																"nativeSrc": "5879:9:14",
																"nodeType": "YulFunctionCall",
																"src": "5879:9:14"
															},
															"nativeSrc": "5876:132:14",
															"nodeType": "YulIf",
															"src": "5876:132:14"
														},
														{
															"nativeSrc": "6017:14:14",
															"nodeType": "YulAssignment",
															"src": "6017:14:14",
															"value": {
																"arguments": [
																	{
																		"name": "x",
																		"nativeSrc": "6026:1:14",
																		"nodeType": "YulIdentifier",
																		"src": "6026:1:14"
																	},
																	{
																		"name": "y",
																		"nativeSrc": "6029:1:14",
																		"nodeType": "YulIdentifier",
																		"src": "6029:1:14"
																	}
																],
																"functionName": {
																	"name": "div",
																	"nativeSrc": "6022:3:14",
																	"nodeType": "YulIdentifier",
																	"src": "6022:3:14"
																},
																"nativeSrc": "6022:9:14",
																"nodeType": "YulFunctionCall",
																"src": "6022:9:14"
															},
															"variableNames": [
																{
																	"name": "r",
																	"nativeSrc": "6017:1:14",
																	"nodeType": "YulIdentifier",
																	"src": "6017:1:14"
																}
															]
														}
													]
												},
												"name": "checked_div_t_uint256",
												"nativeSrc": "5820:217:14",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "x",
														"nativeSrc": "5851:1:14",
														"nodeType": "YulTypedName",
														"src": "5851:1:14",
														"type": ""
													},
													{
														"name": "y",
														"nativeSrc": "5854:1:14",
														"nodeType": "YulTypedName",
														"src": "5854:1:14",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "r",
														"nativeSrc": "5860:1:14",
														"nodeType": "YulTypedName",
														"src": "5860:1:14",
														"type": ""
													}
												],
												"src": "5820:217:14"
											},
											{
												"body": {
													"nativeSrc": "6216:178:14",
													"nodeType": "YulBlock",
													"src": "6216:178:14",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "6233:9:14",
																		"nodeType": "YulIdentifier",
																		"src": "6233:9:14"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "6244:2:14",
																		"nodeType": "YulLiteral",
																		"src": "6244:2:14",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "6226:6:14",
																	"nodeType": "YulIdentifier",
																	"src": "6226:6:14"
																},
																"nativeSrc": "6226:21:14",
																"nodeType": "YulFunctionCall",
																"src": "6226:21:14"
															},
															"nativeSrc": "6226:21:14",
															"nodeType": "YulExpressionStatement",
															"src": "6226:21:14"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "6267:9:14",
																				"nodeType": "YulIdentifier",
																				"src": "6267:9:14"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "6278:2:14",
																				"nodeType": "YulLiteral",
																				"src": "6278:2:14",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "6263:3:14",
																			"nodeType": "YulIdentifier",
																			"src": "6263:3:14"
																		},
																		"nativeSrc": "6263:18:14",
																		"nodeType": "YulFunctionCall",
																		"src": "6263:18:14"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "6283:2:14",
																		"nodeType": "YulLiteral",
																		"src": "6283:2:14",
																		"type": "",
																		"value": "28"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "6256:6:14",
																	"nodeType": "YulIdentifier",
																	"src": "6256:6:14"
																},
																"nativeSrc": "6256:30:14",
																"nodeType": "YulFunctionCall",
																"src": "6256:30:14"
															},
															"nativeSrc": "6256:30:14",
															"nodeType": "YulExpressionStatement",
															"src": "6256:30:14"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "6306:9:14",
																				"nodeType": "YulIdentifier",
																				"src": "6306:9:14"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "6317:2:14",
																				"nodeType": "YulLiteral",
																				"src": "6317:2:14",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "6302:3:14",
																			"nodeType": "YulIdentifier",
																			"src": "6302:3:14"
																		},
																		"nativeSrc": "6302:18:14",
																		"nodeType": "YulFunctionCall",
																		"src": "6302:18:14"
																	},
																	{
																		"hexValue": "5072696365206d757374206265206174206c65617374203120776569",
																		"kind": "string",
																		"nativeSrc": "6322:30:14",
																		"nodeType": "YulLiteral",
																		"src": "6322:30:14",
																		"type": "",
																		"value": "Price must be at least 1 wei"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "6295:6:14",
																	"nodeType": "YulIdentifier",
																	"src": "6295:6:14"
																},
																"nativeSrc": "6295:58:14",
																"nodeType": "YulFunctionCall",
																"src": "6295:58:14"
															},
															"nativeSrc": "6295:58:14",
															"nodeType": "YulExpressionStatement",
															"src": "6295:58:14"
														},
														{
															"nativeSrc": "6362:26:14",
															"nodeType": "YulAssignment",
															"src": "6362:26:14",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "6374:9:14",
																		"nodeType": "YulIdentifier",
																		"src": "6374:9:14"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "6385:2:14",
																		"nodeType": "YulLiteral",
																		"src": "6385:2:14",
																		"type": "",
																		"value": "96"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "6370:3:14",
																	"nodeType": "YulIdentifier",
																	"src": "6370:3:14"
																},
																"nativeSrc": "6370:18:14",
																"nodeType": "YulFunctionCall",
																"src": "6370:18:14"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "6362:4:14",
																	"nodeType": "YulIdentifier",
																	"src": "6362:4:14"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_ed429417bc253b1d285ade089363828076314dff0c77fc211ca9115957f5bdf9__to_t_string_memory_ptr__fromStack_reversed",
												"nativeSrc": "6042:352:14",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "6193:9:14",
														"nodeType": "YulTypedName",
														"src": "6193:9:14",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "6207:4:14",
														"nodeType": "YulTypedName",
														"src": "6207:4:14",
														"type": ""
													}
												],
												"src": "6042:352:14"
											},
											{
												"body": {
													"nativeSrc": "6573:178:14",
													"nodeType": "YulBlock",
													"src": "6573:178:14",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "6590:9:14",
																		"nodeType": "YulIdentifier",
																		"src": "6590:9:14"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "6601:2:14",
																		"nodeType": "YulLiteral",
																		"src": "6601:2:14",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "6583:6:14",
																	"nodeType": "YulIdentifier",
																	"src": "6583:6:14"
																},
																"nativeSrc": "6583:21:14",
																"nodeType": "YulFunctionCall",
																"src": "6583:21:14"
															},
															"nativeSrc": "6583:21:14",
															"nodeType": "YulExpressionStatement",
															"src": "6583:21:14"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "6624:9:14",
																				"nodeType": "YulIdentifier",
																				"src": "6624:9:14"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "6635:2:14",
																				"nodeType": "YulLiteral",
																				"src": "6635:2:14",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "6620:3:14",
																			"nodeType": "YulIdentifier",
																			"src": "6620:3:14"
																		},
																		"nativeSrc": "6620:18:14",
																		"nodeType": "YulFunctionCall",
																		"src": "6620:18:14"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "6640:2:14",
																		"nodeType": "YulLiteral",
																		"src": "6640:2:14",
																		"type": "",
																		"value": "28"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "6613:6:14",
																	"nodeType": "YulIdentifier",
																	"src": "6613:6:14"
																},
																"nativeSrc": "6613:30:14",
																"nodeType": "YulFunctionCall",
																"src": "6613:30:14"
															},
															"nativeSrc": "6613:30:14",
															"nodeType": "YulExpressionStatement",
															"src": "6613:30:14"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "6663:9:14",
																				"nodeType": "YulIdentifier",
																				"src": "6663:9:14"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "6674:2:14",
																				"nodeType": "YulLiteral",
																				"src": "6674:2:14",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "6659:3:14",
																			"nodeType": "YulIdentifier",
																			"src": "6659:3:14"
																		},
																		"nativeSrc": "6659:18:14",
																		"nodeType": "YulFunctionCall",
																		"src": "6659:18:14"
																	},
																	{
																		"hexValue": "4f6e6520546f6b656e204944204c6973746564204f6e652054696d65",
																		"kind": "string",
																		"nativeSrc": "6679:30:14",
																		"nodeType": "YulLiteral",
																		"src": "6679:30:14",
																		"type": "",
																		"value": "One Token ID Listed One Time"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "6652:6:14",
																	"nodeType": "YulIdentifier",
																	"src": "6652:6:14"
																},
																"nativeSrc": "6652:58:14",
																"nodeType": "YulFunctionCall",
																"src": "6652:58:14"
															},
															"nativeSrc": "6652:58:14",
															"nodeType": "YulExpressionStatement",
															"src": "6652:58:14"
														},
														{
															"nativeSrc": "6719:26:14",
															"nodeType": "YulAssignment",
															"src": "6719:26:14",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "6731:9:14",
																		"nodeType": "YulIdentifier",
																		"src": "6731:9:14"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "6742:2:14",
																		"nodeType": "YulLiteral",
																		"src": "6742:2:14",
																		"type": "",
																		"value": "96"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "6727:3:14",
																	"nodeType": "YulIdentifier",
																	"src": "6727:3:14"
																},
																"nativeSrc": "6727:18:14",
																"nodeType": "YulFunctionCall",
																"src": "6727:18:14"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "6719:4:14",
																	"nodeType": "YulIdentifier",
																	"src": "6719:4:14"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_00a2a60daad916a80621f3a1cf99deb91c2ee23995b0e12d7b477dbb9833db5b__to_t_string_memory_ptr__fromStack_reversed",
												"nativeSrc": "6399:352:14",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "6550:9:14",
														"nodeType": "YulTypedName",
														"src": "6550:9:14",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "6564:4:14",
														"nodeType": "YulTypedName",
														"src": "6564:4:14",
														"type": ""
													}
												],
												"src": "6399:352:14"
											},
											{
												"body": {
													"nativeSrc": "6969:315:14",
													"nodeType": "YulBlock",
													"src": "6969:315:14",
													"statements": [
														{
															"nativeSrc": "6979:27:14",
															"nodeType": "YulAssignment",
															"src": "6979:27:14",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "6991:9:14",
																		"nodeType": "YulIdentifier",
																		"src": "6991:9:14"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "7002:3:14",
																		"nodeType": "YulLiteral",
																		"src": "7002:3:14",
																		"type": "",
																		"value": "160"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "6987:3:14",
																	"nodeType": "YulIdentifier",
																	"src": "6987:3:14"
																},
																"nativeSrc": "6987:19:14",
																"nodeType": "YulFunctionCall",
																"src": "6987:19:14"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "6979:4:14",
																	"nodeType": "YulIdentifier",
																	"src": "6979:4:14"
																}
															]
														},
														{
															"nativeSrc": "7015:29:14",
															"nodeType": "YulVariableDeclaration",
															"src": "7015:29:14",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"kind": "number",
																				"nativeSrc": "7033:3:14",
																				"nodeType": "YulLiteral",
																				"src": "7033:3:14",
																				"type": "",
																				"value": "160"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "7038:1:14",
																				"nodeType": "YulLiteral",
																				"src": "7038:1:14",
																				"type": "",
																				"value": "1"
																			}
																		],
																		"functionName": {
																			"name": "shl",
																			"nativeSrc": "7029:3:14",
																			"nodeType": "YulIdentifier",
																			"src": "7029:3:14"
																		},
																		"nativeSrc": "7029:11:14",
																		"nodeType": "YulFunctionCall",
																		"src": "7029:11:14"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "7042:1:14",
																		"nodeType": "YulLiteral",
																		"src": "7042:1:14",
																		"type": "",
																		"value": "1"
																	}
																],
																"functionName": {
																	"name": "sub",
																	"nativeSrc": "7025:3:14",
																	"nodeType": "YulIdentifier",
																	"src": "7025:3:14"
																},
																"nativeSrc": "7025:19:14",
																"nodeType": "YulFunctionCall",
																"src": "7025:19:14"
															},
															"variables": [
																{
																	"name": "_1",
																	"nativeSrc": "7019:2:14",
																	"nodeType": "YulTypedName",
																	"src": "7019:2:14",
																	"type": ""
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "7060:9:14",
																		"nodeType": "YulIdentifier",
																		"src": "7060:9:14"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value0",
																				"nativeSrc": "7075:6:14",
																				"nodeType": "YulIdentifier",
																				"src": "7075:6:14"
																			},
																			{
																				"name": "_1",
																				"nativeSrc": "7083:2:14",
																				"nodeType": "YulIdentifier",
																				"src": "7083:2:14"
																			}
																		],
																		"functionName": {
																			"name": "and",
																			"nativeSrc": "7071:3:14",
																			"nodeType": "YulIdentifier",
																			"src": "7071:3:14"
																		},
																		"nativeSrc": "7071:15:14",
																		"nodeType": "YulFunctionCall",
																		"src": "7071:15:14"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "7053:6:14",
																	"nodeType": "YulIdentifier",
																	"src": "7053:6:14"
																},
																"nativeSrc": "7053:34:14",
																"nodeType": "YulFunctionCall",
																"src": "7053:34:14"
															},
															"nativeSrc": "7053:34:14",
															"nodeType": "YulExpressionStatement",
															"src": "7053:34:14"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "7107:9:14",
																				"nodeType": "YulIdentifier",
																				"src": "7107:9:14"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "7118:2:14",
																				"nodeType": "YulLiteral",
																				"src": "7118:2:14",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "7103:3:14",
																			"nodeType": "YulIdentifier",
																			"src": "7103:3:14"
																		},
																		"nativeSrc": "7103:18:14",
																		"nodeType": "YulFunctionCall",
																		"src": "7103:18:14"
																	},
																	{
																		"name": "value1",
																		"nativeSrc": "7123:6:14",
																		"nodeType": "YulIdentifier",
																		"src": "7123:6:14"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "7096:6:14",
																	"nodeType": "YulIdentifier",
																	"src": "7096:6:14"
																},
																"nativeSrc": "7096:34:14",
																"nodeType": "YulFunctionCall",
																"src": "7096:34:14"
															},
															"nativeSrc": "7096:34:14",
															"nodeType": "YulExpressionStatement",
															"src": "7096:34:14"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "7150:9:14",
																				"nodeType": "YulIdentifier",
																				"src": "7150:9:14"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "7161:2:14",
																				"nodeType": "YulLiteral",
																				"src": "7161:2:14",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "7146:3:14",
																			"nodeType": "YulIdentifier",
																			"src": "7146:3:14"
																		},
																		"nativeSrc": "7146:18:14",
																		"nodeType": "YulFunctionCall",
																		"src": "7146:18:14"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value2",
																				"nativeSrc": "7170:6:14",
																				"nodeType": "YulIdentifier",
																				"src": "7170:6:14"
																			},
																			{
																				"name": "_1",
																				"nativeSrc": "7178:2:14",
																				"nodeType": "YulIdentifier",
																				"src": "7178:2:14"
																			}
																		],
																		"functionName": {
																			"name": "and",
																			"nativeSrc": "7166:3:14",
																			"nodeType": "YulIdentifier",
																			"src": "7166:3:14"
																		},
																		"nativeSrc": "7166:15:14",
																		"nodeType": "YulFunctionCall",
																		"src": "7166:15:14"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "7139:6:14",
																	"nodeType": "YulIdentifier",
																	"src": "7139:6:14"
																},
																"nativeSrc": "7139:43:14",
																"nodeType": "YulFunctionCall",
																"src": "7139:43:14"
															},
															"nativeSrc": "7139:43:14",
															"nodeType": "YulExpressionStatement",
															"src": "7139:43:14"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "7202:9:14",
																				"nodeType": "YulIdentifier",
																				"src": "7202:9:14"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "7213:2:14",
																				"nodeType": "YulLiteral",
																				"src": "7213:2:14",
																				"type": "",
																				"value": "96"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "7198:3:14",
																			"nodeType": "YulIdentifier",
																			"src": "7198:3:14"
																		},
																		"nativeSrc": "7198:18:14",
																		"nodeType": "YulFunctionCall",
																		"src": "7198:18:14"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value3",
																				"nativeSrc": "7222:6:14",
																				"nodeType": "YulIdentifier",
																				"src": "7222:6:14"
																			},
																			{
																				"name": "_1",
																				"nativeSrc": "7230:2:14",
																				"nodeType": "YulIdentifier",
																				"src": "7230:2:14"
																			}
																		],
																		"functionName": {
																			"name": "and",
																			"nativeSrc": "7218:3:14",
																			"nodeType": "YulIdentifier",
																			"src": "7218:3:14"
																		},
																		"nativeSrc": "7218:15:14",
																		"nodeType": "YulFunctionCall",
																		"src": "7218:15:14"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "7191:6:14",
																	"nodeType": "YulIdentifier",
																	"src": "7191:6:14"
																},
																"nativeSrc": "7191:43:14",
																"nodeType": "YulFunctionCall",
																"src": "7191:43:14"
															},
															"nativeSrc": "7191:43:14",
															"nodeType": "YulExpressionStatement",
															"src": "7191:43:14"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "7254:9:14",
																				"nodeType": "YulIdentifier",
																				"src": "7254:9:14"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "7265:3:14",
																				"nodeType": "YulLiteral",
																				"src": "7265:3:14",
																				"type": "",
																				"value": "128"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "7250:3:14",
																			"nodeType": "YulIdentifier",
																			"src": "7250:3:14"
																		},
																		"nativeSrc": "7250:19:14",
																		"nodeType": "YulFunctionCall",
																		"src": "7250:19:14"
																	},
																	{
																		"name": "value4",
																		"nativeSrc": "7271:6:14",
																		"nodeType": "YulIdentifier",
																		"src": "7271:6:14"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "7243:6:14",
																	"nodeType": "YulIdentifier",
																	"src": "7243:6:14"
																},
																"nativeSrc": "7243:35:14",
																"nodeType": "YulFunctionCall",
																"src": "7243:35:14"
															},
															"nativeSrc": "7243:35:14",
															"nodeType": "YulExpressionStatement",
															"src": "7243:35:14"
														}
													]
												},
												"name": "abi_encode_tuple_t_address_t_uint256_t_address_t_address_t_uint256__to_t_address_t_uint256_t_address_t_address_t_uint256__fromStack_reversed",
												"nativeSrc": "6756:528:14",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "6906:9:14",
														"nodeType": "YulTypedName",
														"src": "6906:9:14",
														"type": ""
													},
													{
														"name": "value4",
														"nativeSrc": "6917:6:14",
														"nodeType": "YulTypedName",
														"src": "6917:6:14",
														"type": ""
													},
													{
														"name": "value3",
														"nativeSrc": "6925:6:14",
														"nodeType": "YulTypedName",
														"src": "6925:6:14",
														"type": ""
													},
													{
														"name": "value2",
														"nativeSrc": "6933:6:14",
														"nodeType": "YulTypedName",
														"src": "6933:6:14",
														"type": ""
													},
													{
														"name": "value1",
														"nativeSrc": "6941:6:14",
														"nodeType": "YulTypedName",
														"src": "6941:6:14",
														"type": ""
													},
													{
														"name": "value0",
														"nativeSrc": "6949:6:14",
														"nodeType": "YulTypedName",
														"src": "6949:6:14",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "6960:4:14",
														"nodeType": "YulTypedName",
														"src": "6960:4:14",
														"type": ""
													}
												],
												"src": "6756:528:14"
											},
											{
												"body": {
													"nativeSrc": "7463:225:14",
													"nodeType": "YulBlock",
													"src": "7463:225:14",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "7480:9:14",
																		"nodeType": "YulIdentifier",
																		"src": "7480:9:14"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "7491:2:14",
																		"nodeType": "YulLiteral",
																		"src": "7491:2:14",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "7473:6:14",
																	"nodeType": "YulIdentifier",
																	"src": "7473:6:14"
																},
																"nativeSrc": "7473:21:14",
																"nodeType": "YulFunctionCall",
																"src": "7473:21:14"
															},
															"nativeSrc": "7473:21:14",
															"nodeType": "YulExpressionStatement",
															"src": "7473:21:14"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "7514:9:14",
																				"nodeType": "YulIdentifier",
																				"src": "7514:9:14"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "7525:2:14",
																				"nodeType": "YulLiteral",
																				"src": "7525:2:14",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "7510:3:14",
																			"nodeType": "YulIdentifier",
																			"src": "7510:3:14"
																		},
																		"nativeSrc": "7510:18:14",
																		"nodeType": "YulFunctionCall",
																		"src": "7510:18:14"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "7530:2:14",
																		"nodeType": "YulLiteral",
																		"src": "7530:2:14",
																		"type": "",
																		"value": "35"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "7503:6:14",
																	"nodeType": "YulIdentifier",
																	"src": "7503:6:14"
																},
																"nativeSrc": "7503:30:14",
																"nodeType": "YulFunctionCall",
																"src": "7503:30:14"
															},
															"nativeSrc": "7503:30:14",
															"nodeType": "YulExpressionStatement",
															"src": "7503:30:14"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "7553:9:14",
																				"nodeType": "YulIdentifier",
																				"src": "7553:9:14"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "7564:2:14",
																				"nodeType": "YulLiteral",
																				"src": "7564:2:14",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "7549:3:14",
																			"nodeType": "YulIdentifier",
																			"src": "7549:3:14"
																		},
																		"nativeSrc": "7549:18:14",
																		"nodeType": "YulFunctionCall",
																		"src": "7549:18:14"
																	},
																	{
																		"hexValue": "4f6e6c79206f776e6572204f66207468697320546f6b656e2043616e20526573",
																		"kind": "string",
																		"nativeSrc": "7569:34:14",
																		"nodeType": "YulLiteral",
																		"src": "7569:34:14",
																		"type": "",
																		"value": "Only owner Of this Token Can Res"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "7542:6:14",
																	"nodeType": "YulIdentifier",
																	"src": "7542:6:14"
																},
																"nativeSrc": "7542:62:14",
																"nodeType": "YulFunctionCall",
																"src": "7542:62:14"
															},
															"nativeSrc": "7542:62:14",
															"nodeType": "YulExpressionStatement",
															"src": "7542:62:14"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "7624:9:14",
																				"nodeType": "YulIdentifier",
																				"src": "7624:9:14"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "7635:2:14",
																				"nodeType": "YulLiteral",
																				"src": "7635:2:14",
																				"type": "",
																				"value": "96"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "7620:3:14",
																			"nodeType": "YulIdentifier",
																			"src": "7620:3:14"
																		},
																		"nativeSrc": "7620:18:14",
																		"nodeType": "YulFunctionCall",
																		"src": "7620:18:14"
																	},
																	{
																		"hexValue": "656c6c",
																		"kind": "string",
																		"nativeSrc": "7640:5:14",
																		"nodeType": "YulLiteral",
																		"src": "7640:5:14",
																		"type": "",
																		"value": "ell"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "7613:6:14",
																	"nodeType": "YulIdentifier",
																	"src": "7613:6:14"
																},
																"nativeSrc": "7613:33:14",
																"nodeType": "YulFunctionCall",
																"src": "7613:33:14"
															},
															"nativeSrc": "7613:33:14",
															"nodeType": "YulExpressionStatement",
															"src": "7613:33:14"
														},
														{
															"nativeSrc": "7655:27:14",
															"nodeType": "YulAssignment",
															"src": "7655:27:14",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "7667:9:14",
																		"nodeType": "YulIdentifier",
																		"src": "7667:9:14"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "7678:3:14",
																		"nodeType": "YulLiteral",
																		"src": "7678:3:14",
																		"type": "",
																		"value": "128"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "7663:3:14",
																	"nodeType": "YulIdentifier",
																	"src": "7663:3:14"
																},
																"nativeSrc": "7663:19:14",
																"nodeType": "YulFunctionCall",
																"src": "7663:19:14"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "7655:4:14",
																	"nodeType": "YulIdentifier",
																	"src": "7655:4:14"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_d845632d98b9fd2d13e8dbaf0c8cf1267b41fc0621502f1ee910180b73047c73__to_t_string_memory_ptr__fromStack_reversed",
												"nativeSrc": "7289:399:14",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "7440:9:14",
														"nodeType": "YulTypedName",
														"src": "7440:9:14",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "7454:4:14",
														"nodeType": "YulTypedName",
														"src": "7454:4:14",
														"type": ""
													}
												],
												"src": "7289:399:14"
											},
											{
												"body": {
													"nativeSrc": "7867:177:14",
													"nodeType": "YulBlock",
													"src": "7867:177:14",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "7884:9:14",
																		"nodeType": "YulIdentifier",
																		"src": "7884:9:14"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "7895:2:14",
																		"nodeType": "YulLiteral",
																		"src": "7895:2:14",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "7877:6:14",
																	"nodeType": "YulIdentifier",
																	"src": "7877:6:14"
																},
																"nativeSrc": "7877:21:14",
																"nodeType": "YulFunctionCall",
																"src": "7877:21:14"
															},
															"nativeSrc": "7877:21:14",
															"nodeType": "YulExpressionStatement",
															"src": "7877:21:14"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "7918:9:14",
																				"nodeType": "YulIdentifier",
																				"src": "7918:9:14"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "7929:2:14",
																				"nodeType": "YulLiteral",
																				"src": "7929:2:14",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "7914:3:14",
																			"nodeType": "YulIdentifier",
																			"src": "7914:3:14"
																		},
																		"nativeSrc": "7914:18:14",
																		"nodeType": "YulFunctionCall",
																		"src": "7914:18:14"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "7934:2:14",
																		"nodeType": "YulLiteral",
																		"src": "7934:2:14",
																		"type": "",
																		"value": "27"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "7907:6:14",
																	"nodeType": "YulIdentifier",
																	"src": "7907:6:14"
																},
																"nativeSrc": "7907:30:14",
																"nodeType": "YulFunctionCall",
																"src": "7907:30:14"
															},
															"nativeSrc": "7907:30:14",
															"nodeType": "YulExpressionStatement",
															"src": "7907:30:14"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "7957:9:14",
																				"nodeType": "YulIdentifier",
																				"src": "7957:9:14"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "7968:2:14",
																				"nodeType": "YulLiteral",
																				"src": "7968:2:14",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "7953:3:14",
																			"nodeType": "YulIdentifier",
																			"src": "7953:3:14"
																		},
																		"nativeSrc": "7953:18:14",
																		"nodeType": "YulFunctionCall",
																		"src": "7953:18:14"
																	},
																	{
																		"hexValue": "54686973205072696365204973204d6f7265205468616e20323025",
																		"kind": "string",
																		"nativeSrc": "7973:29:14",
																		"nodeType": "YulLiteral",
																		"src": "7973:29:14",
																		"type": "",
																		"value": "This Price Is More Than 20%"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "7946:6:14",
																	"nodeType": "YulIdentifier",
																	"src": "7946:6:14"
																},
																"nativeSrc": "7946:57:14",
																"nodeType": "YulFunctionCall",
																"src": "7946:57:14"
															},
															"nativeSrc": "7946:57:14",
															"nodeType": "YulExpressionStatement",
															"src": "7946:57:14"
														},
														{
															"nativeSrc": "8012:26:14",
															"nodeType": "YulAssignment",
															"src": "8012:26:14",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "8024:9:14",
																		"nodeType": "YulIdentifier",
																		"src": "8024:9:14"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "8035:2:14",
																		"nodeType": "YulLiteral",
																		"src": "8035:2:14",
																		"type": "",
																		"value": "96"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "8020:3:14",
																	"nodeType": "YulIdentifier",
																	"src": "8020:3:14"
																},
																"nativeSrc": "8020:18:14",
																"nodeType": "YulFunctionCall",
																"src": "8020:18:14"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "8012:4:14",
																	"nodeType": "YulIdentifier",
																	"src": "8012:4:14"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_61f51060552d0392f4e47808f23bc9cbf7c6eab1ae2ff99074f6276698231311__to_t_string_memory_ptr__fromStack_reversed",
												"nativeSrc": "7693:351:14",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "7844:9:14",
														"nodeType": "YulTypedName",
														"src": "7844:9:14",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "7858:4:14",
														"nodeType": "YulTypedName",
														"src": "7858:4:14",
														"type": ""
													}
												],
												"src": "7693:351:14"
											},
											{
												"body": {
													"nativeSrc": "8223:228:14",
													"nodeType": "YulBlock",
													"src": "8223:228:14",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "8240:9:14",
																		"nodeType": "YulIdentifier",
																		"src": "8240:9:14"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "8251:2:14",
																		"nodeType": "YulLiteral",
																		"src": "8251:2:14",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "8233:6:14",
																	"nodeType": "YulIdentifier",
																	"src": "8233:6:14"
																},
																"nativeSrc": "8233:21:14",
																"nodeType": "YulFunctionCall",
																"src": "8233:21:14"
															},
															"nativeSrc": "8233:21:14",
															"nodeType": "YulExpressionStatement",
															"src": "8233:21:14"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "8274:9:14",
																				"nodeType": "YulIdentifier",
																				"src": "8274:9:14"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "8285:2:14",
																				"nodeType": "YulLiteral",
																				"src": "8285:2:14",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "8270:3:14",
																			"nodeType": "YulIdentifier",
																			"src": "8270:3:14"
																		},
																		"nativeSrc": "8270:18:14",
																		"nodeType": "YulFunctionCall",
																		"src": "8270:18:14"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "8290:2:14",
																		"nodeType": "YulLiteral",
																		"src": "8290:2:14",
																		"type": "",
																		"value": "38"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "8263:6:14",
																	"nodeType": "YulIdentifier",
																	"src": "8263:6:14"
																},
																"nativeSrc": "8263:30:14",
																"nodeType": "YulFunctionCall",
																"src": "8263:30:14"
															},
															"nativeSrc": "8263:30:14",
															"nodeType": "YulExpressionStatement",
															"src": "8263:30:14"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "8313:9:14",
																				"nodeType": "YulIdentifier",
																				"src": "8313:9:14"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "8324:2:14",
																				"nodeType": "YulLiteral",
																				"src": "8324:2:14",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "8309:3:14",
																			"nodeType": "YulIdentifier",
																			"src": "8309:3:14"
																		},
																		"nativeSrc": "8309:18:14",
																		"nodeType": "YulFunctionCall",
																		"src": "8309:18:14"
																	},
																	{
																		"hexValue": "4f776e61626c653a206e6577206f776e657220697320746865207a65726f2061",
																		"kind": "string",
																		"nativeSrc": "8329:34:14",
																		"nodeType": "YulLiteral",
																		"src": "8329:34:14",
																		"type": "",
																		"value": "Ownable: new owner is the zero a"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "8302:6:14",
																	"nodeType": "YulIdentifier",
																	"src": "8302:6:14"
																},
																"nativeSrc": "8302:62:14",
																"nodeType": "YulFunctionCall",
																"src": "8302:62:14"
															},
															"nativeSrc": "8302:62:14",
															"nodeType": "YulExpressionStatement",
															"src": "8302:62:14"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "8384:9:14",
																				"nodeType": "YulIdentifier",
																				"src": "8384:9:14"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "8395:2:14",
																				"nodeType": "YulLiteral",
																				"src": "8395:2:14",
																				"type": "",
																				"value": "96"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "8380:3:14",
																			"nodeType": "YulIdentifier",
																			"src": "8380:3:14"
																		},
																		"nativeSrc": "8380:18:14",
																		"nodeType": "YulFunctionCall",
																		"src": "8380:18:14"
																	},
																	{
																		"hexValue": "646472657373",
																		"kind": "string",
																		"nativeSrc": "8400:8:14",
																		"nodeType": "YulLiteral",
																		"src": "8400:8:14",
																		"type": "",
																		"value": "ddress"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "8373:6:14",
																	"nodeType": "YulIdentifier",
																	"src": "8373:6:14"
																},
																"nativeSrc": "8373:36:14",
																"nodeType": "YulFunctionCall",
																"src": "8373:36:14"
															},
															"nativeSrc": "8373:36:14",
															"nodeType": "YulExpressionStatement",
															"src": "8373:36:14"
														},
														{
															"nativeSrc": "8418:27:14",
															"nodeType": "YulAssignment",
															"src": "8418:27:14",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "8430:9:14",
																		"nodeType": "YulIdentifier",
																		"src": "8430:9:14"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "8441:3:14",
																		"nodeType": "YulLiteral",
																		"src": "8441:3:14",
																		"type": "",
																		"value": "128"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "8426:3:14",
																	"nodeType": "YulIdentifier",
																	"src": "8426:3:14"
																},
																"nativeSrc": "8426:19:14",
																"nodeType": "YulFunctionCall",
																"src": "8426:19:14"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "8418:4:14",
																	"nodeType": "YulIdentifier",
																	"src": "8418:4:14"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_245f15ff17f551913a7a18385165551503906a406f905ac1c2437281a7cd0cfe__to_t_string_memory_ptr__fromStack_reversed",
												"nativeSrc": "8049:402:14",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "8200:9:14",
														"nodeType": "YulTypedName",
														"src": "8200:9:14",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "8214:4:14",
														"nodeType": "YulTypedName",
														"src": "8214:4:14",
														"type": ""
													}
												],
												"src": "8049:402:14"
											},
											{
												"body": {
													"nativeSrc": "8630:181:14",
													"nodeType": "YulBlock",
													"src": "8630:181:14",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "8647:9:14",
																		"nodeType": "YulIdentifier",
																		"src": "8647:9:14"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "8658:2:14",
																		"nodeType": "YulLiteral",
																		"src": "8658:2:14",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "8640:6:14",
																	"nodeType": "YulIdentifier",
																	"src": "8640:6:14"
																},
																"nativeSrc": "8640:21:14",
																"nodeType": "YulFunctionCall",
																"src": "8640:21:14"
															},
															"nativeSrc": "8640:21:14",
															"nodeType": "YulExpressionStatement",
															"src": "8640:21:14"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "8681:9:14",
																				"nodeType": "YulIdentifier",
																				"src": "8681:9:14"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "8692:2:14",
																				"nodeType": "YulLiteral",
																				"src": "8692:2:14",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "8677:3:14",
																			"nodeType": "YulIdentifier",
																			"src": "8677:3:14"
																		},
																		"nativeSrc": "8677:18:14",
																		"nodeType": "YulFunctionCall",
																		"src": "8677:18:14"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "8697:2:14",
																		"nodeType": "YulLiteral",
																		"src": "8697:2:14",
																		"type": "",
																		"value": "31"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "8670:6:14",
																	"nodeType": "YulIdentifier",
																	"src": "8670:6:14"
																},
																"nativeSrc": "8670:30:14",
																"nodeType": "YulFunctionCall",
																"src": "8670:30:14"
															},
															"nativeSrc": "8670:30:14",
															"nodeType": "YulExpressionStatement",
															"src": "8670:30:14"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "8720:9:14",
																				"nodeType": "YulIdentifier",
																				"src": "8720:9:14"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "8731:2:14",
																				"nodeType": "YulLiteral",
																				"src": "8731:2:14",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "8716:3:14",
																			"nodeType": "YulIdentifier",
																			"src": "8716:3:14"
																		},
																		"nativeSrc": "8716:18:14",
																		"nodeType": "YulFunctionCall",
																		"src": "8716:18:14"
																	},
																	{
																		"hexValue": "5265656e7472616e637947756172643a207265656e7472616e742063616c6c",
																		"kind": "string",
																		"nativeSrc": "8736:33:14",
																		"nodeType": "YulLiteral",
																		"src": "8736:33:14",
																		"type": "",
																		"value": "ReentrancyGuard: reentrant call"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "8709:6:14",
																	"nodeType": "YulIdentifier",
																	"src": "8709:6:14"
																},
																"nativeSrc": "8709:61:14",
																"nodeType": "YulFunctionCall",
																"src": "8709:61:14"
															},
															"nativeSrc": "8709:61:14",
															"nodeType": "YulExpressionStatement",
															"src": "8709:61:14"
														},
														{
															"nativeSrc": "8779:26:14",
															"nodeType": "YulAssignment",
															"src": "8779:26:14",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "8791:9:14",
																		"nodeType": "YulIdentifier",
																		"src": "8791:9:14"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "8802:2:14",
																		"nodeType": "YulLiteral",
																		"src": "8802:2:14",
																		"type": "",
																		"value": "96"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "8787:3:14",
																	"nodeType": "YulIdentifier",
																	"src": "8787:3:14"
																},
																"nativeSrc": "8787:18:14",
																"nodeType": "YulFunctionCall",
																"src": "8787:18:14"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "8779:4:14",
																	"nodeType": "YulIdentifier",
																	"src": "8779:4:14"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_ebf73bba305590e4764d5cb53b69bffd6d4d092d1a67551cb346f8cfcdab8619__to_t_string_memory_ptr__fromStack_reversed",
												"nativeSrc": "8456:355:14",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "8607:9:14",
														"nodeType": "YulTypedName",
														"src": "8607:9:14",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "8621:4:14",
														"nodeType": "YulTypedName",
														"src": "8621:4:14",
														"type": ""
													}
												],
												"src": "8456:355:14"
											},
											{
												"body": {
													"nativeSrc": "8990:182:14",
													"nodeType": "YulBlock",
													"src": "8990:182:14",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "9007:9:14",
																		"nodeType": "YulIdentifier",
																		"src": "9007:9:14"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "9018:2:14",
																		"nodeType": "YulLiteral",
																		"src": "9018:2:14",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "9000:6:14",
																	"nodeType": "YulIdentifier",
																	"src": "9000:6:14"
																},
																"nativeSrc": "9000:21:14",
																"nodeType": "YulFunctionCall",
																"src": "9000:21:14"
															},
															"nativeSrc": "9000:21:14",
															"nodeType": "YulExpressionStatement",
															"src": "9000:21:14"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "9041:9:14",
																				"nodeType": "YulIdentifier",
																				"src": "9041:9:14"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "9052:2:14",
																				"nodeType": "YulLiteral",
																				"src": "9052:2:14",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "9037:3:14",
																			"nodeType": "YulIdentifier",
																			"src": "9037:3:14"
																		},
																		"nativeSrc": "9037:18:14",
																		"nodeType": "YulFunctionCall",
																		"src": "9037:18:14"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "9057:2:14",
																		"nodeType": "YulLiteral",
																		"src": "9057:2:14",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "9030:6:14",
																	"nodeType": "YulIdentifier",
																	"src": "9030:6:14"
																},
																"nativeSrc": "9030:30:14",
																"nodeType": "YulFunctionCall",
																"src": "9030:30:14"
															},
															"nativeSrc": "9030:30:14",
															"nodeType": "YulExpressionStatement",
															"src": "9030:30:14"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "9080:9:14",
																				"nodeType": "YulIdentifier",
																				"src": "9080:9:14"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "9091:2:14",
																				"nodeType": "YulLiteral",
																				"src": "9091:2:14",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "9076:3:14",
																			"nodeType": "YulIdentifier",
																			"src": "9076:3:14"
																		},
																		"nativeSrc": "9076:18:14",
																		"nodeType": "YulFunctionCall",
																		"src": "9076:18:14"
																	},
																	{
																		"hexValue": "4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e6572",
																		"kind": "string",
																		"nativeSrc": "9096:34:14",
																		"nodeType": "YulLiteral",
																		"src": "9096:34:14",
																		"type": "",
																		"value": "Ownable: caller is not the owner"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "9069:6:14",
																	"nodeType": "YulIdentifier",
																	"src": "9069:6:14"
																},
																"nativeSrc": "9069:62:14",
																"nodeType": "YulFunctionCall",
																"src": "9069:62:14"
															},
															"nativeSrc": "9069:62:14",
															"nodeType": "YulExpressionStatement",
															"src": "9069:62:14"
														},
														{
															"nativeSrc": "9140:26:14",
															"nodeType": "YulAssignment",
															"src": "9140:26:14",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "9152:9:14",
																		"nodeType": "YulIdentifier",
																		"src": "9152:9:14"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "9163:2:14",
																		"nodeType": "YulLiteral",
																		"src": "9163:2:14",
																		"type": "",
																		"value": "96"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "9148:3:14",
																	"nodeType": "YulIdentifier",
																	"src": "9148:3:14"
																},
																"nativeSrc": "9148:18:14",
																"nodeType": "YulFunctionCall",
																"src": "9148:18:14"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "9140:4:14",
																	"nodeType": "YulIdentifier",
																	"src": "9140:4:14"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_9924ebdf1add33d25d4ef888e16131f0a5687b0580a36c21b5c301a6c462effe__to_t_string_memory_ptr__fromStack_reversed",
												"nativeSrc": "8816:356:14",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "8967:9:14",
														"nodeType": "YulTypedName",
														"src": "8967:9:14",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "8981:4:14",
														"nodeType": "YulTypedName",
														"src": "8981:4:14",
														"type": ""
													}
												],
												"src": "8816:356:14"
											},
											{
												"body": {
													"nativeSrc": "9351:177:14",
													"nodeType": "YulBlock",
													"src": "9351:177:14",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "9368:9:14",
																		"nodeType": "YulIdentifier",
																		"src": "9368:9:14"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "9379:2:14",
																		"nodeType": "YulLiteral",
																		"src": "9379:2:14",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "9361:6:14",
																	"nodeType": "YulIdentifier",
																	"src": "9361:6:14"
																},
																"nativeSrc": "9361:21:14",
																"nodeType": "YulFunctionCall",
																"src": "9361:21:14"
															},
															"nativeSrc": "9361:21:14",
															"nodeType": "YulExpressionStatement",
															"src": "9361:21:14"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "9402:9:14",
																				"nodeType": "YulIdentifier",
																				"src": "9402:9:14"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "9413:2:14",
																				"nodeType": "YulLiteral",
																				"src": "9413:2:14",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "9398:3:14",
																			"nodeType": "YulIdentifier",
																			"src": "9398:3:14"
																		},
																		"nativeSrc": "9398:18:14",
																		"nodeType": "YulFunctionCall",
																		"src": "9398:18:14"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "9418:2:14",
																		"nodeType": "YulLiteral",
																		"src": "9418:2:14",
																		"type": "",
																		"value": "27"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "9391:6:14",
																	"nodeType": "YulIdentifier",
																	"src": "9391:6:14"
																},
																"nativeSrc": "9391:30:14",
																"nodeType": "YulFunctionCall",
																"src": "9391:30:14"
															},
															"nativeSrc": "9391:30:14",
															"nodeType": "YulExpressionStatement",
															"src": "9391:30:14"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "9441:9:14",
																				"nodeType": "YulIdentifier",
																				"src": "9441:9:14"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "9452:2:14",
																				"nodeType": "YulLiteral",
																				"src": "9452:2:14",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "9437:3:14",
																			"nodeType": "YulIdentifier",
																			"src": "9437:3:14"
																		},
																		"nativeSrc": "9437:18:14",
																		"nodeType": "YulFunctionCall",
																		"src": "9437:18:14"
																	},
																	{
																		"hexValue": "436f756e7465723a2064656372656d656e74206f766572666c6f77",
																		"kind": "string",
																		"nativeSrc": "9457:29:14",
																		"nodeType": "YulLiteral",
																		"src": "9457:29:14",
																		"type": "",
																		"value": "Counter: decrement overflow"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "9430:6:14",
																	"nodeType": "YulIdentifier",
																	"src": "9430:6:14"
																},
																"nativeSrc": "9430:57:14",
																"nodeType": "YulFunctionCall",
																"src": "9430:57:14"
															},
															"nativeSrc": "9430:57:14",
															"nodeType": "YulExpressionStatement",
															"src": "9430:57:14"
														},
														{
															"nativeSrc": "9496:26:14",
															"nodeType": "YulAssignment",
															"src": "9496:26:14",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "9508:9:14",
																		"nodeType": "YulIdentifier",
																		"src": "9508:9:14"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "9519:2:14",
																		"nodeType": "YulLiteral",
																		"src": "9519:2:14",
																		"type": "",
																		"value": "96"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "9504:3:14",
																	"nodeType": "YulIdentifier",
																	"src": "9504:3:14"
																},
																"nativeSrc": "9504:18:14",
																"nodeType": "YulFunctionCall",
																"src": "9504:18:14"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "9496:4:14",
																	"nodeType": "YulIdentifier",
																	"src": "9496:4:14"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_1dfd0d5389474d871b8e8929aab9d4def041f55f90f625754fb5f9a9ba08af6f__to_t_string_memory_ptr__fromStack_reversed",
												"nativeSrc": "9177:351:14",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "9328:9:14",
														"nodeType": "YulTypedName",
														"src": "9328:9:14",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "9342:4:14",
														"nodeType": "YulTypedName",
														"src": "9342:4:14",
														"type": ""
													}
												],
												"src": "9177:351:14"
											}
										]
									},
									"contents": "{\n    { }\n    function abi_encode_tuple_t_array$_t_struct$_NFT_$2827_memory_ptr_$dyn_memory_ptr__to_t_array$_t_struct$_NFT_$2827_memory_ptr_$dyn_memory_ptr__fromStack_reversed(headStart, value0) -> tail\n    {\n        let _1 := 32\n        let tail_1 := add(headStart, _1)\n        mstore(headStart, _1)\n        let pos := tail_1\n        let length := mload(value0)\n        mstore(tail_1, length)\n        let _2 := 64\n        pos := add(headStart, _2)\n        let srcPtr := add(value0, _1)\n        let i := 0\n        for { } lt(i, length) { i := add(i, 1) }\n        {\n            let _3 := mload(srcPtr)\n            let _4 := sub(shl(160, 1), 1)\n            mstore(pos, and(mload(_3), _4))\n            mstore(add(pos, _1), mload(add(_3, _1)))\n            mstore(add(pos, _2), and(mload(add(_3, _2)), _4))\n            let _5 := 0x60\n            mstore(add(pos, _5), and(mload(add(_3, _5)), _4))\n            let _6 := 0x80\n            mstore(add(pos, _6), mload(add(_3, _6)))\n            let _7 := 0xa0\n            mstore(add(pos, _7), iszero(iszero(mload(add(_3, _7)))))\n            pos := add(pos, 0xc0)\n            srcPtr := add(srcPtr, _1)\n        }\n        tail := pos\n    }\n    function abi_decode_tuple_t_uint256(headStart, dataEnd) -> value0\n    {\n        if slt(sub(dataEnd, headStart), 32) { revert(0, 0) }\n        value0 := calldataload(headStart)\n    }\n    function abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed(headStart, value0) -> tail\n    {\n        tail := add(headStart, 32)\n        mstore(headStart, value0)\n    }\n    function abi_encode_tuple_t_bool_t_address__to_t_bool_t_address__fromStack_reversed(headStart, value1, value0) -> tail\n    {\n        tail := add(headStart, 64)\n        mstore(headStart, iszero(iszero(value0)))\n        mstore(add(headStart, 32), and(value1, sub(shl(160, 1), 1)))\n    }\n    function abi_encode_tuple_t_address__to_t_address__fromStack_reversed(headStart, value0) -> tail\n    {\n        tail := add(headStart, 32)\n        mstore(headStart, and(value0, sub(shl(160, 1), 1)))\n    }\n    function abi_decode_tuple_t_uint256t_uint256(headStart, dataEnd) -> value0, value1\n    {\n        if slt(sub(dataEnd, headStart), 64) { revert(0, 0) }\n        value0 := calldataload(headStart)\n        value1 := calldataload(add(headStart, 32))\n    }\n    function abi_decode_tuple_t_address(headStart, dataEnd) -> value0\n    {\n        if slt(sub(dataEnd, headStart), 32) { revert(0, 0) }\n        let value := calldataload(headStart)\n        if iszero(eq(value, and(value, sub(shl(160, 1), 1)))) { revert(0, 0) }\n        value0 := value\n    }\n    function panic_error_0x11()\n    {\n        mstore(0, shl(224, 0x4e487b71))\n        mstore(4, 0x11)\n        revert(0, 0x24)\n    }\n    function checked_add_t_uint256(x, y) -> sum\n    {\n        sum := add(x, y)\n        if gt(x, sum) { panic_error_0x11() }\n    }\n    function increment_t_uint256(value) -> ret\n    {\n        if eq(value, not(0)) { panic_error_0x11() }\n        ret := add(value, 1)\n    }\n    function panic_error_0x41()\n    {\n        mstore(0, shl(224, 0x4e487b71))\n        mstore(4, 0x41)\n        revert(0, 0x24)\n    }\n    function panic_error_0x32()\n    {\n        mstore(0, shl(224, 0x4e487b71))\n        mstore(4, 0x32)\n        revert(0, 0x24)\n    }\n    function abi_encode_tuple_t_stringliteral_288468593cf2e83c7107f8d1f595b66d7cf49de550d8901b5e7e75f7dc15cf6e__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 38)\n        mstore(add(headStart, 64), \"Not enough ether to cover asking\")\n        mstore(add(headStart, 96), \" price\")\n        tail := add(headStart, 128)\n    }\n    function abi_encode_tuple_t_stringliteral_c3387487059bdef6bd8bd04aa3389df9f9fdc35f3503893b91dc4184d0b7d4da__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 31)\n        mstore(add(headStart, 64), \"An offer cannot buy this Seller\")\n        tail := add(headStart, 96)\n    }\n    function checked_sub_t_uint256(x, y) -> diff\n    {\n        diff := sub(x, y)\n        if gt(diff, x) { panic_error_0x11() }\n    }\n    function abi_encode_tuple_t_address_t_address_payable_t_uint256__to_t_address_t_address_t_uint256__fromStack_reversed(headStart, value2, value1, value0) -> tail\n    {\n        tail := add(headStart, 96)\n        let _1 := sub(shl(160, 1), 1)\n        mstore(headStart, and(value0, _1))\n        mstore(add(headStart, 32), and(value1, _1))\n        mstore(add(headStart, 64), value2)\n    }\n    function abi_encode_tuple_t_address_t_uint256_t_address_payable_t_address_payable_t_uint256__to_t_address_t_uint256_t_address_t_address_t_uint256__fromStack_reversed(headStart, value4, value3, value2, value1, value0) -> tail\n    {\n        tail := add(headStart, 160)\n        let _1 := sub(shl(160, 1), 1)\n        mstore(headStart, and(value0, _1))\n        mstore(add(headStart, 32), value1)\n        mstore(add(headStart, 64), and(value2, _1))\n        mstore(add(headStart, 96), and(value3, _1))\n        mstore(add(headStart, 128), value4)\n    }\n    function abi_encode_tuple_t_stringliteral_727c3a12b158040924757c03f361b4f9478c9475f21c278861c9612a31524eb2__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 21)\n        mstore(add(headStart, 64), \"Only Owner can Cancel\")\n        tail := add(headStart, 96)\n    }\n    function abi_encode_tuple_t_address_t_address_t_uint256__to_t_address_t_address_t_uint256__fromStack_reversed(headStart, value2, value1, value0) -> tail\n    {\n        tail := add(headStart, 96)\n        let _1 := sub(shl(160, 1), 1)\n        mstore(headStart, and(value0, _1))\n        mstore(add(headStart, 32), and(value1, _1))\n        mstore(add(headStart, 64), value2)\n    }\n    function checked_div_t_uint256(x, y) -> r\n    {\n        if iszero(y)\n        {\n            mstore(0, shl(224, 0x4e487b71))\n            mstore(4, 0x12)\n            revert(0, 0x24)\n        }\n        r := div(x, y)\n    }\n    function abi_encode_tuple_t_stringliteral_ed429417bc253b1d285ade089363828076314dff0c77fc211ca9115957f5bdf9__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 28)\n        mstore(add(headStart, 64), \"Price must be at least 1 wei\")\n        tail := add(headStart, 96)\n    }\n    function abi_encode_tuple_t_stringliteral_00a2a60daad916a80621f3a1cf99deb91c2ee23995b0e12d7b477dbb9833db5b__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 28)\n        mstore(add(headStart, 64), \"One Token ID Listed One Time\")\n        tail := add(headStart, 96)\n    }\n    function abi_encode_tuple_t_address_t_uint256_t_address_t_address_t_uint256__to_t_address_t_uint256_t_address_t_address_t_uint256__fromStack_reversed(headStart, value4, value3, value2, value1, value0) -> tail\n    {\n        tail := add(headStart, 160)\n        let _1 := sub(shl(160, 1), 1)\n        mstore(headStart, and(value0, _1))\n        mstore(add(headStart, 32), value1)\n        mstore(add(headStart, 64), and(value2, _1))\n        mstore(add(headStart, 96), and(value3, _1))\n        mstore(add(headStart, 128), value4)\n    }\n    function abi_encode_tuple_t_stringliteral_d845632d98b9fd2d13e8dbaf0c8cf1267b41fc0621502f1ee910180b73047c73__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 35)\n        mstore(add(headStart, 64), \"Only owner Of this Token Can Res\")\n        mstore(add(headStart, 96), \"ell\")\n        tail := add(headStart, 128)\n    }\n    function abi_encode_tuple_t_stringliteral_61f51060552d0392f4e47808f23bc9cbf7c6eab1ae2ff99074f6276698231311__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 27)\n        mstore(add(headStart, 64), \"This Price Is More Than 20%\")\n        tail := add(headStart, 96)\n    }\n    function abi_encode_tuple_t_stringliteral_245f15ff17f551913a7a18385165551503906a406f905ac1c2437281a7cd0cfe__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 38)\n        mstore(add(headStart, 64), \"Ownable: new owner is the zero a\")\n        mstore(add(headStart, 96), \"ddress\")\n        tail := add(headStart, 128)\n    }\n    function abi_encode_tuple_t_stringliteral_ebf73bba305590e4764d5cb53b69bffd6d4d092d1a67551cb346f8cfcdab8619__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 31)\n        mstore(add(headStart, 64), \"ReentrancyGuard: reentrant call\")\n        tail := add(headStart, 96)\n    }\n    function abi_encode_tuple_t_stringliteral_9924ebdf1add33d25d4ef888e16131f0a5687b0580a36c21b5c301a6c462effe__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 32)\n        mstore(add(headStart, 64), \"Ownable: caller is not the owner\")\n        tail := add(headStart, 96)\n    }\n    function abi_encode_tuple_t_stringliteral_1dfd0d5389474d871b8e8929aab9d4def041f55f90f625754fb5f9a9ba08af6f__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 27)\n        mstore(add(headStart, 64), \"Counter: decrement overflow\")\n        tail := add(headStart, 96)\n    }\n}",
									"id": 14,
									"language": "Yul",
									"name": "#utility.yul"
								}
							],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "608060405260043610610105575f3560e01c806373a0c16611610092578063a33f6c6811610062578063a33f6c68146102d5578063d6cbb202146102f4578063e03de05c1461030a578063e47f018a1461031d578063f2fde38b14610330575f80fd5b806373a0c166146102445780637ca7349b146102585780638d6cb3fb146102a45780638da5cb5b146102b8575f80fd5b806331824a49116100d857806331824a491461017f57806336958adb146101955780634e455dbe146101b45780635f72f450146101d3578063715018a614610230575f80fd5b8063047b07bf146101095780631f4cc4db14610133578063243adbdd146101475780632b86ae381461015c575b5f80fd5b348015610114575f80fd5b5061011d61034f565b60405161012a919061135b565b60405180910390f35b34801561013e575f80fd5b5061011d61050c565b61015a6101553660046113e4565b61071b565b005b348015610167575f80fd5b5061017160045481565b60405190815260200161012a565b34801561018a575f80fd5b506002546101719081565b3480156101a0575f80fd5b5061015a6101af3660046113e4565b6109b2565b3480156101bf575f80fd5b5061015a6101ce3660046113e4565b6109bf565b3480156101de575f80fd5b506102116101ed3660046113e4565b60076020525f908152604090205460ff81169061010090046001600160a01b031682565b6040805192151583526001600160a01b0390911660208301520161012a565b34801561023b575f80fd5b5061015a610ae4565b34801561024f575f80fd5b50600454610171565b348015610263575f80fd5b5061028c6102723660046113e4565b60066020525f90815260409020546001600160a01b031681565b6040516001600160a01b03909116815260200161012a565b3480156102af575f80fd5b5061011d610af7565b3480156102c3575f80fd5b506001546001600160a01b031661028c565b3480156102e0575f80fd5b506101716102ef3660046113e4565b610c5c565b3480156102ff575f80fd5b506003546101719081565b61015a6103183660046113fb565b610c7c565b61015a61032b3660046113fb565b610ec9565b34801561033b575f80fd5b5061015a61034a36600461141b565b611159565b60605f61035b60035490565b90505f805b828110156103b8573360085f61037784600161145c565b815260208101919091526040015f20600301546001600160a01b0316036103a657816103a281611475565b9250505b806103b081611475565b915050610360565b505f8167ffffffffffffffff8111156103d3576103d361148d565b60405190808252806020026020018201604052801561040c57816020015b6103f9611327565b8152602001906001900390816103f15790505b5090505f805b84811015610502573360085f61042984600161145c565b815260208101919091526040015f20600301546001600160a01b0316036104f05760085f61045883600161145c565b815260208082019290925260409081015f20815160c08101835281546001600160a01b0390811682526001830154948201949094526002820154841692810192909252600381015490921660608201526004820154608082015260059091015460ff16151560a082015283518490849081106104d6576104d66114a1565b602002602001018190525081806104ec90611475565b9250505b806104fa81611475565b915050610412565b5090949350505050565b60605f61051860035490565b90505f805b828110156105a3573360085f61053484600161145c565b815260208101919091526040015f20600201546001600160a01b031614801561057e575060085f61056683600161145c565b815260208101919091526040015f206005015460ff16155b15610591578161058d81611475565b9250505b8061059b81611475565b91505061051d565b505f8167ffffffffffffffff8111156105be576105be61148d565b6040519080825280602002602001820160405280156105f757816020015b6105e4611327565b8152602001906001900390816105dc5790505b5090505f805b84811015610502573360085f61061484600161145c565b815260208101919091526040015f20600201546001600160a01b031614801561065e575060085f61064683600161145c565b815260208101919091526040015f206005015460ff16155b156107095760085f61067183600161145c565b815260208082019290925260409081015f20815160c08101835281546001600160a01b0390811682526001830154948201949094526002820154841692810192909252600381015490921660608201526004820154608082015260059091015460ff16151560a082015283518490849081106106ef576106ef6114a1565b6020026020010181905250818061070590611475565b9250505b8061071381611475565b9150506105fd565b6107236111cf565b5f81815260086020526040902060048101543410156107985760405162461bcd60e51b815260206004820152602660248201527f4e6f7420656e6f75676820657468657220746f20636f7665722061736b696e6760448201526520707269636560d01b60648201526084015b60405180910390fd5b5f82815260086020526040902060020154336001600160a01b03909116036108025760405162461bcd60e51b815260206004820152601f60248201527f416e206f666665722063616e6e6f742062757920746869732053656c6c657200604482015260640161078f565b5f3390505f600454836004015461081991906114b5565b60028401546040519192506001600160a01b03169082156108fc029083905f818181858888f19350505050158015610853573d5f803e3d5ffd5b5060095460018401546040516323b872dd60e01b81526001600160a01b03909216916323b872dd9161088b91309187916004016114c8565b5f604051808303815f87803b1580156108a2575f80fd5b505af11580156108b4573d5f803e3d5ffd5b5050505f858152600660205260408082205460045491516001600160a01b03909116935081156108fc0292818181858888f193505050501580156108fa573d5f803e3d5ffd5b506003830180546001600160a01b0319166001600160a01b03841617905560058301805460ff1990811660019081179092555f868152600760205260409020805490911682179055600280549091019055600a54600184015460028501546040517f16f1dbd97e6bf646d429ed186cce832f1f7fd9907814293b83181e9970ab7bd29361099b936001600160a01b03918216939092911690879034906114ec565b60405180910390a15050506109af60015f55565b50565b6109ba611226565b600455565b5f8181526007602052604090205461010090046001600160a01b03163314610a215760405162461bcd60e51b815260206004820152601560248201527413db9b1e4813dddb995c8818d85b8810d85b98d95b605a1b604482015260640161078f565b5f8181526007602090815260408083208054600160ff1991821681179092556008909352928190206005018054909216909217905560095490516323b872dd60e01b81526001600160a01b03909116906323b872dd90610a89903090339086906004016114c8565b5f604051808303815f87803b158015610aa0575f80fd5b505af1158015610ab2573d5f803e3d5ffd5b5050505f82815260086020526040902060030180546001600160a01b03191633179055506109af600280546001019055565b610aec611226565b610af55f611280565b565b60605f610b0360035490565b90505f610b0f60025490565b610b1990836114b5565b90505f8167ffffffffffffffff811115610b3557610b3561148d565b604051908082528060200260200182016040528015610b6e57816020015b610b5b611327565b815260200190600190039081610b535790505b5090505f805b848110156105025760085f610b8a83600161145c565b815260208101919091526040015f206005015460ff16610c4a5760085f610bb283600161145c565b815260208082019290925260409081015f20815160c08101835281546001600160a01b0390811682526001830154948201949094526002820154841692810192909252600381015490921660608201526004820154608082015260059091015460ff16151560a08201528351849084908110610c3057610c306114a1565b60200260200101819052508180610c4690611475565b9250505b80610c5481611475565b915050610b74565b5f600581610c6a828561151f565b610c74908561145c565b949350505050565b610c846111cf565b5f8111610cd35760405162461bcd60e51b815260206004820152601c60248201527f5072696365206d757374206265206174206c6561737420312077656900000000604482015260640161078f565b5f8281526007602052604090205460ff1615610d315760405162461bcd60e51b815260206004820152601c60248201527f4f6e6520546f6b656e204944204c6973746564204f6e652054696d6500000000604482015260640161078f565b6009546040516323b872dd60e01b81526001600160a01b03909116906323b872dd90610d65903390309087906004016114c8565b5f604051808303815f87803b158015610d7c575f80fd5b505af1158015610d8e573d5f803e3d5ffd5b50505050610da0600380546001019055565b6040805160c081018252600a80546001600160a01b0390811683526020808401878152338587018181523060608801818152608089018b81525f60a08b018181528e8252600889528c82209b518c546001600160a01b0319908116918c16919091178d55975160018d0155945160028c0180548916918b16919091179055915160038b0180548816918a169190911790555160048a015591516005909801805460ff191698151598909817909755600684528781208054909316821790925560079092528590208054610100600160a81b0319166101008302179055915493517fa0c6c0d02d86fdacecbaa5fdf5894bab204e31a778250474108540733a9b8d1994610eb4949216928792909187906114ec565b60405180910390a1610ec560015f55565b5050565b610ed16111cf565b5f8111610f205760405162461bcd60e51b815260206004820152601c60248201527f5072696365206d757374206265206174206c6561737420312077656900000000604482015260640161078f565b5f828152600860205260409020600301546001600160a01b03163314610f945760405162461bcd60e51b815260206004820152602360248201527f4f6e6c79206f776e6572204f66207468697320546f6b656e2043616e20526573604482015262195b1b60ea1b606482015260840161078f565b5f82815260086020526040902060038101546002909101546001600160a01b03908116911614611028575f828152600860205260409020600401548190610fda90610c5c565b10156110285760405162461bcd60e51b815260206004820152601b60248201527f54686973205072696365204973204d6f7265205468616e203230250000000000604482015260640161078f565b6009546040516323b872dd60e01b81526001600160a01b03909116906323b872dd9061105c903390309087906004016114c8565b5f604051808303815f87803b158015611073575f80fd5b505af1158015611085573d5f803e3d5ffd5b5050505f83815260086020908152604080832060028082018054336001600160a01b0319918216811790925560038401805430921691909117905560058301805460ff19169055600483018890556007909452919093208054610100600160a81b03191661010090930292909217909155909150611102906112d1565b600a546040517fa0c6c0d02d86fdacecbaa5fdf5894bab204e31a778250474108540733a9b8d1991611147916001600160a01b039091169086903390309088906114ec565b60405180910390a150610ec560015f55565b611161611226565b6001600160a01b0381166111c65760405162461bcd60e51b815260206004820152602660248201527f4f776e61626c653a206e6577206f776e657220697320746865207a65726f206160448201526564647265737360d01b606482015260840161078f565b6109af81611280565b60025f54036112205760405162461bcd60e51b815260206004820152601f60248201527f5265656e7472616e637947756172643a207265656e7472616e742063616c6c00604482015260640161078f565b60025f55565b6001546001600160a01b03163314610af55760405162461bcd60e51b815260206004820181905260248201527f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e6572604482015260640161078f565b600180546001600160a01b038381166001600160a01b0319831681179093556040519116919082907f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e0905f90a35050565b8054806113205760405162461bcd60e51b815260206004820152601b60248201527f436f756e7465723a2064656372656d656e74206f766572666c6f770000000000604482015260640161078f565b5f19019055565b6040805160c0810182525f80825260208201819052918101829052606081018290526080810182905260a081019190915290565b602080825282518282018190525f919060409081850190868401855b828110156113d757815180516001600160a01b039081168652878201518887015286820151811687870152606080830151909116908601526080808201519086015260a09081015115159085015260c09093019290850190600101611377565b5091979650505050505050565b5f602082840312156113f4575f80fd5b5035919050565b5f806040838503121561140c575f80fd5b50508035926020909101359150565b5f6020828403121561142b575f80fd5b81356001600160a01b0381168114611441575f80fd5b9392505050565b634e487b7160e01b5f52601160045260245ffd5b8082018082111561146f5761146f611448565b92915050565b5f6001820161148657611486611448565b5060010190565b634e487b7160e01b5f52604160045260245ffd5b634e487b7160e01b5f52603260045260245ffd5b8181038181111561146f5761146f611448565b6001600160a01b039384168152919092166020820152604081019190915260600190565b6001600160a01b039586168152602081019490945291841660408401529092166060820152608081019190915260a00190565b5f8261153957634e487b7160e01b5f52601260045260245ffd5b50049056fea26469706673582212206583cd1fa2906298c39759a9a7204d8eb863cd8ae99dd4b22122ef66fcb2372864736f6c63430008150033",
							"opcodes": "PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x4 CALLDATASIZE LT PUSH2 0x105 JUMPI PUSH0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0x73A0C166 GT PUSH2 0x92 JUMPI DUP1 PUSH4 0xA33F6C68 GT PUSH2 0x62 JUMPI DUP1 PUSH4 0xA33F6C68 EQ PUSH2 0x2D5 JUMPI DUP1 PUSH4 0xD6CBB202 EQ PUSH2 0x2F4 JUMPI DUP1 PUSH4 0xE03DE05C EQ PUSH2 0x30A JUMPI DUP1 PUSH4 0xE47F018A EQ PUSH2 0x31D JUMPI DUP1 PUSH4 0xF2FDE38B EQ PUSH2 0x330 JUMPI PUSH0 DUP1 REVERT JUMPDEST DUP1 PUSH4 0x73A0C166 EQ PUSH2 0x244 JUMPI DUP1 PUSH4 0x7CA7349B EQ PUSH2 0x258 JUMPI DUP1 PUSH4 0x8D6CB3FB EQ PUSH2 0x2A4 JUMPI DUP1 PUSH4 0x8DA5CB5B EQ PUSH2 0x2B8 JUMPI PUSH0 DUP1 REVERT JUMPDEST DUP1 PUSH4 0x31824A49 GT PUSH2 0xD8 JUMPI DUP1 PUSH4 0x31824A49 EQ PUSH2 0x17F JUMPI DUP1 PUSH4 0x36958ADB EQ PUSH2 0x195 JUMPI DUP1 PUSH4 0x4E455DBE EQ PUSH2 0x1B4 JUMPI DUP1 PUSH4 0x5F72F450 EQ PUSH2 0x1D3 JUMPI DUP1 PUSH4 0x715018A6 EQ PUSH2 0x230 JUMPI PUSH0 DUP1 REVERT JUMPDEST DUP1 PUSH4 0x47B07BF EQ PUSH2 0x109 JUMPI DUP1 PUSH4 0x1F4CC4DB EQ PUSH2 0x133 JUMPI DUP1 PUSH4 0x243ADBDD EQ PUSH2 0x147 JUMPI DUP1 PUSH4 0x2B86AE38 EQ PUSH2 0x15C JUMPI JUMPDEST PUSH0 DUP1 REVERT JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x114 JUMPI PUSH0 DUP1 REVERT JUMPDEST POP PUSH2 0x11D PUSH2 0x34F JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x12A SWAP2 SWAP1 PUSH2 0x135B JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x13E JUMPI PUSH0 DUP1 REVERT JUMPDEST POP PUSH2 0x11D PUSH2 0x50C JUMP JUMPDEST PUSH2 0x15A PUSH2 0x155 CALLDATASIZE PUSH1 0x4 PUSH2 0x13E4 JUMP JUMPDEST PUSH2 0x71B JUMP JUMPDEST STOP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x167 JUMPI PUSH0 DUP1 REVERT JUMPDEST POP PUSH2 0x171 PUSH1 0x4 SLOAD DUP2 JUMP JUMPDEST PUSH1 0x40 MLOAD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH2 0x12A JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x18A JUMPI PUSH0 DUP1 REVERT JUMPDEST POP PUSH1 0x2 SLOAD PUSH2 0x171 SWAP1 DUP2 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x1A0 JUMPI PUSH0 DUP1 REVERT JUMPDEST POP PUSH2 0x15A PUSH2 0x1AF CALLDATASIZE PUSH1 0x4 PUSH2 0x13E4 JUMP JUMPDEST PUSH2 0x9B2 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x1BF JUMPI PUSH0 DUP1 REVERT JUMPDEST POP PUSH2 0x15A PUSH2 0x1CE CALLDATASIZE PUSH1 0x4 PUSH2 0x13E4 JUMP JUMPDEST PUSH2 0x9BF JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x1DE JUMPI PUSH0 DUP1 REVERT JUMPDEST POP PUSH2 0x211 PUSH2 0x1ED CALLDATASIZE PUSH1 0x4 PUSH2 0x13E4 JUMP JUMPDEST PUSH1 0x7 PUSH1 0x20 MSTORE PUSH0 SWAP1 DUP2 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD PUSH1 0xFF DUP2 AND SWAP1 PUSH2 0x100 SWAP1 DIV PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP3 JUMP JUMPDEST PUSH1 0x40 DUP1 MLOAD SWAP3 ISZERO ISZERO DUP4 MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 SWAP2 AND PUSH1 0x20 DUP4 ADD MSTORE ADD PUSH2 0x12A JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x23B JUMPI PUSH0 DUP1 REVERT JUMPDEST POP PUSH2 0x15A PUSH2 0xAE4 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x24F JUMPI PUSH0 DUP1 REVERT JUMPDEST POP PUSH1 0x4 SLOAD PUSH2 0x171 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x263 JUMPI PUSH0 DUP1 REVERT JUMPDEST POP PUSH2 0x28C PUSH2 0x272 CALLDATASIZE PUSH1 0x4 PUSH2 0x13E4 JUMP JUMPDEST PUSH1 0x6 PUSH1 0x20 MSTORE PUSH0 SWAP1 DUP2 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP2 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 SWAP2 AND DUP2 MSTORE PUSH1 0x20 ADD PUSH2 0x12A JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x2AF JUMPI PUSH0 DUP1 REVERT JUMPDEST POP PUSH2 0x11D PUSH2 0xAF7 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x2C3 JUMPI PUSH0 DUP1 REVERT JUMPDEST POP PUSH1 0x1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH2 0x28C JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x2E0 JUMPI PUSH0 DUP1 REVERT JUMPDEST POP PUSH2 0x171 PUSH2 0x2EF CALLDATASIZE PUSH1 0x4 PUSH2 0x13E4 JUMP JUMPDEST PUSH2 0xC5C JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x2FF JUMPI PUSH0 DUP1 REVERT JUMPDEST POP PUSH1 0x3 SLOAD PUSH2 0x171 SWAP1 DUP2 JUMP JUMPDEST PUSH2 0x15A PUSH2 0x318 CALLDATASIZE PUSH1 0x4 PUSH2 0x13FB JUMP JUMPDEST PUSH2 0xC7C JUMP JUMPDEST PUSH2 0x15A PUSH2 0x32B CALLDATASIZE PUSH1 0x4 PUSH2 0x13FB JUMP JUMPDEST PUSH2 0xEC9 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x33B JUMPI PUSH0 DUP1 REVERT JUMPDEST POP PUSH2 0x15A PUSH2 0x34A CALLDATASIZE PUSH1 0x4 PUSH2 0x141B JUMP JUMPDEST PUSH2 0x1159 JUMP JUMPDEST PUSH1 0x60 PUSH0 PUSH2 0x35B PUSH1 0x3 SLOAD SWAP1 JUMP JUMPDEST SWAP1 POP PUSH0 DUP1 JUMPDEST DUP3 DUP2 LT ISZERO PUSH2 0x3B8 JUMPI CALLER PUSH1 0x8 PUSH0 PUSH2 0x377 DUP5 PUSH1 0x1 PUSH2 0x145C JUMP JUMPDEST DUP2 MSTORE PUSH1 0x20 DUP2 ADD SWAP2 SWAP1 SWAP2 MSTORE PUSH1 0x40 ADD PUSH0 KECCAK256 PUSH1 0x3 ADD SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND SUB PUSH2 0x3A6 JUMPI DUP2 PUSH2 0x3A2 DUP2 PUSH2 0x1475 JUMP JUMPDEST SWAP3 POP POP JUMPDEST DUP1 PUSH2 0x3B0 DUP2 PUSH2 0x1475 JUMP JUMPDEST SWAP2 POP POP PUSH2 0x360 JUMP JUMPDEST POP PUSH0 DUP2 PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0x3D3 JUMPI PUSH2 0x3D3 PUSH2 0x148D JUMP JUMPDEST PUSH1 0x40 MLOAD SWAP1 DUP1 DUP3 MSTORE DUP1 PUSH1 0x20 MUL PUSH1 0x20 ADD DUP3 ADD PUSH1 0x40 MSTORE DUP1 ISZERO PUSH2 0x40C JUMPI DUP2 PUSH1 0x20 ADD JUMPDEST PUSH2 0x3F9 PUSH2 0x1327 JUMP JUMPDEST DUP2 MSTORE PUSH1 0x20 ADD SWAP1 PUSH1 0x1 SWAP1 SUB SWAP1 DUP2 PUSH2 0x3F1 JUMPI SWAP1 POP JUMPDEST POP SWAP1 POP PUSH0 DUP1 JUMPDEST DUP5 DUP2 LT ISZERO PUSH2 0x502 JUMPI CALLER PUSH1 0x8 PUSH0 PUSH2 0x429 DUP5 PUSH1 0x1 PUSH2 0x145C JUMP JUMPDEST DUP2 MSTORE PUSH1 0x20 DUP2 ADD SWAP2 SWAP1 SWAP2 MSTORE PUSH1 0x40 ADD PUSH0 KECCAK256 PUSH1 0x3 ADD SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND SUB PUSH2 0x4F0 JUMPI PUSH1 0x8 PUSH0 PUSH2 0x458 DUP4 PUSH1 0x1 PUSH2 0x145C JUMP JUMPDEST DUP2 MSTORE PUSH1 0x20 DUP1 DUP3 ADD SWAP3 SWAP1 SWAP3 MSTORE PUSH1 0x40 SWAP1 DUP2 ADD PUSH0 KECCAK256 DUP2 MLOAD PUSH1 0xC0 DUP2 ADD DUP4 MSTORE DUP2 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 DUP2 AND DUP3 MSTORE PUSH1 0x1 DUP4 ADD SLOAD SWAP5 DUP3 ADD SWAP5 SWAP1 SWAP5 MSTORE PUSH1 0x2 DUP3 ADD SLOAD DUP5 AND SWAP3 DUP2 ADD SWAP3 SWAP1 SWAP3 MSTORE PUSH1 0x3 DUP2 ADD SLOAD SWAP1 SWAP3 AND PUSH1 0x60 DUP3 ADD MSTORE PUSH1 0x4 DUP3 ADD SLOAD PUSH1 0x80 DUP3 ADD MSTORE PUSH1 0x5 SWAP1 SWAP2 ADD SLOAD PUSH1 0xFF AND ISZERO ISZERO PUSH1 0xA0 DUP3 ADD MSTORE DUP4 MLOAD DUP5 SWAP1 DUP5 SWAP1 DUP2 LT PUSH2 0x4D6 JUMPI PUSH2 0x4D6 PUSH2 0x14A1 JUMP JUMPDEST PUSH1 0x20 MUL PUSH1 0x20 ADD ADD DUP2 SWAP1 MSTORE POP DUP2 DUP1 PUSH2 0x4EC SWAP1 PUSH2 0x1475 JUMP JUMPDEST SWAP3 POP POP JUMPDEST DUP1 PUSH2 0x4FA DUP2 PUSH2 0x1475 JUMP JUMPDEST SWAP2 POP POP PUSH2 0x412 JUMP JUMPDEST POP SWAP1 SWAP5 SWAP4 POP POP POP POP JUMP JUMPDEST PUSH1 0x60 PUSH0 PUSH2 0x518 PUSH1 0x3 SLOAD SWAP1 JUMP JUMPDEST SWAP1 POP PUSH0 DUP1 JUMPDEST DUP3 DUP2 LT ISZERO PUSH2 0x5A3 JUMPI CALLER PUSH1 0x8 PUSH0 PUSH2 0x534 DUP5 PUSH1 0x1 PUSH2 0x145C JUMP JUMPDEST DUP2 MSTORE PUSH1 0x20 DUP2 ADD SWAP2 SWAP1 SWAP2 MSTORE PUSH1 0x40 ADD PUSH0 KECCAK256 PUSH1 0x2 ADD SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND EQ DUP1 ISZERO PUSH2 0x57E JUMPI POP PUSH1 0x8 PUSH0 PUSH2 0x566 DUP4 PUSH1 0x1 PUSH2 0x145C JUMP JUMPDEST DUP2 MSTORE PUSH1 0x20 DUP2 ADD SWAP2 SWAP1 SWAP2 MSTORE PUSH1 0x40 ADD PUSH0 KECCAK256 PUSH1 0x5 ADD SLOAD PUSH1 0xFF AND ISZERO JUMPDEST ISZERO PUSH2 0x591 JUMPI DUP2 PUSH2 0x58D DUP2 PUSH2 0x1475 JUMP JUMPDEST SWAP3 POP POP JUMPDEST DUP1 PUSH2 0x59B DUP2 PUSH2 0x1475 JUMP JUMPDEST SWAP2 POP POP PUSH2 0x51D JUMP JUMPDEST POP PUSH0 DUP2 PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0x5BE JUMPI PUSH2 0x5BE PUSH2 0x148D JUMP JUMPDEST PUSH1 0x40 MLOAD SWAP1 DUP1 DUP3 MSTORE DUP1 PUSH1 0x20 MUL PUSH1 0x20 ADD DUP3 ADD PUSH1 0x40 MSTORE DUP1 ISZERO PUSH2 0x5F7 JUMPI DUP2 PUSH1 0x20 ADD JUMPDEST PUSH2 0x5E4 PUSH2 0x1327 JUMP JUMPDEST DUP2 MSTORE PUSH1 0x20 ADD SWAP1 PUSH1 0x1 SWAP1 SUB SWAP1 DUP2 PUSH2 0x5DC JUMPI SWAP1 POP JUMPDEST POP SWAP1 POP PUSH0 DUP1 JUMPDEST DUP5 DUP2 LT ISZERO PUSH2 0x502 JUMPI CALLER PUSH1 0x8 PUSH0 PUSH2 0x614 DUP5 PUSH1 0x1 PUSH2 0x145C JUMP JUMPDEST DUP2 MSTORE PUSH1 0x20 DUP2 ADD SWAP2 SWAP1 SWAP2 MSTORE PUSH1 0x40 ADD PUSH0 KECCAK256 PUSH1 0x2 ADD SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND EQ DUP1 ISZERO PUSH2 0x65E JUMPI POP PUSH1 0x8 PUSH0 PUSH2 0x646 DUP4 PUSH1 0x1 PUSH2 0x145C JUMP JUMPDEST DUP2 MSTORE PUSH1 0x20 DUP2 ADD SWAP2 SWAP1 SWAP2 MSTORE PUSH1 0x40 ADD PUSH0 KECCAK256 PUSH1 0x5 ADD SLOAD PUSH1 0xFF AND ISZERO JUMPDEST ISZERO PUSH2 0x709 JUMPI PUSH1 0x8 PUSH0 PUSH2 0x671 DUP4 PUSH1 0x1 PUSH2 0x145C JUMP JUMPDEST DUP2 MSTORE PUSH1 0x20 DUP1 DUP3 ADD SWAP3 SWAP1 SWAP3 MSTORE PUSH1 0x40 SWAP1 DUP2 ADD PUSH0 KECCAK256 DUP2 MLOAD PUSH1 0xC0 DUP2 ADD DUP4 MSTORE DUP2 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 DUP2 AND DUP3 MSTORE PUSH1 0x1 DUP4 ADD SLOAD SWAP5 DUP3 ADD SWAP5 SWAP1 SWAP5 MSTORE PUSH1 0x2 DUP3 ADD SLOAD DUP5 AND SWAP3 DUP2 ADD SWAP3 SWAP1 SWAP3 MSTORE PUSH1 0x3 DUP2 ADD SLOAD SWAP1 SWAP3 AND PUSH1 0x60 DUP3 ADD MSTORE PUSH1 0x4 DUP3 ADD SLOAD PUSH1 0x80 DUP3 ADD MSTORE PUSH1 0x5 SWAP1 SWAP2 ADD SLOAD PUSH1 0xFF AND ISZERO ISZERO PUSH1 0xA0 DUP3 ADD MSTORE DUP4 MLOAD DUP5 SWAP1 DUP5 SWAP1 DUP2 LT PUSH2 0x6EF JUMPI PUSH2 0x6EF PUSH2 0x14A1 JUMP JUMPDEST PUSH1 0x20 MUL PUSH1 0x20 ADD ADD DUP2 SWAP1 MSTORE POP DUP2 DUP1 PUSH2 0x705 SWAP1 PUSH2 0x1475 JUMP JUMPDEST SWAP3 POP POP JUMPDEST DUP1 PUSH2 0x713 DUP2 PUSH2 0x1475 JUMP JUMPDEST SWAP2 POP POP PUSH2 0x5FD JUMP JUMPDEST PUSH2 0x723 PUSH2 0x11CF JUMP JUMPDEST PUSH0 DUP2 DUP2 MSTORE PUSH1 0x8 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 PUSH1 0x4 DUP2 ADD SLOAD CALLVALUE LT ISZERO PUSH2 0x798 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x26 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x4E6F7420656E6F75676820657468657220746F20636F7665722061736B696E67 PUSH1 0x44 DUP3 ADD MSTORE PUSH6 0x207072696365 PUSH1 0xD0 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH0 DUP3 DUP2 MSTORE PUSH1 0x8 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 PUSH1 0x2 ADD SLOAD CALLER PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 SWAP2 AND SUB PUSH2 0x802 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x1F PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x416E206F666665722063616E6E6F742062757920746869732053656C6C657200 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x78F JUMP JUMPDEST PUSH0 CALLER SWAP1 POP PUSH0 PUSH1 0x4 SLOAD DUP4 PUSH1 0x4 ADD SLOAD PUSH2 0x819 SWAP2 SWAP1 PUSH2 0x14B5 JUMP JUMPDEST PUSH1 0x2 DUP5 ADD SLOAD PUSH1 0x40 MLOAD SWAP2 SWAP3 POP PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND SWAP1 DUP3 ISZERO PUSH2 0x8FC MUL SWAP1 DUP4 SWAP1 PUSH0 DUP2 DUP2 DUP2 DUP6 DUP9 DUP9 CALL SWAP4 POP POP POP POP ISZERO DUP1 ISZERO PUSH2 0x853 JUMPI RETURNDATASIZE PUSH0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH0 REVERT JUMPDEST POP PUSH1 0x9 SLOAD PUSH1 0x1 DUP5 ADD SLOAD PUSH1 0x40 MLOAD PUSH4 0x23B872DD PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 SWAP3 AND SWAP2 PUSH4 0x23B872DD SWAP2 PUSH2 0x88B SWAP2 ADDRESS SWAP2 DUP8 SWAP2 PUSH1 0x4 ADD PUSH2 0x14C8 JUMP JUMPDEST PUSH0 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH0 DUP8 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0x8A2 JUMPI PUSH0 DUP1 REVERT JUMPDEST POP GAS CALL ISZERO DUP1 ISZERO PUSH2 0x8B4 JUMPI RETURNDATASIZE PUSH0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH0 REVERT JUMPDEST POP POP POP PUSH0 DUP6 DUP2 MSTORE PUSH1 0x6 PUSH1 0x20 MSTORE PUSH1 0x40 DUP1 DUP3 KECCAK256 SLOAD PUSH1 0x4 SLOAD SWAP2 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 SWAP2 AND SWAP4 POP DUP2 ISZERO PUSH2 0x8FC MUL SWAP3 DUP2 DUP2 DUP2 DUP6 DUP9 DUP9 CALL SWAP4 POP POP POP POP ISZERO DUP1 ISZERO PUSH2 0x8FA JUMPI RETURNDATASIZE PUSH0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH0 REVERT JUMPDEST POP PUSH1 0x3 DUP4 ADD DUP1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB NOT AND PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP5 AND OR SWAP1 SSTORE PUSH1 0x5 DUP4 ADD DUP1 SLOAD PUSH1 0xFF NOT SWAP1 DUP2 AND PUSH1 0x1 SWAP1 DUP2 OR SWAP1 SWAP3 SSTORE PUSH0 DUP7 DUP2 MSTORE PUSH1 0x7 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 DUP1 SLOAD SWAP1 SWAP2 AND DUP3 OR SWAP1 SSTORE PUSH1 0x2 DUP1 SLOAD SWAP1 SWAP2 ADD SWAP1 SSTORE PUSH1 0xA SLOAD PUSH1 0x1 DUP5 ADD SLOAD PUSH1 0x2 DUP6 ADD SLOAD PUSH1 0x40 MLOAD PUSH32 0x16F1DBD97E6BF646D429ED186CCE832F1F7FD9907814293B83181E9970AB7BD2 SWAP4 PUSH2 0x99B SWAP4 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP2 DUP3 AND SWAP4 SWAP1 SWAP3 SWAP2 AND SWAP1 DUP8 SWAP1 CALLVALUE SWAP1 PUSH2 0x14EC JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG1 POP POP POP PUSH2 0x9AF PUSH1 0x1 PUSH0 SSTORE JUMP JUMPDEST POP JUMP JUMPDEST PUSH2 0x9BA PUSH2 0x1226 JUMP JUMPDEST PUSH1 0x4 SSTORE JUMP JUMPDEST PUSH0 DUP2 DUP2 MSTORE PUSH1 0x7 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD PUSH2 0x100 SWAP1 DIV PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND CALLER EQ PUSH2 0xA21 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x15 PUSH1 0x24 DUP3 ADD MSTORE PUSH21 0x13DB9B1E4813DDDB995C8818D85B8810D85B98D95B PUSH1 0x5A SHL PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x78F JUMP JUMPDEST PUSH0 DUP2 DUP2 MSTORE PUSH1 0x7 PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 DUP1 SLOAD PUSH1 0x1 PUSH1 0xFF NOT SWAP2 DUP3 AND DUP2 OR SWAP1 SWAP3 SSTORE PUSH1 0x8 SWAP1 SWAP4 MSTORE SWAP3 DUP2 SWAP1 KECCAK256 PUSH1 0x5 ADD DUP1 SLOAD SWAP1 SWAP3 AND SWAP1 SWAP3 OR SWAP1 SSTORE PUSH1 0x9 SLOAD SWAP1 MLOAD PUSH4 0x23B872DD PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 SWAP2 AND SWAP1 PUSH4 0x23B872DD SWAP1 PUSH2 0xA89 SWAP1 ADDRESS SWAP1 CALLER SWAP1 DUP7 SWAP1 PUSH1 0x4 ADD PUSH2 0x14C8 JUMP JUMPDEST PUSH0 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH0 DUP8 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0xAA0 JUMPI PUSH0 DUP1 REVERT JUMPDEST POP GAS CALL ISZERO DUP1 ISZERO PUSH2 0xAB2 JUMPI RETURNDATASIZE PUSH0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH0 REVERT JUMPDEST POP POP POP PUSH0 DUP3 DUP2 MSTORE PUSH1 0x8 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 PUSH1 0x3 ADD DUP1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB NOT AND CALLER OR SWAP1 SSTORE POP PUSH2 0x9AF PUSH1 0x2 DUP1 SLOAD PUSH1 0x1 ADD SWAP1 SSTORE JUMP JUMPDEST PUSH2 0xAEC PUSH2 0x1226 JUMP JUMPDEST PUSH2 0xAF5 PUSH0 PUSH2 0x1280 JUMP JUMPDEST JUMP JUMPDEST PUSH1 0x60 PUSH0 PUSH2 0xB03 PUSH1 0x3 SLOAD SWAP1 JUMP JUMPDEST SWAP1 POP PUSH0 PUSH2 0xB0F PUSH1 0x2 SLOAD SWAP1 JUMP JUMPDEST PUSH2 0xB19 SWAP1 DUP4 PUSH2 0x14B5 JUMP JUMPDEST SWAP1 POP PUSH0 DUP2 PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0xB35 JUMPI PUSH2 0xB35 PUSH2 0x148D JUMP JUMPDEST PUSH1 0x40 MLOAD SWAP1 DUP1 DUP3 MSTORE DUP1 PUSH1 0x20 MUL PUSH1 0x20 ADD DUP3 ADD PUSH1 0x40 MSTORE DUP1 ISZERO PUSH2 0xB6E JUMPI DUP2 PUSH1 0x20 ADD JUMPDEST PUSH2 0xB5B PUSH2 0x1327 JUMP JUMPDEST DUP2 MSTORE PUSH1 0x20 ADD SWAP1 PUSH1 0x1 SWAP1 SUB SWAP1 DUP2 PUSH2 0xB53 JUMPI SWAP1 POP JUMPDEST POP SWAP1 POP PUSH0 DUP1 JUMPDEST DUP5 DUP2 LT ISZERO PUSH2 0x502 JUMPI PUSH1 0x8 PUSH0 PUSH2 0xB8A DUP4 PUSH1 0x1 PUSH2 0x145C JUMP JUMPDEST DUP2 MSTORE PUSH1 0x20 DUP2 ADD SWAP2 SWAP1 SWAP2 MSTORE PUSH1 0x40 ADD PUSH0 KECCAK256 PUSH1 0x5 ADD SLOAD PUSH1 0xFF AND PUSH2 0xC4A JUMPI PUSH1 0x8 PUSH0 PUSH2 0xBB2 DUP4 PUSH1 0x1 PUSH2 0x145C JUMP JUMPDEST DUP2 MSTORE PUSH1 0x20 DUP1 DUP3 ADD SWAP3 SWAP1 SWAP3 MSTORE PUSH1 0x40 SWAP1 DUP2 ADD PUSH0 KECCAK256 DUP2 MLOAD PUSH1 0xC0 DUP2 ADD DUP4 MSTORE DUP2 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 DUP2 AND DUP3 MSTORE PUSH1 0x1 DUP4 ADD SLOAD SWAP5 DUP3 ADD SWAP5 SWAP1 SWAP5 MSTORE PUSH1 0x2 DUP3 ADD SLOAD DUP5 AND SWAP3 DUP2 ADD SWAP3 SWAP1 SWAP3 MSTORE PUSH1 0x3 DUP2 ADD SLOAD SWAP1 SWAP3 AND PUSH1 0x60 DUP3 ADD MSTORE PUSH1 0x4 DUP3 ADD SLOAD PUSH1 0x80 DUP3 ADD MSTORE PUSH1 0x5 SWAP1 SWAP2 ADD SLOAD PUSH1 0xFF AND ISZERO ISZERO PUSH1 0xA0 DUP3 ADD MSTORE DUP4 MLOAD DUP5 SWAP1 DUP5 SWAP1 DUP2 LT PUSH2 0xC30 JUMPI PUSH2 0xC30 PUSH2 0x14A1 JUMP JUMPDEST PUSH1 0x20 MUL PUSH1 0x20 ADD ADD DUP2 SWAP1 MSTORE POP DUP2 DUP1 PUSH2 0xC46 SWAP1 PUSH2 0x1475 JUMP JUMPDEST SWAP3 POP POP JUMPDEST DUP1 PUSH2 0xC54 DUP2 PUSH2 0x1475 JUMP JUMPDEST SWAP2 POP POP PUSH2 0xB74 JUMP JUMPDEST PUSH0 PUSH1 0x5 DUP2 PUSH2 0xC6A DUP3 DUP6 PUSH2 0x151F JUMP JUMPDEST PUSH2 0xC74 SWAP1 DUP6 PUSH2 0x145C JUMP JUMPDEST SWAP5 SWAP4 POP POP POP POP JUMP JUMPDEST PUSH2 0xC84 PUSH2 0x11CF JUMP JUMPDEST PUSH0 DUP2 GT PUSH2 0xCD3 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x1C PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x5072696365206D757374206265206174206C6561737420312077656900000000 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x78F JUMP JUMPDEST PUSH0 DUP3 DUP2 MSTORE PUSH1 0x7 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD PUSH1 0xFF AND ISZERO PUSH2 0xD31 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x1C PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x4F6E6520546F6B656E204944204C6973746564204F6E652054696D6500000000 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x78F JUMP JUMPDEST PUSH1 0x9 SLOAD PUSH1 0x40 MLOAD PUSH4 0x23B872DD PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 SWAP2 AND SWAP1 PUSH4 0x23B872DD SWAP1 PUSH2 0xD65 SWAP1 CALLER SWAP1 ADDRESS SWAP1 DUP8 SWAP1 PUSH1 0x4 ADD PUSH2 0x14C8 JUMP JUMPDEST PUSH0 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH0 DUP8 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0xD7C JUMPI PUSH0 DUP1 REVERT JUMPDEST POP GAS CALL ISZERO DUP1 ISZERO PUSH2 0xD8E JUMPI RETURNDATASIZE PUSH0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH0 REVERT JUMPDEST POP POP POP POP PUSH2 0xDA0 PUSH1 0x3 DUP1 SLOAD PUSH1 0x1 ADD SWAP1 SSTORE JUMP JUMPDEST PUSH1 0x40 DUP1 MLOAD PUSH1 0xC0 DUP2 ADD DUP3 MSTORE PUSH1 0xA DUP1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 DUP2 AND DUP4 MSTORE PUSH1 0x20 DUP1 DUP5 ADD DUP8 DUP2 MSTORE CALLER DUP6 DUP8 ADD DUP2 DUP2 MSTORE ADDRESS PUSH1 0x60 DUP9 ADD DUP2 DUP2 MSTORE PUSH1 0x80 DUP10 ADD DUP12 DUP2 MSTORE PUSH0 PUSH1 0xA0 DUP12 ADD DUP2 DUP2 MSTORE DUP15 DUP3 MSTORE PUSH1 0x8 DUP10 MSTORE DUP13 DUP3 KECCAK256 SWAP12 MLOAD DUP13 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB NOT SWAP1 DUP2 AND SWAP2 DUP13 AND SWAP2 SWAP1 SWAP2 OR DUP14 SSTORE SWAP8 MLOAD PUSH1 0x1 DUP14 ADD SSTORE SWAP5 MLOAD PUSH1 0x2 DUP13 ADD DUP1 SLOAD DUP10 AND SWAP2 DUP12 AND SWAP2 SWAP1 SWAP2 OR SWAP1 SSTORE SWAP2 MLOAD PUSH1 0x3 DUP12 ADD DUP1 SLOAD DUP9 AND SWAP2 DUP11 AND SWAP2 SWAP1 SWAP2 OR SWAP1 SSTORE MLOAD PUSH1 0x4 DUP11 ADD SSTORE SWAP2 MLOAD PUSH1 0x5 SWAP1 SWAP9 ADD DUP1 SLOAD PUSH1 0xFF NOT AND SWAP9 ISZERO ISZERO SWAP9 SWAP1 SWAP9 OR SWAP1 SWAP8 SSTORE PUSH1 0x6 DUP5 MSTORE DUP8 DUP2 KECCAK256 DUP1 SLOAD SWAP1 SWAP4 AND DUP3 OR SWAP1 SWAP3 SSTORE PUSH1 0x7 SWAP1 SWAP3 MSTORE DUP6 SWAP1 KECCAK256 DUP1 SLOAD PUSH2 0x100 PUSH1 0x1 PUSH1 0xA8 SHL SUB NOT AND PUSH2 0x100 DUP4 MUL OR SWAP1 SSTORE SWAP2 SLOAD SWAP4 MLOAD PUSH32 0xA0C6C0D02D86FDACECBAA5FDF5894BAB204E31A778250474108540733A9B8D19 SWAP5 PUSH2 0xEB4 SWAP5 SWAP3 AND SWAP3 DUP8 SWAP3 SWAP1 SWAP2 DUP8 SWAP1 PUSH2 0x14EC JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG1 PUSH2 0xEC5 PUSH1 0x1 PUSH0 SSTORE JUMP JUMPDEST POP POP JUMP JUMPDEST PUSH2 0xED1 PUSH2 0x11CF JUMP JUMPDEST PUSH0 DUP2 GT PUSH2 0xF20 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x1C PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x5072696365206D757374206265206174206C6561737420312077656900000000 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x78F JUMP JUMPDEST PUSH0 DUP3 DUP2 MSTORE PUSH1 0x8 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 PUSH1 0x3 ADD SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND CALLER EQ PUSH2 0xF94 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x23 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x4F6E6C79206F776E6572204F66207468697320546F6B656E2043616E20526573 PUSH1 0x44 DUP3 ADD MSTORE PUSH3 0x195B1B PUSH1 0xEA SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0x78F JUMP JUMPDEST PUSH0 DUP3 DUP2 MSTORE PUSH1 0x8 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 PUSH1 0x3 DUP2 ADD SLOAD PUSH1 0x2 SWAP1 SWAP2 ADD SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 DUP2 AND SWAP2 AND EQ PUSH2 0x1028 JUMPI PUSH0 DUP3 DUP2 MSTORE PUSH1 0x8 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 PUSH1 0x4 ADD SLOAD DUP2 SWAP1 PUSH2 0xFDA SWAP1 PUSH2 0xC5C JUMP JUMPDEST LT ISZERO PUSH2 0x1028 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x1B PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x54686973205072696365204973204D6F7265205468616E203230250000000000 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x78F JUMP JUMPDEST PUSH1 0x9 SLOAD PUSH1 0x40 MLOAD PUSH4 0x23B872DD PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 SWAP2 AND SWAP1 PUSH4 0x23B872DD SWAP1 PUSH2 0x105C SWAP1 CALLER SWAP1 ADDRESS SWAP1 DUP8 SWAP1 PUSH1 0x4 ADD PUSH2 0x14C8 JUMP JUMPDEST PUSH0 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH0 DUP8 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0x1073 JUMPI PUSH0 DUP1 REVERT JUMPDEST POP GAS CALL ISZERO DUP1 ISZERO PUSH2 0x1085 JUMPI RETURNDATASIZE PUSH0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH0 REVERT JUMPDEST POP POP POP PUSH0 DUP4 DUP2 MSTORE PUSH1 0x8 PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 PUSH1 0x2 DUP1 DUP3 ADD DUP1 SLOAD CALLER PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB NOT SWAP2 DUP3 AND DUP2 OR SWAP1 SWAP3 SSTORE PUSH1 0x3 DUP5 ADD DUP1 SLOAD ADDRESS SWAP3 AND SWAP2 SWAP1 SWAP2 OR SWAP1 SSTORE PUSH1 0x5 DUP4 ADD DUP1 SLOAD PUSH1 0xFF NOT AND SWAP1 SSTORE PUSH1 0x4 DUP4 ADD DUP9 SWAP1 SSTORE PUSH1 0x7 SWAP1 SWAP5 MSTORE SWAP2 SWAP1 SWAP4 KECCAK256 DUP1 SLOAD PUSH2 0x100 PUSH1 0x1 PUSH1 0xA8 SHL SUB NOT AND PUSH2 0x100 SWAP1 SWAP4 MUL SWAP3 SWAP1 SWAP3 OR SWAP1 SWAP2 SSTORE SWAP1 SWAP2 POP PUSH2 0x1102 SWAP1 PUSH2 0x12D1 JUMP JUMPDEST PUSH1 0xA SLOAD PUSH1 0x40 MLOAD PUSH32 0xA0C6C0D02D86FDACECBAA5FDF5894BAB204E31A778250474108540733A9B8D19 SWAP2 PUSH2 0x1147 SWAP2 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 SWAP2 AND SWAP1 DUP7 SWAP1 CALLER SWAP1 ADDRESS SWAP1 DUP9 SWAP1 PUSH2 0x14EC JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG1 POP PUSH2 0xEC5 PUSH1 0x1 PUSH0 SSTORE JUMP JUMPDEST PUSH2 0x1161 PUSH2 0x1226 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND PUSH2 0x11C6 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x26 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x4F776E61626C653A206E6577206F776E657220697320746865207A65726F2061 PUSH1 0x44 DUP3 ADD MSTORE PUSH6 0x646472657373 PUSH1 0xD0 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0x78F JUMP JUMPDEST PUSH2 0x9AF DUP2 PUSH2 0x1280 JUMP JUMPDEST PUSH1 0x2 PUSH0 SLOAD SUB PUSH2 0x1220 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x1F PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x5265656E7472616E637947756172643A207265656E7472616E742063616C6C00 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x78F JUMP JUMPDEST PUSH1 0x2 PUSH0 SSTORE JUMP JUMPDEST PUSH1 0x1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND CALLER EQ PUSH2 0xAF5 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD DUP2 SWAP1 MSTORE PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x4F776E61626C653A2063616C6C6572206973206E6F7420746865206F776E6572 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x78F JUMP JUMPDEST PUSH1 0x1 DUP1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 DUP2 AND PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB NOT DUP4 AND DUP2 OR SWAP1 SWAP4 SSTORE PUSH1 0x40 MLOAD SWAP2 AND SWAP2 SWAP1 DUP3 SWAP1 PUSH32 0x8BE0079C531659141344CD1FD0A4F28419497F9722A3DAAFE3B4186F6B6457E0 SWAP1 PUSH0 SWAP1 LOG3 POP POP JUMP JUMPDEST DUP1 SLOAD DUP1 PUSH2 0x1320 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x1B PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x436F756E7465723A2064656372656D656E74206F766572666C6F770000000000 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x78F JUMP JUMPDEST PUSH0 NOT ADD SWAP1 SSTORE JUMP JUMPDEST PUSH1 0x40 DUP1 MLOAD PUSH1 0xC0 DUP2 ADD DUP3 MSTORE PUSH0 DUP1 DUP3 MSTORE PUSH1 0x20 DUP3 ADD DUP2 SWAP1 MSTORE SWAP2 DUP2 ADD DUP3 SWAP1 MSTORE PUSH1 0x60 DUP2 ADD DUP3 SWAP1 MSTORE PUSH1 0x80 DUP2 ADD DUP3 SWAP1 MSTORE PUSH1 0xA0 DUP2 ADD SWAP2 SWAP1 SWAP2 MSTORE SWAP1 JUMP JUMPDEST PUSH1 0x20 DUP1 DUP3 MSTORE DUP3 MLOAD DUP3 DUP3 ADD DUP2 SWAP1 MSTORE PUSH0 SWAP2 SWAP1 PUSH1 0x40 SWAP1 DUP2 DUP6 ADD SWAP1 DUP7 DUP5 ADD DUP6 JUMPDEST DUP3 DUP2 LT ISZERO PUSH2 0x13D7 JUMPI DUP2 MLOAD DUP1 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 DUP2 AND DUP7 MSTORE DUP8 DUP3 ADD MLOAD DUP9 DUP8 ADD MSTORE DUP7 DUP3 ADD MLOAD DUP2 AND DUP8 DUP8 ADD MSTORE PUSH1 0x60 DUP1 DUP4 ADD MLOAD SWAP1 SWAP2 AND SWAP1 DUP7 ADD MSTORE PUSH1 0x80 DUP1 DUP3 ADD MLOAD SWAP1 DUP7 ADD MSTORE PUSH1 0xA0 SWAP1 DUP2 ADD MLOAD ISZERO ISZERO SWAP1 DUP6 ADD MSTORE PUSH1 0xC0 SWAP1 SWAP4 ADD SWAP3 SWAP1 DUP6 ADD SWAP1 PUSH1 0x1 ADD PUSH2 0x1377 JUMP JUMPDEST POP SWAP2 SWAP8 SWAP7 POP POP POP POP POP POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x13F4 JUMPI PUSH0 DUP1 REVERT JUMPDEST POP CALLDATALOAD SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x140C JUMPI PUSH0 DUP1 REVERT JUMPDEST POP POP DUP1 CALLDATALOAD SWAP3 PUSH1 0x20 SWAP1 SWAP2 ADD CALLDATALOAD SWAP2 POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x142B JUMPI PUSH0 DUP1 REVERT JUMPDEST DUP2 CALLDATALOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND DUP2 EQ PUSH2 0x1441 JUMPI PUSH0 DUP1 REVERT JUMPDEST SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH0 MSTORE PUSH1 0x11 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH0 REVERT JUMPDEST DUP1 DUP3 ADD DUP1 DUP3 GT ISZERO PUSH2 0x146F JUMPI PUSH2 0x146F PUSH2 0x1448 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH1 0x1 DUP3 ADD PUSH2 0x1486 JUMPI PUSH2 0x1486 PUSH2 0x1448 JUMP JUMPDEST POP PUSH1 0x1 ADD SWAP1 JUMP JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH0 MSTORE PUSH1 0x41 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH0 REVERT JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH0 MSTORE PUSH1 0x32 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH0 REVERT JUMPDEST DUP2 DUP2 SUB DUP2 DUP2 GT ISZERO PUSH2 0x146F JUMPI PUSH2 0x146F PUSH2 0x1448 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP4 DUP5 AND DUP2 MSTORE SWAP2 SWAP1 SWAP3 AND PUSH1 0x20 DUP3 ADD MSTORE PUSH1 0x40 DUP2 ADD SWAP2 SWAP1 SWAP2 MSTORE PUSH1 0x60 ADD SWAP1 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP6 DUP7 AND DUP2 MSTORE PUSH1 0x20 DUP2 ADD SWAP5 SWAP1 SWAP5 MSTORE SWAP2 DUP5 AND PUSH1 0x40 DUP5 ADD MSTORE SWAP1 SWAP3 AND PUSH1 0x60 DUP3 ADD MSTORE PUSH1 0x80 DUP2 ADD SWAP2 SWAP1 SWAP2 MSTORE PUSH1 0xA0 ADD SWAP1 JUMP JUMPDEST PUSH0 DUP3 PUSH2 0x1539 JUMPI PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH0 MSTORE PUSH1 0x12 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH0 REVERT JUMPDEST POP DIV SWAP1 JUMP INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 PUSH6 0x83CD1FA29062 SWAP9 0xC3 SWAP8 MSIZE 0xA9 0xA7 KECCAK256 0x4D DUP15 0xB8 PUSH4 0xCD8AE99D 0xD4 0xB2 0x21 0x22 0xEF PUSH7 0xFCB2372864736F PUSH13 0x63430008150033000000000000 ",
							"sourceMap": "317:7770:13:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;6567:609;;;;;;;;;;;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;7402:683;;;;;;;;;;;;;:::i;2417:766::-;;;;;;:::i;:::-;;:::i;:::-;;510:30;;;;;;;;;;;;;;;;;;;1510:25:14;;;1498:2;1483:18;510:30:13;1364:177:14;427:33:13;;;;;;;;;;-1:-1:-1;427:33:13;;;;;;5604:102;;;;;;;;;;-1:-1:-1;5604:102:13;;;;;:::i;:::-;;:::i;4440:364::-;;;;;;;;;;-1:-1:-1;4440:364:13;;;;;:::i;:::-;;:::i;638:39::-;;;;;;;;;;-1:-1:-1;638:39:13;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;;;638:39:13;;;;;;;1739:14:14;;1732:22;1714:41;;-1:-1:-1;;;;;1791:32:14;;;1786:2;1771:18;;1764:60;1687:18;638:39:13;1546:284:14;1831:101:0;;;;;;;;;;;;;:::i;5325:90:13:-;;;;;;;;;;-1:-1:-1;5397:11:13;;5325:90;;589:43;;;;;;;;;;-1:-1:-1;589:43:13;;;;;:::i;:::-;;;;;;;;;;;;-1:-1:-1;;;;;589:43:13;;;;;;-1:-1:-1;;;;;1999:32:14;;;1981:51;;1969:2;1954:18;589:43:13;1835:203:14;5892:479:13;;;;;;;;;;;;;:::i;1201:85:0:-;;;;;;;;;;-1:-1:-1;1273:6:0;;-1:-1:-1;;;;;1273:6:0;1201:85;;5008:172:13;;;;;;;;;;-1:-1:-1;5008:172:13;;;;;:::i;:::-;;:::i;466:33::-;;;;;;;;;;-1:-1:-1;466:33:13;;;;;;1572:652;;;;;;:::i;:::-;;:::i;3430:840::-;;;;;;:::i;:::-;;:::i;2081:198:0:-;;;;;;;;;;-1:-1:-1;2081:198:0;;;;;:::i;:::-;;:::i;6567:609:13:-;6609:12;6633:13;6649:19;:9;918:14:8;;827:112;6649:19:13;6633:35;;6678:15;6712:6;6707:146;6728:8;6724:1;:12;6707:146;;;6786:10;6761:8;:15;6770:5;:1;6774;6770:5;:::i;:::-;6761:15;;;;;;;;;;;-1:-1:-1;6761:15:13;:21;;;-1:-1:-1;;;;;6761:21:13;:35;6757:86;;6816:12;;;;:::i;:::-;;;;6757:86;6738:3;;;;:::i;:::-;;;;6707:146;;;;6862:17;6892:10;6882:21;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;6862:41;;6917:14;6954:6;6949:200;6970:8;6966:1;:12;6949:200;;;7032:10;7007:8;:15;7016:5;:1;7020;7016:5;:::i;:::-;7007:15;;;;;;;;;;;-1:-1:-1;7007:15:13;:21;;;-1:-1:-1;;;;;7007:21:13;:35;7003:136;;7080:8;:15;7089:5;:1;7093;7089:5;:::i;:::-;7080:15;;;;;;;;;;;;;;-1:-1:-1;7080:15:13;7062:33;;;;;;;;;-1:-1:-1;;;;;7062:33:13;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:15;;:4;;7067:9;;7062:15;;;;;;:::i;:::-;;;;;;:33;;;;7113:11;;;;;:::i;:::-;;;;7003:136;6980:3;;;;:::i;:::-;;;;6949:200;;;-1:-1:-1;7165:4:13;;6567:609;-1:-1:-1;;;;6567:609:13:o;7402:683::-;7450:12;7474:13;7490:19;:9;918:14:8;;827:112;7490:19:13;7474:35;;7519:21;7559:6;7554:184;7575:8;7571:1;:12;7554:184;;;7635:10;7609:8;:15;7618:5;:1;7622;7618:5;:::i;:::-;7609:15;;;;;;;;;;;-1:-1:-1;7609:15:13;:22;;;-1:-1:-1;;;;;7609:22:13;:36;7608:67;;;;-1:-1:-1;7652:8:13;:15;7661:5;:1;7665;7661:5;:::i;:::-;7652:15;;;;;;;;;;;-1:-1:-1;7652:15:13;:22;;;;;7651:23;7608:67;7604:124;;;7695:18;;;;:::i;:::-;;;;7604:124;7585:3;;;;:::i;:::-;;;;7554:184;;;;7747:17;7777:16;7767:27;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;7747:47;;7804:14;7837:6;7832:226;7853:8;7849:1;:12;7832:226;;;7912:10;7886:8;:15;7895:5;:1;7899;7895:5;:::i;:::-;7886:15;;;;;;;;;;;-1:-1:-1;7886:15:13;:22;;;-1:-1:-1;;;;;7886:22:13;:36;:65;;;;-1:-1:-1;7928:8:13;:15;7937:5;:1;7941;7937:5;:::i;:::-;7928:15;;;;;;;;;;;-1:-1:-1;7928:15:13;:22;;;;;7927:23;7886:65;7882:166;;;7989:8;:15;7998:5;:1;8002;7998:5;:::i;:::-;7989:15;;;;;;;;;;;;;;-1:-1:-1;7989:15:13;7971:33;;;;;;;;;-1:-1:-1;;;;;7971:33:13;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:15;;:4;;7976:9;;7971:15;;;;;;:::i;:::-;;;;;;:33;;;;8022:11;;;;;:::i;:::-;;;;7882:166;7863:3;;;;:::i;:::-;;;;7832:226;;2417:766;2261:21:1;:19;:21::i;:::-;2489:15:13::1;2507:18:::0;;;:8:::1;:18;::::0;;;;2556:9:::1;::::0;::::1;::::0;2543::::1;:22;;2535:74;;;::::0;-1:-1:-1;;;2535:74:13;;3455:2:14;2535:74:13::1;::::0;::::1;3437:21:14::0;3494:2;3474:18;;;3467:30;3533:34;3513:18;;;3506:62;-1:-1:-1;;;3584:18:14;;;3577:36;3630:19;;2535:74:13::1;;;;;;;;;2627:18;::::0;;;:8:::1;:18;::::0;;;;:25:::1;;::::0;2656:10:::1;-1:-1:-1::0;;;;;2627:25:13;;::::1;:39:::0;2619:83:::1;;;::::0;-1:-1:-1;;;2619:83:13;;3862:2:14;2619:83:13::1;::::0;::::1;3844:21:14::0;3901:2;3881:18;;;3874:30;3940:33;3920:18;;;3913:61;3991:18;;2619:83:13::1;3660:355:14::0;2619:83:13::1;2712:21;2744:10;2712:43;;2765:11;2791;;2779:3;:9;;;:23;;;;:::i;:::-;2820:10;::::0;::::1;::::0;2812:36:::1;::::0;2765:37;;-1:-1:-1;;;;;;2820:10:13::1;::::0;2812:36;::::1;;;::::0;2765:37;;2820:10:::1;2812:36:::0;2820:10;2812:36;2765:37;2820:10;2812:36;::::1;;;;;;;;;;;;;::::0;::::1;;;;;-1:-1:-1::0;2858:5:13::1;::::0;;2899:11;::::1;::::0;2858:53:::1;::::0;-1:-1:-1;;;2858:53:13;;-1:-1:-1;;;;;2858:5:13;;::::1;::::0;:18:::1;::::0;:53:::1;::::0;2885:4:::1;::::0;2892:5;;2858:53:::1;;;:::i;:::-;;;;;;;;;;;;;;;;;;::::0;::::1;;;;;;;;;;;;::::0;::::1;;;;;-1:-1:-1::0;;;2931:20:13::1;::::0;;;:10:::1;:20;::::0;;;;;;2962:11:::1;::::0;2923:51;;-1:-1:-1;;;;;2931:20:13;;::::1;::::0;-1:-1:-1;2923:51:13;::::1;;;::::0;;2931:20;2923:51;2962:11;2931:20;2923:51;::::1;;;;;;;;;;;;;::::0;::::1;;;;;-1:-1:-1::0;2984:9:13::1;::::0;::::1;:17:::0;;-1:-1:-1;;;;;;2984:17:13::1;-1:-1:-1::0;;;;;2984:17:13;::::1;;::::0;;3011:10:::1;::::0;::::1;:15:::0;;-1:-1:-1;;3011:15:13;;::::1;-1:-1:-1::0;3011:15:13;;::::1;::::0;;;-1:-1:-1;3036:15:13;;;:5:::1;:15;::::0;;;;:29;;;;::::1;::::0;::::1;::::0;;3075:9:::1;1032:19:8::0;;;;;;;3119:13:13::1;::::0;;3134:11;::::1;::::0;3147:10:::1;::::0;::::1;::::0;3111:65:::1;::::0;::::1;::::0;::::1;::::0;-1:-1:-1;;;;;3119:13:13;;::::1;::::0;3134:11;;3147:10;::::1;::::0;3159:5;;3166:9:::1;::::0;3111:65:::1;:::i;:::-;;;;;;;;2479:704;;;2303:20:1::0;1716:1;2809:7;:22;2629:209;2303:20;2417:766:13;:::o;5604:102::-;1094:13:0;:11;:13::i;:::-;5674:11:13::1;:25:::0;5604:102::o;4440:364::-;4503:15;;;;:5;:15;;;;;:24;;;;-1:-1:-1;;;;;4503:24:13;4531:10;4503:38;4495:71;;;;-1:-1:-1;;;4495:71:13;;5292:2:14;4495:71:13;;;5274:21:14;5331:2;5311:18;;;5304:30;-1:-1:-1;;;5350:18:14;;;5343:51;5411:18;;4495:71:13;5090:345:14;4495:71:13;4576:15;;;;:5;:15;;;;;;;;:29;;4601:4;-1:-1:-1;;4576:29:13;;;;;;;;4615:8;:18;;;;;;;:25;;:30;;;;;;;;;;4655:5;;:55;;-1:-1:-1;;;4655:55:13;;-1:-1:-1;;;;;4655:5:13;;;;:18;;:55;;4682:4;;4689:10;;4576:15;;4655:55;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;4720:18:13;;;;:8;:18;;;;;:24;;:46;;-1:-1:-1;;;;;;4720:46:13;4755:10;4720:46;;;-1:-1:-1;4776:21:13;:9;1032:19:8;;1050:1;1032:19;;;945:123;1831:101:0;1094:13;:11;:13::i;:::-;1895:30:::1;1922:1;1895:18;:30::i;:::-;1831:101::o:0;5892:479:13:-;5938:12;5962:16;5981:19;:9;918:14:8;;827:112;5981:19:13;5962:38;;6010:23;6047:19;:9;918:14:8;;827:112;6047:19:13;6036:30;;:8;:30;:::i;:::-;6010:56;;6076:17;6106:15;6096:26;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;6076:46;;6132:14;6165:6;6160:184;6181:8;6177:1;:12;6160:184;;;6215:8;:15;6224:5;:1;6228;6224:5;:::i;:::-;6215:15;;;;;;;;;;;-1:-1:-1;6215:15:13;:22;;;;;6210:124;;6275:8;:15;6284:5;:1;6288;6284:5;:::i;:::-;6275:15;;;;;;;;;;;;;;-1:-1:-1;6275:15:13;6257:33;;;;;;;;;-1:-1:-1;;;;;6257:33:13;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:15;;:4;;6262:9;;6257:15;;;;;;:::i;:::-;;;;;;:33;;;;6308:11;;;;;:::i;:::-;;;;6210:124;6191:3;;;;:::i;:::-;;;;6160:184;;5008:172;5065:4;5089:1;5065:4;5141:8;5089:1;5141:6;:8;:::i;:::-;5131:19;;:6;:19;:::i;:::-;5122:28;5008:172;-1:-1:-1;;;;5008:172:13:o;1572:652::-;2261:21:1;:19;:21::i;:::-;1679:1:13::1;1670:6;:10;1662:51;;;::::0;-1:-1:-1;;;1662:51:13;;6244:2:14;1662:51:13::1;::::0;::::1;6226:21:14::0;6283:2;6263:18;;;6256:30;6322;6302:18;;;6295:58;6370:18;;1662:51:13::1;6042:352:14::0;1662:51:13::1;1733:15;::::0;;;:5:::1;:15;::::0;;;;:22;::::1;;1731:25;1723:65;;;::::0;-1:-1:-1;;;1723:65:13;;6601:2:14;1723:65:13::1;::::0;::::1;6583:21:14::0;6640:2;6620:18;;;6613:30;6679;6659:18;;;6652:58;6727:18;;1723:65:13::1;6399:352:14::0;1723:65:13::1;1847:5;::::0;:55:::1;::::0;-1:-1:-1;;;1847:55:13;;-1:-1:-1;;;;;1847:5:13;;::::1;::::0;:18:::1;::::0;:55:::1;::::0;1866:10:::1;::::0;1886:4:::1;::::0;1893:8;;1847:55:::1;;;:::i;:::-;;;;;;;;;;;;;;;;;;::::0;::::1;;;;;;;;;;;;::::0;::::1;;;;;;;;;1912:21;:9;1032:19:8::0;;1050:1;1032:19;;;945:123;1912:21:13::1;1964:83;::::0;;::::1;::::0;::::1;::::0;;1968:13:::1;::::0;;-1:-1:-1;;;;;1968:13:13;;::::1;1964:83:::0;;::::1;::::0;;::::1;::::0;;;1999:10:::1;1964:83:::0;;;;;;2027:4:::1;1964:83:::0;;;;;;;;;;;;-1:-1:-1;1964:83:13;;;;;;1943:18;;;:8:::1;:18:::0;;;;;:104;;;;-1:-1:-1;;;;;;1943:104:13;;::::1;::::0;;::::1;::::0;;;::::1;::::0;;;;-1:-1:-1;1943:104:13;::::1;::::0;;;::::1;::::0;::::1;::::0;;;::::1;::::0;;::::1;::::0;;;::::1;::::0;;;;::::1;::::0;::::1;::::0;;;::::1;::::0;;::::1;::::0;;;::::1;::::0;;;::::1;::::0;::::1;::::0;;;::::1;::::0;;::::1;::::0;;-1:-1:-1;;1943:104:13::1;::::0;::::1;;::::0;;;::::1;::::0;;;2057:10:::1;:20:::0;;;;;:31;;;;::::1;::::0;::::1;::::0;;;2098:5:::1;:15:::0;;;;;;:35;;-1:-1:-1;;;;;;2098:35:13::1;1968:13;2098:35:::0;::::1;;::::0;;2158:13;;2148:69;;::::1;::::0;::::1;::::0;2158:13;::::1;::::0;1964:83;;1999:10;;1964:83;;2148:69:::1;:::i;:::-;;;;;;;;2303:20:1::0;1716:1;2809:7;:22;2629:209;2303:20;1572:652:13;;:::o;3430:840::-;2261:21:1;:19;:21::i;:::-;3538:1:13::1;3529:6;:10;3521:51;;;::::0;-1:-1:-1;;;3521:51:13;;6244:2:14;3521:51:13::1;::::0;::::1;6226:21:14::0;6283:2;6263:18;;;6256:30;6322;6302:18;;;6295:58;6370:18;;3521:51:13::1;6042:352:14::0;3521:51:13::1;3590:18;::::0;;;:8:::1;:18;::::0;;;;:24:::1;;::::0;-1:-1:-1;;;;;3590:24:13::1;3618:10;3590:38;3582:85;;;::::0;-1:-1:-1;;;3582:85:13;;7491:2:14;3582:85:13::1;::::0;::::1;7473:21:14::0;7530:2;7510:18;;;7503:30;7569:34;7549:18;;;7542:62;-1:-1:-1;;;7620:18:14;;;7613:33;7663:19;;3582:85:13::1;7289:399:14::0;3582:85:13::1;3709:18;::::0;;;:8:::1;:18;::::0;;;;:24:::1;::::0;::::1;::::0;3680:25:::1;::::0;;::::1;::::0;-1:-1:-1;;;;;3680:25:13;;::::1;3709:24:::0;::::1;3680:53;3677:172;;3771:18;::::0;;;:8:::1;:18;::::0;;;;:24:::1;;::::0;3800:6;;3756:40:::1;::::0;:14:::1;:40::i;:::-;:50;;3748:90;;;::::0;-1:-1:-1;;;3748:90:13;;7895:2:14;3748:90:13::1;::::0;::::1;7877:21:14::0;7934:2;7914:18;;;7907:30;7973:29;7953:18;;;7946:57;8020:18;;3748:90:13::1;7693:351:14::0;3748:90:13::1;3858:5;::::0;:55:::1;::::0;-1:-1:-1;;;3858:55:13;;-1:-1:-1;;;;;3858:5:13;;::::1;::::0;:18:::1;::::0;:55:::1;::::0;3877:10:::1;::::0;3897:4:::1;::::0;3904:8;;3858:55:::1;;;:::i;:::-;;;;;;;;;;;;;;;;;;::::0;::::1;;;;;;;;;;;;::::0;::::1;;;;;-1:-1:-1::0;;;3923:15:13::1;3941:18:::0;;;:8:::1;:18;::::0;;;;;;;3969:10:::1;::::0;;::::1;:32:::0;;3990:10:::1;-1:-1:-1::0;;;;;;3969:32:13;;::::1;::::0;::::1;::::0;;;4011:9:::1;::::0;::::1;:34:::0;;4039:4:::1;4011:34:::0;::::1;::::0;;;::::1;::::0;;4055:10:::1;::::0;::::1;:18:::0;;-1:-1:-1;;4055:18:13::1;::::0;;4083:9:::1;::::0;::::1;:18:::0;;;4111:5:::1;:15:::0;;;;;;;:37;;-1:-1:-1;;;;;;4111:37:13::1;3969:32;4111:37:::0;;::::1;::::0;;;::::1;::::0;;;3941:18;;-1:-1:-1;4158:21:13::1;::::0;:19:::1;:21::i;:::-;4204:13;::::0;4194:69:::1;::::0;::::1;::::0;::::1;::::0;-1:-1:-1;;;;;4204:13:13;;::::1;::::0;4219:8;;4229:10:::1;::::0;4249:4:::1;::::0;4256:6;;4194:69:::1;:::i;:::-;;;;;;;;3511:759;2303:20:1::0;1716:1;2809:7;:22;2629:209;2081:198:0;1094:13;:11;:13::i;:::-;-1:-1:-1;;;;;2169:22:0;::::1;2161:73;;;::::0;-1:-1:-1;;;2161:73:0;;8251:2:14;2161:73:0::1;::::0;::::1;8233:21:14::0;8290:2;8270:18;;;8263:30;8329:34;8309:18;;;8302:62;-1:-1:-1;;;8380:18:14;;;8373:36;8426:19;;2161:73:0::1;8049:402:14::0;2161:73:0::1;2244:28;2263:8;2244:18;:28::i;2336:287:1:-:0;1759:1;2468:7;;:19;2460:63;;;;-1:-1:-1;;;2460:63:1;;8658:2:14;2460:63:1;;;8640:21:14;8697:2;8677:18;;;8670:30;8736:33;8716:18;;;8709:61;8787:18;;2460:63:1;8456:355:14;2460:63:1;1759:1;2598:7;:18;2336:287::o;1359:130:0:-;1273:6;;-1:-1:-1;;;;;1273:6:0;719:10:7;1422:23:0;1414:68;;;;-1:-1:-1;;;1414:68:0;;9018:2:14;1414:68:0;;;9000:21:14;;;9037:18;;;9030:30;9096:34;9076:18;;;9069:62;9148:18;;1414:68:0;8816:356:14;2433:187:0;2525:6;;;-1:-1:-1;;;;;2541:17:0;;;-1:-1:-1;;;;;;2541:17:0;;;;;;;2573:40;;2525:6;;;2541:17;2525:6;;2573:40;;2506:16;;2573:40;2496:124;2433:187;:::o;1074:229:8:-;1153:14;;1185:9;1177:49;;;;-1:-1:-1;;;1177:49:8;;9379:2:14;1177:49:8;;;9361:21:14;9418:2;9398:18;;;9391:30;9457:29;9437:18;;;9430:57;9504:18;;1177:49:8;9177:351:14;1177:49:8;-1:-1:-1;;1277:9:8;1260:26;;1074:229::o;-1:-1:-1:-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::o;14:1160:14:-;227:2;279:21;;;349:13;;252:18;;;371:22;;;198:4;;227:2;412;;430:18;;;;471:15;;;198:4;514:634;528:6;525:1;522:13;514:634;;;587:13;;671:9;;-1:-1:-1;;;;;667:18:14;;;655:31;;726:11;;;720:18;706:12;;;699:40;783:11;;;777:18;773:27;;759:12;;;752:49;824:4;872:11;;;866:18;862:27;;;848:12;;;841:49;913:4;957:11;;;951:18;937:12;;;930:40;631:3;1051:11;;;1045:18;1038:26;1031:34;1017:12;;;1010:56;1095:4;1086:14;;;;1123:15;;;;640:1;543:9;514:634;;;-1:-1:-1;1165:3:14;;14:1160;-1:-1:-1;;;;;;;14:1160:14:o;1179:180::-;1238:6;1291:2;1279:9;1270:7;1266:23;1262:32;1259:52;;;1307:1;1304;1297:12;1259:52;-1:-1:-1;1330:23:14;;1179:180;-1:-1:-1;1179:180:14:o;2043:248::-;2111:6;2119;2172:2;2160:9;2151:7;2147:23;2143:32;2140:52;;;2188:1;2185;2178:12;2140:52;-1:-1:-1;;2211:23:14;;;2281:2;2266:18;;;2253:32;;-1:-1:-1;2043:248:14:o;2296:286::-;2355:6;2408:2;2396:9;2387:7;2383:23;2379:32;2376:52;;;2424:1;2421;2414:12;2376:52;2450:23;;-1:-1:-1;;;;;2502:31:14;;2492:42;;2482:70;;2548:1;2545;2538:12;2482:70;2571:5;2296:286;-1:-1:-1;;;2296:286:14:o;2587:127::-;2648:10;2643:3;2639:20;2636:1;2629:31;2679:4;2676:1;2669:15;2703:4;2700:1;2693:15;2719:125;2784:9;;;2805:10;;;2802:36;;;2818:18;;:::i;:::-;2719:125;;;;:::o;2849:135::-;2888:3;2909:17;;;2906:43;;2929:18;;:::i;:::-;-1:-1:-1;2976:1:14;2965:13;;2849:135::o;2989:127::-;3050:10;3045:3;3041:20;3038:1;3031:31;3081:4;3078:1;3071:15;3105:4;3102:1;3095:15;3121:127;3182:10;3177:3;3173:20;3170:1;3163:31;3213:4;3210:1;3203:15;3237:4;3234:1;3227:15;4020:128;4087:9;;;4108:11;;;4105:37;;;4122:18;;:::i;4153:383::-;-1:-1:-1;;;;;4419:15:14;;;4401:34;;4471:15;;;;4466:2;4451:18;;4444:43;4518:2;4503:18;;4496:34;;;;4351:2;4336:18;;4153:383::o;4541:544::-;-1:-1:-1;;;;;4872:15:14;;;4854:34;;4919:2;4904:18;;4897:34;;;;4967:15;;;4962:2;4947:18;;4940:43;5019:15;;;5014:2;4999:18;;4992:43;5066:3;5051:19;;5044:35;;;;4803:3;4788:19;;4541:544::o;5820:217::-;5860:1;5886;5876:132;;5930:10;5925:3;5921:20;5918:1;5911:31;5965:4;5962:1;5955:15;5993:4;5990:1;5983:15;5876:132;-1:-1:-1;6022:9:14;;5820:217::o"
						},
						"gasEstimates": {
							"creation": {
								"codeDepositCost": "1098400",
								"executionCost": "infinite",
								"totalCost": "infinite"
							},
							"external": {
								"CancelOffer(uint256)": "infinite",
								"ClaculatePrice(uint256)": "454",
								"FirstOwner(uint256)": "2519",
								"GetListingFee()": "2314",
								"LISTING_FEE()": "2384",
								"ListNft(uint256,uint256)": "infinite",
								"ReSellNft(uint256,uint256)": "infinite",
								"SetListingFee(uint256)": "24531",
								"_nftCount()": "2341",
								"_nftsSold()": "2320",
								"buyNft(uint256)": "infinite",
								"check(uint256)": "2610",
								"getListedNfts()": "infinite",
								"getMyListedNfts()": "infinite",
								"getMyNfts()": "infinite",
								"owner()": "2419",
								"renounceOwnership()": "infinite",
								"transferOwnership(address)": "28408"
							}
						},
						"legacyAssembly": {
							".code": [
								{
									"begin": 317,
									"end": 8087,
									"name": "PUSH",
									"source": 13,
									"value": "80"
								},
								{
									"begin": 317,
									"end": 8087,
									"name": "PUSH",
									"source": 13,
									"value": "40"
								},
								{
									"begin": 317,
									"end": 8087,
									"name": "MSTORE",
									"source": 13
								},
								{
									"begin": 539,
									"end": 540,
									"name": "PUSH",
									"source": 13,
									"value": "0"
								},
								{
									"begin": 510,
									"end": 540,
									"name": "PUSH",
									"source": 13,
									"value": "4"
								},
								{
									"begin": 510,
									"end": 540,
									"name": "SSTORE",
									"source": 13
								},
								{
									"begin": 1230,
									"end": 1346,
									"name": "CALLVALUE",
									"source": 13
								},
								{
									"begin": 1230,
									"end": 1346,
									"name": "DUP1",
									"source": 13
								},
								{
									"begin": 1230,
									"end": 1346,
									"name": "ISZERO",
									"source": 13
								},
								{
									"begin": 1230,
									"end": 1346,
									"name": "PUSH [tag]",
									"source": 13,
									"value": "1"
								},
								{
									"begin": 1230,
									"end": 1346,
									"name": "JUMPI",
									"source": 13
								},
								{
									"begin": 1230,
									"end": 1346,
									"name": "PUSH",
									"source": 13,
									"value": "0"
								},
								{
									"begin": 1230,
									"end": 1346,
									"name": "DUP1",
									"source": 13
								},
								{
									"begin": 1230,
									"end": 1346,
									"name": "REVERT",
									"source": 13
								},
								{
									"begin": 1230,
									"end": 1346,
									"name": "tag",
									"source": 13,
									"value": "1"
								},
								{
									"begin": 1230,
									"end": 1346,
									"name": "JUMPDEST",
									"source": 13
								},
								{
									"begin": 1230,
									"end": 1346,
									"name": "POP",
									"source": 13
								},
								{
									"begin": 1230,
									"end": 1346,
									"name": "PUSH",
									"source": 13,
									"value": "40"
								},
								{
									"begin": 1230,
									"end": 1346,
									"name": "MLOAD",
									"source": 13
								},
								{
									"begin": 1230,
									"end": 1346,
									"name": "PUSHSIZE",
									"source": 13
								},
								{
									"begin": 1230,
									"end": 1346,
									"name": "CODESIZE",
									"source": 13
								},
								{
									"begin": 1230,
									"end": 1346,
									"name": "SUB",
									"source": 13
								},
								{
									"begin": 1230,
									"end": 1346,
									"name": "DUP1",
									"source": 13
								},
								{
									"begin": 1230,
									"end": 1346,
									"name": "PUSHSIZE",
									"source": 13
								},
								{
									"begin": 1230,
									"end": 1346,
									"name": "DUP4",
									"source": 13
								},
								{
									"begin": 1230,
									"end": 1346,
									"name": "CODECOPY",
									"source": 13
								},
								{
									"begin": 1230,
									"end": 1346,
									"name": "DUP2",
									"source": 13
								},
								{
									"begin": 1230,
									"end": 1346,
									"name": "ADD",
									"source": 13
								},
								{
									"begin": 1230,
									"end": 1346,
									"name": "PUSH",
									"source": 13,
									"value": "40"
								},
								{
									"begin": 1230,
									"end": 1346,
									"name": "DUP2",
									"source": 13
								},
								{
									"begin": 1230,
									"end": 1346,
									"name": "SWAP1",
									"source": 13
								},
								{
									"begin": 1230,
									"end": 1346,
									"name": "MSTORE",
									"source": 13
								},
								{
									"begin": 1230,
									"end": 1346,
									"name": "PUSH [tag]",
									"source": 13,
									"value": "2"
								},
								{
									"begin": 1230,
									"end": 1346,
									"name": "SWAP2",
									"source": 13
								},
								{
									"begin": 1230,
									"end": 1346,
									"name": "PUSH [tag]",
									"source": 13,
									"value": "3"
								},
								{
									"begin": 1230,
									"end": 1346,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 13
								},
								{
									"begin": 1230,
									"end": 1346,
									"name": "tag",
									"source": 13,
									"value": "2"
								},
								{
									"begin": 1230,
									"end": 1346,
									"name": "JUMPDEST",
									"source": 13
								},
								{
									"begin": 1716,
									"end": 1717,
									"name": "PUSH",
									"source": 1,
									"value": "1"
								},
								{
									"begin": 1821,
									"end": 1828,
									"name": "PUSH",
									"source": 1,
									"value": "0"
								},
								{
									"begin": 1821,
									"end": 1843,
									"name": "SSTORE",
									"source": 1
								},
								{
									"begin": 936,
									"end": 968,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "9"
								},
								{
									"begin": 719,
									"end": 729,
									"name": "CALLER",
									"source": 7
								},
								{
									"begin": 936,
									"end": 954,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "12"
								},
								{
									"begin": 936,
									"end": 968,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 0
								},
								{
									"begin": 936,
									"end": 968,
									"name": "tag",
									"source": 0,
									"value": "9"
								},
								{
									"begin": 936,
									"end": 968,
									"name": "JUMPDEST",
									"source": 0
								},
								{
									"begin": 1273,
									"end": 1278,
									"name": "PUSH",
									"source": 13,
									"value": "9"
								},
								{
									"begin": 1273,
									"end": 1301,
									"name": "DUP1",
									"source": 13
								},
								{
									"begin": 1273,
									"end": 1301,
									"name": "SLOAD",
									"source": 13
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "1"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "1"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "A0"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SHL",
									"source": -1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SUB",
									"source": -1
								},
								{
									"begin": 1273,
									"end": 1301,
									"name": "SWAP1",
									"source": 13
								},
								{
									"begin": 1273,
									"end": 1301,
									"name": "SWAP3",
									"source": 13
								},
								{
									"begin": 1273,
									"end": 1301,
									"name": "AND",
									"source": 13
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "1"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "1"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "A0"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SHL",
									"source": -1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SUB",
									"source": -1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "NOT",
									"source": -1
								},
								{
									"begin": 1273,
									"end": 1301,
									"name": "SWAP3",
									"source": 13
								},
								{
									"begin": 1273,
									"end": 1301,
									"name": "DUP4",
									"source": 13
								},
								{
									"begin": 1273,
									"end": 1301,
									"name": "AND",
									"source": 13
								},
								{
									"begin": 1273,
									"end": 1301,
									"name": "DUP2",
									"source": 13
								},
								{
									"begin": 1273,
									"end": 1301,
									"name": "OR",
									"source": 13
								},
								{
									"begin": 1273,
									"end": 1301,
									"name": "SWAP1",
									"source": 13
								},
								{
									"begin": 1273,
									"end": 1301,
									"name": "SWAP2",
									"source": 13
								},
								{
									"begin": 1273,
									"end": 1301,
									"name": "SSTORE",
									"source": 13
								},
								{
									"begin": 1311,
									"end": 1324,
									"name": "PUSH",
									"source": 13,
									"value": "A"
								},
								{
									"begin": 1311,
									"end": 1339,
									"name": "DUP1",
									"source": 13
								},
								{
									"begin": 1311,
									"end": 1339,
									"name": "SLOAD",
									"source": 13
								},
								{
									"begin": 1311,
									"end": 1339,
									"name": "SWAP1",
									"source": 13
								},
								{
									"begin": 1311,
									"end": 1339,
									"name": "SWAP3",
									"source": 13
								},
								{
									"begin": 1311,
									"end": 1339,
									"name": "AND",
									"source": 13
								},
								{
									"begin": 1311,
									"end": 1339,
									"name": "OR",
									"source": 13
								},
								{
									"begin": 1311,
									"end": 1339,
									"name": "SWAP1",
									"source": 13
								},
								{
									"begin": 1311,
									"end": 1339,
									"name": "SSTORE",
									"source": 13
								},
								{
									"begin": 317,
									"end": 8087,
									"name": "PUSH [tag]",
									"source": 13,
									"value": "17"
								},
								{
									"begin": 317,
									"end": 8087,
									"name": "JUMP",
									"source": 13
								},
								{
									"begin": 2433,
									"end": 2620,
									"name": "tag",
									"source": 0,
									"value": "12"
								},
								{
									"begin": 2433,
									"end": 2620,
									"name": "JUMPDEST",
									"source": 0
								},
								{
									"begin": 2525,
									"end": 2531,
									"name": "PUSH",
									"source": 0,
									"value": "1"
								},
								{
									"begin": 2525,
									"end": 2531,
									"name": "DUP1",
									"source": 0
								},
								{
									"begin": 2525,
									"end": 2531,
									"name": "SLOAD",
									"source": 0
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "1"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "1"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "A0"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SHL",
									"source": -1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SUB",
									"source": -1
								},
								{
									"begin": 2541,
									"end": 2558,
									"name": "DUP4",
									"source": 0
								},
								{
									"begin": 2541,
									"end": 2558,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 2541,
									"end": 2558,
									"name": "AND",
									"source": 0
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "1"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "1"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "A0"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SHL",
									"source": -1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SUB",
									"source": -1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "NOT",
									"source": -1
								},
								{
									"begin": 2541,
									"end": 2558,
									"name": "DUP4",
									"source": 0
								},
								{
									"begin": 2541,
									"end": 2558,
									"name": "AND",
									"source": 0
								},
								{
									"begin": 2541,
									"end": 2558,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 2541,
									"end": 2558,
									"name": "OR",
									"source": 0
								},
								{
									"begin": 2541,
									"end": 2558,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 2541,
									"end": 2558,
									"name": "SWAP4",
									"source": 0
								},
								{
									"begin": 2541,
									"end": 2558,
									"name": "SSTORE",
									"source": 0
								},
								{
									"begin": 2573,
									"end": 2613,
									"name": "PUSH",
									"source": 0,
									"value": "40"
								},
								{
									"begin": 2573,
									"end": 2613,
									"name": "MLOAD",
									"source": 0
								},
								{
									"begin": 2525,
									"end": 2531,
									"name": "SWAP2",
									"source": 0
								},
								{
									"begin": 2525,
									"end": 2531,
									"name": "AND",
									"source": 0
								},
								{
									"begin": 2525,
									"end": 2531,
									"name": "SWAP2",
									"source": 0
								},
								{
									"begin": 2541,
									"end": 2558,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 2525,
									"end": 2531,
									"name": "DUP3",
									"source": 0
								},
								{
									"begin": 2525,
									"end": 2531,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 2573,
									"end": 2613,
									"name": "PUSH",
									"source": 0,
									"value": "8BE0079C531659141344CD1FD0A4F28419497F9722A3DAAFE3B4186F6B6457E0"
								},
								{
									"begin": 2573,
									"end": 2613,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 2506,
									"end": 2522,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 2506,
									"end": 2522,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 2573,
									"end": 2613,
									"name": "LOG3",
									"source": 0
								},
								{
									"begin": 2496,
									"end": 2620,
									"name": "POP",
									"source": 0
								},
								{
									"begin": 2433,
									"end": 2620,
									"name": "POP",
									"source": 0
								},
								{
									"begin": 2433,
									"end": 2620,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 0
								},
								{
									"begin": 14,
									"end": 304,
									"name": "tag",
									"source": 14,
									"value": "3"
								},
								{
									"begin": 14,
									"end": 304,
									"name": "JUMPDEST",
									"source": 14
								},
								{
									"begin": 84,
									"end": 90,
									"name": "PUSH",
									"source": 14,
									"value": "0"
								},
								{
									"begin": 137,
									"end": 139,
									"name": "PUSH",
									"source": 14,
									"value": "20"
								},
								{
									"begin": 125,
									"end": 134,
									"name": "DUP3",
									"source": 14
								},
								{
									"begin": 116,
									"end": 123,
									"name": "DUP5",
									"source": 14
								},
								{
									"begin": 112,
									"end": 135,
									"name": "SUB",
									"source": 14
								},
								{
									"begin": 108,
									"end": 140,
									"name": "SLT",
									"source": 14
								},
								{
									"begin": 105,
									"end": 157,
									"name": "ISZERO",
									"source": 14
								},
								{
									"begin": 105,
									"end": 157,
									"name": "PUSH [tag]",
									"source": 14,
									"value": "19"
								},
								{
									"begin": 105,
									"end": 157,
									"name": "JUMPI",
									"source": 14
								},
								{
									"begin": 153,
									"end": 154,
									"name": "PUSH",
									"source": 14,
									"value": "0"
								},
								{
									"begin": 150,
									"end": 151,
									"name": "DUP1",
									"source": 14
								},
								{
									"begin": 143,
									"end": 155,
									"name": "REVERT",
									"source": 14
								},
								{
									"begin": 105,
									"end": 157,
									"name": "tag",
									"source": 14,
									"value": "19"
								},
								{
									"begin": 105,
									"end": 157,
									"name": "JUMPDEST",
									"source": 14
								},
								{
									"begin": 179,
									"end": 195,
									"name": "DUP2",
									"source": 14
								},
								{
									"begin": 179,
									"end": 195,
									"name": "MLOAD",
									"source": 14
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "1"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "1"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "A0"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SHL",
									"source": -1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SUB",
									"source": -1
								},
								{
									"begin": 224,
									"end": 255,
									"name": "DUP2",
									"source": 14
								},
								{
									"begin": 224,
									"end": 255,
									"name": "AND",
									"source": 14
								},
								{
									"begin": 214,
									"end": 256,
									"name": "DUP2",
									"source": 14
								},
								{
									"begin": 214,
									"end": 256,
									"name": "EQ",
									"source": 14
								},
								{
									"begin": 204,
									"end": 274,
									"name": "PUSH [tag]",
									"source": 14,
									"value": "20"
								},
								{
									"begin": 204,
									"end": 274,
									"name": "JUMPI",
									"source": 14
								},
								{
									"begin": 270,
									"end": 271,
									"name": "PUSH",
									"source": 14,
									"value": "0"
								},
								{
									"begin": 267,
									"end": 268,
									"name": "DUP1",
									"source": 14
								},
								{
									"begin": 260,
									"end": 272,
									"name": "REVERT",
									"source": 14
								},
								{
									"begin": 204,
									"end": 274,
									"name": "tag",
									"source": 14,
									"value": "20"
								},
								{
									"begin": 204,
									"end": 274,
									"name": "JUMPDEST",
									"source": 14
								},
								{
									"begin": 293,
									"end": 298,
									"name": "SWAP4",
									"source": 14
								},
								{
									"begin": 14,
									"end": 304,
									"name": "SWAP3",
									"source": 14
								},
								{
									"begin": -1,
									"end": -1,
									"name": "POP",
									"source": -1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "POP",
									"source": -1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "POP",
									"source": -1
								},
								{
									"begin": 14,
									"end": 304,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 14
								},
								{
									"begin": 14,
									"end": 304,
									"name": "tag",
									"source": 14,
									"value": "17"
								},
								{
									"begin": 14,
									"end": 304,
									"name": "JUMPDEST",
									"source": 14
								},
								{
									"begin": 317,
									"end": 8087,
									"name": "PUSH #[$]",
									"source": 13,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 317,
									"end": 8087,
									"name": "DUP1",
									"source": 13
								},
								{
									"begin": 317,
									"end": 8087,
									"name": "PUSH [$]",
									"source": 13,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 317,
									"end": 8087,
									"name": "PUSH",
									"source": 13,
									"value": "0"
								},
								{
									"begin": 317,
									"end": 8087,
									"name": "CODECOPY",
									"source": 13
								},
								{
									"begin": 317,
									"end": 8087,
									"name": "PUSH",
									"source": 13,
									"value": "0"
								},
								{
									"begin": 317,
									"end": 8087,
									"name": "RETURN",
									"source": 13
								}
							],
							".data": {
								"0": {
									".auxdata": "a26469706673582212206583cd1fa2906298c39759a9a7204d8eb863cd8ae99dd4b22122ef66fcb2372864736f6c63430008150033",
									".code": [
										{
											"begin": 317,
											"end": 8087,
											"name": "PUSH",
											"source": 13,
											"value": "80"
										},
										{
											"begin": 317,
											"end": 8087,
											"name": "PUSH",
											"source": 13,
											"value": "40"
										},
										{
											"begin": 317,
											"end": 8087,
											"name": "MSTORE",
											"source": 13
										},
										{
											"begin": 317,
											"end": 8087,
											"name": "PUSH",
											"source": 13,
											"value": "4"
										},
										{
											"begin": 317,
											"end": 8087,
											"name": "CALLDATASIZE",
											"source": 13
										},
										{
											"begin": 317,
											"end": 8087,
											"name": "LT",
											"source": 13
										},
										{
											"begin": 317,
											"end": 8087,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "1"
										},
										{
											"begin": 317,
											"end": 8087,
											"name": "JUMPI",
											"source": 13
										},
										{
											"begin": 317,
											"end": 8087,
											"name": "PUSH",
											"source": 13,
											"value": "0"
										},
										{
											"begin": 317,
											"end": 8087,
											"name": "CALLDATALOAD",
											"source": 13
										},
										{
											"begin": 317,
											"end": 8087,
											"name": "PUSH",
											"source": 13,
											"value": "E0"
										},
										{
											"begin": 317,
											"end": 8087,
											"name": "SHR",
											"source": 13
										},
										{
											"begin": 317,
											"end": 8087,
											"name": "DUP1",
											"source": 13
										},
										{
											"begin": 317,
											"end": 8087,
											"name": "PUSH",
											"source": 13,
											"value": "73A0C166"
										},
										{
											"begin": 317,
											"end": 8087,
											"name": "GT",
											"source": 13
										},
										{
											"begin": 317,
											"end": 8087,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "20"
										},
										{
											"begin": 317,
											"end": 8087,
											"name": "JUMPI",
											"source": 13
										},
										{
											"begin": 317,
											"end": 8087,
											"name": "DUP1",
											"source": 13
										},
										{
											"begin": 317,
											"end": 8087,
											"name": "PUSH",
											"source": 13,
											"value": "A33F6C68"
										},
										{
											"begin": 317,
											"end": 8087,
											"name": "GT",
											"source": 13
										},
										{
											"begin": 317,
											"end": 8087,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "21"
										},
										{
											"begin": 317,
											"end": 8087,
											"name": "JUMPI",
											"source": 13
										},
										{
											"begin": 317,
											"end": 8087,
											"name": "DUP1",
											"source": 13
										},
										{
											"begin": 317,
											"end": 8087,
											"name": "PUSH",
											"source": 13,
											"value": "A33F6C68"
										},
										{
											"begin": 317,
											"end": 8087,
											"name": "EQ",
											"source": 13
										},
										{
											"begin": 317,
											"end": 8087,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "15"
										},
										{
											"begin": 317,
											"end": 8087,
											"name": "JUMPI",
											"source": 13
										},
										{
											"begin": 317,
											"end": 8087,
											"name": "DUP1",
											"source": 13
										},
										{
											"begin": 317,
											"end": 8087,
											"name": "PUSH",
											"source": 13,
											"value": "D6CBB202"
										},
										{
											"begin": 317,
											"end": 8087,
											"name": "EQ",
											"source": 13
										},
										{
											"begin": 317,
											"end": 8087,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "16"
										},
										{
											"begin": 317,
											"end": 8087,
											"name": "JUMPI",
											"source": 13
										},
										{
											"begin": 317,
											"end": 8087,
											"name": "DUP1",
											"source": 13
										},
										{
											"begin": 317,
											"end": 8087,
											"name": "PUSH",
											"source": 13,
											"value": "E03DE05C"
										},
										{
											"begin": 317,
											"end": 8087,
											"name": "EQ",
											"source": 13
										},
										{
											"begin": 317,
											"end": 8087,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "17"
										},
										{
											"begin": 317,
											"end": 8087,
											"name": "JUMPI",
											"source": 13
										},
										{
											"begin": 317,
											"end": 8087,
											"name": "DUP1",
											"source": 13
										},
										{
											"begin": 317,
											"end": 8087,
											"name": "PUSH",
											"source": 13,
											"value": "E47F018A"
										},
										{
											"begin": 317,
											"end": 8087,
											"name": "EQ",
											"source": 13
										},
										{
											"begin": 317,
											"end": 8087,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "18"
										},
										{
											"begin": 317,
											"end": 8087,
											"name": "JUMPI",
											"source": 13
										},
										{
											"begin": 317,
											"end": 8087,
											"name": "DUP1",
											"source": 13
										},
										{
											"begin": 317,
											"end": 8087,
											"name": "PUSH",
											"source": 13,
											"value": "F2FDE38B"
										},
										{
											"begin": 317,
											"end": 8087,
											"name": "EQ",
											"source": 13
										},
										{
											"begin": 317,
											"end": 8087,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "19"
										},
										{
											"begin": 317,
											"end": 8087,
											"name": "JUMPI",
											"source": 13
										},
										{
											"begin": 317,
											"end": 8087,
											"name": "PUSH",
											"source": 13,
											"value": "0"
										},
										{
											"begin": 317,
											"end": 8087,
											"name": "DUP1",
											"source": 13
										},
										{
											"begin": 317,
											"end": 8087,
											"name": "REVERT",
											"source": 13
										},
										{
											"begin": 317,
											"end": 8087,
											"name": "tag",
											"source": 13,
											"value": "21"
										},
										{
											"begin": 317,
											"end": 8087,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 317,
											"end": 8087,
											"name": "DUP1",
											"source": 13
										},
										{
											"begin": 317,
											"end": 8087,
											"name": "PUSH",
											"source": 13,
											"value": "73A0C166"
										},
										{
											"begin": 317,
											"end": 8087,
											"name": "EQ",
											"source": 13
										},
										{
											"begin": 317,
											"end": 8087,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "11"
										},
										{
											"begin": 317,
											"end": 8087,
											"name": "JUMPI",
											"source": 13
										},
										{
											"begin": 317,
											"end": 8087,
											"name": "DUP1",
											"source": 13
										},
										{
											"begin": 317,
											"end": 8087,
											"name": "PUSH",
											"source": 13,
											"value": "7CA7349B"
										},
										{
											"begin": 317,
											"end": 8087,
											"name": "EQ",
											"source": 13
										},
										{
											"begin": 317,
											"end": 8087,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "12"
										},
										{
											"begin": 317,
											"end": 8087,
											"name": "JUMPI",
											"source": 13
										},
										{
											"begin": 317,
											"end": 8087,
											"name": "DUP1",
											"source": 13
										},
										{
											"begin": 317,
											"end": 8087,
											"name": "PUSH",
											"source": 13,
											"value": "8D6CB3FB"
										},
										{
											"begin": 317,
											"end": 8087,
											"name": "EQ",
											"source": 13
										},
										{
											"begin": 317,
											"end": 8087,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "13"
										},
										{
											"begin": 317,
											"end": 8087,
											"name": "JUMPI",
											"source": 13
										},
										{
											"begin": 317,
											"end": 8087,
											"name": "DUP1",
											"source": 13
										},
										{
											"begin": 317,
											"end": 8087,
											"name": "PUSH",
											"source": 13,
											"value": "8DA5CB5B"
										},
										{
											"begin": 317,
											"end": 8087,
											"name": "EQ",
											"source": 13
										},
										{
											"begin": 317,
											"end": 8087,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "14"
										},
										{
											"begin": 317,
											"end": 8087,
											"name": "JUMPI",
											"source": 13
										},
										{
											"begin": 317,
											"end": 8087,
											"name": "PUSH",
											"source": 13,
											"value": "0"
										},
										{
											"begin": 317,
											"end": 8087,
											"name": "DUP1",
											"source": 13
										},
										{
											"begin": 317,
											"end": 8087,
											"name": "REVERT",
											"source": 13
										},
										{
											"begin": 317,
											"end": 8087,
											"name": "tag",
											"source": 13,
											"value": "20"
										},
										{
											"begin": 317,
											"end": 8087,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 317,
											"end": 8087,
											"name": "DUP1",
											"source": 13
										},
										{
											"begin": 317,
											"end": 8087,
											"name": "PUSH",
											"source": 13,
											"value": "31824A49"
										},
										{
											"begin": 317,
											"end": 8087,
											"name": "GT",
											"source": 13
										},
										{
											"begin": 317,
											"end": 8087,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "22"
										},
										{
											"begin": 317,
											"end": 8087,
											"name": "JUMPI",
											"source": 13
										},
										{
											"begin": 317,
											"end": 8087,
											"name": "DUP1",
											"source": 13
										},
										{
											"begin": 317,
											"end": 8087,
											"name": "PUSH",
											"source": 13,
											"value": "31824A49"
										},
										{
											"begin": 317,
											"end": 8087,
											"name": "EQ",
											"source": 13
										},
										{
											"begin": 317,
											"end": 8087,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "6"
										},
										{
											"begin": 317,
											"end": 8087,
											"name": "JUMPI",
											"source": 13
										},
										{
											"begin": 317,
											"end": 8087,
											"name": "DUP1",
											"source": 13
										},
										{
											"begin": 317,
											"end": 8087,
											"name": "PUSH",
											"source": 13,
											"value": "36958ADB"
										},
										{
											"begin": 317,
											"end": 8087,
											"name": "EQ",
											"source": 13
										},
										{
											"begin": 317,
											"end": 8087,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "7"
										},
										{
											"begin": 317,
											"end": 8087,
											"name": "JUMPI",
											"source": 13
										},
										{
											"begin": 317,
											"end": 8087,
											"name": "DUP1",
											"source": 13
										},
										{
											"begin": 317,
											"end": 8087,
											"name": "PUSH",
											"source": 13,
											"value": "4E455DBE"
										},
										{
											"begin": 317,
											"end": 8087,
											"name": "EQ",
											"source": 13
										},
										{
											"begin": 317,
											"end": 8087,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "8"
										},
										{
											"begin": 317,
											"end": 8087,
											"name": "JUMPI",
											"source": 13
										},
										{
											"begin": 317,
											"end": 8087,
											"name": "DUP1",
											"source": 13
										},
										{
											"begin": 317,
											"end": 8087,
											"name": "PUSH",
											"source": 13,
											"value": "5F72F450"
										},
										{
											"begin": 317,
											"end": 8087,
											"name": "EQ",
											"source": 13
										},
										{
											"begin": 317,
											"end": 8087,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "9"
										},
										{
											"begin": 317,
											"end": 8087,
											"name": "JUMPI",
											"source": 13
										},
										{
											"begin": 317,
											"end": 8087,
											"name": "DUP1",
											"source": 13
										},
										{
											"begin": 317,
											"end": 8087,
											"name": "PUSH",
											"source": 13,
											"value": "715018A6"
										},
										{
											"begin": 317,
											"end": 8087,
											"name": "EQ",
											"source": 13
										},
										{
											"begin": 317,
											"end": 8087,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "10"
										},
										{
											"begin": 317,
											"end": 8087,
											"name": "JUMPI",
											"source": 13
										},
										{
											"begin": 317,
											"end": 8087,
											"name": "PUSH",
											"source": 13,
											"value": "0"
										},
										{
											"begin": 317,
											"end": 8087,
											"name": "DUP1",
											"source": 13
										},
										{
											"begin": 317,
											"end": 8087,
											"name": "REVERT",
											"source": 13
										},
										{
											"begin": 317,
											"end": 8087,
											"name": "tag",
											"source": 13,
											"value": "22"
										},
										{
											"begin": 317,
											"end": 8087,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 317,
											"end": 8087,
											"name": "DUP1",
											"source": 13
										},
										{
											"begin": 317,
											"end": 8087,
											"name": "PUSH",
											"source": 13,
											"value": "47B07BF"
										},
										{
											"begin": 317,
											"end": 8087,
											"name": "EQ",
											"source": 13
										},
										{
											"begin": 317,
											"end": 8087,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "2"
										},
										{
											"begin": 317,
											"end": 8087,
											"name": "JUMPI",
											"source": 13
										},
										{
											"begin": 317,
											"end": 8087,
											"name": "DUP1",
											"source": 13
										},
										{
											"begin": 317,
											"end": 8087,
											"name": "PUSH",
											"source": 13,
											"value": "1F4CC4DB"
										},
										{
											"begin": 317,
											"end": 8087,
											"name": "EQ",
											"source": 13
										},
										{
											"begin": 317,
											"end": 8087,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "3"
										},
										{
											"begin": 317,
											"end": 8087,
											"name": "JUMPI",
											"source": 13
										},
										{
											"begin": 317,
											"end": 8087,
											"name": "DUP1",
											"source": 13
										},
										{
											"begin": 317,
											"end": 8087,
											"name": "PUSH",
											"source": 13,
											"value": "243ADBDD"
										},
										{
											"begin": 317,
											"end": 8087,
											"name": "EQ",
											"source": 13
										},
										{
											"begin": 317,
											"end": 8087,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "4"
										},
										{
											"begin": 317,
											"end": 8087,
											"name": "JUMPI",
											"source": 13
										},
										{
											"begin": 317,
											"end": 8087,
											"name": "DUP1",
											"source": 13
										},
										{
											"begin": 317,
											"end": 8087,
											"name": "PUSH",
											"source": 13,
											"value": "2B86AE38"
										},
										{
											"begin": 317,
											"end": 8087,
											"name": "EQ",
											"source": 13
										},
										{
											"begin": 317,
											"end": 8087,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "5"
										},
										{
											"begin": 317,
											"end": 8087,
											"name": "JUMPI",
											"source": 13
										},
										{
											"begin": 317,
											"end": 8087,
											"name": "tag",
											"source": 13,
											"value": "1"
										},
										{
											"begin": 317,
											"end": 8087,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 317,
											"end": 8087,
											"name": "PUSH",
											"source": 13,
											"value": "0"
										},
										{
											"begin": 317,
											"end": 8087,
											"name": "DUP1",
											"source": 13
										},
										{
											"begin": 317,
											"end": 8087,
											"name": "REVERT",
											"source": 13
										},
										{
											"begin": 6567,
											"end": 7176,
											"name": "tag",
											"source": 13,
											"value": "2"
										},
										{
											"begin": 6567,
											"end": 7176,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 6567,
											"end": 7176,
											"name": "CALLVALUE",
											"source": 13
										},
										{
											"begin": 6567,
											"end": 7176,
											"name": "DUP1",
											"source": 13
										},
										{
											"begin": 6567,
											"end": 7176,
											"name": "ISZERO",
											"source": 13
										},
										{
											"begin": 6567,
											"end": 7176,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "23"
										},
										{
											"begin": 6567,
											"end": 7176,
											"name": "JUMPI",
											"source": 13
										},
										{
											"begin": 6567,
											"end": 7176,
											"name": "PUSH",
											"source": 13,
											"value": "0"
										},
										{
											"begin": 6567,
											"end": 7176,
											"name": "DUP1",
											"source": 13
										},
										{
											"begin": 6567,
											"end": 7176,
											"name": "REVERT",
											"source": 13
										},
										{
											"begin": 6567,
											"end": 7176,
											"name": "tag",
											"source": 13,
											"value": "23"
										},
										{
											"begin": 6567,
											"end": 7176,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 6567,
											"end": 7176,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 6567,
											"end": 7176,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "24"
										},
										{
											"begin": 6567,
											"end": 7176,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "25"
										},
										{
											"begin": 6567,
											"end": 7176,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 6567,
											"end": 7176,
											"name": "tag",
											"source": 13,
											"value": "24"
										},
										{
											"begin": 6567,
											"end": 7176,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 6567,
											"end": 7176,
											"name": "PUSH",
											"source": 13,
											"value": "40"
										},
										{
											"begin": 6567,
											"end": 7176,
											"name": "MLOAD",
											"source": 13
										},
										{
											"begin": 6567,
											"end": 7176,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "26"
										},
										{
											"begin": 6567,
											"end": 7176,
											"name": "SWAP2",
											"source": 13
										},
										{
											"begin": 6567,
											"end": 7176,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 6567,
											"end": 7176,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "27"
										},
										{
											"begin": 6567,
											"end": 7176,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 6567,
											"end": 7176,
											"name": "tag",
											"source": 13,
											"value": "26"
										},
										{
											"begin": 6567,
											"end": 7176,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 6567,
											"end": 7176,
											"name": "PUSH",
											"source": 13,
											"value": "40"
										},
										{
											"begin": 6567,
											"end": 7176,
											"name": "MLOAD",
											"source": 13
										},
										{
											"begin": 6567,
											"end": 7176,
											"name": "DUP1",
											"source": 13
										},
										{
											"begin": 6567,
											"end": 7176,
											"name": "SWAP2",
											"source": 13
										},
										{
											"begin": 6567,
											"end": 7176,
											"name": "SUB",
											"source": 13
										},
										{
											"begin": 6567,
											"end": 7176,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 6567,
											"end": 7176,
											"name": "RETURN",
											"source": 13
										},
										{
											"begin": 7402,
											"end": 8085,
											"name": "tag",
											"source": 13,
											"value": "3"
										},
										{
											"begin": 7402,
											"end": 8085,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 7402,
											"end": 8085,
											"name": "CALLVALUE",
											"source": 13
										},
										{
											"begin": 7402,
											"end": 8085,
											"name": "DUP1",
											"source": 13
										},
										{
											"begin": 7402,
											"end": 8085,
											"name": "ISZERO",
											"source": 13
										},
										{
											"begin": 7402,
											"end": 8085,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "28"
										},
										{
											"begin": 7402,
											"end": 8085,
											"name": "JUMPI",
											"source": 13
										},
										{
											"begin": 7402,
											"end": 8085,
											"name": "PUSH",
											"source": 13,
											"value": "0"
										},
										{
											"begin": 7402,
											"end": 8085,
											"name": "DUP1",
											"source": 13
										},
										{
											"begin": 7402,
											"end": 8085,
											"name": "REVERT",
											"source": 13
										},
										{
											"begin": 7402,
											"end": 8085,
											"name": "tag",
											"source": 13,
											"value": "28"
										},
										{
											"begin": 7402,
											"end": 8085,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 7402,
											"end": 8085,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 7402,
											"end": 8085,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "24"
										},
										{
											"begin": 7402,
											"end": 8085,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "30"
										},
										{
											"begin": 7402,
											"end": 8085,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 2417,
											"end": 3183,
											"name": "tag",
											"source": 13,
											"value": "4"
										},
										{
											"begin": 2417,
											"end": 3183,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 2417,
											"end": 3183,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "32"
										},
										{
											"begin": 2417,
											"end": 3183,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "33"
										},
										{
											"begin": 2417,
											"end": 3183,
											"name": "CALLDATASIZE",
											"source": 13
										},
										{
											"begin": 2417,
											"end": 3183,
											"name": "PUSH",
											"source": 13,
											"value": "4"
										},
										{
											"begin": 2417,
											"end": 3183,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "34"
										},
										{
											"begin": 2417,
											"end": 3183,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 2417,
											"end": 3183,
											"name": "tag",
											"source": 13,
											"value": "33"
										},
										{
											"begin": 2417,
											"end": 3183,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 2417,
											"end": 3183,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "35"
										},
										{
											"begin": 2417,
											"end": 3183,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 2417,
											"end": 3183,
											"name": "tag",
											"source": 13,
											"value": "32"
										},
										{
											"begin": 2417,
											"end": 3183,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 2417,
											"end": 3183,
											"name": "STOP",
											"source": 13
										},
										{
											"begin": 510,
											"end": 540,
											"name": "tag",
											"source": 13,
											"value": "5"
										},
										{
											"begin": 510,
											"end": 540,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 510,
											"end": 540,
											"name": "CALLVALUE",
											"source": 13
										},
										{
											"begin": 510,
											"end": 540,
											"name": "DUP1",
											"source": 13
										},
										{
											"begin": 510,
											"end": 540,
											"name": "ISZERO",
											"source": 13
										},
										{
											"begin": 510,
											"end": 540,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "36"
										},
										{
											"begin": 510,
											"end": 540,
											"name": "JUMPI",
											"source": 13
										},
										{
											"begin": 510,
											"end": 540,
											"name": "PUSH",
											"source": 13,
											"value": "0"
										},
										{
											"begin": 510,
											"end": 540,
											"name": "DUP1",
											"source": 13
										},
										{
											"begin": 510,
											"end": 540,
											"name": "REVERT",
											"source": 13
										},
										{
											"begin": 510,
											"end": 540,
											"name": "tag",
											"source": 13,
											"value": "36"
										},
										{
											"begin": 510,
											"end": 540,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 510,
											"end": 540,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 510,
											"end": 540,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "37"
										},
										{
											"begin": 510,
											"end": 540,
											"name": "PUSH",
											"source": 13,
											"value": "4"
										},
										{
											"begin": 510,
											"end": 540,
											"name": "SLOAD",
											"source": 13
										},
										{
											"begin": 510,
											"end": 540,
											"name": "DUP2",
											"source": 13
										},
										{
											"begin": 510,
											"end": 540,
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 510,
											"end": 540,
											"name": "tag",
											"source": 13,
											"value": "37"
										},
										{
											"begin": 510,
											"end": 540,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 510,
											"end": 540,
											"name": "PUSH",
											"source": 13,
											"value": "40"
										},
										{
											"begin": 510,
											"end": 540,
											"name": "MLOAD",
											"source": 13
										},
										{
											"begin": 1510,
											"end": 1535,
											"name": "SWAP1",
											"source": 14
										},
										{
											"begin": 1510,
											"end": 1535,
											"name": "DUP2",
											"source": 14
										},
										{
											"begin": 1510,
											"end": 1535,
											"name": "MSTORE",
											"source": 14
										},
										{
											"begin": 1498,
											"end": 1500,
											"name": "PUSH",
											"source": 14,
											"value": "20"
										},
										{
											"begin": 1483,
											"end": 1501,
											"name": "ADD",
											"source": 14
										},
										{
											"begin": 510,
											"end": 540,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "26"
										},
										{
											"begin": 1364,
											"end": 1541,
											"name": "JUMP",
											"source": 14
										},
										{
											"begin": 427,
											"end": 460,
											"name": "tag",
											"source": 13,
											"value": "6"
										},
										{
											"begin": 427,
											"end": 460,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 427,
											"end": 460,
											"name": "CALLVALUE",
											"source": 13
										},
										{
											"begin": 427,
											"end": 460,
											"name": "DUP1",
											"source": 13
										},
										{
											"begin": 427,
											"end": 460,
											"name": "ISZERO",
											"source": 13
										},
										{
											"begin": 427,
											"end": 460,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "41"
										},
										{
											"begin": 427,
											"end": 460,
											"name": "JUMPI",
											"source": 13
										},
										{
											"begin": 427,
											"end": 460,
											"name": "PUSH",
											"source": 13,
											"value": "0"
										},
										{
											"begin": 427,
											"end": 460,
											"name": "DUP1",
											"source": 13
										},
										{
											"begin": 427,
											"end": 460,
											"name": "REVERT",
											"source": 13
										},
										{
											"begin": 427,
											"end": 460,
											"name": "tag",
											"source": 13,
											"value": "41"
										},
										{
											"begin": 427,
											"end": 460,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 427,
											"end": 460,
											"name": "PUSH",
											"source": 13,
											"value": "2"
										},
										{
											"begin": 427,
											"end": 460,
											"name": "SLOAD",
											"source": 13
										},
										{
											"begin": 427,
											"end": 460,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "37"
										},
										{
											"begin": 427,
											"end": 460,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 427,
											"end": 460,
											"name": "DUP2",
											"source": 13
										},
										{
											"begin": 427,
											"end": 460,
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 5604,
											"end": 5706,
											"name": "tag",
											"source": 13,
											"value": "7"
										},
										{
											"begin": 5604,
											"end": 5706,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 5604,
											"end": 5706,
											"name": "CALLVALUE",
											"source": 13
										},
										{
											"begin": 5604,
											"end": 5706,
											"name": "DUP1",
											"source": 13
										},
										{
											"begin": 5604,
											"end": 5706,
											"name": "ISZERO",
											"source": 13
										},
										{
											"begin": 5604,
											"end": 5706,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "45"
										},
										{
											"begin": 5604,
											"end": 5706,
											"name": "JUMPI",
											"source": 13
										},
										{
											"begin": 5604,
											"end": 5706,
											"name": "PUSH",
											"source": 13,
											"value": "0"
										},
										{
											"begin": 5604,
											"end": 5706,
											"name": "DUP1",
											"source": 13
										},
										{
											"begin": 5604,
											"end": 5706,
											"name": "REVERT",
											"source": 13
										},
										{
											"begin": 5604,
											"end": 5706,
											"name": "tag",
											"source": 13,
											"value": "45"
										},
										{
											"begin": 5604,
											"end": 5706,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 5604,
											"end": 5706,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "32"
										},
										{
											"begin": 5604,
											"end": 5706,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "47"
										},
										{
											"begin": 5604,
											"end": 5706,
											"name": "CALLDATASIZE",
											"source": 13
										},
										{
											"begin": 5604,
											"end": 5706,
											"name": "PUSH",
											"source": 13,
											"value": "4"
										},
										{
											"begin": 5604,
											"end": 5706,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "34"
										},
										{
											"begin": 5604,
											"end": 5706,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 5604,
											"end": 5706,
											"name": "tag",
											"source": 13,
											"value": "47"
										},
										{
											"begin": 5604,
											"end": 5706,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 5604,
											"end": 5706,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "48"
										},
										{
											"begin": 5604,
											"end": 5706,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 4440,
											"end": 4804,
											"name": "tag",
											"source": 13,
											"value": "8"
										},
										{
											"begin": 4440,
											"end": 4804,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 4440,
											"end": 4804,
											"name": "CALLVALUE",
											"source": 13
										},
										{
											"begin": 4440,
											"end": 4804,
											"name": "DUP1",
											"source": 13
										},
										{
											"begin": 4440,
											"end": 4804,
											"name": "ISZERO",
											"source": 13
										},
										{
											"begin": 4440,
											"end": 4804,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "49"
										},
										{
											"begin": 4440,
											"end": 4804,
											"name": "JUMPI",
											"source": 13
										},
										{
											"begin": 4440,
											"end": 4804,
											"name": "PUSH",
											"source": 13,
											"value": "0"
										},
										{
											"begin": 4440,
											"end": 4804,
											"name": "DUP1",
											"source": 13
										},
										{
											"begin": 4440,
											"end": 4804,
											"name": "REVERT",
											"source": 13
										},
										{
											"begin": 4440,
											"end": 4804,
											"name": "tag",
											"source": 13,
											"value": "49"
										},
										{
											"begin": 4440,
											"end": 4804,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 4440,
											"end": 4804,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "32"
										},
										{
											"begin": 4440,
											"end": 4804,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "51"
										},
										{
											"begin": 4440,
											"end": 4804,
											"name": "CALLDATASIZE",
											"source": 13
										},
										{
											"begin": 4440,
											"end": 4804,
											"name": "PUSH",
											"source": 13,
											"value": "4"
										},
										{
											"begin": 4440,
											"end": 4804,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "34"
										},
										{
											"begin": 4440,
											"end": 4804,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 4440,
											"end": 4804,
											"name": "tag",
											"source": 13,
											"value": "51"
										},
										{
											"begin": 4440,
											"end": 4804,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 4440,
											"end": 4804,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "52"
										},
										{
											"begin": 4440,
											"end": 4804,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 638,
											"end": 677,
											"name": "tag",
											"source": 13,
											"value": "9"
										},
										{
											"begin": 638,
											"end": 677,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 638,
											"end": 677,
											"name": "CALLVALUE",
											"source": 13
										},
										{
											"begin": 638,
											"end": 677,
											"name": "DUP1",
											"source": 13
										},
										{
											"begin": 638,
											"end": 677,
											"name": "ISZERO",
											"source": 13
										},
										{
											"begin": 638,
											"end": 677,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "53"
										},
										{
											"begin": 638,
											"end": 677,
											"name": "JUMPI",
											"source": 13
										},
										{
											"begin": 638,
											"end": 677,
											"name": "PUSH",
											"source": 13,
											"value": "0"
										},
										{
											"begin": 638,
											"end": 677,
											"name": "DUP1",
											"source": 13
										},
										{
											"begin": 638,
											"end": 677,
											"name": "REVERT",
											"source": 13
										},
										{
											"begin": 638,
											"end": 677,
											"name": "tag",
											"source": 13,
											"value": "53"
										},
										{
											"begin": 638,
											"end": 677,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 638,
											"end": 677,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "54"
										},
										{
											"begin": 638,
											"end": 677,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "55"
										},
										{
											"begin": 638,
											"end": 677,
											"name": "CALLDATASIZE",
											"source": 13
										},
										{
											"begin": 638,
											"end": 677,
											"name": "PUSH",
											"source": 13,
											"value": "4"
										},
										{
											"begin": 638,
											"end": 677,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "34"
										},
										{
											"begin": 638,
											"end": 677,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 638,
											"end": 677,
											"name": "tag",
											"source": 13,
											"value": "55"
										},
										{
											"begin": 638,
											"end": 677,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 638,
											"end": 677,
											"name": "PUSH",
											"source": 13,
											"value": "7"
										},
										{
											"begin": 638,
											"end": 677,
											"name": "PUSH",
											"source": 13,
											"value": "20"
										},
										{
											"begin": 638,
											"end": 677,
											"name": "MSTORE",
											"source": 13
										},
										{
											"begin": 638,
											"end": 677,
											"name": "PUSH",
											"source": 13,
											"value": "0"
										},
										{
											"begin": 638,
											"end": 677,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 638,
											"end": 677,
											"name": "DUP2",
											"source": 13
										},
										{
											"begin": 638,
											"end": 677,
											"name": "MSTORE",
											"source": 13
										},
										{
											"begin": 638,
											"end": 677,
											"name": "PUSH",
											"source": 13,
											"value": "40"
										},
										{
											"begin": 638,
											"end": 677,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 638,
											"end": 677,
											"name": "KECCAK256",
											"source": 13
										},
										{
											"begin": 638,
											"end": 677,
											"name": "SLOAD",
											"source": 13
										},
										{
											"begin": 638,
											"end": 677,
											"name": "PUSH",
											"source": 13,
											"value": "FF"
										},
										{
											"begin": 638,
											"end": 677,
											"name": "DUP2",
											"source": 13
										},
										{
											"begin": 638,
											"end": 677,
											"name": "AND",
											"source": 13
										},
										{
											"begin": 638,
											"end": 677,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 638,
											"end": 677,
											"name": "PUSH",
											"source": 13,
											"value": "100"
										},
										{
											"begin": 638,
											"end": 677,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 638,
											"end": 677,
											"name": "DIV",
											"source": 13
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 638,
											"end": 677,
											"name": "AND",
											"source": 13
										},
										{
											"begin": 638,
											"end": 677,
											"name": "DUP3",
											"source": 13
										},
										{
											"begin": 638,
											"end": 677,
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 638,
											"end": 677,
											"name": "tag",
											"source": 13,
											"value": "54"
										},
										{
											"begin": 638,
											"end": 677,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 638,
											"end": 677,
											"name": "PUSH",
											"source": 13,
											"value": "40"
										},
										{
											"begin": 638,
											"end": 677,
											"name": "DUP1",
											"source": 13
										},
										{
											"begin": 638,
											"end": 677,
											"name": "MLOAD",
											"source": 13
										},
										{
											"begin": 1739,
											"end": 1753,
											"name": "SWAP3",
											"source": 14
										},
										{
											"begin": 1739,
											"end": 1753,
											"name": "ISZERO",
											"source": 14
										},
										{
											"begin": 1732,
											"end": 1754,
											"name": "ISZERO",
											"source": 14
										},
										{
											"begin": 1714,
											"end": 1755,
											"name": "DUP4",
											"source": 14
										},
										{
											"begin": 1714,
											"end": 1755,
											"name": "MSTORE",
											"source": 14
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 1791,
											"end": 1823,
											"name": "SWAP1",
											"source": 14
										},
										{
											"begin": 1791,
											"end": 1823,
											"name": "SWAP2",
											"source": 14
										},
										{
											"begin": 1791,
											"end": 1823,
											"name": "AND",
											"source": 14
										},
										{
											"begin": 1786,
											"end": 1788,
											"name": "PUSH",
											"source": 14,
											"value": "20"
										},
										{
											"begin": 1771,
											"end": 1789,
											"name": "DUP4",
											"source": 14
										},
										{
											"begin": 1771,
											"end": 1789,
											"name": "ADD",
											"source": 14
										},
										{
											"begin": 1764,
											"end": 1824,
											"name": "MSTORE",
											"source": 14
										},
										{
											"begin": 1687,
											"end": 1705,
											"name": "ADD",
											"source": 14
										},
										{
											"begin": 638,
											"end": 677,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "26"
										},
										{
											"begin": 1546,
											"end": 1830,
											"name": "JUMP",
											"source": 14
										},
										{
											"begin": 1831,
											"end": 1932,
											"name": "tag",
											"source": 0,
											"value": "10"
										},
										{
											"begin": 1831,
											"end": 1932,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1831,
											"end": 1932,
											"name": "CALLVALUE",
											"source": 0
										},
										{
											"begin": 1831,
											"end": 1932,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 1831,
											"end": 1932,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 1831,
											"end": 1932,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "59"
										},
										{
											"begin": 1831,
											"end": 1932,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 1831,
											"end": 1932,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 1831,
											"end": 1932,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 1831,
											"end": 1932,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 1831,
											"end": 1932,
											"name": "tag",
											"source": 0,
											"value": "59"
										},
										{
											"begin": 1831,
											"end": 1932,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1831,
											"end": 1932,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 1831,
											"end": 1932,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "32"
										},
										{
											"begin": 1831,
											"end": 1932,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "61"
										},
										{
											"begin": 1831,
											"end": 1932,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 5325,
											"end": 5415,
											"name": "tag",
											"source": 13,
											"value": "11"
										},
										{
											"begin": 5325,
											"end": 5415,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 5325,
											"end": 5415,
											"name": "CALLVALUE",
											"source": 13
										},
										{
											"begin": 5325,
											"end": 5415,
											"name": "DUP1",
											"source": 13
										},
										{
											"begin": 5325,
											"end": 5415,
											"name": "ISZERO",
											"source": 13
										},
										{
											"begin": 5325,
											"end": 5415,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "62"
										},
										{
											"begin": 5325,
											"end": 5415,
											"name": "JUMPI",
											"source": 13
										},
										{
											"begin": 5325,
											"end": 5415,
											"name": "PUSH",
											"source": 13,
											"value": "0"
										},
										{
											"begin": 5325,
											"end": 5415,
											"name": "DUP1",
											"source": 13
										},
										{
											"begin": 5325,
											"end": 5415,
											"name": "REVERT",
											"source": 13
										},
										{
											"begin": 5325,
											"end": 5415,
											"name": "tag",
											"source": 13,
											"value": "62"
										},
										{
											"begin": 5325,
											"end": 5415,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 5397,
											"end": 5408,
											"name": "PUSH",
											"source": 13,
											"value": "4"
										},
										{
											"begin": 5397,
											"end": 5408,
											"name": "SLOAD",
											"source": 13
										},
										{
											"begin": 5325,
											"end": 5415,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "37"
										},
										{
											"begin": 5325,
											"end": 5415,
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 589,
											"end": 632,
											"name": "tag",
											"source": 13,
											"value": "12"
										},
										{
											"begin": 589,
											"end": 632,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 589,
											"end": 632,
											"name": "CALLVALUE",
											"source": 13
										},
										{
											"begin": 589,
											"end": 632,
											"name": "DUP1",
											"source": 13
										},
										{
											"begin": 589,
											"end": 632,
											"name": "ISZERO",
											"source": 13
										},
										{
											"begin": 589,
											"end": 632,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "66"
										},
										{
											"begin": 589,
											"end": 632,
											"name": "JUMPI",
											"source": 13
										},
										{
											"begin": 589,
											"end": 632,
											"name": "PUSH",
											"source": 13,
											"value": "0"
										},
										{
											"begin": 589,
											"end": 632,
											"name": "DUP1",
											"source": 13
										},
										{
											"begin": 589,
											"end": 632,
											"name": "REVERT",
											"source": 13
										},
										{
											"begin": 589,
											"end": 632,
											"name": "tag",
											"source": 13,
											"value": "66"
										},
										{
											"begin": 589,
											"end": 632,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 589,
											"end": 632,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "67"
										},
										{
											"begin": 589,
											"end": 632,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "68"
										},
										{
											"begin": 589,
											"end": 632,
											"name": "CALLDATASIZE",
											"source": 13
										},
										{
											"begin": 589,
											"end": 632,
											"name": "PUSH",
											"source": 13,
											"value": "4"
										},
										{
											"begin": 589,
											"end": 632,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "34"
										},
										{
											"begin": 589,
											"end": 632,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 589,
											"end": 632,
											"name": "tag",
											"source": 13,
											"value": "68"
										},
										{
											"begin": 589,
											"end": 632,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 589,
											"end": 632,
											"name": "PUSH",
											"source": 13,
											"value": "6"
										},
										{
											"begin": 589,
											"end": 632,
											"name": "PUSH",
											"source": 13,
											"value": "20"
										},
										{
											"begin": 589,
											"end": 632,
											"name": "MSTORE",
											"source": 13
										},
										{
											"begin": 589,
											"end": 632,
											"name": "PUSH",
											"source": 13,
											"value": "0"
										},
										{
											"begin": 589,
											"end": 632,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 589,
											"end": 632,
											"name": "DUP2",
											"source": 13
										},
										{
											"begin": 589,
											"end": 632,
											"name": "MSTORE",
											"source": 13
										},
										{
											"begin": 589,
											"end": 632,
											"name": "PUSH",
											"source": 13,
											"value": "40"
										},
										{
											"begin": 589,
											"end": 632,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 589,
											"end": 632,
											"name": "KECCAK256",
											"source": 13
										},
										{
											"begin": 589,
											"end": 632,
											"name": "SLOAD",
											"source": 13
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 589,
											"end": 632,
											"name": "AND",
											"source": 13
										},
										{
											"begin": 589,
											"end": 632,
											"name": "DUP2",
											"source": 13
										},
										{
											"begin": 589,
											"end": 632,
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 589,
											"end": 632,
											"name": "tag",
											"source": 13,
											"value": "67"
										},
										{
											"begin": 589,
											"end": 632,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 589,
											"end": 632,
											"name": "PUSH",
											"source": 13,
											"value": "40"
										},
										{
											"begin": 589,
											"end": 632,
											"name": "MLOAD",
											"source": 13
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 1999,
											"end": 2031,
											"name": "SWAP1",
											"source": 14
										},
										{
											"begin": 1999,
											"end": 2031,
											"name": "SWAP2",
											"source": 14
										},
										{
											"begin": 1999,
											"end": 2031,
											"name": "AND",
											"source": 14
										},
										{
											"begin": 1981,
											"end": 2032,
											"name": "DUP2",
											"source": 14
										},
										{
											"begin": 1981,
											"end": 2032,
											"name": "MSTORE",
											"source": 14
										},
										{
											"begin": 1969,
											"end": 1971,
											"name": "PUSH",
											"source": 14,
											"value": "20"
										},
										{
											"begin": 1954,
											"end": 1972,
											"name": "ADD",
											"source": 14
										},
										{
											"begin": 589,
											"end": 632,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "26"
										},
										{
											"begin": 1835,
											"end": 2038,
											"name": "JUMP",
											"source": 14
										},
										{
											"begin": 5892,
											"end": 6371,
											"name": "tag",
											"source": 13,
											"value": "13"
										},
										{
											"begin": 5892,
											"end": 6371,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 5892,
											"end": 6371,
											"name": "CALLVALUE",
											"source": 13
										},
										{
											"begin": 5892,
											"end": 6371,
											"name": "DUP1",
											"source": 13
										},
										{
											"begin": 5892,
											"end": 6371,
											"name": "ISZERO",
											"source": 13
										},
										{
											"begin": 5892,
											"end": 6371,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "72"
										},
										{
											"begin": 5892,
											"end": 6371,
											"name": "JUMPI",
											"source": 13
										},
										{
											"begin": 5892,
											"end": 6371,
											"name": "PUSH",
											"source": 13,
											"value": "0"
										},
										{
											"begin": 5892,
											"end": 6371,
											"name": "DUP1",
											"source": 13
										},
										{
											"begin": 5892,
											"end": 6371,
											"name": "REVERT",
											"source": 13
										},
										{
											"begin": 5892,
											"end": 6371,
											"name": "tag",
											"source": 13,
											"value": "72"
										},
										{
											"begin": 5892,
											"end": 6371,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 5892,
											"end": 6371,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 5892,
											"end": 6371,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "24"
										},
										{
											"begin": 5892,
											"end": 6371,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "74"
										},
										{
											"begin": 5892,
											"end": 6371,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 1201,
											"end": 1286,
											"name": "tag",
											"source": 0,
											"value": "14"
										},
										{
											"begin": 1201,
											"end": 1286,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1201,
											"end": 1286,
											"name": "CALLVALUE",
											"source": 0
										},
										{
											"begin": 1201,
											"end": 1286,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 1201,
											"end": 1286,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 1201,
											"end": 1286,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "76"
										},
										{
											"begin": 1201,
											"end": 1286,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 1201,
											"end": 1286,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 1201,
											"end": 1286,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 1201,
											"end": 1286,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 1201,
											"end": 1286,
											"name": "tag",
											"source": 0,
											"value": "76"
										},
										{
											"begin": 1201,
											"end": 1286,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 1273,
											"end": 1279,
											"name": "PUSH",
											"source": 0,
											"value": "1"
										},
										{
											"begin": 1273,
											"end": 1279,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 1273,
											"end": 1279,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 1201,
											"end": 1286,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "67"
										},
										{
											"begin": 1201,
											"end": 1286,
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 5008,
											"end": 5180,
											"name": "tag",
											"source": 13,
											"value": "15"
										},
										{
											"begin": 5008,
											"end": 5180,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 5008,
											"end": 5180,
											"name": "CALLVALUE",
											"source": 13
										},
										{
											"begin": 5008,
											"end": 5180,
											"name": "DUP1",
											"source": 13
										},
										{
											"begin": 5008,
											"end": 5180,
											"name": "ISZERO",
											"source": 13
										},
										{
											"begin": 5008,
											"end": 5180,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "80"
										},
										{
											"begin": 5008,
											"end": 5180,
											"name": "JUMPI",
											"source": 13
										},
										{
											"begin": 5008,
											"end": 5180,
											"name": "PUSH",
											"source": 13,
											"value": "0"
										},
										{
											"begin": 5008,
											"end": 5180,
											"name": "DUP1",
											"source": 13
										},
										{
											"begin": 5008,
											"end": 5180,
											"name": "REVERT",
											"source": 13
										},
										{
											"begin": 5008,
											"end": 5180,
											"name": "tag",
											"source": 13,
											"value": "80"
										},
										{
											"begin": 5008,
											"end": 5180,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 5008,
											"end": 5180,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "37"
										},
										{
											"begin": 5008,
											"end": 5180,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "82"
										},
										{
											"begin": 5008,
											"end": 5180,
											"name": "CALLDATASIZE",
											"source": 13
										},
										{
											"begin": 5008,
											"end": 5180,
											"name": "PUSH",
											"source": 13,
											"value": "4"
										},
										{
											"begin": 5008,
											"end": 5180,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "34"
										},
										{
											"begin": 5008,
											"end": 5180,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 5008,
											"end": 5180,
											"name": "tag",
											"source": 13,
											"value": "82"
										},
										{
											"begin": 5008,
											"end": 5180,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 5008,
											"end": 5180,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "83"
										},
										{
											"begin": 5008,
											"end": 5180,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 466,
											"end": 499,
											"name": "tag",
											"source": 13,
											"value": "16"
										},
										{
											"begin": 466,
											"end": 499,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 466,
											"end": 499,
											"name": "CALLVALUE",
											"source": 13
										},
										{
											"begin": 466,
											"end": 499,
											"name": "DUP1",
											"source": 13
										},
										{
											"begin": 466,
											"end": 499,
											"name": "ISZERO",
											"source": 13
										},
										{
											"begin": 466,
											"end": 499,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "85"
										},
										{
											"begin": 466,
											"end": 499,
											"name": "JUMPI",
											"source": 13
										},
										{
											"begin": 466,
											"end": 499,
											"name": "PUSH",
											"source": 13,
											"value": "0"
										},
										{
											"begin": 466,
											"end": 499,
											"name": "DUP1",
											"source": 13
										},
										{
											"begin": 466,
											"end": 499,
											"name": "REVERT",
											"source": 13
										},
										{
											"begin": 466,
											"end": 499,
											"name": "tag",
											"source": 13,
											"value": "85"
										},
										{
											"begin": 466,
											"end": 499,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 466,
											"end": 499,
											"name": "PUSH",
											"source": 13,
											"value": "3"
										},
										{
											"begin": 466,
											"end": 499,
											"name": "SLOAD",
											"source": 13
										},
										{
											"begin": 466,
											"end": 499,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "37"
										},
										{
											"begin": 466,
											"end": 499,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 466,
											"end": 499,
											"name": "DUP2",
											"source": 13
										},
										{
											"begin": 466,
											"end": 499,
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 1572,
											"end": 2224,
											"name": "tag",
											"source": 13,
											"value": "17"
										},
										{
											"begin": 1572,
											"end": 2224,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 1572,
											"end": 2224,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "32"
										},
										{
											"begin": 1572,
											"end": 2224,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "90"
										},
										{
											"begin": 1572,
											"end": 2224,
											"name": "CALLDATASIZE",
											"source": 13
										},
										{
											"begin": 1572,
											"end": 2224,
											"name": "PUSH",
											"source": 13,
											"value": "4"
										},
										{
											"begin": 1572,
											"end": 2224,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "91"
										},
										{
											"begin": 1572,
											"end": 2224,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 1572,
											"end": 2224,
											"name": "tag",
											"source": 13,
											"value": "90"
										},
										{
											"begin": 1572,
											"end": 2224,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 1572,
											"end": 2224,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "92"
										},
										{
											"begin": 1572,
											"end": 2224,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 3430,
											"end": 4270,
											"name": "tag",
											"source": 13,
											"value": "18"
										},
										{
											"begin": 3430,
											"end": 4270,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 3430,
											"end": 4270,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "32"
										},
										{
											"begin": 3430,
											"end": 4270,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "94"
										},
										{
											"begin": 3430,
											"end": 4270,
											"name": "CALLDATASIZE",
											"source": 13
										},
										{
											"begin": 3430,
											"end": 4270,
											"name": "PUSH",
											"source": 13,
											"value": "4"
										},
										{
											"begin": 3430,
											"end": 4270,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "91"
										},
										{
											"begin": 3430,
											"end": 4270,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 3430,
											"end": 4270,
											"name": "tag",
											"source": 13,
											"value": "94"
										},
										{
											"begin": 3430,
											"end": 4270,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 3430,
											"end": 4270,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "95"
										},
										{
											"begin": 3430,
											"end": 4270,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 2081,
											"end": 2279,
											"name": "tag",
											"source": 0,
											"value": "19"
										},
										{
											"begin": 2081,
											"end": 2279,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2081,
											"end": 2279,
											"name": "CALLVALUE",
											"source": 0
										},
										{
											"begin": 2081,
											"end": 2279,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 2081,
											"end": 2279,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 2081,
											"end": 2279,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "96"
										},
										{
											"begin": 2081,
											"end": 2279,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 2081,
											"end": 2279,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 2081,
											"end": 2279,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 2081,
											"end": 2279,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 2081,
											"end": 2279,
											"name": "tag",
											"source": 0,
											"value": "96"
										},
										{
											"begin": 2081,
											"end": 2279,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 2081,
											"end": 2279,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "32"
										},
										{
											"begin": 2081,
											"end": 2279,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "98"
										},
										{
											"begin": 2081,
											"end": 2279,
											"name": "CALLDATASIZE",
											"source": 0
										},
										{
											"begin": 2081,
											"end": 2279,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 2081,
											"end": 2279,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "99"
										},
										{
											"begin": 2081,
											"end": 2279,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 2081,
											"end": 2279,
											"name": "tag",
											"source": 0,
											"value": "98"
										},
										{
											"begin": 2081,
											"end": 2279,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2081,
											"end": 2279,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "100"
										},
										{
											"begin": 2081,
											"end": 2279,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 6567,
											"end": 7176,
											"name": "tag",
											"source": 13,
											"value": "25"
										},
										{
											"begin": 6567,
											"end": 7176,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 6609,
											"end": 6621,
											"name": "PUSH",
											"source": 13,
											"value": "60"
										},
										{
											"begin": 6633,
											"end": 6646,
											"name": "PUSH",
											"source": 13,
											"value": "0"
										},
										{
											"begin": 6649,
											"end": 6668,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "102"
										},
										{
											"begin": 6649,
											"end": 6658,
											"name": "PUSH",
											"source": 13,
											"value": "3"
										},
										{
											"begin": 918,
											"end": 932,
											"name": "SLOAD",
											"source": 8
										},
										{
											"begin": 918,
											"end": 932,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 827,
											"end": 939,
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 6649,
											"end": 6668,
											"name": "tag",
											"source": 13,
											"value": "102"
										},
										{
											"begin": 6649,
											"end": 6668,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 6633,
											"end": 6668,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 6633,
											"end": 6668,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 6678,
											"end": 6693,
											"name": "PUSH",
											"source": 13,
											"value": "0"
										},
										{
											"begin": 6712,
											"end": 6718,
											"name": "DUP1",
											"source": 13
										},
										{
											"begin": 6707,
											"end": 6853,
											"name": "tag",
											"source": 13,
											"value": "104"
										},
										{
											"begin": 6707,
											"end": 6853,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 6728,
											"end": 6736,
											"name": "DUP3",
											"source": 13
										},
										{
											"begin": 6724,
											"end": 6725,
											"name": "DUP2",
											"source": 13
										},
										{
											"begin": 6724,
											"end": 6736,
											"name": "LT",
											"source": 13
										},
										{
											"begin": 6707,
											"end": 6853,
											"name": "ISZERO",
											"source": 13
										},
										{
											"begin": 6707,
											"end": 6853,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "105"
										},
										{
											"begin": 6707,
											"end": 6853,
											"name": "JUMPI",
											"source": 13
										},
										{
											"begin": 6786,
											"end": 6796,
											"name": "CALLER",
											"source": 13
										},
										{
											"begin": 6761,
											"end": 6769,
											"name": "PUSH",
											"source": 13,
											"value": "8"
										},
										{
											"begin": 6761,
											"end": 6776,
											"name": "PUSH",
											"source": 13,
											"value": "0"
										},
										{
											"begin": 6770,
											"end": 6775,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "107"
										},
										{
											"begin": 6770,
											"end": 6771,
											"name": "DUP5",
											"source": 13
										},
										{
											"begin": 6774,
											"end": 6775,
											"name": "PUSH",
											"source": 13,
											"value": "1"
										},
										{
											"begin": 6770,
											"end": 6775,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "108"
										},
										{
											"begin": 6770,
											"end": 6775,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 6770,
											"end": 6775,
											"name": "tag",
											"source": 13,
											"value": "107"
										},
										{
											"begin": 6770,
											"end": 6775,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 6761,
											"end": 6776,
											"name": "DUP2",
											"source": 13
										},
										{
											"begin": 6761,
											"end": 6776,
											"name": "MSTORE",
											"source": 13
										},
										{
											"begin": 6761,
											"end": 6776,
											"name": "PUSH",
											"source": 13,
											"value": "20"
										},
										{
											"begin": 6761,
											"end": 6776,
											"name": "DUP2",
											"source": 13
										},
										{
											"begin": 6761,
											"end": 6776,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 6761,
											"end": 6776,
											"name": "SWAP2",
											"source": 13
										},
										{
											"begin": 6761,
											"end": 6776,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 6761,
											"end": 6776,
											"name": "SWAP2",
											"source": 13
										},
										{
											"begin": 6761,
											"end": 6776,
											"name": "MSTORE",
											"source": 13
										},
										{
											"begin": 6761,
											"end": 6776,
											"name": "PUSH",
											"source": 13,
											"value": "40"
										},
										{
											"begin": 6761,
											"end": 6776,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "0"
										},
										{
											"begin": 6761,
											"end": 6776,
											"name": "KECCAK256",
											"source": 13
										},
										{
											"begin": 6761,
											"end": 6782,
											"name": "PUSH",
											"source": 13,
											"value": "3"
										},
										{
											"begin": 6761,
											"end": 6782,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 6761,
											"end": 6782,
											"name": "SLOAD",
											"source": 13
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 6761,
											"end": 6782,
											"name": "AND",
											"source": 13
										},
										{
											"begin": 6761,
											"end": 6796,
											"name": "SUB",
											"source": 13
										},
										{
											"begin": 6757,
											"end": 6843,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "109"
										},
										{
											"begin": 6757,
											"end": 6843,
											"name": "JUMPI",
											"source": 13
										},
										{
											"begin": 6816,
											"end": 6828,
											"name": "DUP2",
											"source": 13
										},
										{
											"begin": 6816,
											"end": 6828,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "110"
										},
										{
											"begin": 6816,
											"end": 6828,
											"name": "DUP2",
											"source": 13
										},
										{
											"begin": 6816,
											"end": 6828,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "111"
										},
										{
											"begin": 6816,
											"end": 6828,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 6816,
											"end": 6828,
											"name": "tag",
											"source": 13,
											"value": "110"
										},
										{
											"begin": 6816,
											"end": 6828,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 6816,
											"end": 6828,
											"name": "SWAP3",
											"source": 13
										},
										{
											"begin": 6816,
											"end": 6828,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 6816,
											"end": 6828,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 6757,
											"end": 6843,
											"name": "tag",
											"source": 13,
											"value": "109"
										},
										{
											"begin": 6757,
											"end": 6843,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 6738,
											"end": 6741,
											"name": "DUP1",
											"source": 13
										},
										{
											"begin": 6738,
											"end": 6741,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "112"
										},
										{
											"begin": 6738,
											"end": 6741,
											"name": "DUP2",
											"source": 13
										},
										{
											"begin": 6738,
											"end": 6741,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "111"
										},
										{
											"begin": 6738,
											"end": 6741,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 6738,
											"end": 6741,
											"name": "tag",
											"source": 13,
											"value": "112"
										},
										{
											"begin": 6738,
											"end": 6741,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 6738,
											"end": 6741,
											"name": "SWAP2",
											"source": 13
										},
										{
											"begin": 6738,
											"end": 6741,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 6738,
											"end": 6741,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 6707,
											"end": 6853,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "104"
										},
										{
											"begin": 6707,
											"end": 6853,
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 6707,
											"end": 6853,
											"name": "tag",
											"source": 13,
											"value": "105"
										},
										{
											"begin": 6707,
											"end": 6853,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 6707,
											"end": 6853,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 6862,
											"end": 6879,
											"name": "PUSH",
											"source": 13,
											"value": "0"
										},
										{
											"begin": 6892,
											"end": 6902,
											"name": "DUP2",
											"source": 13
										},
										{
											"begin": 6882,
											"end": 6903,
											"name": "PUSH",
											"source": 13,
											"value": "FFFFFFFFFFFFFFFF"
										},
										{
											"begin": 6882,
											"end": 6903,
											"name": "DUP2",
											"source": 13
										},
										{
											"begin": 6882,
											"end": 6903,
											"name": "GT",
											"source": 13
										},
										{
											"begin": 6882,
											"end": 6903,
											"name": "ISZERO",
											"source": 13
										},
										{
											"begin": 6882,
											"end": 6903,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "114"
										},
										{
											"begin": 6882,
											"end": 6903,
											"name": "JUMPI",
											"source": 13
										},
										{
											"begin": 6882,
											"end": 6903,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "114"
										},
										{
											"begin": 6882,
											"end": 6903,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "115"
										},
										{
											"begin": 6882,
											"end": 6903,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 6882,
											"end": 6903,
											"name": "tag",
											"source": 13,
											"value": "114"
										},
										{
											"begin": 6882,
											"end": 6903,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 6882,
											"end": 6903,
											"name": "PUSH",
											"source": 13,
											"value": "40"
										},
										{
											"begin": 6882,
											"end": 6903,
											"name": "MLOAD",
											"source": 13
										},
										{
											"begin": 6882,
											"end": 6903,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 6882,
											"end": 6903,
											"name": "DUP1",
											"source": 13
										},
										{
											"begin": 6882,
											"end": 6903,
											"name": "DUP3",
											"source": 13
										},
										{
											"begin": 6882,
											"end": 6903,
											"name": "MSTORE",
											"source": 13
										},
										{
											"begin": 6882,
											"end": 6903,
											"name": "DUP1",
											"source": 13
										},
										{
											"begin": 6882,
											"end": 6903,
											"name": "PUSH",
											"source": 13,
											"value": "20"
										},
										{
											"begin": 6882,
											"end": 6903,
											"name": "MUL",
											"source": 13
										},
										{
											"begin": 6882,
											"end": 6903,
											"name": "PUSH",
											"source": 13,
											"value": "20"
										},
										{
											"begin": 6882,
											"end": 6903,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 6882,
											"end": 6903,
											"name": "DUP3",
											"source": 13
										},
										{
											"begin": 6882,
											"end": 6903,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 6882,
											"end": 6903,
											"name": "PUSH",
											"source": 13,
											"value": "40"
										},
										{
											"begin": 6882,
											"end": 6903,
											"name": "MSTORE",
											"source": 13
										},
										{
											"begin": 6882,
											"end": 6903,
											"name": "DUP1",
											"source": 13
										},
										{
											"begin": 6882,
											"end": 6903,
											"name": "ISZERO",
											"source": 13
										},
										{
											"begin": 6882,
											"end": 6903,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "116"
										},
										{
											"begin": 6882,
											"end": 6903,
											"name": "JUMPI",
											"source": 13
										},
										{
											"begin": 6882,
											"end": 6903,
											"name": "DUP2",
											"source": 13
										},
										{
											"begin": 6882,
											"end": 6903,
											"name": "PUSH",
											"source": 13,
											"value": "20"
										},
										{
											"begin": 6882,
											"end": 6903,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 6882,
											"end": 6903,
											"name": "tag",
											"source": 13,
											"value": "117"
										},
										{
											"begin": 6882,
											"end": 6903,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 6882,
											"end": 6903,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "118"
										},
										{
											"begin": 6882,
											"end": 6903,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "119"
										},
										{
											"begin": 6882,
											"end": 6903,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 6882,
											"end": 6903,
											"name": "tag",
											"source": 13,
											"value": "118"
										},
										{
											"begin": 6882,
											"end": 6903,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 6882,
											"end": 6903,
											"name": "DUP2",
											"source": 13
										},
										{
											"begin": 6882,
											"end": 6903,
											"name": "MSTORE",
											"source": 13
										},
										{
											"begin": 6882,
											"end": 6903,
											"name": "PUSH",
											"source": 13,
											"value": "20"
										},
										{
											"begin": 6882,
											"end": 6903,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 6882,
											"end": 6903,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 6882,
											"end": 6903,
											"name": "PUSH",
											"source": 13,
											"value": "1"
										},
										{
											"begin": 6882,
											"end": 6903,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 6882,
											"end": 6903,
											"name": "SUB",
											"source": 13
										},
										{
											"begin": 6882,
											"end": 6903,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 6882,
											"end": 6903,
											"name": "DUP2",
											"source": 13
										},
										{
											"begin": 6882,
											"end": 6903,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "117"
										},
										{
											"begin": 6882,
											"end": 6903,
											"name": "JUMPI",
											"source": 13
										},
										{
											"begin": 6882,
											"end": 6903,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 6882,
											"end": 6903,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 6882,
											"end": 6903,
											"name": "tag",
											"source": 13,
											"value": "116"
										},
										{
											"begin": 6882,
											"end": 6903,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 6882,
											"end": 6903,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 6862,
											"end": 6903,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 6862,
											"end": 6903,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 6917,
											"end": 6931,
											"name": "PUSH",
											"source": 13,
											"value": "0"
										},
										{
											"begin": 6954,
											"end": 6960,
											"name": "DUP1",
											"source": 13
										},
										{
											"begin": 6949,
											"end": 7149,
											"name": "tag",
											"source": 13,
											"value": "120"
										},
										{
											"begin": 6949,
											"end": 7149,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 6970,
											"end": 6978,
											"name": "DUP5",
											"source": 13
										},
										{
											"begin": 6966,
											"end": 6967,
											"name": "DUP2",
											"source": 13
										},
										{
											"begin": 6966,
											"end": 6978,
											"name": "LT",
											"source": 13
										},
										{
											"begin": 6949,
											"end": 7149,
											"name": "ISZERO",
											"source": 13
										},
										{
											"begin": 6949,
											"end": 7149,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "121"
										},
										{
											"begin": 6949,
											"end": 7149,
											"name": "JUMPI",
											"source": 13
										},
										{
											"begin": 7032,
											"end": 7042,
											"name": "CALLER",
											"source": 13
										},
										{
											"begin": 7007,
											"end": 7015,
											"name": "PUSH",
											"source": 13,
											"value": "8"
										},
										{
											"begin": 7007,
											"end": 7022,
											"name": "PUSH",
											"source": 13,
											"value": "0"
										},
										{
											"begin": 7016,
											"end": 7021,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "123"
										},
										{
											"begin": 7016,
											"end": 7017,
											"name": "DUP5",
											"source": 13
										},
										{
											"begin": 7020,
											"end": 7021,
											"name": "PUSH",
											"source": 13,
											"value": "1"
										},
										{
											"begin": 7016,
											"end": 7021,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "108"
										},
										{
											"begin": 7016,
											"end": 7021,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 7016,
											"end": 7021,
											"name": "tag",
											"source": 13,
											"value": "123"
										},
										{
											"begin": 7016,
											"end": 7021,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 7007,
											"end": 7022,
											"name": "DUP2",
											"source": 13
										},
										{
											"begin": 7007,
											"end": 7022,
											"name": "MSTORE",
											"source": 13
										},
										{
											"begin": 7007,
											"end": 7022,
											"name": "PUSH",
											"source": 13,
											"value": "20"
										},
										{
											"begin": 7007,
											"end": 7022,
											"name": "DUP2",
											"source": 13
										},
										{
											"begin": 7007,
											"end": 7022,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 7007,
											"end": 7022,
											"name": "SWAP2",
											"source": 13
										},
										{
											"begin": 7007,
											"end": 7022,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 7007,
											"end": 7022,
											"name": "SWAP2",
											"source": 13
										},
										{
											"begin": 7007,
											"end": 7022,
											"name": "MSTORE",
											"source": 13
										},
										{
											"begin": 7007,
											"end": 7022,
											"name": "PUSH",
											"source": 13,
											"value": "40"
										},
										{
											"begin": 7007,
											"end": 7022,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "0"
										},
										{
											"begin": 7007,
											"end": 7022,
											"name": "KECCAK256",
											"source": 13
										},
										{
											"begin": 7007,
											"end": 7028,
											"name": "PUSH",
											"source": 13,
											"value": "3"
										},
										{
											"begin": 7007,
											"end": 7028,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 7007,
											"end": 7028,
											"name": "SLOAD",
											"source": 13
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 7007,
											"end": 7028,
											"name": "AND",
											"source": 13
										},
										{
											"begin": 7007,
											"end": 7042,
											"name": "SUB",
											"source": 13
										},
										{
											"begin": 7003,
											"end": 7139,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "124"
										},
										{
											"begin": 7003,
											"end": 7139,
											"name": "JUMPI",
											"source": 13
										},
										{
											"begin": 7080,
											"end": 7088,
											"name": "PUSH",
											"source": 13,
											"value": "8"
										},
										{
											"begin": 7080,
											"end": 7095,
											"name": "PUSH",
											"source": 13,
											"value": "0"
										},
										{
											"begin": 7089,
											"end": 7094,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "125"
										},
										{
											"begin": 7089,
											"end": 7090,
											"name": "DUP4",
											"source": 13
										},
										{
											"begin": 7093,
											"end": 7094,
											"name": "PUSH",
											"source": 13,
											"value": "1"
										},
										{
											"begin": 7089,
											"end": 7094,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "108"
										},
										{
											"begin": 7089,
											"end": 7094,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 7089,
											"end": 7094,
											"name": "tag",
											"source": 13,
											"value": "125"
										},
										{
											"begin": 7089,
											"end": 7094,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 7080,
											"end": 7095,
											"name": "DUP2",
											"source": 13
										},
										{
											"begin": 7080,
											"end": 7095,
											"name": "MSTORE",
											"source": 13
										},
										{
											"begin": 7080,
											"end": 7095,
											"name": "PUSH",
											"source": 13,
											"value": "20"
										},
										{
											"begin": 7080,
											"end": 7095,
											"name": "DUP1",
											"source": 13
										},
										{
											"begin": 7080,
											"end": 7095,
											"name": "DUP3",
											"source": 13
										},
										{
											"begin": 7080,
											"end": 7095,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 7080,
											"end": 7095,
											"name": "SWAP3",
											"source": 13
										},
										{
											"begin": 7080,
											"end": 7095,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 7080,
											"end": 7095,
											"name": "SWAP3",
											"source": 13
										},
										{
											"begin": 7080,
											"end": 7095,
											"name": "MSTORE",
											"source": 13
										},
										{
											"begin": 7080,
											"end": 7095,
											"name": "PUSH",
											"source": 13,
											"value": "40"
										},
										{
											"begin": 7080,
											"end": 7095,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 7080,
											"end": 7095,
											"name": "DUP2",
											"source": 13
										},
										{
											"begin": 7080,
											"end": 7095,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "0"
										},
										{
											"begin": 7080,
											"end": 7095,
											"name": "KECCAK256",
											"source": 13
										},
										{
											"begin": 7062,
											"end": 7095,
											"name": "DUP2",
											"source": 13
										},
										{
											"begin": 7062,
											"end": 7095,
											"name": "MLOAD",
											"source": 13
										},
										{
											"begin": 7062,
											"end": 7095,
											"name": "PUSH",
											"source": 13,
											"value": "C0"
										},
										{
											"begin": 7062,
											"end": 7095,
											"name": "DUP2",
											"source": 13
										},
										{
											"begin": 7062,
											"end": 7095,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 7062,
											"end": 7095,
											"name": "DUP4",
											"source": 13
										},
										{
											"begin": 7062,
											"end": 7095,
											"name": "MSTORE",
											"source": 13
										},
										{
											"begin": 7062,
											"end": 7095,
											"name": "DUP2",
											"source": 13
										},
										{
											"begin": 7062,
											"end": 7095,
											"name": "SLOAD",
											"source": 13
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 7062,
											"end": 7095,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 7062,
											"end": 7095,
											"name": "DUP2",
											"source": 13
										},
										{
											"begin": 7062,
											"end": 7095,
											"name": "AND",
											"source": 13
										},
										{
											"begin": 7062,
											"end": 7095,
											"name": "DUP3",
											"source": 13
										},
										{
											"begin": 7062,
											"end": 7095,
											"name": "MSTORE",
											"source": 13
										},
										{
											"begin": 7062,
											"end": 7095,
											"name": "PUSH",
											"source": 13,
											"value": "1"
										},
										{
											"begin": 7062,
											"end": 7095,
											"name": "DUP4",
											"source": 13
										},
										{
											"begin": 7062,
											"end": 7095,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 7062,
											"end": 7095,
											"name": "SLOAD",
											"source": 13
										},
										{
											"begin": 7062,
											"end": 7095,
											"name": "SWAP5",
											"source": 13
										},
										{
											"begin": 7062,
											"end": 7095,
											"name": "DUP3",
											"source": 13
										},
										{
											"begin": 7062,
											"end": 7095,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 7062,
											"end": 7095,
											"name": "SWAP5",
											"source": 13
										},
										{
											"begin": 7062,
											"end": 7095,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 7062,
											"end": 7095,
											"name": "SWAP5",
											"source": 13
										},
										{
											"begin": 7062,
											"end": 7095,
											"name": "MSTORE",
											"source": 13
										},
										{
											"begin": 7062,
											"end": 7095,
											"name": "PUSH",
											"source": 13,
											"value": "2"
										},
										{
											"begin": 7062,
											"end": 7095,
											"name": "DUP3",
											"source": 13
										},
										{
											"begin": 7062,
											"end": 7095,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 7062,
											"end": 7095,
											"name": "SLOAD",
											"source": 13
										},
										{
											"begin": 7062,
											"end": 7095,
											"name": "DUP5",
											"source": 13
										},
										{
											"begin": 7062,
											"end": 7095,
											"name": "AND",
											"source": 13
										},
										{
											"begin": 7062,
											"end": 7095,
											"name": "SWAP3",
											"source": 13
										},
										{
											"begin": 7062,
											"end": 7095,
											"name": "DUP2",
											"source": 13
										},
										{
											"begin": 7062,
											"end": 7095,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 7062,
											"end": 7095,
											"name": "SWAP3",
											"source": 13
										},
										{
											"begin": 7062,
											"end": 7095,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 7062,
											"end": 7095,
											"name": "SWAP3",
											"source": 13
										},
										{
											"begin": 7062,
											"end": 7095,
											"name": "MSTORE",
											"source": 13
										},
										{
											"begin": 7062,
											"end": 7095,
											"name": "PUSH",
											"source": 13,
											"value": "3"
										},
										{
											"begin": 7062,
											"end": 7095,
											"name": "DUP2",
											"source": 13
										},
										{
											"begin": 7062,
											"end": 7095,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 7062,
											"end": 7095,
											"name": "SLOAD",
											"source": 13
										},
										{
											"begin": 7062,
											"end": 7095,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 7062,
											"end": 7095,
											"name": "SWAP3",
											"source": 13
										},
										{
											"begin": 7062,
											"end": 7095,
											"name": "AND",
											"source": 13
										},
										{
											"begin": 7062,
											"end": 7095,
											"name": "PUSH",
											"source": 13,
											"value": "60"
										},
										{
											"begin": 7062,
											"end": 7095,
											"name": "DUP3",
											"source": 13
										},
										{
											"begin": 7062,
											"end": 7095,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 7062,
											"end": 7095,
											"name": "MSTORE",
											"source": 13
										},
										{
											"begin": 7062,
											"end": 7095,
											"name": "PUSH",
											"source": 13,
											"value": "4"
										},
										{
											"begin": 7062,
											"end": 7095,
											"name": "DUP3",
											"source": 13
										},
										{
											"begin": 7062,
											"end": 7095,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 7062,
											"end": 7095,
											"name": "SLOAD",
											"source": 13
										},
										{
											"begin": 7062,
											"end": 7095,
											"name": "PUSH",
											"source": 13,
											"value": "80"
										},
										{
											"begin": 7062,
											"end": 7095,
											"name": "DUP3",
											"source": 13
										},
										{
											"begin": 7062,
											"end": 7095,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 7062,
											"end": 7095,
											"name": "MSTORE",
											"source": 13
										},
										{
											"begin": 7062,
											"end": 7095,
											"name": "PUSH",
											"source": 13,
											"value": "5"
										},
										{
											"begin": 7062,
											"end": 7095,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 7062,
											"end": 7095,
											"name": "SWAP2",
											"source": 13
										},
										{
											"begin": 7062,
											"end": 7095,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 7062,
											"end": 7095,
											"name": "SLOAD",
											"source": 13
										},
										{
											"begin": 7062,
											"end": 7095,
											"name": "PUSH",
											"source": 13,
											"value": "FF"
										},
										{
											"begin": 7062,
											"end": 7095,
											"name": "AND",
											"source": 13
										},
										{
											"begin": 7062,
											"end": 7095,
											"name": "ISZERO",
											"source": 13
										},
										{
											"begin": 7062,
											"end": 7095,
											"name": "ISZERO",
											"source": 13
										},
										{
											"begin": 7062,
											"end": 7095,
											"name": "PUSH",
											"source": 13,
											"value": "A0"
										},
										{
											"begin": 7062,
											"end": 7095,
											"name": "DUP3",
											"source": 13
										},
										{
											"begin": 7062,
											"end": 7095,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 7062,
											"end": 7095,
											"name": "MSTORE",
											"source": 13
										},
										{
											"begin": 7062,
											"end": 7077,
											"name": "DUP4",
											"source": 13
										},
										{
											"begin": 7062,
											"end": 7077,
											"name": "MLOAD",
											"source": 13
										},
										{
											"begin": 7062,
											"end": 7066,
											"name": "DUP5",
											"source": 13
										},
										{
											"begin": 7062,
											"end": 7066,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 7067,
											"end": 7076,
											"name": "DUP5",
											"source": 13
										},
										{
											"begin": 7067,
											"end": 7076,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 7062,
											"end": 7077,
											"name": "DUP2",
											"source": 13
										},
										{
											"begin": 7062,
											"end": 7077,
											"name": "LT",
											"source": 13
										},
										{
											"begin": 7062,
											"end": 7077,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "127"
										},
										{
											"begin": 7062,
											"end": 7077,
											"name": "JUMPI",
											"source": 13
										},
										{
											"begin": 7062,
											"end": 7077,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "127"
										},
										{
											"begin": 7062,
											"end": 7077,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "128"
										},
										{
											"begin": 7062,
											"end": 7077,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 7062,
											"end": 7077,
											"name": "tag",
											"source": 13,
											"value": "127"
										},
										{
											"begin": 7062,
											"end": 7077,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 7062,
											"end": 7077,
											"name": "PUSH",
											"source": 13,
											"value": "20"
										},
										{
											"begin": 7062,
											"end": 7077,
											"name": "MUL",
											"source": 13
										},
										{
											"begin": 7062,
											"end": 7077,
											"name": "PUSH",
											"source": 13,
											"value": "20"
										},
										{
											"begin": 7062,
											"end": 7077,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 7062,
											"end": 7077,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 7062,
											"end": 7095,
											"name": "DUP2",
											"source": 13
										},
										{
											"begin": 7062,
											"end": 7095,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 7062,
											"end": 7095,
											"name": "MSTORE",
											"source": 13
										},
										{
											"begin": 7062,
											"end": 7095,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 7113,
											"end": 7124,
											"name": "DUP2",
											"source": 13
										},
										{
											"begin": 7113,
											"end": 7124,
											"name": "DUP1",
											"source": 13
										},
										{
											"begin": 7113,
											"end": 7124,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "129"
										},
										{
											"begin": 7113,
											"end": 7124,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 7113,
											"end": 7124,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "111"
										},
										{
											"begin": 7113,
											"end": 7124,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 7113,
											"end": 7124,
											"name": "tag",
											"source": 13,
											"value": "129"
										},
										{
											"begin": 7113,
											"end": 7124,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 7113,
											"end": 7124,
											"name": "SWAP3",
											"source": 13
										},
										{
											"begin": 7113,
											"end": 7124,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 7113,
											"end": 7124,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 7003,
											"end": 7139,
											"name": "tag",
											"source": 13,
											"value": "124"
										},
										{
											"begin": 7003,
											"end": 7139,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 6980,
											"end": 6983,
											"name": "DUP1",
											"source": 13
										},
										{
											"begin": 6980,
											"end": 6983,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "130"
										},
										{
											"begin": 6980,
											"end": 6983,
											"name": "DUP2",
											"source": 13
										},
										{
											"begin": 6980,
											"end": 6983,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "111"
										},
										{
											"begin": 6980,
											"end": 6983,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 6980,
											"end": 6983,
											"name": "tag",
											"source": 13,
											"value": "130"
										},
										{
											"begin": 6980,
											"end": 6983,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 6980,
											"end": 6983,
											"name": "SWAP2",
											"source": 13
										},
										{
											"begin": 6980,
											"end": 6983,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 6980,
											"end": 6983,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 6949,
											"end": 7149,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "120"
										},
										{
											"begin": 6949,
											"end": 7149,
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 6949,
											"end": 7149,
											"name": "tag",
											"source": 13,
											"value": "121"
										},
										{
											"begin": 6949,
											"end": 7149,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 7165,
											"end": 7169,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 7165,
											"end": 7169,
											"name": "SWAP5",
											"source": 13
										},
										{
											"begin": 6567,
											"end": 7176,
											"name": "SWAP4",
											"source": 13
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 6567,
											"end": 7176,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 7402,
											"end": 8085,
											"name": "tag",
											"source": 13,
											"value": "30"
										},
										{
											"begin": 7402,
											"end": 8085,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 7450,
											"end": 7462,
											"name": "PUSH",
											"source": 13,
											"value": "60"
										},
										{
											"begin": 7474,
											"end": 7487,
											"name": "PUSH",
											"source": 13,
											"value": "0"
										},
										{
											"begin": 7490,
											"end": 7509,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "132"
										},
										{
											"begin": 7490,
											"end": 7499,
											"name": "PUSH",
											"source": 13,
											"value": "3"
										},
										{
											"begin": 918,
											"end": 932,
											"name": "SLOAD",
											"source": 8
										},
										{
											"begin": 918,
											"end": 932,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 827,
											"end": 939,
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 7490,
											"end": 7509,
											"name": "tag",
											"source": 13,
											"value": "132"
										},
										{
											"begin": 7490,
											"end": 7509,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 7474,
											"end": 7509,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 7474,
											"end": 7509,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 7519,
											"end": 7540,
											"name": "PUSH",
											"source": 13,
											"value": "0"
										},
										{
											"begin": 7559,
											"end": 7565,
											"name": "DUP1",
											"source": 13
										},
										{
											"begin": 7554,
											"end": 7738,
											"name": "tag",
											"source": 13,
											"value": "133"
										},
										{
											"begin": 7554,
											"end": 7738,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 7575,
											"end": 7583,
											"name": "DUP3",
											"source": 13
										},
										{
											"begin": 7571,
											"end": 7572,
											"name": "DUP2",
											"source": 13
										},
										{
											"begin": 7571,
											"end": 7583,
											"name": "LT",
											"source": 13
										},
										{
											"begin": 7554,
											"end": 7738,
											"name": "ISZERO",
											"source": 13
										},
										{
											"begin": 7554,
											"end": 7738,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "134"
										},
										{
											"begin": 7554,
											"end": 7738,
											"name": "JUMPI",
											"source": 13
										},
										{
											"begin": 7635,
											"end": 7645,
											"name": "CALLER",
											"source": 13
										},
										{
											"begin": 7609,
											"end": 7617,
											"name": "PUSH",
											"source": 13,
											"value": "8"
										},
										{
											"begin": 7609,
											"end": 7624,
											"name": "PUSH",
											"source": 13,
											"value": "0"
										},
										{
											"begin": 7618,
											"end": 7623,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "136"
										},
										{
											"begin": 7618,
											"end": 7619,
											"name": "DUP5",
											"source": 13
										},
										{
											"begin": 7622,
											"end": 7623,
											"name": "PUSH",
											"source": 13,
											"value": "1"
										},
										{
											"begin": 7618,
											"end": 7623,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "108"
										},
										{
											"begin": 7618,
											"end": 7623,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 7618,
											"end": 7623,
											"name": "tag",
											"source": 13,
											"value": "136"
										},
										{
											"begin": 7618,
											"end": 7623,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 7609,
											"end": 7624,
											"name": "DUP2",
											"source": 13
										},
										{
											"begin": 7609,
											"end": 7624,
											"name": "MSTORE",
											"source": 13
										},
										{
											"begin": 7609,
											"end": 7624,
											"name": "PUSH",
											"source": 13,
											"value": "20"
										},
										{
											"begin": 7609,
											"end": 7624,
											"name": "DUP2",
											"source": 13
										},
										{
											"begin": 7609,
											"end": 7624,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 7609,
											"end": 7624,
											"name": "SWAP2",
											"source": 13
										},
										{
											"begin": 7609,
											"end": 7624,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 7609,
											"end": 7624,
											"name": "SWAP2",
											"source": 13
										},
										{
											"begin": 7609,
											"end": 7624,
											"name": "MSTORE",
											"source": 13
										},
										{
											"begin": 7609,
											"end": 7624,
											"name": "PUSH",
											"source": 13,
											"value": "40"
										},
										{
											"begin": 7609,
											"end": 7624,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "0"
										},
										{
											"begin": 7609,
											"end": 7624,
											"name": "KECCAK256",
											"source": 13
										},
										{
											"begin": 7609,
											"end": 7631,
											"name": "PUSH",
											"source": 13,
											"value": "2"
										},
										{
											"begin": 7609,
											"end": 7631,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 7609,
											"end": 7631,
											"name": "SLOAD",
											"source": 13
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 7609,
											"end": 7631,
											"name": "AND",
											"source": 13
										},
										{
											"begin": 7609,
											"end": 7645,
											"name": "EQ",
											"source": 13
										},
										{
											"begin": 7608,
											"end": 7675,
											"name": "DUP1",
											"source": 13
										},
										{
											"begin": 7608,
											"end": 7675,
											"name": "ISZERO",
											"source": 13
										},
										{
											"begin": 7608,
											"end": 7675,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "137"
										},
										{
											"begin": 7608,
											"end": 7675,
											"name": "JUMPI",
											"source": 13
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 7652,
											"end": 7660,
											"name": "PUSH",
											"source": 13,
											"value": "8"
										},
										{
											"begin": 7652,
											"end": 7667,
											"name": "PUSH",
											"source": 13,
											"value": "0"
										},
										{
											"begin": 7661,
											"end": 7666,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "138"
										},
										{
											"begin": 7661,
											"end": 7662,
											"name": "DUP4",
											"source": 13
										},
										{
											"begin": 7665,
											"end": 7666,
											"name": "PUSH",
											"source": 13,
											"value": "1"
										},
										{
											"begin": 7661,
											"end": 7666,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "108"
										},
										{
											"begin": 7661,
											"end": 7666,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 7661,
											"end": 7666,
											"name": "tag",
											"source": 13,
											"value": "138"
										},
										{
											"begin": 7661,
											"end": 7666,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 7652,
											"end": 7667,
											"name": "DUP2",
											"source": 13
										},
										{
											"begin": 7652,
											"end": 7667,
											"name": "MSTORE",
											"source": 13
										},
										{
											"begin": 7652,
											"end": 7667,
											"name": "PUSH",
											"source": 13,
											"value": "20"
										},
										{
											"begin": 7652,
											"end": 7667,
											"name": "DUP2",
											"source": 13
										},
										{
											"begin": 7652,
											"end": 7667,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 7652,
											"end": 7667,
											"name": "SWAP2",
											"source": 13
										},
										{
											"begin": 7652,
											"end": 7667,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 7652,
											"end": 7667,
											"name": "SWAP2",
											"source": 13
										},
										{
											"begin": 7652,
											"end": 7667,
											"name": "MSTORE",
											"source": 13
										},
										{
											"begin": 7652,
											"end": 7667,
											"name": "PUSH",
											"source": 13,
											"value": "40"
										},
										{
											"begin": 7652,
											"end": 7667,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "0"
										},
										{
											"begin": 7652,
											"end": 7667,
											"name": "KECCAK256",
											"source": 13
										},
										{
											"begin": 7652,
											"end": 7674,
											"name": "PUSH",
											"source": 13,
											"value": "5"
										},
										{
											"begin": 7652,
											"end": 7674,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 7652,
											"end": 7674,
											"name": "SLOAD",
											"source": 13
										},
										{
											"begin": 7652,
											"end": 7674,
											"name": "PUSH",
											"source": 13,
											"value": "FF"
										},
										{
											"begin": 7652,
											"end": 7674,
											"name": "AND",
											"source": 13
										},
										{
											"begin": 7651,
											"end": 7674,
											"name": "ISZERO",
											"source": 13
										},
										{
											"begin": 7608,
											"end": 7675,
											"name": "tag",
											"source": 13,
											"value": "137"
										},
										{
											"begin": 7608,
											"end": 7675,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 7604,
											"end": 7728,
											"name": "ISZERO",
											"source": 13
										},
										{
											"begin": 7604,
											"end": 7728,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "139"
										},
										{
											"begin": 7604,
											"end": 7728,
											"name": "JUMPI",
											"source": 13
										},
										{
											"begin": 7695,
											"end": 7713,
											"name": "DUP2",
											"source": 13
										},
										{
											"begin": 7695,
											"end": 7713,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "140"
										},
										{
											"begin": 7695,
											"end": 7713,
											"name": "DUP2",
											"source": 13
										},
										{
											"begin": 7695,
											"end": 7713,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "111"
										},
										{
											"begin": 7695,
											"end": 7713,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 7695,
											"end": 7713,
											"name": "tag",
											"source": 13,
											"value": "140"
										},
										{
											"begin": 7695,
											"end": 7713,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 7695,
											"end": 7713,
											"name": "SWAP3",
											"source": 13
										},
										{
											"begin": 7695,
											"end": 7713,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 7695,
											"end": 7713,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 7604,
											"end": 7728,
											"name": "tag",
											"source": 13,
											"value": "139"
										},
										{
											"begin": 7604,
											"end": 7728,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 7585,
											"end": 7588,
											"name": "DUP1",
											"source": 13
										},
										{
											"begin": 7585,
											"end": 7588,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "141"
										},
										{
											"begin": 7585,
											"end": 7588,
											"name": "DUP2",
											"source": 13
										},
										{
											"begin": 7585,
											"end": 7588,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "111"
										},
										{
											"begin": 7585,
											"end": 7588,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 7585,
											"end": 7588,
											"name": "tag",
											"source": 13,
											"value": "141"
										},
										{
											"begin": 7585,
											"end": 7588,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 7585,
											"end": 7588,
											"name": "SWAP2",
											"source": 13
										},
										{
											"begin": 7585,
											"end": 7588,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 7585,
											"end": 7588,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 7554,
											"end": 7738,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "133"
										},
										{
											"begin": 7554,
											"end": 7738,
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 7554,
											"end": 7738,
											"name": "tag",
											"source": 13,
											"value": "134"
										},
										{
											"begin": 7554,
											"end": 7738,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 7554,
											"end": 7738,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 7747,
											"end": 7764,
											"name": "PUSH",
											"source": 13,
											"value": "0"
										},
										{
											"begin": 7777,
											"end": 7793,
											"name": "DUP2",
											"source": 13
										},
										{
											"begin": 7767,
											"end": 7794,
											"name": "PUSH",
											"source": 13,
											"value": "FFFFFFFFFFFFFFFF"
										},
										{
											"begin": 7767,
											"end": 7794,
											"name": "DUP2",
											"source": 13
										},
										{
											"begin": 7767,
											"end": 7794,
											"name": "GT",
											"source": 13
										},
										{
											"begin": 7767,
											"end": 7794,
											"name": "ISZERO",
											"source": 13
										},
										{
											"begin": 7767,
											"end": 7794,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "143"
										},
										{
											"begin": 7767,
											"end": 7794,
											"name": "JUMPI",
											"source": 13
										},
										{
											"begin": 7767,
											"end": 7794,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "143"
										},
										{
											"begin": 7767,
											"end": 7794,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "115"
										},
										{
											"begin": 7767,
											"end": 7794,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 7767,
											"end": 7794,
											"name": "tag",
											"source": 13,
											"value": "143"
										},
										{
											"begin": 7767,
											"end": 7794,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 7767,
											"end": 7794,
											"name": "PUSH",
											"source": 13,
											"value": "40"
										},
										{
											"begin": 7767,
											"end": 7794,
											"name": "MLOAD",
											"source": 13
										},
										{
											"begin": 7767,
											"end": 7794,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 7767,
											"end": 7794,
											"name": "DUP1",
											"source": 13
										},
										{
											"begin": 7767,
											"end": 7794,
											"name": "DUP3",
											"source": 13
										},
										{
											"begin": 7767,
											"end": 7794,
											"name": "MSTORE",
											"source": 13
										},
										{
											"begin": 7767,
											"end": 7794,
											"name": "DUP1",
											"source": 13
										},
										{
											"begin": 7767,
											"end": 7794,
											"name": "PUSH",
											"source": 13,
											"value": "20"
										},
										{
											"begin": 7767,
											"end": 7794,
											"name": "MUL",
											"source": 13
										},
										{
											"begin": 7767,
											"end": 7794,
											"name": "PUSH",
											"source": 13,
											"value": "20"
										},
										{
											"begin": 7767,
											"end": 7794,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 7767,
											"end": 7794,
											"name": "DUP3",
											"source": 13
										},
										{
											"begin": 7767,
											"end": 7794,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 7767,
											"end": 7794,
											"name": "PUSH",
											"source": 13,
											"value": "40"
										},
										{
											"begin": 7767,
											"end": 7794,
											"name": "MSTORE",
											"source": 13
										},
										{
											"begin": 7767,
											"end": 7794,
											"name": "DUP1",
											"source": 13
										},
										{
											"begin": 7767,
											"end": 7794,
											"name": "ISZERO",
											"source": 13
										},
										{
											"begin": 7767,
											"end": 7794,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "144"
										},
										{
											"begin": 7767,
											"end": 7794,
											"name": "JUMPI",
											"source": 13
										},
										{
											"begin": 7767,
											"end": 7794,
											"name": "DUP2",
											"source": 13
										},
										{
											"begin": 7767,
											"end": 7794,
											"name": "PUSH",
											"source": 13,
											"value": "20"
										},
										{
											"begin": 7767,
											"end": 7794,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 7767,
											"end": 7794,
											"name": "tag",
											"source": 13,
											"value": "145"
										},
										{
											"begin": 7767,
											"end": 7794,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 7767,
											"end": 7794,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "146"
										},
										{
											"begin": 7767,
											"end": 7794,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "119"
										},
										{
											"begin": 7767,
											"end": 7794,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 7767,
											"end": 7794,
											"name": "tag",
											"source": 13,
											"value": "146"
										},
										{
											"begin": 7767,
											"end": 7794,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 7767,
											"end": 7794,
											"name": "DUP2",
											"source": 13
										},
										{
											"begin": 7767,
											"end": 7794,
											"name": "MSTORE",
											"source": 13
										},
										{
											"begin": 7767,
											"end": 7794,
											"name": "PUSH",
											"source": 13,
											"value": "20"
										},
										{
											"begin": 7767,
											"end": 7794,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 7767,
											"end": 7794,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 7767,
											"end": 7794,
											"name": "PUSH",
											"source": 13,
											"value": "1"
										},
										{
											"begin": 7767,
											"end": 7794,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 7767,
											"end": 7794,
											"name": "SUB",
											"source": 13
										},
										{
											"begin": 7767,
											"end": 7794,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 7767,
											"end": 7794,
											"name": "DUP2",
											"source": 13
										},
										{
											"begin": 7767,
											"end": 7794,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "145"
										},
										{
											"begin": 7767,
											"end": 7794,
											"name": "JUMPI",
											"source": 13
										},
										{
											"begin": 7767,
											"end": 7794,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 7767,
											"end": 7794,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 7767,
											"end": 7794,
											"name": "tag",
											"source": 13,
											"value": "144"
										},
										{
											"begin": 7767,
											"end": 7794,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 7767,
											"end": 7794,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 7747,
											"end": 7794,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 7747,
											"end": 7794,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 7804,
											"end": 7818,
											"name": "PUSH",
											"source": 13,
											"value": "0"
										},
										{
											"begin": 7837,
											"end": 7843,
											"name": "DUP1",
											"source": 13
										},
										{
											"begin": 7832,
											"end": 8058,
											"name": "tag",
											"source": 13,
											"value": "147"
										},
										{
											"begin": 7832,
											"end": 8058,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 7853,
											"end": 7861,
											"name": "DUP5",
											"source": 13
										},
										{
											"begin": 7849,
											"end": 7850,
											"name": "DUP2",
											"source": 13
										},
										{
											"begin": 7849,
											"end": 7861,
											"name": "LT",
											"source": 13
										},
										{
											"begin": 7832,
											"end": 8058,
											"name": "ISZERO",
											"source": 13
										},
										{
											"begin": 7832,
											"end": 8058,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "121"
										},
										{
											"begin": 7832,
											"end": 8058,
											"name": "JUMPI",
											"source": 13
										},
										{
											"begin": 7912,
											"end": 7922,
											"name": "CALLER",
											"source": 13
										},
										{
											"begin": 7886,
											"end": 7894,
											"name": "PUSH",
											"source": 13,
											"value": "8"
										},
										{
											"begin": 7886,
											"end": 7901,
											"name": "PUSH",
											"source": 13,
											"value": "0"
										},
										{
											"begin": 7895,
											"end": 7900,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "150"
										},
										{
											"begin": 7895,
											"end": 7896,
											"name": "DUP5",
											"source": 13
										},
										{
											"begin": 7899,
											"end": 7900,
											"name": "PUSH",
											"source": 13,
											"value": "1"
										},
										{
											"begin": 7895,
											"end": 7900,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "108"
										},
										{
											"begin": 7895,
											"end": 7900,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 7895,
											"end": 7900,
											"name": "tag",
											"source": 13,
											"value": "150"
										},
										{
											"begin": 7895,
											"end": 7900,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 7886,
											"end": 7901,
											"name": "DUP2",
											"source": 13
										},
										{
											"begin": 7886,
											"end": 7901,
											"name": "MSTORE",
											"source": 13
										},
										{
											"begin": 7886,
											"end": 7901,
											"name": "PUSH",
											"source": 13,
											"value": "20"
										},
										{
											"begin": 7886,
											"end": 7901,
											"name": "DUP2",
											"source": 13
										},
										{
											"begin": 7886,
											"end": 7901,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 7886,
											"end": 7901,
											"name": "SWAP2",
											"source": 13
										},
										{
											"begin": 7886,
											"end": 7901,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 7886,
											"end": 7901,
											"name": "SWAP2",
											"source": 13
										},
										{
											"begin": 7886,
											"end": 7901,
											"name": "MSTORE",
											"source": 13
										},
										{
											"begin": 7886,
											"end": 7901,
											"name": "PUSH",
											"source": 13,
											"value": "40"
										},
										{
											"begin": 7886,
											"end": 7901,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "0"
										},
										{
											"begin": 7886,
											"end": 7901,
											"name": "KECCAK256",
											"source": 13
										},
										{
											"begin": 7886,
											"end": 7908,
											"name": "PUSH",
											"source": 13,
											"value": "2"
										},
										{
											"begin": 7886,
											"end": 7908,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 7886,
											"end": 7908,
											"name": "SLOAD",
											"source": 13
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 7886,
											"end": 7908,
											"name": "AND",
											"source": 13
										},
										{
											"begin": 7886,
											"end": 7922,
											"name": "EQ",
											"source": 13
										},
										{
											"begin": 7886,
											"end": 7951,
											"name": "DUP1",
											"source": 13
										},
										{
											"begin": 7886,
											"end": 7951,
											"name": "ISZERO",
											"source": 13
										},
										{
											"begin": 7886,
											"end": 7951,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "151"
										},
										{
											"begin": 7886,
											"end": 7951,
											"name": "JUMPI",
											"source": 13
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 7928,
											"end": 7936,
											"name": "PUSH",
											"source": 13,
											"value": "8"
										},
										{
											"begin": 7928,
											"end": 7943,
											"name": "PUSH",
											"source": 13,
											"value": "0"
										},
										{
											"begin": 7937,
											"end": 7942,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "152"
										},
										{
											"begin": 7937,
											"end": 7938,
											"name": "DUP4",
											"source": 13
										},
										{
											"begin": 7941,
											"end": 7942,
											"name": "PUSH",
											"source": 13,
											"value": "1"
										},
										{
											"begin": 7937,
											"end": 7942,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "108"
										},
										{
											"begin": 7937,
											"end": 7942,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 7937,
											"end": 7942,
											"name": "tag",
											"source": 13,
											"value": "152"
										},
										{
											"begin": 7937,
											"end": 7942,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 7928,
											"end": 7943,
											"name": "DUP2",
											"source": 13
										},
										{
											"begin": 7928,
											"end": 7943,
											"name": "MSTORE",
											"source": 13
										},
										{
											"begin": 7928,
											"end": 7943,
											"name": "PUSH",
											"source": 13,
											"value": "20"
										},
										{
											"begin": 7928,
											"end": 7943,
											"name": "DUP2",
											"source": 13
										},
										{
											"begin": 7928,
											"end": 7943,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 7928,
											"end": 7943,
											"name": "SWAP2",
											"source": 13
										},
										{
											"begin": 7928,
											"end": 7943,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 7928,
											"end": 7943,
											"name": "SWAP2",
											"source": 13
										},
										{
											"begin": 7928,
											"end": 7943,
											"name": "MSTORE",
											"source": 13
										},
										{
											"begin": 7928,
											"end": 7943,
											"name": "PUSH",
											"source": 13,
											"value": "40"
										},
										{
											"begin": 7928,
											"end": 7943,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "0"
										},
										{
											"begin": 7928,
											"end": 7943,
											"name": "KECCAK256",
											"source": 13
										},
										{
											"begin": 7928,
											"end": 7950,
											"name": "PUSH",
											"source": 13,
											"value": "5"
										},
										{
											"begin": 7928,
											"end": 7950,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 7928,
											"end": 7950,
											"name": "SLOAD",
											"source": 13
										},
										{
											"begin": 7928,
											"end": 7950,
											"name": "PUSH",
											"source": 13,
											"value": "FF"
										},
										{
											"begin": 7928,
											"end": 7950,
											"name": "AND",
											"source": 13
										},
										{
											"begin": 7927,
											"end": 7950,
											"name": "ISZERO",
											"source": 13
										},
										{
											"begin": 7886,
											"end": 7951,
											"name": "tag",
											"source": 13,
											"value": "151"
										},
										{
											"begin": 7886,
											"end": 7951,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 7882,
											"end": 8048,
											"name": "ISZERO",
											"source": 13
										},
										{
											"begin": 7882,
											"end": 8048,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "153"
										},
										{
											"begin": 7882,
											"end": 8048,
											"name": "JUMPI",
											"source": 13
										},
										{
											"begin": 7989,
											"end": 7997,
											"name": "PUSH",
											"source": 13,
											"value": "8"
										},
										{
											"begin": 7989,
											"end": 8004,
											"name": "PUSH",
											"source": 13,
											"value": "0"
										},
										{
											"begin": 7998,
											"end": 8003,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "154"
										},
										{
											"begin": 7998,
											"end": 7999,
											"name": "DUP4",
											"source": 13
										},
										{
											"begin": 8002,
											"end": 8003,
											"name": "PUSH",
											"source": 13,
											"value": "1"
										},
										{
											"begin": 7998,
											"end": 8003,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "108"
										},
										{
											"begin": 7998,
											"end": 8003,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 7998,
											"end": 8003,
											"name": "tag",
											"source": 13,
											"value": "154"
										},
										{
											"begin": 7998,
											"end": 8003,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 7989,
											"end": 8004,
											"name": "DUP2",
											"source": 13
										},
										{
											"begin": 7989,
											"end": 8004,
											"name": "MSTORE",
											"source": 13
										},
										{
											"begin": 7989,
											"end": 8004,
											"name": "PUSH",
											"source": 13,
											"value": "20"
										},
										{
											"begin": 7989,
											"end": 8004,
											"name": "DUP1",
											"source": 13
										},
										{
											"begin": 7989,
											"end": 8004,
											"name": "DUP3",
											"source": 13
										},
										{
											"begin": 7989,
											"end": 8004,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 7989,
											"end": 8004,
											"name": "SWAP3",
											"source": 13
										},
										{
											"begin": 7989,
											"end": 8004,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 7989,
											"end": 8004,
											"name": "SWAP3",
											"source": 13
										},
										{
											"begin": 7989,
											"end": 8004,
											"name": "MSTORE",
											"source": 13
										},
										{
											"begin": 7989,
											"end": 8004,
											"name": "PUSH",
											"source": 13,
											"value": "40"
										},
										{
											"begin": 7989,
											"end": 8004,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 7989,
											"end": 8004,
											"name": "DUP2",
											"source": 13
										},
										{
											"begin": 7989,
											"end": 8004,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "0"
										},
										{
											"begin": 7989,
											"end": 8004,
											"name": "KECCAK256",
											"source": 13
										},
										{
											"begin": 7971,
											"end": 8004,
											"name": "DUP2",
											"source": 13
										},
										{
											"begin": 7971,
											"end": 8004,
											"name": "MLOAD",
											"source": 13
										},
										{
											"begin": 7971,
											"end": 8004,
											"name": "PUSH",
											"source": 13,
											"value": "C0"
										},
										{
											"begin": 7971,
											"end": 8004,
											"name": "DUP2",
											"source": 13
										},
										{
											"begin": 7971,
											"end": 8004,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 7971,
											"end": 8004,
											"name": "DUP4",
											"source": 13
										},
										{
											"begin": 7971,
											"end": 8004,
											"name": "MSTORE",
											"source": 13
										},
										{
											"begin": 7971,
											"end": 8004,
											"name": "DUP2",
											"source": 13
										},
										{
											"begin": 7971,
											"end": 8004,
											"name": "SLOAD",
											"source": 13
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 7971,
											"end": 8004,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 7971,
											"end": 8004,
											"name": "DUP2",
											"source": 13
										},
										{
											"begin": 7971,
											"end": 8004,
											"name": "AND",
											"source": 13
										},
										{
											"begin": 7971,
											"end": 8004,
											"name": "DUP3",
											"source": 13
										},
										{
											"begin": 7971,
											"end": 8004,
											"name": "MSTORE",
											"source": 13
										},
										{
											"begin": 7971,
											"end": 8004,
											"name": "PUSH",
											"source": 13,
											"value": "1"
										},
										{
											"begin": 7971,
											"end": 8004,
											"name": "DUP4",
											"source": 13
										},
										{
											"begin": 7971,
											"end": 8004,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 7971,
											"end": 8004,
											"name": "SLOAD",
											"source": 13
										},
										{
											"begin": 7971,
											"end": 8004,
											"name": "SWAP5",
											"source": 13
										},
										{
											"begin": 7971,
											"end": 8004,
											"name": "DUP3",
											"source": 13
										},
										{
											"begin": 7971,
											"end": 8004,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 7971,
											"end": 8004,
											"name": "SWAP5",
											"source": 13
										},
										{
											"begin": 7971,
											"end": 8004,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 7971,
											"end": 8004,
											"name": "SWAP5",
											"source": 13
										},
										{
											"begin": 7971,
											"end": 8004,
											"name": "MSTORE",
											"source": 13
										},
										{
											"begin": 7971,
											"end": 8004,
											"name": "PUSH",
											"source": 13,
											"value": "2"
										},
										{
											"begin": 7971,
											"end": 8004,
											"name": "DUP3",
											"source": 13
										},
										{
											"begin": 7971,
											"end": 8004,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 7971,
											"end": 8004,
											"name": "SLOAD",
											"source": 13
										},
										{
											"begin": 7971,
											"end": 8004,
											"name": "DUP5",
											"source": 13
										},
										{
											"begin": 7971,
											"end": 8004,
											"name": "AND",
											"source": 13
										},
										{
											"begin": 7971,
											"end": 8004,
											"name": "SWAP3",
											"source": 13
										},
										{
											"begin": 7971,
											"end": 8004,
											"name": "DUP2",
											"source": 13
										},
										{
											"begin": 7971,
											"end": 8004,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 7971,
											"end": 8004,
											"name": "SWAP3",
											"source": 13
										},
										{
											"begin": 7971,
											"end": 8004,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 7971,
											"end": 8004,
											"name": "SWAP3",
											"source": 13
										},
										{
											"begin": 7971,
											"end": 8004,
											"name": "MSTORE",
											"source": 13
										},
										{
											"begin": 7971,
											"end": 8004,
											"name": "PUSH",
											"source": 13,
											"value": "3"
										},
										{
											"begin": 7971,
											"end": 8004,
											"name": "DUP2",
											"source": 13
										},
										{
											"begin": 7971,
											"end": 8004,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 7971,
											"end": 8004,
											"name": "SLOAD",
											"source": 13
										},
										{
											"begin": 7971,
											"end": 8004,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 7971,
											"end": 8004,
											"name": "SWAP3",
											"source": 13
										},
										{
											"begin": 7971,
											"end": 8004,
											"name": "AND",
											"source": 13
										},
										{
											"begin": 7971,
											"end": 8004,
											"name": "PUSH",
											"source": 13,
											"value": "60"
										},
										{
											"begin": 7971,
											"end": 8004,
											"name": "DUP3",
											"source": 13
										},
										{
											"begin": 7971,
											"end": 8004,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 7971,
											"end": 8004,
											"name": "MSTORE",
											"source": 13
										},
										{
											"begin": 7971,
											"end": 8004,
											"name": "PUSH",
											"source": 13,
											"value": "4"
										},
										{
											"begin": 7971,
											"end": 8004,
											"name": "DUP3",
											"source": 13
										},
										{
											"begin": 7971,
											"end": 8004,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 7971,
											"end": 8004,
											"name": "SLOAD",
											"source": 13
										},
										{
											"begin": 7971,
											"end": 8004,
											"name": "PUSH",
											"source": 13,
											"value": "80"
										},
										{
											"begin": 7971,
											"end": 8004,
											"name": "DUP3",
											"source": 13
										},
										{
											"begin": 7971,
											"end": 8004,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 7971,
											"end": 8004,
											"name": "MSTORE",
											"source": 13
										},
										{
											"begin": 7971,
											"end": 8004,
											"name": "PUSH",
											"source": 13,
											"value": "5"
										},
										{
											"begin": 7971,
											"end": 8004,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 7971,
											"end": 8004,
											"name": "SWAP2",
											"source": 13
										},
										{
											"begin": 7971,
											"end": 8004,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 7971,
											"end": 8004,
											"name": "SLOAD",
											"source": 13
										},
										{
											"begin": 7971,
											"end": 8004,
											"name": "PUSH",
											"source": 13,
											"value": "FF"
										},
										{
											"begin": 7971,
											"end": 8004,
											"name": "AND",
											"source": 13
										},
										{
											"begin": 7971,
											"end": 8004,
											"name": "ISZERO",
											"source": 13
										},
										{
											"begin": 7971,
											"end": 8004,
											"name": "ISZERO",
											"source": 13
										},
										{
											"begin": 7971,
											"end": 8004,
											"name": "PUSH",
											"source": 13,
											"value": "A0"
										},
										{
											"begin": 7971,
											"end": 8004,
											"name": "DUP3",
											"source": 13
										},
										{
											"begin": 7971,
											"end": 8004,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 7971,
											"end": 8004,
											"name": "MSTORE",
											"source": 13
										},
										{
											"begin": 7971,
											"end": 7986,
											"name": "DUP4",
											"source": 13
										},
										{
											"begin": 7971,
											"end": 7986,
											"name": "MLOAD",
											"source": 13
										},
										{
											"begin": 7971,
											"end": 7975,
											"name": "DUP5",
											"source": 13
										},
										{
											"begin": 7971,
											"end": 7975,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 7976,
											"end": 7985,
											"name": "DUP5",
											"source": 13
										},
										{
											"begin": 7976,
											"end": 7985,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 7971,
											"end": 7986,
											"name": "DUP2",
											"source": 13
										},
										{
											"begin": 7971,
											"end": 7986,
											"name": "LT",
											"source": 13
										},
										{
											"begin": 7971,
											"end": 7986,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "156"
										},
										{
											"begin": 7971,
											"end": 7986,
											"name": "JUMPI",
											"source": 13
										},
										{
											"begin": 7971,
											"end": 7986,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "156"
										},
										{
											"begin": 7971,
											"end": 7986,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "128"
										},
										{
											"begin": 7971,
											"end": 7986,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 7971,
											"end": 7986,
											"name": "tag",
											"source": 13,
											"value": "156"
										},
										{
											"begin": 7971,
											"end": 7986,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 7971,
											"end": 7986,
											"name": "PUSH",
											"source": 13,
											"value": "20"
										},
										{
											"begin": 7971,
											"end": 7986,
											"name": "MUL",
											"source": 13
										},
										{
											"begin": 7971,
											"end": 7986,
											"name": "PUSH",
											"source": 13,
											"value": "20"
										},
										{
											"begin": 7971,
											"end": 7986,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 7971,
											"end": 7986,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 7971,
											"end": 8004,
											"name": "DUP2",
											"source": 13
										},
										{
											"begin": 7971,
											"end": 8004,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 7971,
											"end": 8004,
											"name": "MSTORE",
											"source": 13
										},
										{
											"begin": 7971,
											"end": 8004,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 8022,
											"end": 8033,
											"name": "DUP2",
											"source": 13
										},
										{
											"begin": 8022,
											"end": 8033,
											"name": "DUP1",
											"source": 13
										},
										{
											"begin": 8022,
											"end": 8033,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "157"
										},
										{
											"begin": 8022,
											"end": 8033,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 8022,
											"end": 8033,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "111"
										},
										{
											"begin": 8022,
											"end": 8033,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 8022,
											"end": 8033,
											"name": "tag",
											"source": 13,
											"value": "157"
										},
										{
											"begin": 8022,
											"end": 8033,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 8022,
											"end": 8033,
											"name": "SWAP3",
											"source": 13
										},
										{
											"begin": 8022,
											"end": 8033,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 8022,
											"end": 8033,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 7882,
											"end": 8048,
											"name": "tag",
											"source": 13,
											"value": "153"
										},
										{
											"begin": 7882,
											"end": 8048,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 7863,
											"end": 7866,
											"name": "DUP1",
											"source": 13
										},
										{
											"begin": 7863,
											"end": 7866,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "158"
										},
										{
											"begin": 7863,
											"end": 7866,
											"name": "DUP2",
											"source": 13
										},
										{
											"begin": 7863,
											"end": 7866,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "111"
										},
										{
											"begin": 7863,
											"end": 7866,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 7863,
											"end": 7866,
											"name": "tag",
											"source": 13,
											"value": "158"
										},
										{
											"begin": 7863,
											"end": 7866,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 7863,
											"end": 7866,
											"name": "SWAP2",
											"source": 13
										},
										{
											"begin": 7863,
											"end": 7866,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 7863,
											"end": 7866,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 7832,
											"end": 8058,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "147"
										},
										{
											"begin": 7832,
											"end": 8058,
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 2417,
											"end": 3183,
											"name": "tag",
											"source": 13,
											"value": "35"
										},
										{
											"begin": 2417,
											"end": 3183,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 2261,
											"end": 2282,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "160"
										},
										{
											"begin": 2261,
											"end": 2280,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "161"
										},
										{
											"begin": 2261,
											"end": 2282,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 2261,
											"end": 2282,
											"name": "tag",
											"source": 1,
											"value": "160"
										},
										{
											"begin": 2261,
											"end": 2282,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 2489,
											"end": 2504,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 13,
											"value": "0"
										},
										{
											"begin": 2507,
											"end": 2525,
											"name": "DUP2",
											"source": 13
										},
										{
											"begin": 2507,
											"end": 2525,
											"name": "DUP2",
											"source": 13
										},
										{
											"begin": 2507,
											"end": 2525,
											"name": "MSTORE",
											"source": 13
										},
										{
											"begin": 2507,
											"end": 2515,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 13,
											"value": "8"
										},
										{
											"begin": 2507,
											"end": 2525,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 13,
											"value": "20"
										},
										{
											"begin": 2507,
											"end": 2525,
											"name": "MSTORE",
											"source": 13
										},
										{
											"begin": 2507,
											"end": 2525,
											"name": "PUSH",
											"source": 13,
											"value": "40"
										},
										{
											"begin": 2507,
											"end": 2525,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 2507,
											"end": 2525,
											"name": "KECCAK256",
											"source": 13
										},
										{
											"begin": 2556,
											"end": 2565,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 13,
											"value": "4"
										},
										{
											"begin": 2556,
											"end": 2565,
											"name": "DUP2",
											"source": 13
										},
										{
											"begin": 2556,
											"end": 2565,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 2556,
											"end": 2565,
											"name": "SLOAD",
											"source": 13
										},
										{
											"begin": 2543,
											"end": 2552,
											"modifierDepth": 1,
											"name": "CALLVALUE",
											"source": 13
										},
										{
											"begin": 2543,
											"end": 2565,
											"modifierDepth": 1,
											"name": "LT",
											"source": 13
										},
										{
											"begin": 2543,
											"end": 2565,
											"modifierDepth": 1,
											"name": "ISZERO",
											"source": 13
										},
										{
											"begin": 2535,
											"end": 2609,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "163"
										},
										{
											"begin": 2535,
											"end": 2609,
											"modifierDepth": 1,
											"name": "JUMPI",
											"source": 13
										},
										{
											"begin": 2535,
											"end": 2609,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 13,
											"value": "40"
										},
										{
											"begin": 2535,
											"end": 2609,
											"name": "MLOAD",
											"source": 13
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "461BCD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E5"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 2535,
											"end": 2609,
											"name": "DUP2",
											"source": 13
										},
										{
											"begin": 2535,
											"end": 2609,
											"name": "MSTORE",
											"source": 13
										},
										{
											"begin": 3455,
											"end": 3457,
											"name": "PUSH",
											"source": 14,
											"value": "20"
										},
										{
											"begin": 2535,
											"end": 2609,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 13,
											"value": "4"
										},
										{
											"begin": 2535,
											"end": 2609,
											"name": "DUP3",
											"source": 13
										},
										{
											"begin": 2535,
											"end": 2609,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 3437,
											"end": 3458,
											"name": "MSTORE",
											"source": 14
										},
										{
											"begin": 3494,
											"end": 3496,
											"name": "PUSH",
											"source": 14,
											"value": "26"
										},
										{
											"begin": 3474,
											"end": 3492,
											"name": "PUSH",
											"source": 14,
											"value": "24"
										},
										{
											"begin": 3474,
											"end": 3492,
											"name": "DUP3",
											"source": 14
										},
										{
											"begin": 3474,
											"end": 3492,
											"name": "ADD",
											"source": 14
										},
										{
											"begin": 3467,
											"end": 3497,
											"name": "MSTORE",
											"source": 14
										},
										{
											"begin": 3533,
											"end": 3567,
											"name": "PUSH",
											"source": 14,
											"value": "4E6F7420656E6F75676820657468657220746F20636F7665722061736B696E67"
										},
										{
											"begin": 3513,
											"end": 3531,
											"name": "PUSH",
											"source": 14,
											"value": "44"
										},
										{
											"begin": 3513,
											"end": 3531,
											"name": "DUP3",
											"source": 14
										},
										{
											"begin": 3513,
											"end": 3531,
											"name": "ADD",
											"source": 14
										},
										{
											"begin": 3506,
											"end": 3568,
											"name": "MSTORE",
											"source": 14
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "207072696365"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "D0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 3584,
											"end": 3602,
											"name": "PUSH",
											"source": 14,
											"value": "64"
										},
										{
											"begin": 3584,
											"end": 3602,
											"name": "DUP3",
											"source": 14
										},
										{
											"begin": 3584,
											"end": 3602,
											"name": "ADD",
											"source": 14
										},
										{
											"begin": 3577,
											"end": 3613,
											"name": "MSTORE",
											"source": 14
										},
										{
											"begin": 3630,
											"end": 3649,
											"name": "PUSH",
											"source": 14,
											"value": "84"
										},
										{
											"begin": 3630,
											"end": 3649,
											"name": "ADD",
											"source": 14
										},
										{
											"begin": 2535,
											"end": 2609,
											"modifierDepth": 1,
											"name": "tag",
											"source": 13,
											"value": "164"
										},
										{
											"begin": 2535,
											"end": 2609,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 2535,
											"end": 2609,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 13,
											"value": "40"
										},
										{
											"begin": 2535,
											"end": 2609,
											"modifierDepth": 1,
											"name": "MLOAD",
											"source": 13
										},
										{
											"begin": 2535,
											"end": 2609,
											"modifierDepth": 1,
											"name": "DUP1",
											"source": 13
										},
										{
											"begin": 2535,
											"end": 2609,
											"modifierDepth": 1,
											"name": "SWAP2",
											"source": 13
										},
										{
											"begin": 2535,
											"end": 2609,
											"modifierDepth": 1,
											"name": "SUB",
											"source": 13
										},
										{
											"begin": 2535,
											"end": 2609,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 2535,
											"end": 2609,
											"modifierDepth": 1,
											"name": "REVERT",
											"source": 13
										},
										{
											"begin": 2535,
											"end": 2609,
											"modifierDepth": 1,
											"name": "tag",
											"source": 13,
											"value": "163"
										},
										{
											"begin": 2535,
											"end": 2609,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 2627,
											"end": 2645,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 13,
											"value": "0"
										},
										{
											"begin": 2627,
											"end": 2645,
											"name": "DUP3",
											"source": 13
										},
										{
											"begin": 2627,
											"end": 2645,
											"name": "DUP2",
											"source": 13
										},
										{
											"begin": 2627,
											"end": 2645,
											"name": "MSTORE",
											"source": 13
										},
										{
											"begin": 2627,
											"end": 2635,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 13,
											"value": "8"
										},
										{
											"begin": 2627,
											"end": 2645,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 13,
											"value": "20"
										},
										{
											"begin": 2627,
											"end": 2645,
											"name": "MSTORE",
											"source": 13
										},
										{
											"begin": 2627,
											"end": 2645,
											"name": "PUSH",
											"source": 13,
											"value": "40"
										},
										{
											"begin": 2627,
											"end": 2645,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 2627,
											"end": 2645,
											"name": "KECCAK256",
											"source": 13
										},
										{
											"begin": 2627,
											"end": 2652,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 13,
											"value": "2"
										},
										{
											"begin": 2627,
											"end": 2652,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 2627,
											"end": 2652,
											"name": "SLOAD",
											"source": 13
										},
										{
											"begin": 2656,
											"end": 2666,
											"modifierDepth": 1,
											"name": "CALLER",
											"source": 13
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 2627,
											"end": 2652,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 2627,
											"end": 2652,
											"name": "SWAP2",
											"source": 13
										},
										{
											"begin": 2627,
											"end": 2652,
											"modifierDepth": 1,
											"name": "AND",
											"source": 13
										},
										{
											"begin": 2627,
											"end": 2666,
											"name": "SUB",
											"source": 13
										},
										{
											"begin": 2619,
											"end": 2702,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "166"
										},
										{
											"begin": 2619,
											"end": 2702,
											"modifierDepth": 1,
											"name": "JUMPI",
											"source": 13
										},
										{
											"begin": 2619,
											"end": 2702,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 13,
											"value": "40"
										},
										{
											"begin": 2619,
											"end": 2702,
											"name": "MLOAD",
											"source": 13
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "461BCD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E5"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 2619,
											"end": 2702,
											"name": "DUP2",
											"source": 13
										},
										{
											"begin": 2619,
											"end": 2702,
											"name": "MSTORE",
											"source": 13
										},
										{
											"begin": 3862,
											"end": 3864,
											"name": "PUSH",
											"source": 14,
											"value": "20"
										},
										{
											"begin": 2619,
											"end": 2702,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 13,
											"value": "4"
										},
										{
											"begin": 2619,
											"end": 2702,
											"name": "DUP3",
											"source": 13
										},
										{
											"begin": 2619,
											"end": 2702,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 3844,
											"end": 3865,
											"name": "MSTORE",
											"source": 14
										},
										{
											"begin": 3901,
											"end": 3903,
											"name": "PUSH",
											"source": 14,
											"value": "1F"
										},
										{
											"begin": 3881,
											"end": 3899,
											"name": "PUSH",
											"source": 14,
											"value": "24"
										},
										{
											"begin": 3881,
											"end": 3899,
											"name": "DUP3",
											"source": 14
										},
										{
											"begin": 3881,
											"end": 3899,
											"name": "ADD",
											"source": 14
										},
										{
											"begin": 3874,
											"end": 3904,
											"name": "MSTORE",
											"source": 14
										},
										{
											"begin": 3940,
											"end": 3973,
											"name": "PUSH",
											"source": 14,
											"value": "416E206F666665722063616E6E6F742062757920746869732053656C6C657200"
										},
										{
											"begin": 3920,
											"end": 3938,
											"name": "PUSH",
											"source": 14,
											"value": "44"
										},
										{
											"begin": 3920,
											"end": 3938,
											"name": "DUP3",
											"source": 14
										},
										{
											"begin": 3920,
											"end": 3938,
											"name": "ADD",
											"source": 14
										},
										{
											"begin": 3913,
											"end": 3974,
											"name": "MSTORE",
											"source": 14
										},
										{
											"begin": 3991,
											"end": 4009,
											"name": "PUSH",
											"source": 14,
											"value": "64"
										},
										{
											"begin": 3991,
											"end": 4009,
											"name": "ADD",
											"source": 14
										},
										{
											"begin": 2619,
											"end": 2702,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "164"
										},
										{
											"begin": 3660,
											"end": 4015,
											"name": "JUMP",
											"source": 14
										},
										{
											"begin": 2619,
											"end": 2702,
											"modifierDepth": 1,
											"name": "tag",
											"source": 13,
											"value": "166"
										},
										{
											"begin": 2619,
											"end": 2702,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 2712,
											"end": 2733,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 13,
											"value": "0"
										},
										{
											"begin": 2744,
											"end": 2754,
											"modifierDepth": 1,
											"name": "CALLER",
											"source": 13
										},
										{
											"begin": 2712,
											"end": 2755,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 2712,
											"end": 2755,
											"modifierDepth": 1,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 2765,
											"end": 2776,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 13,
											"value": "0"
										},
										{
											"begin": 2791,
											"end": 2802,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 13,
											"value": "4"
										},
										{
											"begin": 2791,
											"end": 2802,
											"modifierDepth": 1,
											"name": "SLOAD",
											"source": 13
										},
										{
											"begin": 2779,
											"end": 2782,
											"modifierDepth": 1,
											"name": "DUP4",
											"source": 13
										},
										{
											"begin": 2779,
											"end": 2788,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 13,
											"value": "4"
										},
										{
											"begin": 2779,
											"end": 2788,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 2779,
											"end": 2788,
											"modifierDepth": 1,
											"name": "SLOAD",
											"source": 13
										},
										{
											"begin": 2779,
											"end": 2802,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "169"
										},
										{
											"begin": 2779,
											"end": 2802,
											"modifierDepth": 1,
											"name": "SWAP2",
											"source": 13
										},
										{
											"begin": 2779,
											"end": 2802,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 2779,
											"end": 2802,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "170"
										},
										{
											"begin": 2779,
											"end": 2802,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 2779,
											"end": 2802,
											"modifierDepth": 1,
											"name": "tag",
											"source": 13,
											"value": "169"
										},
										{
											"begin": 2779,
											"end": 2802,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 2820,
											"end": 2830,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 13,
											"value": "2"
										},
										{
											"begin": 2820,
											"end": 2830,
											"name": "DUP5",
											"source": 13
										},
										{
											"begin": 2820,
											"end": 2830,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 2820,
											"end": 2830,
											"name": "SLOAD",
											"source": 13
										},
										{
											"begin": 2812,
											"end": 2848,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 13,
											"value": "40"
										},
										{
											"begin": 2812,
											"end": 2848,
											"name": "MLOAD",
											"source": 13
										},
										{
											"begin": 2765,
											"end": 2802,
											"name": "SWAP2",
											"source": 13
										},
										{
											"begin": 2765,
											"end": 2802,
											"name": "SWAP3",
											"source": 13
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 2820,
											"end": 2830,
											"modifierDepth": 1,
											"name": "AND",
											"source": 13
										},
										{
											"begin": 2820,
											"end": 2830,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 2812,
											"end": 2848,
											"name": "DUP3",
											"source": 13
										},
										{
											"begin": 2812,
											"end": 2848,
											"modifierDepth": 1,
											"name": "ISZERO",
											"source": 13
										},
										{
											"begin": 2812,
											"end": 2848,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 13,
											"value": "8FC"
										},
										{
											"begin": 2812,
											"end": 2848,
											"modifierDepth": 1,
											"name": "MUL",
											"source": 13
										},
										{
											"begin": 2812,
											"end": 2848,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 2765,
											"end": 2802,
											"name": "DUP4",
											"source": 13
										},
										{
											"begin": 2765,
											"end": 2802,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 2820,
											"end": 2830,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 13,
											"value": "0"
										},
										{
											"begin": 2812,
											"end": 2848,
											"name": "DUP2",
											"source": 13
										},
										{
											"begin": 2820,
											"end": 2830,
											"name": "DUP2",
											"source": 13
										},
										{
											"begin": 2812,
											"end": 2848,
											"name": "DUP2",
											"source": 13
										},
										{
											"begin": 2765,
											"end": 2802,
											"name": "DUP6",
											"source": 13
										},
										{
											"begin": 2820,
											"end": 2830,
											"name": "DUP9",
											"source": 13
										},
										{
											"begin": 2812,
											"end": 2848,
											"name": "DUP9",
											"source": 13
										},
										{
											"begin": 2812,
											"end": 2848,
											"modifierDepth": 1,
											"name": "CALL",
											"source": 13
										},
										{
											"begin": 2812,
											"end": 2848,
											"modifierDepth": 1,
											"name": "SWAP4",
											"source": 13
										},
										{
											"begin": 2812,
											"end": 2848,
											"modifierDepth": 1,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 2812,
											"end": 2848,
											"modifierDepth": 1,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 2812,
											"end": 2848,
											"modifierDepth": 1,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 2812,
											"end": 2848,
											"modifierDepth": 1,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 2812,
											"end": 2848,
											"modifierDepth": 1,
											"name": "ISZERO",
											"source": 13
										},
										{
											"begin": 2812,
											"end": 2848,
											"modifierDepth": 1,
											"name": "DUP1",
											"source": 13
										},
										{
											"begin": 2812,
											"end": 2848,
											"modifierDepth": 1,
											"name": "ISZERO",
											"source": 13
										},
										{
											"begin": 2812,
											"end": 2848,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "172"
										},
										{
											"begin": 2812,
											"end": 2848,
											"modifierDepth": 1,
											"name": "JUMPI",
											"source": 13
										},
										{
											"begin": 2812,
											"end": 2848,
											"modifierDepth": 1,
											"name": "RETURNDATASIZE",
											"source": 13
										},
										{
											"begin": 2812,
											"end": 2848,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 13,
											"value": "0"
										},
										{
											"begin": 2812,
											"end": 2848,
											"name": "DUP1",
											"source": 13
										},
										{
											"begin": 2812,
											"end": 2848,
											"modifierDepth": 1,
											"name": "RETURNDATACOPY",
											"source": 13
										},
										{
											"begin": 2812,
											"end": 2848,
											"modifierDepth": 1,
											"name": "RETURNDATASIZE",
											"source": 13
										},
										{
											"begin": 2812,
											"end": 2848,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 13,
											"value": "0"
										},
										{
											"begin": 2812,
											"end": 2848,
											"modifierDepth": 1,
											"name": "REVERT",
											"source": 13
										},
										{
											"begin": 2812,
											"end": 2848,
											"modifierDepth": 1,
											"name": "tag",
											"source": 13,
											"value": "172"
										},
										{
											"begin": 2812,
											"end": 2848,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 2858,
											"end": 2863,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 13,
											"value": "9"
										},
										{
											"begin": 2858,
											"end": 2863,
											"name": "SLOAD",
											"source": 13
										},
										{
											"begin": 2858,
											"end": 2863,
											"name": "PUSH",
											"source": 13,
											"value": "1"
										},
										{
											"begin": 2899,
											"end": 2910,
											"name": "DUP5",
											"source": 13
										},
										{
											"begin": 2899,
											"end": 2910,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 2899,
											"end": 2910,
											"name": "SLOAD",
											"source": 13
										},
										{
											"begin": 2858,
											"end": 2911,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 13,
											"value": "40"
										},
										{
											"begin": 2858,
											"end": 2911,
											"name": "MLOAD",
											"source": 13
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "23B872DD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 2858,
											"end": 2911,
											"name": "DUP2",
											"source": 13
										},
										{
											"begin": 2858,
											"end": 2911,
											"name": "MSTORE",
											"source": 13
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 2858,
											"end": 2863,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 2858,
											"end": 2863,
											"name": "SWAP3",
											"source": 13
										},
										{
											"begin": 2858,
											"end": 2863,
											"modifierDepth": 1,
											"name": "AND",
											"source": 13
										},
										{
											"begin": 2858,
											"end": 2863,
											"name": "SWAP2",
											"source": 13
										},
										{
											"begin": 2858,
											"end": 2876,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 13,
											"value": "23B872DD"
										},
										{
											"begin": 2858,
											"end": 2876,
											"name": "SWAP2",
											"source": 13
										},
										{
											"begin": 2858,
											"end": 2911,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "173"
										},
										{
											"begin": 2858,
											"end": 2911,
											"name": "SWAP2",
											"source": 13
										},
										{
											"begin": 2885,
											"end": 2889,
											"modifierDepth": 1,
											"name": "ADDRESS",
											"source": 13
										},
										{
											"begin": 2885,
											"end": 2889,
											"name": "SWAP2",
											"source": 13
										},
										{
											"begin": 2892,
											"end": 2897,
											"name": "DUP8",
											"source": 13
										},
										{
											"begin": 2892,
											"end": 2897,
											"name": "SWAP2",
											"source": 13
										},
										{
											"begin": 2858,
											"end": 2911,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 13,
											"value": "4"
										},
										{
											"begin": 2858,
											"end": 2911,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 2858,
											"end": 2911,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "174"
										},
										{
											"begin": 2858,
											"end": 2911,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 2858,
											"end": 2911,
											"modifierDepth": 1,
											"name": "tag",
											"source": 13,
											"value": "173"
										},
										{
											"begin": 2858,
											"end": 2911,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 2858,
											"end": 2911,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 13,
											"value": "0"
										},
										{
											"begin": 2858,
											"end": 2911,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 13,
											"value": "40"
										},
										{
											"begin": 2858,
											"end": 2911,
											"modifierDepth": 1,
											"name": "MLOAD",
											"source": 13
										},
										{
											"begin": 2858,
											"end": 2911,
											"modifierDepth": 1,
											"name": "DUP1",
											"source": 13
										},
										{
											"begin": 2858,
											"end": 2911,
											"modifierDepth": 1,
											"name": "DUP4",
											"source": 13
										},
										{
											"begin": 2858,
											"end": 2911,
											"modifierDepth": 1,
											"name": "SUB",
											"source": 13
										},
										{
											"begin": 2858,
											"end": 2911,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 13
										},
										{
											"begin": 2858,
											"end": 2911,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 13,
											"value": "0"
										},
										{
											"begin": 2858,
											"end": 2911,
											"modifierDepth": 1,
											"name": "DUP8",
											"source": 13
										},
										{
											"begin": 2858,
											"end": 2911,
											"modifierDepth": 1,
											"name": "DUP1",
											"source": 13
										},
										{
											"begin": 2858,
											"end": 2911,
											"modifierDepth": 1,
											"name": "EXTCODESIZE",
											"source": 13
										},
										{
											"begin": 2858,
											"end": 2911,
											"modifierDepth": 1,
											"name": "ISZERO",
											"source": 13
										},
										{
											"begin": 2858,
											"end": 2911,
											"modifierDepth": 1,
											"name": "DUP1",
											"source": 13
										},
										{
											"begin": 2858,
											"end": 2911,
											"modifierDepth": 1,
											"name": "ISZERO",
											"source": 13
										},
										{
											"begin": 2858,
											"end": 2911,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "175"
										},
										{
											"begin": 2858,
											"end": 2911,
											"modifierDepth": 1,
											"name": "JUMPI",
											"source": 13
										},
										{
											"begin": 2858,
											"end": 2911,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 13,
											"value": "0"
										},
										{
											"begin": 2858,
											"end": 2911,
											"name": "DUP1",
											"source": 13
										},
										{
											"begin": 2858,
											"end": 2911,
											"modifierDepth": 1,
											"name": "REVERT",
											"source": 13
										},
										{
											"begin": 2858,
											"end": 2911,
											"modifierDepth": 1,
											"name": "tag",
											"source": 13,
											"value": "175"
										},
										{
											"begin": 2858,
											"end": 2911,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 2858,
											"end": 2911,
											"modifierDepth": 1,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 2858,
											"end": 2911,
											"modifierDepth": 1,
											"name": "GAS",
											"source": 13
										},
										{
											"begin": 2858,
											"end": 2911,
											"modifierDepth": 1,
											"name": "CALL",
											"source": 13
										},
										{
											"begin": 2858,
											"end": 2911,
											"modifierDepth": 1,
											"name": "ISZERO",
											"source": 13
										},
										{
											"begin": 2858,
											"end": 2911,
											"modifierDepth": 1,
											"name": "DUP1",
											"source": 13
										},
										{
											"begin": 2858,
											"end": 2911,
											"modifierDepth": 1,
											"name": "ISZERO",
											"source": 13
										},
										{
											"begin": 2858,
											"end": 2911,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "177"
										},
										{
											"begin": 2858,
											"end": 2911,
											"modifierDepth": 1,
											"name": "JUMPI",
											"source": 13
										},
										{
											"begin": 2858,
											"end": 2911,
											"modifierDepth": 1,
											"name": "RETURNDATASIZE",
											"source": 13
										},
										{
											"begin": 2858,
											"end": 2911,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 13,
											"value": "0"
										},
										{
											"begin": 2858,
											"end": 2911,
											"name": "DUP1",
											"source": 13
										},
										{
											"begin": 2858,
											"end": 2911,
											"modifierDepth": 1,
											"name": "RETURNDATACOPY",
											"source": 13
										},
										{
											"begin": 2858,
											"end": 2911,
											"modifierDepth": 1,
											"name": "RETURNDATASIZE",
											"source": 13
										},
										{
											"begin": 2858,
											"end": 2911,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 13,
											"value": "0"
										},
										{
											"begin": 2858,
											"end": 2911,
											"modifierDepth": 1,
											"name": "REVERT",
											"source": 13
										},
										{
											"begin": 2858,
											"end": 2911,
											"modifierDepth": 1,
											"name": "tag",
											"source": 13,
											"value": "177"
										},
										{
											"begin": 2858,
											"end": 2911,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 2931,
											"end": 2951,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 13,
											"value": "0"
										},
										{
											"begin": 2931,
											"end": 2951,
											"name": "DUP6",
											"source": 13
										},
										{
											"begin": 2931,
											"end": 2951,
											"name": "DUP2",
											"source": 13
										},
										{
											"begin": 2931,
											"end": 2951,
											"name": "MSTORE",
											"source": 13
										},
										{
											"begin": 2931,
											"end": 2941,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 13,
											"value": "6"
										},
										{
											"begin": 2931,
											"end": 2951,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 13,
											"value": "20"
										},
										{
											"begin": 2931,
											"end": 2951,
											"name": "MSTORE",
											"source": 13
										},
										{
											"begin": 2931,
											"end": 2951,
											"name": "PUSH",
											"source": 13,
											"value": "40"
										},
										{
											"begin": 2931,
											"end": 2951,
											"name": "DUP1",
											"source": 13
										},
										{
											"begin": 2931,
											"end": 2951,
											"name": "DUP3",
											"source": 13
										},
										{
											"begin": 2931,
											"end": 2951,
											"name": "KECCAK256",
											"source": 13
										},
										{
											"begin": 2931,
											"end": 2951,
											"name": "SLOAD",
											"source": 13
										},
										{
											"begin": 2962,
											"end": 2973,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 13,
											"value": "4"
										},
										{
											"begin": 2962,
											"end": 2973,
											"name": "SLOAD",
											"source": 13
										},
										{
											"begin": 2923,
											"end": 2974,
											"name": "SWAP2",
											"source": 13
										},
										{
											"begin": 2923,
											"end": 2974,
											"name": "MLOAD",
											"source": 13
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 2931,
											"end": 2951,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 2931,
											"end": 2951,
											"name": "SWAP2",
											"source": 13
										},
										{
											"begin": 2931,
											"end": 2951,
											"modifierDepth": 1,
											"name": "AND",
											"source": 13
										},
										{
											"begin": 2931,
											"end": 2951,
											"name": "SWAP4",
											"source": 13
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 2923,
											"end": 2974,
											"name": "DUP2",
											"source": 13
										},
										{
											"begin": 2923,
											"end": 2974,
											"modifierDepth": 1,
											"name": "ISZERO",
											"source": 13
										},
										{
											"begin": 2923,
											"end": 2974,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 13,
											"value": "8FC"
										},
										{
											"begin": 2923,
											"end": 2974,
											"modifierDepth": 1,
											"name": "MUL",
											"source": 13
										},
										{
											"begin": 2923,
											"end": 2974,
											"name": "SWAP3",
											"source": 13
										},
										{
											"begin": 2923,
											"end": 2974,
											"name": "DUP2",
											"source": 13
										},
										{
											"begin": 2931,
											"end": 2951,
											"name": "DUP2",
											"source": 13
										},
										{
											"begin": 2923,
											"end": 2974,
											"name": "DUP2",
											"source": 13
										},
										{
											"begin": 2962,
											"end": 2973,
											"name": "DUP6",
											"source": 13
										},
										{
											"begin": 2931,
											"end": 2951,
											"name": "DUP9",
											"source": 13
										},
										{
											"begin": 2923,
											"end": 2974,
											"name": "DUP9",
											"source": 13
										},
										{
											"begin": 2923,
											"end": 2974,
											"modifierDepth": 1,
											"name": "CALL",
											"source": 13
										},
										{
											"begin": 2923,
											"end": 2974,
											"modifierDepth": 1,
											"name": "SWAP4",
											"source": 13
										},
										{
											"begin": 2923,
											"end": 2974,
											"modifierDepth": 1,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 2923,
											"end": 2974,
											"modifierDepth": 1,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 2923,
											"end": 2974,
											"modifierDepth": 1,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 2923,
											"end": 2974,
											"modifierDepth": 1,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 2923,
											"end": 2974,
											"modifierDepth": 1,
											"name": "ISZERO",
											"source": 13
										},
										{
											"begin": 2923,
											"end": 2974,
											"modifierDepth": 1,
											"name": "DUP1",
											"source": 13
										},
										{
											"begin": 2923,
											"end": 2974,
											"modifierDepth": 1,
											"name": "ISZERO",
											"source": 13
										},
										{
											"begin": 2923,
											"end": 2974,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "179"
										},
										{
											"begin": 2923,
											"end": 2974,
											"modifierDepth": 1,
											"name": "JUMPI",
											"source": 13
										},
										{
											"begin": 2923,
											"end": 2974,
											"modifierDepth": 1,
											"name": "RETURNDATASIZE",
											"source": 13
										},
										{
											"begin": 2923,
											"end": 2974,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 13,
											"value": "0"
										},
										{
											"begin": 2923,
											"end": 2974,
											"name": "DUP1",
											"source": 13
										},
										{
											"begin": 2923,
											"end": 2974,
											"modifierDepth": 1,
											"name": "RETURNDATACOPY",
											"source": 13
										},
										{
											"begin": 2923,
											"end": 2974,
											"modifierDepth": 1,
											"name": "RETURNDATASIZE",
											"source": 13
										},
										{
											"begin": 2923,
											"end": 2974,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 13,
											"value": "0"
										},
										{
											"begin": 2923,
											"end": 2974,
											"modifierDepth": 1,
											"name": "REVERT",
											"source": 13
										},
										{
											"begin": 2923,
											"end": 2974,
											"modifierDepth": 1,
											"name": "tag",
											"source": 13,
											"value": "179"
										},
										{
											"begin": 2923,
											"end": 2974,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 2984,
											"end": 2993,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 13,
											"value": "3"
										},
										{
											"begin": 2984,
											"end": 2993,
											"name": "DUP4",
											"source": 13
										},
										{
											"begin": 2984,
											"end": 2993,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 2984,
											"end": 3001,
											"name": "DUP1",
											"source": 13
										},
										{
											"begin": 2984,
											"end": 3001,
											"name": "SLOAD",
											"source": 13
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "NOT",
											"source": -1
										},
										{
											"begin": 2984,
											"end": 3001,
											"modifierDepth": 1,
											"name": "AND",
											"source": 13
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 2984,
											"end": 3001,
											"name": "DUP5",
											"source": 13
										},
										{
											"begin": 2984,
											"end": 3001,
											"modifierDepth": 1,
											"name": "AND",
											"source": 13
										},
										{
											"begin": 2984,
											"end": 3001,
											"modifierDepth": 1,
											"name": "OR",
											"source": 13
										},
										{
											"begin": 2984,
											"end": 3001,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 2984,
											"end": 3001,
											"name": "SSTORE",
											"source": 13
										},
										{
											"begin": 3011,
											"end": 3021,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 13,
											"value": "5"
										},
										{
											"begin": 3011,
											"end": 3021,
											"name": "DUP4",
											"source": 13
										},
										{
											"begin": 3011,
											"end": 3021,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 3011,
											"end": 3026,
											"name": "DUP1",
											"source": 13
										},
										{
											"begin": 3011,
											"end": 3026,
											"name": "SLOAD",
											"source": 13
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "FF"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "NOT",
											"source": -1
										},
										{
											"begin": 3011,
											"end": 3026,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 3011,
											"end": 3026,
											"name": "DUP2",
											"source": 13
										},
										{
											"begin": 3011,
											"end": 3026,
											"modifierDepth": 1,
											"name": "AND",
											"source": 13
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": 3011,
											"end": 3026,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 3011,
											"end": 3026,
											"name": "DUP2",
											"source": 13
										},
										{
											"begin": 3011,
											"end": 3026,
											"modifierDepth": 1,
											"name": "OR",
											"source": 13
										},
										{
											"begin": 3011,
											"end": 3026,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 3011,
											"end": 3026,
											"name": "SWAP3",
											"source": 13
										},
										{
											"begin": 3011,
											"end": 3026,
											"name": "SSTORE",
											"source": 13
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "0"
										},
										{
											"begin": 3036,
											"end": 3051,
											"name": "DUP7",
											"source": 13
										},
										{
											"begin": 3036,
											"end": 3051,
											"name": "DUP2",
											"source": 13
										},
										{
											"begin": 3036,
											"end": 3051,
											"name": "MSTORE",
											"source": 13
										},
										{
											"begin": 3036,
											"end": 3041,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 13,
											"value": "7"
										},
										{
											"begin": 3036,
											"end": 3051,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 13,
											"value": "20"
										},
										{
											"begin": 3036,
											"end": 3051,
											"name": "MSTORE",
											"source": 13
										},
										{
											"begin": 3036,
											"end": 3051,
											"name": "PUSH",
											"source": 13,
											"value": "40"
										},
										{
											"begin": 3036,
											"end": 3051,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 3036,
											"end": 3051,
											"name": "KECCAK256",
											"source": 13
										},
										{
											"begin": 3036,
											"end": 3065,
											"name": "DUP1",
											"source": 13
										},
										{
											"begin": 3036,
											"end": 3065,
											"name": "SLOAD",
											"source": 13
										},
										{
											"begin": 3036,
											"end": 3065,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 3036,
											"end": 3065,
											"name": "SWAP2",
											"source": 13
										},
										{
											"begin": 3036,
											"end": 3065,
											"modifierDepth": 1,
											"name": "AND",
											"source": 13
										},
										{
											"begin": 3036,
											"end": 3065,
											"name": "DUP3",
											"source": 13
										},
										{
											"begin": 3036,
											"end": 3065,
											"modifierDepth": 1,
											"name": "OR",
											"source": 13
										},
										{
											"begin": 3036,
											"end": 3065,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 3036,
											"end": 3065,
											"name": "SSTORE",
											"source": 13
										},
										{
											"begin": 3075,
											"end": 3084,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 13,
											"value": "2"
										},
										{
											"begin": 1032,
											"end": 1051,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 1032,
											"end": 1051,
											"name": "SLOAD",
											"source": 8
										},
										{
											"begin": 1032,
											"end": 1051,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 1032,
											"end": 1051,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 1032,
											"end": 1051,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 1032,
											"end": 1051,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 1032,
											"end": 1051,
											"name": "SSTORE",
											"source": 8
										},
										{
											"begin": 3119,
											"end": 3132,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 13,
											"value": "A"
										},
										{
											"begin": 3119,
											"end": 3132,
											"name": "SLOAD",
											"source": 13
										},
										{
											"begin": 3119,
											"end": 3132,
											"name": "PUSH",
											"source": 13,
											"value": "1"
										},
										{
											"begin": 3134,
											"end": 3145,
											"name": "DUP5",
											"source": 13
										},
										{
											"begin": 3134,
											"end": 3145,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 3134,
											"end": 3145,
											"name": "SLOAD",
											"source": 13
										},
										{
											"begin": 3147,
											"end": 3157,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 13,
											"value": "2"
										},
										{
											"begin": 3147,
											"end": 3157,
											"name": "DUP6",
											"source": 13
										},
										{
											"begin": 3147,
											"end": 3157,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 3147,
											"end": 3157,
											"name": "SLOAD",
											"source": 13
										},
										{
											"begin": 3111,
											"end": 3176,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 13,
											"value": "40"
										},
										{
											"begin": 3111,
											"end": 3176,
											"name": "MLOAD",
											"source": 13
										},
										{
											"begin": 3111,
											"end": 3176,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 13,
											"value": "16F1DBD97E6BF646D429ED186CCE832F1F7FD9907814293B83181E9970AB7BD2"
										},
										{
											"begin": 3111,
											"end": 3176,
											"name": "SWAP4",
											"source": 13
										},
										{
											"begin": 3111,
											"end": 3176,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "182"
										},
										{
											"begin": 3111,
											"end": 3176,
											"name": "SWAP4",
											"source": 13
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 3119,
											"end": 3132,
											"name": "SWAP2",
											"source": 13
										},
										{
											"begin": 3119,
											"end": 3132,
											"name": "DUP3",
											"source": 13
										},
										{
											"begin": 3119,
											"end": 3132,
											"modifierDepth": 1,
											"name": "AND",
											"source": 13
										},
										{
											"begin": 3119,
											"end": 3132,
											"name": "SWAP4",
											"source": 13
										},
										{
											"begin": 3134,
											"end": 3145,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 3134,
											"end": 3145,
											"name": "SWAP3",
											"source": 13
										},
										{
											"begin": 3147,
											"end": 3157,
											"name": "SWAP2",
											"source": 13
										},
										{
											"begin": 3147,
											"end": 3157,
											"modifierDepth": 1,
											"name": "AND",
											"source": 13
										},
										{
											"begin": 3147,
											"end": 3157,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 3159,
											"end": 3164,
											"name": "DUP8",
											"source": 13
										},
										{
											"begin": 3159,
											"end": 3164,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 3166,
											"end": 3175,
											"modifierDepth": 1,
											"name": "CALLVALUE",
											"source": 13
										},
										{
											"begin": 3166,
											"end": 3175,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 3111,
											"end": 3176,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "183"
										},
										{
											"begin": 3111,
											"end": 3176,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 3111,
											"end": 3176,
											"modifierDepth": 1,
											"name": "tag",
											"source": 13,
											"value": "182"
										},
										{
											"begin": 3111,
											"end": 3176,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 3111,
											"end": 3176,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 13,
											"value": "40"
										},
										{
											"begin": 3111,
											"end": 3176,
											"modifierDepth": 1,
											"name": "MLOAD",
											"source": 13
										},
										{
											"begin": 3111,
											"end": 3176,
											"modifierDepth": 1,
											"name": "DUP1",
											"source": 13
										},
										{
											"begin": 3111,
											"end": 3176,
											"modifierDepth": 1,
											"name": "SWAP2",
											"source": 13
										},
										{
											"begin": 3111,
											"end": 3176,
											"modifierDepth": 1,
											"name": "SUB",
											"source": 13
										},
										{
											"begin": 3111,
											"end": 3176,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 3111,
											"end": 3176,
											"modifierDepth": 1,
											"name": "LOG1",
											"source": 13
										},
										{
											"begin": 2479,
											"end": 3183,
											"modifierDepth": 1,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 2479,
											"end": 3183,
											"modifierDepth": 1,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 2479,
											"end": 3183,
											"modifierDepth": 1,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 2303,
											"end": 2323,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "184"
										},
										{
											"begin": 1716,
											"end": 1717,
											"name": "PUSH",
											"source": 1,
											"value": "1"
										},
										{
											"begin": 2809,
											"end": 2816,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 2809,
											"end": 2831,
											"name": "SSTORE",
											"source": 1
										},
										{
											"begin": 2629,
											"end": 2838,
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 2303,
											"end": 2323,
											"name": "tag",
											"source": 1,
											"value": "184"
										},
										{
											"begin": 2303,
											"end": 2323,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 2417,
											"end": 3183,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 2417,
											"end": 3183,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 5604,
											"end": 5706,
											"name": "tag",
											"source": 13,
											"value": "48"
										},
										{
											"begin": 5604,
											"end": 5706,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 1094,
											"end": 1107,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "187"
										},
										{
											"begin": 1094,
											"end": 1105,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "188"
										},
										{
											"begin": 1094,
											"end": 1107,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 1094,
											"end": 1107,
											"name": "tag",
											"source": 0,
											"value": "187"
										},
										{
											"begin": 1094,
											"end": 1107,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 5674,
											"end": 5685,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 13,
											"value": "4"
										},
										{
											"begin": 5674,
											"end": 5699,
											"name": "SSTORE",
											"source": 13
										},
										{
											"begin": 5604,
											"end": 5706,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 4440,
											"end": 4804,
											"name": "tag",
											"source": 13,
											"value": "52"
										},
										{
											"begin": 4440,
											"end": 4804,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 4503,
											"end": 4518,
											"name": "PUSH",
											"source": 13,
											"value": "0"
										},
										{
											"begin": 4503,
											"end": 4518,
											"name": "DUP2",
											"source": 13
										},
										{
											"begin": 4503,
											"end": 4518,
											"name": "DUP2",
											"source": 13
										},
										{
											"begin": 4503,
											"end": 4518,
											"name": "MSTORE",
											"source": 13
										},
										{
											"begin": 4503,
											"end": 4508,
											"name": "PUSH",
											"source": 13,
											"value": "7"
										},
										{
											"begin": 4503,
											"end": 4518,
											"name": "PUSH",
											"source": 13,
											"value": "20"
										},
										{
											"begin": 4503,
											"end": 4518,
											"name": "MSTORE",
											"source": 13
										},
										{
											"begin": 4503,
											"end": 4518,
											"name": "PUSH",
											"source": 13,
											"value": "40"
										},
										{
											"begin": 4503,
											"end": 4518,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 4503,
											"end": 4518,
											"name": "KECCAK256",
											"source": 13
										},
										{
											"begin": 4503,
											"end": 4527,
											"name": "SLOAD",
											"source": 13
										},
										{
											"begin": 4503,
											"end": 4527,
											"name": "PUSH",
											"source": 13,
											"value": "100"
										},
										{
											"begin": 4503,
											"end": 4527,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 4503,
											"end": 4527,
											"name": "DIV",
											"source": 13
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 4503,
											"end": 4527,
											"name": "AND",
											"source": 13
										},
										{
											"begin": 4531,
											"end": 4541,
											"name": "CALLER",
											"source": 13
										},
										{
											"begin": 4503,
											"end": 4541,
											"name": "EQ",
											"source": 13
										},
										{
											"begin": 4495,
											"end": 4566,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "191"
										},
										{
											"begin": 4495,
											"end": 4566,
											"name": "JUMPI",
											"source": 13
										},
										{
											"begin": 4495,
											"end": 4566,
											"name": "PUSH",
											"source": 13,
											"value": "40"
										},
										{
											"begin": 4495,
											"end": 4566,
											"name": "MLOAD",
											"source": 13
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "461BCD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E5"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 4495,
											"end": 4566,
											"name": "DUP2",
											"source": 13
										},
										{
											"begin": 4495,
											"end": 4566,
											"name": "MSTORE",
											"source": 13
										},
										{
											"begin": 5292,
											"end": 5294,
											"name": "PUSH",
											"source": 14,
											"value": "20"
										},
										{
											"begin": 4495,
											"end": 4566,
											"name": "PUSH",
											"source": 13,
											"value": "4"
										},
										{
											"begin": 4495,
											"end": 4566,
											"name": "DUP3",
											"source": 13
										},
										{
											"begin": 4495,
											"end": 4566,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 5274,
											"end": 5295,
											"name": "MSTORE",
											"source": 14
										},
										{
											"begin": 5331,
											"end": 5333,
											"name": "PUSH",
											"source": 14,
											"value": "15"
										},
										{
											"begin": 5311,
											"end": 5329,
											"name": "PUSH",
											"source": 14,
											"value": "24"
										},
										{
											"begin": 5311,
											"end": 5329,
											"name": "DUP3",
											"source": 14
										},
										{
											"begin": 5311,
											"end": 5329,
											"name": "ADD",
											"source": 14
										},
										{
											"begin": 5304,
											"end": 5334,
											"name": "MSTORE",
											"source": 14
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "13DB9B1E4813DDDB995C8818D85B8810D85B98D95B"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "5A"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 5350,
											"end": 5368,
											"name": "PUSH",
											"source": 14,
											"value": "44"
										},
										{
											"begin": 5350,
											"end": 5368,
											"name": "DUP3",
											"source": 14
										},
										{
											"begin": 5350,
											"end": 5368,
											"name": "ADD",
											"source": 14
										},
										{
											"begin": 5343,
											"end": 5394,
											"name": "MSTORE",
											"source": 14
										},
										{
											"begin": 5411,
											"end": 5429,
											"name": "PUSH",
											"source": 14,
											"value": "64"
										},
										{
											"begin": 5411,
											"end": 5429,
											"name": "ADD",
											"source": 14
										},
										{
											"begin": 4495,
											"end": 4566,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "164"
										},
										{
											"begin": 5090,
											"end": 5435,
											"name": "JUMP",
											"source": 14
										},
										{
											"begin": 4495,
											"end": 4566,
											"name": "tag",
											"source": 13,
											"value": "191"
										},
										{
											"begin": 4495,
											"end": 4566,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 4576,
											"end": 4591,
											"name": "PUSH",
											"source": 13,
											"value": "0"
										},
										{
											"begin": 4576,
											"end": 4591,
											"name": "DUP2",
											"source": 13
										},
										{
											"begin": 4576,
											"end": 4591,
											"name": "DUP2",
											"source": 13
										},
										{
											"begin": 4576,
											"end": 4591,
											"name": "MSTORE",
											"source": 13
										},
										{
											"begin": 4576,
											"end": 4581,
											"name": "PUSH",
											"source": 13,
											"value": "7"
										},
										{
											"begin": 4576,
											"end": 4591,
											"name": "PUSH",
											"source": 13,
											"value": "20"
										},
										{
											"begin": 4576,
											"end": 4591,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 4576,
											"end": 4591,
											"name": "DUP2",
											"source": 13
										},
										{
											"begin": 4576,
											"end": 4591,
											"name": "MSTORE",
											"source": 13
										},
										{
											"begin": 4576,
											"end": 4591,
											"name": "PUSH",
											"source": 13,
											"value": "40"
										},
										{
											"begin": 4576,
											"end": 4591,
											"name": "DUP1",
											"source": 13
										},
										{
											"begin": 4576,
											"end": 4591,
											"name": "DUP4",
											"source": 13
										},
										{
											"begin": 4576,
											"end": 4591,
											"name": "KECCAK256",
											"source": 13
										},
										{
											"begin": 4576,
											"end": 4605,
											"name": "DUP1",
											"source": 13
										},
										{
											"begin": 4576,
											"end": 4605,
											"name": "SLOAD",
											"source": 13
										},
										{
											"begin": 4601,
											"end": 4605,
											"name": "PUSH",
											"source": 13,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "FF"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "NOT",
											"source": -1
										},
										{
											"begin": 4576,
											"end": 4605,
											"name": "SWAP2",
											"source": 13
										},
										{
											"begin": 4576,
											"end": 4605,
											"name": "DUP3",
											"source": 13
										},
										{
											"begin": 4576,
											"end": 4605,
											"name": "AND",
											"source": 13
										},
										{
											"begin": 4576,
											"end": 4605,
											"name": "DUP2",
											"source": 13
										},
										{
											"begin": 4576,
											"end": 4605,
											"name": "OR",
											"source": 13
										},
										{
											"begin": 4576,
											"end": 4605,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 4576,
											"end": 4605,
											"name": "SWAP3",
											"source": 13
										},
										{
											"begin": 4576,
											"end": 4605,
											"name": "SSTORE",
											"source": 13
										},
										{
											"begin": 4615,
											"end": 4623,
											"name": "PUSH",
											"source": 13,
											"value": "8"
										},
										{
											"begin": 4615,
											"end": 4633,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 4615,
											"end": 4633,
											"name": "SWAP4",
											"source": 13
										},
										{
											"begin": 4615,
											"end": 4633,
											"name": "MSTORE",
											"source": 13
										},
										{
											"begin": 4615,
											"end": 4633,
											"name": "SWAP3",
											"source": 13
										},
										{
											"begin": 4615,
											"end": 4633,
											"name": "DUP2",
											"source": 13
										},
										{
											"begin": 4615,
											"end": 4633,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 4615,
											"end": 4633,
											"name": "KECCAK256",
											"source": 13
										},
										{
											"begin": 4615,
											"end": 4640,
											"name": "PUSH",
											"source": 13,
											"value": "5"
										},
										{
											"begin": 4615,
											"end": 4640,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 4615,
											"end": 4645,
											"name": "DUP1",
											"source": 13
										},
										{
											"begin": 4615,
											"end": 4645,
											"name": "SLOAD",
											"source": 13
										},
										{
											"begin": 4615,
											"end": 4645,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 4615,
											"end": 4645,
											"name": "SWAP3",
											"source": 13
										},
										{
											"begin": 4615,
											"end": 4645,
											"name": "AND",
											"source": 13
										},
										{
											"begin": 4615,
											"end": 4645,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 4615,
											"end": 4645,
											"name": "SWAP3",
											"source": 13
										},
										{
											"begin": 4615,
											"end": 4645,
											"name": "OR",
											"source": 13
										},
										{
											"begin": 4615,
											"end": 4645,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 4615,
											"end": 4645,
											"name": "SSTORE",
											"source": 13
										},
										{
											"begin": 4655,
											"end": 4660,
											"name": "PUSH",
											"source": 13,
											"value": "9"
										},
										{
											"begin": 4655,
											"end": 4660,
											"name": "SLOAD",
											"source": 13
										},
										{
											"begin": 4655,
											"end": 4710,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 4655,
											"end": 4710,
											"name": "MLOAD",
											"source": 13
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "23B872DD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 4655,
											"end": 4710,
											"name": "DUP2",
											"source": 13
										},
										{
											"begin": 4655,
											"end": 4710,
											"name": "MSTORE",
											"source": 13
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 4655,
											"end": 4660,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 4655,
											"end": 4660,
											"name": "SWAP2",
											"source": 13
										},
										{
											"begin": 4655,
											"end": 4660,
											"name": "AND",
											"source": 13
										},
										{
											"begin": 4655,
											"end": 4660,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 4655,
											"end": 4673,
											"name": "PUSH",
											"source": 13,
											"value": "23B872DD"
										},
										{
											"begin": 4655,
											"end": 4673,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 4655,
											"end": 4710,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "194"
										},
										{
											"begin": 4655,
											"end": 4710,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 4682,
											"end": 4686,
											"name": "ADDRESS",
											"source": 13
										},
										{
											"begin": 4682,
											"end": 4686,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 4689,
											"end": 4699,
											"name": "CALLER",
											"source": 13
										},
										{
											"begin": 4689,
											"end": 4699,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 4576,
											"end": 4591,
											"name": "DUP7",
											"source": 13
										},
										{
											"begin": 4576,
											"end": 4591,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 4655,
											"end": 4710,
											"name": "PUSH",
											"source": 13,
											"value": "4"
										},
										{
											"begin": 4655,
											"end": 4710,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 4655,
											"end": 4710,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "174"
										},
										{
											"begin": 4655,
											"end": 4710,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 4655,
											"end": 4710,
											"name": "tag",
											"source": 13,
											"value": "194"
										},
										{
											"begin": 4655,
											"end": 4710,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 4655,
											"end": 4710,
											"name": "PUSH",
											"source": 13,
											"value": "0"
										},
										{
											"begin": 4655,
											"end": 4710,
											"name": "PUSH",
											"source": 13,
											"value": "40"
										},
										{
											"begin": 4655,
											"end": 4710,
											"name": "MLOAD",
											"source": 13
										},
										{
											"begin": 4655,
											"end": 4710,
											"name": "DUP1",
											"source": 13
										},
										{
											"begin": 4655,
											"end": 4710,
											"name": "DUP4",
											"source": 13
										},
										{
											"begin": 4655,
											"end": 4710,
											"name": "SUB",
											"source": 13
										},
										{
											"begin": 4655,
											"end": 4710,
											"name": "DUP2",
											"source": 13
										},
										{
											"begin": 4655,
											"end": 4710,
											"name": "PUSH",
											"source": 13,
											"value": "0"
										},
										{
											"begin": 4655,
											"end": 4710,
											"name": "DUP8",
											"source": 13
										},
										{
											"begin": 4655,
											"end": 4710,
											"name": "DUP1",
											"source": 13
										},
										{
											"begin": 4655,
											"end": 4710,
											"name": "EXTCODESIZE",
											"source": 13
										},
										{
											"begin": 4655,
											"end": 4710,
											"name": "ISZERO",
											"source": 13
										},
										{
											"begin": 4655,
											"end": 4710,
											"name": "DUP1",
											"source": 13
										},
										{
											"begin": 4655,
											"end": 4710,
											"name": "ISZERO",
											"source": 13
										},
										{
											"begin": 4655,
											"end": 4710,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "196"
										},
										{
											"begin": 4655,
											"end": 4710,
											"name": "JUMPI",
											"source": 13
										},
										{
											"begin": 4655,
											"end": 4710,
											"name": "PUSH",
											"source": 13,
											"value": "0"
										},
										{
											"begin": 4655,
											"end": 4710,
											"name": "DUP1",
											"source": 13
										},
										{
											"begin": 4655,
											"end": 4710,
											"name": "REVERT",
											"source": 13
										},
										{
											"begin": 4655,
											"end": 4710,
											"name": "tag",
											"source": 13,
											"value": "196"
										},
										{
											"begin": 4655,
											"end": 4710,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 4655,
											"end": 4710,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 4655,
											"end": 4710,
											"name": "GAS",
											"source": 13
										},
										{
											"begin": 4655,
											"end": 4710,
											"name": "CALL",
											"source": 13
										},
										{
											"begin": 4655,
											"end": 4710,
											"name": "ISZERO",
											"source": 13
										},
										{
											"begin": 4655,
											"end": 4710,
											"name": "DUP1",
											"source": 13
										},
										{
											"begin": 4655,
											"end": 4710,
											"name": "ISZERO",
											"source": 13
										},
										{
											"begin": 4655,
											"end": 4710,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "198"
										},
										{
											"begin": 4655,
											"end": 4710,
											"name": "JUMPI",
											"source": 13
										},
										{
											"begin": 4655,
											"end": 4710,
											"name": "RETURNDATASIZE",
											"source": 13
										},
										{
											"begin": 4655,
											"end": 4710,
											"name": "PUSH",
											"source": 13,
											"value": "0"
										},
										{
											"begin": 4655,
											"end": 4710,
											"name": "DUP1",
											"source": 13
										},
										{
											"begin": 4655,
											"end": 4710,
											"name": "RETURNDATACOPY",
											"source": 13
										},
										{
											"begin": 4655,
											"end": 4710,
											"name": "RETURNDATASIZE",
											"source": 13
										},
										{
											"begin": 4655,
											"end": 4710,
											"name": "PUSH",
											"source": 13,
											"value": "0"
										},
										{
											"begin": 4655,
											"end": 4710,
											"name": "REVERT",
											"source": 13
										},
										{
											"begin": 4655,
											"end": 4710,
											"name": "tag",
											"source": 13,
											"value": "198"
										},
										{
											"begin": 4655,
											"end": 4710,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 4720,
											"end": 4738,
											"name": "PUSH",
											"source": 13,
											"value": "0"
										},
										{
											"begin": 4720,
											"end": 4738,
											"name": "DUP3",
											"source": 13
										},
										{
											"begin": 4720,
											"end": 4738,
											"name": "DUP2",
											"source": 13
										},
										{
											"begin": 4720,
											"end": 4738,
											"name": "MSTORE",
											"source": 13
										},
										{
											"begin": 4720,
											"end": 4728,
											"name": "PUSH",
											"source": 13,
											"value": "8"
										},
										{
											"begin": 4720,
											"end": 4738,
											"name": "PUSH",
											"source": 13,
											"value": "20"
										},
										{
											"begin": 4720,
											"end": 4738,
											"name": "MSTORE",
											"source": 13
										},
										{
											"begin": 4720,
											"end": 4738,
											"name": "PUSH",
											"source": 13,
											"value": "40"
										},
										{
											"begin": 4720,
											"end": 4738,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 4720,
											"end": 4738,
											"name": "KECCAK256",
											"source": 13
										},
										{
											"begin": 4720,
											"end": 4744,
											"name": "PUSH",
											"source": 13,
											"value": "3"
										},
										{
											"begin": 4720,
											"end": 4744,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 4720,
											"end": 4766,
											"name": "DUP1",
											"source": 13
										},
										{
											"begin": 4720,
											"end": 4766,
											"name": "SLOAD",
											"source": 13
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "NOT",
											"source": -1
										},
										{
											"begin": 4720,
											"end": 4766,
											"name": "AND",
											"source": 13
										},
										{
											"begin": 4755,
											"end": 4765,
											"name": "CALLER",
											"source": 13
										},
										{
											"begin": 4720,
											"end": 4766,
											"name": "OR",
											"source": 13
										},
										{
											"begin": 4720,
											"end": 4766,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 4720,
											"end": 4766,
											"name": "SSTORE",
											"source": 13
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 4776,
											"end": 4797,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "184"
										},
										{
											"begin": 4776,
											"end": 4785,
											"name": "PUSH",
											"source": 13,
											"value": "2"
										},
										{
											"begin": 1032,
											"end": 1051,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 1032,
											"end": 1051,
											"name": "SLOAD",
											"source": 8
										},
										{
											"begin": 1050,
											"end": 1051,
											"name": "PUSH",
											"source": 8,
											"value": "1"
										},
										{
											"begin": 1032,
											"end": 1051,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 1032,
											"end": 1051,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 1032,
											"end": 1051,
											"name": "SSTORE",
											"source": 8
										},
										{
											"begin": 945,
											"end": 1068,
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 1831,
											"end": 1932,
											"name": "tag",
											"source": 0,
											"value": "61"
										},
										{
											"begin": 1831,
											"end": 1932,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1094,
											"end": 1107,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "201"
										},
										{
											"begin": 1094,
											"end": 1105,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "188"
										},
										{
											"begin": 1094,
											"end": 1107,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 1094,
											"end": 1107,
											"name": "tag",
											"source": 0,
											"value": "201"
										},
										{
											"begin": 1094,
											"end": 1107,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1895,
											"end": 1925,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "203"
										},
										{
											"begin": 1922,
											"end": 1923,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 1895,
											"end": 1913,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "204"
										},
										{
											"begin": 1895,
											"end": 1925,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 1895,
											"end": 1925,
											"modifierDepth": 1,
											"name": "tag",
											"source": 0,
											"value": "203"
										},
										{
											"begin": 1895,
											"end": 1925,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1831,
											"end": 1932,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 5892,
											"end": 6371,
											"name": "tag",
											"source": 13,
											"value": "74"
										},
										{
											"begin": 5892,
											"end": 6371,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 5938,
											"end": 5950,
											"name": "PUSH",
											"source": 13,
											"value": "60"
										},
										{
											"begin": 5962,
											"end": 5978,
											"name": "PUSH",
											"source": 13,
											"value": "0"
										},
										{
											"begin": 5981,
											"end": 6000,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "207"
										},
										{
											"begin": 5981,
											"end": 5990,
											"name": "PUSH",
											"source": 13,
											"value": "3"
										},
										{
											"begin": 918,
											"end": 932,
											"name": "SLOAD",
											"source": 8
										},
										{
											"begin": 918,
											"end": 932,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 827,
											"end": 939,
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 5981,
											"end": 6000,
											"name": "tag",
											"source": 13,
											"value": "207"
										},
										{
											"begin": 5981,
											"end": 6000,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 5962,
											"end": 6000,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 5962,
											"end": 6000,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 6010,
											"end": 6033,
											"name": "PUSH",
											"source": 13,
											"value": "0"
										},
										{
											"begin": 6047,
											"end": 6066,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "208"
										},
										{
											"begin": 6047,
											"end": 6056,
											"name": "PUSH",
											"source": 13,
											"value": "2"
										},
										{
											"begin": 918,
											"end": 932,
											"name": "SLOAD",
											"source": 8
										},
										{
											"begin": 918,
											"end": 932,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 827,
											"end": 939,
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 6047,
											"end": 6066,
											"name": "tag",
											"source": 13,
											"value": "208"
										},
										{
											"begin": 6047,
											"end": 6066,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 6036,
											"end": 6066,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "209"
										},
										{
											"begin": 6036,
											"end": 6066,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 6036,
											"end": 6044,
											"name": "DUP4",
											"source": 13
										},
										{
											"begin": 6036,
											"end": 6066,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "170"
										},
										{
											"begin": 6036,
											"end": 6066,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 6036,
											"end": 6066,
											"name": "tag",
											"source": 13,
											"value": "209"
										},
										{
											"begin": 6036,
											"end": 6066,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 6010,
											"end": 6066,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 6010,
											"end": 6066,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 6076,
											"end": 6093,
											"name": "PUSH",
											"source": 13,
											"value": "0"
										},
										{
											"begin": 6106,
											"end": 6121,
											"name": "DUP2",
											"source": 13
										},
										{
											"begin": 6096,
											"end": 6122,
											"name": "PUSH",
											"source": 13,
											"value": "FFFFFFFFFFFFFFFF"
										},
										{
											"begin": 6096,
											"end": 6122,
											"name": "DUP2",
											"source": 13
										},
										{
											"begin": 6096,
											"end": 6122,
											"name": "GT",
											"source": 13
										},
										{
											"begin": 6096,
											"end": 6122,
											"name": "ISZERO",
											"source": 13
										},
										{
											"begin": 6096,
											"end": 6122,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "211"
										},
										{
											"begin": 6096,
											"end": 6122,
											"name": "JUMPI",
											"source": 13
										},
										{
											"begin": 6096,
											"end": 6122,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "211"
										},
										{
											"begin": 6096,
											"end": 6122,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "115"
										},
										{
											"begin": 6096,
											"end": 6122,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 6096,
											"end": 6122,
											"name": "tag",
											"source": 13,
											"value": "211"
										},
										{
											"begin": 6096,
											"end": 6122,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 6096,
											"end": 6122,
											"name": "PUSH",
											"source": 13,
											"value": "40"
										},
										{
											"begin": 6096,
											"end": 6122,
											"name": "MLOAD",
											"source": 13
										},
										{
											"begin": 6096,
											"end": 6122,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 6096,
											"end": 6122,
											"name": "DUP1",
											"source": 13
										},
										{
											"begin": 6096,
											"end": 6122,
											"name": "DUP3",
											"source": 13
										},
										{
											"begin": 6096,
											"end": 6122,
											"name": "MSTORE",
											"source": 13
										},
										{
											"begin": 6096,
											"end": 6122,
											"name": "DUP1",
											"source": 13
										},
										{
											"begin": 6096,
											"end": 6122,
											"name": "PUSH",
											"source": 13,
											"value": "20"
										},
										{
											"begin": 6096,
											"end": 6122,
											"name": "MUL",
											"source": 13
										},
										{
											"begin": 6096,
											"end": 6122,
											"name": "PUSH",
											"source": 13,
											"value": "20"
										},
										{
											"begin": 6096,
											"end": 6122,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 6096,
											"end": 6122,
											"name": "DUP3",
											"source": 13
										},
										{
											"begin": 6096,
											"end": 6122,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 6096,
											"end": 6122,
											"name": "PUSH",
											"source": 13,
											"value": "40"
										},
										{
											"begin": 6096,
											"end": 6122,
											"name": "MSTORE",
											"source": 13
										},
										{
											"begin": 6096,
											"end": 6122,
											"name": "DUP1",
											"source": 13
										},
										{
											"begin": 6096,
											"end": 6122,
											"name": "ISZERO",
											"source": 13
										},
										{
											"begin": 6096,
											"end": 6122,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "212"
										},
										{
											"begin": 6096,
											"end": 6122,
											"name": "JUMPI",
											"source": 13
										},
										{
											"begin": 6096,
											"end": 6122,
											"name": "DUP2",
											"source": 13
										},
										{
											"begin": 6096,
											"end": 6122,
											"name": "PUSH",
											"source": 13,
											"value": "20"
										},
										{
											"begin": 6096,
											"end": 6122,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 6096,
											"end": 6122,
											"name": "tag",
											"source": 13,
											"value": "213"
										},
										{
											"begin": 6096,
											"end": 6122,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 6096,
											"end": 6122,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "214"
										},
										{
											"begin": 6096,
											"end": 6122,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "119"
										},
										{
											"begin": 6096,
											"end": 6122,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 6096,
											"end": 6122,
											"name": "tag",
											"source": 13,
											"value": "214"
										},
										{
											"begin": 6096,
											"end": 6122,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 6096,
											"end": 6122,
											"name": "DUP2",
											"source": 13
										},
										{
											"begin": 6096,
											"end": 6122,
											"name": "MSTORE",
											"source": 13
										},
										{
											"begin": 6096,
											"end": 6122,
											"name": "PUSH",
											"source": 13,
											"value": "20"
										},
										{
											"begin": 6096,
											"end": 6122,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 6096,
											"end": 6122,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 6096,
											"end": 6122,
											"name": "PUSH",
											"source": 13,
											"value": "1"
										},
										{
											"begin": 6096,
											"end": 6122,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 6096,
											"end": 6122,
											"name": "SUB",
											"source": 13
										},
										{
											"begin": 6096,
											"end": 6122,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 6096,
											"end": 6122,
											"name": "DUP2",
											"source": 13
										},
										{
											"begin": 6096,
											"end": 6122,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "213"
										},
										{
											"begin": 6096,
											"end": 6122,
											"name": "JUMPI",
											"source": 13
										},
										{
											"begin": 6096,
											"end": 6122,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 6096,
											"end": 6122,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 6096,
											"end": 6122,
											"name": "tag",
											"source": 13,
											"value": "212"
										},
										{
											"begin": 6096,
											"end": 6122,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 6096,
											"end": 6122,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 6076,
											"end": 6122,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 6076,
											"end": 6122,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 6132,
											"end": 6146,
											"name": "PUSH",
											"source": 13,
											"value": "0"
										},
										{
											"begin": 6165,
											"end": 6171,
											"name": "DUP1",
											"source": 13
										},
										{
											"begin": 6160,
											"end": 6344,
											"name": "tag",
											"source": 13,
											"value": "215"
										},
										{
											"begin": 6160,
											"end": 6344,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 6181,
											"end": 6189,
											"name": "DUP5",
											"source": 13
										},
										{
											"begin": 6177,
											"end": 6178,
											"name": "DUP2",
											"source": 13
										},
										{
											"begin": 6177,
											"end": 6189,
											"name": "LT",
											"source": 13
										},
										{
											"begin": 6160,
											"end": 6344,
											"name": "ISZERO",
											"source": 13
										},
										{
											"begin": 6160,
											"end": 6344,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "121"
										},
										{
											"begin": 6160,
											"end": 6344,
											"name": "JUMPI",
											"source": 13
										},
										{
											"begin": 6215,
											"end": 6223,
											"name": "PUSH",
											"source": 13,
											"value": "8"
										},
										{
											"begin": 6215,
											"end": 6230,
											"name": "PUSH",
											"source": 13,
											"value": "0"
										},
										{
											"begin": 6224,
											"end": 6229,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "218"
										},
										{
											"begin": 6224,
											"end": 6225,
											"name": "DUP4",
											"source": 13
										},
										{
											"begin": 6228,
											"end": 6229,
											"name": "PUSH",
											"source": 13,
											"value": "1"
										},
										{
											"begin": 6224,
											"end": 6229,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "108"
										},
										{
											"begin": 6224,
											"end": 6229,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 6224,
											"end": 6229,
											"name": "tag",
											"source": 13,
											"value": "218"
										},
										{
											"begin": 6224,
											"end": 6229,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 6215,
											"end": 6230,
											"name": "DUP2",
											"source": 13
										},
										{
											"begin": 6215,
											"end": 6230,
											"name": "MSTORE",
											"source": 13
										},
										{
											"begin": 6215,
											"end": 6230,
											"name": "PUSH",
											"source": 13,
											"value": "20"
										},
										{
											"begin": 6215,
											"end": 6230,
											"name": "DUP2",
											"source": 13
										},
										{
											"begin": 6215,
											"end": 6230,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 6215,
											"end": 6230,
											"name": "SWAP2",
											"source": 13
										},
										{
											"begin": 6215,
											"end": 6230,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 6215,
											"end": 6230,
											"name": "SWAP2",
											"source": 13
										},
										{
											"begin": 6215,
											"end": 6230,
											"name": "MSTORE",
											"source": 13
										},
										{
											"begin": 6215,
											"end": 6230,
											"name": "PUSH",
											"source": 13,
											"value": "40"
										},
										{
											"begin": 6215,
											"end": 6230,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "0"
										},
										{
											"begin": 6215,
											"end": 6230,
											"name": "KECCAK256",
											"source": 13
										},
										{
											"begin": 6215,
											"end": 6237,
											"name": "PUSH",
											"source": 13,
											"value": "5"
										},
										{
											"begin": 6215,
											"end": 6237,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 6215,
											"end": 6237,
											"name": "SLOAD",
											"source": 13
										},
										{
											"begin": 6215,
											"end": 6237,
											"name": "PUSH",
											"source": 13,
											"value": "FF"
										},
										{
											"begin": 6215,
											"end": 6237,
											"name": "AND",
											"source": 13
										},
										{
											"begin": 6210,
											"end": 6334,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "219"
										},
										{
											"begin": 6210,
											"end": 6334,
											"name": "JUMPI",
											"source": 13
										},
										{
											"begin": 6275,
											"end": 6283,
											"name": "PUSH",
											"source": 13,
											"value": "8"
										},
										{
											"begin": 6275,
											"end": 6290,
											"name": "PUSH",
											"source": 13,
											"value": "0"
										},
										{
											"begin": 6284,
											"end": 6289,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "220"
										},
										{
											"begin": 6284,
											"end": 6285,
											"name": "DUP4",
											"source": 13
										},
										{
											"begin": 6288,
											"end": 6289,
											"name": "PUSH",
											"source": 13,
											"value": "1"
										},
										{
											"begin": 6284,
											"end": 6289,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "108"
										},
										{
											"begin": 6284,
											"end": 6289,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 6284,
											"end": 6289,
											"name": "tag",
											"source": 13,
											"value": "220"
										},
										{
											"begin": 6284,
											"end": 6289,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 6275,
											"end": 6290,
											"name": "DUP2",
											"source": 13
										},
										{
											"begin": 6275,
											"end": 6290,
											"name": "MSTORE",
											"source": 13
										},
										{
											"begin": 6275,
											"end": 6290,
											"name": "PUSH",
											"source": 13,
											"value": "20"
										},
										{
											"begin": 6275,
											"end": 6290,
											"name": "DUP1",
											"source": 13
										},
										{
											"begin": 6275,
											"end": 6290,
											"name": "DUP3",
											"source": 13
										},
										{
											"begin": 6275,
											"end": 6290,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 6275,
											"end": 6290,
											"name": "SWAP3",
											"source": 13
										},
										{
											"begin": 6275,
											"end": 6290,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 6275,
											"end": 6290,
											"name": "SWAP3",
											"source": 13
										},
										{
											"begin": 6275,
											"end": 6290,
											"name": "MSTORE",
											"source": 13
										},
										{
											"begin": 6275,
											"end": 6290,
											"name": "PUSH",
											"source": 13,
											"value": "40"
										},
										{
											"begin": 6275,
											"end": 6290,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 6275,
											"end": 6290,
											"name": "DUP2",
											"source": 13
										},
										{
											"begin": 6275,
											"end": 6290,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "0"
										},
										{
											"begin": 6275,
											"end": 6290,
											"name": "KECCAK256",
											"source": 13
										},
										{
											"begin": 6257,
											"end": 6290,
											"name": "DUP2",
											"source": 13
										},
										{
											"begin": 6257,
											"end": 6290,
											"name": "MLOAD",
											"source": 13
										},
										{
											"begin": 6257,
											"end": 6290,
											"name": "PUSH",
											"source": 13,
											"value": "C0"
										},
										{
											"begin": 6257,
											"end": 6290,
											"name": "DUP2",
											"source": 13
										},
										{
											"begin": 6257,
											"end": 6290,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 6257,
											"end": 6290,
											"name": "DUP4",
											"source": 13
										},
										{
											"begin": 6257,
											"end": 6290,
											"name": "MSTORE",
											"source": 13
										},
										{
											"begin": 6257,
											"end": 6290,
											"name": "DUP2",
											"source": 13
										},
										{
											"begin": 6257,
											"end": 6290,
											"name": "SLOAD",
											"source": 13
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 6257,
											"end": 6290,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 6257,
											"end": 6290,
											"name": "DUP2",
											"source": 13
										},
										{
											"begin": 6257,
											"end": 6290,
											"name": "AND",
											"source": 13
										},
										{
											"begin": 6257,
											"end": 6290,
											"name": "DUP3",
											"source": 13
										},
										{
											"begin": 6257,
											"end": 6290,
											"name": "MSTORE",
											"source": 13
										},
										{
											"begin": 6257,
											"end": 6290,
											"name": "PUSH",
											"source": 13,
											"value": "1"
										},
										{
											"begin": 6257,
											"end": 6290,
											"name": "DUP4",
											"source": 13
										},
										{
											"begin": 6257,
											"end": 6290,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 6257,
											"end": 6290,
											"name": "SLOAD",
											"source": 13
										},
										{
											"begin": 6257,
											"end": 6290,
											"name": "SWAP5",
											"source": 13
										},
										{
											"begin": 6257,
											"end": 6290,
											"name": "DUP3",
											"source": 13
										},
										{
											"begin": 6257,
											"end": 6290,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 6257,
											"end": 6290,
											"name": "SWAP5",
											"source": 13
										},
										{
											"begin": 6257,
											"end": 6290,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 6257,
											"end": 6290,
											"name": "SWAP5",
											"source": 13
										},
										{
											"begin": 6257,
											"end": 6290,
											"name": "MSTORE",
											"source": 13
										},
										{
											"begin": 6257,
											"end": 6290,
											"name": "PUSH",
											"source": 13,
											"value": "2"
										},
										{
											"begin": 6257,
											"end": 6290,
											"name": "DUP3",
											"source": 13
										},
										{
											"begin": 6257,
											"end": 6290,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 6257,
											"end": 6290,
											"name": "SLOAD",
											"source": 13
										},
										{
											"begin": 6257,
											"end": 6290,
											"name": "DUP5",
											"source": 13
										},
										{
											"begin": 6257,
											"end": 6290,
											"name": "AND",
											"source": 13
										},
										{
											"begin": 6257,
											"end": 6290,
											"name": "SWAP3",
											"source": 13
										},
										{
											"begin": 6257,
											"end": 6290,
											"name": "DUP2",
											"source": 13
										},
										{
											"begin": 6257,
											"end": 6290,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 6257,
											"end": 6290,
											"name": "SWAP3",
											"source": 13
										},
										{
											"begin": 6257,
											"end": 6290,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 6257,
											"end": 6290,
											"name": "SWAP3",
											"source": 13
										},
										{
											"begin": 6257,
											"end": 6290,
											"name": "MSTORE",
											"source": 13
										},
										{
											"begin": 6257,
											"end": 6290,
											"name": "PUSH",
											"source": 13,
											"value": "3"
										},
										{
											"begin": 6257,
											"end": 6290,
											"name": "DUP2",
											"source": 13
										},
										{
											"begin": 6257,
											"end": 6290,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 6257,
											"end": 6290,
											"name": "SLOAD",
											"source": 13
										},
										{
											"begin": 6257,
											"end": 6290,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 6257,
											"end": 6290,
											"name": "SWAP3",
											"source": 13
										},
										{
											"begin": 6257,
											"end": 6290,
											"name": "AND",
											"source": 13
										},
										{
											"begin": 6257,
											"end": 6290,
											"name": "PUSH",
											"source": 13,
											"value": "60"
										},
										{
											"begin": 6257,
											"end": 6290,
											"name": "DUP3",
											"source": 13
										},
										{
											"begin": 6257,
											"end": 6290,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 6257,
											"end": 6290,
											"name": "MSTORE",
											"source": 13
										},
										{
											"begin": 6257,
											"end": 6290,
											"name": "PUSH",
											"source": 13,
											"value": "4"
										},
										{
											"begin": 6257,
											"end": 6290,
											"name": "DUP3",
											"source": 13
										},
										{
											"begin": 6257,
											"end": 6290,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 6257,
											"end": 6290,
											"name": "SLOAD",
											"source": 13
										},
										{
											"begin": 6257,
											"end": 6290,
											"name": "PUSH",
											"source": 13,
											"value": "80"
										},
										{
											"begin": 6257,
											"end": 6290,
											"name": "DUP3",
											"source": 13
										},
										{
											"begin": 6257,
											"end": 6290,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 6257,
											"end": 6290,
											"name": "MSTORE",
											"source": 13
										},
										{
											"begin": 6257,
											"end": 6290,
											"name": "PUSH",
											"source": 13,
											"value": "5"
										},
										{
											"begin": 6257,
											"end": 6290,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 6257,
											"end": 6290,
											"name": "SWAP2",
											"source": 13
										},
										{
											"begin": 6257,
											"end": 6290,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 6257,
											"end": 6290,
											"name": "SLOAD",
											"source": 13
										},
										{
											"begin": 6257,
											"end": 6290,
											"name": "PUSH",
											"source": 13,
											"value": "FF"
										},
										{
											"begin": 6257,
											"end": 6290,
											"name": "AND",
											"source": 13
										},
										{
											"begin": 6257,
											"end": 6290,
											"name": "ISZERO",
											"source": 13
										},
										{
											"begin": 6257,
											"end": 6290,
											"name": "ISZERO",
											"source": 13
										},
										{
											"begin": 6257,
											"end": 6290,
											"name": "PUSH",
											"source": 13,
											"value": "A0"
										},
										{
											"begin": 6257,
											"end": 6290,
											"name": "DUP3",
											"source": 13
										},
										{
											"begin": 6257,
											"end": 6290,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 6257,
											"end": 6290,
											"name": "MSTORE",
											"source": 13
										},
										{
											"begin": 6257,
											"end": 6272,
											"name": "DUP4",
											"source": 13
										},
										{
											"begin": 6257,
											"end": 6272,
											"name": "MLOAD",
											"source": 13
										},
										{
											"begin": 6257,
											"end": 6261,
											"name": "DUP5",
											"source": 13
										},
										{
											"begin": 6257,
											"end": 6261,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 6262,
											"end": 6271,
											"name": "DUP5",
											"source": 13
										},
										{
											"begin": 6262,
											"end": 6271,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 6257,
											"end": 6272,
											"name": "DUP2",
											"source": 13
										},
										{
											"begin": 6257,
											"end": 6272,
											"name": "LT",
											"source": 13
										},
										{
											"begin": 6257,
											"end": 6272,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "222"
										},
										{
											"begin": 6257,
											"end": 6272,
											"name": "JUMPI",
											"source": 13
										},
										{
											"begin": 6257,
											"end": 6272,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "222"
										},
										{
											"begin": 6257,
											"end": 6272,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "128"
										},
										{
											"begin": 6257,
											"end": 6272,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 6257,
											"end": 6272,
											"name": "tag",
											"source": 13,
											"value": "222"
										},
										{
											"begin": 6257,
											"end": 6272,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 6257,
											"end": 6272,
											"name": "PUSH",
											"source": 13,
											"value": "20"
										},
										{
											"begin": 6257,
											"end": 6272,
											"name": "MUL",
											"source": 13
										},
										{
											"begin": 6257,
											"end": 6272,
											"name": "PUSH",
											"source": 13,
											"value": "20"
										},
										{
											"begin": 6257,
											"end": 6272,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 6257,
											"end": 6272,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 6257,
											"end": 6290,
											"name": "DUP2",
											"source": 13
										},
										{
											"begin": 6257,
											"end": 6290,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 6257,
											"end": 6290,
											"name": "MSTORE",
											"source": 13
										},
										{
											"begin": 6257,
											"end": 6290,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 6308,
											"end": 6319,
											"name": "DUP2",
											"source": 13
										},
										{
											"begin": 6308,
											"end": 6319,
											"name": "DUP1",
											"source": 13
										},
										{
											"begin": 6308,
											"end": 6319,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "223"
										},
										{
											"begin": 6308,
											"end": 6319,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 6308,
											"end": 6319,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "111"
										},
										{
											"begin": 6308,
											"end": 6319,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 6308,
											"end": 6319,
											"name": "tag",
											"source": 13,
											"value": "223"
										},
										{
											"begin": 6308,
											"end": 6319,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 6308,
											"end": 6319,
											"name": "SWAP3",
											"source": 13
										},
										{
											"begin": 6308,
											"end": 6319,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 6308,
											"end": 6319,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 6210,
											"end": 6334,
											"name": "tag",
											"source": 13,
											"value": "219"
										},
										{
											"begin": 6210,
											"end": 6334,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 6191,
											"end": 6194,
											"name": "DUP1",
											"source": 13
										},
										{
											"begin": 6191,
											"end": 6194,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "224"
										},
										{
											"begin": 6191,
											"end": 6194,
											"name": "DUP2",
											"source": 13
										},
										{
											"begin": 6191,
											"end": 6194,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "111"
										},
										{
											"begin": 6191,
											"end": 6194,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 6191,
											"end": 6194,
											"name": "tag",
											"source": 13,
											"value": "224"
										},
										{
											"begin": 6191,
											"end": 6194,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 6191,
											"end": 6194,
											"name": "SWAP2",
											"source": 13
										},
										{
											"begin": 6191,
											"end": 6194,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 6191,
											"end": 6194,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 6160,
											"end": 6344,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "215"
										},
										{
											"begin": 6160,
											"end": 6344,
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 5008,
											"end": 5180,
											"name": "tag",
											"source": 13,
											"value": "83"
										},
										{
											"begin": 5008,
											"end": 5180,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 5065,
											"end": 5069,
											"name": "PUSH",
											"source": 13,
											"value": "0"
										},
										{
											"begin": 5089,
											"end": 5090,
											"name": "PUSH",
											"source": 13,
											"value": "5"
										},
										{
											"begin": 5065,
											"end": 5069,
											"name": "DUP2",
											"source": 13
										},
										{
											"begin": 5141,
											"end": 5149,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "227"
										},
										{
											"begin": 5089,
											"end": 5090,
											"name": "DUP3",
											"source": 13
										},
										{
											"begin": 5141,
											"end": 5147,
											"name": "DUP6",
											"source": 13
										},
										{
											"begin": 5141,
											"end": 5149,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "228"
										},
										{
											"begin": 5141,
											"end": 5149,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 5141,
											"end": 5149,
											"name": "tag",
											"source": 13,
											"value": "227"
										},
										{
											"begin": 5141,
											"end": 5149,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 5131,
											"end": 5150,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "229"
										},
										{
											"begin": 5131,
											"end": 5150,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 5131,
											"end": 5137,
											"name": "DUP6",
											"source": 13
										},
										{
											"begin": 5131,
											"end": 5150,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "108"
										},
										{
											"begin": 5131,
											"end": 5150,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 5131,
											"end": 5150,
											"name": "tag",
											"source": 13,
											"value": "229"
										},
										{
											"begin": 5131,
											"end": 5150,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 5122,
											"end": 5150,
											"name": "SWAP5",
											"source": 13
										},
										{
											"begin": 5008,
											"end": 5180,
											"name": "SWAP4",
											"source": 13
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 5008,
											"end": 5180,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 1572,
											"end": 2224,
											"name": "tag",
											"source": 13,
											"value": "92"
										},
										{
											"begin": 1572,
											"end": 2224,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 2261,
											"end": 2282,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "231"
										},
										{
											"begin": 2261,
											"end": 2280,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "161"
										},
										{
											"begin": 2261,
											"end": 2282,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 2261,
											"end": 2282,
											"name": "tag",
											"source": 1,
											"value": "231"
										},
										{
											"begin": 2261,
											"end": 2282,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 1679,
											"end": 1680,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 13,
											"value": "0"
										},
										{
											"begin": 1670,
											"end": 1676,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 13
										},
										{
											"begin": 1670,
											"end": 1680,
											"modifierDepth": 1,
											"name": "GT",
											"source": 13
										},
										{
											"begin": 1662,
											"end": 1713,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "233"
										},
										{
											"begin": 1662,
											"end": 1713,
											"modifierDepth": 1,
											"name": "JUMPI",
											"source": 13
										},
										{
											"begin": 1662,
											"end": 1713,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 13,
											"value": "40"
										},
										{
											"begin": 1662,
											"end": 1713,
											"name": "MLOAD",
											"source": 13
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "461BCD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E5"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 1662,
											"end": 1713,
											"name": "DUP2",
											"source": 13
										},
										{
											"begin": 1662,
											"end": 1713,
											"name": "MSTORE",
											"source": 13
										},
										{
											"begin": 6244,
											"end": 6246,
											"name": "PUSH",
											"source": 14,
											"value": "20"
										},
										{
											"begin": 1662,
											"end": 1713,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 13,
											"value": "4"
										},
										{
											"begin": 1662,
											"end": 1713,
											"name": "DUP3",
											"source": 13
										},
										{
											"begin": 1662,
											"end": 1713,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 6226,
											"end": 6247,
											"name": "MSTORE",
											"source": 14
										},
										{
											"begin": 6283,
											"end": 6285,
											"name": "PUSH",
											"source": 14,
											"value": "1C"
										},
										{
											"begin": 6263,
											"end": 6281,
											"name": "PUSH",
											"source": 14,
											"value": "24"
										},
										{
											"begin": 6263,
											"end": 6281,
											"name": "DUP3",
											"source": 14
										},
										{
											"begin": 6263,
											"end": 6281,
											"name": "ADD",
											"source": 14
										},
										{
											"begin": 6256,
											"end": 6286,
											"name": "MSTORE",
											"source": 14
										},
										{
											"begin": 6322,
											"end": 6352,
											"name": "PUSH",
											"source": 14,
											"value": "5072696365206D757374206265206174206C6561737420312077656900000000"
										},
										{
											"begin": 6302,
											"end": 6320,
											"name": "PUSH",
											"source": 14,
											"value": "44"
										},
										{
											"begin": 6302,
											"end": 6320,
											"name": "DUP3",
											"source": 14
										},
										{
											"begin": 6302,
											"end": 6320,
											"name": "ADD",
											"source": 14
										},
										{
											"begin": 6295,
											"end": 6353,
											"name": "MSTORE",
											"source": 14
										},
										{
											"begin": 6370,
											"end": 6388,
											"name": "PUSH",
											"source": 14,
											"value": "64"
										},
										{
											"begin": 6370,
											"end": 6388,
											"name": "ADD",
											"source": 14
										},
										{
											"begin": 1662,
											"end": 1713,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "164"
										},
										{
											"begin": 6042,
											"end": 6394,
											"name": "JUMP",
											"source": 14
										},
										{
											"begin": 1662,
											"end": 1713,
											"modifierDepth": 1,
											"name": "tag",
											"source": 13,
											"value": "233"
										},
										{
											"begin": 1662,
											"end": 1713,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 1733,
											"end": 1748,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 13,
											"value": "0"
										},
										{
											"begin": 1733,
											"end": 1748,
											"name": "DUP3",
											"source": 13
										},
										{
											"begin": 1733,
											"end": 1748,
											"name": "DUP2",
											"source": 13
										},
										{
											"begin": 1733,
											"end": 1748,
											"name": "MSTORE",
											"source": 13
										},
										{
											"begin": 1733,
											"end": 1738,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 13,
											"value": "7"
										},
										{
											"begin": 1733,
											"end": 1748,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 13,
											"value": "20"
										},
										{
											"begin": 1733,
											"end": 1748,
											"name": "MSTORE",
											"source": 13
										},
										{
											"begin": 1733,
											"end": 1748,
											"name": "PUSH",
											"source": 13,
											"value": "40"
										},
										{
											"begin": 1733,
											"end": 1748,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 1733,
											"end": 1748,
											"name": "KECCAK256",
											"source": 13
										},
										{
											"begin": 1733,
											"end": 1755,
											"name": "SLOAD",
											"source": 13
										},
										{
											"begin": 1733,
											"end": 1755,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 13,
											"value": "FF"
										},
										{
											"begin": 1733,
											"end": 1755,
											"modifierDepth": 1,
											"name": "AND",
											"source": 13
										},
										{
											"begin": 1731,
											"end": 1756,
											"modifierDepth": 1,
											"name": "ISZERO",
											"source": 13
										},
										{
											"begin": 1723,
											"end": 1788,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "236"
										},
										{
											"begin": 1723,
											"end": 1788,
											"modifierDepth": 1,
											"name": "JUMPI",
											"source": 13
										},
										{
											"begin": 1723,
											"end": 1788,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 13,
											"value": "40"
										},
										{
											"begin": 1723,
											"end": 1788,
											"name": "MLOAD",
											"source": 13
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "461BCD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E5"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 1723,
											"end": 1788,
											"name": "DUP2",
											"source": 13
										},
										{
											"begin": 1723,
											"end": 1788,
											"name": "MSTORE",
											"source": 13
										},
										{
											"begin": 6601,
											"end": 6603,
											"name": "PUSH",
											"source": 14,
											"value": "20"
										},
										{
											"begin": 1723,
											"end": 1788,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 13,
											"value": "4"
										},
										{
											"begin": 1723,
											"end": 1788,
											"name": "DUP3",
											"source": 13
										},
										{
											"begin": 1723,
											"end": 1788,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 6583,
											"end": 6604,
											"name": "MSTORE",
											"source": 14
										},
										{
											"begin": 6640,
											"end": 6642,
											"name": "PUSH",
											"source": 14,
											"value": "1C"
										},
										{
											"begin": 6620,
											"end": 6638,
											"name": "PUSH",
											"source": 14,
											"value": "24"
										},
										{
											"begin": 6620,
											"end": 6638,
											"name": "DUP3",
											"source": 14
										},
										{
											"begin": 6620,
											"end": 6638,
											"name": "ADD",
											"source": 14
										},
										{
											"begin": 6613,
											"end": 6643,
											"name": "MSTORE",
											"source": 14
										},
										{
											"begin": 6679,
											"end": 6709,
											"name": "PUSH",
											"source": 14,
											"value": "4F6E6520546F6B656E204944204C6973746564204F6E652054696D6500000000"
										},
										{
											"begin": 6659,
											"end": 6677,
											"name": "PUSH",
											"source": 14,
											"value": "44"
										},
										{
											"begin": 6659,
											"end": 6677,
											"name": "DUP3",
											"source": 14
										},
										{
											"begin": 6659,
											"end": 6677,
											"name": "ADD",
											"source": 14
										},
										{
											"begin": 6652,
											"end": 6710,
											"name": "MSTORE",
											"source": 14
										},
										{
											"begin": 6727,
											"end": 6745,
											"name": "PUSH",
											"source": 14,
											"value": "64"
										},
										{
											"begin": 6727,
											"end": 6745,
											"name": "ADD",
											"source": 14
										},
										{
											"begin": 1723,
											"end": 1788,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "164"
										},
										{
											"begin": 6399,
											"end": 6751,
											"name": "JUMP",
											"source": 14
										},
										{
											"begin": 1723,
											"end": 1788,
											"modifierDepth": 1,
											"name": "tag",
											"source": 13,
											"value": "236"
										},
										{
											"begin": 1723,
											"end": 1788,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 1847,
											"end": 1852,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 13,
											"value": "9"
										},
										{
											"begin": 1847,
											"end": 1852,
											"name": "SLOAD",
											"source": 13
										},
										{
											"begin": 1847,
											"end": 1902,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 13,
											"value": "40"
										},
										{
											"begin": 1847,
											"end": 1902,
											"name": "MLOAD",
											"source": 13
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "23B872DD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 1847,
											"end": 1902,
											"name": "DUP2",
											"source": 13
										},
										{
											"begin": 1847,
											"end": 1902,
											"name": "MSTORE",
											"source": 13
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 1847,
											"end": 1852,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 1847,
											"end": 1852,
											"name": "SWAP2",
											"source": 13
										},
										{
											"begin": 1847,
											"end": 1852,
											"modifierDepth": 1,
											"name": "AND",
											"source": 13
										},
										{
											"begin": 1847,
											"end": 1852,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 1847,
											"end": 1865,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 13,
											"value": "23B872DD"
										},
										{
											"begin": 1847,
											"end": 1865,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 1847,
											"end": 1902,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "239"
										},
										{
											"begin": 1847,
											"end": 1902,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 1866,
											"end": 1876,
											"modifierDepth": 1,
											"name": "CALLER",
											"source": 13
										},
										{
											"begin": 1866,
											"end": 1876,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 1886,
											"end": 1890,
											"modifierDepth": 1,
											"name": "ADDRESS",
											"source": 13
										},
										{
											"begin": 1886,
											"end": 1890,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 1893,
											"end": 1901,
											"name": "DUP8",
											"source": 13
										},
										{
											"begin": 1893,
											"end": 1901,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 1847,
											"end": 1902,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 13,
											"value": "4"
										},
										{
											"begin": 1847,
											"end": 1902,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 1847,
											"end": 1902,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "174"
										},
										{
											"begin": 1847,
											"end": 1902,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 1847,
											"end": 1902,
											"modifierDepth": 1,
											"name": "tag",
											"source": 13,
											"value": "239"
										},
										{
											"begin": 1847,
											"end": 1902,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 1847,
											"end": 1902,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 13,
											"value": "0"
										},
										{
											"begin": 1847,
											"end": 1902,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 13,
											"value": "40"
										},
										{
											"begin": 1847,
											"end": 1902,
											"modifierDepth": 1,
											"name": "MLOAD",
											"source": 13
										},
										{
											"begin": 1847,
											"end": 1902,
											"modifierDepth": 1,
											"name": "DUP1",
											"source": 13
										},
										{
											"begin": 1847,
											"end": 1902,
											"modifierDepth": 1,
											"name": "DUP4",
											"source": 13
										},
										{
											"begin": 1847,
											"end": 1902,
											"modifierDepth": 1,
											"name": "SUB",
											"source": 13
										},
										{
											"begin": 1847,
											"end": 1902,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 13
										},
										{
											"begin": 1847,
											"end": 1902,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 13,
											"value": "0"
										},
										{
											"begin": 1847,
											"end": 1902,
											"modifierDepth": 1,
											"name": "DUP8",
											"source": 13
										},
										{
											"begin": 1847,
											"end": 1902,
											"modifierDepth": 1,
											"name": "DUP1",
											"source": 13
										},
										{
											"begin": 1847,
											"end": 1902,
											"modifierDepth": 1,
											"name": "EXTCODESIZE",
											"source": 13
										},
										{
											"begin": 1847,
											"end": 1902,
											"modifierDepth": 1,
											"name": "ISZERO",
											"source": 13
										},
										{
											"begin": 1847,
											"end": 1902,
											"modifierDepth": 1,
											"name": "DUP1",
											"source": 13
										},
										{
											"begin": 1847,
											"end": 1902,
											"modifierDepth": 1,
											"name": "ISZERO",
											"source": 13
										},
										{
											"begin": 1847,
											"end": 1902,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "240"
										},
										{
											"begin": 1847,
											"end": 1902,
											"modifierDepth": 1,
											"name": "JUMPI",
											"source": 13
										},
										{
											"begin": 1847,
											"end": 1902,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 13,
											"value": "0"
										},
										{
											"begin": 1847,
											"end": 1902,
											"name": "DUP1",
											"source": 13
										},
										{
											"begin": 1847,
											"end": 1902,
											"modifierDepth": 1,
											"name": "REVERT",
											"source": 13
										},
										{
											"begin": 1847,
											"end": 1902,
											"modifierDepth": 1,
											"name": "tag",
											"source": 13,
											"value": "240"
										},
										{
											"begin": 1847,
											"end": 1902,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 1847,
											"end": 1902,
											"modifierDepth": 1,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 1847,
											"end": 1902,
											"modifierDepth": 1,
											"name": "GAS",
											"source": 13
										},
										{
											"begin": 1847,
											"end": 1902,
											"modifierDepth": 1,
											"name": "CALL",
											"source": 13
										},
										{
											"begin": 1847,
											"end": 1902,
											"modifierDepth": 1,
											"name": "ISZERO",
											"source": 13
										},
										{
											"begin": 1847,
											"end": 1902,
											"modifierDepth": 1,
											"name": "DUP1",
											"source": 13
										},
										{
											"begin": 1847,
											"end": 1902,
											"modifierDepth": 1,
											"name": "ISZERO",
											"source": 13
										},
										{
											"begin": 1847,
											"end": 1902,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "242"
										},
										{
											"begin": 1847,
											"end": 1902,
											"modifierDepth": 1,
											"name": "JUMPI",
											"source": 13
										},
										{
											"begin": 1847,
											"end": 1902,
											"modifierDepth": 1,
											"name": "RETURNDATASIZE",
											"source": 13
										},
										{
											"begin": 1847,
											"end": 1902,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 13,
											"value": "0"
										},
										{
											"begin": 1847,
											"end": 1902,
											"name": "DUP1",
											"source": 13
										},
										{
											"begin": 1847,
											"end": 1902,
											"modifierDepth": 1,
											"name": "RETURNDATACOPY",
											"source": 13
										},
										{
											"begin": 1847,
											"end": 1902,
											"modifierDepth": 1,
											"name": "RETURNDATASIZE",
											"source": 13
										},
										{
											"begin": 1847,
											"end": 1902,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 13,
											"value": "0"
										},
										{
											"begin": 1847,
											"end": 1902,
											"modifierDepth": 1,
											"name": "REVERT",
											"source": 13
										},
										{
											"begin": 1847,
											"end": 1902,
											"modifierDepth": 1,
											"name": "tag",
											"source": 13,
											"value": "242"
										},
										{
											"begin": 1847,
											"end": 1902,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 1847,
											"end": 1902,
											"modifierDepth": 1,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 1847,
											"end": 1902,
											"modifierDepth": 1,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 1847,
											"end": 1902,
											"modifierDepth": 1,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 1847,
											"end": 1902,
											"modifierDepth": 1,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 1912,
											"end": 1933,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "243"
										},
										{
											"begin": 1912,
											"end": 1921,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 13,
											"value": "3"
										},
										{
											"begin": 1032,
											"end": 1051,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 1032,
											"end": 1051,
											"name": "SLOAD",
											"source": 8
										},
										{
											"begin": 1050,
											"end": 1051,
											"name": "PUSH",
											"source": 8,
											"value": "1"
										},
										{
											"begin": 1032,
											"end": 1051,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 1032,
											"end": 1051,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 1032,
											"end": 1051,
											"name": "SSTORE",
											"source": 8
										},
										{
											"begin": 945,
											"end": 1068,
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 1912,
											"end": 1933,
											"modifierDepth": 1,
											"name": "tag",
											"source": 13,
											"value": "243"
										},
										{
											"begin": 1912,
											"end": 1933,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 1964,
											"end": 2047,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 13,
											"value": "40"
										},
										{
											"begin": 1964,
											"end": 2047,
											"name": "DUP1",
											"source": 13
										},
										{
											"begin": 1964,
											"end": 2047,
											"name": "MLOAD",
											"source": 13
										},
										{
											"begin": 1964,
											"end": 2047,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 13,
											"value": "C0"
										},
										{
											"begin": 1964,
											"end": 2047,
											"name": "DUP2",
											"source": 13
										},
										{
											"begin": 1964,
											"end": 2047,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 1964,
											"end": 2047,
											"name": "DUP3",
											"source": 13
										},
										{
											"begin": 1964,
											"end": 2047,
											"name": "MSTORE",
											"source": 13
										},
										{
											"begin": 1968,
											"end": 1981,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 13,
											"value": "A"
										},
										{
											"begin": 1968,
											"end": 1981,
											"name": "DUP1",
											"source": 13
										},
										{
											"begin": 1968,
											"end": 1981,
											"name": "SLOAD",
											"source": 13
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 1968,
											"end": 1981,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 1968,
											"end": 1981,
											"name": "DUP2",
											"source": 13
										},
										{
											"begin": 1968,
											"end": 1981,
											"modifierDepth": 1,
											"name": "AND",
											"source": 13
										},
										{
											"begin": 1964,
											"end": 2047,
											"name": "DUP4",
											"source": 13
										},
										{
											"begin": 1964,
											"end": 2047,
											"name": "MSTORE",
											"source": 13
										},
										{
											"begin": 1964,
											"end": 2047,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 13,
											"value": "20"
										},
										{
											"begin": 1964,
											"end": 2047,
											"name": "DUP1",
											"source": 13
										},
										{
											"begin": 1964,
											"end": 2047,
											"name": "DUP5",
											"source": 13
										},
										{
											"begin": 1964,
											"end": 2047,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 1964,
											"end": 2047,
											"name": "DUP8",
											"source": 13
										},
										{
											"begin": 1964,
											"end": 2047,
											"name": "DUP2",
											"source": 13
										},
										{
											"begin": 1964,
											"end": 2047,
											"name": "MSTORE",
											"source": 13
										},
										{
											"begin": 1999,
											"end": 2009,
											"modifierDepth": 1,
											"name": "CALLER",
											"source": 13
										},
										{
											"begin": 1964,
											"end": 2047,
											"name": "DUP6",
											"source": 13
										},
										{
											"begin": 1964,
											"end": 2047,
											"name": "DUP8",
											"source": 13
										},
										{
											"begin": 1964,
											"end": 2047,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 1964,
											"end": 2047,
											"name": "DUP2",
											"source": 13
										},
										{
											"begin": 1964,
											"end": 2047,
											"name": "DUP2",
											"source": 13
										},
										{
											"begin": 1964,
											"end": 2047,
											"name": "MSTORE",
											"source": 13
										},
										{
											"begin": 2027,
											"end": 2031,
											"modifierDepth": 1,
											"name": "ADDRESS",
											"source": 13
										},
										{
											"begin": 1964,
											"end": 2047,
											"name": "PUSH",
											"source": 13,
											"value": "60"
										},
										{
											"begin": 1964,
											"end": 2047,
											"name": "DUP9",
											"source": 13
										},
										{
											"begin": 1964,
											"end": 2047,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 1964,
											"end": 2047,
											"name": "DUP2",
											"source": 13
										},
										{
											"begin": 1964,
											"end": 2047,
											"name": "DUP2",
											"source": 13
										},
										{
											"begin": 1964,
											"end": 2047,
											"name": "MSTORE",
											"source": 13
										},
										{
											"begin": 1964,
											"end": 2047,
											"name": "PUSH",
											"source": 13,
											"value": "80"
										},
										{
											"begin": 1964,
											"end": 2047,
											"name": "DUP10",
											"source": 13
										},
										{
											"begin": 1964,
											"end": 2047,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 1964,
											"end": 2047,
											"name": "DUP12",
											"source": 13
										},
										{
											"begin": 1964,
											"end": 2047,
											"name": "DUP2",
											"source": 13
										},
										{
											"begin": 1964,
											"end": 2047,
											"name": "MSTORE",
											"source": 13
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "0"
										},
										{
											"begin": 1964,
											"end": 2047,
											"name": "PUSH",
											"source": 13,
											"value": "A0"
										},
										{
											"begin": 1964,
											"end": 2047,
											"name": "DUP12",
											"source": 13
										},
										{
											"begin": 1964,
											"end": 2047,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 1964,
											"end": 2047,
											"name": "DUP2",
											"source": 13
										},
										{
											"begin": 1964,
											"end": 2047,
											"name": "DUP2",
											"source": 13
										},
										{
											"begin": 1964,
											"end": 2047,
											"name": "MSTORE",
											"source": 13
										},
										{
											"begin": 1943,
											"end": 1961,
											"name": "DUP15",
											"source": 13
										},
										{
											"begin": 1943,
											"end": 1961,
											"name": "DUP3",
											"source": 13
										},
										{
											"begin": 1943,
											"end": 1961,
											"name": "MSTORE",
											"source": 13
										},
										{
											"begin": 1943,
											"end": 1951,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 13,
											"value": "8"
										},
										{
											"begin": 1943,
											"end": 1961,
											"name": "DUP10",
											"source": 13
										},
										{
											"begin": 1943,
											"end": 1961,
											"name": "MSTORE",
											"source": 13
										},
										{
											"begin": 1943,
											"end": 1961,
											"name": "DUP13",
											"source": 13
										},
										{
											"begin": 1943,
											"end": 1961,
											"name": "DUP3",
											"source": 13
										},
										{
											"begin": 1943,
											"end": 1961,
											"name": "KECCAK256",
											"source": 13
										},
										{
											"begin": 1943,
											"end": 2047,
											"name": "SWAP12",
											"source": 13
										},
										{
											"begin": 1943,
											"end": 2047,
											"name": "MLOAD",
											"source": 13
										},
										{
											"begin": 1943,
											"end": 2047,
											"name": "DUP13",
											"source": 13
										},
										{
											"begin": 1943,
											"end": 2047,
											"name": "SLOAD",
											"source": 13
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "NOT",
											"source": -1
										},
										{
											"begin": 1943,
											"end": 2047,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 1943,
											"end": 2047,
											"name": "DUP2",
											"source": 13
										},
										{
											"begin": 1943,
											"end": 2047,
											"modifierDepth": 1,
											"name": "AND",
											"source": 13
										},
										{
											"begin": 1943,
											"end": 2047,
											"name": "SWAP2",
											"source": 13
										},
										{
											"begin": 1943,
											"end": 2047,
											"name": "DUP13",
											"source": 13
										},
										{
											"begin": 1943,
											"end": 2047,
											"modifierDepth": 1,
											"name": "AND",
											"source": 13
										},
										{
											"begin": 1943,
											"end": 2047,
											"name": "SWAP2",
											"source": 13
										},
										{
											"begin": 1943,
											"end": 2047,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 1943,
											"end": 2047,
											"name": "SWAP2",
											"source": 13
										},
										{
											"begin": 1943,
											"end": 2047,
											"modifierDepth": 1,
											"name": "OR",
											"source": 13
										},
										{
											"begin": 1943,
											"end": 2047,
											"name": "DUP14",
											"source": 13
										},
										{
											"begin": 1943,
											"end": 2047,
											"name": "SSTORE",
											"source": 13
										},
										{
											"begin": 1943,
											"end": 2047,
											"name": "SWAP8",
											"source": 13
										},
										{
											"begin": 1943,
											"end": 2047,
											"name": "MLOAD",
											"source": 13
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": 1943,
											"end": 2047,
											"name": "DUP14",
											"source": 13
										},
										{
											"begin": 1943,
											"end": 2047,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 1943,
											"end": 2047,
											"name": "SSTORE",
											"source": 13
										},
										{
											"begin": 1943,
											"end": 2047,
											"name": "SWAP5",
											"source": 13
										},
										{
											"begin": 1943,
											"end": 2047,
											"name": "MLOAD",
											"source": 13
										},
										{
											"begin": 1943,
											"end": 2047,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 13,
											"value": "2"
										},
										{
											"begin": 1943,
											"end": 2047,
											"name": "DUP13",
											"source": 13
										},
										{
											"begin": 1943,
											"end": 2047,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 1943,
											"end": 2047,
											"name": "DUP1",
											"source": 13
										},
										{
											"begin": 1943,
											"end": 2047,
											"name": "SLOAD",
											"source": 13
										},
										{
											"begin": 1943,
											"end": 2047,
											"name": "DUP10",
											"source": 13
										},
										{
											"begin": 1943,
											"end": 2047,
											"modifierDepth": 1,
											"name": "AND",
											"source": 13
										},
										{
											"begin": 1943,
											"end": 2047,
											"name": "SWAP2",
											"source": 13
										},
										{
											"begin": 1943,
											"end": 2047,
											"name": "DUP12",
											"source": 13
										},
										{
											"begin": 1943,
											"end": 2047,
											"modifierDepth": 1,
											"name": "AND",
											"source": 13
										},
										{
											"begin": 1943,
											"end": 2047,
											"name": "SWAP2",
											"source": 13
										},
										{
											"begin": 1943,
											"end": 2047,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 1943,
											"end": 2047,
											"name": "SWAP2",
											"source": 13
										},
										{
											"begin": 1943,
											"end": 2047,
											"modifierDepth": 1,
											"name": "OR",
											"source": 13
										},
										{
											"begin": 1943,
											"end": 2047,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 1943,
											"end": 2047,
											"name": "SSTORE",
											"source": 13
										},
										{
											"begin": 1943,
											"end": 2047,
											"name": "SWAP2",
											"source": 13
										},
										{
											"begin": 1943,
											"end": 2047,
											"name": "MLOAD",
											"source": 13
										},
										{
											"begin": 1943,
											"end": 2047,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 13,
											"value": "3"
										},
										{
											"begin": 1943,
											"end": 2047,
											"name": "DUP12",
											"source": 13
										},
										{
											"begin": 1943,
											"end": 2047,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 1943,
											"end": 2047,
											"name": "DUP1",
											"source": 13
										},
										{
											"begin": 1943,
											"end": 2047,
											"name": "SLOAD",
											"source": 13
										},
										{
											"begin": 1943,
											"end": 2047,
											"name": "DUP9",
											"source": 13
										},
										{
											"begin": 1943,
											"end": 2047,
											"modifierDepth": 1,
											"name": "AND",
											"source": 13
										},
										{
											"begin": 1943,
											"end": 2047,
											"name": "SWAP2",
											"source": 13
										},
										{
											"begin": 1943,
											"end": 2047,
											"name": "DUP11",
											"source": 13
										},
										{
											"begin": 1943,
											"end": 2047,
											"modifierDepth": 1,
											"name": "AND",
											"source": 13
										},
										{
											"begin": 1943,
											"end": 2047,
											"name": "SWAP2",
											"source": 13
										},
										{
											"begin": 1943,
											"end": 2047,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 1943,
											"end": 2047,
											"name": "SWAP2",
											"source": 13
										},
										{
											"begin": 1943,
											"end": 2047,
											"modifierDepth": 1,
											"name": "OR",
											"source": 13
										},
										{
											"begin": 1943,
											"end": 2047,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 1943,
											"end": 2047,
											"name": "SSTORE",
											"source": 13
										},
										{
											"begin": 1943,
											"end": 2047,
											"name": "MLOAD",
											"source": 13
										},
										{
											"begin": 1943,
											"end": 2047,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 13,
											"value": "4"
										},
										{
											"begin": 1943,
											"end": 2047,
											"name": "DUP11",
											"source": 13
										},
										{
											"begin": 1943,
											"end": 2047,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 1943,
											"end": 2047,
											"name": "SSTORE",
											"source": 13
										},
										{
											"begin": 1943,
											"end": 2047,
											"name": "SWAP2",
											"source": 13
										},
										{
											"begin": 1943,
											"end": 2047,
											"name": "MLOAD",
											"source": 13
										},
										{
											"begin": 1943,
											"end": 2047,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 13,
											"value": "5"
										},
										{
											"begin": 1943,
											"end": 2047,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 1943,
											"end": 2047,
											"name": "SWAP9",
											"source": 13
										},
										{
											"begin": 1943,
											"end": 2047,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 1943,
											"end": 2047,
											"name": "DUP1",
											"source": 13
										},
										{
											"begin": 1943,
											"end": 2047,
											"name": "SLOAD",
											"source": 13
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "FF"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "NOT",
											"source": -1
										},
										{
											"begin": 1943,
											"end": 2047,
											"modifierDepth": 1,
											"name": "AND",
											"source": 13
										},
										{
											"begin": 1943,
											"end": 2047,
											"name": "SWAP9",
											"source": 13
										},
										{
											"begin": 1943,
											"end": 2047,
											"modifierDepth": 1,
											"name": "ISZERO",
											"source": 13
										},
										{
											"begin": 1943,
											"end": 2047,
											"modifierDepth": 1,
											"name": "ISZERO",
											"source": 13
										},
										{
											"begin": 1943,
											"end": 2047,
											"name": "SWAP9",
											"source": 13
										},
										{
											"begin": 1943,
											"end": 2047,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 1943,
											"end": 2047,
											"name": "SWAP9",
											"source": 13
										},
										{
											"begin": 1943,
											"end": 2047,
											"modifierDepth": 1,
											"name": "OR",
											"source": 13
										},
										{
											"begin": 1943,
											"end": 2047,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 1943,
											"end": 2047,
											"name": "SWAP8",
											"source": 13
										},
										{
											"begin": 1943,
											"end": 2047,
											"name": "SSTORE",
											"source": 13
										},
										{
											"begin": 2057,
											"end": 2067,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 13,
											"value": "6"
										},
										{
											"begin": 2057,
											"end": 2077,
											"name": "DUP5",
											"source": 13
										},
										{
											"begin": 2057,
											"end": 2077,
											"name": "MSTORE",
											"source": 13
										},
										{
											"begin": 2057,
											"end": 2077,
											"name": "DUP8",
											"source": 13
										},
										{
											"begin": 2057,
											"end": 2077,
											"name": "DUP2",
											"source": 13
										},
										{
											"begin": 2057,
											"end": 2077,
											"name": "KECCAK256",
											"source": 13
										},
										{
											"begin": 2057,
											"end": 2088,
											"name": "DUP1",
											"source": 13
										},
										{
											"begin": 2057,
											"end": 2088,
											"name": "SLOAD",
											"source": 13
										},
										{
											"begin": 2057,
											"end": 2088,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 2057,
											"end": 2088,
											"name": "SWAP4",
											"source": 13
										},
										{
											"begin": 2057,
											"end": 2088,
											"modifierDepth": 1,
											"name": "AND",
											"source": 13
										},
										{
											"begin": 2057,
											"end": 2088,
											"name": "DUP3",
											"source": 13
										},
										{
											"begin": 2057,
											"end": 2088,
											"modifierDepth": 1,
											"name": "OR",
											"source": 13
										},
										{
											"begin": 2057,
											"end": 2088,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 2057,
											"end": 2088,
											"name": "SWAP3",
											"source": 13
										},
										{
											"begin": 2057,
											"end": 2088,
											"name": "SSTORE",
											"source": 13
										},
										{
											"begin": 2098,
											"end": 2103,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 13,
											"value": "7"
										},
										{
											"begin": 2098,
											"end": 2113,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 2098,
											"end": 2113,
											"name": "SWAP3",
											"source": 13
										},
										{
											"begin": 2098,
											"end": 2113,
											"name": "MSTORE",
											"source": 13
										},
										{
											"begin": 2098,
											"end": 2113,
											"name": "DUP6",
											"source": 13
										},
										{
											"begin": 2098,
											"end": 2113,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 2098,
											"end": 2113,
											"name": "KECCAK256",
											"source": 13
										},
										{
											"begin": 2098,
											"end": 2133,
											"name": "DUP1",
											"source": 13
										},
										{
											"begin": 2098,
											"end": 2133,
											"name": "SLOAD",
											"source": 13
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "100"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A8"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "NOT",
											"source": -1
										},
										{
											"begin": 2098,
											"end": 2133,
											"modifierDepth": 1,
											"name": "AND",
											"source": 13
										},
										{
											"begin": 1968,
											"end": 1981,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 13,
											"value": "100"
										},
										{
											"begin": 2098,
											"end": 2133,
											"name": "DUP4",
											"source": 13
										},
										{
											"begin": 2098,
											"end": 2133,
											"modifierDepth": 1,
											"name": "MUL",
											"source": 13
										},
										{
											"begin": 2098,
											"end": 2133,
											"modifierDepth": 1,
											"name": "OR",
											"source": 13
										},
										{
											"begin": 2098,
											"end": 2133,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 2098,
											"end": 2133,
											"name": "SSTORE",
											"source": 13
										},
										{
											"begin": 2158,
											"end": 2171,
											"name": "SWAP2",
											"source": 13
										},
										{
											"begin": 2158,
											"end": 2171,
											"name": "SLOAD",
											"source": 13
										},
										{
											"begin": 2148,
											"end": 2217,
											"name": "SWAP4",
											"source": 13
										},
										{
											"begin": 2148,
											"end": 2217,
											"name": "MLOAD",
											"source": 13
										},
										{
											"begin": 2148,
											"end": 2217,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 13,
											"value": "A0C6C0D02D86FDACECBAA5FDF5894BAB204E31A778250474108540733A9B8D19"
										},
										{
											"begin": 2148,
											"end": 2217,
											"name": "SWAP5",
											"source": 13
										},
										{
											"begin": 2148,
											"end": 2217,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "244"
										},
										{
											"begin": 2148,
											"end": 2217,
											"name": "SWAP5",
											"source": 13
										},
										{
											"begin": 2158,
											"end": 2171,
											"name": "SWAP3",
											"source": 13
										},
										{
											"begin": 2158,
											"end": 2171,
											"modifierDepth": 1,
											"name": "AND",
											"source": 13
										},
										{
											"begin": 2158,
											"end": 2171,
											"name": "SWAP3",
											"source": 13
										},
										{
											"begin": 1964,
											"end": 2047,
											"name": "DUP8",
											"source": 13
										},
										{
											"begin": 1964,
											"end": 2047,
											"name": "SWAP3",
											"source": 13
										},
										{
											"begin": 1999,
											"end": 2009,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 1999,
											"end": 2009,
											"name": "SWAP2",
											"source": 13
										},
										{
											"begin": 1964,
											"end": 2047,
											"name": "DUP8",
											"source": 13
										},
										{
											"begin": 1964,
											"end": 2047,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 2148,
											"end": 2217,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "183"
										},
										{
											"begin": 2148,
											"end": 2217,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 2148,
											"end": 2217,
											"modifierDepth": 1,
											"name": "tag",
											"source": 13,
											"value": "244"
										},
										{
											"begin": 2148,
											"end": 2217,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 2148,
											"end": 2217,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 13,
											"value": "40"
										},
										{
											"begin": 2148,
											"end": 2217,
											"modifierDepth": 1,
											"name": "MLOAD",
											"source": 13
										},
										{
											"begin": 2148,
											"end": 2217,
											"modifierDepth": 1,
											"name": "DUP1",
											"source": 13
										},
										{
											"begin": 2148,
											"end": 2217,
											"modifierDepth": 1,
											"name": "SWAP2",
											"source": 13
										},
										{
											"begin": 2148,
											"end": 2217,
											"modifierDepth": 1,
											"name": "SUB",
											"source": 13
										},
										{
											"begin": 2148,
											"end": 2217,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 2148,
											"end": 2217,
											"modifierDepth": 1,
											"name": "LOG1",
											"source": 13
										},
										{
											"begin": 2303,
											"end": 2323,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "246"
										},
										{
											"begin": 1716,
											"end": 1717,
											"name": "PUSH",
											"source": 1,
											"value": "1"
										},
										{
											"begin": 2809,
											"end": 2816,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 2809,
											"end": 2831,
											"name": "SSTORE",
											"source": 1
										},
										{
											"begin": 2629,
											"end": 2838,
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 2303,
											"end": 2323,
											"name": "tag",
											"source": 1,
											"value": "246"
										},
										{
											"begin": 2303,
											"end": 2323,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 1572,
											"end": 2224,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 1572,
											"end": 2224,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 1572,
											"end": 2224,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 3430,
											"end": 4270,
											"name": "tag",
											"source": 13,
											"value": "95"
										},
										{
											"begin": 3430,
											"end": 4270,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 2261,
											"end": 2282,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "248"
										},
										{
											"begin": 2261,
											"end": 2280,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "161"
										},
										{
											"begin": 2261,
											"end": 2282,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 2261,
											"end": 2282,
											"name": "tag",
											"source": 1,
											"value": "248"
										},
										{
											"begin": 2261,
											"end": 2282,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 3538,
											"end": 3539,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 13,
											"value": "0"
										},
										{
											"begin": 3529,
											"end": 3535,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 13
										},
										{
											"begin": 3529,
											"end": 3539,
											"modifierDepth": 1,
											"name": "GT",
											"source": 13
										},
										{
											"begin": 3521,
											"end": 3572,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "250"
										},
										{
											"begin": 3521,
											"end": 3572,
											"modifierDepth": 1,
											"name": "JUMPI",
											"source": 13
										},
										{
											"begin": 3521,
											"end": 3572,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 13,
											"value": "40"
										},
										{
											"begin": 3521,
											"end": 3572,
											"name": "MLOAD",
											"source": 13
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "461BCD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E5"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 3521,
											"end": 3572,
											"name": "DUP2",
											"source": 13
										},
										{
											"begin": 3521,
											"end": 3572,
											"name": "MSTORE",
											"source": 13
										},
										{
											"begin": 6244,
											"end": 6246,
											"name": "PUSH",
											"source": 14,
											"value": "20"
										},
										{
											"begin": 3521,
											"end": 3572,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 13,
											"value": "4"
										},
										{
											"begin": 3521,
											"end": 3572,
											"name": "DUP3",
											"source": 13
										},
										{
											"begin": 3521,
											"end": 3572,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 6226,
											"end": 6247,
											"name": "MSTORE",
											"source": 14
										},
										{
											"begin": 6283,
											"end": 6285,
											"name": "PUSH",
											"source": 14,
											"value": "1C"
										},
										{
											"begin": 6263,
											"end": 6281,
											"name": "PUSH",
											"source": 14,
											"value": "24"
										},
										{
											"begin": 6263,
											"end": 6281,
											"name": "DUP3",
											"source": 14
										},
										{
											"begin": 6263,
											"end": 6281,
											"name": "ADD",
											"source": 14
										},
										{
											"begin": 6256,
											"end": 6286,
											"name": "MSTORE",
											"source": 14
										},
										{
											"begin": 6322,
											"end": 6352,
											"name": "PUSH",
											"source": 14,
											"value": "5072696365206D757374206265206174206C6561737420312077656900000000"
										},
										{
											"begin": 6302,
											"end": 6320,
											"name": "PUSH",
											"source": 14,
											"value": "44"
										},
										{
											"begin": 6302,
											"end": 6320,
											"name": "DUP3",
											"source": 14
										},
										{
											"begin": 6302,
											"end": 6320,
											"name": "ADD",
											"source": 14
										},
										{
											"begin": 6295,
											"end": 6353,
											"name": "MSTORE",
											"source": 14
										},
										{
											"begin": 6370,
											"end": 6388,
											"name": "PUSH",
											"source": 14,
											"value": "64"
										},
										{
											"begin": 6370,
											"end": 6388,
											"name": "ADD",
											"source": 14
										},
										{
											"begin": 3521,
											"end": 3572,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "164"
										},
										{
											"begin": 6042,
											"end": 6394,
											"name": "JUMP",
											"source": 14
										},
										{
											"begin": 3521,
											"end": 3572,
											"modifierDepth": 1,
											"name": "tag",
											"source": 13,
											"value": "250"
										},
										{
											"begin": 3521,
											"end": 3572,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 3590,
											"end": 3608,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 13,
											"value": "0"
										},
										{
											"begin": 3590,
											"end": 3608,
											"name": "DUP3",
											"source": 13
										},
										{
											"begin": 3590,
											"end": 3608,
											"name": "DUP2",
											"source": 13
										},
										{
											"begin": 3590,
											"end": 3608,
											"name": "MSTORE",
											"source": 13
										},
										{
											"begin": 3590,
											"end": 3598,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 13,
											"value": "8"
										},
										{
											"begin": 3590,
											"end": 3608,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 13,
											"value": "20"
										},
										{
											"begin": 3590,
											"end": 3608,
											"name": "MSTORE",
											"source": 13
										},
										{
											"begin": 3590,
											"end": 3608,
											"name": "PUSH",
											"source": 13,
											"value": "40"
										},
										{
											"begin": 3590,
											"end": 3608,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 3590,
											"end": 3608,
											"name": "KECCAK256",
											"source": 13
										},
										{
											"begin": 3590,
											"end": 3614,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 13,
											"value": "3"
										},
										{
											"begin": 3590,
											"end": 3614,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 3590,
											"end": 3614,
											"name": "SLOAD",
											"source": 13
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 3590,
											"end": 3614,
											"modifierDepth": 1,
											"name": "AND",
											"source": 13
										},
										{
											"begin": 3618,
											"end": 3628,
											"modifierDepth": 1,
											"name": "CALLER",
											"source": 13
										},
										{
											"begin": 3590,
											"end": 3628,
											"modifierDepth": 1,
											"name": "EQ",
											"source": 13
										},
										{
											"begin": 3582,
											"end": 3667,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "252"
										},
										{
											"begin": 3582,
											"end": 3667,
											"modifierDepth": 1,
											"name": "JUMPI",
											"source": 13
										},
										{
											"begin": 3582,
											"end": 3667,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 13,
											"value": "40"
										},
										{
											"begin": 3582,
											"end": 3667,
											"name": "MLOAD",
											"source": 13
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "461BCD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E5"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 3582,
											"end": 3667,
											"name": "DUP2",
											"source": 13
										},
										{
											"begin": 3582,
											"end": 3667,
											"name": "MSTORE",
											"source": 13
										},
										{
											"begin": 7491,
											"end": 7493,
											"name": "PUSH",
											"source": 14,
											"value": "20"
										},
										{
											"begin": 3582,
											"end": 3667,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 13,
											"value": "4"
										},
										{
											"begin": 3582,
											"end": 3667,
											"name": "DUP3",
											"source": 13
										},
										{
											"begin": 3582,
											"end": 3667,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 7473,
											"end": 7494,
											"name": "MSTORE",
											"source": 14
										},
										{
											"begin": 7530,
											"end": 7532,
											"name": "PUSH",
											"source": 14,
											"value": "23"
										},
										{
											"begin": 7510,
											"end": 7528,
											"name": "PUSH",
											"source": 14,
											"value": "24"
										},
										{
											"begin": 7510,
											"end": 7528,
											"name": "DUP3",
											"source": 14
										},
										{
											"begin": 7510,
											"end": 7528,
											"name": "ADD",
											"source": 14
										},
										{
											"begin": 7503,
											"end": 7533,
											"name": "MSTORE",
											"source": 14
										},
										{
											"begin": 7569,
											"end": 7603,
											"name": "PUSH",
											"source": 14,
											"value": "4F6E6C79206F776E6572204F66207468697320546F6B656E2043616E20526573"
										},
										{
											"begin": 7549,
											"end": 7567,
											"name": "PUSH",
											"source": 14,
											"value": "44"
										},
										{
											"begin": 7549,
											"end": 7567,
											"name": "DUP3",
											"source": 14
										},
										{
											"begin": 7549,
											"end": 7567,
											"name": "ADD",
											"source": 14
										},
										{
											"begin": 7542,
											"end": 7604,
											"name": "MSTORE",
											"source": 14
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "195B1B"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "EA"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 7620,
											"end": 7638,
											"name": "PUSH",
											"source": 14,
											"value": "64"
										},
										{
											"begin": 7620,
											"end": 7638,
											"name": "DUP3",
											"source": 14
										},
										{
											"begin": 7620,
											"end": 7638,
											"name": "ADD",
											"source": 14
										},
										{
											"begin": 7613,
											"end": 7646,
											"name": "MSTORE",
											"source": 14
										},
										{
											"begin": 7663,
											"end": 7682,
											"name": "PUSH",
											"source": 14,
											"value": "84"
										},
										{
											"begin": 7663,
											"end": 7682,
											"name": "ADD",
											"source": 14
										},
										{
											"begin": 3582,
											"end": 3667,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "164"
										},
										{
											"begin": 7289,
											"end": 7688,
											"name": "JUMP",
											"source": 14
										},
										{
											"begin": 3582,
											"end": 3667,
											"modifierDepth": 1,
											"name": "tag",
											"source": 13,
											"value": "252"
										},
										{
											"begin": 3582,
											"end": 3667,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 3709,
											"end": 3727,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 13,
											"value": "0"
										},
										{
											"begin": 3709,
											"end": 3727,
											"name": "DUP3",
											"source": 13
										},
										{
											"begin": 3709,
											"end": 3727,
											"name": "DUP2",
											"source": 13
										},
										{
											"begin": 3709,
											"end": 3727,
											"name": "MSTORE",
											"source": 13
										},
										{
											"begin": 3709,
											"end": 3717,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 13,
											"value": "8"
										},
										{
											"begin": 3709,
											"end": 3727,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 13,
											"value": "20"
										},
										{
											"begin": 3709,
											"end": 3727,
											"name": "MSTORE",
											"source": 13
										},
										{
											"begin": 3709,
											"end": 3727,
											"name": "PUSH",
											"source": 13,
											"value": "40"
										},
										{
											"begin": 3709,
											"end": 3727,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 3709,
											"end": 3727,
											"name": "KECCAK256",
											"source": 13
										},
										{
											"begin": 3709,
											"end": 3733,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 13,
											"value": "3"
										},
										{
											"begin": 3709,
											"end": 3733,
											"name": "DUP2",
											"source": 13
										},
										{
											"begin": 3709,
											"end": 3733,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 3709,
											"end": 3733,
											"name": "SLOAD",
											"source": 13
										},
										{
											"begin": 3680,
											"end": 3705,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 13,
											"value": "2"
										},
										{
											"begin": 3680,
											"end": 3705,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 3680,
											"end": 3705,
											"name": "SWAP2",
											"source": 13
										},
										{
											"begin": 3680,
											"end": 3705,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 3680,
											"end": 3705,
											"name": "SLOAD",
											"source": 13
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 3680,
											"end": 3705,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 3680,
											"end": 3705,
											"name": "DUP2",
											"source": 13
										},
										{
											"begin": 3680,
											"end": 3705,
											"modifierDepth": 1,
											"name": "AND",
											"source": 13
										},
										{
											"begin": 3709,
											"end": 3733,
											"name": "SWAP2",
											"source": 13
										},
										{
											"begin": 3709,
											"end": 3733,
											"modifierDepth": 1,
											"name": "AND",
											"source": 13
										},
										{
											"begin": 3680,
											"end": 3733,
											"modifierDepth": 1,
											"name": "EQ",
											"source": 13
										},
										{
											"begin": 3677,
											"end": 3849,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "257"
										},
										{
											"begin": 3677,
											"end": 3849,
											"modifierDepth": 1,
											"name": "JUMPI",
											"source": 13
										},
										{
											"begin": 3771,
											"end": 3789,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 13,
											"value": "0"
										},
										{
											"begin": 3771,
											"end": 3789,
											"name": "DUP3",
											"source": 13
										},
										{
											"begin": 3771,
											"end": 3789,
											"name": "DUP2",
											"source": 13
										},
										{
											"begin": 3771,
											"end": 3789,
											"name": "MSTORE",
											"source": 13
										},
										{
											"begin": 3771,
											"end": 3779,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 13,
											"value": "8"
										},
										{
											"begin": 3771,
											"end": 3789,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 13,
											"value": "20"
										},
										{
											"begin": 3771,
											"end": 3789,
											"name": "MSTORE",
											"source": 13
										},
										{
											"begin": 3771,
											"end": 3789,
											"name": "PUSH",
											"source": 13,
											"value": "40"
										},
										{
											"begin": 3771,
											"end": 3789,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 3771,
											"end": 3789,
											"name": "KECCAK256",
											"source": 13
										},
										{
											"begin": 3771,
											"end": 3795,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 13,
											"value": "4"
										},
										{
											"begin": 3771,
											"end": 3795,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 3771,
											"end": 3795,
											"name": "SLOAD",
											"source": 13
										},
										{
											"begin": 3800,
											"end": 3806,
											"name": "DUP2",
											"source": 13
										},
										{
											"begin": 3800,
											"end": 3806,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 3756,
											"end": 3796,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "256"
										},
										{
											"begin": 3756,
											"end": 3796,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 3756,
											"end": 3770,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "83"
										},
										{
											"begin": 3756,
											"end": 3796,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 3756,
											"end": 3796,
											"modifierDepth": 1,
											"name": "tag",
											"source": 13,
											"value": "256"
										},
										{
											"begin": 3756,
											"end": 3796,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 3756,
											"end": 3806,
											"modifierDepth": 1,
											"name": "LT",
											"source": 13
										},
										{
											"begin": 3756,
											"end": 3806,
											"modifierDepth": 1,
											"name": "ISZERO",
											"source": 13
										},
										{
											"begin": 3748,
											"end": 3838,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "257"
										},
										{
											"begin": 3748,
											"end": 3838,
											"modifierDepth": 1,
											"name": "JUMPI",
											"source": 13
										},
										{
											"begin": 3748,
											"end": 3838,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 13,
											"value": "40"
										},
										{
											"begin": 3748,
											"end": 3838,
											"name": "MLOAD",
											"source": 13
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "461BCD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E5"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 3748,
											"end": 3838,
											"name": "DUP2",
											"source": 13
										},
										{
											"begin": 3748,
											"end": 3838,
											"name": "MSTORE",
											"source": 13
										},
										{
											"begin": 7895,
											"end": 7897,
											"name": "PUSH",
											"source": 14,
											"value": "20"
										},
										{
											"begin": 3748,
											"end": 3838,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 13,
											"value": "4"
										},
										{
											"begin": 3748,
											"end": 3838,
											"name": "DUP3",
											"source": 13
										},
										{
											"begin": 3748,
											"end": 3838,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 7877,
											"end": 7898,
											"name": "MSTORE",
											"source": 14
										},
										{
											"begin": 7934,
											"end": 7936,
											"name": "PUSH",
											"source": 14,
											"value": "1B"
										},
										{
											"begin": 7914,
											"end": 7932,
											"name": "PUSH",
											"source": 14,
											"value": "24"
										},
										{
											"begin": 7914,
											"end": 7932,
											"name": "DUP3",
											"source": 14
										},
										{
											"begin": 7914,
											"end": 7932,
											"name": "ADD",
											"source": 14
										},
										{
											"begin": 7907,
											"end": 7937,
											"name": "MSTORE",
											"source": 14
										},
										{
											"begin": 7973,
											"end": 8002,
											"name": "PUSH",
											"source": 14,
											"value": "54686973205072696365204973204D6F7265205468616E203230250000000000"
										},
										{
											"begin": 7953,
											"end": 7971,
											"name": "PUSH",
											"source": 14,
											"value": "44"
										},
										{
											"begin": 7953,
											"end": 7971,
											"name": "DUP3",
											"source": 14
										},
										{
											"begin": 7953,
											"end": 7971,
											"name": "ADD",
											"source": 14
										},
										{
											"begin": 7946,
											"end": 8003,
											"name": "MSTORE",
											"source": 14
										},
										{
											"begin": 8020,
											"end": 8038,
											"name": "PUSH",
											"source": 14,
											"value": "64"
										},
										{
											"begin": 8020,
											"end": 8038,
											"name": "ADD",
											"source": 14
										},
										{
											"begin": 3748,
											"end": 3838,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "164"
										},
										{
											"begin": 7693,
											"end": 8044,
											"name": "JUMP",
											"source": 14
										},
										{
											"begin": 3748,
											"end": 3838,
											"modifierDepth": 1,
											"name": "tag",
											"source": 13,
											"value": "257"
										},
										{
											"begin": 3748,
											"end": 3838,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 3858,
											"end": 3863,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 13,
											"value": "9"
										},
										{
											"begin": 3858,
											"end": 3863,
											"name": "SLOAD",
											"source": 13
										},
										{
											"begin": 3858,
											"end": 3913,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 13,
											"value": "40"
										},
										{
											"begin": 3858,
											"end": 3913,
											"name": "MLOAD",
											"source": 13
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "23B872DD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 3858,
											"end": 3913,
											"name": "DUP2",
											"source": 13
										},
										{
											"begin": 3858,
											"end": 3913,
											"name": "MSTORE",
											"source": 13
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 3858,
											"end": 3863,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 3858,
											"end": 3863,
											"name": "SWAP2",
											"source": 13
										},
										{
											"begin": 3858,
											"end": 3863,
											"modifierDepth": 1,
											"name": "AND",
											"source": 13
										},
										{
											"begin": 3858,
											"end": 3863,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 3858,
											"end": 3876,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 13,
											"value": "23B872DD"
										},
										{
											"begin": 3858,
											"end": 3876,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 3858,
											"end": 3913,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "260"
										},
										{
											"begin": 3858,
											"end": 3913,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 3877,
											"end": 3887,
											"modifierDepth": 1,
											"name": "CALLER",
											"source": 13
										},
										{
											"begin": 3877,
											"end": 3887,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 3897,
											"end": 3901,
											"modifierDepth": 1,
											"name": "ADDRESS",
											"source": 13
										},
										{
											"begin": 3897,
											"end": 3901,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 3904,
											"end": 3912,
											"name": "DUP8",
											"source": 13
										},
										{
											"begin": 3904,
											"end": 3912,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 3858,
											"end": 3913,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 13,
											"value": "4"
										},
										{
											"begin": 3858,
											"end": 3913,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 3858,
											"end": 3913,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "174"
										},
										{
											"begin": 3858,
											"end": 3913,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 3858,
											"end": 3913,
											"modifierDepth": 1,
											"name": "tag",
											"source": 13,
											"value": "260"
										},
										{
											"begin": 3858,
											"end": 3913,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 3858,
											"end": 3913,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 13,
											"value": "0"
										},
										{
											"begin": 3858,
											"end": 3913,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 13,
											"value": "40"
										},
										{
											"begin": 3858,
											"end": 3913,
											"modifierDepth": 1,
											"name": "MLOAD",
											"source": 13
										},
										{
											"begin": 3858,
											"end": 3913,
											"modifierDepth": 1,
											"name": "DUP1",
											"source": 13
										},
										{
											"begin": 3858,
											"end": 3913,
											"modifierDepth": 1,
											"name": "DUP4",
											"source": 13
										},
										{
											"begin": 3858,
											"end": 3913,
											"modifierDepth": 1,
											"name": "SUB",
											"source": 13
										},
										{
											"begin": 3858,
											"end": 3913,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 13
										},
										{
											"begin": 3858,
											"end": 3913,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 13,
											"value": "0"
										},
										{
											"begin": 3858,
											"end": 3913,
											"modifierDepth": 1,
											"name": "DUP8",
											"source": 13
										},
										{
											"begin": 3858,
											"end": 3913,
											"modifierDepth": 1,
											"name": "DUP1",
											"source": 13
										},
										{
											"begin": 3858,
											"end": 3913,
											"modifierDepth": 1,
											"name": "EXTCODESIZE",
											"source": 13
										},
										{
											"begin": 3858,
											"end": 3913,
											"modifierDepth": 1,
											"name": "ISZERO",
											"source": 13
										},
										{
											"begin": 3858,
											"end": 3913,
											"modifierDepth": 1,
											"name": "DUP1",
											"source": 13
										},
										{
											"begin": 3858,
											"end": 3913,
											"modifierDepth": 1,
											"name": "ISZERO",
											"source": 13
										},
										{
											"begin": 3858,
											"end": 3913,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "261"
										},
										{
											"begin": 3858,
											"end": 3913,
											"modifierDepth": 1,
											"name": "JUMPI",
											"source": 13
										},
										{
											"begin": 3858,
											"end": 3913,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 13,
											"value": "0"
										},
										{
											"begin": 3858,
											"end": 3913,
											"name": "DUP1",
											"source": 13
										},
										{
											"begin": 3858,
											"end": 3913,
											"modifierDepth": 1,
											"name": "REVERT",
											"source": 13
										},
										{
											"begin": 3858,
											"end": 3913,
											"modifierDepth": 1,
											"name": "tag",
											"source": 13,
											"value": "261"
										},
										{
											"begin": 3858,
											"end": 3913,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 3858,
											"end": 3913,
											"modifierDepth": 1,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 3858,
											"end": 3913,
											"modifierDepth": 1,
											"name": "GAS",
											"source": 13
										},
										{
											"begin": 3858,
											"end": 3913,
											"modifierDepth": 1,
											"name": "CALL",
											"source": 13
										},
										{
											"begin": 3858,
											"end": 3913,
											"modifierDepth": 1,
											"name": "ISZERO",
											"source": 13
										},
										{
											"begin": 3858,
											"end": 3913,
											"modifierDepth": 1,
											"name": "DUP1",
											"source": 13
										},
										{
											"begin": 3858,
											"end": 3913,
											"modifierDepth": 1,
											"name": "ISZERO",
											"source": 13
										},
										{
											"begin": 3858,
											"end": 3913,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "263"
										},
										{
											"begin": 3858,
											"end": 3913,
											"modifierDepth": 1,
											"name": "JUMPI",
											"source": 13
										},
										{
											"begin": 3858,
											"end": 3913,
											"modifierDepth": 1,
											"name": "RETURNDATASIZE",
											"source": 13
										},
										{
											"begin": 3858,
											"end": 3913,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 13,
											"value": "0"
										},
										{
											"begin": 3858,
											"end": 3913,
											"name": "DUP1",
											"source": 13
										},
										{
											"begin": 3858,
											"end": 3913,
											"modifierDepth": 1,
											"name": "RETURNDATACOPY",
											"source": 13
										},
										{
											"begin": 3858,
											"end": 3913,
											"modifierDepth": 1,
											"name": "RETURNDATASIZE",
											"source": 13
										},
										{
											"begin": 3858,
											"end": 3913,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 13,
											"value": "0"
										},
										{
											"begin": 3858,
											"end": 3913,
											"modifierDepth": 1,
											"name": "REVERT",
											"source": 13
										},
										{
											"begin": 3858,
											"end": 3913,
											"modifierDepth": 1,
											"name": "tag",
											"source": 13,
											"value": "263"
										},
										{
											"begin": 3858,
											"end": 3913,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 3923,
											"end": 3938,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 13,
											"value": "0"
										},
										{
											"begin": 3941,
											"end": 3959,
											"name": "DUP4",
											"source": 13
										},
										{
											"begin": 3941,
											"end": 3959,
											"name": "DUP2",
											"source": 13
										},
										{
											"begin": 3941,
											"end": 3959,
											"name": "MSTORE",
											"source": 13
										},
										{
											"begin": 3941,
											"end": 3949,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 13,
											"value": "8"
										},
										{
											"begin": 3941,
											"end": 3959,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 13,
											"value": "20"
										},
										{
											"begin": 3941,
											"end": 3959,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 3941,
											"end": 3959,
											"name": "DUP2",
											"source": 13
										},
										{
											"begin": 3941,
											"end": 3959,
											"name": "MSTORE",
											"source": 13
										},
										{
											"begin": 3941,
											"end": 3959,
											"name": "PUSH",
											"source": 13,
											"value": "40"
										},
										{
											"begin": 3941,
											"end": 3959,
											"name": "DUP1",
											"source": 13
										},
										{
											"begin": 3941,
											"end": 3959,
											"name": "DUP4",
											"source": 13
										},
										{
											"begin": 3941,
											"end": 3959,
											"name": "KECCAK256",
											"source": 13
										},
										{
											"begin": 3969,
											"end": 3979,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 13,
											"value": "2"
										},
										{
											"begin": 3969,
											"end": 3979,
											"name": "DUP1",
											"source": 13
										},
										{
											"begin": 3969,
											"end": 3979,
											"name": "DUP3",
											"source": 13
										},
										{
											"begin": 3969,
											"end": 3979,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 3969,
											"end": 4001,
											"name": "DUP1",
											"source": 13
										},
										{
											"begin": 3969,
											"end": 4001,
											"name": "SLOAD",
											"source": 13
										},
										{
											"begin": 3990,
											"end": 4000,
											"modifierDepth": 1,
											"name": "CALLER",
											"source": 13
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "NOT",
											"source": -1
										},
										{
											"begin": 3969,
											"end": 4001,
											"name": "SWAP2",
											"source": 13
										},
										{
											"begin": 3969,
											"end": 4001,
											"name": "DUP3",
											"source": 13
										},
										{
											"begin": 3969,
											"end": 4001,
											"modifierDepth": 1,
											"name": "AND",
											"source": 13
										},
										{
											"begin": 3969,
											"end": 4001,
											"name": "DUP2",
											"source": 13
										},
										{
											"begin": 3969,
											"end": 4001,
											"modifierDepth": 1,
											"name": "OR",
											"source": 13
										},
										{
											"begin": 3969,
											"end": 4001,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 3969,
											"end": 4001,
											"name": "SWAP3",
											"source": 13
										},
										{
											"begin": 3969,
											"end": 4001,
											"name": "SSTORE",
											"source": 13
										},
										{
											"begin": 4011,
											"end": 4020,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 13,
											"value": "3"
										},
										{
											"begin": 4011,
											"end": 4020,
											"name": "DUP5",
											"source": 13
										},
										{
											"begin": 4011,
											"end": 4020,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 4011,
											"end": 4045,
											"name": "DUP1",
											"source": 13
										},
										{
											"begin": 4011,
											"end": 4045,
											"name": "SLOAD",
											"source": 13
										},
										{
											"begin": 4039,
											"end": 4043,
											"modifierDepth": 1,
											"name": "ADDRESS",
											"source": 13
										},
										{
											"begin": 4011,
											"end": 4045,
											"name": "SWAP3",
											"source": 13
										},
										{
											"begin": 4011,
											"end": 4045,
											"modifierDepth": 1,
											"name": "AND",
											"source": 13
										},
										{
											"begin": 4011,
											"end": 4045,
											"name": "SWAP2",
											"source": 13
										},
										{
											"begin": 4011,
											"end": 4045,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 4011,
											"end": 4045,
											"name": "SWAP2",
											"source": 13
										},
										{
											"begin": 4011,
											"end": 4045,
											"modifierDepth": 1,
											"name": "OR",
											"source": 13
										},
										{
											"begin": 4011,
											"end": 4045,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 4011,
											"end": 4045,
											"name": "SSTORE",
											"source": 13
										},
										{
											"begin": 4055,
											"end": 4065,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 13,
											"value": "5"
										},
										{
											"begin": 4055,
											"end": 4065,
											"name": "DUP4",
											"source": 13
										},
										{
											"begin": 4055,
											"end": 4065,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 4055,
											"end": 4073,
											"name": "DUP1",
											"source": 13
										},
										{
											"begin": 4055,
											"end": 4073,
											"name": "SLOAD",
											"source": 13
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "FF"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "NOT",
											"source": -1
										},
										{
											"begin": 4055,
											"end": 4073,
											"modifierDepth": 1,
											"name": "AND",
											"source": 13
										},
										{
											"begin": 4055,
											"end": 4073,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 4055,
											"end": 4073,
											"name": "SSTORE",
											"source": 13
										},
										{
											"begin": 4083,
											"end": 4092,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 13,
											"value": "4"
										},
										{
											"begin": 4083,
											"end": 4092,
											"name": "DUP4",
											"source": 13
										},
										{
											"begin": 4083,
											"end": 4092,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 4083,
											"end": 4101,
											"name": "DUP9",
											"source": 13
										},
										{
											"begin": 4083,
											"end": 4101,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 4083,
											"end": 4101,
											"name": "SSTORE",
											"source": 13
										},
										{
											"begin": 4111,
											"end": 4116,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 13,
											"value": "7"
										},
										{
											"begin": 4111,
											"end": 4126,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 4111,
											"end": 4126,
											"name": "SWAP5",
											"source": 13
										},
										{
											"begin": 4111,
											"end": 4126,
											"name": "MSTORE",
											"source": 13
										},
										{
											"begin": 4111,
											"end": 4126,
											"name": "SWAP2",
											"source": 13
										},
										{
											"begin": 4111,
											"end": 4126,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 4111,
											"end": 4126,
											"name": "SWAP4",
											"source": 13
										},
										{
											"begin": 4111,
											"end": 4126,
											"name": "KECCAK256",
											"source": 13
										},
										{
											"begin": 4111,
											"end": 4148,
											"name": "DUP1",
											"source": 13
										},
										{
											"begin": 4111,
											"end": 4148,
											"name": "SLOAD",
											"source": 13
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "100"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A8"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "NOT",
											"source": -1
										},
										{
											"begin": 4111,
											"end": 4148,
											"modifierDepth": 1,
											"name": "AND",
											"source": 13
										},
										{
											"begin": 3969,
											"end": 4001,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 13,
											"value": "100"
										},
										{
											"begin": 4111,
											"end": 4148,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 4111,
											"end": 4148,
											"name": "SWAP4",
											"source": 13
										},
										{
											"begin": 4111,
											"end": 4148,
											"modifierDepth": 1,
											"name": "MUL",
											"source": 13
										},
										{
											"begin": 4111,
											"end": 4148,
											"name": "SWAP3",
											"source": 13
										},
										{
											"begin": 4111,
											"end": 4148,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 4111,
											"end": 4148,
											"name": "SWAP3",
											"source": 13
										},
										{
											"begin": 4111,
											"end": 4148,
											"modifierDepth": 1,
											"name": "OR",
											"source": 13
										},
										{
											"begin": 4111,
											"end": 4148,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 4111,
											"end": 4148,
											"name": "SWAP2",
											"source": 13
										},
										{
											"begin": 4111,
											"end": 4148,
											"name": "SSTORE",
											"source": 13
										},
										{
											"begin": 3941,
											"end": 3959,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 3941,
											"end": 3959,
											"name": "SWAP2",
											"source": 13
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 4158,
											"end": 4179,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "264"
										},
										{
											"begin": 4158,
											"end": 4179,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 4158,
											"end": 4177,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "265"
										},
										{
											"begin": 4158,
											"end": 4179,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 4158,
											"end": 4179,
											"modifierDepth": 1,
											"name": "tag",
											"source": 13,
											"value": "264"
										},
										{
											"begin": 4158,
											"end": 4179,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 4204,
											"end": 4217,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 13,
											"value": "A"
										},
										{
											"begin": 4204,
											"end": 4217,
											"name": "SLOAD",
											"source": 13
										},
										{
											"begin": 4194,
											"end": 4263,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 13,
											"value": "40"
										},
										{
											"begin": 4194,
											"end": 4263,
											"name": "MLOAD",
											"source": 13
										},
										{
											"begin": 4194,
											"end": 4263,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 13,
											"value": "A0C6C0D02D86FDACECBAA5FDF5894BAB204E31A778250474108540733A9B8D19"
										},
										{
											"begin": 4194,
											"end": 4263,
											"name": "SWAP2",
											"source": 13
										},
										{
											"begin": 4194,
											"end": 4263,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "266"
										},
										{
											"begin": 4194,
											"end": 4263,
											"name": "SWAP2",
											"source": 13
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 4204,
											"end": 4217,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 4204,
											"end": 4217,
											"name": "SWAP2",
											"source": 13
										},
										{
											"begin": 4204,
											"end": 4217,
											"modifierDepth": 1,
											"name": "AND",
											"source": 13
										},
										{
											"begin": 4204,
											"end": 4217,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 4219,
											"end": 4227,
											"name": "DUP7",
											"source": 13
										},
										{
											"begin": 4219,
											"end": 4227,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 4229,
											"end": 4239,
											"modifierDepth": 1,
											"name": "CALLER",
											"source": 13
										},
										{
											"begin": 4229,
											"end": 4239,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 4249,
											"end": 4253,
											"modifierDepth": 1,
											"name": "ADDRESS",
											"source": 13
										},
										{
											"begin": 4249,
											"end": 4253,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 4256,
											"end": 4262,
											"name": "DUP9",
											"source": 13
										},
										{
											"begin": 4256,
											"end": 4262,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 4194,
											"end": 4263,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "183"
										},
										{
											"begin": 4194,
											"end": 4263,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 4194,
											"end": 4263,
											"modifierDepth": 1,
											"name": "tag",
											"source": 13,
											"value": "266"
										},
										{
											"begin": 4194,
											"end": 4263,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 4194,
											"end": 4263,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 13,
											"value": "40"
										},
										{
											"begin": 4194,
											"end": 4263,
											"modifierDepth": 1,
											"name": "MLOAD",
											"source": 13
										},
										{
											"begin": 4194,
											"end": 4263,
											"modifierDepth": 1,
											"name": "DUP1",
											"source": 13
										},
										{
											"begin": 4194,
											"end": 4263,
											"modifierDepth": 1,
											"name": "SWAP2",
											"source": 13
										},
										{
											"begin": 4194,
											"end": 4263,
											"modifierDepth": 1,
											"name": "SUB",
											"source": 13
										},
										{
											"begin": 4194,
											"end": 4263,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 4194,
											"end": 4263,
											"modifierDepth": 1,
											"name": "LOG1",
											"source": 13
										},
										{
											"begin": 3511,
											"end": 4270,
											"modifierDepth": 1,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 2303,
											"end": 2323,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "246"
										},
										{
											"begin": 1716,
											"end": 1717,
											"name": "PUSH",
											"source": 1,
											"value": "1"
										},
										{
											"begin": 2809,
											"end": 2816,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 2809,
											"end": 2831,
											"name": "SSTORE",
											"source": 1
										},
										{
											"begin": 2629,
											"end": 2838,
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 2081,
											"end": 2279,
											"name": "tag",
											"source": 0,
											"value": "100"
										},
										{
											"begin": 2081,
											"end": 2279,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1094,
											"end": 1107,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "269"
										},
										{
											"begin": 1094,
											"end": 1105,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "188"
										},
										{
											"begin": 1094,
											"end": 1107,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 1094,
											"end": 1107,
											"name": "tag",
											"source": 0,
											"value": "269"
										},
										{
											"begin": 1094,
											"end": 1107,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 2169,
											"end": 2191,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 2169,
											"end": 2191,
											"modifierDepth": 1,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 2161,
											"end": 2234,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "271"
										},
										{
											"begin": 2161,
											"end": 2234,
											"modifierDepth": 1,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 2161,
											"end": 2234,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 2161,
											"end": 2234,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "461BCD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E5"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 2161,
											"end": 2234,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 2161,
											"end": 2234,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 8251,
											"end": 8253,
											"name": "PUSH",
											"source": 14,
											"value": "20"
										},
										{
											"begin": 2161,
											"end": 2234,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 2161,
											"end": 2234,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 2161,
											"end": 2234,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 8233,
											"end": 8254,
											"name": "MSTORE",
											"source": 14
										},
										{
											"begin": 8290,
											"end": 8292,
											"name": "PUSH",
											"source": 14,
											"value": "26"
										},
										{
											"begin": 8270,
											"end": 8288,
											"name": "PUSH",
											"source": 14,
											"value": "24"
										},
										{
											"begin": 8270,
											"end": 8288,
											"name": "DUP3",
											"source": 14
										},
										{
											"begin": 8270,
											"end": 8288,
											"name": "ADD",
											"source": 14
										},
										{
											"begin": 8263,
											"end": 8293,
											"name": "MSTORE",
											"source": 14
										},
										{
											"begin": 8329,
											"end": 8363,
											"name": "PUSH",
											"source": 14,
											"value": "4F776E61626C653A206E6577206F776E657220697320746865207A65726F2061"
										},
										{
											"begin": 8309,
											"end": 8327,
											"name": "PUSH",
											"source": 14,
											"value": "44"
										},
										{
											"begin": 8309,
											"end": 8327,
											"name": "DUP3",
											"source": 14
										},
										{
											"begin": 8309,
											"end": 8327,
											"name": "ADD",
											"source": 14
										},
										{
											"begin": 8302,
											"end": 8364,
											"name": "MSTORE",
											"source": 14
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "646472657373"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "D0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 8380,
											"end": 8398,
											"name": "PUSH",
											"source": 14,
											"value": "64"
										},
										{
											"begin": 8380,
											"end": 8398,
											"name": "DUP3",
											"source": 14
										},
										{
											"begin": 8380,
											"end": 8398,
											"name": "ADD",
											"source": 14
										},
										{
											"begin": 8373,
											"end": 8409,
											"name": "MSTORE",
											"source": 14
										},
										{
											"begin": 8426,
											"end": 8445,
											"name": "PUSH",
											"source": 14,
											"value": "84"
										},
										{
											"begin": 8426,
											"end": 8445,
											"name": "ADD",
											"source": 14
										},
										{
											"begin": 2161,
											"end": 2234,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "164"
										},
										{
											"begin": 8049,
											"end": 8451,
											"name": "JUMP",
											"source": 14
										},
										{
											"begin": 2161,
											"end": 2234,
											"modifierDepth": 1,
											"name": "tag",
											"source": 0,
											"value": "271"
										},
										{
											"begin": 2161,
											"end": 2234,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2244,
											"end": 2272,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "184"
										},
										{
											"begin": 2263,
											"end": 2271,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 2244,
											"end": 2262,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "204"
										},
										{
											"begin": 2244,
											"end": 2272,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 2336,
											"end": 2623,
											"name": "tag",
											"source": 1,
											"value": "161"
										},
										{
											"begin": 2336,
											"end": 2623,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 1759,
											"end": 1760,
											"name": "PUSH",
											"source": 1,
											"value": "2"
										},
										{
											"begin": 2468,
											"end": 2475,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 2468,
											"end": 2475,
											"name": "SLOAD",
											"source": 1
										},
										{
											"begin": 2468,
											"end": 2487,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 2460,
											"end": 2523,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "277"
										},
										{
											"begin": 2460,
											"end": 2523,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 2460,
											"end": 2523,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 2460,
											"end": 2523,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "461BCD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E5"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 2460,
											"end": 2523,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 2460,
											"end": 2523,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 8658,
											"end": 8660,
											"name": "PUSH",
											"source": 14,
											"value": "20"
										},
										{
											"begin": 2460,
											"end": 2523,
											"name": "PUSH",
											"source": 1,
											"value": "4"
										},
										{
											"begin": 2460,
											"end": 2523,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 2460,
											"end": 2523,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 8640,
											"end": 8661,
											"name": "MSTORE",
											"source": 14
										},
										{
											"begin": 8697,
											"end": 8699,
											"name": "PUSH",
											"source": 14,
											"value": "1F"
										},
										{
											"begin": 8677,
											"end": 8695,
											"name": "PUSH",
											"source": 14,
											"value": "24"
										},
										{
											"begin": 8677,
											"end": 8695,
											"name": "DUP3",
											"source": 14
										},
										{
											"begin": 8677,
											"end": 8695,
											"name": "ADD",
											"source": 14
										},
										{
											"begin": 8670,
											"end": 8700,
											"name": "MSTORE",
											"source": 14
										},
										{
											"begin": 8736,
											"end": 8769,
											"name": "PUSH",
											"source": 14,
											"value": "5265656E7472616E637947756172643A207265656E7472616E742063616C6C00"
										},
										{
											"begin": 8716,
											"end": 8734,
											"name": "PUSH",
											"source": 14,
											"value": "44"
										},
										{
											"begin": 8716,
											"end": 8734,
											"name": "DUP3",
											"source": 14
										},
										{
											"begin": 8716,
											"end": 8734,
											"name": "ADD",
											"source": 14
										},
										{
											"begin": 8709,
											"end": 8770,
											"name": "MSTORE",
											"source": 14
										},
										{
											"begin": 8787,
											"end": 8805,
											"name": "PUSH",
											"source": 14,
											"value": "64"
										},
										{
											"begin": 8787,
											"end": 8805,
											"name": "ADD",
											"source": 14
										},
										{
											"begin": 2460,
											"end": 2523,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "164"
										},
										{
											"begin": 8456,
											"end": 8811,
											"name": "JUMP",
											"source": 14
										},
										{
											"begin": 2460,
											"end": 2523,
											"name": "tag",
											"source": 1,
											"value": "277"
										},
										{
											"begin": 2460,
											"end": 2523,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 1759,
											"end": 1760,
											"name": "PUSH",
											"source": 1,
											"value": "2"
										},
										{
											"begin": 2598,
											"end": 2605,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 2598,
											"end": 2616,
											"name": "SSTORE",
											"source": 1
										},
										{
											"begin": 2336,
											"end": 2623,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 1359,
											"end": 1489,
											"name": "tag",
											"source": 0,
											"value": "188"
										},
										{
											"begin": 1359,
											"end": 1489,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1273,
											"end": 1279,
											"name": "PUSH",
											"source": 0,
											"value": "1"
										},
										{
											"begin": 1273,
											"end": 1279,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 1273,
											"end": 1279,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 719,
											"end": 729,
											"name": "CALLER",
											"source": 7
										},
										{
											"begin": 1422,
											"end": 1445,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 1414,
											"end": 1482,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "203"
										},
										{
											"begin": 1414,
											"end": 1482,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 1414,
											"end": 1482,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 1414,
											"end": 1482,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "461BCD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E5"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 1414,
											"end": 1482,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 1414,
											"end": 1482,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 9018,
											"end": 9020,
											"name": "PUSH",
											"source": 14,
											"value": "20"
										},
										{
											"begin": 1414,
											"end": 1482,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 1414,
											"end": 1482,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 1414,
											"end": 1482,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 9000,
											"end": 9021,
											"name": "DUP2",
											"source": 14
										},
										{
											"begin": 9000,
											"end": 9021,
											"name": "SWAP1",
											"source": 14
										},
										{
											"begin": 9000,
											"end": 9021,
											"name": "MSTORE",
											"source": 14
										},
										{
											"begin": 9037,
											"end": 9055,
											"name": "PUSH",
											"source": 14,
											"value": "24"
										},
										{
											"begin": 9037,
											"end": 9055,
											"name": "DUP3",
											"source": 14
										},
										{
											"begin": 9037,
											"end": 9055,
											"name": "ADD",
											"source": 14
										},
										{
											"begin": 9030,
											"end": 9060,
											"name": "MSTORE",
											"source": 14
										},
										{
											"begin": 9096,
											"end": 9130,
											"name": "PUSH",
											"source": 14,
											"value": "4F776E61626C653A2063616C6C6572206973206E6F7420746865206F776E6572"
										},
										{
											"begin": 9076,
											"end": 9094,
											"name": "PUSH",
											"source": 14,
											"value": "44"
										},
										{
											"begin": 9076,
											"end": 9094,
											"name": "DUP3",
											"source": 14
										},
										{
											"begin": 9076,
											"end": 9094,
											"name": "ADD",
											"source": 14
										},
										{
											"begin": 9069,
											"end": 9131,
											"name": "MSTORE",
											"source": 14
										},
										{
											"begin": 9148,
											"end": 9166,
											"name": "PUSH",
											"source": 14,
											"value": "64"
										},
										{
											"begin": 9148,
											"end": 9166,
											"name": "ADD",
											"source": 14
										},
										{
											"begin": 1414,
											"end": 1482,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "164"
										},
										{
											"begin": 8816,
											"end": 9172,
											"name": "JUMP",
											"source": 14
										},
										{
											"begin": 2433,
											"end": 2620,
											"name": "tag",
											"source": 0,
											"value": "204"
										},
										{
											"begin": 2433,
											"end": 2620,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2525,
											"end": 2531,
											"name": "PUSH",
											"source": 0,
											"value": "1"
										},
										{
											"begin": 2525,
											"end": 2531,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 2525,
											"end": 2531,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 2541,
											"end": 2558,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 2541,
											"end": 2558,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 2541,
											"end": 2558,
											"name": "AND",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "NOT",
											"source": -1
										},
										{
											"begin": 2541,
											"end": 2558,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 2541,
											"end": 2558,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 2541,
											"end": 2558,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 2541,
											"end": 2558,
											"name": "OR",
											"source": 0
										},
										{
											"begin": 2541,
											"end": 2558,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 2541,
											"end": 2558,
											"name": "SWAP4",
											"source": 0
										},
										{
											"begin": 2541,
											"end": 2558,
											"name": "SSTORE",
											"source": 0
										},
										{
											"begin": 2573,
											"end": 2613,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 2573,
											"end": 2613,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 2525,
											"end": 2531,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 2525,
											"end": 2531,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 2525,
											"end": 2531,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 2541,
											"end": 2558,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 2525,
											"end": 2531,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 2525,
											"end": 2531,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 2573,
											"end": 2613,
											"name": "PUSH",
											"source": 0,
											"value": "8BE0079C531659141344CD1FD0A4F28419497F9722A3DAAFE3B4186F6B6457E0"
										},
										{
											"begin": 2573,
											"end": 2613,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 2506,
											"end": 2522,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 2506,
											"end": 2522,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 2573,
											"end": 2613,
											"name": "LOG3",
											"source": 0
										},
										{
											"begin": 2496,
											"end": 2620,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 2433,
											"end": 2620,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 2433,
											"end": 2620,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 1074,
											"end": 1303,
											"name": "tag",
											"source": 8,
											"value": "265"
										},
										{
											"begin": 1074,
											"end": 1303,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 1153,
											"end": 1167,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 1153,
											"end": 1167,
											"name": "SLOAD",
											"source": 8
										},
										{
											"begin": 1185,
											"end": 1194,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 1177,
											"end": 1226,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "291"
										},
										{
											"begin": 1177,
											"end": 1226,
											"name": "JUMPI",
											"source": 8
										},
										{
											"begin": 1177,
											"end": 1226,
											"name": "PUSH",
											"source": 8,
											"value": "40"
										},
										{
											"begin": 1177,
											"end": 1226,
											"name": "MLOAD",
											"source": 8
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "461BCD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E5"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 1177,
											"end": 1226,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 1177,
											"end": 1226,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": 9379,
											"end": 9381,
											"name": "PUSH",
											"source": 14,
											"value": "20"
										},
										{
											"begin": 1177,
											"end": 1226,
											"name": "PUSH",
											"source": 8,
											"value": "4"
										},
										{
											"begin": 1177,
											"end": 1226,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 1177,
											"end": 1226,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 9361,
											"end": 9382,
											"name": "MSTORE",
											"source": 14
										},
										{
											"begin": 9418,
											"end": 9420,
											"name": "PUSH",
											"source": 14,
											"value": "1B"
										},
										{
											"begin": 9398,
											"end": 9416,
											"name": "PUSH",
											"source": 14,
											"value": "24"
										},
										{
											"begin": 9398,
											"end": 9416,
											"name": "DUP3",
											"source": 14
										},
										{
											"begin": 9398,
											"end": 9416,
											"name": "ADD",
											"source": 14
										},
										{
											"begin": 9391,
											"end": 9421,
											"name": "MSTORE",
											"source": 14
										},
										{
											"begin": 9457,
											"end": 9486,
											"name": "PUSH",
											"source": 14,
											"value": "436F756E7465723A2064656372656D656E74206F766572666C6F770000000000"
										},
										{
											"begin": 9437,
											"end": 9455,
											"name": "PUSH",
											"source": 14,
											"value": "44"
										},
										{
											"begin": 9437,
											"end": 9455,
											"name": "DUP3",
											"source": 14
										},
										{
											"begin": 9437,
											"end": 9455,
											"name": "ADD",
											"source": 14
										},
										{
											"begin": 9430,
											"end": 9487,
											"name": "MSTORE",
											"source": 14
										},
										{
											"begin": 9504,
											"end": 9522,
											"name": "PUSH",
											"source": 14,
											"value": "64"
										},
										{
											"begin": 9504,
											"end": 9522,
											"name": "ADD",
											"source": 14
										},
										{
											"begin": 1177,
											"end": 1226,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "164"
										},
										{
											"begin": 9177,
											"end": 9528,
											"name": "JUMP",
											"source": 14
										},
										{
											"begin": 1177,
											"end": 1226,
											"name": "tag",
											"source": 8,
											"value": "291"
										},
										{
											"begin": 1177,
											"end": 1226,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "NOT",
											"source": -1
										},
										{
											"begin": 1277,
											"end": 1286,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 1260,
											"end": 1286,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 1260,
											"end": 1286,
											"name": "SSTORE",
											"source": 8
										},
										{
											"begin": 1074,
											"end": 1303,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": -1,
											"end": -1,
											"name": "tag",
											"source": -1,
											"value": "119"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "JUMPDEST",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "40"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "DUP1",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "MLOAD",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "C0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "DUP2",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "ADD",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "DUP3",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "MSTORE",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "DUP1",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "DUP3",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "MSTORE",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "20"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "DUP3",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "ADD",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "DUP2",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SWAP1",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "MSTORE",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SWAP2",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "DUP2",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "ADD",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "DUP3",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SWAP1",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "MSTORE",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "60"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "DUP2",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "ADD",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "DUP3",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SWAP1",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "MSTORE",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "80"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "DUP2",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "ADD",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "DUP3",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SWAP1",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "MSTORE",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "DUP2",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "ADD",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SWAP2",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SWAP1",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SWAP2",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "MSTORE",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SWAP1",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": -1
										},
										{
											"begin": 14,
											"end": 1174,
											"name": "tag",
											"source": 14,
											"value": "27"
										},
										{
											"begin": 14,
											"end": 1174,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 227,
											"end": 229,
											"name": "PUSH",
											"source": 14,
											"value": "20"
										},
										{
											"begin": 279,
											"end": 300,
											"name": "DUP1",
											"source": 14
										},
										{
											"begin": 279,
											"end": 300,
											"name": "DUP3",
											"source": 14
										},
										{
											"begin": 279,
											"end": 300,
											"name": "MSTORE",
											"source": 14
										},
										{
											"begin": 349,
											"end": 362,
											"name": "DUP3",
											"source": 14
										},
										{
											"begin": 349,
											"end": 362,
											"name": "MLOAD",
											"source": 14
										},
										{
											"begin": 252,
											"end": 270,
											"name": "DUP3",
											"source": 14
										},
										{
											"begin": 252,
											"end": 270,
											"name": "DUP3",
											"source": 14
										},
										{
											"begin": 252,
											"end": 270,
											"name": "ADD",
											"source": 14
										},
										{
											"begin": 371,
											"end": 393,
											"name": "DUP2",
											"source": 14
										},
										{
											"begin": 371,
											"end": 393,
											"name": "SWAP1",
											"source": 14
										},
										{
											"begin": 371,
											"end": 393,
											"name": "MSTORE",
											"source": 14
										},
										{
											"begin": 198,
											"end": 202,
											"name": "PUSH",
											"source": 14,
											"value": "0"
										},
										{
											"begin": 198,
											"end": 202,
											"name": "SWAP2",
											"source": 14
										},
										{
											"begin": 227,
											"end": 229,
											"name": "SWAP1",
											"source": 14
										},
										{
											"begin": 412,
											"end": 414,
											"name": "PUSH",
											"source": 14,
											"value": "40"
										},
										{
											"begin": 412,
											"end": 414,
											"name": "SWAP1",
											"source": 14
										},
										{
											"begin": 430,
											"end": 448,
											"name": "DUP2",
											"source": 14
										},
										{
											"begin": 430,
											"end": 448,
											"name": "DUP6",
											"source": 14
										},
										{
											"begin": 430,
											"end": 448,
											"name": "ADD",
											"source": 14
										},
										{
											"begin": 430,
											"end": 448,
											"name": "SWAP1",
											"source": 14
										},
										{
											"begin": 471,
											"end": 486,
											"name": "DUP7",
											"source": 14
										},
										{
											"begin": 471,
											"end": 486,
											"name": "DUP5",
											"source": 14
										},
										{
											"begin": 471,
											"end": 486,
											"name": "ADD",
											"source": 14
										},
										{
											"begin": 198,
											"end": 202,
											"name": "DUP6",
											"source": 14
										},
										{
											"begin": 514,
											"end": 1148,
											"name": "tag",
											"source": 14,
											"value": "298"
										},
										{
											"begin": 514,
											"end": 1148,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 528,
											"end": 534,
											"name": "DUP3",
											"source": 14
										},
										{
											"begin": 525,
											"end": 526,
											"name": "DUP2",
											"source": 14
										},
										{
											"begin": 522,
											"end": 535,
											"name": "LT",
											"source": 14
										},
										{
											"begin": 514,
											"end": 1148,
											"name": "ISZERO",
											"source": 14
										},
										{
											"begin": 514,
											"end": 1148,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "300"
										},
										{
											"begin": 514,
											"end": 1148,
											"name": "JUMPI",
											"source": 14
										},
										{
											"begin": 587,
											"end": 600,
											"name": "DUP2",
											"source": 14
										},
										{
											"begin": 587,
											"end": 600,
											"name": "MLOAD",
											"source": 14
										},
										{
											"begin": 671,
											"end": 680,
											"name": "DUP1",
											"source": 14
										},
										{
											"begin": 671,
											"end": 680,
											"name": "MLOAD",
											"source": 14
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 667,
											"end": 685,
											"name": "SWAP1",
											"source": 14
										},
										{
											"begin": 667,
											"end": 685,
											"name": "DUP2",
											"source": 14
										},
										{
											"begin": 667,
											"end": 685,
											"name": "AND",
											"source": 14
										},
										{
											"begin": 655,
											"end": 686,
											"name": "DUP7",
											"source": 14
										},
										{
											"begin": 655,
											"end": 686,
											"name": "MSTORE",
											"source": 14
										},
										{
											"begin": 726,
											"end": 737,
											"name": "DUP8",
											"source": 14
										},
										{
											"begin": 726,
											"end": 737,
											"name": "DUP3",
											"source": 14
										},
										{
											"begin": 726,
											"end": 737,
											"name": "ADD",
											"source": 14
										},
										{
											"begin": 720,
											"end": 738,
											"name": "MLOAD",
											"source": 14
										},
										{
											"begin": 706,
											"end": 718,
											"name": "DUP9",
											"source": 14
										},
										{
											"begin": 706,
											"end": 718,
											"name": "DUP8",
											"source": 14
										},
										{
											"begin": 706,
											"end": 718,
											"name": "ADD",
											"source": 14
										},
										{
											"begin": 699,
											"end": 739,
											"name": "MSTORE",
											"source": 14
										},
										{
											"begin": 783,
											"end": 794,
											"name": "DUP7",
											"source": 14
										},
										{
											"begin": 783,
											"end": 794,
											"name": "DUP3",
											"source": 14
										},
										{
											"begin": 783,
											"end": 794,
											"name": "ADD",
											"source": 14
										},
										{
											"begin": 777,
											"end": 795,
											"name": "MLOAD",
											"source": 14
										},
										{
											"begin": 773,
											"end": 800,
											"name": "DUP2",
											"source": 14
										},
										{
											"begin": 773,
											"end": 800,
											"name": "AND",
											"source": 14
										},
										{
											"begin": 759,
											"end": 771,
											"name": "DUP8",
											"source": 14
										},
										{
											"begin": 759,
											"end": 771,
											"name": "DUP8",
											"source": 14
										},
										{
											"begin": 759,
											"end": 771,
											"name": "ADD",
											"source": 14
										},
										{
											"begin": 752,
											"end": 801,
											"name": "MSTORE",
											"source": 14
										},
										{
											"begin": 824,
											"end": 828,
											"name": "PUSH",
											"source": 14,
											"value": "60"
										},
										{
											"begin": 872,
											"end": 883,
											"name": "DUP1",
											"source": 14
										},
										{
											"begin": 872,
											"end": 883,
											"name": "DUP4",
											"source": 14
										},
										{
											"begin": 872,
											"end": 883,
											"name": "ADD",
											"source": 14
										},
										{
											"begin": 866,
											"end": 884,
											"name": "MLOAD",
											"source": 14
										},
										{
											"begin": 862,
											"end": 889,
											"name": "SWAP1",
											"source": 14
										},
										{
											"begin": 862,
											"end": 889,
											"name": "SWAP2",
											"source": 14
										},
										{
											"begin": 862,
											"end": 889,
											"name": "AND",
											"source": 14
										},
										{
											"begin": 848,
											"end": 860,
											"name": "SWAP1",
											"source": 14
										},
										{
											"begin": 848,
											"end": 860,
											"name": "DUP7",
											"source": 14
										},
										{
											"begin": 848,
											"end": 860,
											"name": "ADD",
											"source": 14
										},
										{
											"begin": 841,
											"end": 890,
											"name": "MSTORE",
											"source": 14
										},
										{
											"begin": 913,
											"end": 917,
											"name": "PUSH",
											"source": 14,
											"value": "80"
										},
										{
											"begin": 957,
											"end": 968,
											"name": "DUP1",
											"source": 14
										},
										{
											"begin": 957,
											"end": 968,
											"name": "DUP3",
											"source": 14
										},
										{
											"begin": 957,
											"end": 968,
											"name": "ADD",
											"source": 14
										},
										{
											"begin": 951,
											"end": 969,
											"name": "MLOAD",
											"source": 14
										},
										{
											"begin": 937,
											"end": 949,
											"name": "SWAP1",
											"source": 14
										},
										{
											"begin": 937,
											"end": 949,
											"name": "DUP7",
											"source": 14
										},
										{
											"begin": 937,
											"end": 949,
											"name": "ADD",
											"source": 14
										},
										{
											"begin": 930,
											"end": 970,
											"name": "MSTORE",
											"source": 14
										},
										{
											"begin": 631,
											"end": 634,
											"name": "PUSH",
											"source": 14,
											"value": "A0"
										},
										{
											"begin": 1051,
											"end": 1062,
											"name": "SWAP1",
											"source": 14
										},
										{
											"begin": 1051,
											"end": 1062,
											"name": "DUP2",
											"source": 14
										},
										{
											"begin": 1051,
											"end": 1062,
											"name": "ADD",
											"source": 14
										},
										{
											"begin": 1045,
											"end": 1063,
											"name": "MLOAD",
											"source": 14
										},
										{
											"begin": 1038,
											"end": 1064,
											"name": "ISZERO",
											"source": 14
										},
										{
											"begin": 1031,
											"end": 1065,
											"name": "ISZERO",
											"source": 14
										},
										{
											"begin": 1017,
											"end": 1029,
											"name": "SWAP1",
											"source": 14
										},
										{
											"begin": 1017,
											"end": 1029,
											"name": "DUP6",
											"source": 14
										},
										{
											"begin": 1017,
											"end": 1029,
											"name": "ADD",
											"source": 14
										},
										{
											"begin": 1010,
											"end": 1066,
											"name": "MSTORE",
											"source": 14
										},
										{
											"begin": 1095,
											"end": 1099,
											"name": "PUSH",
											"source": 14,
											"value": "C0"
										},
										{
											"begin": 1086,
											"end": 1100,
											"name": "SWAP1",
											"source": 14
										},
										{
											"begin": 1086,
											"end": 1100,
											"name": "SWAP4",
											"source": 14
										},
										{
											"begin": 1086,
											"end": 1100,
											"name": "ADD",
											"source": 14
										},
										{
											"begin": 1086,
											"end": 1100,
											"name": "SWAP3",
											"source": 14
										},
										{
											"begin": 1123,
											"end": 1138,
											"name": "SWAP1",
											"source": 14
										},
										{
											"begin": 1123,
											"end": 1138,
											"name": "DUP6",
											"source": 14
										},
										{
											"begin": 1123,
											"end": 1138,
											"name": "ADD",
											"source": 14
										},
										{
											"begin": 1123,
											"end": 1138,
											"name": "SWAP1",
											"source": 14
										},
										{
											"begin": 640,
											"end": 641,
											"name": "PUSH",
											"source": 14,
											"value": "1"
										},
										{
											"begin": 543,
											"end": 552,
											"name": "ADD",
											"source": 14
										},
										{
											"begin": 514,
											"end": 1148,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "298"
										},
										{
											"begin": 514,
											"end": 1148,
											"name": "JUMP",
											"source": 14
										},
										{
											"begin": 514,
											"end": 1148,
											"name": "tag",
											"source": 14,
											"value": "300"
										},
										{
											"begin": 514,
											"end": 1148,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 1165,
											"end": 1168,
											"name": "SWAP2",
											"source": 14
										},
										{
											"begin": 1165,
											"end": 1168,
											"name": "SWAP8",
											"source": 14
										},
										{
											"begin": 14,
											"end": 1174,
											"name": "SWAP7",
											"source": 14
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 14,
											"end": 1174,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 14
										},
										{
											"begin": 1179,
											"end": 1359,
											"name": "tag",
											"source": 14,
											"value": "34"
										},
										{
											"begin": 1179,
											"end": 1359,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 1238,
											"end": 1244,
											"name": "PUSH",
											"source": 14,
											"value": "0"
										},
										{
											"begin": 1291,
											"end": 1293,
											"name": "PUSH",
											"source": 14,
											"value": "20"
										},
										{
											"begin": 1279,
											"end": 1288,
											"name": "DUP3",
											"source": 14
										},
										{
											"begin": 1270,
											"end": 1277,
											"name": "DUP5",
											"source": 14
										},
										{
											"begin": 1266,
											"end": 1289,
											"name": "SUB",
											"source": 14
										},
										{
											"begin": 1262,
											"end": 1294,
											"name": "SLT",
											"source": 14
										},
										{
											"begin": 1259,
											"end": 1311,
											"name": "ISZERO",
											"source": 14
										},
										{
											"begin": 1259,
											"end": 1311,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "302"
										},
										{
											"begin": 1259,
											"end": 1311,
											"name": "JUMPI",
											"source": 14
										},
										{
											"begin": 1307,
											"end": 1308,
											"name": "PUSH",
											"source": 14,
											"value": "0"
										},
										{
											"begin": 1304,
											"end": 1305,
											"name": "DUP1",
											"source": 14
										},
										{
											"begin": 1297,
											"end": 1309,
											"name": "REVERT",
											"source": 14
										},
										{
											"begin": 1259,
											"end": 1311,
											"name": "tag",
											"source": 14,
											"value": "302"
										},
										{
											"begin": 1259,
											"end": 1311,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 1330,
											"end": 1353,
											"name": "CALLDATALOAD",
											"source": 14
										},
										{
											"begin": 1330,
											"end": 1353,
											"name": "SWAP2",
											"source": 14
										},
										{
											"begin": 1179,
											"end": 1359,
											"name": "SWAP1",
											"source": 14
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 1179,
											"end": 1359,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 14
										},
										{
											"begin": 2043,
											"end": 2291,
											"name": "tag",
											"source": 14,
											"value": "91"
										},
										{
											"begin": 2043,
											"end": 2291,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 2111,
											"end": 2117,
											"name": "PUSH",
											"source": 14,
											"value": "0"
										},
										{
											"begin": 2119,
											"end": 2125,
											"name": "DUP1",
											"source": 14
										},
										{
											"begin": 2172,
											"end": 2174,
											"name": "PUSH",
											"source": 14,
											"value": "40"
										},
										{
											"begin": 2160,
											"end": 2169,
											"name": "DUP4",
											"source": 14
										},
										{
											"begin": 2151,
											"end": 2158,
											"name": "DUP6",
											"source": 14
										},
										{
											"begin": 2147,
											"end": 2170,
											"name": "SUB",
											"source": 14
										},
										{
											"begin": 2143,
											"end": 2175,
											"name": "SLT",
											"source": 14
										},
										{
											"begin": 2140,
											"end": 2192,
											"name": "ISZERO",
											"source": 14
										},
										{
											"begin": 2140,
											"end": 2192,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "307"
										},
										{
											"begin": 2140,
											"end": 2192,
											"name": "JUMPI",
											"source": 14
										},
										{
											"begin": 2188,
											"end": 2189,
											"name": "PUSH",
											"source": 14,
											"value": "0"
										},
										{
											"begin": 2185,
											"end": 2186,
											"name": "DUP1",
											"source": 14
										},
										{
											"begin": 2178,
											"end": 2190,
											"name": "REVERT",
											"source": 14
										},
										{
											"begin": 2140,
											"end": 2192,
											"name": "tag",
											"source": 14,
											"value": "307"
										},
										{
											"begin": 2140,
											"end": 2192,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 2211,
											"end": 2234,
											"name": "DUP1",
											"source": 14
										},
										{
											"begin": 2211,
											"end": 2234,
											"name": "CALLDATALOAD",
											"source": 14
										},
										{
											"begin": 2211,
											"end": 2234,
											"name": "SWAP3",
											"source": 14
										},
										{
											"begin": 2281,
											"end": 2283,
											"name": "PUSH",
											"source": 14,
											"value": "20"
										},
										{
											"begin": 2266,
											"end": 2284,
											"name": "SWAP1",
											"source": 14
										},
										{
											"begin": 2266,
											"end": 2284,
											"name": "SWAP2",
											"source": 14
										},
										{
											"begin": 2266,
											"end": 2284,
											"name": "ADD",
											"source": 14
										},
										{
											"begin": 2253,
											"end": 2285,
											"name": "CALLDATALOAD",
											"source": 14
										},
										{
											"begin": 2253,
											"end": 2285,
											"name": "SWAP2",
											"source": 14
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 2043,
											"end": 2291,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 14
										},
										{
											"begin": 2296,
											"end": 2582,
											"name": "tag",
											"source": 14,
											"value": "99"
										},
										{
											"begin": 2296,
											"end": 2582,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 2355,
											"end": 2361,
											"name": "PUSH",
											"source": 14,
											"value": "0"
										},
										{
											"begin": 2408,
											"end": 2410,
											"name": "PUSH",
											"source": 14,
											"value": "20"
										},
										{
											"begin": 2396,
											"end": 2405,
											"name": "DUP3",
											"source": 14
										},
										{
											"begin": 2387,
											"end": 2394,
											"name": "DUP5",
											"source": 14
										},
										{
											"begin": 2383,
											"end": 2406,
											"name": "SUB",
											"source": 14
										},
										{
											"begin": 2379,
											"end": 2411,
											"name": "SLT",
											"source": 14
										},
										{
											"begin": 2376,
											"end": 2428,
											"name": "ISZERO",
											"source": 14
										},
										{
											"begin": 2376,
											"end": 2428,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "309"
										},
										{
											"begin": 2376,
											"end": 2428,
											"name": "JUMPI",
											"source": 14
										},
										{
											"begin": 2424,
											"end": 2425,
											"name": "PUSH",
											"source": 14,
											"value": "0"
										},
										{
											"begin": 2421,
											"end": 2422,
											"name": "DUP1",
											"source": 14
										},
										{
											"begin": 2414,
											"end": 2426,
											"name": "REVERT",
											"source": 14
										},
										{
											"begin": 2376,
											"end": 2428,
											"name": "tag",
											"source": 14,
											"value": "309"
										},
										{
											"begin": 2376,
											"end": 2428,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 2450,
											"end": 2473,
											"name": "DUP2",
											"source": 14
										},
										{
											"begin": 2450,
											"end": 2473,
											"name": "CALLDATALOAD",
											"source": 14
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 2502,
											"end": 2533,
											"name": "DUP2",
											"source": 14
										},
										{
											"begin": 2502,
											"end": 2533,
											"name": "AND",
											"source": 14
										},
										{
											"begin": 2492,
											"end": 2534,
											"name": "DUP2",
											"source": 14
										},
										{
											"begin": 2492,
											"end": 2534,
											"name": "EQ",
											"source": 14
										},
										{
											"begin": 2482,
											"end": 2552,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "310"
										},
										{
											"begin": 2482,
											"end": 2552,
											"name": "JUMPI",
											"source": 14
										},
										{
											"begin": 2548,
											"end": 2549,
											"name": "PUSH",
											"source": 14,
											"value": "0"
										},
										{
											"begin": 2545,
											"end": 2546,
											"name": "DUP1",
											"source": 14
										},
										{
											"begin": 2538,
											"end": 2550,
											"name": "REVERT",
											"source": 14
										},
										{
											"begin": 2482,
											"end": 2552,
											"name": "tag",
											"source": 14,
											"value": "310"
										},
										{
											"begin": 2482,
											"end": 2552,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 2571,
											"end": 2576,
											"name": "SWAP4",
											"source": 14
										},
										{
											"begin": 2296,
											"end": 2582,
											"name": "SWAP3",
											"source": 14
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 2296,
											"end": 2582,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 14
										},
										{
											"begin": 2587,
											"end": 2714,
											"name": "tag",
											"source": 14,
											"value": "295"
										},
										{
											"begin": 2587,
											"end": 2714,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 2648,
											"end": 2658,
											"name": "PUSH",
											"source": 14,
											"value": "4E487B71"
										},
										{
											"begin": 2643,
											"end": 2646,
											"name": "PUSH",
											"source": 14,
											"value": "E0"
										},
										{
											"begin": 2639,
											"end": 2659,
											"name": "SHL",
											"source": 14
										},
										{
											"begin": 2636,
											"end": 2637,
											"name": "PUSH",
											"source": 14,
											"value": "0"
										},
										{
											"begin": 2629,
											"end": 2660,
											"name": "MSTORE",
											"source": 14
										},
										{
											"begin": 2679,
											"end": 2683,
											"name": "PUSH",
											"source": 14,
											"value": "11"
										},
										{
											"begin": 2676,
											"end": 2677,
											"name": "PUSH",
											"source": 14,
											"value": "4"
										},
										{
											"begin": 2669,
											"end": 2684,
											"name": "MSTORE",
											"source": 14
										},
										{
											"begin": 2703,
											"end": 2707,
											"name": "PUSH",
											"source": 14,
											"value": "24"
										},
										{
											"begin": 2700,
											"end": 2701,
											"name": "PUSH",
											"source": 14,
											"value": "0"
										},
										{
											"begin": 2693,
											"end": 2708,
											"name": "REVERT",
											"source": 14
										},
										{
											"begin": 2719,
											"end": 2844,
											"name": "tag",
											"source": 14,
											"value": "108"
										},
										{
											"begin": 2719,
											"end": 2844,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 2784,
											"end": 2793,
											"name": "DUP1",
											"source": 14
										},
										{
											"begin": 2784,
											"end": 2793,
											"name": "DUP3",
											"source": 14
										},
										{
											"begin": 2784,
											"end": 2793,
											"name": "ADD",
											"source": 14
										},
										{
											"begin": 2805,
											"end": 2815,
											"name": "DUP1",
											"source": 14
										},
										{
											"begin": 2805,
											"end": 2815,
											"name": "DUP3",
											"source": 14
										},
										{
											"begin": 2805,
											"end": 2815,
											"name": "GT",
											"source": 14
										},
										{
											"begin": 2802,
											"end": 2838,
											"name": "ISZERO",
											"source": 14
										},
										{
											"begin": 2802,
											"end": 2838,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "314"
										},
										{
											"begin": 2802,
											"end": 2838,
											"name": "JUMPI",
											"source": 14
										},
										{
											"begin": 2818,
											"end": 2836,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "314"
										},
										{
											"begin": 2818,
											"end": 2836,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "295"
										},
										{
											"begin": 2818,
											"end": 2836,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 14
										},
										{
											"begin": 2818,
											"end": 2836,
											"name": "tag",
											"source": 14,
											"value": "314"
										},
										{
											"begin": 2818,
											"end": 2836,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 2719,
											"end": 2844,
											"name": "SWAP3",
											"source": 14
										},
										{
											"begin": 2719,
											"end": 2844,
											"name": "SWAP2",
											"source": 14
										},
										{
											"begin": 2719,
											"end": 2844,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 2719,
											"end": 2844,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 2719,
											"end": 2844,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 14
										},
										{
											"begin": 2849,
											"end": 2984,
											"name": "tag",
											"source": 14,
											"value": "111"
										},
										{
											"begin": 2849,
											"end": 2984,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 2888,
											"end": 2891,
											"name": "PUSH",
											"source": 14,
											"value": "0"
										},
										{
											"begin": 2909,
											"end": 2926,
											"name": "PUSH",
											"source": 14,
											"value": "1"
										},
										{
											"begin": 2909,
											"end": 2926,
											"name": "DUP3",
											"source": 14
										},
										{
											"begin": 2909,
											"end": 2926,
											"name": "ADD",
											"source": 14
										},
										{
											"begin": 2906,
											"end": 2949,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "317"
										},
										{
											"begin": 2906,
											"end": 2949,
											"name": "JUMPI",
											"source": 14
										},
										{
											"begin": 2929,
											"end": 2947,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "317"
										},
										{
											"begin": 2929,
											"end": 2947,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "295"
										},
										{
											"begin": 2929,
											"end": 2947,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 14
										},
										{
											"begin": 2929,
											"end": 2947,
											"name": "tag",
											"source": 14,
											"value": "317"
										},
										{
											"begin": 2929,
											"end": 2947,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 2976,
											"end": 2977,
											"name": "PUSH",
											"source": 14,
											"value": "1"
										},
										{
											"begin": 2965,
											"end": 2978,
											"name": "ADD",
											"source": 14
										},
										{
											"begin": 2965,
											"end": 2978,
											"name": "SWAP1",
											"source": 14
										},
										{
											"begin": 2849,
											"end": 2984,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 14
										},
										{
											"begin": 2989,
											"end": 3116,
											"name": "tag",
											"source": 14,
											"value": "115"
										},
										{
											"begin": 2989,
											"end": 3116,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 3050,
											"end": 3060,
											"name": "PUSH",
											"source": 14,
											"value": "4E487B71"
										},
										{
											"begin": 3045,
											"end": 3048,
											"name": "PUSH",
											"source": 14,
											"value": "E0"
										},
										{
											"begin": 3041,
											"end": 3061,
											"name": "SHL",
											"source": 14
										},
										{
											"begin": 3038,
											"end": 3039,
											"name": "PUSH",
											"source": 14,
											"value": "0"
										},
										{
											"begin": 3031,
											"end": 3062,
											"name": "MSTORE",
											"source": 14
										},
										{
											"begin": 3081,
											"end": 3085,
											"name": "PUSH",
											"source": 14,
											"value": "41"
										},
										{
											"begin": 3078,
											"end": 3079,
											"name": "PUSH",
											"source": 14,
											"value": "4"
										},
										{
											"begin": 3071,
											"end": 3086,
											"name": "MSTORE",
											"source": 14
										},
										{
											"begin": 3105,
											"end": 3109,
											"name": "PUSH",
											"source": 14,
											"value": "24"
										},
										{
											"begin": 3102,
											"end": 3103,
											"name": "PUSH",
											"source": 14,
											"value": "0"
										},
										{
											"begin": 3095,
											"end": 3110,
											"name": "REVERT",
											"source": 14
										},
										{
											"begin": 3121,
											"end": 3248,
											"name": "tag",
											"source": 14,
											"value": "128"
										},
										{
											"begin": 3121,
											"end": 3248,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 3182,
											"end": 3192,
											"name": "PUSH",
											"source": 14,
											"value": "4E487B71"
										},
										{
											"begin": 3177,
											"end": 3180,
											"name": "PUSH",
											"source": 14,
											"value": "E0"
										},
										{
											"begin": 3173,
											"end": 3193,
											"name": "SHL",
											"source": 14
										},
										{
											"begin": 3170,
											"end": 3171,
											"name": "PUSH",
											"source": 14,
											"value": "0"
										},
										{
											"begin": 3163,
											"end": 3194,
											"name": "MSTORE",
											"source": 14
										},
										{
											"begin": 3213,
											"end": 3217,
											"name": "PUSH",
											"source": 14,
											"value": "32"
										},
										{
											"begin": 3210,
											"end": 3211,
											"name": "PUSH",
											"source": 14,
											"value": "4"
										},
										{
											"begin": 3203,
											"end": 3218,
											"name": "MSTORE",
											"source": 14
										},
										{
											"begin": 3237,
											"end": 3241,
											"name": "PUSH",
											"source": 14,
											"value": "24"
										},
										{
											"begin": 3234,
											"end": 3235,
											"name": "PUSH",
											"source": 14,
											"value": "0"
										},
										{
											"begin": 3227,
											"end": 3242,
											"name": "REVERT",
											"source": 14
										},
										{
											"begin": 4020,
											"end": 4148,
											"name": "tag",
											"source": 14,
											"value": "170"
										},
										{
											"begin": 4020,
											"end": 4148,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 4087,
											"end": 4096,
											"name": "DUP2",
											"source": 14
										},
										{
											"begin": 4087,
											"end": 4096,
											"name": "DUP2",
											"source": 14
										},
										{
											"begin": 4087,
											"end": 4096,
											"name": "SUB",
											"source": 14
										},
										{
											"begin": 4108,
											"end": 4119,
											"name": "DUP2",
											"source": 14
										},
										{
											"begin": 4108,
											"end": 4119,
											"name": "DUP2",
											"source": 14
										},
										{
											"begin": 4108,
											"end": 4119,
											"name": "GT",
											"source": 14
										},
										{
											"begin": 4105,
											"end": 4142,
											"name": "ISZERO",
											"source": 14
										},
										{
											"begin": 4105,
											"end": 4142,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "314"
										},
										{
											"begin": 4105,
											"end": 4142,
											"name": "JUMPI",
											"source": 14
										},
										{
											"begin": 4122,
											"end": 4140,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "314"
										},
										{
											"begin": 4122,
											"end": 4140,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "295"
										},
										{
											"begin": 4122,
											"end": 4140,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 14
										},
										{
											"begin": 4153,
											"end": 4536,
											"name": "tag",
											"source": 14,
											"value": "174"
										},
										{
											"begin": 4153,
											"end": 4536,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 4419,
											"end": 4434,
											"name": "SWAP4",
											"source": 14
										},
										{
											"begin": 4419,
											"end": 4434,
											"name": "DUP5",
											"source": 14
										},
										{
											"begin": 4419,
											"end": 4434,
											"name": "AND",
											"source": 14
										},
										{
											"begin": 4401,
											"end": 4435,
											"name": "DUP2",
											"source": 14
										},
										{
											"begin": 4401,
											"end": 4435,
											"name": "MSTORE",
											"source": 14
										},
										{
											"begin": 4471,
											"end": 4486,
											"name": "SWAP2",
											"source": 14
										},
										{
											"begin": 4471,
											"end": 4486,
											"name": "SWAP1",
											"source": 14
										},
										{
											"begin": 4471,
											"end": 4486,
											"name": "SWAP3",
											"source": 14
										},
										{
											"begin": 4471,
											"end": 4486,
											"name": "AND",
											"source": 14
										},
										{
											"begin": 4466,
											"end": 4468,
											"name": "PUSH",
											"source": 14,
											"value": "20"
										},
										{
											"begin": 4451,
											"end": 4469,
											"name": "DUP3",
											"source": 14
										},
										{
											"begin": 4451,
											"end": 4469,
											"name": "ADD",
											"source": 14
										},
										{
											"begin": 4444,
											"end": 4487,
											"name": "MSTORE",
											"source": 14
										},
										{
											"begin": 4518,
											"end": 4520,
											"name": "PUSH",
											"source": 14,
											"value": "40"
										},
										{
											"begin": 4503,
											"end": 4521,
											"name": "DUP2",
											"source": 14
										},
										{
											"begin": 4503,
											"end": 4521,
											"name": "ADD",
											"source": 14
										},
										{
											"begin": 4496,
											"end": 4530,
											"name": "SWAP2",
											"source": 14
										},
										{
											"begin": 4496,
											"end": 4530,
											"name": "SWAP1",
											"source": 14
										},
										{
											"begin": 4496,
											"end": 4530,
											"name": "SWAP2",
											"source": 14
										},
										{
											"begin": 4496,
											"end": 4530,
											"name": "MSTORE",
											"source": 14
										},
										{
											"begin": 4351,
											"end": 4353,
											"name": "PUSH",
											"source": 14,
											"value": "60"
										},
										{
											"begin": 4336,
											"end": 4354,
											"name": "ADD",
											"source": 14
										},
										{
											"begin": 4336,
											"end": 4354,
											"name": "SWAP1",
											"source": 14
										},
										{
											"begin": 4153,
											"end": 4536,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 14
										},
										{
											"begin": 4541,
											"end": 5085,
											"name": "tag",
											"source": 14,
											"value": "183"
										},
										{
											"begin": 4541,
											"end": 5085,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 4872,
											"end": 4887,
											"name": "SWAP6",
											"source": 14
										},
										{
											"begin": 4872,
											"end": 4887,
											"name": "DUP7",
											"source": 14
										},
										{
											"begin": 4872,
											"end": 4887,
											"name": "AND",
											"source": 14
										},
										{
											"begin": 4854,
											"end": 4888,
											"name": "DUP2",
											"source": 14
										},
										{
											"begin": 4854,
											"end": 4888,
											"name": "MSTORE",
											"source": 14
										},
										{
											"begin": 4919,
											"end": 4921,
											"name": "PUSH",
											"source": 14,
											"value": "20"
										},
										{
											"begin": 4904,
											"end": 4922,
											"name": "DUP2",
											"source": 14
										},
										{
											"begin": 4904,
											"end": 4922,
											"name": "ADD",
											"source": 14
										},
										{
											"begin": 4897,
											"end": 4931,
											"name": "SWAP5",
											"source": 14
										},
										{
											"begin": 4897,
											"end": 4931,
											"name": "SWAP1",
											"source": 14
										},
										{
											"begin": 4897,
											"end": 4931,
											"name": "SWAP5",
											"source": 14
										},
										{
											"begin": 4897,
											"end": 4931,
											"name": "MSTORE",
											"source": 14
										},
										{
											"begin": 4967,
											"end": 4982,
											"name": "SWAP2",
											"source": 14
										},
										{
											"begin": 4967,
											"end": 4982,
											"name": "DUP5",
											"source": 14
										},
										{
											"begin": 4967,
											"end": 4982,
											"name": "AND",
											"source": 14
										},
										{
											"begin": 4962,
											"end": 4964,
											"name": "PUSH",
											"source": 14,
											"value": "40"
										},
										{
											"begin": 4947,
											"end": 4965,
											"name": "DUP5",
											"source": 14
										},
										{
											"begin": 4947,
											"end": 4965,
											"name": "ADD",
											"source": 14
										},
										{
											"begin": 4940,
											"end": 4983,
											"name": "MSTORE",
											"source": 14
										},
										{
											"begin": 5019,
											"end": 5034,
											"name": "SWAP1",
											"source": 14
										},
										{
											"begin": 5019,
											"end": 5034,
											"name": "SWAP3",
											"source": 14
										},
										{
											"begin": 5019,
											"end": 5034,
											"name": "AND",
											"source": 14
										},
										{
											"begin": 5014,
											"end": 5016,
											"name": "PUSH",
											"source": 14,
											"value": "60"
										},
										{
											"begin": 4999,
											"end": 5017,
											"name": "DUP3",
											"source": 14
										},
										{
											"begin": 4999,
											"end": 5017,
											"name": "ADD",
											"source": 14
										},
										{
											"begin": 4992,
											"end": 5035,
											"name": "MSTORE",
											"source": 14
										},
										{
											"begin": 5066,
											"end": 5069,
											"name": "PUSH",
											"source": 14,
											"value": "80"
										},
										{
											"begin": 5051,
											"end": 5070,
											"name": "DUP2",
											"source": 14
										},
										{
											"begin": 5051,
											"end": 5070,
											"name": "ADD",
											"source": 14
										},
										{
											"begin": 5044,
											"end": 5079,
											"name": "SWAP2",
											"source": 14
										},
										{
											"begin": 5044,
											"end": 5079,
											"name": "SWAP1",
											"source": 14
										},
										{
											"begin": 5044,
											"end": 5079,
											"name": "SWAP2",
											"source": 14
										},
										{
											"begin": 5044,
											"end": 5079,
											"name": "MSTORE",
											"source": 14
										},
										{
											"begin": 4803,
											"end": 4806,
											"name": "PUSH",
											"source": 14,
											"value": "A0"
										},
										{
											"begin": 4788,
											"end": 4807,
											"name": "ADD",
											"source": 14
										},
										{
											"begin": 4788,
											"end": 4807,
											"name": "SWAP1",
											"source": 14
										},
										{
											"begin": 4541,
											"end": 5085,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 14
										},
										{
											"begin": 5820,
											"end": 6037,
											"name": "tag",
											"source": 14,
											"value": "228"
										},
										{
											"begin": 5820,
											"end": 6037,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 5860,
											"end": 5861,
											"name": "PUSH",
											"source": 14,
											"value": "0"
										},
										{
											"begin": 5886,
											"end": 5887,
											"name": "DUP3",
											"source": 14
										},
										{
											"begin": 5876,
											"end": 6008,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "330"
										},
										{
											"begin": 5876,
											"end": 6008,
											"name": "JUMPI",
											"source": 14
										},
										{
											"begin": 5930,
											"end": 5940,
											"name": "PUSH",
											"source": 14,
											"value": "4E487B71"
										},
										{
											"begin": 5925,
											"end": 5928,
											"name": "PUSH",
											"source": 14,
											"value": "E0"
										},
										{
											"begin": 5921,
											"end": 5941,
											"name": "SHL",
											"source": 14
										},
										{
											"begin": 5918,
											"end": 5919,
											"name": "PUSH",
											"source": 14,
											"value": "0"
										},
										{
											"begin": 5911,
											"end": 5942,
											"name": "MSTORE",
											"source": 14
										},
										{
											"begin": 5965,
											"end": 5969,
											"name": "PUSH",
											"source": 14,
											"value": "12"
										},
										{
											"begin": 5962,
											"end": 5963,
											"name": "PUSH",
											"source": 14,
											"value": "4"
										},
										{
											"begin": 5955,
											"end": 5970,
											"name": "MSTORE",
											"source": 14
										},
										{
											"begin": 5993,
											"end": 5997,
											"name": "PUSH",
											"source": 14,
											"value": "24"
										},
										{
											"begin": 5990,
											"end": 5991,
											"name": "PUSH",
											"source": 14,
											"value": "0"
										},
										{
											"begin": 5983,
											"end": 5998,
											"name": "REVERT",
											"source": 14
										},
										{
											"begin": 5876,
											"end": 6008,
											"name": "tag",
											"source": 14,
											"value": "330"
										},
										{
											"begin": 5876,
											"end": 6008,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 6022,
											"end": 6031,
											"name": "DIV",
											"source": 14
										},
										{
											"begin": 6022,
											"end": 6031,
											"name": "SWAP1",
											"source": 14
										},
										{
											"begin": 5820,
											"end": 6037,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 14
										}
									]
								}
							},
							"sourceList": [
								"@openzeppelin/contracts/access/Ownable.sol",
								"@openzeppelin/contracts/security/ReentrancyGuard.sol",
								"@openzeppelin/contracts/token/ERC721/ERC721.sol",
								"@openzeppelin/contracts/token/ERC721/IERC721.sol",
								"@openzeppelin/contracts/token/ERC721/IERC721Receiver.sol",
								"@openzeppelin/contracts/token/ERC721/extensions/IERC721Metadata.sol",
								"@openzeppelin/contracts/utils/Address.sol",
								"@openzeppelin/contracts/utils/Context.sol",
								"@openzeppelin/contracts/utils/Counters.sol",
								"@openzeppelin/contracts/utils/Strings.sol",
								"@openzeppelin/contracts/utils/introspection/ERC165.sol",
								"@openzeppelin/contracts/utils/introspection/IERC165.sol",
								"@openzeppelin/contracts/utils/math/Math.sol",
								"contracts/SmashNFT_Marketplace_1.sol",
								"#utility.yul"
							]
						},
						"methodIdentifiers": {
							"CancelOffer(uint256)": "4e455dbe",
							"ClaculatePrice(uint256)": "a33f6c68",
							"FirstOwner(uint256)": "7ca7349b",
							"GetListingFee()": "73a0c166",
							"LISTING_FEE()": "2b86ae38",
							"ListNft(uint256,uint256)": "e03de05c",
							"ReSellNft(uint256,uint256)": "e47f018a",
							"SetListingFee(uint256)": "36958adb",
							"_nftCount()": "d6cbb202",
							"_nftsSold()": "31824a49",
							"buyNft(uint256)": "243adbdd",
							"check(uint256)": "5f72f450",
							"getListedNfts()": "8d6cb3fb",
							"getMyListedNfts()": "1f4cc4db",
							"getMyNfts()": "047b07bf",
							"owner()": "8da5cb5b",
							"renounceOwnership()": "715018a6",
							"transferOwnership(address)": "f2fde38b"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.21+commit.d9974bed\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"address\",\"name\":\"contractAddr\",\"type\":\"address\"}],\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"address\",\"name\":\"nftContract\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"address\",\"name\":\"seller\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"price\",\"type\":\"uint256\"}],\"name\":\"NFTListed\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"address\",\"name\":\"nftContract\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"address\",\"name\":\"seller\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"price\",\"type\":\"uint256\"}],\"name\":\"NFTSold\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"previousOwner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"OwnershipTransferred\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"_tokenId\",\"type\":\"uint256\"}],\"name\":\"CancelOffer\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"_price\",\"type\":\"uint256\"}],\"name\":\"ClaculatePrice\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"pure\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"name\":\"FirstOwner\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"GetListingFee\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"LISTING_FEE\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"_tokenId\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"_price\",\"type\":\"uint256\"}],\"name\":\"ListNft\",\"outputs\":[],\"stateMutability\":\"payable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"_tokenId\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"_price\",\"type\":\"uint256\"}],\"name\":\"ReSellNft\",\"outputs\":[],\"stateMutability\":\"payable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"_ListingFee\",\"type\":\"uint256\"}],\"name\":\"SetListingFee\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"_nftCount\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"_value\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"_nftsSold\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"_value\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"_tokenId\",\"type\":\"uint256\"}],\"name\":\"buyNft\",\"outputs\":[],\"stateMutability\":\"payable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"name\":\"check\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"_check\",\"type\":\"bool\"},{\"internalType\":\"address\",\"name\":\"_address\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"getListedNfts\",\"outputs\":[{\"components\":[{\"internalType\":\"address\",\"name\":\"nftContract\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"},{\"internalType\":\"address payable\",\"name\":\"seller\",\"type\":\"address\"},{\"internalType\":\"address payable\",\"name\":\"owner\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"price\",\"type\":\"uint256\"},{\"internalType\":\"bool\",\"name\":\"listed\",\"type\":\"bool\"}],\"internalType\":\"struct SmashNFT_Marketplace.NFT[]\",\"name\":\"\",\"type\":\"tuple[]\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"getMyListedNfts\",\"outputs\":[{\"components\":[{\"internalType\":\"address\",\"name\":\"nftContract\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"},{\"internalType\":\"address payable\",\"name\":\"seller\",\"type\":\"address\"},{\"internalType\":\"address payable\",\"name\":\"owner\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"price\",\"type\":\"uint256\"},{\"internalType\":\"bool\",\"name\":\"listed\",\"type\":\"bool\"}],\"internalType\":\"struct SmashNFT_Marketplace.NFT[]\",\"name\":\"\",\"type\":\"tuple[]\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"getMyNfts\",\"outputs\":[{\"components\":[{\"internalType\":\"address\",\"name\":\"nftContract\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"},{\"internalType\":\"address payable\",\"name\":\"seller\",\"type\":\"address\"},{\"internalType\":\"address payable\",\"name\":\"owner\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"price\",\"type\":\"uint256\"},{\"internalType\":\"bool\",\"name\":\"listed\",\"type\":\"bool\"}],\"internalType\":\"struct SmashNFT_Marketplace.NFT[]\",\"name\":\"\",\"type\":\"tuple[]\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"owner\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"renounceOwnership\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"transferOwnership\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"kind\":\"dev\",\"methods\":{\"owner()\":{\"details\":\"Returns the address of the current owner.\"},\"renounceOwnership()\":{\"details\":\"Leaves the contract without owner. It will not be possible to call `onlyOwner` functions anymore. Can only be called by the current owner. NOTE: Renouncing ownership will leave the contract without an owner, thereby removing any functionality that is only available to the owner.\"},\"transferOwnership(address)\":{\"details\":\"Transfers ownership of the contract to a new account (`newOwner`). Can only be called by the current owner.\"}},\"title\":\"MarketPlace\",\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"contracts/SmashNFT_Marketplace_1.sol\":\"SmashNFT_Marketplace\"},\"evmVersion\":\"shanghai\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/access/Ownable.sol\":{\"keccak256\":\"0xa94b34880e3c1b0b931662cb1c09e5dfa6662f31cba80e07c5ee71cd135c9673\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://40fb1b5102468f783961d0af743f91b9980cf66b50d1d12009f6bb1869cea4d2\",\"dweb:/ipfs/QmYqEbJML4jB1GHbzD4cUZDtJg5wVwNm3vDJq1GbyDus8y\"]},\"@openzeppelin/contracts/security/ReentrancyGuard.sol\":{\"keccak256\":\"0x190dd6f8d592b7e4e930feb7f4313aeb8e1c4ad3154c27ce1cf6a512fc30d8cc\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://4ce8dfb62d0c4fa260d6eec8f1cd47f5f2a044e11bde5b31d18072fa6e7d9010\",\"dweb:/ipfs/QmTyFztU3tLEcEDnqqiaW4UJetqsU77LXc6pjc9oTXCK5u\"]},\"@openzeppelin/contracts/token/ERC721/ERC721.sol\":{\"keccak256\":\"0xd89f3585b211fc9e3408384a4c4efdc3a93b2f877a3821046fa01c219d35be1b\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://5ea15ef7c8980240ccd46df13809d163f749bc0a01d8bced1875660d4872da1c\",\"dweb:/ipfs/QmbDfAT9VeCSG4cnPd6tjDMp8ED85dLHbWyMyv7wbmL4CH\"]},\"@openzeppelin/contracts/token/ERC721/IERC721.sol\":{\"keccak256\":\"0xab28a56179c1db258c9bf5235b382698cb650debecb51b23d12be9e241374b68\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://daae589a9d6fa7e55f99f86c0a16796ca490f243fb3693632c3711c0646c1d56\",\"dweb:/ipfs/QmR3zpd7wNw3rcUdekwiv6FYHJqksuTCXLVioTxu6Fbxk3\"]},\"@openzeppelin/contracts/token/ERC721/IERC721Receiver.sol\":{\"keccak256\":\"0xa82b58eca1ee256be466e536706850163d2ec7821945abd6b4778cfb3bee37da\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://6e75cf83beb757b8855791088546b8337e9d4684e169400c20d44a515353b708\",\"dweb:/ipfs/QmYvPafLfoquiDMEj7CKHtvbgHu7TJNPSVPSCjrtjV8HjV\"]},\"@openzeppelin/contracts/token/ERC721/extensions/IERC721Metadata.sol\":{\"keccak256\":\"0x75b829ff2f26c14355d1cba20e16fe7b29ca58eb5fef665ede48bc0f9c6c74b9\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://a0a107160525724f9e1bbbab031defc2f298296dd9e331f16a6f7130cec32146\",\"dweb:/ipfs/QmemujxSd7gX8A9M8UwmNbz4Ms3U9FG9QfudUgxwvTmPWf\"]},\"@openzeppelin/contracts/utils/Address.sol\":{\"keccak256\":\"0xf96f969e24029d43d0df89e59d365f277021dac62b48e1c1e3ebe0acdd7f1ca1\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://ec772b45a624be516f1c81970caa8a2e144301e9d0921cbc1a2789fef39a1269\",\"dweb:/ipfs/QmNyjwxCrGhQMyzLD93oUobJXVe9ceJvRvfXwbEtuxPiEj\"]},\"@openzeppelin/contracts/utils/Context.sol\":{\"keccak256\":\"0xe2e337e6dde9ef6b680e07338c493ebea1b5fd09b43424112868e9cc1706bca7\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://6df0ddf21ce9f58271bdfaa85cde98b200ef242a05a3f85c2bc10a8294800a92\",\"dweb:/ipfs/QmRK2Y5Yc6BK7tGKkgsgn3aJEQGi5aakeSPZvS65PV8Xp3\"]},\"@openzeppelin/contracts/utils/Counters.sol\":{\"keccak256\":\"0xf0018c2440fbe238dd3a8732fa8e17a0f9dce84d31451dc8a32f6d62b349c9f1\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://59e1c62884d55b70f3ae5432b44bb3166ad71ae3acd19c57ab6ddc3c87c325ee\",\"dweb:/ipfs/QmezuXg5GK5oeA4F91EZhozBFekhq5TD966bHPH18cCqhu\"]},\"@openzeppelin/contracts/utils/Strings.sol\":{\"keccak256\":\"0xa4d1d62251f8574deb032a35fc948386a9b4de74b812d4f545a1ac120486b48a\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://8c969013129ba9e651a20735ef659fef6d8a1139ea3607bd4b26ddea2d645634\",\"dweb:/ipfs/QmVhVa6LGuzAcB8qgDtVHRkucn4ihj5UZr8xBLcJkP6ucb\"]},\"@openzeppelin/contracts/utils/introspection/ERC165.sol\":{\"keccak256\":\"0xd10975de010d89fd1c78dc5e8a9a7e7f496198085c151648f20cba166b32582b\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://fb0048dee081f6fffa5f74afc3fb328483c2a30504e94a0ddd2a5114d731ec4d\",\"dweb:/ipfs/QmZptt1nmYoA5SgjwnSgWqgUSDgm4q52Yos3xhnMv3MV43\"]},\"@openzeppelin/contracts/utils/introspection/IERC165.sol\":{\"keccak256\":\"0x447a5f3ddc18419d41ff92b3773fb86471b1db25773e07f877f548918a185bf1\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://be161e54f24e5c6fae81a12db1a8ae87bc5ae1b0ddc805d82a1440a68455088f\",\"dweb:/ipfs/QmP7C3CHdY9urF4dEMb9wmsp1wMxHF6nhA2yQE5SKiPAdy\"]},\"@openzeppelin/contracts/utils/math/Math.sol\":{\"keccak256\":\"0xa1e8e83cd0087785df04ac79fb395d9f3684caeaf973d9e2c71caef723a3a5d6\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://33bbf48cc069be677705037ba7520c22b1b622c23b33e1a71495f2d36549d40b\",\"dweb:/ipfs/Qmct36zWXv3j7LZB83uwbg7TXwnZSN1fqHNDZ93GG98bGz\"]},\"contracts/SmashNFT_Marketplace_1.sol\":{\"keccak256\":\"0x43ca7b8c737a4c22d226ab56f2a0141ee72e394eaa98dceeed2a064b40bd4b99\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://8822f285f0c3c597c84761f9eba69b020bb35982c5d9958be7f04caf7cc3eb19\",\"dweb:/ipfs/QmU5TWBxE4gEYeckXVnVXVughae4FCkay5aZ5Z1tJyGruS\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [
							{
								"astId": 123,
								"contract": "contracts/SmashNFT_Marketplace_1.sol:SmashNFT_Marketplace",
								"label": "_status",
								"offset": 0,
								"slot": "0",
								"type": "t_uint256"
							},
							{
								"astId": 7,
								"contract": "contracts/SmashNFT_Marketplace_1.sol:SmashNFT_Marketplace",
								"label": "_owner",
								"offset": 0,
								"slot": "1",
								"type": "t_address"
							},
							{
								"astId": 2792,
								"contract": "contracts/SmashNFT_Marketplace_1.sol:SmashNFT_Marketplace",
								"label": "_nftsSold",
								"offset": 0,
								"slot": "2",
								"type": "t_struct(Counter)1630_storage"
							},
							{
								"astId": 2795,
								"contract": "contracts/SmashNFT_Marketplace_1.sol:SmashNFT_Marketplace",
								"label": "_nftCount",
								"offset": 0,
								"slot": "3",
								"type": "t_struct(Counter)1630_storage"
							},
							{
								"astId": 2798,
								"contract": "contracts/SmashNFT_Marketplace_1.sol:SmashNFT_Marketplace",
								"label": "LISTING_FEE",
								"offset": 0,
								"slot": "4",
								"type": "t_uint256"
							},
							{
								"astId": 2800,
								"contract": "contracts/SmashNFT_Marketplace_1.sol:SmashNFT_Marketplace",
								"label": "_marketOwner",
								"offset": 0,
								"slot": "5",
								"type": "t_address_payable"
							},
							{
								"astId": 2804,
								"contract": "contracts/SmashNFT_Marketplace_1.sol:SmashNFT_Marketplace",
								"label": "FirstOwner",
								"offset": 0,
								"slot": "6",
								"type": "t_mapping(t_uint256,t_address)"
							},
							{
								"astId": 2809,
								"contract": "contracts/SmashNFT_Marketplace_1.sol:SmashNFT_Marketplace",
								"label": "check",
								"offset": 0,
								"slot": "7",
								"type": "t_mapping(t_uint256,t_struct(Check)2832_storage)"
							},
							{
								"astId": 2814,
								"contract": "contracts/SmashNFT_Marketplace_1.sol:SmashNFT_Marketplace",
								"label": "_idToNFT",
								"offset": 0,
								"slot": "8",
								"type": "t_mapping(t_uint256,t_struct(NFT)2827_storage)"
							},
							{
								"astId": 2859,
								"contract": "contracts/SmashNFT_Marketplace_1.sol:SmashNFT_Marketplace",
								"label": "token",
								"offset": 0,
								"slot": "9",
								"type": "t_contract(ERC721)1111"
							},
							{
								"astId": 2861,
								"contract": "contracts/SmashNFT_Marketplace_1.sol:SmashNFT_Marketplace",
								"label": "MinterAddress",
								"offset": 0,
								"slot": "10",
								"type": "t_address"
							}
						],
						"types": {
							"t_address": {
								"encoding": "inplace",
								"label": "address",
								"numberOfBytes": "20"
							},
							"t_address_payable": {
								"encoding": "inplace",
								"label": "address payable",
								"numberOfBytes": "20"
							},
							"t_bool": {
								"encoding": "inplace",
								"label": "bool",
								"numberOfBytes": "1"
							},
							"t_contract(ERC721)1111": {
								"encoding": "inplace",
								"label": "contract ERC721",
								"numberOfBytes": "20"
							},
							"t_mapping(t_uint256,t_address)": {
								"encoding": "mapping",
								"key": "t_uint256",
								"label": "mapping(uint256 => address)",
								"numberOfBytes": "32",
								"value": "t_address"
							},
							"t_mapping(t_uint256,t_struct(Check)2832_storage)": {
								"encoding": "mapping",
								"key": "t_uint256",
								"label": "mapping(uint256 => struct SmashNFT_Marketplace.Check)",
								"numberOfBytes": "32",
								"value": "t_struct(Check)2832_storage"
							},
							"t_mapping(t_uint256,t_struct(NFT)2827_storage)": {
								"encoding": "mapping",
								"key": "t_uint256",
								"label": "mapping(uint256 => struct SmashNFT_Marketplace.NFT)",
								"numberOfBytes": "32",
								"value": "t_struct(NFT)2827_storage"
							},
							"t_struct(Check)2832_storage": {
								"encoding": "inplace",
								"label": "struct SmashNFT_Marketplace.Check",
								"members": [
									{
										"astId": 2829,
										"contract": "contracts/SmashNFT_Marketplace_1.sol:SmashNFT_Marketplace",
										"label": "_check",
										"offset": 0,
										"slot": "0",
										"type": "t_bool"
									},
									{
										"astId": 2831,
										"contract": "contracts/SmashNFT_Marketplace_1.sol:SmashNFT_Marketplace",
										"label": "_address",
										"offset": 1,
										"slot": "0",
										"type": "t_address"
									}
								],
								"numberOfBytes": "32"
							},
							"t_struct(Counter)1630_storage": {
								"encoding": "inplace",
								"label": "struct Counters.Counter",
								"members": [
									{
										"astId": 1629,
										"contract": "contracts/SmashNFT_Marketplace_1.sol:SmashNFT_Marketplace",
										"label": "_value",
										"offset": 0,
										"slot": "0",
										"type": "t_uint256"
									}
								],
								"numberOfBytes": "32"
							},
							"t_struct(NFT)2827_storage": {
								"encoding": "inplace",
								"label": "struct SmashNFT_Marketplace.NFT",
								"members": [
									{
										"astId": 2816,
										"contract": "contracts/SmashNFT_Marketplace_1.sol:SmashNFT_Marketplace",
										"label": "nftContract",
										"offset": 0,
										"slot": "0",
										"type": "t_address"
									},
									{
										"astId": 2818,
										"contract": "contracts/SmashNFT_Marketplace_1.sol:SmashNFT_Marketplace",
										"label": "tokenId",
										"offset": 0,
										"slot": "1",
										"type": "t_uint256"
									},
									{
										"astId": 2820,
										"contract": "contracts/SmashNFT_Marketplace_1.sol:SmashNFT_Marketplace",
										"label": "seller",
										"offset": 0,
										"slot": "2",
										"type": "t_address_payable"
									},
									{
										"astId": 2822,
										"contract": "contracts/SmashNFT_Marketplace_1.sol:SmashNFT_Marketplace",
										"label": "owner",
										"offset": 0,
										"slot": "3",
										"type": "t_address_payable"
									},
									{
										"astId": 2824,
										"contract": "contracts/SmashNFT_Marketplace_1.sol:SmashNFT_Marketplace",
										"label": "price",
										"offset": 0,
										"slot": "4",
										"type": "t_uint256"
									},
									{
										"astId": 2826,
										"contract": "contracts/SmashNFT_Marketplace_1.sol:SmashNFT_Marketplace",
										"label": "listed",
										"offset": 0,
										"slot": "5",
										"type": "t_bool"
									}
								],
								"numberOfBytes": "192"
							},
							"t_uint256": {
								"encoding": "inplace",
								"label": "uint256",
								"numberOfBytes": "32"
							}
						}
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			}
		},
		"sources": {
			"@openzeppelin/contracts/access/Ownable.sol": {
				"ast": {
					"absolutePath": "@openzeppelin/contracts/access/Ownable.sol",
					"exportedSymbols": {
						"Context": [
							1624
						],
						"Ownable": [
							112
						]
					},
					"id": 113,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 1,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".0"
							],
							"nodeType": "PragmaDirective",
							"src": "102:23:0"
						},
						{
							"absolutePath": "@openzeppelin/contracts/utils/Context.sol",
							"file": "../utils/Context.sol",
							"id": 2,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 113,
							"sourceUnit": 1625,
							"src": "127:30:0",
							"symbolAliases": [],
							"unitAlias": ""
						},
						{
							"abstract": true,
							"baseContracts": [
								{
									"baseName": {
										"id": 4,
										"name": "Context",
										"nameLocations": [
											"683:7:0"
										],
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 1624,
										"src": "683:7:0"
									},
									"id": 5,
									"nodeType": "InheritanceSpecifier",
									"src": "683:7:0"
								}
							],
							"canonicalName": "Ownable",
							"contractDependencies": [],
							"contractKind": "contract",
							"documentation": {
								"id": 3,
								"nodeType": "StructuredDocumentation",
								"src": "159:494:0",
								"text": " @dev Contract module which provides a basic access control mechanism, where\n there is an account (an owner) that can be granted exclusive access to\n specific functions.\n By default, the owner account will be the one that deploys the contract. This\n can later be changed with {transferOwnership}.\n This module is used through inheritance. It will make available the modifier\n `onlyOwner`, which can be applied to your functions to restrict their use to\n the owner."
							},
							"fullyImplemented": true,
							"id": 112,
							"linearizedBaseContracts": [
								112,
								1624
							],
							"name": "Ownable",
							"nameLocation": "672:7:0",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"constant": false,
									"id": 7,
									"mutability": "mutable",
									"name": "_owner",
									"nameLocation": "713:6:0",
									"nodeType": "VariableDeclaration",
									"scope": 112,
									"src": "697:22:0",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_address",
										"typeString": "address"
									},
									"typeName": {
										"id": 6,
										"name": "address",
										"nodeType": "ElementaryTypeName",
										"src": "697:7:0",
										"stateMutability": "nonpayable",
										"typeDescriptions": {
											"typeIdentifier": "t_address",
											"typeString": "address"
										}
									},
									"visibility": "private"
								},
								{
									"anonymous": false,
									"eventSelector": "8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e0",
									"id": 13,
									"name": "OwnershipTransferred",
									"nameLocation": "732:20:0",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 12,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 9,
												"indexed": true,
												"mutability": "mutable",
												"name": "previousOwner",
												"nameLocation": "769:13:0",
												"nodeType": "VariableDeclaration",
												"scope": 13,
												"src": "753:29:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 8,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "753:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 11,
												"indexed": true,
												"mutability": "mutable",
												"name": "newOwner",
												"nameLocation": "800:8:0",
												"nodeType": "VariableDeclaration",
												"scope": 13,
												"src": "784:24:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 10,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "784:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "752:57:0"
									},
									"src": "726:84:0"
								},
								{
									"body": {
										"id": 22,
										"nodeType": "Block",
										"src": "926:49:0",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"arguments": [],
															"expression": {
																"argumentTypes": [],
																"id": 18,
																"name": "_msgSender",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1614,
																"src": "955:10:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
																	"typeString": "function () view returns (address)"
																}
															},
															"id": 19,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "955:12:0",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"id": 17,
														"name": "_transferOwnership",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 111,
														"src": "936:18:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$returns$__$",
															"typeString": "function (address)"
														}
													},
													"id": 20,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "936:32:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 21,
												"nodeType": "ExpressionStatement",
												"src": "936:32:0"
											}
										]
									},
									"documentation": {
										"id": 14,
										"nodeType": "StructuredDocumentation",
										"src": "816:91:0",
										"text": " @dev Initializes the contract setting the deployer as the initial owner."
									},
									"id": 23,
									"implemented": true,
									"kind": "constructor",
									"modifiers": [],
									"name": "",
									"nameLocation": "-1:-1:-1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 15,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "923:2:0"
									},
									"returnParameters": {
										"id": 16,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "926:0:0"
									},
									"scope": 112,
									"src": "912:63:0",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 30,
										"nodeType": "Block",
										"src": "1084:41:0",
										"statements": [
											{
												"expression": {
													"arguments": [],
													"expression": {
														"argumentTypes": [],
														"id": 26,
														"name": "_checkOwner",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 54,
														"src": "1094:11:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_view$__$returns$__$",
															"typeString": "function () view"
														}
													},
													"id": 27,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1094:13:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 28,
												"nodeType": "ExpressionStatement",
												"src": "1094:13:0"
											},
											{
												"id": 29,
												"nodeType": "PlaceholderStatement",
												"src": "1117:1:0"
											}
										]
									},
									"documentation": {
										"id": 24,
										"nodeType": "StructuredDocumentation",
										"src": "981:77:0",
										"text": " @dev Throws if called by any account other than the owner."
									},
									"id": 31,
									"name": "onlyOwner",
									"nameLocation": "1072:9:0",
									"nodeType": "ModifierDefinition",
									"parameters": {
										"id": 25,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1081:2:0"
									},
									"src": "1063:62:0",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 39,
										"nodeType": "Block",
										"src": "1256:30:0",
										"statements": [
											{
												"expression": {
													"id": 37,
													"name": "_owner",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 7,
													"src": "1273:6:0",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"functionReturnParameters": 36,
												"id": 38,
												"nodeType": "Return",
												"src": "1266:13:0"
											}
										]
									},
									"documentation": {
										"id": 32,
										"nodeType": "StructuredDocumentation",
										"src": "1131:65:0",
										"text": " @dev Returns the address of the current owner."
									},
									"functionSelector": "8da5cb5b",
									"id": 40,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "owner",
									"nameLocation": "1210:5:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 33,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1215:2:0"
									},
									"returnParameters": {
										"id": 36,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 35,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 40,
												"src": "1247:7:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 34,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1247:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1246:9:0"
									},
									"scope": 112,
									"src": "1201:85:0",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "public"
								},
								{
									"body": {
										"id": 53,
										"nodeType": "Block",
										"src": "1404:85:0",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															"id": 49,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"arguments": [],
																"expression": {
																	"argumentTypes": [],
																	"id": 45,
																	"name": "owner",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 40,
																	"src": "1422:5:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
																		"typeString": "function () view returns (address)"
																	}
																},
																"id": 46,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "1422:7:0",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "==",
															"rightExpression": {
																"arguments": [],
																"expression": {
																	"argumentTypes": [],
																	"id": 47,
																	"name": "_msgSender",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1614,
																	"src": "1433:10:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
																		"typeString": "function () view returns (address)"
																	}
																},
																"id": 48,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "1433:12:0",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"src": "1422:23:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e6572",
															"id": 50,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "1447:34:0",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_9924ebdf1add33d25d4ef888e16131f0a5687b0580a36c21b5c301a6c462effe",
																"typeString": "literal_string \"Ownable: caller is not the owner\""
															},
															"value": "Ownable: caller is not the owner"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_9924ebdf1add33d25d4ef888e16131f0a5687b0580a36c21b5c301a6c462effe",
																"typeString": "literal_string \"Ownable: caller is not the owner\""
															}
														],
														"id": 44,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "1414:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 51,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1414:68:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 52,
												"nodeType": "ExpressionStatement",
												"src": "1414:68:0"
											}
										]
									},
									"documentation": {
										"id": 41,
										"nodeType": "StructuredDocumentation",
										"src": "1292:62:0",
										"text": " @dev Throws if the sender is not the owner."
									},
									"id": 54,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_checkOwner",
									"nameLocation": "1368:11:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 42,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1379:2:0"
									},
									"returnParameters": {
										"id": 43,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1404:0:0"
									},
									"scope": 112,
									"src": "1359:130:0",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 67,
										"nodeType": "Block",
										"src": "1885:47:0",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"arguments": [
																{
																	"hexValue": "30",
																	"id": 63,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "1922:1:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	},
																	"value": "0"
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	}
																],
																"id": 62,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "1914:7:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_address_$",
																	"typeString": "type(address)"
																},
																"typeName": {
																	"id": 61,
																	"name": "address",
																	"nodeType": "ElementaryTypeName",
																	"src": "1914:7:0",
																	"typeDescriptions": {}
																}
															},
															"id": 64,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "typeConversion",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "1914:10:0",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"id": 60,
														"name": "_transferOwnership",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 111,
														"src": "1895:18:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$returns$__$",
															"typeString": "function (address)"
														}
													},
													"id": 65,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1895:30:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 66,
												"nodeType": "ExpressionStatement",
												"src": "1895:30:0"
											}
										]
									},
									"documentation": {
										"id": 55,
										"nodeType": "StructuredDocumentation",
										"src": "1495:331:0",
										"text": " @dev Leaves the contract without owner. It will not be possible to call\n `onlyOwner` functions anymore. Can only be called by the current owner.\n NOTE: Renouncing ownership will leave the contract without an owner,\n thereby removing any functionality that is only available to the owner."
									},
									"functionSelector": "715018a6",
									"id": 68,
									"implemented": true,
									"kind": "function",
									"modifiers": [
										{
											"id": 58,
											"kind": "modifierInvocation",
											"modifierName": {
												"id": 57,
												"name": "onlyOwner",
												"nameLocations": [
													"1875:9:0"
												],
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 31,
												"src": "1875:9:0"
											},
											"nodeType": "ModifierInvocation",
											"src": "1875:9:0"
										}
									],
									"name": "renounceOwnership",
									"nameLocation": "1840:17:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 56,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1857:2:0"
									},
									"returnParameters": {
										"id": 59,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1885:0:0"
									},
									"scope": 112,
									"src": "1831:101:0",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "public"
								},
								{
									"body": {
										"id": 90,
										"nodeType": "Block",
										"src": "2151:128:0",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															"id": 82,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 77,
																"name": "newOwner",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 71,
																"src": "2169:8:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "!=",
															"rightExpression": {
																"arguments": [
																	{
																		"hexValue": "30",
																		"id": 80,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "2189:1:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		},
																		"value": "0"
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		}
																	],
																	"id": 79,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"lValueRequested": false,
																	"nodeType": "ElementaryTypeNameExpression",
																	"src": "2181:7:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_type$_t_address_$",
																		"typeString": "type(address)"
																	},
																	"typeName": {
																		"id": 78,
																		"name": "address",
																		"nodeType": "ElementaryTypeName",
																		"src": "2181:7:0",
																		"typeDescriptions": {}
																	}
																},
																"id": 81,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "typeConversion",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "2181:10:0",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"src": "2169:22:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "4f776e61626c653a206e6577206f776e657220697320746865207a65726f2061646472657373",
															"id": 83,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "2193:40:0",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_245f15ff17f551913a7a18385165551503906a406f905ac1c2437281a7cd0cfe",
																"typeString": "literal_string \"Ownable: new owner is the zero address\""
															},
															"value": "Ownable: new owner is the zero address"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_245f15ff17f551913a7a18385165551503906a406f905ac1c2437281a7cd0cfe",
																"typeString": "literal_string \"Ownable: new owner is the zero address\""
															}
														],
														"id": 76,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "2161:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 84,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2161:73:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 85,
												"nodeType": "ExpressionStatement",
												"src": "2161:73:0"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 87,
															"name": "newOwner",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 71,
															"src": "2263:8:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"id": 86,
														"name": "_transferOwnership",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 111,
														"src": "2244:18:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$returns$__$",
															"typeString": "function (address)"
														}
													},
													"id": 88,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2244:28:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 89,
												"nodeType": "ExpressionStatement",
												"src": "2244:28:0"
											}
										]
									},
									"documentation": {
										"id": 69,
										"nodeType": "StructuredDocumentation",
										"src": "1938:138:0",
										"text": " @dev Transfers ownership of the contract to a new account (`newOwner`).\n Can only be called by the current owner."
									},
									"functionSelector": "f2fde38b",
									"id": 91,
									"implemented": true,
									"kind": "function",
									"modifiers": [
										{
											"id": 74,
											"kind": "modifierInvocation",
											"modifierName": {
												"id": 73,
												"name": "onlyOwner",
												"nameLocations": [
													"2141:9:0"
												],
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 31,
												"src": "2141:9:0"
											},
											"nodeType": "ModifierInvocation",
											"src": "2141:9:0"
										}
									],
									"name": "transferOwnership",
									"nameLocation": "2090:17:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 72,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 71,
												"mutability": "mutable",
												"name": "newOwner",
												"nameLocation": "2116:8:0",
												"nodeType": "VariableDeclaration",
												"scope": 91,
												"src": "2108:16:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 70,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2108:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2107:18:0"
									},
									"returnParameters": {
										"id": 75,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2151:0:0"
									},
									"scope": 112,
									"src": "2081:198:0",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "public"
								},
								{
									"body": {
										"id": 110,
										"nodeType": "Block",
										"src": "2496:124:0",
										"statements": [
											{
												"assignments": [
													98
												],
												"declarations": [
													{
														"constant": false,
														"id": 98,
														"mutability": "mutable",
														"name": "oldOwner",
														"nameLocation": "2514:8:0",
														"nodeType": "VariableDeclaration",
														"scope": 110,
														"src": "2506:16:0",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														},
														"typeName": {
															"id": 97,
															"name": "address",
															"nodeType": "ElementaryTypeName",
															"src": "2506:7:0",
															"stateMutability": "nonpayable",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 100,
												"initialValue": {
													"id": 99,
													"name": "_owner",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 7,
													"src": "2525:6:0",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "2506:25:0"
											},
											{
												"expression": {
													"id": 103,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 101,
														"name": "_owner",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 7,
														"src": "2541:6:0",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"id": 102,
														"name": "newOwner",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 94,
														"src": "2550:8:0",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "2541:17:0",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"id": 104,
												"nodeType": "ExpressionStatement",
												"src": "2541:17:0"
											},
											{
												"eventCall": {
													"arguments": [
														{
															"id": 106,
															"name": "oldOwner",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 98,
															"src": "2594:8:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 107,
															"name": "newOwner",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 94,
															"src": "2604:8:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"id": 105,
														"name": "OwnershipTransferred",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 13,
														"src": "2573:20:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_address_$returns$__$",
															"typeString": "function (address,address)"
														}
													},
													"id": 108,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2573:40:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 109,
												"nodeType": "EmitStatement",
												"src": "2568:45:0"
											}
										]
									},
									"documentation": {
										"id": 92,
										"nodeType": "StructuredDocumentation",
										"src": "2285:143:0",
										"text": " @dev Transfers ownership of the contract to a new account (`newOwner`).\n Internal function without access restriction."
									},
									"id": 111,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_transferOwnership",
									"nameLocation": "2442:18:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 95,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 94,
												"mutability": "mutable",
												"name": "newOwner",
												"nameLocation": "2469:8:0",
												"nodeType": "VariableDeclaration",
												"scope": 111,
												"src": "2461:16:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 93,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2461:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2460:18:0"
									},
									"returnParameters": {
										"id": 96,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2496:0:0"
									},
									"scope": 112,
									"src": "2433:187:0",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "internal"
								}
							],
							"scope": 113,
							"src": "654:1968:0",
							"usedErrors": [],
							"usedEvents": [
								13
							]
						}
					],
					"src": "102:2521:0"
				},
				"id": 0
			},
			"@openzeppelin/contracts/security/ReentrancyGuard.sol": {
				"ast": {
					"absolutePath": "@openzeppelin/contracts/security/ReentrancyGuard.sol",
					"exportedSymbols": {
						"ReentrancyGuard": [
							166
						]
					},
					"id": 167,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 114,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".0"
							],
							"nodeType": "PragmaDirective",
							"src": "112:23:1"
						},
						{
							"abstract": true,
							"baseContracts": [],
							"canonicalName": "ReentrancyGuard",
							"contractDependencies": [],
							"contractKind": "contract",
							"documentation": {
								"id": 115,
								"nodeType": "StructuredDocumentation",
								"src": "137:750:1",
								"text": " @dev Contract module that helps prevent reentrant calls to a function.\n Inheriting from `ReentrancyGuard` will make the {nonReentrant} modifier\n available, which can be applied to functions to make sure there are no nested\n (reentrant) calls to them.\n Note that because there is a single `nonReentrant` guard, functions marked as\n `nonReentrant` may not call one another. This can be worked around by making\n those functions `private`, and then adding `external` `nonReentrant` entry\n points to them.\n TIP: If you would like to learn more about reentrancy and alternative ways\n to protect against it, check out our blog post\n https://blog.openzeppelin.com/reentrancy-after-istanbul/[Reentrancy After Istanbul]."
							},
							"fullyImplemented": true,
							"id": 166,
							"linearizedBaseContracts": [
								166
							],
							"name": "ReentrancyGuard",
							"nameLocation": "906:15:1",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"constant": true,
									"id": 118,
									"mutability": "constant",
									"name": "_NOT_ENTERED",
									"nameLocation": "1701:12:1",
									"nodeType": "VariableDeclaration",
									"scope": 166,
									"src": "1676:41:1",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_uint256",
										"typeString": "uint256"
									},
									"typeName": {
										"id": 116,
										"name": "uint256",
										"nodeType": "ElementaryTypeName",
										"src": "1676:7:1",
										"typeDescriptions": {
											"typeIdentifier": "t_uint256",
											"typeString": "uint256"
										}
									},
									"value": {
										"hexValue": "31",
										"id": 117,
										"isConstant": false,
										"isLValue": false,
										"isPure": true,
										"kind": "number",
										"lValueRequested": false,
										"nodeType": "Literal",
										"src": "1716:1:1",
										"typeDescriptions": {
											"typeIdentifier": "t_rational_1_by_1",
											"typeString": "int_const 1"
										},
										"value": "1"
									},
									"visibility": "private"
								},
								{
									"constant": true,
									"id": 121,
									"mutability": "constant",
									"name": "_ENTERED",
									"nameLocation": "1748:8:1",
									"nodeType": "VariableDeclaration",
									"scope": 166,
									"src": "1723:37:1",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_uint256",
										"typeString": "uint256"
									},
									"typeName": {
										"id": 119,
										"name": "uint256",
										"nodeType": "ElementaryTypeName",
										"src": "1723:7:1",
										"typeDescriptions": {
											"typeIdentifier": "t_uint256",
											"typeString": "uint256"
										}
									},
									"value": {
										"hexValue": "32",
										"id": 120,
										"isConstant": false,
										"isLValue": false,
										"isPure": true,
										"kind": "number",
										"lValueRequested": false,
										"nodeType": "Literal",
										"src": "1759:1:1",
										"typeDescriptions": {
											"typeIdentifier": "t_rational_2_by_1",
											"typeString": "int_const 2"
										},
										"value": "2"
									},
									"visibility": "private"
								},
								{
									"constant": false,
									"id": 123,
									"mutability": "mutable",
									"name": "_status",
									"nameLocation": "1783:7:1",
									"nodeType": "VariableDeclaration",
									"scope": 166,
									"src": "1767:23:1",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_uint256",
										"typeString": "uint256"
									},
									"typeName": {
										"id": 122,
										"name": "uint256",
										"nodeType": "ElementaryTypeName",
										"src": "1767:7:1",
										"typeDescriptions": {
											"typeIdentifier": "t_uint256",
											"typeString": "uint256"
										}
									},
									"visibility": "private"
								},
								{
									"body": {
										"id": 130,
										"nodeType": "Block",
										"src": "1811:39:1",
										"statements": [
											{
												"expression": {
													"id": 128,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 126,
														"name": "_status",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 123,
														"src": "1821:7:1",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"id": 127,
														"name": "_NOT_ENTERED",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 118,
														"src": "1831:12:1",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "1821:22:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 129,
												"nodeType": "ExpressionStatement",
												"src": "1821:22:1"
											}
										]
									},
									"id": 131,
									"implemented": true,
									"kind": "constructor",
									"modifiers": [],
									"name": "",
									"nameLocation": "-1:-1:-1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 124,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1808:2:1"
									},
									"returnParameters": {
										"id": 125,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1811:0:1"
									},
									"scope": 166,
									"src": "1797:53:1",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 141,
										"nodeType": "Block",
										"src": "2251:79:1",
										"statements": [
											{
												"expression": {
													"arguments": [],
													"expression": {
														"argumentTypes": [],
														"id": 134,
														"name": "_nonReentrantBefore",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 157,
														"src": "2261:19:1",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$__$returns$__$",
															"typeString": "function ()"
														}
													},
													"id": 135,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2261:21:1",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 136,
												"nodeType": "ExpressionStatement",
												"src": "2261:21:1"
											},
											{
												"id": 137,
												"nodeType": "PlaceholderStatement",
												"src": "2292:1:1"
											},
											{
												"expression": {
													"arguments": [],
													"expression": {
														"argumentTypes": [],
														"id": 138,
														"name": "_nonReentrantAfter",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 165,
														"src": "2303:18:1",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$__$returns$__$",
															"typeString": "function ()"
														}
													},
													"id": 139,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2303:20:1",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 140,
												"nodeType": "ExpressionStatement",
												"src": "2303:20:1"
											}
										]
									},
									"documentation": {
										"id": 132,
										"nodeType": "StructuredDocumentation",
										"src": "1856:366:1",
										"text": " @dev Prevents a contract from calling itself, directly or indirectly.\n Calling a `nonReentrant` function from another `nonReentrant`\n function is not supported. It is possible to prevent this from happening\n by making the `nonReentrant` function external, and making it call a\n `private` function that does the actual work."
									},
									"id": 142,
									"name": "nonReentrant",
									"nameLocation": "2236:12:1",
									"nodeType": "ModifierDefinition",
									"parameters": {
										"id": 133,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2248:2:1"
									},
									"src": "2227:103:1",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 156,
										"nodeType": "Block",
										"src": "2375:248:1",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 148,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 146,
																"name": "_status",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 123,
																"src": "2468:7:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "!=",
															"rightExpression": {
																"id": 147,
																"name": "_ENTERED",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 121,
																"src": "2479:8:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "2468:19:1",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "5265656e7472616e637947756172643a207265656e7472616e742063616c6c",
															"id": 149,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "2489:33:1",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_ebf73bba305590e4764d5cb53b69bffd6d4d092d1a67551cb346f8cfcdab8619",
																"typeString": "literal_string \"ReentrancyGuard: reentrant call\""
															},
															"value": "ReentrancyGuard: reentrant call"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_ebf73bba305590e4764d5cb53b69bffd6d4d092d1a67551cb346f8cfcdab8619",
																"typeString": "literal_string \"ReentrancyGuard: reentrant call\""
															}
														],
														"id": 145,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "2460:7:1",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 150,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2460:63:1",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 151,
												"nodeType": "ExpressionStatement",
												"src": "2460:63:1"
											},
											{
												"expression": {
													"id": 154,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 152,
														"name": "_status",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 123,
														"src": "2598:7:1",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"id": 153,
														"name": "_ENTERED",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 121,
														"src": "2608:8:1",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "2598:18:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 155,
												"nodeType": "ExpressionStatement",
												"src": "2598:18:1"
											}
										]
									},
									"id": 157,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_nonReentrantBefore",
									"nameLocation": "2345:19:1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 143,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2364:2:1"
									},
									"returnParameters": {
										"id": 144,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2375:0:1"
									},
									"scope": 166,
									"src": "2336:287:1",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "private"
								},
								{
									"body": {
										"id": 164,
										"nodeType": "Block",
										"src": "2667:171:1",
										"statements": [
											{
												"expression": {
													"id": 162,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 160,
														"name": "_status",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 123,
														"src": "2809:7:1",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"id": 161,
														"name": "_NOT_ENTERED",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 118,
														"src": "2819:12:1",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "2809:22:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 163,
												"nodeType": "ExpressionStatement",
												"src": "2809:22:1"
											}
										]
									},
									"id": 165,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_nonReentrantAfter",
									"nameLocation": "2638:18:1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 158,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2656:2:1"
									},
									"returnParameters": {
										"id": 159,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2667:0:1"
									},
									"scope": 166,
									"src": "2629:209:1",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "private"
								}
							],
							"scope": 167,
							"src": "888:1952:1",
							"usedErrors": [],
							"usedEvents": []
						}
					],
					"src": "112:2729:1"
				},
				"id": 1
			},
			"@openzeppelin/contracts/token/ERC721/ERC721.sol": {
				"ast": {
					"absolutePath": "@openzeppelin/contracts/token/ERC721/ERC721.sol",
					"exportedSymbols": {
						"Address": [
							1602
						],
						"Context": [
							1624
						],
						"ERC165": [
							1897
						],
						"ERC721": [
							1111
						],
						"IERC165": [
							1909
						],
						"IERC721": [
							1227
						],
						"IERC721Metadata": [
							1272
						],
						"IERC721Receiver": [
							1245
						],
						"Math": [
							2774
						],
						"Strings": [
							1873
						]
					},
					"id": 1112,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 168,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".0"
							],
							"nodeType": "PragmaDirective",
							"src": "107:23:2"
						},
						{
							"absolutePath": "@openzeppelin/contracts/token/ERC721/IERC721.sol",
							"file": "./IERC721.sol",
							"id": 169,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 1112,
							"sourceUnit": 1228,
							"src": "132:23:2",
							"symbolAliases": [],
							"unitAlias": ""
						},
						{
							"absolutePath": "@openzeppelin/contracts/token/ERC721/IERC721Receiver.sol",
							"file": "./IERC721Receiver.sol",
							"id": 170,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 1112,
							"sourceUnit": 1246,
							"src": "156:31:2",
							"symbolAliases": [],
							"unitAlias": ""
						},
						{
							"absolutePath": "@openzeppelin/contracts/token/ERC721/extensions/IERC721Metadata.sol",
							"file": "./extensions/IERC721Metadata.sol",
							"id": 171,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 1112,
							"sourceUnit": 1273,
							"src": "188:42:2",
							"symbolAliases": [],
							"unitAlias": ""
						},
						{
							"absolutePath": "@openzeppelin/contracts/utils/Address.sol",
							"file": "../../utils/Address.sol",
							"id": 172,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 1112,
							"sourceUnit": 1603,
							"src": "231:33:2",
							"symbolAliases": [],
							"unitAlias": ""
						},
						{
							"absolutePath": "@openzeppelin/contracts/utils/Context.sol",
							"file": "../../utils/Context.sol",
							"id": 173,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 1112,
							"sourceUnit": 1625,
							"src": "265:33:2",
							"symbolAliases": [],
							"unitAlias": ""
						},
						{
							"absolutePath": "@openzeppelin/contracts/utils/Strings.sol",
							"file": "../../utils/Strings.sol",
							"id": 174,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 1112,
							"sourceUnit": 1874,
							"src": "299:33:2",
							"symbolAliases": [],
							"unitAlias": ""
						},
						{
							"absolutePath": "@openzeppelin/contracts/utils/introspection/ERC165.sol",
							"file": "../../utils/introspection/ERC165.sol",
							"id": 175,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 1112,
							"sourceUnit": 1898,
							"src": "333:46:2",
							"symbolAliases": [],
							"unitAlias": ""
						},
						{
							"abstract": false,
							"baseContracts": [
								{
									"baseName": {
										"id": 177,
										"name": "Context",
										"nameLocations": [
											"647:7:2"
										],
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 1624,
										"src": "647:7:2"
									},
									"id": 178,
									"nodeType": "InheritanceSpecifier",
									"src": "647:7:2"
								},
								{
									"baseName": {
										"id": 179,
										"name": "ERC165",
										"nameLocations": [
											"656:6:2"
										],
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 1897,
										"src": "656:6:2"
									},
									"id": 180,
									"nodeType": "InheritanceSpecifier",
									"src": "656:6:2"
								},
								{
									"baseName": {
										"id": 181,
										"name": "IERC721",
										"nameLocations": [
											"664:7:2"
										],
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 1227,
										"src": "664:7:2"
									},
									"id": 182,
									"nodeType": "InheritanceSpecifier",
									"src": "664:7:2"
								},
								{
									"baseName": {
										"id": 183,
										"name": "IERC721Metadata",
										"nameLocations": [
											"673:15:2"
										],
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 1272,
										"src": "673:15:2"
									},
									"id": 184,
									"nodeType": "InheritanceSpecifier",
									"src": "673:15:2"
								}
							],
							"canonicalName": "ERC721",
							"contractDependencies": [],
							"contractKind": "contract",
							"documentation": {
								"id": 176,
								"nodeType": "StructuredDocumentation",
								"src": "381:246:2",
								"text": " @dev Implementation of https://eips.ethereum.org/EIPS/eip-721[ERC721] Non-Fungible Token Standard, including\n the Metadata extension, but not including the Enumerable extension, which is available separately as\n {ERC721Enumerable}."
							},
							"fullyImplemented": true,
							"id": 1111,
							"linearizedBaseContracts": [
								1111,
								1272,
								1227,
								1897,
								1909,
								1624
							],
							"name": "ERC721",
							"nameLocation": "637:6:2",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"global": false,
									"id": 187,
									"libraryName": {
										"id": 185,
										"name": "Address",
										"nameLocations": [
											"701:7:2"
										],
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 1602,
										"src": "701:7:2"
									},
									"nodeType": "UsingForDirective",
									"src": "695:26:2",
									"typeName": {
										"id": 186,
										"name": "address",
										"nodeType": "ElementaryTypeName",
										"src": "713:7:2",
										"stateMutability": "nonpayable",
										"typeDescriptions": {
											"typeIdentifier": "t_address",
											"typeString": "address"
										}
									}
								},
								{
									"global": false,
									"id": 190,
									"libraryName": {
										"id": 188,
										"name": "Strings",
										"nameLocations": [
											"732:7:2"
										],
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 1873,
										"src": "732:7:2"
									},
									"nodeType": "UsingForDirective",
									"src": "726:26:2",
									"typeName": {
										"id": 189,
										"name": "uint256",
										"nodeType": "ElementaryTypeName",
										"src": "744:7:2",
										"typeDescriptions": {
											"typeIdentifier": "t_uint256",
											"typeString": "uint256"
										}
									}
								},
								{
									"constant": false,
									"id": 192,
									"mutability": "mutable",
									"name": "_name",
									"nameLocation": "791:5:2",
									"nodeType": "VariableDeclaration",
									"scope": 1111,
									"src": "776:20:2",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_string_storage",
										"typeString": "string"
									},
									"typeName": {
										"id": 191,
										"name": "string",
										"nodeType": "ElementaryTypeName",
										"src": "776:6:2",
										"typeDescriptions": {
											"typeIdentifier": "t_string_storage_ptr",
											"typeString": "string"
										}
									},
									"visibility": "private"
								},
								{
									"constant": false,
									"id": 194,
									"mutability": "mutable",
									"name": "_symbol",
									"nameLocation": "838:7:2",
									"nodeType": "VariableDeclaration",
									"scope": 1111,
									"src": "823:22:2",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_string_storage",
										"typeString": "string"
									},
									"typeName": {
										"id": 193,
										"name": "string",
										"nodeType": "ElementaryTypeName",
										"src": "823:6:2",
										"typeDescriptions": {
											"typeIdentifier": "t_string_storage_ptr",
											"typeString": "string"
										}
									},
									"visibility": "private"
								},
								{
									"constant": false,
									"id": 198,
									"mutability": "mutable",
									"name": "_owners",
									"nameLocation": "934:7:2",
									"nodeType": "VariableDeclaration",
									"scope": 1111,
									"src": "898:43:2",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_mapping$_t_uint256_$_t_address_$",
										"typeString": "mapping(uint256 => address)"
									},
									"typeName": {
										"id": 197,
										"keyName": "",
										"keyNameLocation": "-1:-1:-1",
										"keyType": {
											"id": 195,
											"name": "uint256",
											"nodeType": "ElementaryTypeName",
											"src": "906:7:2",
											"typeDescriptions": {
												"typeIdentifier": "t_uint256",
												"typeString": "uint256"
											}
										},
										"nodeType": "Mapping",
										"src": "898:27:2",
										"typeDescriptions": {
											"typeIdentifier": "t_mapping$_t_uint256_$_t_address_$",
											"typeString": "mapping(uint256 => address)"
										},
										"valueName": "",
										"valueNameLocation": "-1:-1:-1",
										"valueType": {
											"id": 196,
											"name": "address",
											"nodeType": "ElementaryTypeName",
											"src": "917:7:2",
											"stateMutability": "nonpayable",
											"typeDescriptions": {
												"typeIdentifier": "t_address",
												"typeString": "address"
											}
										}
									},
									"visibility": "private"
								},
								{
									"constant": false,
									"id": 202,
									"mutability": "mutable",
									"name": "_balances",
									"nameLocation": "1028:9:2",
									"nodeType": "VariableDeclaration",
									"scope": 1111,
									"src": "992:45:2",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
										"typeString": "mapping(address => uint256)"
									},
									"typeName": {
										"id": 201,
										"keyName": "",
										"keyNameLocation": "-1:-1:-1",
										"keyType": {
											"id": 199,
											"name": "address",
											"nodeType": "ElementaryTypeName",
											"src": "1000:7:2",
											"typeDescriptions": {
												"typeIdentifier": "t_address",
												"typeString": "address"
											}
										},
										"nodeType": "Mapping",
										"src": "992:27:2",
										"typeDescriptions": {
											"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
											"typeString": "mapping(address => uint256)"
										},
										"valueName": "",
										"valueNameLocation": "-1:-1:-1",
										"valueType": {
											"id": 200,
											"name": "uint256",
											"nodeType": "ElementaryTypeName",
											"src": "1011:7:2",
											"typeDescriptions": {
												"typeIdentifier": "t_uint256",
												"typeString": "uint256"
											}
										}
									},
									"visibility": "private"
								},
								{
									"constant": false,
									"id": 206,
									"mutability": "mutable",
									"name": "_tokenApprovals",
									"nameLocation": "1129:15:2",
									"nodeType": "VariableDeclaration",
									"scope": 1111,
									"src": "1093:51:2",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_mapping$_t_uint256_$_t_address_$",
										"typeString": "mapping(uint256 => address)"
									},
									"typeName": {
										"id": 205,
										"keyName": "",
										"keyNameLocation": "-1:-1:-1",
										"keyType": {
											"id": 203,
											"name": "uint256",
											"nodeType": "ElementaryTypeName",
											"src": "1101:7:2",
											"typeDescriptions": {
												"typeIdentifier": "t_uint256",
												"typeString": "uint256"
											}
										},
										"nodeType": "Mapping",
										"src": "1093:27:2",
										"typeDescriptions": {
											"typeIdentifier": "t_mapping$_t_uint256_$_t_address_$",
											"typeString": "mapping(uint256 => address)"
										},
										"valueName": "",
										"valueNameLocation": "-1:-1:-1",
										"valueType": {
											"id": 204,
											"name": "address",
											"nodeType": "ElementaryTypeName",
											"src": "1112:7:2",
											"stateMutability": "nonpayable",
											"typeDescriptions": {
												"typeIdentifier": "t_address",
												"typeString": "address"
											}
										}
									},
									"visibility": "private"
								},
								{
									"constant": false,
									"id": 212,
									"mutability": "mutable",
									"name": "_operatorApprovals",
									"nameLocation": "1252:18:2",
									"nodeType": "VariableDeclaration",
									"scope": 1111,
									"src": "1199:71:2",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_mapping$_t_address_$_t_mapping$_t_address_$_t_bool_$_$",
										"typeString": "mapping(address => mapping(address => bool))"
									},
									"typeName": {
										"id": 211,
										"keyName": "",
										"keyNameLocation": "-1:-1:-1",
										"keyType": {
											"id": 207,
											"name": "address",
											"nodeType": "ElementaryTypeName",
											"src": "1207:7:2",
											"typeDescriptions": {
												"typeIdentifier": "t_address",
												"typeString": "address"
											}
										},
										"nodeType": "Mapping",
										"src": "1199:44:2",
										"typeDescriptions": {
											"typeIdentifier": "t_mapping$_t_address_$_t_mapping$_t_address_$_t_bool_$_$",
											"typeString": "mapping(address => mapping(address => bool))"
										},
										"valueName": "",
										"valueNameLocation": "-1:-1:-1",
										"valueType": {
											"id": 210,
											"keyName": "",
											"keyNameLocation": "-1:-1:-1",
											"keyType": {
												"id": 208,
												"name": "address",
												"nodeType": "ElementaryTypeName",
												"src": "1226:7:2",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												}
											},
											"nodeType": "Mapping",
											"src": "1218:24:2",
											"typeDescriptions": {
												"typeIdentifier": "t_mapping$_t_address_$_t_bool_$",
												"typeString": "mapping(address => bool)"
											},
											"valueName": "",
											"valueNameLocation": "-1:-1:-1",
											"valueType": {
												"id": 209,
												"name": "bool",
												"nodeType": "ElementaryTypeName",
												"src": "1237:4:2",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												}
											}
										}
									},
									"visibility": "private"
								},
								{
									"body": {
										"id": 228,
										"nodeType": "Block",
										"src": "1446:57:2",
										"statements": [
											{
												"expression": {
													"id": 222,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 220,
														"name": "_name",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 192,
														"src": "1456:5:2",
														"typeDescriptions": {
															"typeIdentifier": "t_string_storage",
															"typeString": "string storage ref"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"id": 221,
														"name": "name_",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 215,
														"src": "1464:5:2",
														"typeDescriptions": {
															"typeIdentifier": "t_string_memory_ptr",
															"typeString": "string memory"
														}
													},
													"src": "1456:13:2",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage",
														"typeString": "string storage ref"
													}
												},
												"id": 223,
												"nodeType": "ExpressionStatement",
												"src": "1456:13:2"
											},
											{
												"expression": {
													"id": 226,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 224,
														"name": "_symbol",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 194,
														"src": "1479:7:2",
														"typeDescriptions": {
															"typeIdentifier": "t_string_storage",
															"typeString": "string storage ref"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"id": 225,
														"name": "symbol_",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 217,
														"src": "1489:7:2",
														"typeDescriptions": {
															"typeIdentifier": "t_string_memory_ptr",
															"typeString": "string memory"
														}
													},
													"src": "1479:17:2",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage",
														"typeString": "string storage ref"
													}
												},
												"id": 227,
												"nodeType": "ExpressionStatement",
												"src": "1479:17:2"
											}
										]
									},
									"documentation": {
										"id": 213,
										"nodeType": "StructuredDocumentation",
										"src": "1277:108:2",
										"text": " @dev Initializes the contract by setting a `name` and a `symbol` to the token collection."
									},
									"id": 229,
									"implemented": true,
									"kind": "constructor",
									"modifiers": [],
									"name": "",
									"nameLocation": "-1:-1:-1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 218,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 215,
												"mutability": "mutable",
												"name": "name_",
												"nameLocation": "1416:5:2",
												"nodeType": "VariableDeclaration",
												"scope": 229,
												"src": "1402:19:2",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 214,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "1402:6:2",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 217,
												"mutability": "mutable",
												"name": "symbol_",
												"nameLocation": "1437:7:2",
												"nodeType": "VariableDeclaration",
												"scope": 229,
												"src": "1423:21:2",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 216,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "1423:6:2",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1401:44:2"
									},
									"returnParameters": {
										"id": 219,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1446:0:2"
									},
									"scope": 1111,
									"src": "1390:113:2",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "public"
								},
								{
									"baseFunctions": [
										1896,
										1908
									],
									"body": {
										"id": 259,
										"nodeType": "Block",
										"src": "1678:192:2",
										"statements": [
											{
												"expression": {
													"commonType": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													},
													"id": 257,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"commonType": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														},
														"id": 252,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftExpression": {
															"commonType": {
																"typeIdentifier": "t_bytes4",
																"typeString": "bytes4"
															},
															"id": 245,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 240,
																"name": "interfaceId",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 232,
																"src": "1707:11:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_bytes4",
																	"typeString": "bytes4"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "==",
															"rightExpression": {
																"expression": {
																	"arguments": [
																		{
																			"id": 242,
																			"name": "IERC721",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1227,
																			"src": "1727:7:2",
																			"typeDescriptions": {
																				"typeIdentifier": "t_type$_t_contract$_IERC721_$1227_$",
																				"typeString": "type(contract IERC721)"
																			}
																		}
																	],
																	"expression": {
																		"argumentTypes": [
																			{
																				"typeIdentifier": "t_type$_t_contract$_IERC721_$1227_$",
																				"typeString": "type(contract IERC721)"
																			}
																		],
																		"id": 241,
																		"name": "type",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 4294967269,
																		"src": "1722:4:2",
																		"typeDescriptions": {
																			"typeIdentifier": "t_function_metatype_pure$__$returns$__$",
																			"typeString": "function () pure"
																		}
																	},
																	"id": 243,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "functionCall",
																	"lValueRequested": false,
																	"nameLocations": [],
																	"names": [],
																	"nodeType": "FunctionCall",
																	"src": "1722:13:2",
																	"tryCall": false,
																	"typeDescriptions": {
																		"typeIdentifier": "t_magic_meta_type_t_contract$_IERC721_$1227",
																		"typeString": "type(contract IERC721)"
																	}
																},
																"id": 244,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"memberLocation": "1736:11:2",
																"memberName": "interfaceId",
																"nodeType": "MemberAccess",
																"src": "1722:25:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_bytes4",
																	"typeString": "bytes4"
																}
															},
															"src": "1707:40:2",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"nodeType": "BinaryOperation",
														"operator": "||",
														"rightExpression": {
															"commonType": {
																"typeIdentifier": "t_bytes4",
																"typeString": "bytes4"
															},
															"id": 251,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 246,
																"name": "interfaceId",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 232,
																"src": "1763:11:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_bytes4",
																	"typeString": "bytes4"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "==",
															"rightExpression": {
																"expression": {
																	"arguments": [
																		{
																			"id": 248,
																			"name": "IERC721Metadata",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1272,
																			"src": "1783:15:2",
																			"typeDescriptions": {
																				"typeIdentifier": "t_type$_t_contract$_IERC721Metadata_$1272_$",
																				"typeString": "type(contract IERC721Metadata)"
																			}
																		}
																	],
																	"expression": {
																		"argumentTypes": [
																			{
																				"typeIdentifier": "t_type$_t_contract$_IERC721Metadata_$1272_$",
																				"typeString": "type(contract IERC721Metadata)"
																			}
																		],
																		"id": 247,
																		"name": "type",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 4294967269,
																		"src": "1778:4:2",
																		"typeDescriptions": {
																			"typeIdentifier": "t_function_metatype_pure$__$returns$__$",
																			"typeString": "function () pure"
																		}
																	},
																	"id": 249,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "functionCall",
																	"lValueRequested": false,
																	"nameLocations": [],
																	"names": [],
																	"nodeType": "FunctionCall",
																	"src": "1778:21:2",
																	"tryCall": false,
																	"typeDescriptions": {
																		"typeIdentifier": "t_magic_meta_type_t_contract$_IERC721Metadata_$1272",
																		"typeString": "type(contract IERC721Metadata)"
																	}
																},
																"id": 250,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"memberLocation": "1800:11:2",
																"memberName": "interfaceId",
																"nodeType": "MemberAccess",
																"src": "1778:33:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_bytes4",
																	"typeString": "bytes4"
																}
															},
															"src": "1763:48:2",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"src": "1707:104:2",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "||",
													"rightExpression": {
														"arguments": [
															{
																"id": 255,
																"name": "interfaceId",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 232,
																"src": "1851:11:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_bytes4",
																	"typeString": "bytes4"
																}
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_bytes4",
																	"typeString": "bytes4"
																}
															],
															"expression": {
																"id": 253,
																"name": "super",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 4294967271,
																"src": "1827:5:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_super$_ERC721_$1111_$",
																	"typeString": "type(contract super ERC721)"
																}
															},
															"id": 254,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "1833:17:2",
															"memberName": "supportsInterface",
															"nodeType": "MemberAccess",
															"referencedDeclaration": 1896,
															"src": "1827:23:2",
															"typeDescriptions": {
																"typeIdentifier": "t_function_internal_view$_t_bytes4_$returns$_t_bool_$",
																"typeString": "function (bytes4) view returns (bool)"
															}
														},
														"id": 256,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "functionCall",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "1827:36:2",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"src": "1707:156:2",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"functionReturnParameters": 239,
												"id": 258,
												"nodeType": "Return",
												"src": "1688:175:2"
											}
										]
									},
									"documentation": {
										"id": 230,
										"nodeType": "StructuredDocumentation",
										"src": "1509:56:2",
										"text": " @dev See {IERC165-supportsInterface}."
									},
									"functionSelector": "01ffc9a7",
									"id": 260,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "supportsInterface",
									"nameLocation": "1579:17:2",
									"nodeType": "FunctionDefinition",
									"overrides": {
										"id": 236,
										"nodeType": "OverrideSpecifier",
										"overrides": [
											{
												"id": 234,
												"name": "ERC165",
												"nameLocations": [
													"1646:6:2"
												],
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 1897,
												"src": "1646:6:2"
											},
											{
												"id": 235,
												"name": "IERC165",
												"nameLocations": [
													"1654:7:2"
												],
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 1909,
												"src": "1654:7:2"
											}
										],
										"src": "1637:25:2"
									},
									"parameters": {
										"id": 233,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 232,
												"mutability": "mutable",
												"name": "interfaceId",
												"nameLocation": "1604:11:2",
												"nodeType": "VariableDeclaration",
												"scope": 260,
												"src": "1597:18:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes4",
													"typeString": "bytes4"
												},
												"typeName": {
													"id": 231,
													"name": "bytes4",
													"nodeType": "ElementaryTypeName",
													"src": "1597:6:2",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes4",
														"typeString": "bytes4"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1596:20:2"
									},
									"returnParameters": {
										"id": 239,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 238,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 260,
												"src": "1672:4:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 237,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "1672:4:2",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1671:6:2"
									},
									"scope": 1111,
									"src": "1570:300:2",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "public"
								},
								{
									"baseFunctions": [
										1152
									],
									"body": {
										"id": 283,
										"nodeType": "Block",
										"src": "2010:123:2",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															"id": 275,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 270,
																"name": "owner",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 263,
																"src": "2028:5:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "!=",
															"rightExpression": {
																"arguments": [
																	{
																		"hexValue": "30",
																		"id": 273,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "2045:1:2",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		},
																		"value": "0"
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		}
																	],
																	"id": 272,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"lValueRequested": false,
																	"nodeType": "ElementaryTypeNameExpression",
																	"src": "2037:7:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_type$_t_address_$",
																		"typeString": "type(address)"
																	},
																	"typeName": {
																		"id": 271,
																		"name": "address",
																		"nodeType": "ElementaryTypeName",
																		"src": "2037:7:2",
																		"typeDescriptions": {}
																	}
																},
																"id": 274,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "typeConversion",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "2037:10:2",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"src": "2028:19:2",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "4552433732313a2061646472657373207a65726f206973206e6f7420612076616c6964206f776e6572",
															"id": 276,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "2049:43:2",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_6d05c90094f31cfeb8f0eb86f0a513af3f7f8992991fbde41b08aa7960677159",
																"typeString": "literal_string \"ERC721: address zero is not a valid owner\""
															},
															"value": "ERC721: address zero is not a valid owner"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_6d05c90094f31cfeb8f0eb86f0a513af3f7f8992991fbde41b08aa7960677159",
																"typeString": "literal_string \"ERC721: address zero is not a valid owner\""
															}
														],
														"id": 269,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "2020:7:2",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 277,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2020:73:2",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 278,
												"nodeType": "ExpressionStatement",
												"src": "2020:73:2"
											},
											{
												"expression": {
													"baseExpression": {
														"id": 279,
														"name": "_balances",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 202,
														"src": "2110:9:2",
														"typeDescriptions": {
															"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
															"typeString": "mapping(address => uint256)"
														}
													},
													"id": 281,
													"indexExpression": {
														"id": 280,
														"name": "owner",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 263,
														"src": "2120:5:2",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"isConstant": false,
													"isLValue": true,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "IndexAccess",
													"src": "2110:16:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 268,
												"id": 282,
												"nodeType": "Return",
												"src": "2103:23:2"
											}
										]
									},
									"documentation": {
										"id": 261,
										"nodeType": "StructuredDocumentation",
										"src": "1876:48:2",
										"text": " @dev See {IERC721-balanceOf}."
									},
									"functionSelector": "70a08231",
									"id": 284,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "balanceOf",
									"nameLocation": "1938:9:2",
									"nodeType": "FunctionDefinition",
									"overrides": {
										"id": 265,
										"nodeType": "OverrideSpecifier",
										"overrides": [],
										"src": "1983:8:2"
									},
									"parameters": {
										"id": 264,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 263,
												"mutability": "mutable",
												"name": "owner",
												"nameLocation": "1956:5:2",
												"nodeType": "VariableDeclaration",
												"scope": 284,
												"src": "1948:13:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 262,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1948:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1947:15:2"
									},
									"returnParameters": {
										"id": 268,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 267,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 284,
												"src": "2001:7:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 266,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2001:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2000:9:2"
									},
									"scope": 1111,
									"src": "1929:204:2",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "public"
								},
								{
									"baseFunctions": [
										1160
									],
									"body": {
										"id": 311,
										"nodeType": "Block",
										"src": "2271:138:2",
										"statements": [
											{
												"assignments": [
													294
												],
												"declarations": [
													{
														"constant": false,
														"id": 294,
														"mutability": "mutable",
														"name": "owner",
														"nameLocation": "2289:5:2",
														"nodeType": "VariableDeclaration",
														"scope": 311,
														"src": "2281:13:2",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														},
														"typeName": {
															"id": 293,
															"name": "address",
															"nodeType": "ElementaryTypeName",
															"src": "2281:7:2",
															"stateMutability": "nonpayable",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 298,
												"initialValue": {
													"arguments": [
														{
															"id": 296,
															"name": "tokenId",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 287,
															"src": "2306:7:2",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 295,
														"name": "_ownerOf",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 594,
														"src": "2297:8:2",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_view$_t_uint256_$returns$_t_address_$",
															"typeString": "function (uint256) view returns (address)"
														}
													},
													"id": 297,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2297:17:2",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "2281:33:2"
											},
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															"id": 305,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 300,
																"name": "owner",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 294,
																"src": "2332:5:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "!=",
															"rightExpression": {
																"arguments": [
																	{
																		"hexValue": "30",
																		"id": 303,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "2349:1:2",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		},
																		"value": "0"
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		}
																	],
																	"id": 302,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"lValueRequested": false,
																	"nodeType": "ElementaryTypeNameExpression",
																	"src": "2341:7:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_type$_t_address_$",
																		"typeString": "type(address)"
																	},
																	"typeName": {
																		"id": 301,
																		"name": "address",
																		"nodeType": "ElementaryTypeName",
																		"src": "2341:7:2",
																		"typeDescriptions": {}
																	}
																},
																"id": 304,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "typeConversion",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "2341:10:2",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"src": "2332:19:2",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "4552433732313a20696e76616c696420746f6b656e204944",
															"id": 306,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "2353:26:2",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_b08d2b0fec7cc108ab049809a8beb42779d969a49299d0c317c907d9db22974f",
																"typeString": "literal_string \"ERC721: invalid token ID\""
															},
															"value": "ERC721: invalid token ID"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_b08d2b0fec7cc108ab049809a8beb42779d969a49299d0c317c907d9db22974f",
																"typeString": "literal_string \"ERC721: invalid token ID\""
															}
														],
														"id": 299,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "2324:7:2",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 307,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2324:56:2",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 308,
												"nodeType": "ExpressionStatement",
												"src": "2324:56:2"
											},
											{
												"expression": {
													"id": 309,
													"name": "owner",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 294,
													"src": "2397:5:2",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"functionReturnParameters": 292,
												"id": 310,
												"nodeType": "Return",
												"src": "2390:12:2"
											}
										]
									},
									"documentation": {
										"id": 285,
										"nodeType": "StructuredDocumentation",
										"src": "2139:46:2",
										"text": " @dev See {IERC721-ownerOf}."
									},
									"functionSelector": "6352211e",
									"id": 312,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "ownerOf",
									"nameLocation": "2199:7:2",
									"nodeType": "FunctionDefinition",
									"overrides": {
										"id": 289,
										"nodeType": "OverrideSpecifier",
										"overrides": [],
										"src": "2244:8:2"
									},
									"parameters": {
										"id": 288,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 287,
												"mutability": "mutable",
												"name": "tokenId",
												"nameLocation": "2215:7:2",
												"nodeType": "VariableDeclaration",
												"scope": 312,
												"src": "2207:15:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 286,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2207:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2206:17:2"
									},
									"returnParameters": {
										"id": 292,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 291,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 312,
												"src": "2262:7:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 290,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2262:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2261:9:2"
									},
									"scope": 1111,
									"src": "2190:219:2",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "public"
								},
								{
									"baseFunctions": [
										1257
									],
									"body": {
										"id": 321,
										"nodeType": "Block",
										"src": "2540:29:2",
										"statements": [
											{
												"expression": {
													"id": 319,
													"name": "_name",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 192,
													"src": "2557:5:2",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage",
														"typeString": "string storage ref"
													}
												},
												"functionReturnParameters": 318,
												"id": 320,
												"nodeType": "Return",
												"src": "2550:12:2"
											}
										]
									},
									"documentation": {
										"id": 313,
										"nodeType": "StructuredDocumentation",
										"src": "2415:51:2",
										"text": " @dev See {IERC721Metadata-name}."
									},
									"functionSelector": "06fdde03",
									"id": 322,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "name",
									"nameLocation": "2480:4:2",
									"nodeType": "FunctionDefinition",
									"overrides": {
										"id": 315,
										"nodeType": "OverrideSpecifier",
										"overrides": [],
										"src": "2507:8:2"
									},
									"parameters": {
										"id": 314,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2484:2:2"
									},
									"returnParameters": {
										"id": 318,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 317,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 322,
												"src": "2525:13:2",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 316,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "2525:6:2",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2524:15:2"
									},
									"scope": 1111,
									"src": "2471:98:2",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "public"
								},
								{
									"baseFunctions": [
										1263
									],
									"body": {
										"id": 331,
										"nodeType": "Block",
										"src": "2704:31:2",
										"statements": [
											{
												"expression": {
													"id": 329,
													"name": "_symbol",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 194,
													"src": "2721:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage",
														"typeString": "string storage ref"
													}
												},
												"functionReturnParameters": 328,
												"id": 330,
												"nodeType": "Return",
												"src": "2714:14:2"
											}
										]
									},
									"documentation": {
										"id": 323,
										"nodeType": "StructuredDocumentation",
										"src": "2575:53:2",
										"text": " @dev See {IERC721Metadata-symbol}."
									},
									"functionSelector": "95d89b41",
									"id": 332,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "symbol",
									"nameLocation": "2642:6:2",
									"nodeType": "FunctionDefinition",
									"overrides": {
										"id": 325,
										"nodeType": "OverrideSpecifier",
										"overrides": [],
										"src": "2671:8:2"
									},
									"parameters": {
										"id": 324,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2648:2:2"
									},
									"returnParameters": {
										"id": 328,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 327,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 332,
												"src": "2689:13:2",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 326,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "2689:6:2",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2688:15:2"
									},
									"scope": 1111,
									"src": "2633:102:2",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "public"
								},
								{
									"baseFunctions": [
										1271
									],
									"body": {
										"id": 370,
										"nodeType": "Block",
										"src": "2889:188:2",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"id": 342,
															"name": "tokenId",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 335,
															"src": "2914:7:2",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 341,
														"name": "_requireMinted",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 989,
														"src": "2899:14:2",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_view$_t_uint256_$returns$__$",
															"typeString": "function (uint256) view"
														}
													},
													"id": 343,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2899:23:2",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 344,
												"nodeType": "ExpressionStatement",
												"src": "2899:23:2"
											},
											{
												"assignments": [
													346
												],
												"declarations": [
													{
														"constant": false,
														"id": 346,
														"mutability": "mutable",
														"name": "baseURI",
														"nameLocation": "2947:7:2",
														"nodeType": "VariableDeclaration",
														"scope": 370,
														"src": "2933:21:2",
														"stateVariable": false,
														"storageLocation": "memory",
														"typeDescriptions": {
															"typeIdentifier": "t_string_memory_ptr",
															"typeString": "string"
														},
														"typeName": {
															"id": 345,
															"name": "string",
															"nodeType": "ElementaryTypeName",
															"src": "2933:6:2",
															"typeDescriptions": {
																"typeIdentifier": "t_string_storage_ptr",
																"typeString": "string"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 349,
												"initialValue": {
													"arguments": [],
													"expression": {
														"argumentTypes": [],
														"id": 347,
														"name": "_baseURI",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 380,
														"src": "2957:8:2",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_view$__$returns$_t_string_memory_ptr_$",
															"typeString": "function () view returns (string memory)"
														}
													},
													"id": 348,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2957:10:2",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_string_memory_ptr",
														"typeString": "string memory"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "2933:34:2"
											},
											{
												"expression": {
													"condition": {
														"commonType": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"id": 356,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftExpression": {
															"expression": {
																"arguments": [
																	{
																		"id": 352,
																		"name": "baseURI",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 346,
																		"src": "2990:7:2",
																		"typeDescriptions": {
																			"typeIdentifier": "t_string_memory_ptr",
																			"typeString": "string memory"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_string_memory_ptr",
																			"typeString": "string memory"
																		}
																	],
																	"id": 351,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"lValueRequested": false,
																	"nodeType": "ElementaryTypeNameExpression",
																	"src": "2984:5:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_type$_t_bytes_storage_ptr_$",
																		"typeString": "type(bytes storage pointer)"
																	},
																	"typeName": {
																		"id": 350,
																		"name": "bytes",
																		"nodeType": "ElementaryTypeName",
																		"src": "2984:5:2",
																		"typeDescriptions": {}
																	}
																},
																"id": 353,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "typeConversion",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "2984:14:2",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_bytes_memory_ptr",
																	"typeString": "bytes memory"
																}
															},
															"id": 354,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "2999:6:2",
															"memberName": "length",
															"nodeType": "MemberAccess",
															"src": "2984:21:2",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"nodeType": "BinaryOperation",
														"operator": ">",
														"rightExpression": {
															"hexValue": "30",
															"id": 355,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "number",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "3008:1:2",
															"typeDescriptions": {
																"typeIdentifier": "t_rational_0_by_1",
																"typeString": "int_const 0"
															},
															"value": "0"
														},
														"src": "2984:25:2",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"falseExpression": {
														"hexValue": "",
														"id": 367,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "string",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "3068:2:2",
														"typeDescriptions": {
															"typeIdentifier": "t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470",
															"typeString": "literal_string \"\""
														},
														"value": ""
													},
													"id": 368,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "Conditional",
													"src": "2984:86:2",
													"trueExpression": {
														"arguments": [
															{
																"arguments": [
																	{
																		"id": 361,
																		"name": "baseURI",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 346,
																		"src": "3036:7:2",
																		"typeDescriptions": {
																			"typeIdentifier": "t_string_memory_ptr",
																			"typeString": "string memory"
																		}
																	},
																	{
																		"arguments": [],
																		"expression": {
																			"argumentTypes": [],
																			"expression": {
																				"id": 362,
																				"name": "tokenId",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 335,
																				"src": "3045:7:2",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"id": 363,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"memberLocation": "3053:8:2",
																			"memberName": "toString",
																			"nodeType": "MemberAccess",
																			"referencedDeclaration": 1756,
																			"src": "3045:16:2",
																			"typeDescriptions": {
																				"typeIdentifier": "t_function_internal_pure$_t_uint256_$returns$_t_string_memory_ptr_$attached_to$_t_uint256_$",
																				"typeString": "function (uint256) pure returns (string memory)"
																			}
																		},
																		"id": 364,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"kind": "functionCall",
																		"lValueRequested": false,
																		"nameLocations": [],
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "3045:18:2",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_string_memory_ptr",
																			"typeString": "string memory"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_string_memory_ptr",
																			"typeString": "string memory"
																		},
																		{
																			"typeIdentifier": "t_string_memory_ptr",
																			"typeString": "string memory"
																		}
																	],
																	"expression": {
																		"id": 359,
																		"name": "abi",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 4294967295,
																		"src": "3019:3:2",
																		"typeDescriptions": {
																			"typeIdentifier": "t_magic_abi",
																			"typeString": "abi"
																		}
																	},
																	"id": 360,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"lValueRequested": false,
																	"memberLocation": "3023:12:2",
																	"memberName": "encodePacked",
																	"nodeType": "MemberAccess",
																	"src": "3019:16:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_abiencodepacked_pure$__$returns$_t_bytes_memory_ptr_$",
																		"typeString": "function () pure returns (bytes memory)"
																	}
																},
																"id": 365,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "3019:45:2",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_bytes_memory_ptr",
																	"typeString": "bytes memory"
																}
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_bytes_memory_ptr",
																	"typeString": "bytes memory"
																}
															],
															"id": 358,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"lValueRequested": false,
															"nodeType": "ElementaryTypeNameExpression",
															"src": "3012:6:2",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_string_storage_ptr_$",
																"typeString": "type(string storage pointer)"
															},
															"typeName": {
																"id": 357,
																"name": "string",
																"nodeType": "ElementaryTypeName",
																"src": "3012:6:2",
																"typeDescriptions": {}
															}
														},
														"id": 366,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "typeConversion",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "3012:53:2",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_string_memory_ptr",
															"typeString": "string memory"
														}
													},
													"typeDescriptions": {
														"typeIdentifier": "t_string_memory_ptr",
														"typeString": "string memory"
													}
												},
												"functionReturnParameters": 340,
												"id": 369,
												"nodeType": "Return",
												"src": "2977:93:2"
											}
										]
									},
									"documentation": {
										"id": 333,
										"nodeType": "StructuredDocumentation",
										"src": "2741:55:2",
										"text": " @dev See {IERC721Metadata-tokenURI}."
									},
									"functionSelector": "c87b56dd",
									"id": 371,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "tokenURI",
									"nameLocation": "2810:8:2",
									"nodeType": "FunctionDefinition",
									"overrides": {
										"id": 337,
										"nodeType": "OverrideSpecifier",
										"overrides": [],
										"src": "2856:8:2"
									},
									"parameters": {
										"id": 336,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 335,
												"mutability": "mutable",
												"name": "tokenId",
												"nameLocation": "2827:7:2",
												"nodeType": "VariableDeclaration",
												"scope": 371,
												"src": "2819:15:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 334,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2819:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2818:17:2"
									},
									"returnParameters": {
										"id": 340,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 339,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 371,
												"src": "2874:13:2",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 338,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "2874:6:2",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2873:15:2"
									},
									"scope": 1111,
									"src": "2801:276:2",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "public"
								},
								{
									"body": {
										"id": 379,
										"nodeType": "Block",
										"src": "3385:26:2",
										"statements": [
											{
												"expression": {
													"hexValue": "",
													"id": 377,
													"isConstant": false,
													"isLValue": false,
													"isPure": true,
													"kind": "string",
													"lValueRequested": false,
													"nodeType": "Literal",
													"src": "3402:2:2",
													"typeDescriptions": {
														"typeIdentifier": "t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470",
														"typeString": "literal_string \"\""
													},
													"value": ""
												},
												"functionReturnParameters": 376,
												"id": 378,
												"nodeType": "Return",
												"src": "3395:9:2"
											}
										]
									},
									"documentation": {
										"id": 372,
										"nodeType": "StructuredDocumentation",
										"src": "3083:231:2",
										"text": " @dev Base URI for computing {tokenURI}. If set, the resulting URI for each\n token will be the concatenation of the `baseURI` and the `tokenId`. Empty\n by default, can be overridden in child contracts."
									},
									"id": 380,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_baseURI",
									"nameLocation": "3328:8:2",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 373,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "3336:2:2"
									},
									"returnParameters": {
										"id": 376,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 375,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 380,
												"src": "3370:13:2",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 374,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "3370:6:2",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3369:15:2"
									},
									"scope": 1111,
									"src": "3319:92:2",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "internal"
								},
								{
									"baseFunctions": [
										1200
									],
									"body": {
										"id": 422,
										"nodeType": "Block",
										"src": "3538:336:2",
										"statements": [
											{
												"assignments": [
													390
												],
												"declarations": [
													{
														"constant": false,
														"id": 390,
														"mutability": "mutable",
														"name": "owner",
														"nameLocation": "3556:5:2",
														"nodeType": "VariableDeclaration",
														"scope": 422,
														"src": "3548:13:2",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														},
														"typeName": {
															"id": 389,
															"name": "address",
															"nodeType": "ElementaryTypeName",
															"src": "3548:7:2",
															"stateMutability": "nonpayable",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 395,
												"initialValue": {
													"arguments": [
														{
															"id": 393,
															"name": "tokenId",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 385,
															"src": "3579:7:2",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"expression": {
															"id": 391,
															"name": "ERC721",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1111,
															"src": "3564:6:2",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_contract$_ERC721_$1111_$",
																"typeString": "type(contract ERC721)"
															}
														},
														"id": 392,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "3571:7:2",
														"memberName": "ownerOf",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 312,
														"src": "3564:14:2",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_view$_t_uint256_$returns$_t_address_$",
															"typeString": "function (uint256) view returns (address)"
														}
													},
													"id": 394,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "3564:23:2",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "3548:39:2"
											},
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															"id": 399,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 397,
																"name": "to",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 383,
																"src": "3605:2:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "!=",
															"rightExpression": {
																"id": 398,
																"name": "owner",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 390,
																"src": "3611:5:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"src": "3605:11:2",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "4552433732313a20617070726f76616c20746f2063757272656e74206f776e6572",
															"id": 400,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "3618:35:2",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_b51b4875eede07862961e8f9365c6749f5fe55c6ee5d7a9e42b6912ad0b15942",
																"typeString": "literal_string \"ERC721: approval to current owner\""
															},
															"value": "ERC721: approval to current owner"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_b51b4875eede07862961e8f9365c6749f5fe55c6ee5d7a9e42b6912ad0b15942",
																"typeString": "literal_string \"ERC721: approval to current owner\""
															}
														],
														"id": 396,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "3597:7:2",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 401,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "3597:57:2",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 402,
												"nodeType": "ExpressionStatement",
												"src": "3597:57:2"
											},
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															"id": 413,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"commonType": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																},
																"id": 407,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"arguments": [],
																	"expression": {
																		"argumentTypes": [],
																		"id": 404,
																		"name": "_msgSender",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1614,
																		"src": "3686:10:2",
																		"typeDescriptions": {
																			"typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
																			"typeString": "function () view returns (address)"
																		}
																	},
																	"id": 405,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"kind": "functionCall",
																	"lValueRequested": false,
																	"nameLocations": [],
																	"names": [],
																	"nodeType": "FunctionCall",
																	"src": "3686:12:2",
																	"tryCall": false,
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": "==",
																"rightExpression": {
																	"id": 406,
																	"name": "owner",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 390,
																	"src": "3702:5:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																"src": "3686:21:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "||",
															"rightExpression": {
																"arguments": [
																	{
																		"id": 409,
																		"name": "owner",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 390,
																		"src": "3728:5:2",
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	},
																	{
																		"arguments": [],
																		"expression": {
																			"argumentTypes": [],
																			"id": 410,
																			"name": "_msgSender",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1614,
																			"src": "3735:10:2",
																			"typeDescriptions": {
																				"typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
																				"typeString": "function () view returns (address)"
																			}
																		},
																		"id": 411,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"kind": "functionCall",
																		"lValueRequested": false,
																		"nameLocations": [],
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "3735:12:2",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		},
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	],
																	"id": 408,
																	"name": "isApprovedForAll",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 476,
																	"src": "3711:16:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_internal_view$_t_address_$_t_address_$returns$_t_bool_$",
																		"typeString": "function (address,address) view returns (bool)"
																	}
																},
																"id": 412,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "3711:37:2",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																}
															},
															"src": "3686:62:2",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "4552433732313a20617070726f76652063616c6c6572206973206e6f7420746f6b656e206f776e6572206f7220617070726f76656420666f7220616c6c",
															"id": 414,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "3762:63:2",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_c6e14a63ffb144eeef7cce6988e5dce07c60a7e0a7b1ef25dbe18c61483e0a83",
																"typeString": "literal_string \"ERC721: approve caller is not token owner or approved for all\""
															},
															"value": "ERC721: approve caller is not token owner or approved for all"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_c6e14a63ffb144eeef7cce6988e5dce07c60a7e0a7b1ef25dbe18c61483e0a83",
																"typeString": "literal_string \"ERC721: approve caller is not token owner or approved for all\""
															}
														],
														"id": 403,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "3665:7:2",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 415,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "3665:170:2",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 416,
												"nodeType": "ExpressionStatement",
												"src": "3665:170:2"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 418,
															"name": "to",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 383,
															"src": "3855:2:2",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 419,
															"name": "tokenId",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 385,
															"src": "3859:7:2",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 417,
														"name": "_approve",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 943,
														"src": "3846:8:2",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,uint256)"
														}
													},
													"id": 420,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "3846:21:2",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 421,
												"nodeType": "ExpressionStatement",
												"src": "3846:21:2"
											}
										]
									},
									"documentation": {
										"id": 381,
										"nodeType": "StructuredDocumentation",
										"src": "3417:46:2",
										"text": " @dev See {IERC721-approve}."
									},
									"functionSelector": "095ea7b3",
									"id": 423,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "approve",
									"nameLocation": "3477:7:2",
									"nodeType": "FunctionDefinition",
									"overrides": {
										"id": 387,
										"nodeType": "OverrideSpecifier",
										"overrides": [],
										"src": "3529:8:2"
									},
									"parameters": {
										"id": 386,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 383,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "3493:2:2",
												"nodeType": "VariableDeclaration",
												"scope": 423,
												"src": "3485:10:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 382,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "3485:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 385,
												"mutability": "mutable",
												"name": "tokenId",
												"nameLocation": "3505:7:2",
												"nodeType": "VariableDeclaration",
												"scope": 423,
												"src": "3497:15:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 384,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3497:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3484:29:2"
									},
									"returnParameters": {
										"id": 388,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "3538:0:2"
									},
									"scope": 1111,
									"src": "3468:406:2",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "public"
								},
								{
									"baseFunctions": [
										1216
									],
									"body": {
										"id": 440,
										"nodeType": "Block",
										"src": "4020:82:2",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"id": 433,
															"name": "tokenId",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 426,
															"src": "4045:7:2",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 432,
														"name": "_requireMinted",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 989,
														"src": "4030:14:2",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_view$_t_uint256_$returns$__$",
															"typeString": "function (uint256) view"
														}
													},
													"id": 434,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "4030:23:2",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 435,
												"nodeType": "ExpressionStatement",
												"src": "4030:23:2"
											},
											{
												"expression": {
													"baseExpression": {
														"id": 436,
														"name": "_tokenApprovals",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 206,
														"src": "4071:15:2",
														"typeDescriptions": {
															"typeIdentifier": "t_mapping$_t_uint256_$_t_address_$",
															"typeString": "mapping(uint256 => address)"
														}
													},
													"id": 438,
													"indexExpression": {
														"id": 437,
														"name": "tokenId",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 426,
														"src": "4087:7:2",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"isConstant": false,
													"isLValue": true,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "IndexAccess",
													"src": "4071:24:2",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"functionReturnParameters": 431,
												"id": 439,
												"nodeType": "Return",
												"src": "4064:31:2"
											}
										]
									},
									"documentation": {
										"id": 424,
										"nodeType": "StructuredDocumentation",
										"src": "3880:50:2",
										"text": " @dev See {IERC721-getApproved}."
									},
									"functionSelector": "081812fc",
									"id": 441,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "getApproved",
									"nameLocation": "3944:11:2",
									"nodeType": "FunctionDefinition",
									"overrides": {
										"id": 428,
										"nodeType": "OverrideSpecifier",
										"overrides": [],
										"src": "3993:8:2"
									},
									"parameters": {
										"id": 427,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 426,
												"mutability": "mutable",
												"name": "tokenId",
												"nameLocation": "3964:7:2",
												"nodeType": "VariableDeclaration",
												"scope": 441,
												"src": "3956:15:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 425,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3956:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3955:17:2"
									},
									"returnParameters": {
										"id": 431,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 430,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 441,
												"src": "4011:7:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 429,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "4011:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4010:9:2"
									},
									"scope": 1111,
									"src": "3935:167:2",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "public"
								},
								{
									"baseFunctions": [
										1208
									],
									"body": {
										"id": 457,
										"nodeType": "Block",
										"src": "4253:69:2",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"arguments": [],
															"expression": {
																"argumentTypes": [],
																"id": 451,
																"name": "_msgSender",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1614,
																"src": "4282:10:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
																	"typeString": "function () view returns (address)"
																}
															},
															"id": 452,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "4282:12:2",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 453,
															"name": "operator",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 444,
															"src": "4296:8:2",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 454,
															"name": "approved",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 446,
															"src": "4306:8:2",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														],
														"id": 450,
														"name": "_setApprovalForAll",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 975,
														"src": "4263:18:2",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_bool_$returns$__$",
															"typeString": "function (address,address,bool)"
														}
													},
													"id": 455,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "4263:52:2",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 456,
												"nodeType": "ExpressionStatement",
												"src": "4263:52:2"
											}
										]
									},
									"documentation": {
										"id": 442,
										"nodeType": "StructuredDocumentation",
										"src": "4108:56:2",
										"text": " @dev See {IERC721-setApprovalForAll}."
									},
									"functionSelector": "a22cb465",
									"id": 458,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "setApprovalForAll",
									"nameLocation": "4178:17:2",
									"nodeType": "FunctionDefinition",
									"overrides": {
										"id": 448,
										"nodeType": "OverrideSpecifier",
										"overrides": [],
										"src": "4244:8:2"
									},
									"parameters": {
										"id": 447,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 444,
												"mutability": "mutable",
												"name": "operator",
												"nameLocation": "4204:8:2",
												"nodeType": "VariableDeclaration",
												"scope": 458,
												"src": "4196:16:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 443,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "4196:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 446,
												"mutability": "mutable",
												"name": "approved",
												"nameLocation": "4219:8:2",
												"nodeType": "VariableDeclaration",
												"scope": 458,
												"src": "4214:13:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 445,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "4214:4:2",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4195:33:2"
									},
									"returnParameters": {
										"id": 449,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "4253:0:2"
									},
									"scope": 1111,
									"src": "4169:153:2",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "public"
								},
								{
									"baseFunctions": [
										1226
									],
									"body": {
										"id": 475,
										"nodeType": "Block",
										"src": "4491:59:2",
										"statements": [
											{
												"expression": {
													"baseExpression": {
														"baseExpression": {
															"id": 469,
															"name": "_operatorApprovals",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 212,
															"src": "4508:18:2",
															"typeDescriptions": {
																"typeIdentifier": "t_mapping$_t_address_$_t_mapping$_t_address_$_t_bool_$_$",
																"typeString": "mapping(address => mapping(address => bool))"
															}
														},
														"id": 471,
														"indexExpression": {
															"id": 470,
															"name": "owner",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 461,
															"src": "4527:5:2",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": false,
														"nodeType": "IndexAccess",
														"src": "4508:25:2",
														"typeDescriptions": {
															"typeIdentifier": "t_mapping$_t_address_$_t_bool_$",
															"typeString": "mapping(address => bool)"
														}
													},
													"id": 473,
													"indexExpression": {
														"id": 472,
														"name": "operator",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 463,
														"src": "4534:8:2",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"isConstant": false,
													"isLValue": true,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "IndexAccess",
													"src": "4508:35:2",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"functionReturnParameters": 468,
												"id": 474,
												"nodeType": "Return",
												"src": "4501:42:2"
											}
										]
									},
									"documentation": {
										"id": 459,
										"nodeType": "StructuredDocumentation",
										"src": "4328:55:2",
										"text": " @dev See {IERC721-isApprovedForAll}."
									},
									"functionSelector": "e985e9c5",
									"id": 476,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "isApprovedForAll",
									"nameLocation": "4397:16:2",
									"nodeType": "FunctionDefinition",
									"overrides": {
										"id": 465,
										"nodeType": "OverrideSpecifier",
										"overrides": [],
										"src": "4467:8:2"
									},
									"parameters": {
										"id": 464,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 461,
												"mutability": "mutable",
												"name": "owner",
												"nameLocation": "4422:5:2",
												"nodeType": "VariableDeclaration",
												"scope": 476,
												"src": "4414:13:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 460,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "4414:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 463,
												"mutability": "mutable",
												"name": "operator",
												"nameLocation": "4437:8:2",
												"nodeType": "VariableDeclaration",
												"scope": 476,
												"src": "4429:16:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 462,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "4429:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4413:33:2"
									},
									"returnParameters": {
										"id": 468,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 467,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 476,
												"src": "4485:4:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 466,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "4485:4:2",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4484:6:2"
									},
									"scope": 1111,
									"src": "4388:162:2",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "public"
								},
								{
									"baseFunctions": [
										1192
									],
									"body": {
										"id": 502,
										"nodeType": "Block",
										"src": "4731:207:2",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"arguments": [
																{
																	"arguments": [],
																	"expression": {
																		"argumentTypes": [],
																		"id": 489,
																		"name": "_msgSender",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1614,
																		"src": "4820:10:2",
																		"typeDescriptions": {
																			"typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
																			"typeString": "function () view returns (address)"
																		}
																	},
																	"id": 490,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"kind": "functionCall",
																	"lValueRequested": false,
																	"nameLocations": [],
																	"names": [],
																	"nodeType": "FunctionCall",
																	"src": "4820:12:2",
																	"tryCall": false,
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																{
																	"id": 491,
																	"name": "tokenId",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 483,
																	"src": "4834:7:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	},
																	{
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																],
																"id": 488,
																"name": "_isApprovedOrOwner",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 646,
																"src": "4801:18:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_internal_view$_t_address_$_t_uint256_$returns$_t_bool_$",
																	"typeString": "function (address,uint256) view returns (bool)"
																}
															},
															"id": 492,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "4801:41:2",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "4552433732313a2063616c6c6572206973206e6f7420746f6b656e206f776e6572206f7220617070726f766564",
															"id": 493,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "4844:47:2",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_12a8e5623d251e191fe4a291d9a59bcc01a4db7a1f5c20fc8de44358c18308af",
																"typeString": "literal_string \"ERC721: caller is not token owner or approved\""
															},
															"value": "ERC721: caller is not token owner or approved"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_12a8e5623d251e191fe4a291d9a59bcc01a4db7a1f5c20fc8de44358c18308af",
																"typeString": "literal_string \"ERC721: caller is not token owner or approved\""
															}
														],
														"id": 487,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "4793:7:2",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 494,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "4793:99:2",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 495,
												"nodeType": "ExpressionStatement",
												"src": "4793:99:2"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 497,
															"name": "from",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 479,
															"src": "4913:4:2",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 498,
															"name": "to",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 481,
															"src": "4919:2:2",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 499,
															"name": "tokenId",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 483,
															"src": "4923:7:2",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 496,
														"name": "_transfer",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 919,
														"src": "4903:9:2",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,address,uint256)"
														}
													},
													"id": 500,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "4903:28:2",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 501,
												"nodeType": "ExpressionStatement",
												"src": "4903:28:2"
											}
										]
									},
									"documentation": {
										"id": 477,
										"nodeType": "StructuredDocumentation",
										"src": "4556:51:2",
										"text": " @dev See {IERC721-transferFrom}."
									},
									"functionSelector": "23b872dd",
									"id": 503,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "transferFrom",
									"nameLocation": "4621:12:2",
									"nodeType": "FunctionDefinition",
									"overrides": {
										"id": 485,
										"nodeType": "OverrideSpecifier",
										"overrides": [],
										"src": "4722:8:2"
									},
									"parameters": {
										"id": 484,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 479,
												"mutability": "mutable",
												"name": "from",
												"nameLocation": "4651:4:2",
												"nodeType": "VariableDeclaration",
												"scope": 503,
												"src": "4643:12:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 478,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "4643:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 481,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "4673:2:2",
												"nodeType": "VariableDeclaration",
												"scope": 503,
												"src": "4665:10:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 480,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "4665:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 483,
												"mutability": "mutable",
												"name": "tokenId",
												"nameLocation": "4693:7:2",
												"nodeType": "VariableDeclaration",
												"scope": 503,
												"src": "4685:15:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 482,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "4685:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4633:73:2"
									},
									"returnParameters": {
										"id": 486,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "4731:0:2"
									},
									"scope": 1111,
									"src": "4612:326:2",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "public"
								},
								{
									"baseFunctions": [
										1182
									],
									"body": {
										"id": 521,
										"nodeType": "Block",
										"src": "5127:56:2",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"id": 515,
															"name": "from",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 506,
															"src": "5154:4:2",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 516,
															"name": "to",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 508,
															"src": "5160:2:2",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 517,
															"name": "tokenId",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 510,
															"src": "5164:7:2",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														{
															"hexValue": "",
															"id": 518,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "5173:2:2",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470",
																"typeString": "literal_string \"\""
															},
															"value": ""
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															{
																"typeIdentifier": "t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470",
																"typeString": "literal_string \"\""
															}
														],
														"id": 514,
														"name": "safeTransferFrom",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															522,
															552
														],
														"referencedDeclaration": 552,
														"src": "5137:16:2",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$_t_bytes_memory_ptr_$returns$__$",
															"typeString": "function (address,address,uint256,bytes memory)"
														}
													},
													"id": 519,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "5137:39:2",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 520,
												"nodeType": "ExpressionStatement",
												"src": "5137:39:2"
											}
										]
									},
									"documentation": {
										"id": 504,
										"nodeType": "StructuredDocumentation",
										"src": "4944:55:2",
										"text": " @dev See {IERC721-safeTransferFrom}."
									},
									"functionSelector": "42842e0e",
									"id": 522,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "safeTransferFrom",
									"nameLocation": "5013:16:2",
									"nodeType": "FunctionDefinition",
									"overrides": {
										"id": 512,
										"nodeType": "OverrideSpecifier",
										"overrides": [],
										"src": "5118:8:2"
									},
									"parameters": {
										"id": 511,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 506,
												"mutability": "mutable",
												"name": "from",
												"nameLocation": "5047:4:2",
												"nodeType": "VariableDeclaration",
												"scope": 522,
												"src": "5039:12:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 505,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "5039:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 508,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "5069:2:2",
												"nodeType": "VariableDeclaration",
												"scope": 522,
												"src": "5061:10:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 507,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "5061:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 510,
												"mutability": "mutable",
												"name": "tokenId",
												"nameLocation": "5089:7:2",
												"nodeType": "VariableDeclaration",
												"scope": 522,
												"src": "5081:15:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 509,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "5081:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "5029:73:2"
									},
									"returnParameters": {
										"id": 513,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "5127:0:2"
									},
									"scope": 1111,
									"src": "5004:179:2",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "public"
								},
								{
									"baseFunctions": [
										1172
									],
									"body": {
										"id": 551,
										"nodeType": "Block",
										"src": "5399:164:2",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"arguments": [
																{
																	"arguments": [],
																	"expression": {
																		"argumentTypes": [],
																		"id": 537,
																		"name": "_msgSender",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1614,
																		"src": "5436:10:2",
																		"typeDescriptions": {
																			"typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
																			"typeString": "function () view returns (address)"
																		}
																	},
																	"id": 538,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"kind": "functionCall",
																	"lValueRequested": false,
																	"nameLocations": [],
																	"names": [],
																	"nodeType": "FunctionCall",
																	"src": "5436:12:2",
																	"tryCall": false,
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																{
																	"id": 539,
																	"name": "tokenId",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 529,
																	"src": "5450:7:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	},
																	{
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																],
																"id": 536,
																"name": "_isApprovedOrOwner",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 646,
																"src": "5417:18:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_internal_view$_t_address_$_t_uint256_$returns$_t_bool_$",
																	"typeString": "function (address,uint256) view returns (bool)"
																}
															},
															"id": 540,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "5417:41:2",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "4552433732313a2063616c6c6572206973206e6f7420746f6b656e206f776e6572206f7220617070726f766564",
															"id": 541,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "5460:47:2",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_12a8e5623d251e191fe4a291d9a59bcc01a4db7a1f5c20fc8de44358c18308af",
																"typeString": "literal_string \"ERC721: caller is not token owner or approved\""
															},
															"value": "ERC721: caller is not token owner or approved"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_12a8e5623d251e191fe4a291d9a59bcc01a4db7a1f5c20fc8de44358c18308af",
																"typeString": "literal_string \"ERC721: caller is not token owner or approved\""
															}
														],
														"id": 535,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "5409:7:2",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 542,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "5409:99:2",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 543,
												"nodeType": "ExpressionStatement",
												"src": "5409:99:2"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 545,
															"name": "from",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 525,
															"src": "5532:4:2",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 546,
															"name": "to",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 527,
															"src": "5538:2:2",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 547,
															"name": "tokenId",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 529,
															"src": "5542:7:2",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														{
															"id": 548,
															"name": "data",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 531,
															"src": "5551:4:2",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															{
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														],
														"id": 544,
														"name": "_safeTransfer",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 581,
														"src": "5518:13:2",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$_t_bytes_memory_ptr_$returns$__$",
															"typeString": "function (address,address,uint256,bytes memory)"
														}
													},
													"id": 549,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "5518:38:2",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 550,
												"nodeType": "ExpressionStatement",
												"src": "5518:38:2"
											}
										]
									},
									"documentation": {
										"id": 523,
										"nodeType": "StructuredDocumentation",
										"src": "5189:55:2",
										"text": " @dev See {IERC721-safeTransferFrom}."
									},
									"functionSelector": "b88d4fde",
									"id": 552,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "safeTransferFrom",
									"nameLocation": "5258:16:2",
									"nodeType": "FunctionDefinition",
									"overrides": {
										"id": 533,
										"nodeType": "OverrideSpecifier",
										"overrides": [],
										"src": "5390:8:2"
									},
									"parameters": {
										"id": 532,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 525,
												"mutability": "mutable",
												"name": "from",
												"nameLocation": "5292:4:2",
												"nodeType": "VariableDeclaration",
												"scope": 552,
												"src": "5284:12:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 524,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "5284:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 527,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "5314:2:2",
												"nodeType": "VariableDeclaration",
												"scope": 552,
												"src": "5306:10:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 526,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "5306:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 529,
												"mutability": "mutable",
												"name": "tokenId",
												"nameLocation": "5334:7:2",
												"nodeType": "VariableDeclaration",
												"scope": 552,
												"src": "5326:15:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 528,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "5326:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 531,
												"mutability": "mutable",
												"name": "data",
												"nameLocation": "5364:4:2",
												"nodeType": "VariableDeclaration",
												"scope": 552,
												"src": "5351:17:2",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 530,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "5351:5:2",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "5274:100:2"
									},
									"returnParameters": {
										"id": 534,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "5399:0:2"
									},
									"scope": 1111,
									"src": "5249:314:2",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "public"
								},
								{
									"body": {
										"id": 580,
										"nodeType": "Block",
										"src": "6564:165:2",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"id": 565,
															"name": "from",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 555,
															"src": "6584:4:2",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 566,
															"name": "to",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 557,
															"src": "6590:2:2",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 567,
															"name": "tokenId",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 559,
															"src": "6594:7:2",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 564,
														"name": "_transfer",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 919,
														"src": "6574:9:2",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,address,uint256)"
														}
													},
													"id": 568,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "6574:28:2",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 569,
												"nodeType": "ExpressionStatement",
												"src": "6574:28:2"
											},
											{
												"expression": {
													"arguments": [
														{
															"arguments": [
																{
																	"id": 572,
																	"name": "from",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 555,
																	"src": "6643:4:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																{
																	"id": 573,
																	"name": "to",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 557,
																	"src": "6649:2:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																{
																	"id": 574,
																	"name": "tokenId",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 559,
																	"src": "6653:7:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																{
																	"id": 575,
																	"name": "data",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 561,
																	"src": "6662:4:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bytes_memory_ptr",
																		"typeString": "bytes memory"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	},
																	{
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	},
																	{
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	{
																		"typeIdentifier": "t_bytes_memory_ptr",
																		"typeString": "bytes memory"
																	}
																],
																"id": 571,
																"name": "_checkOnERC721Received",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1051,
																"src": "6620:22:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$_t_bytes_memory_ptr_$returns$_t_bool_$",
																	"typeString": "function (address,address,uint256,bytes memory) returns (bool)"
																}
															},
															"id": 576,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "6620:47:2",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "4552433732313a207472616e7366657220746f206e6f6e20455243373231526563656976657220696d706c656d656e746572",
															"id": 577,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "6669:52:2",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_1e766a06da43a53d0f4c380e06e5a342e14d5af1bf8501996c844905530ca84e",
																"typeString": "literal_string \"ERC721: transfer to non ERC721Receiver implementer\""
															},
															"value": "ERC721: transfer to non ERC721Receiver implementer"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_1e766a06da43a53d0f4c380e06e5a342e14d5af1bf8501996c844905530ca84e",
																"typeString": "literal_string \"ERC721: transfer to non ERC721Receiver implementer\""
															}
														],
														"id": 570,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "6612:7:2",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 578,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "6612:110:2",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 579,
												"nodeType": "ExpressionStatement",
												"src": "6612:110:2"
											}
										]
									},
									"documentation": {
										"id": 553,
										"nodeType": "StructuredDocumentation",
										"src": "5569:850:2",
										"text": " @dev Safely transfers `tokenId` token from `from` to `to`, checking first that contract recipients\n are aware of the ERC721 protocol to prevent tokens from being forever locked.\n `data` is additional data, it has no specified format and it is sent in call to `to`.\n This internal function is equivalent to {safeTransferFrom}, and can be used to e.g.\n implement alternative mechanisms to perform token transfer, such as signature-based.\n Requirements:\n - `from` cannot be the zero address.\n - `to` cannot be the zero address.\n - `tokenId` token must exist and be owned by `from`.\n - If `to` refers to a smart contract, it must implement {IERC721Receiver-onERC721Received}, which is called upon a safe transfer.\n Emits a {Transfer} event."
									},
									"id": 581,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_safeTransfer",
									"nameLocation": "6433:13:2",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 562,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 555,
												"mutability": "mutable",
												"name": "from",
												"nameLocation": "6464:4:2",
												"nodeType": "VariableDeclaration",
												"scope": 581,
												"src": "6456:12:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 554,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "6456:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 557,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "6486:2:2",
												"nodeType": "VariableDeclaration",
												"scope": 581,
												"src": "6478:10:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 556,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "6478:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 559,
												"mutability": "mutable",
												"name": "tokenId",
												"nameLocation": "6506:7:2",
												"nodeType": "VariableDeclaration",
												"scope": 581,
												"src": "6498:15:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 558,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "6498:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 561,
												"mutability": "mutable",
												"name": "data",
												"nameLocation": "6536:4:2",
												"nodeType": "VariableDeclaration",
												"scope": 581,
												"src": "6523:17:2",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 560,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "6523:5:2",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "6446:100:2"
									},
									"returnParameters": {
										"id": 563,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "6564:0:2"
									},
									"scope": 1111,
									"src": "6424:305:2",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 593,
										"nodeType": "Block",
										"src": "6913:40:2",
										"statements": [
											{
												"expression": {
													"baseExpression": {
														"id": 589,
														"name": "_owners",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 198,
														"src": "6930:7:2",
														"typeDescriptions": {
															"typeIdentifier": "t_mapping$_t_uint256_$_t_address_$",
															"typeString": "mapping(uint256 => address)"
														}
													},
													"id": 591,
													"indexExpression": {
														"id": 590,
														"name": "tokenId",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 584,
														"src": "6938:7:2",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"isConstant": false,
													"isLValue": true,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "IndexAccess",
													"src": "6930:16:2",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"functionReturnParameters": 588,
												"id": 592,
												"nodeType": "Return",
												"src": "6923:23:2"
											}
										]
									},
									"documentation": {
										"id": 582,
										"nodeType": "StructuredDocumentation",
										"src": "6735:98:2",
										"text": " @dev Returns the owner of the `tokenId`. Does NOT revert if token doesn't exist"
									},
									"id": 594,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_ownerOf",
									"nameLocation": "6847:8:2",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 585,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 584,
												"mutability": "mutable",
												"name": "tokenId",
												"nameLocation": "6864:7:2",
												"nodeType": "VariableDeclaration",
												"scope": 594,
												"src": "6856:15:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 583,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "6856:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "6855:17:2"
									},
									"returnParameters": {
										"id": 588,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 587,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 594,
												"src": "6904:7:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 586,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "6904:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "6903:9:2"
									},
									"scope": 1111,
									"src": "6838:115:2",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 611,
										"nodeType": "Block",
										"src": "7327:55:2",
										"statements": [
											{
												"expression": {
													"commonType": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													},
													"id": 609,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"arguments": [
															{
																"id": 603,
																"name": "tokenId",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 597,
																"src": "7353:7:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															],
															"id": 602,
															"name": "_ownerOf",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 594,
															"src": "7344:8:2",
															"typeDescriptions": {
																"typeIdentifier": "t_function_internal_view$_t_uint256_$returns$_t_address_$",
																"typeString": "function (uint256) view returns (address)"
															}
														},
														"id": 604,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "functionCall",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "7344:17:2",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "!=",
													"rightExpression": {
														"arguments": [
															{
																"hexValue": "30",
																"id": 607,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "7373:1:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																}
															],
															"id": 606,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"lValueRequested": false,
															"nodeType": "ElementaryTypeNameExpression",
															"src": "7365:7:2",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_address_$",
																"typeString": "type(address)"
															},
															"typeName": {
																"id": 605,
																"name": "address",
																"nodeType": "ElementaryTypeName",
																"src": "7365:7:2",
																"typeDescriptions": {}
															}
														},
														"id": 608,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "typeConversion",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "7365:10:2",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "7344:31:2",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"functionReturnParameters": 601,
												"id": 610,
												"nodeType": "Return",
												"src": "7337:38:2"
											}
										]
									},
									"documentation": {
										"id": 595,
										"nodeType": "StructuredDocumentation",
										"src": "6959:292:2",
										"text": " @dev Returns whether `tokenId` exists.\n Tokens can be managed by their owner or approved accounts via {approve} or {setApprovalForAll}.\n Tokens start existing when they are minted (`_mint`),\n and stop existing when they are burned (`_burn`)."
									},
									"id": 612,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_exists",
									"nameLocation": "7265:7:2",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 598,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 597,
												"mutability": "mutable",
												"name": "tokenId",
												"nameLocation": "7281:7:2",
												"nodeType": "VariableDeclaration",
												"scope": 612,
												"src": "7273:15:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 596,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "7273:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "7272:17:2"
									},
									"returnParameters": {
										"id": 601,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 600,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 612,
												"src": "7321:4:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 599,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "7321:4:2",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "7320:6:2"
									},
									"scope": 1111,
									"src": "7256:126:2",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 645,
										"nodeType": "Block",
										"src": "7639:162:2",
										"statements": [
											{
												"assignments": [
													623
												],
												"declarations": [
													{
														"constant": false,
														"id": 623,
														"mutability": "mutable",
														"name": "owner",
														"nameLocation": "7657:5:2",
														"nodeType": "VariableDeclaration",
														"scope": 645,
														"src": "7649:13:2",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														},
														"typeName": {
															"id": 622,
															"name": "address",
															"nodeType": "ElementaryTypeName",
															"src": "7649:7:2",
															"stateMutability": "nonpayable",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 628,
												"initialValue": {
													"arguments": [
														{
															"id": 626,
															"name": "tokenId",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 617,
															"src": "7680:7:2",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"expression": {
															"id": 624,
															"name": "ERC721",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1111,
															"src": "7665:6:2",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_contract$_ERC721_$1111_$",
																"typeString": "type(contract ERC721)"
															}
														},
														"id": 625,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "7672:7:2",
														"memberName": "ownerOf",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 312,
														"src": "7665:14:2",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_view$_t_uint256_$returns$_t_address_$",
															"typeString": "function (uint256) view returns (address)"
														}
													},
													"id": 627,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "7665:23:2",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "7649:39:2"
											},
											{
												"expression": {
													"components": [
														{
															"commonType": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															"id": 642,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"commonType": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																},
																"id": 636,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"commonType": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	},
																	"id": 631,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"leftExpression": {
																		"id": 629,
																		"name": "spender",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 615,
																		"src": "7706:7:2",
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	},
																	"nodeType": "BinaryOperation",
																	"operator": "==",
																	"rightExpression": {
																		"id": 630,
																		"name": "owner",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 623,
																		"src": "7717:5:2",
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	},
																	"src": "7706:16:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bool",
																		"typeString": "bool"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": "||",
																"rightExpression": {
																	"arguments": [
																		{
																			"id": 633,
																			"name": "owner",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 623,
																			"src": "7743:5:2",
																			"typeDescriptions": {
																				"typeIdentifier": "t_address",
																				"typeString": "address"
																			}
																		},
																		{
																			"id": 634,
																			"name": "spender",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 615,
																			"src": "7750:7:2",
																			"typeDescriptions": {
																				"typeIdentifier": "t_address",
																				"typeString": "address"
																			}
																		}
																	],
																	"expression": {
																		"argumentTypes": [
																			{
																				"typeIdentifier": "t_address",
																				"typeString": "address"
																			},
																			{
																				"typeIdentifier": "t_address",
																				"typeString": "address"
																			}
																		],
																		"id": 632,
																		"name": "isApprovedForAll",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 476,
																		"src": "7726:16:2",
																		"typeDescriptions": {
																			"typeIdentifier": "t_function_internal_view$_t_address_$_t_address_$returns$_t_bool_$",
																			"typeString": "function (address,address) view returns (bool)"
																		}
																	},
																	"id": 635,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"kind": "functionCall",
																	"lValueRequested": false,
																	"nameLocations": [],
																	"names": [],
																	"nodeType": "FunctionCall",
																	"src": "7726:32:2",
																	"tryCall": false,
																	"typeDescriptions": {
																		"typeIdentifier": "t_bool",
																		"typeString": "bool"
																	}
																},
																"src": "7706:52:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "||",
															"rightExpression": {
																"commonType": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																},
																"id": 641,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"arguments": [
																		{
																			"id": 638,
																			"name": "tokenId",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 617,
																			"src": "7774:7:2",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		}
																	],
																	"expression": {
																		"argumentTypes": [
																			{
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		],
																		"id": 637,
																		"name": "getApproved",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 441,
																		"src": "7762:11:2",
																		"typeDescriptions": {
																			"typeIdentifier": "t_function_internal_view$_t_uint256_$returns$_t_address_$",
																			"typeString": "function (uint256) view returns (address)"
																		}
																	},
																	"id": 639,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"kind": "functionCall",
																	"lValueRequested": false,
																	"nameLocations": [],
																	"names": [],
																	"nodeType": "FunctionCall",
																	"src": "7762:20:2",
																	"tryCall": false,
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": "==",
																"rightExpression": {
																	"id": 640,
																	"name": "spender",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 615,
																	"src": "7786:7:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																"src": "7762:31:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																}
															},
															"src": "7706:87:2",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														}
													],
													"id": 643,
													"isConstant": false,
													"isInlineArray": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "TupleExpression",
													"src": "7705:89:2",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"functionReturnParameters": 621,
												"id": 644,
												"nodeType": "Return",
												"src": "7698:96:2"
											}
										]
									},
									"documentation": {
										"id": 613,
										"nodeType": "StructuredDocumentation",
										"src": "7388:147:2",
										"text": " @dev Returns whether `spender` is allowed to manage `tokenId`.\n Requirements:\n - `tokenId` must exist."
									},
									"id": 646,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_isApprovedOrOwner",
									"nameLocation": "7549:18:2",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 618,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 615,
												"mutability": "mutable",
												"name": "spender",
												"nameLocation": "7576:7:2",
												"nodeType": "VariableDeclaration",
												"scope": 646,
												"src": "7568:15:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 614,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "7568:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 617,
												"mutability": "mutable",
												"name": "tokenId",
												"nameLocation": "7593:7:2",
												"nodeType": "VariableDeclaration",
												"scope": 646,
												"src": "7585:15:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 616,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "7585:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "7567:34:2"
									},
									"returnParameters": {
										"id": 621,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 620,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 646,
												"src": "7633:4:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 619,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "7633:4:2",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "7632:6:2"
									},
									"scope": 1111,
									"src": "7540:261:2",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 660,
										"nodeType": "Block",
										"src": "8196:43:2",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"id": 655,
															"name": "to",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 649,
															"src": "8216:2:2",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 656,
															"name": "tokenId",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 651,
															"src": "8220:7:2",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														{
															"hexValue": "",
															"id": 657,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "8229:2:2",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470",
																"typeString": "literal_string \"\""
															},
															"value": ""
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															{
																"typeIdentifier": "t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470",
																"typeString": "literal_string \"\""
															}
														],
														"id": 654,
														"name": "_safeMint",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															661,
															690
														],
														"referencedDeclaration": 690,
														"src": "8206:9:2",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_uint256_$_t_bytes_memory_ptr_$returns$__$",
															"typeString": "function (address,uint256,bytes memory)"
														}
													},
													"id": 658,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "8206:26:2",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 659,
												"nodeType": "ExpressionStatement",
												"src": "8206:26:2"
											}
										]
									},
									"documentation": {
										"id": 647,
										"nodeType": "StructuredDocumentation",
										"src": "7807:319:2",
										"text": " @dev Safely mints `tokenId` and transfers it to `to`.\n Requirements:\n - `tokenId` must not exist.\n - If `to` refers to a smart contract, it must implement {IERC721Receiver-onERC721Received}, which is called upon a safe transfer.\n Emits a {Transfer} event."
									},
									"id": 661,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_safeMint",
									"nameLocation": "8140:9:2",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 652,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 649,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "8158:2:2",
												"nodeType": "VariableDeclaration",
												"scope": 661,
												"src": "8150:10:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 648,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "8150:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 651,
												"mutability": "mutable",
												"name": "tokenId",
												"nameLocation": "8170:7:2",
												"nodeType": "VariableDeclaration",
												"scope": 661,
												"src": "8162:15:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 650,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "8162:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "8149:29:2"
									},
									"returnParameters": {
										"id": 653,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "8196:0:2"
									},
									"scope": 1111,
									"src": "8131:108:2",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 689,
										"nodeType": "Block",
										"src": "8574:195:2",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"id": 672,
															"name": "to",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 664,
															"src": "8590:2:2",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 673,
															"name": "tokenId",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 666,
															"src": "8594:7:2",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 671,
														"name": "_mint",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 767,
														"src": "8584:5:2",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,uint256)"
														}
													},
													"id": 674,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "8584:18:2",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 675,
												"nodeType": "ExpressionStatement",
												"src": "8584:18:2"
											},
											{
												"expression": {
													"arguments": [
														{
															"arguments": [
																{
																	"arguments": [
																		{
																			"hexValue": "30",
																			"id": 680,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "8664:1:2",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_0_by_1",
																				"typeString": "int_const 0"
																			},
																			"value": "0"
																		}
																	],
																	"expression": {
																		"argumentTypes": [
																			{
																				"typeIdentifier": "t_rational_0_by_1",
																				"typeString": "int_const 0"
																			}
																		],
																		"id": 679,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"lValueRequested": false,
																		"nodeType": "ElementaryTypeNameExpression",
																		"src": "8656:7:2",
																		"typeDescriptions": {
																			"typeIdentifier": "t_type$_t_address_$",
																			"typeString": "type(address)"
																		},
																		"typeName": {
																			"id": 678,
																			"name": "address",
																			"nodeType": "ElementaryTypeName",
																			"src": "8656:7:2",
																			"typeDescriptions": {}
																		}
																	},
																	"id": 681,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "typeConversion",
																	"lValueRequested": false,
																	"nameLocations": [],
																	"names": [],
																	"nodeType": "FunctionCall",
																	"src": "8656:10:2",
																	"tryCall": false,
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																{
																	"id": 682,
																	"name": "to",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 664,
																	"src": "8668:2:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																{
																	"id": 683,
																	"name": "tokenId",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 666,
																	"src": "8672:7:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																{
																	"id": 684,
																	"name": "data",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 668,
																	"src": "8681:4:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bytes_memory_ptr",
																		"typeString": "bytes memory"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	},
																	{
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	},
																	{
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	{
																		"typeIdentifier": "t_bytes_memory_ptr",
																		"typeString": "bytes memory"
																	}
																],
																"id": 677,
																"name": "_checkOnERC721Received",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1051,
																"src": "8633:22:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$_t_bytes_memory_ptr_$returns$_t_bool_$",
																	"typeString": "function (address,address,uint256,bytes memory) returns (bool)"
																}
															},
															"id": 685,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "8633:53:2",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "4552433732313a207472616e7366657220746f206e6f6e20455243373231526563656976657220696d706c656d656e746572",
															"id": 686,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "8700:52:2",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_1e766a06da43a53d0f4c380e06e5a342e14d5af1bf8501996c844905530ca84e",
																"typeString": "literal_string \"ERC721: transfer to non ERC721Receiver implementer\""
															},
															"value": "ERC721: transfer to non ERC721Receiver implementer"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_1e766a06da43a53d0f4c380e06e5a342e14d5af1bf8501996c844905530ca84e",
																"typeString": "literal_string \"ERC721: transfer to non ERC721Receiver implementer\""
															}
														],
														"id": 676,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "8612:7:2",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 687,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "8612:150:2",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 688,
												"nodeType": "ExpressionStatement",
												"src": "8612:150:2"
											}
										]
									},
									"documentation": {
										"id": 662,
										"nodeType": "StructuredDocumentation",
										"src": "8245:210:2",
										"text": " @dev Same as {xref-ERC721-_safeMint-address-uint256-}[`_safeMint`], with an additional `data` parameter which is\n forwarded in {IERC721Receiver-onERC721Received} to contract recipients."
									},
									"id": 690,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_safeMint",
									"nameLocation": "8469:9:2",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 669,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 664,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "8496:2:2",
												"nodeType": "VariableDeclaration",
												"scope": 690,
												"src": "8488:10:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 663,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "8488:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 666,
												"mutability": "mutable",
												"name": "tokenId",
												"nameLocation": "8516:7:2",
												"nodeType": "VariableDeclaration",
												"scope": 690,
												"src": "8508:15:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 665,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "8508:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 668,
												"mutability": "mutable",
												"name": "data",
												"nameLocation": "8546:4:2",
												"nodeType": "VariableDeclaration",
												"scope": 690,
												"src": "8533:17:2",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 667,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "8533:5:2",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "8478:78:2"
									},
									"returnParameters": {
										"id": 670,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "8574:0:2"
									},
									"scope": 1111,
									"src": "8460:309:2",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 766,
										"nodeType": "Block",
										"src": "9152:859:2",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															"id": 704,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 699,
																"name": "to",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 693,
																"src": "9170:2:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "!=",
															"rightExpression": {
																"arguments": [
																	{
																		"hexValue": "30",
																		"id": 702,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "9184:1:2",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		},
																		"value": "0"
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		}
																	],
																	"id": 701,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"lValueRequested": false,
																	"nodeType": "ElementaryTypeNameExpression",
																	"src": "9176:7:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_type$_t_address_$",
																		"typeString": "type(address)"
																	},
																	"typeName": {
																		"id": 700,
																		"name": "address",
																		"nodeType": "ElementaryTypeName",
																		"src": "9176:7:2",
																		"typeDescriptions": {}
																	}
																},
																"id": 703,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "typeConversion",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "9176:10:2",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"src": "9170:16:2",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "4552433732313a206d696e7420746f20746865207a65726f2061646472657373",
															"id": 705,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "9188:34:2",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_8a66f4bb6512ffbfcc3db9b42318eb65f26ac15163eaa9a1e5cfa7bee9d1c7c6",
																"typeString": "literal_string \"ERC721: mint to the zero address\""
															},
															"value": "ERC721: mint to the zero address"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_8a66f4bb6512ffbfcc3db9b42318eb65f26ac15163eaa9a1e5cfa7bee9d1c7c6",
																"typeString": "literal_string \"ERC721: mint to the zero address\""
															}
														],
														"id": 698,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "9162:7:2",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 706,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "9162:61:2",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 707,
												"nodeType": "ExpressionStatement",
												"src": "9162:61:2"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 712,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"nodeType": "UnaryOperation",
															"operator": "!",
															"prefix": true,
															"src": "9241:17:2",
															"subExpression": {
																"arguments": [
																	{
																		"id": 710,
																		"name": "tokenId",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 695,
																		"src": "9250:7:2",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	],
																	"id": 709,
																	"name": "_exists",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 612,
																	"src": "9242:7:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_internal_view$_t_uint256_$returns$_t_bool_$",
																		"typeString": "function (uint256) view returns (bool)"
																	}
																},
																"id": 711,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "9242:16:2",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																}
															},
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "4552433732313a20746f6b656e20616c7265616479206d696e746564",
															"id": 713,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "9260:30:2",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_2a63ce106ef95058ed21fd07c42a10f11dc5c32ac13a4e847923f7759f635d57",
																"typeString": "literal_string \"ERC721: token already minted\""
															},
															"value": "ERC721: token already minted"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_2a63ce106ef95058ed21fd07c42a10f11dc5c32ac13a4e847923f7759f635d57",
																"typeString": "literal_string \"ERC721: token already minted\""
															}
														],
														"id": 708,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "9233:7:2",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 714,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "9233:58:2",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 715,
												"nodeType": "ExpressionStatement",
												"src": "9233:58:2"
											},
											{
												"expression": {
													"arguments": [
														{
															"arguments": [
																{
																	"hexValue": "30",
																	"id": 719,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "9331:1:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	},
																	"value": "0"
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	}
																],
																"id": 718,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "9323:7:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_address_$",
																	"typeString": "type(address)"
																},
																"typeName": {
																	"id": 717,
																	"name": "address",
																	"nodeType": "ElementaryTypeName",
																	"src": "9323:7:2",
																	"typeDescriptions": {}
																}
															},
															"id": 720,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "typeConversion",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "9323:10:2",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 721,
															"name": "to",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 693,
															"src": "9335:2:2",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 722,
															"name": "tokenId",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 695,
															"src": "9339:7:2",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														{
															"hexValue": "31",
															"id": 723,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "number",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "9348:1:2",
															"typeDescriptions": {
																"typeIdentifier": "t_rational_1_by_1",
																"typeString": "int_const 1"
															},
															"value": "1"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															{
																"typeIdentifier": "t_rational_1_by_1",
																"typeString": "int_const 1"
															}
														],
														"id": 716,
														"name": "_beforeTokenTransfer",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1097,
														"src": "9302:20:2",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$_t_uint256_$returns$__$",
															"typeString": "function (address,address,uint256,uint256)"
														}
													},
													"id": 724,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "9302:48:2",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 725,
												"nodeType": "ExpressionStatement",
												"src": "9302:48:2"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 730,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"nodeType": "UnaryOperation",
															"operator": "!",
															"prefix": true,
															"src": "9445:17:2",
															"subExpression": {
																"arguments": [
																	{
																		"id": 728,
																		"name": "tokenId",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 695,
																		"src": "9454:7:2",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	],
																	"id": 727,
																	"name": "_exists",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 612,
																	"src": "9446:7:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_internal_view$_t_uint256_$returns$_t_bool_$",
																		"typeString": "function (uint256) view returns (bool)"
																	}
																},
																"id": 729,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "9446:16:2",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																}
															},
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "4552433732313a20746f6b656e20616c7265616479206d696e746564",
															"id": 731,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "9464:30:2",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_2a63ce106ef95058ed21fd07c42a10f11dc5c32ac13a4e847923f7759f635d57",
																"typeString": "literal_string \"ERC721: token already minted\""
															},
															"value": "ERC721: token already minted"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_2a63ce106ef95058ed21fd07c42a10f11dc5c32ac13a4e847923f7759f635d57",
																"typeString": "literal_string \"ERC721: token already minted\""
															}
														],
														"id": 726,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "9437:7:2",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 732,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "9437:58:2",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 733,
												"nodeType": "ExpressionStatement",
												"src": "9437:58:2"
											},
											{
												"id": 740,
												"nodeType": "UncheckedBlock",
												"src": "9506:360:2",
												"statements": [
													{
														"expression": {
															"id": 738,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftHandSide": {
																"baseExpression": {
																	"id": 734,
																	"name": "_balances",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 202,
																	"src": "9837:9:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
																		"typeString": "mapping(address => uint256)"
																	}
																},
																"id": 736,
																"indexExpression": {
																	"id": 735,
																	"name": "to",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 693,
																	"src": "9847:2:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																"isConstant": false,
																"isLValue": true,
																"isPure": false,
																"lValueRequested": true,
																"nodeType": "IndexAccess",
																"src": "9837:13:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "Assignment",
															"operator": "+=",
															"rightHandSide": {
																"hexValue": "31",
																"id": 737,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "9854:1:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_1_by_1",
																	"typeString": "int_const 1"
																},
																"value": "1"
															},
															"src": "9837:18:2",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"id": 739,
														"nodeType": "ExpressionStatement",
														"src": "9837:18:2"
													}
												]
											},
											{
												"expression": {
													"id": 745,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"baseExpression": {
															"id": 741,
															"name": "_owners",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 198,
															"src": "9876:7:2",
															"typeDescriptions": {
																"typeIdentifier": "t_mapping$_t_uint256_$_t_address_$",
																"typeString": "mapping(uint256 => address)"
															}
														},
														"id": 743,
														"indexExpression": {
															"id": 742,
															"name": "tokenId",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 695,
															"src": "9884:7:2",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"nodeType": "IndexAccess",
														"src": "9876:16:2",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"id": 744,
														"name": "to",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 693,
														"src": "9895:2:2",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "9876:21:2",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"id": 746,
												"nodeType": "ExpressionStatement",
												"src": "9876:21:2"
											},
											{
												"eventCall": {
													"arguments": [
														{
															"arguments": [
																{
																	"hexValue": "30",
																	"id": 750,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "9930:1:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	},
																	"value": "0"
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	}
																],
																"id": 749,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "9922:7:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_address_$",
																	"typeString": "type(address)"
																},
																"typeName": {
																	"id": 748,
																	"name": "address",
																	"nodeType": "ElementaryTypeName",
																	"src": "9922:7:2",
																	"typeDescriptions": {}
																}
															},
															"id": 751,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "typeConversion",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "9922:10:2",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 752,
															"name": "to",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 693,
															"src": "9934:2:2",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 753,
															"name": "tokenId",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 695,
															"src": "9938:7:2",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 747,
														"name": "Transfer",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1126,
														"src": "9913:8:2",
														"typeDescriptions": {
															"typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,address,uint256)"
														}
													},
													"id": 754,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "9913:33:2",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 755,
												"nodeType": "EmitStatement",
												"src": "9908:38:2"
											},
											{
												"expression": {
													"arguments": [
														{
															"arguments": [
																{
																	"hexValue": "30",
																	"id": 759,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "9985:1:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	},
																	"value": "0"
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	}
																],
																"id": 758,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "9977:7:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_address_$",
																	"typeString": "type(address)"
																},
																"typeName": {
																	"id": 757,
																	"name": "address",
																	"nodeType": "ElementaryTypeName",
																	"src": "9977:7:2",
																	"typeDescriptions": {}
																}
															},
															"id": 760,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "typeConversion",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "9977:10:2",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 761,
															"name": "to",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 693,
															"src": "9989:2:2",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 762,
															"name": "tokenId",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 695,
															"src": "9993:7:2",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														{
															"hexValue": "31",
															"id": 763,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "number",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "10002:1:2",
															"typeDescriptions": {
																"typeIdentifier": "t_rational_1_by_1",
																"typeString": "int_const 1"
															},
															"value": "1"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															{
																"typeIdentifier": "t_rational_1_by_1",
																"typeString": "int_const 1"
															}
														],
														"id": 756,
														"name": "_afterTokenTransfer",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1110,
														"src": "9957:19:2",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$_t_uint256_$returns$__$",
															"typeString": "function (address,address,uint256,uint256)"
														}
													},
													"id": 764,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "9957:47:2",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 765,
												"nodeType": "ExpressionStatement",
												"src": "9957:47:2"
											}
										]
									},
									"documentation": {
										"id": 691,
										"nodeType": "StructuredDocumentation",
										"src": "8775:311:2",
										"text": " @dev Mints `tokenId` and transfers it to `to`.\n WARNING: Usage of this method is discouraged, use {_safeMint} whenever possible\n Requirements:\n - `tokenId` must not exist.\n - `to` cannot be the zero address.\n Emits a {Transfer} event."
									},
									"id": 767,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_mint",
									"nameLocation": "9100:5:2",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 696,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 693,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "9114:2:2",
												"nodeType": "VariableDeclaration",
												"scope": 767,
												"src": "9106:10:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 692,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "9106:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 695,
												"mutability": "mutable",
												"name": "tokenId",
												"nameLocation": "9126:7:2",
												"nodeType": "VariableDeclaration",
												"scope": 767,
												"src": "9118:15:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 694,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "9118:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "9105:29:2"
									},
									"returnParameters": {
										"id": 697,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "9152:0:2"
									},
									"scope": 1111,
									"src": "9091:920:2",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 833,
										"nodeType": "Block",
										"src": "10386:713:2",
										"statements": [
											{
												"assignments": [
													774
												],
												"declarations": [
													{
														"constant": false,
														"id": 774,
														"mutability": "mutable",
														"name": "owner",
														"nameLocation": "10404:5:2",
														"nodeType": "VariableDeclaration",
														"scope": 833,
														"src": "10396:13:2",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														},
														"typeName": {
															"id": 773,
															"name": "address",
															"nodeType": "ElementaryTypeName",
															"src": "10396:7:2",
															"stateMutability": "nonpayable",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 779,
												"initialValue": {
													"arguments": [
														{
															"id": 777,
															"name": "tokenId",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 770,
															"src": "10427:7:2",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"expression": {
															"id": 775,
															"name": "ERC721",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1111,
															"src": "10412:6:2",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_contract$_ERC721_$1111_$",
																"typeString": "type(contract ERC721)"
															}
														},
														"id": 776,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "10419:7:2",
														"memberName": "ownerOf",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 312,
														"src": "10412:14:2",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_view$_t_uint256_$returns$_t_address_$",
															"typeString": "function (uint256) view returns (address)"
														}
													},
													"id": 778,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "10412:23:2",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "10396:39:2"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 781,
															"name": "owner",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 774,
															"src": "10467:5:2",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"arguments": [
																{
																	"hexValue": "30",
																	"id": 784,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "10482:1:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	},
																	"value": "0"
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	}
																],
																"id": 783,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "10474:7:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_address_$",
																	"typeString": "type(address)"
																},
																"typeName": {
																	"id": 782,
																	"name": "address",
																	"nodeType": "ElementaryTypeName",
																	"src": "10474:7:2",
																	"typeDescriptions": {}
																}
															},
															"id": 785,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "typeConversion",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "10474:10:2",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 786,
															"name": "tokenId",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 770,
															"src": "10486:7:2",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														{
															"hexValue": "31",
															"id": 787,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "number",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "10495:1:2",
															"typeDescriptions": {
																"typeIdentifier": "t_rational_1_by_1",
																"typeString": "int_const 1"
															},
															"value": "1"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															{
																"typeIdentifier": "t_rational_1_by_1",
																"typeString": "int_const 1"
															}
														],
														"id": 780,
														"name": "_beforeTokenTransfer",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1097,
														"src": "10446:20:2",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$_t_uint256_$returns$__$",
															"typeString": "function (address,address,uint256,uint256)"
														}
													},
													"id": 788,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "10446:51:2",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 789,
												"nodeType": "ExpressionStatement",
												"src": "10446:51:2"
											},
											{
												"expression": {
													"id": 795,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 790,
														"name": "owner",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 774,
														"src": "10599:5:2",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"arguments": [
															{
																"id": 793,
																"name": "tokenId",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 770,
																"src": "10622:7:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															],
															"expression": {
																"id": 791,
																"name": "ERC721",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1111,
																"src": "10607:6:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_contract$_ERC721_$1111_$",
																	"typeString": "type(contract ERC721)"
																}
															},
															"id": 792,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "10614:7:2",
															"memberName": "ownerOf",
															"nodeType": "MemberAccess",
															"referencedDeclaration": 312,
															"src": "10607:14:2",
															"typeDescriptions": {
																"typeIdentifier": "t_function_internal_view$_t_uint256_$returns$_t_address_$",
																"typeString": "function (uint256) view returns (address)"
															}
														},
														"id": 794,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "functionCall",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "10607:23:2",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "10599:31:2",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"id": 796,
												"nodeType": "ExpressionStatement",
												"src": "10599:31:2"
											},
											{
												"expression": {
													"id": 800,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "UnaryOperation",
													"operator": "delete",
													"prefix": true,
													"src": "10668:31:2",
													"subExpression": {
														"baseExpression": {
															"id": 797,
															"name": "_tokenApprovals",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 206,
															"src": "10675:15:2",
															"typeDescriptions": {
																"typeIdentifier": "t_mapping$_t_uint256_$_t_address_$",
																"typeString": "mapping(uint256 => address)"
															}
														},
														"id": 799,
														"indexExpression": {
															"id": 798,
															"name": "tokenId",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 770,
															"src": "10691:7:2",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"nodeType": "IndexAccess",
														"src": "10675:24:2",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 801,
												"nodeType": "ExpressionStatement",
												"src": "10668:31:2"
											},
											{
												"id": 808,
												"nodeType": "UncheckedBlock",
												"src": "10710:237:2",
												"statements": [
													{
														"expression": {
															"id": 806,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftHandSide": {
																"baseExpression": {
																	"id": 802,
																	"name": "_balances",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 202,
																	"src": "10915:9:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
																		"typeString": "mapping(address => uint256)"
																	}
																},
																"id": 804,
																"indexExpression": {
																	"id": 803,
																	"name": "owner",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 774,
																	"src": "10925:5:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																"isConstant": false,
																"isLValue": true,
																"isPure": false,
																"lValueRequested": true,
																"nodeType": "IndexAccess",
																"src": "10915:16:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "Assignment",
															"operator": "-=",
															"rightHandSide": {
																"hexValue": "31",
																"id": 805,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "10935:1:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_1_by_1",
																	"typeString": "int_const 1"
																},
																"value": "1"
															},
															"src": "10915:21:2",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"id": 807,
														"nodeType": "ExpressionStatement",
														"src": "10915:21:2"
													}
												]
											},
											{
												"expression": {
													"id": 812,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "UnaryOperation",
													"operator": "delete",
													"prefix": true,
													"src": "10956:23:2",
													"subExpression": {
														"baseExpression": {
															"id": 809,
															"name": "_owners",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 198,
															"src": "10963:7:2",
															"typeDescriptions": {
																"typeIdentifier": "t_mapping$_t_uint256_$_t_address_$",
																"typeString": "mapping(uint256 => address)"
															}
														},
														"id": 811,
														"indexExpression": {
															"id": 810,
															"name": "tokenId",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 770,
															"src": "10971:7:2",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"nodeType": "IndexAccess",
														"src": "10963:16:2",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 813,
												"nodeType": "ExpressionStatement",
												"src": "10956:23:2"
											},
											{
												"eventCall": {
													"arguments": [
														{
															"id": 815,
															"name": "owner",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 774,
															"src": "11004:5:2",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"arguments": [
																{
																	"hexValue": "30",
																	"id": 818,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "11019:1:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	},
																	"value": "0"
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	}
																],
																"id": 817,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "11011:7:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_address_$",
																	"typeString": "type(address)"
																},
																"typeName": {
																	"id": 816,
																	"name": "address",
																	"nodeType": "ElementaryTypeName",
																	"src": "11011:7:2",
																	"typeDescriptions": {}
																}
															},
															"id": 819,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "typeConversion",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "11011:10:2",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 820,
															"name": "tokenId",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 770,
															"src": "11023:7:2",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 814,
														"name": "Transfer",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1126,
														"src": "10995:8:2",
														"typeDescriptions": {
															"typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,address,uint256)"
														}
													},
													"id": 821,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "10995:36:2",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 822,
												"nodeType": "EmitStatement",
												"src": "10990:41:2"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 824,
															"name": "owner",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 774,
															"src": "11062:5:2",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"arguments": [
																{
																	"hexValue": "30",
																	"id": 827,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "11077:1:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	},
																	"value": "0"
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	}
																],
																"id": 826,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "11069:7:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_address_$",
																	"typeString": "type(address)"
																},
																"typeName": {
																	"id": 825,
																	"name": "address",
																	"nodeType": "ElementaryTypeName",
																	"src": "11069:7:2",
																	"typeDescriptions": {}
																}
															},
															"id": 828,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "typeConversion",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "11069:10:2",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 829,
															"name": "tokenId",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 770,
															"src": "11081:7:2",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														{
															"hexValue": "31",
															"id": 830,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "number",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "11090:1:2",
															"typeDescriptions": {
																"typeIdentifier": "t_rational_1_by_1",
																"typeString": "int_const 1"
															},
															"value": "1"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															{
																"typeIdentifier": "t_rational_1_by_1",
																"typeString": "int_const 1"
															}
														],
														"id": 823,
														"name": "_afterTokenTransfer",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1110,
														"src": "11042:19:2",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$_t_uint256_$returns$__$",
															"typeString": "function (address,address,uint256,uint256)"
														}
													},
													"id": 831,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "11042:50:2",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 832,
												"nodeType": "ExpressionStatement",
												"src": "11042:50:2"
											}
										]
									},
									"documentation": {
										"id": 768,
										"nodeType": "StructuredDocumentation",
										"src": "10017:315:2",
										"text": " @dev Destroys `tokenId`.\n The approval is cleared when the token is burned.\n This is an internal function that does not check if the sender is authorized to operate on the token.\n Requirements:\n - `tokenId` must exist.\n Emits a {Transfer} event."
									},
									"id": 834,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_burn",
									"nameLocation": "10346:5:2",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 771,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 770,
												"mutability": "mutable",
												"name": "tokenId",
												"nameLocation": "10360:7:2",
												"nodeType": "VariableDeclaration",
												"scope": 834,
												"src": "10352:15:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 769,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "10352:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "10351:17:2"
									},
									"returnParameters": {
										"id": 772,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "10386:0:2"
									},
									"scope": 1111,
									"src": "10337:762:2",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 918,
										"nodeType": "Block",
										"src": "11532:1124:2",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															"id": 850,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"arguments": [
																	{
																		"id": 847,
																		"name": "tokenId",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 841,
																		"src": "11565:7:2",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	],
																	"expression": {
																		"id": 845,
																		"name": "ERC721",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1111,
																		"src": "11550:6:2",
																		"typeDescriptions": {
																			"typeIdentifier": "t_type$_t_contract$_ERC721_$1111_$",
																			"typeString": "type(contract ERC721)"
																		}
																	},
																	"id": 846,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"memberLocation": "11557:7:2",
																	"memberName": "ownerOf",
																	"nodeType": "MemberAccess",
																	"referencedDeclaration": 312,
																	"src": "11550:14:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_internal_view$_t_uint256_$returns$_t_address_$",
																		"typeString": "function (uint256) view returns (address)"
																	}
																},
																"id": 848,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "11550:23:2",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "==",
															"rightExpression": {
																"id": 849,
																"name": "from",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 837,
																"src": "11577:4:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"src": "11550:31:2",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "4552433732313a207472616e736665722066726f6d20696e636f7272656374206f776e6572",
															"id": 851,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "11583:39:2",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_277f8ee9d5b4fc3c4149386f24de0fc1bbc63a8210e2197bfd1c0376a2ac5f48",
																"typeString": "literal_string \"ERC721: transfer from incorrect owner\""
															},
															"value": "ERC721: transfer from incorrect owner"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_277f8ee9d5b4fc3c4149386f24de0fc1bbc63a8210e2197bfd1c0376a2ac5f48",
																"typeString": "literal_string \"ERC721: transfer from incorrect owner\""
															}
														],
														"id": 844,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "11542:7:2",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 852,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "11542:81:2",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 853,
												"nodeType": "ExpressionStatement",
												"src": "11542:81:2"
											},
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															"id": 860,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 855,
																"name": "to",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 839,
																"src": "11641:2:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "!=",
															"rightExpression": {
																"arguments": [
																	{
																		"hexValue": "30",
																		"id": 858,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "11655:1:2",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		},
																		"value": "0"
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		}
																	],
																	"id": 857,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"lValueRequested": false,
																	"nodeType": "ElementaryTypeNameExpression",
																	"src": "11647:7:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_type$_t_address_$",
																		"typeString": "type(address)"
																	},
																	"typeName": {
																		"id": 856,
																		"name": "address",
																		"nodeType": "ElementaryTypeName",
																		"src": "11647:7:2",
																		"typeDescriptions": {}
																	}
																},
																"id": 859,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "typeConversion",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "11647:10:2",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"src": "11641:16:2",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "4552433732313a207472616e7366657220746f20746865207a65726f2061646472657373",
															"id": 861,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "11659:38:2",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_455fea98ea03c32d7dd1a6f1426917d80529bf47b3ccbde74e7206e889e709f4",
																"typeString": "literal_string \"ERC721: transfer to the zero address\""
															},
															"value": "ERC721: transfer to the zero address"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_455fea98ea03c32d7dd1a6f1426917d80529bf47b3ccbde74e7206e889e709f4",
																"typeString": "literal_string \"ERC721: transfer to the zero address\""
															}
														],
														"id": 854,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "11633:7:2",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 862,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "11633:65:2",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 863,
												"nodeType": "ExpressionStatement",
												"src": "11633:65:2"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 865,
															"name": "from",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 837,
															"src": "11730:4:2",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 866,
															"name": "to",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 839,
															"src": "11736:2:2",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 867,
															"name": "tokenId",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 841,
															"src": "11740:7:2",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														{
															"hexValue": "31",
															"id": 868,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "number",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "11749:1:2",
															"typeDescriptions": {
																"typeIdentifier": "t_rational_1_by_1",
																"typeString": "int_const 1"
															},
															"value": "1"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															{
																"typeIdentifier": "t_rational_1_by_1",
																"typeString": "int_const 1"
															}
														],
														"id": 864,
														"name": "_beforeTokenTransfer",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1097,
														"src": "11709:20:2",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$_t_uint256_$returns$__$",
															"typeString": "function (address,address,uint256,uint256)"
														}
													},
													"id": 869,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "11709:42:2",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 870,
												"nodeType": "ExpressionStatement",
												"src": "11709:42:2"
											},
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															"id": 877,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"arguments": [
																	{
																		"id": 874,
																		"name": "tokenId",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 841,
																		"src": "11866:7:2",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	],
																	"expression": {
																		"id": 872,
																		"name": "ERC721",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1111,
																		"src": "11851:6:2",
																		"typeDescriptions": {
																			"typeIdentifier": "t_type$_t_contract$_ERC721_$1111_$",
																			"typeString": "type(contract ERC721)"
																		}
																	},
																	"id": 873,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"memberLocation": "11858:7:2",
																	"memberName": "ownerOf",
																	"nodeType": "MemberAccess",
																	"referencedDeclaration": 312,
																	"src": "11851:14:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_internal_view$_t_uint256_$returns$_t_address_$",
																		"typeString": "function (uint256) view returns (address)"
																	}
																},
																"id": 875,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "11851:23:2",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "==",
															"rightExpression": {
																"id": 876,
																"name": "from",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 837,
																"src": "11878:4:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"src": "11851:31:2",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "4552433732313a207472616e736665722066726f6d20696e636f7272656374206f776e6572",
															"id": 878,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "11884:39:2",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_277f8ee9d5b4fc3c4149386f24de0fc1bbc63a8210e2197bfd1c0376a2ac5f48",
																"typeString": "literal_string \"ERC721: transfer from incorrect owner\""
															},
															"value": "ERC721: transfer from incorrect owner"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_277f8ee9d5b4fc3c4149386f24de0fc1bbc63a8210e2197bfd1c0376a2ac5f48",
																"typeString": "literal_string \"ERC721: transfer from incorrect owner\""
															}
														],
														"id": 871,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "11843:7:2",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 879,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "11843:81:2",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 880,
												"nodeType": "ExpressionStatement",
												"src": "11843:81:2"
											},
											{
												"expression": {
													"id": 884,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "UnaryOperation",
													"operator": "delete",
													"prefix": true,
													"src": "11986:31:2",
													"subExpression": {
														"baseExpression": {
															"id": 881,
															"name": "_tokenApprovals",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 206,
															"src": "11993:15:2",
															"typeDescriptions": {
																"typeIdentifier": "t_mapping$_t_uint256_$_t_address_$",
																"typeString": "mapping(uint256 => address)"
															}
														},
														"id": 883,
														"indexExpression": {
															"id": 882,
															"name": "tokenId",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 841,
															"src": "12009:7:2",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"nodeType": "IndexAccess",
														"src": "11993:24:2",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 885,
												"nodeType": "ExpressionStatement",
												"src": "11986:31:2"
											},
											{
												"id": 898,
												"nodeType": "UncheckedBlock",
												"src": "12028:496:2",
												"statements": [
													{
														"expression": {
															"id": 890,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftHandSide": {
																"baseExpression": {
																	"id": 886,
																	"name": "_balances",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 202,
																	"src": "12461:9:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
																		"typeString": "mapping(address => uint256)"
																	}
																},
																"id": 888,
																"indexExpression": {
																	"id": 887,
																	"name": "from",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 837,
																	"src": "12471:4:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																"isConstant": false,
																"isLValue": true,
																"isPure": false,
																"lValueRequested": true,
																"nodeType": "IndexAccess",
																"src": "12461:15:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "Assignment",
															"operator": "-=",
															"rightHandSide": {
																"hexValue": "31",
																"id": 889,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "12480:1:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_1_by_1",
																	"typeString": "int_const 1"
																},
																"value": "1"
															},
															"src": "12461:20:2",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"id": 891,
														"nodeType": "ExpressionStatement",
														"src": "12461:20:2"
													},
													{
														"expression": {
															"id": 896,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftHandSide": {
																"baseExpression": {
																	"id": 892,
																	"name": "_balances",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 202,
																	"src": "12495:9:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
																		"typeString": "mapping(address => uint256)"
																	}
																},
																"id": 894,
																"indexExpression": {
																	"id": 893,
																	"name": "to",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 839,
																	"src": "12505:2:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																"isConstant": false,
																"isLValue": true,
																"isPure": false,
																"lValueRequested": true,
																"nodeType": "IndexAccess",
																"src": "12495:13:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "Assignment",
															"operator": "+=",
															"rightHandSide": {
																"hexValue": "31",
																"id": 895,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "12512:1:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_1_by_1",
																	"typeString": "int_const 1"
																},
																"value": "1"
															},
															"src": "12495:18:2",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"id": 897,
														"nodeType": "ExpressionStatement",
														"src": "12495:18:2"
													}
												]
											},
											{
												"expression": {
													"id": 903,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"baseExpression": {
															"id": 899,
															"name": "_owners",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 198,
															"src": "12533:7:2",
															"typeDescriptions": {
																"typeIdentifier": "t_mapping$_t_uint256_$_t_address_$",
																"typeString": "mapping(uint256 => address)"
															}
														},
														"id": 901,
														"indexExpression": {
															"id": 900,
															"name": "tokenId",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 841,
															"src": "12541:7:2",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"nodeType": "IndexAccess",
														"src": "12533:16:2",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"id": 902,
														"name": "to",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 839,
														"src": "12552:2:2",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "12533:21:2",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"id": 904,
												"nodeType": "ExpressionStatement",
												"src": "12533:21:2"
											},
											{
												"eventCall": {
													"arguments": [
														{
															"id": 906,
															"name": "from",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 837,
															"src": "12579:4:2",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 907,
															"name": "to",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 839,
															"src": "12585:2:2",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 908,
															"name": "tokenId",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 841,
															"src": "12589:7:2",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 905,
														"name": "Transfer",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1126,
														"src": "12570:8:2",
														"typeDescriptions": {
															"typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,address,uint256)"
														}
													},
													"id": 909,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "12570:27:2",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 910,
												"nodeType": "EmitStatement",
												"src": "12565:32:2"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 912,
															"name": "from",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 837,
															"src": "12628:4:2",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 913,
															"name": "to",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 839,
															"src": "12634:2:2",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 914,
															"name": "tokenId",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 841,
															"src": "12638:7:2",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														{
															"hexValue": "31",
															"id": 915,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "number",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "12647:1:2",
															"typeDescriptions": {
																"typeIdentifier": "t_rational_1_by_1",
																"typeString": "int_const 1"
															},
															"value": "1"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															{
																"typeIdentifier": "t_rational_1_by_1",
																"typeString": "int_const 1"
															}
														],
														"id": 911,
														"name": "_afterTokenTransfer",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1110,
														"src": "12608:19:2",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$_t_uint256_$returns$__$",
															"typeString": "function (address,address,uint256,uint256)"
														}
													},
													"id": 916,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "12608:41:2",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 917,
												"nodeType": "ExpressionStatement",
												"src": "12608:41:2"
											}
										]
									},
									"documentation": {
										"id": 835,
										"nodeType": "StructuredDocumentation",
										"src": "11105:313:2",
										"text": " @dev Transfers `tokenId` from `from` to `to`.\n  As opposed to {transferFrom}, this imposes no restrictions on msg.sender.\n Requirements:\n - `to` cannot be the zero address.\n - `tokenId` token must be owned by `from`.\n Emits a {Transfer} event."
									},
									"id": 919,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_transfer",
									"nameLocation": "11432:9:2",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 842,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 837,
												"mutability": "mutable",
												"name": "from",
												"nameLocation": "11459:4:2",
												"nodeType": "VariableDeclaration",
												"scope": 919,
												"src": "11451:12:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 836,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "11451:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 839,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "11481:2:2",
												"nodeType": "VariableDeclaration",
												"scope": 919,
												"src": "11473:10:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 838,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "11473:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 841,
												"mutability": "mutable",
												"name": "tokenId",
												"nameLocation": "11501:7:2",
												"nodeType": "VariableDeclaration",
												"scope": 919,
												"src": "11493:15:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 840,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "11493:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "11441:73:2"
									},
									"returnParameters": {
										"id": 843,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "11532:0:2"
									},
									"scope": 1111,
									"src": "11423:1233:2",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 942,
										"nodeType": "Block",
										"src": "12832:107:2",
										"statements": [
											{
												"expression": {
													"id": 931,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"baseExpression": {
															"id": 927,
															"name": "_tokenApprovals",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 206,
															"src": "12842:15:2",
															"typeDescriptions": {
																"typeIdentifier": "t_mapping$_t_uint256_$_t_address_$",
																"typeString": "mapping(uint256 => address)"
															}
														},
														"id": 929,
														"indexExpression": {
															"id": 928,
															"name": "tokenId",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 924,
															"src": "12858:7:2",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"nodeType": "IndexAccess",
														"src": "12842:24:2",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"id": 930,
														"name": "to",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 922,
														"src": "12869:2:2",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "12842:29:2",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"id": 932,
												"nodeType": "ExpressionStatement",
												"src": "12842:29:2"
											},
											{
												"eventCall": {
													"arguments": [
														{
															"arguments": [
																{
																	"id": 936,
																	"name": "tokenId",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 924,
																	"src": "12910:7:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																],
																"expression": {
																	"id": 934,
																	"name": "ERC721",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1111,
																	"src": "12895:6:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_type$_t_contract$_ERC721_$1111_$",
																		"typeString": "type(contract ERC721)"
																	}
																},
																"id": 935,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"memberLocation": "12902:7:2",
																"memberName": "ownerOf",
																"nodeType": "MemberAccess",
																"referencedDeclaration": 312,
																"src": "12895:14:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_internal_view$_t_uint256_$returns$_t_address_$",
																	"typeString": "function (uint256) view returns (address)"
																}
															},
															"id": 937,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "12895:23:2",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 938,
															"name": "to",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 922,
															"src": "12920:2:2",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 939,
															"name": "tokenId",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 924,
															"src": "12924:7:2",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 933,
														"name": "Approval",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1135,
														"src": "12886:8:2",
														"typeDescriptions": {
															"typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,address,uint256)"
														}
													},
													"id": 940,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "12886:46:2",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 941,
												"nodeType": "EmitStatement",
												"src": "12881:51:2"
											}
										]
									},
									"documentation": {
										"id": 920,
										"nodeType": "StructuredDocumentation",
										"src": "12662:101:2",
										"text": " @dev Approve `to` to operate on `tokenId`\n Emits an {Approval} event."
									},
									"id": 943,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_approve",
									"nameLocation": "12777:8:2",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 925,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 922,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "12794:2:2",
												"nodeType": "VariableDeclaration",
												"scope": 943,
												"src": "12786:10:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 921,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "12786:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 924,
												"mutability": "mutable",
												"name": "tokenId",
												"nameLocation": "12806:7:2",
												"nodeType": "VariableDeclaration",
												"scope": 943,
												"src": "12798:15:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 923,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "12798:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "12785:29:2"
									},
									"returnParameters": {
										"id": 926,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "12832:0:2"
									},
									"scope": 1111,
									"src": "12768:171:2",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 974,
										"nodeType": "Block",
										"src": "13198:184:2",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															"id": 956,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 954,
																"name": "owner",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 946,
																"src": "13216:5:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "!=",
															"rightExpression": {
																"id": 955,
																"name": "operator",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 948,
																"src": "13225:8:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"src": "13216:17:2",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "4552433732313a20617070726f766520746f2063616c6c6572",
															"id": 957,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "13235:27:2",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_45fe4329685be5ecd250fd0e6a25aea0ea4d0e30fb6a73c118b95749e6d70d05",
																"typeString": "literal_string \"ERC721: approve to caller\""
															},
															"value": "ERC721: approve to caller"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_45fe4329685be5ecd250fd0e6a25aea0ea4d0e30fb6a73c118b95749e6d70d05",
																"typeString": "literal_string \"ERC721: approve to caller\""
															}
														],
														"id": 953,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "13208:7:2",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 958,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "13208:55:2",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 959,
												"nodeType": "ExpressionStatement",
												"src": "13208:55:2"
											},
											{
												"expression": {
													"id": 966,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"baseExpression": {
															"baseExpression": {
																"id": 960,
																"name": "_operatorApprovals",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 212,
																"src": "13273:18:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_mapping$_t_address_$_t_mapping$_t_address_$_t_bool_$_$",
																	"typeString": "mapping(address => mapping(address => bool))"
																}
															},
															"id": 963,
															"indexExpression": {
																"id": 961,
																"name": "owner",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 946,
																"src": "13292:5:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"isConstant": false,
															"isLValue": true,
															"isPure": false,
															"lValueRequested": false,
															"nodeType": "IndexAccess",
															"src": "13273:25:2",
															"typeDescriptions": {
																"typeIdentifier": "t_mapping$_t_address_$_t_bool_$",
																"typeString": "mapping(address => bool)"
															}
														},
														"id": 964,
														"indexExpression": {
															"id": 962,
															"name": "operator",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 948,
															"src": "13299:8:2",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"nodeType": "IndexAccess",
														"src": "13273:35:2",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"id": 965,
														"name": "approved",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 950,
														"src": "13311:8:2",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"src": "13273:46:2",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 967,
												"nodeType": "ExpressionStatement",
												"src": "13273:46:2"
											},
											{
												"eventCall": {
													"arguments": [
														{
															"id": 969,
															"name": "owner",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 946,
															"src": "13349:5:2",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 970,
															"name": "operator",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 948,
															"src": "13356:8:2",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 971,
															"name": "approved",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 950,
															"src": "13366:8:2",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														],
														"id": 968,
														"name": "ApprovalForAll",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1144,
														"src": "13334:14:2",
														"typeDescriptions": {
															"typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_address_$_t_bool_$returns$__$",
															"typeString": "function (address,address,bool)"
														}
													},
													"id": 972,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "13334:41:2",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 973,
												"nodeType": "EmitStatement",
												"src": "13329:46:2"
											}
										]
									},
									"documentation": {
										"id": 944,
										"nodeType": "StructuredDocumentation",
										"src": "12945:125:2",
										"text": " @dev Approve `operator` to operate on all of `owner` tokens\n Emits an {ApprovalForAll} event."
									},
									"id": 975,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_setApprovalForAll",
									"nameLocation": "13084:18:2",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 951,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 946,
												"mutability": "mutable",
												"name": "owner",
												"nameLocation": "13120:5:2",
												"nodeType": "VariableDeclaration",
												"scope": 975,
												"src": "13112:13:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 945,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "13112:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 948,
												"mutability": "mutable",
												"name": "operator",
												"nameLocation": "13143:8:2",
												"nodeType": "VariableDeclaration",
												"scope": 975,
												"src": "13135:16:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 947,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "13135:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 950,
												"mutability": "mutable",
												"name": "approved",
												"nameLocation": "13166:8:2",
												"nodeType": "VariableDeclaration",
												"scope": 975,
												"src": "13161:13:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 949,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "13161:4:2",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "13102:78:2"
									},
									"returnParameters": {
										"id": 952,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "13198:0:2"
									},
									"scope": 1111,
									"src": "13075:307:2",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 988,
										"nodeType": "Block",
										"src": "13529:70:2",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"arguments": [
																{
																	"id": 983,
																	"name": "tokenId",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 978,
																	"src": "13555:7:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																],
																"id": 982,
																"name": "_exists",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 612,
																"src": "13547:7:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_internal_view$_t_uint256_$returns$_t_bool_$",
																	"typeString": "function (uint256) view returns (bool)"
																}
															},
															"id": 984,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "13547:16:2",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "4552433732313a20696e76616c696420746f6b656e204944",
															"id": 985,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "13565:26:2",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_b08d2b0fec7cc108ab049809a8beb42779d969a49299d0c317c907d9db22974f",
																"typeString": "literal_string \"ERC721: invalid token ID\""
															},
															"value": "ERC721: invalid token ID"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_b08d2b0fec7cc108ab049809a8beb42779d969a49299d0c317c907d9db22974f",
																"typeString": "literal_string \"ERC721: invalid token ID\""
															}
														],
														"id": 981,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "13539:7:2",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 986,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "13539:53:2",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 987,
												"nodeType": "ExpressionStatement",
												"src": "13539:53:2"
											}
										]
									},
									"documentation": {
										"id": 976,
										"nodeType": "StructuredDocumentation",
										"src": "13388:73:2",
										"text": " @dev Reverts if the `tokenId` has not been minted yet."
									},
									"id": 989,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_requireMinted",
									"nameLocation": "13475:14:2",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 979,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 978,
												"mutability": "mutable",
												"name": "tokenId",
												"nameLocation": "13498:7:2",
												"nodeType": "VariableDeclaration",
												"scope": 989,
												"src": "13490:15:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 977,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "13490:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "13489:17:2"
									},
									"returnParameters": {
										"id": 980,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "13529:0:2"
									},
									"scope": 1111,
									"src": "13466:133:2",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1050,
										"nodeType": "Block",
										"src": "14306:676:2",
										"statements": [
											{
												"condition": {
													"arguments": [],
													"expression": {
														"argumentTypes": [],
														"expression": {
															"id": 1003,
															"name": "to",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 994,
															"src": "14320:2:2",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"id": 1004,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "14323:10:2",
														"memberName": "isContract",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 1290,
														"src": "14320:13:2",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_view$_t_address_$returns$_t_bool_$attached_to$_t_address_$",
															"typeString": "function (address) view returns (bool)"
														}
													},
													"id": 1005,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "14320:15:2",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"falseBody": {
													"id": 1048,
													"nodeType": "Block",
													"src": "14940:36:2",
													"statements": [
														{
															"expression": {
																"hexValue": "74727565",
																"id": 1046,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "bool",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "14961:4:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																},
																"value": "true"
															},
															"functionReturnParameters": 1002,
															"id": 1047,
															"nodeType": "Return",
															"src": "14954:11:2"
														}
													]
												},
												"id": 1049,
												"nodeType": "IfStatement",
												"src": "14316:660:2",
												"trueBody": {
													"id": 1045,
													"nodeType": "Block",
													"src": "14337:597:2",
													"statements": [
														{
															"clauses": [
																{
																	"block": {
																		"id": 1025,
																		"nodeType": "Block",
																		"src": "14451:91:2",
																		"statements": [
																			{
																				"expression": {
																					"commonType": {
																						"typeIdentifier": "t_bytes4",
																						"typeString": "bytes4"
																					},
																					"id": 1023,
																					"isConstant": false,
																					"isLValue": false,
																					"isPure": false,
																					"lValueRequested": false,
																					"leftExpression": {
																						"id": 1019,
																						"name": "retval",
																						"nodeType": "Identifier",
																						"overloadedDeclarations": [],
																						"referencedDeclaration": 1017,
																						"src": "14476:6:2",
																						"typeDescriptions": {
																							"typeIdentifier": "t_bytes4",
																							"typeString": "bytes4"
																						}
																					},
																					"nodeType": "BinaryOperation",
																					"operator": "==",
																					"rightExpression": {
																						"expression": {
																							"expression": {
																								"id": 1020,
																								"name": "IERC721Receiver",
																								"nodeType": "Identifier",
																								"overloadedDeclarations": [],
																								"referencedDeclaration": 1245,
																								"src": "14486:15:2",
																								"typeDescriptions": {
																									"typeIdentifier": "t_type$_t_contract$_IERC721Receiver_$1245_$",
																									"typeString": "type(contract IERC721Receiver)"
																								}
																							},
																							"id": 1021,
																							"isConstant": false,
																							"isLValue": false,
																							"isPure": true,
																							"lValueRequested": false,
																							"memberLocation": "14502:16:2",
																							"memberName": "onERC721Received",
																							"nodeType": "MemberAccess",
																							"referencedDeclaration": 1244,
																							"src": "14486:32:2",
																							"typeDescriptions": {
																								"typeIdentifier": "t_function_declaration_nonpayable$_t_address_$_t_address_$_t_uint256_$_t_bytes_calldata_ptr_$returns$_t_bytes4_$",
																								"typeString": "function IERC721Receiver.onERC721Received(address,address,uint256,bytes calldata) returns (bytes4)"
																							}
																						},
																						"id": 1022,
																						"isConstant": false,
																						"isLValue": false,
																						"isPure": true,
																						"lValueRequested": false,
																						"memberLocation": "14519:8:2",
																						"memberName": "selector",
																						"nodeType": "MemberAccess",
																						"src": "14486:41:2",
																						"typeDescriptions": {
																							"typeIdentifier": "t_bytes4",
																							"typeString": "bytes4"
																						}
																					},
																					"src": "14476:51:2",
																					"typeDescriptions": {
																						"typeIdentifier": "t_bool",
																						"typeString": "bool"
																					}
																				},
																				"functionReturnParameters": 1002,
																				"id": 1024,
																				"nodeType": "Return",
																				"src": "14469:58:2"
																			}
																		]
																	},
																	"errorName": "",
																	"id": 1026,
																	"nodeType": "TryCatchClause",
																	"parameters": {
																		"id": 1018,
																		"nodeType": "ParameterList",
																		"parameters": [
																			{
																				"constant": false,
																				"id": 1017,
																				"mutability": "mutable",
																				"name": "retval",
																				"nameLocation": "14443:6:2",
																				"nodeType": "VariableDeclaration",
																				"scope": 1026,
																				"src": "14436:13:2",
																				"stateVariable": false,
																				"storageLocation": "default",
																				"typeDescriptions": {
																					"typeIdentifier": "t_bytes4",
																					"typeString": "bytes4"
																				},
																				"typeName": {
																					"id": 1016,
																					"name": "bytes4",
																					"nodeType": "ElementaryTypeName",
																					"src": "14436:6:2",
																					"typeDescriptions": {
																						"typeIdentifier": "t_bytes4",
																						"typeString": "bytes4"
																					}
																				},
																				"visibility": "internal"
																			}
																		],
																		"src": "14435:15:2"
																	},
																	"src": "14427:115:2"
																},
																{
																	"block": {
																		"id": 1042,
																		"nodeType": "Block",
																		"src": "14571:353:2",
																		"statements": [
																			{
																				"condition": {
																					"commonType": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					},
																					"id": 1033,
																					"isConstant": false,
																					"isLValue": false,
																					"isPure": false,
																					"lValueRequested": false,
																					"leftExpression": {
																						"expression": {
																							"id": 1030,
																							"name": "reason",
																							"nodeType": "Identifier",
																							"overloadedDeclarations": [],
																							"referencedDeclaration": 1028,
																							"src": "14593:6:2",
																							"typeDescriptions": {
																								"typeIdentifier": "t_bytes_memory_ptr",
																								"typeString": "bytes memory"
																							}
																						},
																						"id": 1031,
																						"isConstant": false,
																						"isLValue": false,
																						"isPure": false,
																						"lValueRequested": false,
																						"memberLocation": "14600:6:2",
																						"memberName": "length",
																						"nodeType": "MemberAccess",
																						"src": "14593:13:2",
																						"typeDescriptions": {
																							"typeIdentifier": "t_uint256",
																							"typeString": "uint256"
																						}
																					},
																					"nodeType": "BinaryOperation",
																					"operator": "==",
																					"rightExpression": {
																						"hexValue": "30",
																						"id": 1032,
																						"isConstant": false,
																						"isLValue": false,
																						"isPure": true,
																						"kind": "number",
																						"lValueRequested": false,
																						"nodeType": "Literal",
																						"src": "14610:1:2",
																						"typeDescriptions": {
																							"typeIdentifier": "t_rational_0_by_1",
																							"typeString": "int_const 0"
																						},
																						"value": "0"
																					},
																					"src": "14593:18:2",
																					"typeDescriptions": {
																						"typeIdentifier": "t_bool",
																						"typeString": "bool"
																					}
																				},
																				"falseBody": {
																					"id": 1040,
																					"nodeType": "Block",
																					"src": "14720:190:2",
																					"statements": [
																						{
																							"AST": {
																								"nativeSrc": "14806:86:2",
																								"nodeType": "YulBlock",
																								"src": "14806:86:2",
																								"statements": [
																									{
																										"expression": {
																											"arguments": [
																												{
																													"arguments": [
																														{
																															"kind": "number",
																															"nativeSrc": "14843:2:2",
																															"nodeType": "YulLiteral",
																															"src": "14843:2:2",
																															"type": "",
																															"value": "32"
																														},
																														{
																															"name": "reason",
																															"nativeSrc": "14847:6:2",
																															"nodeType": "YulIdentifier",
																															"src": "14847:6:2"
																														}
																													],
																													"functionName": {
																														"name": "add",
																														"nativeSrc": "14839:3:2",
																														"nodeType": "YulIdentifier",
																														"src": "14839:3:2"
																													},
																													"nativeSrc": "14839:15:2",
																													"nodeType": "YulFunctionCall",
																													"src": "14839:15:2"
																												},
																												{
																													"arguments": [
																														{
																															"name": "reason",
																															"nativeSrc": "14862:6:2",
																															"nodeType": "YulIdentifier",
																															"src": "14862:6:2"
																														}
																													],
																													"functionName": {
																														"name": "mload",
																														"nativeSrc": "14856:5:2",
																														"nodeType": "YulIdentifier",
																														"src": "14856:5:2"
																													},
																													"nativeSrc": "14856:13:2",
																													"nodeType": "YulFunctionCall",
																													"src": "14856:13:2"
																												}
																											],
																											"functionName": {
																												"name": "revert",
																												"nativeSrc": "14832:6:2",
																												"nodeType": "YulIdentifier",
																												"src": "14832:6:2"
																											},
																											"nativeSrc": "14832:38:2",
																											"nodeType": "YulFunctionCall",
																											"src": "14832:38:2"
																										},
																										"nativeSrc": "14832:38:2",
																										"nodeType": "YulExpressionStatement",
																										"src": "14832:38:2"
																									}
																								]
																							},
																							"documentation": "@solidity memory-safe-assembly",
																							"evmVersion": "shanghai",
																							"externalReferences": [
																								{
																									"declaration": 1028,
																									"isOffset": false,
																									"isSlot": false,
																									"src": "14847:6:2",
																									"valueSize": 1
																								},
																								{
																									"declaration": 1028,
																									"isOffset": false,
																									"isSlot": false,
																									"src": "14862:6:2",
																									"valueSize": 1
																								}
																							],
																							"id": 1039,
																							"nodeType": "InlineAssembly",
																							"src": "14797:95:2"
																						}
																					]
																				},
																				"id": 1041,
																				"nodeType": "IfStatement",
																				"src": "14589:321:2",
																				"trueBody": {
																					"id": 1038,
																					"nodeType": "Block",
																					"src": "14613:101:2",
																					"statements": [
																						{
																							"expression": {
																								"arguments": [
																									{
																										"hexValue": "4552433732313a207472616e7366657220746f206e6f6e20455243373231526563656976657220696d706c656d656e746572",
																										"id": 1035,
																										"isConstant": false,
																										"isLValue": false,
																										"isPure": true,
																										"kind": "string",
																										"lValueRequested": false,
																										"nodeType": "Literal",
																										"src": "14642:52:2",
																										"typeDescriptions": {
																											"typeIdentifier": "t_stringliteral_1e766a06da43a53d0f4c380e06e5a342e14d5af1bf8501996c844905530ca84e",
																											"typeString": "literal_string \"ERC721: transfer to non ERC721Receiver implementer\""
																										},
																										"value": "ERC721: transfer to non ERC721Receiver implementer"
																									}
																								],
																								"expression": {
																									"argumentTypes": [
																										{
																											"typeIdentifier": "t_stringliteral_1e766a06da43a53d0f4c380e06e5a342e14d5af1bf8501996c844905530ca84e",
																											"typeString": "literal_string \"ERC721: transfer to non ERC721Receiver implementer\""
																										}
																									],
																									"id": 1034,
																									"name": "revert",
																									"nodeType": "Identifier",
																									"overloadedDeclarations": [
																										4294967277,
																										4294967277
																									],
																									"referencedDeclaration": 4294967277,
																									"src": "14635:6:2",
																									"typeDescriptions": {
																										"typeIdentifier": "t_function_revert_pure$_t_string_memory_ptr_$returns$__$",
																										"typeString": "function (string memory) pure"
																									}
																								},
																								"id": 1036,
																								"isConstant": false,
																								"isLValue": false,
																								"isPure": false,
																								"kind": "functionCall",
																								"lValueRequested": false,
																								"nameLocations": [],
																								"names": [],
																								"nodeType": "FunctionCall",
																								"src": "14635:60:2",
																								"tryCall": false,
																								"typeDescriptions": {
																									"typeIdentifier": "t_tuple$__$",
																									"typeString": "tuple()"
																								}
																							},
																							"id": 1037,
																							"nodeType": "ExpressionStatement",
																							"src": "14635:60:2"
																						}
																					]
																				}
																			}
																		]
																	},
																	"errorName": "",
																	"id": 1043,
																	"nodeType": "TryCatchClause",
																	"parameters": {
																		"id": 1029,
																		"nodeType": "ParameterList",
																		"parameters": [
																			{
																				"constant": false,
																				"id": 1028,
																				"mutability": "mutable",
																				"name": "reason",
																				"nameLocation": "14563:6:2",
																				"nodeType": "VariableDeclaration",
																				"scope": 1043,
																				"src": "14550:19:2",
																				"stateVariable": false,
																				"storageLocation": "memory",
																				"typeDescriptions": {
																					"typeIdentifier": "t_bytes_memory_ptr",
																					"typeString": "bytes"
																				},
																				"typeName": {
																					"id": 1027,
																					"name": "bytes",
																					"nodeType": "ElementaryTypeName",
																					"src": "14550:5:2",
																					"typeDescriptions": {
																						"typeIdentifier": "t_bytes_storage_ptr",
																						"typeString": "bytes"
																					}
																				},
																				"visibility": "internal"
																			}
																		],
																		"src": "14549:21:2"
																	},
																	"src": "14543:381:2"
																}
															],
															"externalCall": {
																"arguments": [
																	{
																		"arguments": [],
																		"expression": {
																			"argumentTypes": [],
																			"id": 1010,
																			"name": "_msgSender",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1614,
																			"src": "14392:10:2",
																			"typeDescriptions": {
																				"typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
																				"typeString": "function () view returns (address)"
																			}
																		},
																		"id": 1011,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"kind": "functionCall",
																		"lValueRequested": false,
																		"nameLocations": [],
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "14392:12:2",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	},
																	{
																		"id": 1012,
																		"name": "from",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 992,
																		"src": "14406:4:2",
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	},
																	{
																		"id": 1013,
																		"name": "tokenId",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 996,
																		"src": "14412:7:2",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	{
																		"id": 1014,
																		"name": "data",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 998,
																		"src": "14421:4:2",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bytes_memory_ptr",
																			"typeString": "bytes memory"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		},
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		},
																		{
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		},
																		{
																			"typeIdentifier": "t_bytes_memory_ptr",
																			"typeString": "bytes memory"
																		}
																	],
																	"expression": {
																		"arguments": [
																			{
																				"id": 1007,
																				"name": "to",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 994,
																				"src": "14371:2:2",
																				"typeDescriptions": {
																					"typeIdentifier": "t_address",
																					"typeString": "address"
																				}
																			}
																		],
																		"expression": {
																			"argumentTypes": [
																				{
																					"typeIdentifier": "t_address",
																					"typeString": "address"
																				}
																			],
																			"id": 1006,
																			"name": "IERC721Receiver",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1245,
																			"src": "14355:15:2",
																			"typeDescriptions": {
																				"typeIdentifier": "t_type$_t_contract$_IERC721Receiver_$1245_$",
																				"typeString": "type(contract IERC721Receiver)"
																			}
																		},
																		"id": 1008,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"kind": "typeConversion",
																		"lValueRequested": false,
																		"nameLocations": [],
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "14355:19:2",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_contract$_IERC721Receiver_$1245",
																			"typeString": "contract IERC721Receiver"
																		}
																	},
																	"id": 1009,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"memberLocation": "14375:16:2",
																	"memberName": "onERC721Received",
																	"nodeType": "MemberAccess",
																	"referencedDeclaration": 1244,
																	"src": "14355:36:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_address_$_t_uint256_$_t_bytes_memory_ptr_$returns$_t_bytes4_$",
																		"typeString": "function (address,address,uint256,bytes memory) external returns (bytes4)"
																	}
																},
																"id": 1015,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "14355:71:2",
																"tryCall": true,
																"typeDescriptions": {
																	"typeIdentifier": "t_bytes4",
																	"typeString": "bytes4"
																}
															},
															"id": 1044,
															"nodeType": "TryStatement",
															"src": "14351:573:2"
														}
													]
												}
											}
										]
									},
									"documentation": {
										"id": 990,
										"nodeType": "StructuredDocumentation",
										"src": "13605:541:2",
										"text": " @dev Internal function to invoke {IERC721Receiver-onERC721Received} on a target address.\n The call is not executed if the target address is not a contract.\n @param from address representing the previous owner of the given token ID\n @param to target address that will receive the tokens\n @param tokenId uint256 ID of the token to be transferred\n @param data bytes optional data to send along with the call\n @return bool whether the call correctly returned the expected magic value"
									},
									"id": 1051,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_checkOnERC721Received",
									"nameLocation": "14160:22:2",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 999,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 992,
												"mutability": "mutable",
												"name": "from",
												"nameLocation": "14200:4:2",
												"nodeType": "VariableDeclaration",
												"scope": 1051,
												"src": "14192:12:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 991,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "14192:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 994,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "14222:2:2",
												"nodeType": "VariableDeclaration",
												"scope": 1051,
												"src": "14214:10:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 993,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "14214:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 996,
												"mutability": "mutable",
												"name": "tokenId",
												"nameLocation": "14242:7:2",
												"nodeType": "VariableDeclaration",
												"scope": 1051,
												"src": "14234:15:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 995,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "14234:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 998,
												"mutability": "mutable",
												"name": "data",
												"nameLocation": "14272:4:2",
												"nodeType": "VariableDeclaration",
												"scope": 1051,
												"src": "14259:17:2",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 997,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "14259:5:2",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "14182:100:2"
									},
									"returnParameters": {
										"id": 1002,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1001,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1051,
												"src": "14300:4:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 1000,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "14300:4:2",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "14299:6:2"
									},
									"scope": 1111,
									"src": "14151:831:2",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "private"
								},
								{
									"body": {
										"id": 1096,
										"nodeType": "Block",
										"src": "15856:238:2",
										"statements": [
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 1065,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 1063,
														"name": "batchSize",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1060,
														"src": "15870:9:2",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": ">",
													"rightExpression": {
														"hexValue": "31",
														"id": 1064,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "15882:1:2",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_1_by_1",
															"typeString": "int_const 1"
														},
														"value": "1"
													},
													"src": "15870:13:2",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 1095,
												"nodeType": "IfStatement",
												"src": "15866:222:2",
												"trueBody": {
													"id": 1094,
													"nodeType": "Block",
													"src": "15885:203:2",
													"statements": [
														{
															"condition": {
																"commonType": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																},
																"id": 1071,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"id": 1066,
																	"name": "from",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1054,
																	"src": "15903:4:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": "!=",
																"rightExpression": {
																	"arguments": [
																		{
																			"hexValue": "30",
																			"id": 1069,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "15919:1:2",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_0_by_1",
																				"typeString": "int_const 0"
																			},
																			"value": "0"
																		}
																	],
																	"expression": {
																		"argumentTypes": [
																			{
																				"typeIdentifier": "t_rational_0_by_1",
																				"typeString": "int_const 0"
																			}
																		],
																		"id": 1068,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"lValueRequested": false,
																		"nodeType": "ElementaryTypeNameExpression",
																		"src": "15911:7:2",
																		"typeDescriptions": {
																			"typeIdentifier": "t_type$_t_address_$",
																			"typeString": "type(address)"
																		},
																		"typeName": {
																			"id": 1067,
																			"name": "address",
																			"nodeType": "ElementaryTypeName",
																			"src": "15911:7:2",
																			"typeDescriptions": {}
																		}
																	},
																	"id": 1070,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "typeConversion",
																	"lValueRequested": false,
																	"nameLocations": [],
																	"names": [],
																	"nodeType": "FunctionCall",
																	"src": "15911:10:2",
																	"tryCall": false,
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																"src": "15903:18:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																}
															},
															"id": 1079,
															"nodeType": "IfStatement",
															"src": "15899:85:2",
															"trueBody": {
																"id": 1078,
																"nodeType": "Block",
																"src": "15923:61:2",
																"statements": [
																	{
																		"expression": {
																			"id": 1076,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"leftHandSide": {
																				"baseExpression": {
																					"id": 1072,
																					"name": "_balances",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 202,
																					"src": "15941:9:2",
																					"typeDescriptions": {
																						"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
																						"typeString": "mapping(address => uint256)"
																					}
																				},
																				"id": 1074,
																				"indexExpression": {
																					"id": 1073,
																					"name": "from",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 1054,
																					"src": "15951:4:2",
																					"typeDescriptions": {
																						"typeIdentifier": "t_address",
																						"typeString": "address"
																					}
																				},
																				"isConstant": false,
																				"isLValue": true,
																				"isPure": false,
																				"lValueRequested": true,
																				"nodeType": "IndexAccess",
																				"src": "15941:15:2",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"nodeType": "Assignment",
																			"operator": "-=",
																			"rightHandSide": {
																				"id": 1075,
																				"name": "batchSize",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 1060,
																				"src": "15960:9:2",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"src": "15941:28:2",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"id": 1077,
																		"nodeType": "ExpressionStatement",
																		"src": "15941:28:2"
																	}
																]
															}
														},
														{
															"condition": {
																"commonType": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																},
																"id": 1085,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"id": 1080,
																	"name": "to",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1056,
																	"src": "16001:2:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": "!=",
																"rightExpression": {
																	"arguments": [
																		{
																			"hexValue": "30",
																			"id": 1083,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "16015:1:2",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_0_by_1",
																				"typeString": "int_const 0"
																			},
																			"value": "0"
																		}
																	],
																	"expression": {
																		"argumentTypes": [
																			{
																				"typeIdentifier": "t_rational_0_by_1",
																				"typeString": "int_const 0"
																			}
																		],
																		"id": 1082,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"lValueRequested": false,
																		"nodeType": "ElementaryTypeNameExpression",
																		"src": "16007:7:2",
																		"typeDescriptions": {
																			"typeIdentifier": "t_type$_t_address_$",
																			"typeString": "type(address)"
																		},
																		"typeName": {
																			"id": 1081,
																			"name": "address",
																			"nodeType": "ElementaryTypeName",
																			"src": "16007:7:2",
																			"typeDescriptions": {}
																		}
																	},
																	"id": 1084,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "typeConversion",
																	"lValueRequested": false,
																	"nameLocations": [],
																	"names": [],
																	"nodeType": "FunctionCall",
																	"src": "16007:10:2",
																	"tryCall": false,
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																"src": "16001:16:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																}
															},
															"id": 1093,
															"nodeType": "IfStatement",
															"src": "15997:81:2",
															"trueBody": {
																"id": 1092,
																"nodeType": "Block",
																"src": "16019:59:2",
																"statements": [
																	{
																		"expression": {
																			"id": 1090,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"leftHandSide": {
																				"baseExpression": {
																					"id": 1086,
																					"name": "_balances",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 202,
																					"src": "16037:9:2",
																					"typeDescriptions": {
																						"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
																						"typeString": "mapping(address => uint256)"
																					}
																				},
																				"id": 1088,
																				"indexExpression": {
																					"id": 1087,
																					"name": "to",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 1056,
																					"src": "16047:2:2",
																					"typeDescriptions": {
																						"typeIdentifier": "t_address",
																						"typeString": "address"
																					}
																				},
																				"isConstant": false,
																				"isLValue": true,
																				"isPure": false,
																				"lValueRequested": true,
																				"nodeType": "IndexAccess",
																				"src": "16037:13:2",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"nodeType": "Assignment",
																			"operator": "+=",
																			"rightHandSide": {
																				"id": 1089,
																				"name": "batchSize",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 1060,
																				"src": "16054:9:2",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"src": "16037:26:2",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"id": 1091,
																		"nodeType": "ExpressionStatement",
																		"src": "16037:26:2"
																	}
																]
															}
														}
													]
												}
											}
										]
									},
									"documentation": {
										"id": 1052,
										"nodeType": "StructuredDocumentation",
										"src": "14988:705:2",
										"text": " @dev Hook that is called before any token transfer. This includes minting and burning. If {ERC721Consecutive} is\n used, the hook may be called as part of a consecutive (batch) mint, as indicated by `batchSize` greater than 1.\n Calling conditions:\n - When `from` and `to` are both non-zero, ``from``'s tokens will be transferred to `to`.\n - When `from` is zero, the tokens will be minted for `to`.\n - When `to` is zero, ``from``'s tokens will be burned.\n - `from` and `to` are never both zero.\n - `batchSize` is non-zero.\n To learn more about hooks, head to xref:ROOT:extending-contracts.adoc#using-hooks[Using Hooks]."
									},
									"id": 1097,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_beforeTokenTransfer",
									"nameLocation": "15707:20:2",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1061,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1054,
												"mutability": "mutable",
												"name": "from",
												"nameLocation": "15745:4:2",
												"nodeType": "VariableDeclaration",
												"scope": 1097,
												"src": "15737:12:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1053,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "15737:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1056,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "15767:2:2",
												"nodeType": "VariableDeclaration",
												"scope": 1097,
												"src": "15759:10:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1055,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "15759:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1058,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1097,
												"src": "15779:7:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1057,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "15779:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1060,
												"mutability": "mutable",
												"name": "batchSize",
												"nameLocation": "15823:9:2",
												"nodeType": "VariableDeclaration",
												"scope": 1097,
												"src": "15815:17:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1059,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "15815:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "15727:111:2"
									},
									"returnParameters": {
										"id": 1062,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "15856:0:2"
									},
									"scope": 1111,
									"src": "15698:396:2",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1109,
										"nodeType": "Block",
										"src": "16951:2:2",
										"statements": []
									},
									"documentation": {
										"id": 1098,
										"nodeType": "StructuredDocumentation",
										"src": "16100:695:2",
										"text": " @dev Hook that is called after any token transfer. This includes minting and burning. If {ERC721Consecutive} is\n used, the hook may be called as part of a consecutive (batch) mint, as indicated by `batchSize` greater than 1.\n Calling conditions:\n - When `from` and `to` are both non-zero, ``from``'s tokens were transferred to `to`.\n - When `from` is zero, the tokens were minted for `to`.\n - When `to` is zero, ``from``'s tokens were burned.\n - `from` and `to` are never both zero.\n - `batchSize` is non-zero.\n To learn more about hooks, head to xref:ROOT:extending-contracts.adoc#using-hooks[Using Hooks]."
									},
									"id": 1110,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_afterTokenTransfer",
									"nameLocation": "16809:19:2",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1107,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1100,
												"mutability": "mutable",
												"name": "from",
												"nameLocation": "16846:4:2",
												"nodeType": "VariableDeclaration",
												"scope": 1110,
												"src": "16838:12:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1099,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "16838:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1102,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "16868:2:2",
												"nodeType": "VariableDeclaration",
												"scope": 1110,
												"src": "16860:10:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1101,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "16860:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1104,
												"mutability": "mutable",
												"name": "firstTokenId",
												"nameLocation": "16888:12:2",
												"nodeType": "VariableDeclaration",
												"scope": 1110,
												"src": "16880:20:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1103,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "16880:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1106,
												"mutability": "mutable",
												"name": "batchSize",
												"nameLocation": "16918:9:2",
												"nodeType": "VariableDeclaration",
												"scope": 1110,
												"src": "16910:17:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1105,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "16910:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "16828:105:2"
									},
									"returnParameters": {
										"id": 1108,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "16951:0:2"
									},
									"scope": 1111,
									"src": "16800:153:2",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "internal"
								}
							],
							"scope": 1112,
							"src": "628:16327:2",
							"usedErrors": [],
							"usedEvents": [
								1126,
								1135,
								1144
							]
						}
					],
					"src": "107:16849:2"
				},
				"id": 2
			},
			"@openzeppelin/contracts/token/ERC721/IERC721.sol": {
				"ast": {
					"absolutePath": "@openzeppelin/contracts/token/ERC721/IERC721.sol",
					"exportedSymbols": {
						"IERC165": [
							1909
						],
						"IERC721": [
							1227
						]
					},
					"id": 1228,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 1113,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".0"
							],
							"nodeType": "PragmaDirective",
							"src": "108:23:3"
						},
						{
							"absolutePath": "@openzeppelin/contracts/utils/introspection/IERC165.sol",
							"file": "../../utils/introspection/IERC165.sol",
							"id": 1114,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 1228,
							"sourceUnit": 1910,
							"src": "133:47:3",
							"symbolAliases": [],
							"unitAlias": ""
						},
						{
							"abstract": false,
							"baseContracts": [
								{
									"baseName": {
										"id": 1116,
										"name": "IERC165",
										"nameLocations": [
											"271:7:3"
										],
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 1909,
										"src": "271:7:3"
									},
									"id": 1117,
									"nodeType": "InheritanceSpecifier",
									"src": "271:7:3"
								}
							],
							"canonicalName": "IERC721",
							"contractDependencies": [],
							"contractKind": "interface",
							"documentation": {
								"id": 1115,
								"nodeType": "StructuredDocumentation",
								"src": "182:67:3",
								"text": " @dev Required interface of an ERC721 compliant contract."
							},
							"fullyImplemented": false,
							"id": 1227,
							"linearizedBaseContracts": [
								1227,
								1909
							],
							"name": "IERC721",
							"nameLocation": "260:7:3",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"anonymous": false,
									"documentation": {
										"id": 1118,
										"nodeType": "StructuredDocumentation",
										"src": "285:88:3",
										"text": " @dev Emitted when `tokenId` token is transferred from `from` to `to`."
									},
									"eventSelector": "ddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef",
									"id": 1126,
									"name": "Transfer",
									"nameLocation": "384:8:3",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 1125,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1120,
												"indexed": true,
												"mutability": "mutable",
												"name": "from",
												"nameLocation": "409:4:3",
												"nodeType": "VariableDeclaration",
												"scope": 1126,
												"src": "393:20:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1119,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "393:7:3",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1122,
												"indexed": true,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "431:2:3",
												"nodeType": "VariableDeclaration",
												"scope": 1126,
												"src": "415:18:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1121,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "415:7:3",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1124,
												"indexed": true,
												"mutability": "mutable",
												"name": "tokenId",
												"nameLocation": "451:7:3",
												"nodeType": "VariableDeclaration",
												"scope": 1126,
												"src": "435:23:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1123,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "435:7:3",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "392:67:3"
									},
									"src": "378:82:3"
								},
								{
									"anonymous": false,
									"documentation": {
										"id": 1127,
										"nodeType": "StructuredDocumentation",
										"src": "466:94:3",
										"text": " @dev Emitted when `owner` enables `approved` to manage the `tokenId` token."
									},
									"eventSelector": "8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b925",
									"id": 1135,
									"name": "Approval",
									"nameLocation": "571:8:3",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 1134,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1129,
												"indexed": true,
												"mutability": "mutable",
												"name": "owner",
												"nameLocation": "596:5:3",
												"nodeType": "VariableDeclaration",
												"scope": 1135,
												"src": "580:21:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1128,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "580:7:3",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1131,
												"indexed": true,
												"mutability": "mutable",
												"name": "approved",
												"nameLocation": "619:8:3",
												"nodeType": "VariableDeclaration",
												"scope": 1135,
												"src": "603:24:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1130,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "603:7:3",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1133,
												"indexed": true,
												"mutability": "mutable",
												"name": "tokenId",
												"nameLocation": "645:7:3",
												"nodeType": "VariableDeclaration",
												"scope": 1135,
												"src": "629:23:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1132,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "629:7:3",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "579:74:3"
									},
									"src": "565:89:3"
								},
								{
									"anonymous": false,
									"documentation": {
										"id": 1136,
										"nodeType": "StructuredDocumentation",
										"src": "660:117:3",
										"text": " @dev Emitted when `owner` enables or disables (`approved`) `operator` to manage all of its assets."
									},
									"eventSelector": "17307eab39ab6107e8899845ad3d59bd9653f200f220920489ca2b5937696c31",
									"id": 1144,
									"name": "ApprovalForAll",
									"nameLocation": "788:14:3",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 1143,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1138,
												"indexed": true,
												"mutability": "mutable",
												"name": "owner",
												"nameLocation": "819:5:3",
												"nodeType": "VariableDeclaration",
												"scope": 1144,
												"src": "803:21:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1137,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "803:7:3",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1140,
												"indexed": true,
												"mutability": "mutable",
												"name": "operator",
												"nameLocation": "842:8:3",
												"nodeType": "VariableDeclaration",
												"scope": 1144,
												"src": "826:24:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1139,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "826:7:3",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1142,
												"indexed": false,
												"mutability": "mutable",
												"name": "approved",
												"nameLocation": "857:8:3",
												"nodeType": "VariableDeclaration",
												"scope": 1144,
												"src": "852:13:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 1141,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "852:4:3",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "802:64:3"
									},
									"src": "782:85:3"
								},
								{
									"documentation": {
										"id": 1145,
										"nodeType": "StructuredDocumentation",
										"src": "873:76:3",
										"text": " @dev Returns the number of tokens in ``owner``'s account."
									},
									"functionSelector": "70a08231",
									"id": 1152,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "balanceOf",
									"nameLocation": "963:9:3",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1148,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1147,
												"mutability": "mutable",
												"name": "owner",
												"nameLocation": "981:5:3",
												"nodeType": "VariableDeclaration",
												"scope": 1152,
												"src": "973:13:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1146,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "973:7:3",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "972:15:3"
									},
									"returnParameters": {
										"id": 1151,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1150,
												"mutability": "mutable",
												"name": "balance",
												"nameLocation": "1019:7:3",
												"nodeType": "VariableDeclaration",
												"scope": 1152,
												"src": "1011:15:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1149,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1011:7:3",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1010:17:3"
									},
									"scope": 1227,
									"src": "954:74:3",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 1153,
										"nodeType": "StructuredDocumentation",
										"src": "1034:131:3",
										"text": " @dev Returns the owner of the `tokenId` token.\n Requirements:\n - `tokenId` must exist."
									},
									"functionSelector": "6352211e",
									"id": 1160,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "ownerOf",
									"nameLocation": "1179:7:3",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1156,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1155,
												"mutability": "mutable",
												"name": "tokenId",
												"nameLocation": "1195:7:3",
												"nodeType": "VariableDeclaration",
												"scope": 1160,
												"src": "1187:15:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1154,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1187:7:3",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1186:17:3"
									},
									"returnParameters": {
										"id": 1159,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1158,
												"mutability": "mutable",
												"name": "owner",
												"nameLocation": "1235:5:3",
												"nodeType": "VariableDeclaration",
												"scope": 1160,
												"src": "1227:13:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1157,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1227:7:3",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1226:15:3"
									},
									"scope": 1227,
									"src": "1170:72:3",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 1161,
										"nodeType": "StructuredDocumentation",
										"src": "1248:556:3",
										"text": " @dev Safely transfers `tokenId` token from `from` to `to`.\n Requirements:\n - `from` cannot be the zero address.\n - `to` cannot be the zero address.\n - `tokenId` token must exist and be owned by `from`.\n - If the caller is not `from`, it must be approved to move this token by either {approve} or {setApprovalForAll}.\n - If `to` refers to a smart contract, it must implement {IERC721Receiver-onERC721Received}, which is called upon a safe transfer.\n Emits a {Transfer} event."
									},
									"functionSelector": "b88d4fde",
									"id": 1172,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "safeTransferFrom",
									"nameLocation": "1818:16:3",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1170,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1163,
												"mutability": "mutable",
												"name": "from",
												"nameLocation": "1852:4:3",
												"nodeType": "VariableDeclaration",
												"scope": 1172,
												"src": "1844:12:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1162,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1844:7:3",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1165,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "1874:2:3",
												"nodeType": "VariableDeclaration",
												"scope": 1172,
												"src": "1866:10:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1164,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1866:7:3",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1167,
												"mutability": "mutable",
												"name": "tokenId",
												"nameLocation": "1894:7:3",
												"nodeType": "VariableDeclaration",
												"scope": 1172,
												"src": "1886:15:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1166,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1886:7:3",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1169,
												"mutability": "mutable",
												"name": "data",
												"nameLocation": "1926:4:3",
												"nodeType": "VariableDeclaration",
												"scope": 1172,
												"src": "1911:19:3",
												"stateVariable": false,
												"storageLocation": "calldata",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_calldata_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 1168,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "1911:5:3",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1834:102:3"
									},
									"returnParameters": {
										"id": 1171,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1945:0:3"
									},
									"scope": 1227,
									"src": "1809:137:3",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 1173,
										"nodeType": "StructuredDocumentation",
										"src": "1952:687:3",
										"text": " @dev Safely transfers `tokenId` token from `from` to `to`, checking first that contract recipients\n are aware of the ERC721 protocol to prevent tokens from being forever locked.\n Requirements:\n - `from` cannot be the zero address.\n - `to` cannot be the zero address.\n - `tokenId` token must exist and be owned by `from`.\n - If the caller is not `from`, it must have been allowed to move this token by either {approve} or {setApprovalForAll}.\n - If `to` refers to a smart contract, it must implement {IERC721Receiver-onERC721Received}, which is called upon a safe transfer.\n Emits a {Transfer} event."
									},
									"functionSelector": "42842e0e",
									"id": 1182,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "safeTransferFrom",
									"nameLocation": "2653:16:3",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1180,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1175,
												"mutability": "mutable",
												"name": "from",
												"nameLocation": "2687:4:3",
												"nodeType": "VariableDeclaration",
												"scope": 1182,
												"src": "2679:12:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1174,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2679:7:3",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1177,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "2709:2:3",
												"nodeType": "VariableDeclaration",
												"scope": 1182,
												"src": "2701:10:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1176,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2701:7:3",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1179,
												"mutability": "mutable",
												"name": "tokenId",
												"nameLocation": "2729:7:3",
												"nodeType": "VariableDeclaration",
												"scope": 1182,
												"src": "2721:15:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1178,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2721:7:3",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2669:73:3"
									},
									"returnParameters": {
										"id": 1181,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2751:0:3"
									},
									"scope": 1227,
									"src": "2644:108:3",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 1183,
										"nodeType": "StructuredDocumentation",
										"src": "2758:732:3",
										"text": " @dev Transfers `tokenId` token from `from` to `to`.\n WARNING: Note that the caller is responsible to confirm that the recipient is capable of receiving ERC721\n or else they may be permanently lost. Usage of {safeTransferFrom} prevents loss, though the caller must\n understand this adds an external call which potentially creates a reentrancy vulnerability.\n Requirements:\n - `from` cannot be the zero address.\n - `to` cannot be the zero address.\n - `tokenId` token must be owned by `from`.\n - If the caller is not `from`, it must be approved to move this token by either {approve} or {setApprovalForAll}.\n Emits a {Transfer} event."
									},
									"functionSelector": "23b872dd",
									"id": 1192,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "transferFrom",
									"nameLocation": "3504:12:3",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1190,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1185,
												"mutability": "mutable",
												"name": "from",
												"nameLocation": "3534:4:3",
												"nodeType": "VariableDeclaration",
												"scope": 1192,
												"src": "3526:12:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1184,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "3526:7:3",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1187,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "3556:2:3",
												"nodeType": "VariableDeclaration",
												"scope": 1192,
												"src": "3548:10:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1186,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "3548:7:3",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1189,
												"mutability": "mutable",
												"name": "tokenId",
												"nameLocation": "3576:7:3",
												"nodeType": "VariableDeclaration",
												"scope": 1192,
												"src": "3568:15:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1188,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3568:7:3",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3516:73:3"
									},
									"returnParameters": {
										"id": 1191,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "3598:0:3"
									},
									"scope": 1227,
									"src": "3495:104:3",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 1193,
										"nodeType": "StructuredDocumentation",
										"src": "3605:452:3",
										"text": " @dev Gives permission to `to` to transfer `tokenId` token to another account.\n The approval is cleared when the token is transferred.\n Only a single account can be approved at a time, so approving the zero address clears previous approvals.\n Requirements:\n - The caller must own the token or be an approved operator.\n - `tokenId` must exist.\n Emits an {Approval} event."
									},
									"functionSelector": "095ea7b3",
									"id": 1200,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "approve",
									"nameLocation": "4071:7:3",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1198,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1195,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "4087:2:3",
												"nodeType": "VariableDeclaration",
												"scope": 1200,
												"src": "4079:10:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1194,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "4079:7:3",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1197,
												"mutability": "mutable",
												"name": "tokenId",
												"nameLocation": "4099:7:3",
												"nodeType": "VariableDeclaration",
												"scope": 1200,
												"src": "4091:15:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1196,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "4091:7:3",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4078:29:3"
									},
									"returnParameters": {
										"id": 1199,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "4116:0:3"
									},
									"scope": 1227,
									"src": "4062:55:3",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 1201,
										"nodeType": "StructuredDocumentation",
										"src": "4123:309:3",
										"text": " @dev Approve or remove `operator` as an operator for the caller.\n Operators can call {transferFrom} or {safeTransferFrom} for any token owned by the caller.\n Requirements:\n - The `operator` cannot be the caller.\n Emits an {ApprovalForAll} event."
									},
									"functionSelector": "a22cb465",
									"id": 1208,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "setApprovalForAll",
									"nameLocation": "4446:17:3",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1206,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1203,
												"mutability": "mutable",
												"name": "operator",
												"nameLocation": "4472:8:3",
												"nodeType": "VariableDeclaration",
												"scope": 1208,
												"src": "4464:16:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1202,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "4464:7:3",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1205,
												"mutability": "mutable",
												"name": "_approved",
												"nameLocation": "4487:9:3",
												"nodeType": "VariableDeclaration",
												"scope": 1208,
												"src": "4482:14:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 1204,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "4482:4:3",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4463:34:3"
									},
									"returnParameters": {
										"id": 1207,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "4506:0:3"
									},
									"scope": 1227,
									"src": "4437:70:3",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 1209,
										"nodeType": "StructuredDocumentation",
										"src": "4513:139:3",
										"text": " @dev Returns the account approved for `tokenId` token.\n Requirements:\n - `tokenId` must exist."
									},
									"functionSelector": "081812fc",
									"id": 1216,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "getApproved",
									"nameLocation": "4666:11:3",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1212,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1211,
												"mutability": "mutable",
												"name": "tokenId",
												"nameLocation": "4686:7:3",
												"nodeType": "VariableDeclaration",
												"scope": 1216,
												"src": "4678:15:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1210,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "4678:7:3",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4677:17:3"
									},
									"returnParameters": {
										"id": 1215,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1214,
												"mutability": "mutable",
												"name": "operator",
												"nameLocation": "4726:8:3",
												"nodeType": "VariableDeclaration",
												"scope": 1216,
												"src": "4718:16:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1213,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "4718:7:3",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4717:18:3"
									},
									"scope": 1227,
									"src": "4657:79:3",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 1217,
										"nodeType": "StructuredDocumentation",
										"src": "4742:138:3",
										"text": " @dev Returns if the `operator` is allowed to manage all of the assets of `owner`.\n See {setApprovalForAll}"
									},
									"functionSelector": "e985e9c5",
									"id": 1226,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "isApprovedForAll",
									"nameLocation": "4894:16:3",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1222,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1219,
												"mutability": "mutable",
												"name": "owner",
												"nameLocation": "4919:5:3",
												"nodeType": "VariableDeclaration",
												"scope": 1226,
												"src": "4911:13:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1218,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "4911:7:3",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1221,
												"mutability": "mutable",
												"name": "operator",
												"nameLocation": "4934:8:3",
												"nodeType": "VariableDeclaration",
												"scope": 1226,
												"src": "4926:16:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1220,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "4926:7:3",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4910:33:3"
									},
									"returnParameters": {
										"id": 1225,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1224,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1226,
												"src": "4967:4:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 1223,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "4967:4:3",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4966:6:3"
									},
									"scope": 1227,
									"src": "4885:88:3",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								}
							],
							"scope": 1228,
							"src": "250:4725:3",
							"usedErrors": [],
							"usedEvents": [
								1126,
								1135,
								1144
							]
						}
					],
					"src": "108:4868:3"
				},
				"id": 3
			},
			"@openzeppelin/contracts/token/ERC721/IERC721Receiver.sol": {
				"ast": {
					"absolutePath": "@openzeppelin/contracts/token/ERC721/IERC721Receiver.sol",
					"exportedSymbols": {
						"IERC721Receiver": [
							1245
						]
					},
					"id": 1246,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 1229,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".0"
							],
							"nodeType": "PragmaDirective",
							"src": "116:23:4"
						},
						{
							"abstract": false,
							"baseContracts": [],
							"canonicalName": "IERC721Receiver",
							"contractDependencies": [],
							"contractKind": "interface",
							"documentation": {
								"id": 1230,
								"nodeType": "StructuredDocumentation",
								"src": "141:152:4",
								"text": " @title ERC721 token receiver interface\n @dev Interface for any contract that wants to support safeTransfers\n from ERC721 asset contracts."
							},
							"fullyImplemented": false,
							"id": 1245,
							"linearizedBaseContracts": [
								1245
							],
							"name": "IERC721Receiver",
							"nameLocation": "304:15:4",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"documentation": {
										"id": 1231,
										"nodeType": "StructuredDocumentation",
										"src": "326:493:4",
										"text": " @dev Whenever an {IERC721} `tokenId` token is transferred to this contract via {IERC721-safeTransferFrom}\n by `operator` from `from`, this function is called.\n It must return its Solidity selector to confirm the token transfer.\n If any other value is returned or the interface is not implemented by the recipient, the transfer will be reverted.\n The selector can be obtained in Solidity with `IERC721Receiver.onERC721Received.selector`."
									},
									"functionSelector": "150b7a02",
									"id": 1244,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "onERC721Received",
									"nameLocation": "833:16:4",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1240,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1233,
												"mutability": "mutable",
												"name": "operator",
												"nameLocation": "867:8:4",
												"nodeType": "VariableDeclaration",
												"scope": 1244,
												"src": "859:16:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1232,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "859:7:4",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1235,
												"mutability": "mutable",
												"name": "from",
												"nameLocation": "893:4:4",
												"nodeType": "VariableDeclaration",
												"scope": 1244,
												"src": "885:12:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1234,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "885:7:4",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1237,
												"mutability": "mutable",
												"name": "tokenId",
												"nameLocation": "915:7:4",
												"nodeType": "VariableDeclaration",
												"scope": 1244,
												"src": "907:15:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1236,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "907:7:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1239,
												"mutability": "mutable",
												"name": "data",
												"nameLocation": "947:4:4",
												"nodeType": "VariableDeclaration",
												"scope": 1244,
												"src": "932:19:4",
												"stateVariable": false,
												"storageLocation": "calldata",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_calldata_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 1238,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "932:5:4",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "849:108:4"
									},
									"returnParameters": {
										"id": 1243,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1242,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1244,
												"src": "976:6:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes4",
													"typeString": "bytes4"
												},
												"typeName": {
													"id": 1241,
													"name": "bytes4",
													"nodeType": "ElementaryTypeName",
													"src": "976:6:4",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes4",
														"typeString": "bytes4"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "975:8:4"
									},
									"scope": 1245,
									"src": "824:160:4",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								}
							],
							"scope": 1246,
							"src": "294:692:4",
							"usedErrors": [],
							"usedEvents": []
						}
					],
					"src": "116:871:4"
				},
				"id": 4
			},
			"@openzeppelin/contracts/token/ERC721/extensions/IERC721Metadata.sol": {
				"ast": {
					"absolutePath": "@openzeppelin/contracts/token/ERC721/extensions/IERC721Metadata.sol",
					"exportedSymbols": {
						"IERC165": [
							1909
						],
						"IERC721": [
							1227
						],
						"IERC721Metadata": [
							1272
						]
					},
					"id": 1273,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 1247,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".0"
							],
							"nodeType": "PragmaDirective",
							"src": "112:23:5"
						},
						{
							"absolutePath": "@openzeppelin/contracts/token/ERC721/IERC721.sol",
							"file": "../IERC721.sol",
							"id": 1248,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 1273,
							"sourceUnit": 1228,
							"src": "137:24:5",
							"symbolAliases": [],
							"unitAlias": ""
						},
						{
							"abstract": false,
							"baseContracts": [
								{
									"baseName": {
										"id": 1250,
										"name": "IERC721",
										"nameLocations": [
											"326:7:5"
										],
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 1227,
										"src": "326:7:5"
									},
									"id": 1251,
									"nodeType": "InheritanceSpecifier",
									"src": "326:7:5"
								}
							],
							"canonicalName": "IERC721Metadata",
							"contractDependencies": [],
							"contractKind": "interface",
							"documentation": {
								"id": 1249,
								"nodeType": "StructuredDocumentation",
								"src": "163:133:5",
								"text": " @title ERC-721 Non-Fungible Token Standard, optional metadata extension\n @dev See https://eips.ethereum.org/EIPS/eip-721"
							},
							"fullyImplemented": false,
							"id": 1272,
							"linearizedBaseContracts": [
								1272,
								1227,
								1909
							],
							"name": "IERC721Metadata",
							"nameLocation": "307:15:5",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"documentation": {
										"id": 1252,
										"nodeType": "StructuredDocumentation",
										"src": "340:58:5",
										"text": " @dev Returns the token collection name."
									},
									"functionSelector": "06fdde03",
									"id": 1257,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "name",
									"nameLocation": "412:4:5",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1253,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "416:2:5"
									},
									"returnParameters": {
										"id": 1256,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1255,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1257,
												"src": "442:13:5",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 1254,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "442:6:5",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "441:15:5"
									},
									"scope": 1272,
									"src": "403:54:5",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 1258,
										"nodeType": "StructuredDocumentation",
										"src": "463:60:5",
										"text": " @dev Returns the token collection symbol."
									},
									"functionSelector": "95d89b41",
									"id": 1263,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "symbol",
									"nameLocation": "537:6:5",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1259,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "543:2:5"
									},
									"returnParameters": {
										"id": 1262,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1261,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1263,
												"src": "569:13:5",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 1260,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "569:6:5",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "568:15:5"
									},
									"scope": 1272,
									"src": "528:56:5",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 1264,
										"nodeType": "StructuredDocumentation",
										"src": "590:90:5",
										"text": " @dev Returns the Uniform Resource Identifier (URI) for `tokenId` token."
									},
									"functionSelector": "c87b56dd",
									"id": 1271,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "tokenURI",
									"nameLocation": "694:8:5",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1267,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1266,
												"mutability": "mutable",
												"name": "tokenId",
												"nameLocation": "711:7:5",
												"nodeType": "VariableDeclaration",
												"scope": 1271,
												"src": "703:15:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1265,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "703:7:5",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "702:17:5"
									},
									"returnParameters": {
										"id": 1270,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1269,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1271,
												"src": "743:13:5",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 1268,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "743:6:5",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "742:15:5"
									},
									"scope": 1272,
									"src": "685:73:5",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								}
							],
							"scope": 1273,
							"src": "297:463:5",
							"usedErrors": [],
							"usedEvents": [
								1126,
								1135,
								1144
							]
						}
					],
					"src": "112:649:5"
				},
				"id": 5
			},
			"@openzeppelin/contracts/utils/Address.sol": {
				"ast": {
					"absolutePath": "@openzeppelin/contracts/utils/Address.sol",
					"exportedSymbols": {
						"Address": [
							1602
						]
					},
					"id": 1603,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 1274,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".1"
							],
							"nodeType": "PragmaDirective",
							"src": "101:23:6"
						},
						{
							"abstract": false,
							"baseContracts": [],
							"canonicalName": "Address",
							"contractDependencies": [],
							"contractKind": "library",
							"documentation": {
								"id": 1275,
								"nodeType": "StructuredDocumentation",
								"src": "126:67:6",
								"text": " @dev Collection of functions related to the address type"
							},
							"fullyImplemented": true,
							"id": 1602,
							"linearizedBaseContracts": [
								1602
							],
							"name": "Address",
							"nameLocation": "202:7:6",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"body": {
										"id": 1289,
										"nodeType": "Block",
										"src": "1241:254:6",
										"statements": [
											{
												"expression": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 1287,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"expression": {
															"expression": {
																"id": 1283,
																"name": "account",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1278,
																"src": "1465:7:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"id": 1284,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "1473:4:6",
															"memberName": "code",
															"nodeType": "MemberAccess",
															"src": "1465:12:6",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														},
														"id": 1285,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "1478:6:6",
														"memberName": "length",
														"nodeType": "MemberAccess",
														"src": "1465:19:6",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": ">",
													"rightExpression": {
														"hexValue": "30",
														"id": 1286,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "1487:1:6",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_0_by_1",
															"typeString": "int_const 0"
														},
														"value": "0"
													},
													"src": "1465:23:6",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"functionReturnParameters": 1282,
												"id": 1288,
												"nodeType": "Return",
												"src": "1458:30:6"
											}
										]
									},
									"documentation": {
										"id": 1276,
										"nodeType": "StructuredDocumentation",
										"src": "216:954:6",
										"text": " @dev Returns true if `account` is a contract.\n [IMPORTANT]\n ====\n It is unsafe to assume that an address for which this function returns\n false is an externally-owned account (EOA) and not a contract.\n Among others, `isContract` will return false for the following\n types of addresses:\n  - an externally-owned account\n  - a contract in construction\n  - an address where a contract will be created\n  - an address where a contract lived, but was destroyed\n ====\n [IMPORTANT]\n ====\n You shouldn't rely on `isContract` to protect against flash loan attacks!\n Preventing calls from contracts is highly discouraged. It breaks composability, breaks support for smart wallets\n like Gnosis Safe, and does not provide security since it can be circumvented by calling from a contract\n constructor.\n ===="
									},
									"id": 1290,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "isContract",
									"nameLocation": "1184:10:6",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1279,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1278,
												"mutability": "mutable",
												"name": "account",
												"nameLocation": "1203:7:6",
												"nodeType": "VariableDeclaration",
												"scope": 1290,
												"src": "1195:15:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1277,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1195:7:6",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1194:17:6"
									},
									"returnParameters": {
										"id": 1282,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1281,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1290,
												"src": "1235:4:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 1280,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "1235:4:6",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1234:6:6"
									},
									"scope": 1602,
									"src": "1175:320:6",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1323,
										"nodeType": "Block",
										"src": "2483:241:6",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 1305,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"expression": {
																	"arguments": [
																		{
																			"id": 1301,
																			"name": "this",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 4294967268,
																			"src": "2509:4:6",
																			"typeDescriptions": {
																				"typeIdentifier": "t_contract$_Address_$1602",
																				"typeString": "library Address"
																			}
																		}
																	],
																	"expression": {
																		"argumentTypes": [
																			{
																				"typeIdentifier": "t_contract$_Address_$1602",
																				"typeString": "library Address"
																			}
																		],
																		"id": 1300,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"lValueRequested": false,
																		"nodeType": "ElementaryTypeNameExpression",
																		"src": "2501:7:6",
																		"typeDescriptions": {
																			"typeIdentifier": "t_type$_t_address_$",
																			"typeString": "type(address)"
																		},
																		"typeName": {
																			"id": 1299,
																			"name": "address",
																			"nodeType": "ElementaryTypeName",
																			"src": "2501:7:6",
																			"typeDescriptions": {}
																		}
																	},
																	"id": 1302,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"kind": "typeConversion",
																	"lValueRequested": false,
																	"nameLocations": [],
																	"names": [],
																	"nodeType": "FunctionCall",
																	"src": "2501:13:6",
																	"tryCall": false,
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																"id": 1303,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"memberLocation": "2515:7:6",
																"memberName": "balance",
																"nodeType": "MemberAccess",
																"src": "2501:21:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">=",
															"rightExpression": {
																"id": 1304,
																"name": "amount",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1295,
																"src": "2526:6:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "2501:31:6",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "416464726573733a20696e73756666696369656e742062616c616e6365",
															"id": 1306,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "2534:31:6",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_5597a22abd0ef5332f8053862eb236db7590f17e2b93a53f63a103becfb561f9",
																"typeString": "literal_string \"Address: insufficient balance\""
															},
															"value": "Address: insufficient balance"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_5597a22abd0ef5332f8053862eb236db7590f17e2b93a53f63a103becfb561f9",
																"typeString": "literal_string \"Address: insufficient balance\""
															}
														],
														"id": 1298,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "2493:7:6",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 1307,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2493:73:6",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1308,
												"nodeType": "ExpressionStatement",
												"src": "2493:73:6"
											},
											{
												"assignments": [
													1310,
													null
												],
												"declarations": [
													{
														"constant": false,
														"id": 1310,
														"mutability": "mutable",
														"name": "success",
														"nameLocation": "2583:7:6",
														"nodeType": "VariableDeclaration",
														"scope": 1323,
														"src": "2578:12:6",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														},
														"typeName": {
															"id": 1309,
															"name": "bool",
															"nodeType": "ElementaryTypeName",
															"src": "2578:4:6",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"visibility": "internal"
													},
													null
												],
												"id": 1317,
												"initialValue": {
													"arguments": [
														{
															"hexValue": "",
															"id": 1315,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "2626:2:6",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470",
																"typeString": "literal_string \"\""
															},
															"value": ""
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470",
																"typeString": "literal_string \"\""
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470",
																	"typeString": "literal_string \"\""
																}
															],
															"expression": {
																"id": 1311,
																"name": "recipient",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1293,
																"src": "2596:9:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_address_payable",
																	"typeString": "address payable"
																}
															},
															"id": 1312,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "2606:4:6",
															"memberName": "call",
															"nodeType": "MemberAccess",
															"src": "2596:14:6",
															"typeDescriptions": {
																"typeIdentifier": "t_function_barecall_payable$_t_bytes_memory_ptr_$returns$_t_bool_$_t_bytes_memory_ptr_$",
																"typeString": "function (bytes memory) payable returns (bool,bytes memory)"
															}
														},
														"id": 1314,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"names": [
															"value"
														],
														"nodeType": "FunctionCallOptions",
														"options": [
															{
																"id": 1313,
																"name": "amount",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1295,
																"src": "2618:6:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															}
														],
														"src": "2596:29:6",
														"typeDescriptions": {
															"typeIdentifier": "t_function_barecall_payable$_t_bytes_memory_ptr_$returns$_t_bool_$_t_bytes_memory_ptr_$value",
															"typeString": "function (bytes memory) payable returns (bool,bytes memory)"
														}
													},
													"id": 1316,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2596:33:6",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$_t_bool_$_t_bytes_memory_ptr_$",
														"typeString": "tuple(bool,bytes memory)"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "2577:52:6"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 1319,
															"name": "success",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1310,
															"src": "2647:7:6",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "416464726573733a20756e61626c6520746f2073656e642076616c75652c20726563697069656e74206d61792068617665207265766572746564",
															"id": 1320,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "2656:60:6",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_51ddaa38748c0a1144620fb5bfe8edab31ea437571ad591a7734bbfd0429aeae",
																"typeString": "literal_string \"Address: unable to send value, recipient may have reverted\""
															},
															"value": "Address: unable to send value, recipient may have reverted"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_51ddaa38748c0a1144620fb5bfe8edab31ea437571ad591a7734bbfd0429aeae",
																"typeString": "literal_string \"Address: unable to send value, recipient may have reverted\""
															}
														],
														"id": 1318,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "2639:7:6",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 1321,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2639:78:6",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1322,
												"nodeType": "ExpressionStatement",
												"src": "2639:78:6"
											}
										]
									},
									"documentation": {
										"id": 1291,
										"nodeType": "StructuredDocumentation",
										"src": "1501:906:6",
										"text": " @dev Replacement for Solidity's `transfer`: sends `amount` wei to\n `recipient`, forwarding all available gas and reverting on errors.\n https://eips.ethereum.org/EIPS/eip-1884[EIP1884] increases the gas cost\n of certain opcodes, possibly making contracts go over the 2300 gas limit\n imposed by `transfer`, making them unable to receive funds via\n `transfer`. {sendValue} removes this limitation.\n https://diligence.consensys.net/posts/2019/09/stop-using-soliditys-transfer-now/[Learn more].\n IMPORTANT: because control is transferred to `recipient`, care must be\n taken to not create reentrancy vulnerabilities. Consider using\n {ReentrancyGuard} or the\n https://solidity.readthedocs.io/en/v0.5.11/security-considerations.html#use-the-checks-effects-interactions-pattern[checks-effects-interactions pattern]."
									},
									"id": 1324,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "sendValue",
									"nameLocation": "2421:9:6",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1296,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1293,
												"mutability": "mutable",
												"name": "recipient",
												"nameLocation": "2447:9:6",
												"nodeType": "VariableDeclaration",
												"scope": 1324,
												"src": "2431:25:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address_payable",
													"typeString": "address payable"
												},
												"typeName": {
													"id": 1292,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2431:15:6",
													"stateMutability": "payable",
													"typeDescriptions": {
														"typeIdentifier": "t_address_payable",
														"typeString": "address payable"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1295,
												"mutability": "mutable",
												"name": "amount",
												"nameLocation": "2466:6:6",
												"nodeType": "VariableDeclaration",
												"scope": 1324,
												"src": "2458:14:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1294,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2458:7:6",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2430:43:6"
									},
									"returnParameters": {
										"id": 1297,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2483:0:6"
									},
									"scope": 1602,
									"src": "2412:312:6",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1341,
										"nodeType": "Block",
										"src": "3555:96:6",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"id": 1335,
															"name": "target",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1327,
															"src": "3594:6:6",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 1336,
															"name": "data",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1329,
															"src": "3602:4:6",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														},
														{
															"hexValue": "30",
															"id": 1337,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "number",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "3608:1:6",
															"typeDescriptions": {
																"typeIdentifier": "t_rational_0_by_1",
																"typeString": "int_const 0"
															},
															"value": "0"
														},
														{
															"hexValue": "416464726573733a206c6f772d6c6576656c2063616c6c206661696c6564",
															"id": 1338,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "3611:32:6",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_24d7ab5d382116e64324f19950ca9340b8af1ddeb09a8d026e0a3c6a01dcc9df",
																"typeString": "literal_string \"Address: low-level call failed\""
															},
															"value": "Address: low-level call failed"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															},
															{
																"typeIdentifier": "t_rational_0_by_1",
																"typeString": "int_const 0"
															},
															{
																"typeIdentifier": "t_stringliteral_24d7ab5d382116e64324f19950ca9340b8af1ddeb09a8d026e0a3c6a01dcc9df",
																"typeString": "literal_string \"Address: low-level call failed\""
															}
														],
														"id": 1334,
														"name": "functionCallWithValue",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															1382,
															1426
														],
														"referencedDeclaration": 1426,
														"src": "3572:21:6",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_bytes_memory_ptr_$_t_uint256_$_t_string_memory_ptr_$returns$_t_bytes_memory_ptr_$",
															"typeString": "function (address,bytes memory,uint256,string memory) returns (bytes memory)"
														}
													},
													"id": 1339,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "3572:72:6",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_memory_ptr",
														"typeString": "bytes memory"
													}
												},
												"functionReturnParameters": 1333,
												"id": 1340,
												"nodeType": "Return",
												"src": "3565:79:6"
											}
										]
									},
									"documentation": {
										"id": 1325,
										"nodeType": "StructuredDocumentation",
										"src": "2730:731:6",
										"text": " @dev Performs a Solidity function call using a low level `call`. A\n plain `call` is an unsafe replacement for a function call: use this\n function instead.\n If `target` reverts with a revert reason, it is bubbled up by this\n function (like regular Solidity function calls).\n Returns the raw returned data. To convert to the expected return value,\n use https://solidity.readthedocs.io/en/latest/units-and-global-variables.html?highlight=abi.decode#abi-encoding-and-decoding-functions[`abi.decode`].\n Requirements:\n - `target` must be a contract.\n - calling `target` with `data` must not revert.\n _Available since v3.1._"
									},
									"id": 1342,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "functionCall",
									"nameLocation": "3475:12:6",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1330,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1327,
												"mutability": "mutable",
												"name": "target",
												"nameLocation": "3496:6:6",
												"nodeType": "VariableDeclaration",
												"scope": 1342,
												"src": "3488:14:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1326,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "3488:7:6",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1329,
												"mutability": "mutable",
												"name": "data",
												"nameLocation": "3517:4:6",
												"nodeType": "VariableDeclaration",
												"scope": 1342,
												"src": "3504:17:6",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 1328,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "3504:5:6",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3487:35:6"
									},
									"returnParameters": {
										"id": 1333,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1332,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1342,
												"src": "3541:12:6",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 1331,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "3541:5:6",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3540:14:6"
									},
									"scope": 1602,
									"src": "3466:185:6",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1361,
										"nodeType": "Block",
										"src": "4020:76:6",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"id": 1355,
															"name": "target",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1345,
															"src": "4059:6:6",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 1356,
															"name": "data",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1347,
															"src": "4067:4:6",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														},
														{
															"hexValue": "30",
															"id": 1357,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "number",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "4073:1:6",
															"typeDescriptions": {
																"typeIdentifier": "t_rational_0_by_1",
																"typeString": "int_const 0"
															},
															"value": "0"
														},
														{
															"id": 1358,
															"name": "errorMessage",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1349,
															"src": "4076:12:6",
															"typeDescriptions": {
																"typeIdentifier": "t_string_memory_ptr",
																"typeString": "string memory"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															},
															{
																"typeIdentifier": "t_rational_0_by_1",
																"typeString": "int_const 0"
															},
															{
																"typeIdentifier": "t_string_memory_ptr",
																"typeString": "string memory"
															}
														],
														"id": 1354,
														"name": "functionCallWithValue",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															1382,
															1426
														],
														"referencedDeclaration": 1426,
														"src": "4037:21:6",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_bytes_memory_ptr_$_t_uint256_$_t_string_memory_ptr_$returns$_t_bytes_memory_ptr_$",
															"typeString": "function (address,bytes memory,uint256,string memory) returns (bytes memory)"
														}
													},
													"id": 1359,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "4037:52:6",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_memory_ptr",
														"typeString": "bytes memory"
													}
												},
												"functionReturnParameters": 1353,
												"id": 1360,
												"nodeType": "Return",
												"src": "4030:59:6"
											}
										]
									},
									"documentation": {
										"id": 1343,
										"nodeType": "StructuredDocumentation",
										"src": "3657:211:6",
										"text": " @dev Same as {xref-Address-functionCall-address-bytes-}[`functionCall`], but with\n `errorMessage` as a fallback revert reason when `target` reverts.\n _Available since v3.1._"
									},
									"id": 1362,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "functionCall",
									"nameLocation": "3882:12:6",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1350,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1345,
												"mutability": "mutable",
												"name": "target",
												"nameLocation": "3912:6:6",
												"nodeType": "VariableDeclaration",
												"scope": 1362,
												"src": "3904:14:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1344,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "3904:7:6",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1347,
												"mutability": "mutable",
												"name": "data",
												"nameLocation": "3941:4:6",
												"nodeType": "VariableDeclaration",
												"scope": 1362,
												"src": "3928:17:6",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 1346,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "3928:5:6",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1349,
												"mutability": "mutable",
												"name": "errorMessage",
												"nameLocation": "3969:12:6",
												"nodeType": "VariableDeclaration",
												"scope": 1362,
												"src": "3955:26:6",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 1348,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "3955:6:6",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3894:93:6"
									},
									"returnParameters": {
										"id": 1353,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1352,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1362,
												"src": "4006:12:6",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 1351,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "4006:5:6",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4005:14:6"
									},
									"scope": 1602,
									"src": "3873:223:6",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1381,
										"nodeType": "Block",
										"src": "4601:111:6",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"id": 1375,
															"name": "target",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1365,
															"src": "4640:6:6",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 1376,
															"name": "data",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1367,
															"src": "4648:4:6",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														},
														{
															"id": 1377,
															"name": "value",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1369,
															"src": "4654:5:6",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														{
															"hexValue": "416464726573733a206c6f772d6c6576656c2063616c6c20776974682076616c7565206661696c6564",
															"id": 1378,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "4661:43:6",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_88a4a0b5e975840320a0475d4027005235904fdb5ece94df156f3d717cb2dbfc",
																"typeString": "literal_string \"Address: low-level call with value failed\""
															},
															"value": "Address: low-level call with value failed"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															{
																"typeIdentifier": "t_stringliteral_88a4a0b5e975840320a0475d4027005235904fdb5ece94df156f3d717cb2dbfc",
																"typeString": "literal_string \"Address: low-level call with value failed\""
															}
														],
														"id": 1374,
														"name": "functionCallWithValue",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															1382,
															1426
														],
														"referencedDeclaration": 1426,
														"src": "4618:21:6",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_bytes_memory_ptr_$_t_uint256_$_t_string_memory_ptr_$returns$_t_bytes_memory_ptr_$",
															"typeString": "function (address,bytes memory,uint256,string memory) returns (bytes memory)"
														}
													},
													"id": 1379,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "4618:87:6",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_memory_ptr",
														"typeString": "bytes memory"
													}
												},
												"functionReturnParameters": 1373,
												"id": 1380,
												"nodeType": "Return",
												"src": "4611:94:6"
											}
										]
									},
									"documentation": {
										"id": 1363,
										"nodeType": "StructuredDocumentation",
										"src": "4102:351:6",
										"text": " @dev Same as {xref-Address-functionCall-address-bytes-}[`functionCall`],\n but also transferring `value` wei to `target`.\n Requirements:\n - the calling contract must have an ETH balance of at least `value`.\n - the called Solidity function must be `payable`.\n _Available since v3.1._"
									},
									"id": 1382,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "functionCallWithValue",
									"nameLocation": "4467:21:6",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1370,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1365,
												"mutability": "mutable",
												"name": "target",
												"nameLocation": "4506:6:6",
												"nodeType": "VariableDeclaration",
												"scope": 1382,
												"src": "4498:14:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1364,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "4498:7:6",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1367,
												"mutability": "mutable",
												"name": "data",
												"nameLocation": "4535:4:6",
												"nodeType": "VariableDeclaration",
												"scope": 1382,
												"src": "4522:17:6",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 1366,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "4522:5:6",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1369,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "4557:5:6",
												"nodeType": "VariableDeclaration",
												"scope": 1382,
												"src": "4549:13:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1368,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "4549:7:6",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4488:80:6"
									},
									"returnParameters": {
										"id": 1373,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1372,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1382,
												"src": "4587:12:6",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 1371,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "4587:5:6",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4586:14:6"
									},
									"scope": 1602,
									"src": "4458:254:6",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1425,
										"nodeType": "Block",
										"src": "5139:267:6",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 1403,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"expression": {
																	"arguments": [
																		{
																			"id": 1399,
																			"name": "this",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 4294967268,
																			"src": "5165:4:6",
																			"typeDescriptions": {
																				"typeIdentifier": "t_contract$_Address_$1602",
																				"typeString": "library Address"
																			}
																		}
																	],
																	"expression": {
																		"argumentTypes": [
																			{
																				"typeIdentifier": "t_contract$_Address_$1602",
																				"typeString": "library Address"
																			}
																		],
																		"id": 1398,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"lValueRequested": false,
																		"nodeType": "ElementaryTypeNameExpression",
																		"src": "5157:7:6",
																		"typeDescriptions": {
																			"typeIdentifier": "t_type$_t_address_$",
																			"typeString": "type(address)"
																		},
																		"typeName": {
																			"id": 1397,
																			"name": "address",
																			"nodeType": "ElementaryTypeName",
																			"src": "5157:7:6",
																			"typeDescriptions": {}
																		}
																	},
																	"id": 1400,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"kind": "typeConversion",
																	"lValueRequested": false,
																	"nameLocations": [],
																	"names": [],
																	"nodeType": "FunctionCall",
																	"src": "5157:13:6",
																	"tryCall": false,
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																"id": 1401,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"memberLocation": "5171:7:6",
																"memberName": "balance",
																"nodeType": "MemberAccess",
																"src": "5157:21:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">=",
															"rightExpression": {
																"id": 1402,
																"name": "value",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1389,
																"src": "5182:5:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "5157:30:6",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "416464726573733a20696e73756666696369656e742062616c616e636520666f722063616c6c",
															"id": 1404,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "5189:40:6",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_565f1a77334fc4792800921178c71e4521acffab18ff9e7885b49377ee80ab4c",
																"typeString": "literal_string \"Address: insufficient balance for call\""
															},
															"value": "Address: insufficient balance for call"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_565f1a77334fc4792800921178c71e4521acffab18ff9e7885b49377ee80ab4c",
																"typeString": "literal_string \"Address: insufficient balance for call\""
															}
														],
														"id": 1396,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "5149:7:6",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 1405,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "5149:81:6",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1406,
												"nodeType": "ExpressionStatement",
												"src": "5149:81:6"
											},
											{
												"assignments": [
													1408,
													1410
												],
												"declarations": [
													{
														"constant": false,
														"id": 1408,
														"mutability": "mutable",
														"name": "success",
														"nameLocation": "5246:7:6",
														"nodeType": "VariableDeclaration",
														"scope": 1425,
														"src": "5241:12:6",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														},
														"typeName": {
															"id": 1407,
															"name": "bool",
															"nodeType": "ElementaryTypeName",
															"src": "5241:4:6",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"visibility": "internal"
													},
													{
														"constant": false,
														"id": 1410,
														"mutability": "mutable",
														"name": "returndata",
														"nameLocation": "5268:10:6",
														"nodeType": "VariableDeclaration",
														"scope": 1425,
														"src": "5255:23:6",
														"stateVariable": false,
														"storageLocation": "memory",
														"typeDescriptions": {
															"typeIdentifier": "t_bytes_memory_ptr",
															"typeString": "bytes"
														},
														"typeName": {
															"id": 1409,
															"name": "bytes",
															"nodeType": "ElementaryTypeName",
															"src": "5255:5:6",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_storage_ptr",
																"typeString": "bytes"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 1417,
												"initialValue": {
													"arguments": [
														{
															"id": 1415,
															"name": "data",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1387,
															"src": "5308:4:6",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_bytes_memory_ptr",
																	"typeString": "bytes memory"
																}
															],
															"expression": {
																"id": 1411,
																"name": "target",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1385,
																"src": "5282:6:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"id": 1412,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "5289:4:6",
															"memberName": "call",
															"nodeType": "MemberAccess",
															"src": "5282:11:6",
															"typeDescriptions": {
																"typeIdentifier": "t_function_barecall_payable$_t_bytes_memory_ptr_$returns$_t_bool_$_t_bytes_memory_ptr_$",
																"typeString": "function (bytes memory) payable returns (bool,bytes memory)"
															}
														},
														"id": 1414,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"names": [
															"value"
														],
														"nodeType": "FunctionCallOptions",
														"options": [
															{
																"id": 1413,
																"name": "value",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1389,
																"src": "5301:5:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															}
														],
														"src": "5282:25:6",
														"typeDescriptions": {
															"typeIdentifier": "t_function_barecall_payable$_t_bytes_memory_ptr_$returns$_t_bool_$_t_bytes_memory_ptr_$value",
															"typeString": "function (bytes memory) payable returns (bool,bytes memory)"
														}
													},
													"id": 1416,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "5282:31:6",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$_t_bool_$_t_bytes_memory_ptr_$",
														"typeString": "tuple(bool,bytes memory)"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "5240:73:6"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 1419,
															"name": "target",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1385,
															"src": "5357:6:6",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 1420,
															"name": "success",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1408,
															"src": "5365:7:6",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"id": 1421,
															"name": "returndata",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1410,
															"src": "5374:10:6",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														},
														{
															"id": 1422,
															"name": "errorMessage",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1391,
															"src": "5386:12:6",
															"typeDescriptions": {
																"typeIdentifier": "t_string_memory_ptr",
																"typeString": "string memory"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															},
															{
																"typeIdentifier": "t_string_memory_ptr",
																"typeString": "string memory"
															}
														],
														"id": 1418,
														"name": "verifyCallResultFromTarget",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1557,
														"src": "5330:26:6",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_view$_t_address_$_t_bool_$_t_bytes_memory_ptr_$_t_string_memory_ptr_$returns$_t_bytes_memory_ptr_$",
															"typeString": "function (address,bool,bytes memory,string memory) view returns (bytes memory)"
														}
													},
													"id": 1423,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "5330:69:6",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_memory_ptr",
														"typeString": "bytes memory"
													}
												},
												"functionReturnParameters": 1395,
												"id": 1424,
												"nodeType": "Return",
												"src": "5323:76:6"
											}
										]
									},
									"documentation": {
										"id": 1383,
										"nodeType": "StructuredDocumentation",
										"src": "4718:237:6",
										"text": " @dev Same as {xref-Address-functionCallWithValue-address-bytes-uint256-}[`functionCallWithValue`], but\n with `errorMessage` as a fallback revert reason when `target` reverts.\n _Available since v3.1._"
									},
									"id": 1426,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "functionCallWithValue",
									"nameLocation": "4969:21:6",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1392,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1385,
												"mutability": "mutable",
												"name": "target",
												"nameLocation": "5008:6:6",
												"nodeType": "VariableDeclaration",
												"scope": 1426,
												"src": "5000:14:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1384,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "5000:7:6",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1387,
												"mutability": "mutable",
												"name": "data",
												"nameLocation": "5037:4:6",
												"nodeType": "VariableDeclaration",
												"scope": 1426,
												"src": "5024:17:6",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 1386,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "5024:5:6",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1389,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "5059:5:6",
												"nodeType": "VariableDeclaration",
												"scope": 1426,
												"src": "5051:13:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1388,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "5051:7:6",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1391,
												"mutability": "mutable",
												"name": "errorMessage",
												"nameLocation": "5088:12:6",
												"nodeType": "VariableDeclaration",
												"scope": 1426,
												"src": "5074:26:6",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 1390,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "5074:6:6",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4990:116:6"
									},
									"returnParameters": {
										"id": 1395,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1394,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1426,
												"src": "5125:12:6",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 1393,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "5125:5:6",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "5124:14:6"
									},
									"scope": 1602,
									"src": "4960:446:6",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1442,
										"nodeType": "Block",
										"src": "5683:97:6",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"id": 1437,
															"name": "target",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1429,
															"src": "5719:6:6",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 1438,
															"name": "data",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1431,
															"src": "5727:4:6",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														},
														{
															"hexValue": "416464726573733a206c6f772d6c6576656c207374617469632063616c6c206661696c6564",
															"id": 1439,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "5733:39:6",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_90ec82aa826a536a4cbfae44ecfa384680faa9a4b77344bce96aa761ad904df0",
																"typeString": "literal_string \"Address: low-level static call failed\""
															},
															"value": "Address: low-level static call failed"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															},
															{
																"typeIdentifier": "t_stringliteral_90ec82aa826a536a4cbfae44ecfa384680faa9a4b77344bce96aa761ad904df0",
																"typeString": "literal_string \"Address: low-level static call failed\""
															}
														],
														"id": 1436,
														"name": "functionStaticCall",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															1443,
															1472
														],
														"referencedDeclaration": 1472,
														"src": "5700:18:6",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_view$_t_address_$_t_bytes_memory_ptr_$_t_string_memory_ptr_$returns$_t_bytes_memory_ptr_$",
															"typeString": "function (address,bytes memory,string memory) view returns (bytes memory)"
														}
													},
													"id": 1440,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "5700:73:6",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_memory_ptr",
														"typeString": "bytes memory"
													}
												},
												"functionReturnParameters": 1435,
												"id": 1441,
												"nodeType": "Return",
												"src": "5693:80:6"
											}
										]
									},
									"documentation": {
										"id": 1427,
										"nodeType": "StructuredDocumentation",
										"src": "5412:166:6",
										"text": " @dev Same as {xref-Address-functionCall-address-bytes-}[`functionCall`],\n but performing a static call.\n _Available since v3.3._"
									},
									"id": 1443,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "functionStaticCall",
									"nameLocation": "5592:18:6",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1432,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1429,
												"mutability": "mutable",
												"name": "target",
												"nameLocation": "5619:6:6",
												"nodeType": "VariableDeclaration",
												"scope": 1443,
												"src": "5611:14:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1428,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "5611:7:6",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1431,
												"mutability": "mutable",
												"name": "data",
												"nameLocation": "5640:4:6",
												"nodeType": "VariableDeclaration",
												"scope": 1443,
												"src": "5627:17:6",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 1430,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "5627:5:6",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "5610:35:6"
									},
									"returnParameters": {
										"id": 1435,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1434,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1443,
												"src": "5669:12:6",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 1433,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "5669:5:6",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "5668:14:6"
									},
									"scope": 1602,
									"src": "5583:197:6",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1471,
										"nodeType": "Block",
										"src": "6122:168:6",
										"statements": [
											{
												"assignments": [
													1456,
													1458
												],
												"declarations": [
													{
														"constant": false,
														"id": 1456,
														"mutability": "mutable",
														"name": "success",
														"nameLocation": "6138:7:6",
														"nodeType": "VariableDeclaration",
														"scope": 1471,
														"src": "6133:12:6",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														},
														"typeName": {
															"id": 1455,
															"name": "bool",
															"nodeType": "ElementaryTypeName",
															"src": "6133:4:6",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"visibility": "internal"
													},
													{
														"constant": false,
														"id": 1458,
														"mutability": "mutable",
														"name": "returndata",
														"nameLocation": "6160:10:6",
														"nodeType": "VariableDeclaration",
														"scope": 1471,
														"src": "6147:23:6",
														"stateVariable": false,
														"storageLocation": "memory",
														"typeDescriptions": {
															"typeIdentifier": "t_bytes_memory_ptr",
															"typeString": "bytes"
														},
														"typeName": {
															"id": 1457,
															"name": "bytes",
															"nodeType": "ElementaryTypeName",
															"src": "6147:5:6",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_storage_ptr",
																"typeString": "bytes"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 1463,
												"initialValue": {
													"arguments": [
														{
															"id": 1461,
															"name": "data",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1448,
															"src": "6192:4:6",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														],
														"expression": {
															"id": 1459,
															"name": "target",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1446,
															"src": "6174:6:6",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"id": 1460,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "6181:10:6",
														"memberName": "staticcall",
														"nodeType": "MemberAccess",
														"src": "6174:17:6",
														"typeDescriptions": {
															"typeIdentifier": "t_function_barestaticcall_view$_t_bytes_memory_ptr_$returns$_t_bool_$_t_bytes_memory_ptr_$",
															"typeString": "function (bytes memory) view returns (bool,bytes memory)"
														}
													},
													"id": 1462,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "6174:23:6",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$_t_bool_$_t_bytes_memory_ptr_$",
														"typeString": "tuple(bool,bytes memory)"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "6132:65:6"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 1465,
															"name": "target",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1446,
															"src": "6241:6:6",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 1466,
															"name": "success",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1456,
															"src": "6249:7:6",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"id": 1467,
															"name": "returndata",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1458,
															"src": "6258:10:6",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														},
														{
															"id": 1468,
															"name": "errorMessage",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1450,
															"src": "6270:12:6",
															"typeDescriptions": {
																"typeIdentifier": "t_string_memory_ptr",
																"typeString": "string memory"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															},
															{
																"typeIdentifier": "t_string_memory_ptr",
																"typeString": "string memory"
															}
														],
														"id": 1464,
														"name": "verifyCallResultFromTarget",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1557,
														"src": "6214:26:6",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_view$_t_address_$_t_bool_$_t_bytes_memory_ptr_$_t_string_memory_ptr_$returns$_t_bytes_memory_ptr_$",
															"typeString": "function (address,bool,bytes memory,string memory) view returns (bytes memory)"
														}
													},
													"id": 1469,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "6214:69:6",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_memory_ptr",
														"typeString": "bytes memory"
													}
												},
												"functionReturnParameters": 1454,
												"id": 1470,
												"nodeType": "Return",
												"src": "6207:76:6"
											}
										]
									},
									"documentation": {
										"id": 1444,
										"nodeType": "StructuredDocumentation",
										"src": "5786:173:6",
										"text": " @dev Same as {xref-Address-functionCall-address-bytes-string-}[`functionCall`],\n but performing a static call.\n _Available since v3.3._"
									},
									"id": 1472,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "functionStaticCall",
									"nameLocation": "5973:18:6",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1451,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1446,
												"mutability": "mutable",
												"name": "target",
												"nameLocation": "6009:6:6",
												"nodeType": "VariableDeclaration",
												"scope": 1472,
												"src": "6001:14:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1445,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "6001:7:6",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1448,
												"mutability": "mutable",
												"name": "data",
												"nameLocation": "6038:4:6",
												"nodeType": "VariableDeclaration",
												"scope": 1472,
												"src": "6025:17:6",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 1447,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "6025:5:6",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1450,
												"mutability": "mutable",
												"name": "errorMessage",
												"nameLocation": "6066:12:6",
												"nodeType": "VariableDeclaration",
												"scope": 1472,
												"src": "6052:26:6",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 1449,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "6052:6:6",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "5991:93:6"
									},
									"returnParameters": {
										"id": 1454,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1453,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1472,
												"src": "6108:12:6",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 1452,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "6108:5:6",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "6107:14:6"
									},
									"scope": 1602,
									"src": "5964:326:6",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1488,
										"nodeType": "Block",
										"src": "6566:101:6",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"id": 1483,
															"name": "target",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1475,
															"src": "6604:6:6",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 1484,
															"name": "data",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1477,
															"src": "6612:4:6",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														},
														{
															"hexValue": "416464726573733a206c6f772d6c6576656c2064656c65676174652063616c6c206661696c6564",
															"id": 1485,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "6618:41:6",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_9fdcd12e4b726339b32a442b0a448365d5d85c96b2d2cff917b4f66c63110398",
																"typeString": "literal_string \"Address: low-level delegate call failed\""
															},
															"value": "Address: low-level delegate call failed"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															},
															{
																"typeIdentifier": "t_stringliteral_9fdcd12e4b726339b32a442b0a448365d5d85c96b2d2cff917b4f66c63110398",
																"typeString": "literal_string \"Address: low-level delegate call failed\""
															}
														],
														"id": 1482,
														"name": "functionDelegateCall",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															1489,
															1518
														],
														"referencedDeclaration": 1518,
														"src": "6583:20:6",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_bytes_memory_ptr_$_t_string_memory_ptr_$returns$_t_bytes_memory_ptr_$",
															"typeString": "function (address,bytes memory,string memory) returns (bytes memory)"
														}
													},
													"id": 1486,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "6583:77:6",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_memory_ptr",
														"typeString": "bytes memory"
													}
												},
												"functionReturnParameters": 1481,
												"id": 1487,
												"nodeType": "Return",
												"src": "6576:84:6"
											}
										]
									},
									"documentation": {
										"id": 1473,
										"nodeType": "StructuredDocumentation",
										"src": "6296:168:6",
										"text": " @dev Same as {xref-Address-functionCall-address-bytes-}[`functionCall`],\n but performing a delegate call.\n _Available since v3.4._"
									},
									"id": 1489,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "functionDelegateCall",
									"nameLocation": "6478:20:6",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1478,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1475,
												"mutability": "mutable",
												"name": "target",
												"nameLocation": "6507:6:6",
												"nodeType": "VariableDeclaration",
												"scope": 1489,
												"src": "6499:14:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1474,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "6499:7:6",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1477,
												"mutability": "mutable",
												"name": "data",
												"nameLocation": "6528:4:6",
												"nodeType": "VariableDeclaration",
												"scope": 1489,
												"src": "6515:17:6",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 1476,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "6515:5:6",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "6498:35:6"
									},
									"returnParameters": {
										"id": 1481,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1480,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1489,
												"src": "6552:12:6",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 1479,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "6552:5:6",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "6551:14:6"
									},
									"scope": 1602,
									"src": "6469:198:6",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1517,
										"nodeType": "Block",
										"src": "7008:170:6",
										"statements": [
											{
												"assignments": [
													1502,
													1504
												],
												"declarations": [
													{
														"constant": false,
														"id": 1502,
														"mutability": "mutable",
														"name": "success",
														"nameLocation": "7024:7:6",
														"nodeType": "VariableDeclaration",
														"scope": 1517,
														"src": "7019:12:6",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														},
														"typeName": {
															"id": 1501,
															"name": "bool",
															"nodeType": "ElementaryTypeName",
															"src": "7019:4:6",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"visibility": "internal"
													},
													{
														"constant": false,
														"id": 1504,
														"mutability": "mutable",
														"name": "returndata",
														"nameLocation": "7046:10:6",
														"nodeType": "VariableDeclaration",
														"scope": 1517,
														"src": "7033:23:6",
														"stateVariable": false,
														"storageLocation": "memory",
														"typeDescriptions": {
															"typeIdentifier": "t_bytes_memory_ptr",
															"typeString": "bytes"
														},
														"typeName": {
															"id": 1503,
															"name": "bytes",
															"nodeType": "ElementaryTypeName",
															"src": "7033:5:6",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_storage_ptr",
																"typeString": "bytes"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 1509,
												"initialValue": {
													"arguments": [
														{
															"id": 1507,
															"name": "data",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1494,
															"src": "7080:4:6",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														],
														"expression": {
															"id": 1505,
															"name": "target",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1492,
															"src": "7060:6:6",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"id": 1506,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "7067:12:6",
														"memberName": "delegatecall",
														"nodeType": "MemberAccess",
														"src": "7060:19:6",
														"typeDescriptions": {
															"typeIdentifier": "t_function_baredelegatecall_nonpayable$_t_bytes_memory_ptr_$returns$_t_bool_$_t_bytes_memory_ptr_$",
															"typeString": "function (bytes memory) returns (bool,bytes memory)"
														}
													},
													"id": 1508,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "7060:25:6",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$_t_bool_$_t_bytes_memory_ptr_$",
														"typeString": "tuple(bool,bytes memory)"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "7018:67:6"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 1511,
															"name": "target",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1492,
															"src": "7129:6:6",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 1512,
															"name": "success",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1502,
															"src": "7137:7:6",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"id": 1513,
															"name": "returndata",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1504,
															"src": "7146:10:6",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														},
														{
															"id": 1514,
															"name": "errorMessage",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1496,
															"src": "7158:12:6",
															"typeDescriptions": {
																"typeIdentifier": "t_string_memory_ptr",
																"typeString": "string memory"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															},
															{
																"typeIdentifier": "t_string_memory_ptr",
																"typeString": "string memory"
															}
														],
														"id": 1510,
														"name": "verifyCallResultFromTarget",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1557,
														"src": "7102:26:6",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_view$_t_address_$_t_bool_$_t_bytes_memory_ptr_$_t_string_memory_ptr_$returns$_t_bytes_memory_ptr_$",
															"typeString": "function (address,bool,bytes memory,string memory) view returns (bytes memory)"
														}
													},
													"id": 1515,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "7102:69:6",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_memory_ptr",
														"typeString": "bytes memory"
													}
												},
												"functionReturnParameters": 1500,
												"id": 1516,
												"nodeType": "Return",
												"src": "7095:76:6"
											}
										]
									},
									"documentation": {
										"id": 1490,
										"nodeType": "StructuredDocumentation",
										"src": "6673:175:6",
										"text": " @dev Same as {xref-Address-functionCall-address-bytes-string-}[`functionCall`],\n but performing a delegate call.\n _Available since v3.4._"
									},
									"id": 1518,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "functionDelegateCall",
									"nameLocation": "6862:20:6",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1497,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1492,
												"mutability": "mutable",
												"name": "target",
												"nameLocation": "6900:6:6",
												"nodeType": "VariableDeclaration",
												"scope": 1518,
												"src": "6892:14:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1491,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "6892:7:6",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1494,
												"mutability": "mutable",
												"name": "data",
												"nameLocation": "6929:4:6",
												"nodeType": "VariableDeclaration",
												"scope": 1518,
												"src": "6916:17:6",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 1493,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "6916:5:6",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1496,
												"mutability": "mutable",
												"name": "errorMessage",
												"nameLocation": "6957:12:6",
												"nodeType": "VariableDeclaration",
												"scope": 1518,
												"src": "6943:26:6",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 1495,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "6943:6:6",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "6882:93:6"
									},
									"returnParameters": {
										"id": 1500,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1499,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1518,
												"src": "6994:12:6",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 1498,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "6994:5:6",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "6993:14:6"
									},
									"scope": 1602,
									"src": "6853:325:6",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1556,
										"nodeType": "Block",
										"src": "7660:434:6",
										"statements": [
											{
												"condition": {
													"id": 1532,
													"name": "success",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 1523,
													"src": "7674:7:6",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"falseBody": {
													"id": 1554,
													"nodeType": "Block",
													"src": "8030:58:6",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"id": 1550,
																		"name": "returndata",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1525,
																		"src": "8052:10:6",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bytes_memory_ptr",
																			"typeString": "bytes memory"
																		}
																	},
																	{
																		"id": 1551,
																		"name": "errorMessage",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1527,
																		"src": "8064:12:6",
																		"typeDescriptions": {
																			"typeIdentifier": "t_string_memory_ptr",
																			"typeString": "string memory"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_bytes_memory_ptr",
																			"typeString": "bytes memory"
																		},
																		{
																			"typeIdentifier": "t_string_memory_ptr",
																			"typeString": "string memory"
																		}
																	],
																	"id": 1549,
																	"name": "_revert",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1601,
																	"src": "8044:7:6",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_internal_pure$_t_bytes_memory_ptr_$_t_string_memory_ptr_$returns$__$",
																		"typeString": "function (bytes memory,string memory) pure"
																	}
																},
																"id": 1552,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "8044:33:6",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$__$",
																	"typeString": "tuple()"
																}
															},
															"id": 1553,
															"nodeType": "ExpressionStatement",
															"src": "8044:33:6"
														}
													]
												},
												"id": 1555,
												"nodeType": "IfStatement",
												"src": "7670:418:6",
												"trueBody": {
													"id": 1548,
													"nodeType": "Block",
													"src": "7683:341:6",
													"statements": [
														{
															"condition": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 1536,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"expression": {
																		"id": 1533,
																		"name": "returndata",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1525,
																		"src": "7701:10:6",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bytes_memory_ptr",
																			"typeString": "bytes memory"
																		}
																	},
																	"id": 1534,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"memberLocation": "7712:6:6",
																	"memberName": "length",
																	"nodeType": "MemberAccess",
																	"src": "7701:17:6",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": "==",
																"rightExpression": {
																	"hexValue": "30",
																	"id": 1535,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "7722:1:6",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	},
																	"value": "0"
																},
																"src": "7701:22:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																}
															},
															"id": 1545,
															"nodeType": "IfStatement",
															"src": "7697:286:6",
															"trueBody": {
																"id": 1544,
																"nodeType": "Block",
																"src": "7725:258:6",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"arguments": [
																						{
																							"id": 1539,
																							"name": "target",
																							"nodeType": "Identifier",
																							"overloadedDeclarations": [],
																							"referencedDeclaration": 1521,
																							"src": "7927:6:6",
																							"typeDescriptions": {
																								"typeIdentifier": "t_address",
																								"typeString": "address"
																							}
																						}
																					],
																					"expression": {
																						"argumentTypes": [
																							{
																								"typeIdentifier": "t_address",
																								"typeString": "address"
																							}
																						],
																						"id": 1538,
																						"name": "isContract",
																						"nodeType": "Identifier",
																						"overloadedDeclarations": [],
																						"referencedDeclaration": 1290,
																						"src": "7916:10:6",
																						"typeDescriptions": {
																							"typeIdentifier": "t_function_internal_view$_t_address_$returns$_t_bool_$",
																							"typeString": "function (address) view returns (bool)"
																						}
																					},
																					"id": 1540,
																					"isConstant": false,
																					"isLValue": false,
																					"isPure": false,
																					"kind": "functionCall",
																					"lValueRequested": false,
																					"nameLocations": [],
																					"names": [],
																					"nodeType": "FunctionCall",
																					"src": "7916:18:6",
																					"tryCall": false,
																					"typeDescriptions": {
																						"typeIdentifier": "t_bool",
																						"typeString": "bool"
																					}
																				},
																				{
																					"hexValue": "416464726573733a2063616c6c20746f206e6f6e2d636f6e7472616374",
																					"id": 1541,
																					"isConstant": false,
																					"isLValue": false,
																					"isPure": true,
																					"kind": "string",
																					"lValueRequested": false,
																					"nodeType": "Literal",
																					"src": "7936:31:6",
																					"typeDescriptions": {
																						"typeIdentifier": "t_stringliteral_cc2e4e38850b7c0a3e942cfed89b71c77302df25bcb2ec297a0c4ff9ff6b90ad",
																						"typeString": "literal_string \"Address: call to non-contract\""
																					},
																					"value": "Address: call to non-contract"
																				}
																			],
																			"expression": {
																				"argumentTypes": [
																					{
																						"typeIdentifier": "t_bool",
																						"typeString": "bool"
																					},
																					{
																						"typeIdentifier": "t_stringliteral_cc2e4e38850b7c0a3e942cfed89b71c77302df25bcb2ec297a0c4ff9ff6b90ad",
																						"typeString": "literal_string \"Address: call to non-contract\""
																					}
																				],
																				"id": 1537,
																				"name": "require",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [
																					4294967278,
																					4294967278
																				],
																				"referencedDeclaration": 4294967278,
																				"src": "7908:7:6",
																				"typeDescriptions": {
																					"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
																					"typeString": "function (bool,string memory) pure"
																				}
																			},
																			"id": 1542,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"kind": "functionCall",
																			"lValueRequested": false,
																			"nameLocations": [],
																			"names": [],
																			"nodeType": "FunctionCall",
																			"src": "7908:60:6",
																			"tryCall": false,
																			"typeDescriptions": {
																				"typeIdentifier": "t_tuple$__$",
																				"typeString": "tuple()"
																			}
																		},
																		"id": 1543,
																		"nodeType": "ExpressionStatement",
																		"src": "7908:60:6"
																	}
																]
															}
														},
														{
															"expression": {
																"id": 1546,
																"name": "returndata",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1525,
																"src": "8003:10:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_bytes_memory_ptr",
																	"typeString": "bytes memory"
																}
															},
															"functionReturnParameters": 1531,
															"id": 1547,
															"nodeType": "Return",
															"src": "7996:17:6"
														}
													]
												}
											}
										]
									},
									"documentation": {
										"id": 1519,
										"nodeType": "StructuredDocumentation",
										"src": "7184:277:6",
										"text": " @dev Tool to verify that a low level call to smart-contract was successful, and revert (either by bubbling\n the revert reason or using the provided one) in case of unsuccessful call or if target was not a contract.\n _Available since v4.8._"
									},
									"id": 1557,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "verifyCallResultFromTarget",
									"nameLocation": "7475:26:6",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1528,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1521,
												"mutability": "mutable",
												"name": "target",
												"nameLocation": "7519:6:6",
												"nodeType": "VariableDeclaration",
												"scope": 1557,
												"src": "7511:14:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1520,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "7511:7:6",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1523,
												"mutability": "mutable",
												"name": "success",
												"nameLocation": "7540:7:6",
												"nodeType": "VariableDeclaration",
												"scope": 1557,
												"src": "7535:12:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 1522,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "7535:4:6",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1525,
												"mutability": "mutable",
												"name": "returndata",
												"nameLocation": "7570:10:6",
												"nodeType": "VariableDeclaration",
												"scope": 1557,
												"src": "7557:23:6",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 1524,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "7557:5:6",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1527,
												"mutability": "mutable",
												"name": "errorMessage",
												"nameLocation": "7604:12:6",
												"nodeType": "VariableDeclaration",
												"scope": 1557,
												"src": "7590:26:6",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 1526,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "7590:6:6",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "7501:121:6"
									},
									"returnParameters": {
										"id": 1531,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1530,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1557,
												"src": "7646:12:6",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 1529,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "7646:5:6",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "7645:14:6"
									},
									"scope": 1602,
									"src": "7466:628:6",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1580,
										"nodeType": "Block",
										"src": "8475:135:6",
										"statements": [
											{
												"condition": {
													"id": 1569,
													"name": "success",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 1560,
													"src": "8489:7:6",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"falseBody": {
													"id": 1578,
													"nodeType": "Block",
													"src": "8546:58:6",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"id": 1574,
																		"name": "returndata",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1562,
																		"src": "8568:10:6",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bytes_memory_ptr",
																			"typeString": "bytes memory"
																		}
																	},
																	{
																		"id": 1575,
																		"name": "errorMessage",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1564,
																		"src": "8580:12:6",
																		"typeDescriptions": {
																			"typeIdentifier": "t_string_memory_ptr",
																			"typeString": "string memory"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_bytes_memory_ptr",
																			"typeString": "bytes memory"
																		},
																		{
																			"typeIdentifier": "t_string_memory_ptr",
																			"typeString": "string memory"
																		}
																	],
																	"id": 1573,
																	"name": "_revert",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1601,
																	"src": "8560:7:6",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_internal_pure$_t_bytes_memory_ptr_$_t_string_memory_ptr_$returns$__$",
																		"typeString": "function (bytes memory,string memory) pure"
																	}
																},
																"id": 1576,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "8560:33:6",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$__$",
																	"typeString": "tuple()"
																}
															},
															"id": 1577,
															"nodeType": "ExpressionStatement",
															"src": "8560:33:6"
														}
													]
												},
												"id": 1579,
												"nodeType": "IfStatement",
												"src": "8485:119:6",
												"trueBody": {
													"id": 1572,
													"nodeType": "Block",
													"src": "8498:42:6",
													"statements": [
														{
															"expression": {
																"id": 1570,
																"name": "returndata",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1562,
																"src": "8519:10:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_bytes_memory_ptr",
																	"typeString": "bytes memory"
																}
															},
															"functionReturnParameters": 1568,
															"id": 1571,
															"nodeType": "Return",
															"src": "8512:17:6"
														}
													]
												}
											}
										]
									},
									"documentation": {
										"id": 1558,
										"nodeType": "StructuredDocumentation",
										"src": "8100:210:6",
										"text": " @dev Tool to verify that a low level call was successful, and revert if it wasn't, either by bubbling the\n revert reason or using the provided one.\n _Available since v4.3._"
									},
									"id": 1581,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "verifyCallResult",
									"nameLocation": "8324:16:6",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1565,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1560,
												"mutability": "mutable",
												"name": "success",
												"nameLocation": "8355:7:6",
												"nodeType": "VariableDeclaration",
												"scope": 1581,
												"src": "8350:12:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 1559,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "8350:4:6",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1562,
												"mutability": "mutable",
												"name": "returndata",
												"nameLocation": "8385:10:6",
												"nodeType": "VariableDeclaration",
												"scope": 1581,
												"src": "8372:23:6",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 1561,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "8372:5:6",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1564,
												"mutability": "mutable",
												"name": "errorMessage",
												"nameLocation": "8419:12:6",
												"nodeType": "VariableDeclaration",
												"scope": 1581,
												"src": "8405:26:6",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 1563,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "8405:6:6",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "8340:97:6"
									},
									"returnParameters": {
										"id": 1568,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1567,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1581,
												"src": "8461:12:6",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 1566,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "8461:5:6",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "8460:14:6"
									},
									"scope": 1602,
									"src": "8315:295:6",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1600,
										"nodeType": "Block",
										"src": "8699:457:6",
										"statements": [
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 1591,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"expression": {
															"id": 1588,
															"name": "returndata",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1583,
															"src": "8775:10:6",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														},
														"id": 1589,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "8786:6:6",
														"memberName": "length",
														"nodeType": "MemberAccess",
														"src": "8775:17:6",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": ">",
													"rightExpression": {
														"hexValue": "30",
														"id": 1590,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "8795:1:6",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_0_by_1",
															"typeString": "int_const 0"
														},
														"value": "0"
													},
													"src": "8775:21:6",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"falseBody": {
													"id": 1598,
													"nodeType": "Block",
													"src": "9105:45:6",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"id": 1595,
																		"name": "errorMessage",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1585,
																		"src": "9126:12:6",
																		"typeDescriptions": {
																			"typeIdentifier": "t_string_memory_ptr",
																			"typeString": "string memory"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_string_memory_ptr",
																			"typeString": "string memory"
																		}
																	],
																	"id": 1594,
																	"name": "revert",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [
																		4294967277,
																		4294967277
																	],
																	"referencedDeclaration": 4294967277,
																	"src": "9119:6:6",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_revert_pure$_t_string_memory_ptr_$returns$__$",
																		"typeString": "function (string memory) pure"
																	}
																},
																"id": 1596,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "9119:20:6",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$__$",
																	"typeString": "tuple()"
																}
															},
															"id": 1597,
															"nodeType": "ExpressionStatement",
															"src": "9119:20:6"
														}
													]
												},
												"id": 1599,
												"nodeType": "IfStatement",
												"src": "8771:379:6",
												"trueBody": {
													"id": 1593,
													"nodeType": "Block",
													"src": "8798:301:6",
													"statements": [
														{
															"AST": {
																"nativeSrc": "8956:133:6",
																"nodeType": "YulBlock",
																"src": "8956:133:6",
																"statements": [
																	{
																		"nativeSrc": "8974:40:6",
																		"nodeType": "YulVariableDeclaration",
																		"src": "8974:40:6",
																		"value": {
																			"arguments": [
																				{
																					"name": "returndata",
																					"nativeSrc": "9003:10:6",
																					"nodeType": "YulIdentifier",
																					"src": "9003:10:6"
																				}
																			],
																			"functionName": {
																				"name": "mload",
																				"nativeSrc": "8997:5:6",
																				"nodeType": "YulIdentifier",
																				"src": "8997:5:6"
																			},
																			"nativeSrc": "8997:17:6",
																			"nodeType": "YulFunctionCall",
																			"src": "8997:17:6"
																		},
																		"variables": [
																			{
																				"name": "returndata_size",
																				"nativeSrc": "8978:15:6",
																				"nodeType": "YulTypedName",
																				"src": "8978:15:6",
																				"type": ""
																			}
																		]
																	},
																	{
																		"expression": {
																			"arguments": [
																				{
																					"arguments": [
																						{
																							"kind": "number",
																							"nativeSrc": "9042:2:6",
																							"nodeType": "YulLiteral",
																							"src": "9042:2:6",
																							"type": "",
																							"value": "32"
																						},
																						{
																							"name": "returndata",
																							"nativeSrc": "9046:10:6",
																							"nodeType": "YulIdentifier",
																							"src": "9046:10:6"
																						}
																					],
																					"functionName": {
																						"name": "add",
																						"nativeSrc": "9038:3:6",
																						"nodeType": "YulIdentifier",
																						"src": "9038:3:6"
																					},
																					"nativeSrc": "9038:19:6",
																					"nodeType": "YulFunctionCall",
																					"src": "9038:19:6"
																				},
																				{
																					"name": "returndata_size",
																					"nativeSrc": "9059:15:6",
																					"nodeType": "YulIdentifier",
																					"src": "9059:15:6"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nativeSrc": "9031:6:6",
																				"nodeType": "YulIdentifier",
																				"src": "9031:6:6"
																			},
																			"nativeSrc": "9031:44:6",
																			"nodeType": "YulFunctionCall",
																			"src": "9031:44:6"
																		},
																		"nativeSrc": "9031:44:6",
																		"nodeType": "YulExpressionStatement",
																		"src": "9031:44:6"
																	}
																]
															},
															"documentation": "@solidity memory-safe-assembly",
															"evmVersion": "shanghai",
															"externalReferences": [
																{
																	"declaration": 1583,
																	"isOffset": false,
																	"isSlot": false,
																	"src": "9003:10:6",
																	"valueSize": 1
																},
																{
																	"declaration": 1583,
																	"isOffset": false,
																	"isSlot": false,
																	"src": "9046:10:6",
																	"valueSize": 1
																}
															],
															"id": 1592,
															"nodeType": "InlineAssembly",
															"src": "8947:142:6"
														}
													]
												}
											}
										]
									},
									"id": 1601,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_revert",
									"nameLocation": "8625:7:6",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1586,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1583,
												"mutability": "mutable",
												"name": "returndata",
												"nameLocation": "8646:10:6",
												"nodeType": "VariableDeclaration",
												"scope": 1601,
												"src": "8633:23:6",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 1582,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "8633:5:6",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1585,
												"mutability": "mutable",
												"name": "errorMessage",
												"nameLocation": "8672:12:6",
												"nodeType": "VariableDeclaration",
												"scope": 1601,
												"src": "8658:26:6",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 1584,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "8658:6:6",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "8632:53:6"
									},
									"returnParameters": {
										"id": 1587,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "8699:0:6"
									},
									"scope": 1602,
									"src": "8616:540:6",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "private"
								}
							],
							"scope": 1603,
							"src": "194:8964:6",
							"usedErrors": [],
							"usedEvents": []
						}
					],
					"src": "101:9058:6"
				},
				"id": 6
			},
			"@openzeppelin/contracts/utils/Context.sol": {
				"ast": {
					"absolutePath": "@openzeppelin/contracts/utils/Context.sol",
					"exportedSymbols": {
						"Context": [
							1624
						]
					},
					"id": 1625,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 1604,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".0"
							],
							"nodeType": "PragmaDirective",
							"src": "86:23:7"
						},
						{
							"abstract": true,
							"baseContracts": [],
							"canonicalName": "Context",
							"contractDependencies": [],
							"contractKind": "contract",
							"documentation": {
								"id": 1605,
								"nodeType": "StructuredDocumentation",
								"src": "111:496:7",
								"text": " @dev Provides information about the current execution context, including the\n sender of the transaction and its data. While these are generally available\n via msg.sender and msg.data, they should not be accessed in such a direct\n manner, since when dealing with meta-transactions the account sending and\n paying for execution may not be the actual sender (as far as an application\n is concerned).\n This contract is only required for intermediate, library-like contracts."
							},
							"fullyImplemented": true,
							"id": 1624,
							"linearizedBaseContracts": [
								1624
							],
							"name": "Context",
							"nameLocation": "626:7:7",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"body": {
										"id": 1613,
										"nodeType": "Block",
										"src": "702:34:7",
										"statements": [
											{
												"expression": {
													"expression": {
														"id": 1610,
														"name": "msg",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 4294967281,
														"src": "719:3:7",
														"typeDescriptions": {
															"typeIdentifier": "t_magic_message",
															"typeString": "msg"
														}
													},
													"id": 1611,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"memberLocation": "723:6:7",
													"memberName": "sender",
													"nodeType": "MemberAccess",
													"src": "719:10:7",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"functionReturnParameters": 1609,
												"id": 1612,
												"nodeType": "Return",
												"src": "712:17:7"
											}
										]
									},
									"id": 1614,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_msgSender",
									"nameLocation": "649:10:7",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1606,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "659:2:7"
									},
									"returnParameters": {
										"id": 1609,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1608,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1614,
												"src": "693:7:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1607,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "693:7:7",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "692:9:7"
									},
									"scope": 1624,
									"src": "640:96:7",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1622,
										"nodeType": "Block",
										"src": "809:32:7",
										"statements": [
											{
												"expression": {
													"expression": {
														"id": 1619,
														"name": "msg",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 4294967281,
														"src": "826:3:7",
														"typeDescriptions": {
															"typeIdentifier": "t_magic_message",
															"typeString": "msg"
														}
													},
													"id": 1620,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"memberLocation": "830:4:7",
													"memberName": "data",
													"nodeType": "MemberAccess",
													"src": "826:8:7",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_calldata_ptr",
														"typeString": "bytes calldata"
													}
												},
												"functionReturnParameters": 1618,
												"id": 1621,
												"nodeType": "Return",
												"src": "819:15:7"
											}
										]
									},
									"id": 1623,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_msgData",
									"nameLocation": "751:8:7",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1615,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "759:2:7"
									},
									"returnParameters": {
										"id": 1618,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1617,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1623,
												"src": "793:14:7",
												"stateVariable": false,
												"storageLocation": "calldata",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_calldata_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 1616,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "793:5:7",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "792:16:7"
									},
									"scope": 1624,
									"src": "742:99:7",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "internal"
								}
							],
							"scope": 1625,
							"src": "608:235:7",
							"usedErrors": [],
							"usedEvents": []
						}
					],
					"src": "86:758:7"
				},
				"id": 7
			},
			"@openzeppelin/contracts/utils/Counters.sol": {
				"ast": {
					"absolutePath": "@openzeppelin/contracts/utils/Counters.sol",
					"exportedSymbols": {
						"Counters": [
							1698
						]
					},
					"id": 1699,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 1626,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".0"
							],
							"nodeType": "PragmaDirective",
							"src": "87:23:8"
						},
						{
							"abstract": false,
							"baseContracts": [],
							"canonicalName": "Counters",
							"contractDependencies": [],
							"contractKind": "library",
							"documentation": {
								"id": 1627,
								"nodeType": "StructuredDocumentation",
								"src": "112:311:8",
								"text": " @title Counters\n @author Matt Condon (@shrugs)\n @dev Provides counters that can only be incremented, decremented or reset. This can be used e.g. to track the number\n of elements in a mapping, issuing ERC721 ids, or counting request ids.\n Include with `using Counters for Counters.Counter;`"
							},
							"fullyImplemented": true,
							"id": 1698,
							"linearizedBaseContracts": [
								1698
							],
							"name": "Counters",
							"nameLocation": "432:8:8",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"canonicalName": "Counters.Counter",
									"id": 1630,
									"members": [
										{
											"constant": false,
											"id": 1629,
											"mutability": "mutable",
											"name": "_value",
											"nameLocation": "794:6:8",
											"nodeType": "VariableDeclaration",
											"scope": 1630,
											"src": "786:14:8",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_uint256",
												"typeString": "uint256"
											},
											"typeName": {
												"id": 1628,
												"name": "uint256",
												"nodeType": "ElementaryTypeName",
												"src": "786:7:8",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												}
											},
											"visibility": "internal"
										}
									],
									"name": "Counter",
									"nameLocation": "454:7:8",
									"nodeType": "StructDefinition",
									"scope": 1698,
									"src": "447:374:8",
									"visibility": "public"
								},
								{
									"body": {
										"id": 1641,
										"nodeType": "Block",
										"src": "901:38:8",
										"statements": [
											{
												"expression": {
													"expression": {
														"id": 1638,
														"name": "counter",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1633,
														"src": "918:7:8",
														"typeDescriptions": {
															"typeIdentifier": "t_struct$_Counter_$1630_storage_ptr",
															"typeString": "struct Counters.Counter storage pointer"
														}
													},
													"id": 1639,
													"isConstant": false,
													"isLValue": true,
													"isPure": false,
													"lValueRequested": false,
													"memberLocation": "926:6:8",
													"memberName": "_value",
													"nodeType": "MemberAccess",
													"referencedDeclaration": 1629,
													"src": "918:14:8",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 1637,
												"id": 1640,
												"nodeType": "Return",
												"src": "911:21:8"
											}
										]
									},
									"id": 1642,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "current",
									"nameLocation": "836:7:8",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1634,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1633,
												"mutability": "mutable",
												"name": "counter",
												"nameLocation": "860:7:8",
												"nodeType": "VariableDeclaration",
												"scope": 1642,
												"src": "844:23:8",
												"stateVariable": false,
												"storageLocation": "storage",
												"typeDescriptions": {
													"typeIdentifier": "t_struct$_Counter_$1630_storage_ptr",
													"typeString": "struct Counters.Counter"
												},
												"typeName": {
													"id": 1632,
													"nodeType": "UserDefinedTypeName",
													"pathNode": {
														"id": 1631,
														"name": "Counter",
														"nameLocations": [
															"844:7:8"
														],
														"nodeType": "IdentifierPath",
														"referencedDeclaration": 1630,
														"src": "844:7:8"
													},
													"referencedDeclaration": 1630,
													"src": "844:7:8",
													"typeDescriptions": {
														"typeIdentifier": "t_struct$_Counter_$1630_storage_ptr",
														"typeString": "struct Counters.Counter"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "843:25:8"
									},
									"returnParameters": {
										"id": 1637,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1636,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1642,
												"src": "892:7:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1635,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "892:7:8",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "891:9:8"
									},
									"scope": 1698,
									"src": "827:112:8",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1655,
										"nodeType": "Block",
										"src": "998:70:8",
										"statements": [
											{
												"id": 1654,
												"nodeType": "UncheckedBlock",
												"src": "1008:54:8",
												"statements": [
													{
														"expression": {
															"id": 1652,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftHandSide": {
																"expression": {
																	"id": 1648,
																	"name": "counter",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1645,
																	"src": "1032:7:8",
																	"typeDescriptions": {
																		"typeIdentifier": "t_struct$_Counter_$1630_storage_ptr",
																		"typeString": "struct Counters.Counter storage pointer"
																	}
																},
																"id": 1650,
																"isConstant": false,
																"isLValue": true,
																"isPure": false,
																"lValueRequested": true,
																"memberLocation": "1040:6:8",
																"memberName": "_value",
																"nodeType": "MemberAccess",
																"referencedDeclaration": 1629,
																"src": "1032:14:8",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "Assignment",
															"operator": "+=",
															"rightHandSide": {
																"hexValue": "31",
																"id": 1651,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "1050:1:8",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_1_by_1",
																	"typeString": "int_const 1"
																},
																"value": "1"
															},
															"src": "1032:19:8",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"id": 1653,
														"nodeType": "ExpressionStatement",
														"src": "1032:19:8"
													}
												]
											}
										]
									},
									"id": 1656,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "increment",
									"nameLocation": "954:9:8",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1646,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1645,
												"mutability": "mutable",
												"name": "counter",
												"nameLocation": "980:7:8",
												"nodeType": "VariableDeclaration",
												"scope": 1656,
												"src": "964:23:8",
												"stateVariable": false,
												"storageLocation": "storage",
												"typeDescriptions": {
													"typeIdentifier": "t_struct$_Counter_$1630_storage_ptr",
													"typeString": "struct Counters.Counter"
												},
												"typeName": {
													"id": 1644,
													"nodeType": "UserDefinedTypeName",
													"pathNode": {
														"id": 1643,
														"name": "Counter",
														"nameLocations": [
															"964:7:8"
														],
														"nodeType": "IdentifierPath",
														"referencedDeclaration": 1630,
														"src": "964:7:8"
													},
													"referencedDeclaration": 1630,
													"src": "964:7:8",
													"typeDescriptions": {
														"typeIdentifier": "t_struct$_Counter_$1630_storage_ptr",
														"typeString": "struct Counters.Counter"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "963:25:8"
									},
									"returnParameters": {
										"id": 1647,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "998:0:8"
									},
									"scope": 1698,
									"src": "945:123:8",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1683,
										"nodeType": "Block",
										"src": "1127:176:8",
										"statements": [
											{
												"assignments": [
													1663
												],
												"declarations": [
													{
														"constant": false,
														"id": 1663,
														"mutability": "mutable",
														"name": "value",
														"nameLocation": "1145:5:8",
														"nodeType": "VariableDeclaration",
														"scope": 1683,
														"src": "1137:13:8",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 1662,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "1137:7:8",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 1666,
												"initialValue": {
													"expression": {
														"id": 1664,
														"name": "counter",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1659,
														"src": "1153:7:8",
														"typeDescriptions": {
															"typeIdentifier": "t_struct$_Counter_$1630_storage_ptr",
															"typeString": "struct Counters.Counter storage pointer"
														}
													},
													"id": 1665,
													"isConstant": false,
													"isLValue": true,
													"isPure": false,
													"lValueRequested": false,
													"memberLocation": "1161:6:8",
													"memberName": "_value",
													"nodeType": "MemberAccess",
													"referencedDeclaration": 1629,
													"src": "1153:14:8",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "1137:30:8"
											},
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 1670,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 1668,
																"name": "value",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1663,
																"src": "1185:5:8",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">",
															"rightExpression": {
																"hexValue": "30",
																"id": 1669,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "1193:1:8",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															},
															"src": "1185:9:8",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "436f756e7465723a2064656372656d656e74206f766572666c6f77",
															"id": 1671,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "1196:29:8",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_1dfd0d5389474d871b8e8929aab9d4def041f55f90f625754fb5f9a9ba08af6f",
																"typeString": "literal_string \"Counter: decrement overflow\""
															},
															"value": "Counter: decrement overflow"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_1dfd0d5389474d871b8e8929aab9d4def041f55f90f625754fb5f9a9ba08af6f",
																"typeString": "literal_string \"Counter: decrement overflow\""
															}
														],
														"id": 1667,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "1177:7:8",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 1672,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1177:49:8",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1673,
												"nodeType": "ExpressionStatement",
												"src": "1177:49:8"
											},
											{
												"id": 1682,
												"nodeType": "UncheckedBlock",
												"src": "1236:61:8",
												"statements": [
													{
														"expression": {
															"id": 1680,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftHandSide": {
																"expression": {
																	"id": 1674,
																	"name": "counter",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1659,
																	"src": "1260:7:8",
																	"typeDescriptions": {
																		"typeIdentifier": "t_struct$_Counter_$1630_storage_ptr",
																		"typeString": "struct Counters.Counter storage pointer"
																	}
																},
																"id": 1676,
																"isConstant": false,
																"isLValue": true,
																"isPure": false,
																"lValueRequested": true,
																"memberLocation": "1268:6:8",
																"memberName": "_value",
																"nodeType": "MemberAccess",
																"referencedDeclaration": 1629,
																"src": "1260:14:8",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "Assignment",
															"operator": "=",
															"rightHandSide": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 1679,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"id": 1677,
																	"name": "value",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1663,
																	"src": "1277:5:8",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": "-",
																"rightExpression": {
																	"hexValue": "31",
																	"id": 1678,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "1285:1:8",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_1_by_1",
																		"typeString": "int_const 1"
																	},
																	"value": "1"
																},
																"src": "1277:9:8",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "1260:26:8",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"id": 1681,
														"nodeType": "ExpressionStatement",
														"src": "1260:26:8"
													}
												]
											}
										]
									},
									"id": 1684,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "decrement",
									"nameLocation": "1083:9:8",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1660,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1659,
												"mutability": "mutable",
												"name": "counter",
												"nameLocation": "1109:7:8",
												"nodeType": "VariableDeclaration",
												"scope": 1684,
												"src": "1093:23:8",
												"stateVariable": false,
												"storageLocation": "storage",
												"typeDescriptions": {
													"typeIdentifier": "t_struct$_Counter_$1630_storage_ptr",
													"typeString": "struct Counters.Counter"
												},
												"typeName": {
													"id": 1658,
													"nodeType": "UserDefinedTypeName",
													"pathNode": {
														"id": 1657,
														"name": "Counter",
														"nameLocations": [
															"1093:7:8"
														],
														"nodeType": "IdentifierPath",
														"referencedDeclaration": 1630,
														"src": "1093:7:8"
													},
													"referencedDeclaration": 1630,
													"src": "1093:7:8",
													"typeDescriptions": {
														"typeIdentifier": "t_struct$_Counter_$1630_storage_ptr",
														"typeString": "struct Counters.Counter"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1092:25:8"
									},
									"returnParameters": {
										"id": 1661,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1127:0:8"
									},
									"scope": 1698,
									"src": "1074:229:8",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1696,
										"nodeType": "Block",
										"src": "1358:35:8",
										"statements": [
											{
												"expression": {
													"id": 1694,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"expression": {
															"id": 1690,
															"name": "counter",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1687,
															"src": "1368:7:8",
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_Counter_$1630_storage_ptr",
																"typeString": "struct Counters.Counter storage pointer"
															}
														},
														"id": 1692,
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"memberLocation": "1376:6:8",
														"memberName": "_value",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 1629,
														"src": "1368:14:8",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"hexValue": "30",
														"id": 1693,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "1385:1:8",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_0_by_1",
															"typeString": "int_const 0"
														},
														"value": "0"
													},
													"src": "1368:18:8",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 1695,
												"nodeType": "ExpressionStatement",
												"src": "1368:18:8"
											}
										]
									},
									"id": 1697,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "reset",
									"nameLocation": "1318:5:8",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1688,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1687,
												"mutability": "mutable",
												"name": "counter",
												"nameLocation": "1340:7:8",
												"nodeType": "VariableDeclaration",
												"scope": 1697,
												"src": "1324:23:8",
												"stateVariable": false,
												"storageLocation": "storage",
												"typeDescriptions": {
													"typeIdentifier": "t_struct$_Counter_$1630_storage_ptr",
													"typeString": "struct Counters.Counter"
												},
												"typeName": {
													"id": 1686,
													"nodeType": "UserDefinedTypeName",
													"pathNode": {
														"id": 1685,
														"name": "Counter",
														"nameLocations": [
															"1324:7:8"
														],
														"nodeType": "IdentifierPath",
														"referencedDeclaration": 1630,
														"src": "1324:7:8"
													},
													"referencedDeclaration": 1630,
													"src": "1324:7:8",
													"typeDescriptions": {
														"typeIdentifier": "t_struct$_Counter_$1630_storage_ptr",
														"typeString": "struct Counters.Counter"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1323:25:8"
									},
									"returnParameters": {
										"id": 1689,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1358:0:8"
									},
									"scope": 1698,
									"src": "1309:84:8",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								}
							],
							"scope": 1699,
							"src": "424:971:8",
							"usedErrors": [],
							"usedEvents": []
						}
					],
					"src": "87:1309:8"
				},
				"id": 8
			},
			"@openzeppelin/contracts/utils/Strings.sol": {
				"ast": {
					"absolutePath": "@openzeppelin/contracts/utils/Strings.sol",
					"exportedSymbols": {
						"Math": [
							2774
						],
						"Strings": [
							1873
						]
					},
					"id": 1874,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 1700,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".0"
							],
							"nodeType": "PragmaDirective",
							"src": "101:23:9"
						},
						{
							"absolutePath": "@openzeppelin/contracts/utils/math/Math.sol",
							"file": "./math/Math.sol",
							"id": 1701,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 1874,
							"sourceUnit": 2775,
							"src": "126:25:9",
							"symbolAliases": [],
							"unitAlias": ""
						},
						{
							"abstract": false,
							"baseContracts": [],
							"canonicalName": "Strings",
							"contractDependencies": [],
							"contractKind": "library",
							"documentation": {
								"id": 1702,
								"nodeType": "StructuredDocumentation",
								"src": "153:34:9",
								"text": " @dev String operations."
							},
							"fullyImplemented": true,
							"id": 1873,
							"linearizedBaseContracts": [
								1873
							],
							"name": "Strings",
							"nameLocation": "196:7:9",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"constant": true,
									"id": 1705,
									"mutability": "constant",
									"name": "_SYMBOLS",
									"nameLocation": "235:8:9",
									"nodeType": "VariableDeclaration",
									"scope": 1873,
									"src": "210:54:9",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_bytes16",
										"typeString": "bytes16"
									},
									"typeName": {
										"id": 1703,
										"name": "bytes16",
										"nodeType": "ElementaryTypeName",
										"src": "210:7:9",
										"typeDescriptions": {
											"typeIdentifier": "t_bytes16",
											"typeString": "bytes16"
										}
									},
									"value": {
										"hexValue": "30313233343536373839616263646566",
										"id": 1704,
										"isConstant": false,
										"isLValue": false,
										"isPure": true,
										"kind": "string",
										"lValueRequested": false,
										"nodeType": "Literal",
										"src": "246:18:9",
										"typeDescriptions": {
											"typeIdentifier": "t_stringliteral_cb29997ed99ead0db59ce4d12b7d3723198c827273e5796737c926d78019c39f",
											"typeString": "literal_string \"0123456789abcdef\""
										},
										"value": "0123456789abcdef"
									},
									"visibility": "private"
								},
								{
									"constant": true,
									"id": 1708,
									"mutability": "constant",
									"name": "_ADDRESS_LENGTH",
									"nameLocation": "293:15:9",
									"nodeType": "VariableDeclaration",
									"scope": 1873,
									"src": "270:43:9",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_uint8",
										"typeString": "uint8"
									},
									"typeName": {
										"id": 1706,
										"name": "uint8",
										"nodeType": "ElementaryTypeName",
										"src": "270:5:9",
										"typeDescriptions": {
											"typeIdentifier": "t_uint8",
											"typeString": "uint8"
										}
									},
									"value": {
										"hexValue": "3230",
										"id": 1707,
										"isConstant": false,
										"isLValue": false,
										"isPure": true,
										"kind": "number",
										"lValueRequested": false,
										"nodeType": "Literal",
										"src": "311:2:9",
										"typeDescriptions": {
											"typeIdentifier": "t_rational_20_by_1",
											"typeString": "int_const 20"
										},
										"value": "20"
									},
									"visibility": "private"
								},
								{
									"body": {
										"id": 1755,
										"nodeType": "Block",
										"src": "486:625:9",
										"statements": [
											{
												"id": 1754,
												"nodeType": "UncheckedBlock",
												"src": "496:609:9",
												"statements": [
													{
														"assignments": [
															1717
														],
														"declarations": [
															{
																"constant": false,
																"id": 1717,
																"mutability": "mutable",
																"name": "length",
																"nameLocation": "528:6:9",
																"nodeType": "VariableDeclaration",
																"scope": 1754,
																"src": "520:14:9",
																"stateVariable": false,
																"storageLocation": "default",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"typeName": {
																	"id": 1716,
																	"name": "uint256",
																	"nodeType": "ElementaryTypeName",
																	"src": "520:7:9",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"visibility": "internal"
															}
														],
														"id": 1724,
														"initialValue": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 1723,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"arguments": [
																	{
																		"id": 1720,
																		"name": "value",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1711,
																		"src": "548:5:9",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	],
																	"expression": {
																		"id": 1718,
																		"name": "Math",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 2774,
																		"src": "537:4:9",
																		"typeDescriptions": {
																			"typeIdentifier": "t_type$_t_contract$_Math_$2774_$",
																			"typeString": "type(library Math)"
																		}
																	},
																	"id": 1719,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"memberLocation": "542:5:9",
																	"memberName": "log10",
																	"nodeType": "MemberAccess",
																	"referencedDeclaration": 2611,
																	"src": "537:10:9",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_internal_pure$_t_uint256_$returns$_t_uint256_$",
																		"typeString": "function (uint256) pure returns (uint256)"
																	}
																},
																"id": 1721,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "537:17:9",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "+",
															"rightExpression": {
																"hexValue": "31",
																"id": 1722,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "557:1:9",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_1_by_1",
																	"typeString": "int_const 1"
																},
																"value": "1"
															},
															"src": "537:21:9",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"nodeType": "VariableDeclarationStatement",
														"src": "520:38:9"
													},
													{
														"assignments": [
															1726
														],
														"declarations": [
															{
																"constant": false,
																"id": 1726,
																"mutability": "mutable",
																"name": "buffer",
																"nameLocation": "586:6:9",
																"nodeType": "VariableDeclaration",
																"scope": 1754,
																"src": "572:20:9",
																"stateVariable": false,
																"storageLocation": "memory",
																"typeDescriptions": {
																	"typeIdentifier": "t_string_memory_ptr",
																	"typeString": "string"
																},
																"typeName": {
																	"id": 1725,
																	"name": "string",
																	"nodeType": "ElementaryTypeName",
																	"src": "572:6:9",
																	"typeDescriptions": {
																		"typeIdentifier": "t_string_storage_ptr",
																		"typeString": "string"
																	}
																},
																"visibility": "internal"
															}
														],
														"id": 1731,
														"initialValue": {
															"arguments": [
																{
																	"id": 1729,
																	"name": "length",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1717,
																	"src": "606:6:9",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																],
																"id": 1728,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "NewExpression",
																"src": "595:10:9",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_objectcreation_pure$_t_uint256_$returns$_t_string_memory_ptr_$",
																	"typeString": "function (uint256) pure returns (string memory)"
																},
																"typeName": {
																	"id": 1727,
																	"name": "string",
																	"nodeType": "ElementaryTypeName",
																	"src": "599:6:9",
																	"typeDescriptions": {
																		"typeIdentifier": "t_string_storage_ptr",
																		"typeString": "string"
																	}
																}
															},
															"id": 1730,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "595:18:9",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_string_memory_ptr",
																"typeString": "string memory"
															}
														},
														"nodeType": "VariableDeclarationStatement",
														"src": "572:41:9"
													},
													{
														"assignments": [
															1733
														],
														"declarations": [
															{
																"constant": false,
																"id": 1733,
																"mutability": "mutable",
																"name": "ptr",
																"nameLocation": "635:3:9",
																"nodeType": "VariableDeclaration",
																"scope": 1754,
																"src": "627:11:9",
																"stateVariable": false,
																"storageLocation": "default",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"typeName": {
																	"id": 1732,
																	"name": "uint256",
																	"nodeType": "ElementaryTypeName",
																	"src": "627:7:9",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"visibility": "internal"
															}
														],
														"id": 1734,
														"nodeType": "VariableDeclarationStatement",
														"src": "627:11:9"
													},
													{
														"AST": {
															"nativeSrc": "708:67:9",
															"nodeType": "YulBlock",
															"src": "708:67:9",
															"statements": [
																{
																	"nativeSrc": "726:35:9",
																	"nodeType": "YulAssignment",
																	"src": "726:35:9",
																	"value": {
																		"arguments": [
																			{
																				"name": "buffer",
																				"nativeSrc": "737:6:9",
																				"nodeType": "YulIdentifier",
																				"src": "737:6:9"
																			},
																			{
																				"arguments": [
																					{
																						"kind": "number",
																						"nativeSrc": "749:2:9",
																						"nodeType": "YulLiteral",
																						"src": "749:2:9",
																						"type": "",
																						"value": "32"
																					},
																					{
																						"name": "length",
																						"nativeSrc": "753:6:9",
																						"nodeType": "YulIdentifier",
																						"src": "753:6:9"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "745:3:9",
																					"nodeType": "YulIdentifier",
																					"src": "745:3:9"
																				},
																				"nativeSrc": "745:15:9",
																				"nodeType": "YulFunctionCall",
																				"src": "745:15:9"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "733:3:9",
																			"nodeType": "YulIdentifier",
																			"src": "733:3:9"
																		},
																		"nativeSrc": "733:28:9",
																		"nodeType": "YulFunctionCall",
																		"src": "733:28:9"
																	},
																	"variableNames": [
																		{
																			"name": "ptr",
																			"nativeSrc": "726:3:9",
																			"nodeType": "YulIdentifier",
																			"src": "726:3:9"
																		}
																	]
																}
															]
														},
														"documentation": "@solidity memory-safe-assembly",
														"evmVersion": "shanghai",
														"externalReferences": [
															{
																"declaration": 1726,
																"isOffset": false,
																"isSlot": false,
																"src": "737:6:9",
																"valueSize": 1
															},
															{
																"declaration": 1717,
																"isOffset": false,
																"isSlot": false,
																"src": "753:6:9",
																"valueSize": 1
															},
															{
																"declaration": 1733,
																"isOffset": false,
																"isSlot": false,
																"src": "726:3:9",
																"valueSize": 1
															}
														],
														"id": 1735,
														"nodeType": "InlineAssembly",
														"src": "699:76:9"
													},
													{
														"body": {
															"id": 1750,
															"nodeType": "Block",
															"src": "801:267:9",
															"statements": [
																{
																	"expression": {
																		"id": 1738,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"nodeType": "UnaryOperation",
																		"operator": "--",
																		"prefix": false,
																		"src": "819:5:9",
																		"subExpression": {
																			"id": 1737,
																			"name": "ptr",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1733,
																			"src": "819:3:9",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 1739,
																	"nodeType": "ExpressionStatement",
																	"src": "819:5:9"
																},
																{
																	"AST": {
																		"nativeSrc": "902:84:9",
																		"nodeType": "YulBlock",
																		"src": "902:84:9",
																		"statements": [
																			{
																				"expression": {
																					"arguments": [
																						{
																							"name": "ptr",
																							"nativeSrc": "932:3:9",
																							"nodeType": "YulIdentifier",
																							"src": "932:3:9"
																						},
																						{
																							"arguments": [
																								{
																									"arguments": [
																										{
																											"name": "value",
																											"nativeSrc": "946:5:9",
																											"nodeType": "YulIdentifier",
																											"src": "946:5:9"
																										},
																										{
																											"kind": "number",
																											"nativeSrc": "953:2:9",
																											"nodeType": "YulLiteral",
																											"src": "953:2:9",
																											"type": "",
																											"value": "10"
																										}
																									],
																									"functionName": {
																										"name": "mod",
																										"nativeSrc": "942:3:9",
																										"nodeType": "YulIdentifier",
																										"src": "942:3:9"
																									},
																									"nativeSrc": "942:14:9",
																									"nodeType": "YulFunctionCall",
																									"src": "942:14:9"
																								},
																								{
																									"name": "_SYMBOLS",
																									"nativeSrc": "958:8:9",
																									"nodeType": "YulIdentifier",
																									"src": "958:8:9"
																								}
																							],
																							"functionName": {
																								"name": "byte",
																								"nativeSrc": "937:4:9",
																								"nodeType": "YulIdentifier",
																								"src": "937:4:9"
																							},
																							"nativeSrc": "937:30:9",
																							"nodeType": "YulFunctionCall",
																							"src": "937:30:9"
																						}
																					],
																					"functionName": {
																						"name": "mstore8",
																						"nativeSrc": "924:7:9",
																						"nodeType": "YulIdentifier",
																						"src": "924:7:9"
																					},
																					"nativeSrc": "924:44:9",
																					"nodeType": "YulFunctionCall",
																					"src": "924:44:9"
																				},
																				"nativeSrc": "924:44:9",
																				"nodeType": "YulExpressionStatement",
																				"src": "924:44:9"
																			}
																		]
																	},
																	"documentation": "@solidity memory-safe-assembly",
																	"evmVersion": "shanghai",
																	"externalReferences": [
																		{
																			"declaration": 1705,
																			"isOffset": false,
																			"isSlot": false,
																			"src": "958:8:9",
																			"valueSize": 1
																		},
																		{
																			"declaration": 1733,
																			"isOffset": false,
																			"isSlot": false,
																			"src": "932:3:9",
																			"valueSize": 1
																		},
																		{
																			"declaration": 1711,
																			"isOffset": false,
																			"isSlot": false,
																			"src": "946:5:9",
																			"valueSize": 1
																		}
																	],
																	"id": 1740,
																	"nodeType": "InlineAssembly",
																	"src": "893:93:9"
																},
																{
																	"expression": {
																		"id": 1743,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"id": 1741,
																			"name": "value",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1711,
																			"src": "1003:5:9",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": "/=",
																		"rightHandSide": {
																			"hexValue": "3130",
																			"id": 1742,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "1012:2:9",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_10_by_1",
																				"typeString": "int_const 10"
																			},
																			"value": "10"
																		},
																		"src": "1003:11:9",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 1744,
																	"nodeType": "ExpressionStatement",
																	"src": "1003:11:9"
																},
																{
																	"condition": {
																		"commonType": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		},
																		"id": 1747,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftExpression": {
																			"id": 1745,
																			"name": "value",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1711,
																			"src": "1036:5:9",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "BinaryOperation",
																		"operator": "==",
																		"rightExpression": {
																			"hexValue": "30",
																			"id": 1746,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "1045:1:9",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_0_by_1",
																				"typeString": "int_const 0"
																			},
																			"value": "0"
																		},
																		"src": "1036:10:9",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bool",
																			"typeString": "bool"
																		}
																	},
																	"id": 1749,
																	"nodeType": "IfStatement",
																	"src": "1032:21:9",
																	"trueBody": {
																		"id": 1748,
																		"nodeType": "Break",
																		"src": "1048:5:9"
																	}
																}
															]
														},
														"condition": {
															"hexValue": "74727565",
															"id": 1736,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "bool",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "795:4:9",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															"value": "true"
														},
														"id": 1751,
														"nodeType": "WhileStatement",
														"src": "788:280:9"
													},
													{
														"expression": {
															"id": 1752,
															"name": "buffer",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1726,
															"src": "1088:6:9",
															"typeDescriptions": {
																"typeIdentifier": "t_string_memory_ptr",
																"typeString": "string memory"
															}
														},
														"functionReturnParameters": 1715,
														"id": 1753,
														"nodeType": "Return",
														"src": "1081:13:9"
													}
												]
											}
										]
									},
									"documentation": {
										"id": 1709,
										"nodeType": "StructuredDocumentation",
										"src": "320:90:9",
										"text": " @dev Converts a `uint256` to its ASCII `string` decimal representation."
									},
									"id": 1756,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "toString",
									"nameLocation": "424:8:9",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1712,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1711,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "441:5:9",
												"nodeType": "VariableDeclaration",
												"scope": 1756,
												"src": "433:13:9",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1710,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "433:7:9",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "432:15:9"
									},
									"returnParameters": {
										"id": 1715,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1714,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1756,
												"src": "471:13:9",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 1713,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "471:6:9",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "470:15:9"
									},
									"scope": 1873,
									"src": "415:696:9",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1775,
										"nodeType": "Block",
										"src": "1290:100:9",
										"statements": [
											{
												"id": 1774,
												"nodeType": "UncheckedBlock",
												"src": "1300:84:9",
												"statements": [
													{
														"expression": {
															"arguments": [
																{
																	"id": 1765,
																	"name": "value",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1759,
																	"src": "1343:5:9",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																{
																	"commonType": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	"id": 1771,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"leftExpression": {
																		"arguments": [
																			{
																				"id": 1768,
																				"name": "value",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 1759,
																				"src": "1362:5:9",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			}
																		],
																		"expression": {
																			"argumentTypes": [
																				{
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			],
																			"expression": {
																				"id": 1766,
																				"name": "Math",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 2774,
																				"src": "1350:4:9",
																				"typeDescriptions": {
																					"typeIdentifier": "t_type$_t_contract$_Math_$2774_$",
																					"typeString": "type(library Math)"
																				}
																			},
																			"id": 1767,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"memberLocation": "1355:6:9",
																			"memberName": "log256",
																			"nodeType": "MemberAccess",
																			"referencedDeclaration": 2734,
																			"src": "1350:11:9",
																			"typeDescriptions": {
																				"typeIdentifier": "t_function_internal_pure$_t_uint256_$returns$_t_uint256_$",
																				"typeString": "function (uint256) pure returns (uint256)"
																			}
																		},
																		"id": 1769,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"kind": "functionCall",
																		"lValueRequested": false,
																		"nameLocations": [],
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "1350:18:9",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"nodeType": "BinaryOperation",
																	"operator": "+",
																	"rightExpression": {
																		"hexValue": "31",
																		"id": 1770,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "1371:1:9",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_1_by_1",
																			"typeString": "int_const 1"
																		},
																		"value": "1"
																	},
																	"src": "1350:22:9",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	{
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																],
																"id": 1764,
																"name": "toHexString",
																"nodeType": "Identifier",
																"overloadedDeclarations": [
																	1776,
																	1852,
																	1872
																],
																"referencedDeclaration": 1852,
																"src": "1331:11:9",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_string_memory_ptr_$",
																	"typeString": "function (uint256,uint256) pure returns (string memory)"
																}
															},
															"id": 1772,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "1331:42:9",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_string_memory_ptr",
																"typeString": "string memory"
															}
														},
														"functionReturnParameters": 1763,
														"id": 1773,
														"nodeType": "Return",
														"src": "1324:49:9"
													}
												]
											}
										]
									},
									"documentation": {
										"id": 1757,
										"nodeType": "StructuredDocumentation",
										"src": "1117:94:9",
										"text": " @dev Converts a `uint256` to its ASCII `string` hexadecimal representation."
									},
									"id": 1776,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "toHexString",
									"nameLocation": "1225:11:9",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1760,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1759,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "1245:5:9",
												"nodeType": "VariableDeclaration",
												"scope": 1776,
												"src": "1237:13:9",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1758,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1237:7:9",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1236:15:9"
									},
									"returnParameters": {
										"id": 1763,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1762,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1776,
												"src": "1275:13:9",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 1761,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "1275:6:9",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1274:15:9"
									},
									"scope": 1873,
									"src": "1216:174:9",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1851,
										"nodeType": "Block",
										"src": "1603:347:9",
										"statements": [
											{
												"assignments": [
													1787
												],
												"declarations": [
													{
														"constant": false,
														"id": 1787,
														"mutability": "mutable",
														"name": "buffer",
														"nameLocation": "1626:6:9",
														"nodeType": "VariableDeclaration",
														"scope": 1851,
														"src": "1613:19:9",
														"stateVariable": false,
														"storageLocation": "memory",
														"typeDescriptions": {
															"typeIdentifier": "t_bytes_memory_ptr",
															"typeString": "bytes"
														},
														"typeName": {
															"id": 1786,
															"name": "bytes",
															"nodeType": "ElementaryTypeName",
															"src": "1613:5:9",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_storage_ptr",
																"typeString": "bytes"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 1796,
												"initialValue": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 1794,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 1792,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"hexValue": "32",
																	"id": 1790,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "1645:1:9",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_2_by_1",
																		"typeString": "int_const 2"
																	},
																	"value": "2"
																},
																"nodeType": "BinaryOperation",
																"operator": "*",
																"rightExpression": {
																	"id": 1791,
																	"name": "length",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1781,
																	"src": "1649:6:9",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "1645:10:9",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "+",
															"rightExpression": {
																"hexValue": "32",
																"id": 1793,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "1658:1:9",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_2_by_1",
																	"typeString": "int_const 2"
																},
																"value": "2"
															},
															"src": "1645:14:9",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 1789,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"lValueRequested": false,
														"nodeType": "NewExpression",
														"src": "1635:9:9",
														"typeDescriptions": {
															"typeIdentifier": "t_function_objectcreation_pure$_t_uint256_$returns$_t_bytes_memory_ptr_$",
															"typeString": "function (uint256) pure returns (bytes memory)"
														},
														"typeName": {
															"id": 1788,
															"name": "bytes",
															"nodeType": "ElementaryTypeName",
															"src": "1639:5:9",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_storage_ptr",
																"typeString": "bytes"
															}
														}
													},
													"id": 1795,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1635:25:9",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_memory_ptr",
														"typeString": "bytes memory"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "1613:47:9"
											},
											{
												"expression": {
													"id": 1801,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"baseExpression": {
															"id": 1797,
															"name": "buffer",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1787,
															"src": "1670:6:9",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														},
														"id": 1799,
														"indexExpression": {
															"hexValue": "30",
															"id": 1798,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "number",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "1677:1:9",
															"typeDescriptions": {
																"typeIdentifier": "t_rational_0_by_1",
																"typeString": "int_const 0"
															},
															"value": "0"
														},
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"nodeType": "IndexAccess",
														"src": "1670:9:9",
														"typeDescriptions": {
															"typeIdentifier": "t_bytes1",
															"typeString": "bytes1"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"hexValue": "30",
														"id": 1800,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "string",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "1682:3:9",
														"typeDescriptions": {
															"typeIdentifier": "t_stringliteral_044852b2a670ade5407e78fb2863c51de9fcb96542a07186fe3aeda6bb8a116d",
															"typeString": "literal_string \"0\""
														},
														"value": "0"
													},
													"src": "1670:15:9",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes1",
														"typeString": "bytes1"
													}
												},
												"id": 1802,
												"nodeType": "ExpressionStatement",
												"src": "1670:15:9"
											},
											{
												"expression": {
													"id": 1807,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"baseExpression": {
															"id": 1803,
															"name": "buffer",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1787,
															"src": "1695:6:9",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														},
														"id": 1805,
														"indexExpression": {
															"hexValue": "31",
															"id": 1804,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "number",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "1702:1:9",
															"typeDescriptions": {
																"typeIdentifier": "t_rational_1_by_1",
																"typeString": "int_const 1"
															},
															"value": "1"
														},
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"nodeType": "IndexAccess",
														"src": "1695:9:9",
														"typeDescriptions": {
															"typeIdentifier": "t_bytes1",
															"typeString": "bytes1"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"hexValue": "78",
														"id": 1806,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "string",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "1707:3:9",
														"typeDescriptions": {
															"typeIdentifier": "t_stringliteral_7521d1cadbcfa91eec65aa16715b94ffc1c9654ba57ea2ef1a2127bca1127a83",
															"typeString": "literal_string \"x\""
														},
														"value": "x"
													},
													"src": "1695:15:9",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes1",
														"typeString": "bytes1"
													}
												},
												"id": 1808,
												"nodeType": "ExpressionStatement",
												"src": "1695:15:9"
											},
											{
												"body": {
													"id": 1837,
													"nodeType": "Block",
													"src": "1765:83:9",
													"statements": [
														{
															"expression": {
																"id": 1831,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftHandSide": {
																	"baseExpression": {
																		"id": 1823,
																		"name": "buffer",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1787,
																		"src": "1779:6:9",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bytes_memory_ptr",
																			"typeString": "bytes memory"
																		}
																	},
																	"id": 1825,
																	"indexExpression": {
																		"id": 1824,
																		"name": "i",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1810,
																		"src": "1786:1:9",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"isConstant": false,
																	"isLValue": true,
																	"isPure": false,
																	"lValueRequested": true,
																	"nodeType": "IndexAccess",
																	"src": "1779:9:9",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bytes1",
																		"typeString": "bytes1"
																	}
																},
																"nodeType": "Assignment",
																"operator": "=",
																"rightHandSide": {
																	"baseExpression": {
																		"id": 1826,
																		"name": "_SYMBOLS",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1705,
																		"src": "1791:8:9",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bytes16",
																			"typeString": "bytes16"
																		}
																	},
																	"id": 1830,
																	"indexExpression": {
																		"commonType": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		},
																		"id": 1829,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftExpression": {
																			"id": 1827,
																			"name": "value",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1779,
																			"src": "1800:5:9",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "BinaryOperation",
																		"operator": "&",
																		"rightExpression": {
																			"hexValue": "307866",
																			"id": 1828,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "1808:3:9",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_15_by_1",
																				"typeString": "int_const 15"
																			},
																			"value": "0xf"
																		},
																		"src": "1800:11:9",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"nodeType": "IndexAccess",
																	"src": "1791:21:9",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bytes1",
																		"typeString": "bytes1"
																	}
																},
																"src": "1779:33:9",
																"typeDescriptions": {
																	"typeIdentifier": "t_bytes1",
																	"typeString": "bytes1"
																}
															},
															"id": 1832,
															"nodeType": "ExpressionStatement",
															"src": "1779:33:9"
														},
														{
															"expression": {
																"id": 1835,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftHandSide": {
																	"id": 1833,
																	"name": "value",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1779,
																	"src": "1826:5:9",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "Assignment",
																"operator": ">>=",
																"rightHandSide": {
																	"hexValue": "34",
																	"id": 1834,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "1836:1:9",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_4_by_1",
																		"typeString": "int_const 4"
																	},
																	"value": "4"
																},
																"src": "1826:11:9",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"id": 1836,
															"nodeType": "ExpressionStatement",
															"src": "1826:11:9"
														}
													]
												},
												"condition": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 1819,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 1817,
														"name": "i",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1810,
														"src": "1753:1:9",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": ">",
													"rightExpression": {
														"hexValue": "31",
														"id": 1818,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "1757:1:9",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_1_by_1",
															"typeString": "int_const 1"
														},
														"value": "1"
													},
													"src": "1753:5:9",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 1838,
												"initializationExpression": {
													"assignments": [
														1810
													],
													"declarations": [
														{
															"constant": false,
															"id": 1810,
															"mutability": "mutable",
															"name": "i",
															"nameLocation": "1733:1:9",
															"nodeType": "VariableDeclaration",
															"scope": 1838,
															"src": "1725:9:9",
															"stateVariable": false,
															"storageLocation": "default",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"typeName": {
																"id": 1809,
																"name": "uint256",
																"nodeType": "ElementaryTypeName",
																"src": "1725:7:9",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"visibility": "internal"
														}
													],
													"id": 1816,
													"initialValue": {
														"commonType": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"id": 1815,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftExpression": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 1813,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"hexValue": "32",
																"id": 1811,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "1737:1:9",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_2_by_1",
																	"typeString": "int_const 2"
																},
																"value": "2"
															},
															"nodeType": "BinaryOperation",
															"operator": "*",
															"rightExpression": {
																"id": 1812,
																"name": "length",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1781,
																"src": "1741:6:9",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "1737:10:9",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"nodeType": "BinaryOperation",
														"operator": "+",
														"rightExpression": {
															"hexValue": "31",
															"id": 1814,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "number",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "1750:1:9",
															"typeDescriptions": {
																"typeIdentifier": "t_rational_1_by_1",
																"typeString": "int_const 1"
															},
															"value": "1"
														},
														"src": "1737:14:9",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "VariableDeclarationStatement",
													"src": "1725:26:9"
												},
												"loopExpression": {
													"expression": {
														"id": 1821,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"nodeType": "UnaryOperation",
														"operator": "--",
														"prefix": true,
														"src": "1760:3:9",
														"subExpression": {
															"id": 1820,
															"name": "i",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1810,
															"src": "1762:1:9",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"id": 1822,
													"nodeType": "ExpressionStatement",
													"src": "1760:3:9"
												},
												"nodeType": "ForStatement",
												"src": "1720:128:9"
											},
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 1842,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 1840,
																"name": "value",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1779,
																"src": "1865:5:9",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "==",
															"rightExpression": {
																"hexValue": "30",
																"id": 1841,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "1874:1:9",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															},
															"src": "1865:10:9",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "537472696e67733a20686578206c656e67746820696e73756666696369656e74",
															"id": 1843,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "1877:34:9",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_04fc88320d7c9f639317c75102c103ff0044d3075a5c627e24e76e5bbb2733c2",
																"typeString": "literal_string \"Strings: hex length insufficient\""
															},
															"value": "Strings: hex length insufficient"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_04fc88320d7c9f639317c75102c103ff0044d3075a5c627e24e76e5bbb2733c2",
																"typeString": "literal_string \"Strings: hex length insufficient\""
															}
														],
														"id": 1839,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "1857:7:9",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 1844,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1857:55:9",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1845,
												"nodeType": "ExpressionStatement",
												"src": "1857:55:9"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 1848,
															"name": "buffer",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1787,
															"src": "1936:6:9",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														],
														"id": 1847,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"lValueRequested": false,
														"nodeType": "ElementaryTypeNameExpression",
														"src": "1929:6:9",
														"typeDescriptions": {
															"typeIdentifier": "t_type$_t_string_storage_ptr_$",
															"typeString": "type(string storage pointer)"
														},
														"typeName": {
															"id": 1846,
															"name": "string",
															"nodeType": "ElementaryTypeName",
															"src": "1929:6:9",
															"typeDescriptions": {}
														}
													},
													"id": 1849,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "typeConversion",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1929:14:9",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_string_memory_ptr",
														"typeString": "string memory"
													}
												},
												"functionReturnParameters": 1785,
												"id": 1850,
												"nodeType": "Return",
												"src": "1922:21:9"
											}
										]
									},
									"documentation": {
										"id": 1777,
										"nodeType": "StructuredDocumentation",
										"src": "1396:112:9",
										"text": " @dev Converts a `uint256` to its ASCII `string` hexadecimal representation with fixed length."
									},
									"id": 1852,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "toHexString",
									"nameLocation": "1522:11:9",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1782,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1779,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "1542:5:9",
												"nodeType": "VariableDeclaration",
												"scope": 1852,
												"src": "1534:13:9",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1778,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1534:7:9",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1781,
												"mutability": "mutable",
												"name": "length",
												"nameLocation": "1557:6:9",
												"nodeType": "VariableDeclaration",
												"scope": 1852,
												"src": "1549:14:9",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1780,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1549:7:9",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1533:31:9"
									},
									"returnParameters": {
										"id": 1785,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1784,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1852,
												"src": "1588:13:9",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 1783,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "1588:6:9",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1587:15:9"
									},
									"scope": 1873,
									"src": "1513:437:9",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1871,
										"nodeType": "Block",
										"src": "2175:76:9",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"arguments": [
																{
																	"arguments": [
																		{
																			"id": 1865,
																			"name": "addr",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1855,
																			"src": "2220:4:9",
																			"typeDescriptions": {
																				"typeIdentifier": "t_address",
																				"typeString": "address"
																			}
																		}
																	],
																	"expression": {
																		"argumentTypes": [
																			{
																				"typeIdentifier": "t_address",
																				"typeString": "address"
																			}
																		],
																		"id": 1864,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"lValueRequested": false,
																		"nodeType": "ElementaryTypeNameExpression",
																		"src": "2212:7:9",
																		"typeDescriptions": {
																			"typeIdentifier": "t_type$_t_uint160_$",
																			"typeString": "type(uint160)"
																		},
																		"typeName": {
																			"id": 1863,
																			"name": "uint160",
																			"nodeType": "ElementaryTypeName",
																			"src": "2212:7:9",
																			"typeDescriptions": {}
																		}
																	},
																	"id": 1866,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"kind": "typeConversion",
																	"lValueRequested": false,
																	"nameLocations": [],
																	"names": [],
																	"nodeType": "FunctionCall",
																	"src": "2212:13:9",
																	"tryCall": false,
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint160",
																		"typeString": "uint160"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_uint160",
																		"typeString": "uint160"
																	}
																],
																"id": 1862,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "2204:7:9",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_uint256_$",
																	"typeString": "type(uint256)"
																},
																"typeName": {
																	"id": 1861,
																	"name": "uint256",
																	"nodeType": "ElementaryTypeName",
																	"src": "2204:7:9",
																	"typeDescriptions": {}
																}
															},
															"id": 1867,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "typeConversion",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "2204:22:9",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														{
															"id": 1868,
															"name": "_ADDRESS_LENGTH",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1708,
															"src": "2228:15:9",
															"typeDescriptions": {
																"typeIdentifier": "t_uint8",
																"typeString": "uint8"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															{
																"typeIdentifier": "t_uint8",
																"typeString": "uint8"
															}
														],
														"id": 1860,
														"name": "toHexString",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															1776,
															1852,
															1872
														],
														"referencedDeclaration": 1852,
														"src": "2192:11:9",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_string_memory_ptr_$",
															"typeString": "function (uint256,uint256) pure returns (string memory)"
														}
													},
													"id": 1869,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2192:52:9",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_string_memory_ptr",
														"typeString": "string memory"
													}
												},
												"functionReturnParameters": 1859,
												"id": 1870,
												"nodeType": "Return",
												"src": "2185:59:9"
											}
										]
									},
									"documentation": {
										"id": 1853,
										"nodeType": "StructuredDocumentation",
										"src": "1956:141:9",
										"text": " @dev Converts an `address` with fixed length of 20 bytes to its not checksummed ASCII `string` hexadecimal representation."
									},
									"id": 1872,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "toHexString",
									"nameLocation": "2111:11:9",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1856,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1855,
												"mutability": "mutable",
												"name": "addr",
												"nameLocation": "2131:4:9",
												"nodeType": "VariableDeclaration",
												"scope": 1872,
												"src": "2123:12:9",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1854,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2123:7:9",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2122:14:9"
									},
									"returnParameters": {
										"id": 1859,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1858,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1872,
												"src": "2160:13:9",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 1857,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "2160:6:9",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2159:15:9"
									},
									"scope": 1873,
									"src": "2102:149:9",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								}
							],
							"scope": 1874,
							"src": "188:2065:9",
							"usedErrors": [],
							"usedEvents": []
						}
					],
					"src": "101:2153:9"
				},
				"id": 9
			},
			"@openzeppelin/contracts/utils/introspection/ERC165.sol": {
				"ast": {
					"absolutePath": "@openzeppelin/contracts/utils/introspection/ERC165.sol",
					"exportedSymbols": {
						"ERC165": [
							1897
						],
						"IERC165": [
							1909
						]
					},
					"id": 1898,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 1875,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".0"
							],
							"nodeType": "PragmaDirective",
							"src": "99:23:10"
						},
						{
							"absolutePath": "@openzeppelin/contracts/utils/introspection/IERC165.sol",
							"file": "./IERC165.sol",
							"id": 1876,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 1898,
							"sourceUnit": 1910,
							"src": "124:23:10",
							"symbolAliases": [],
							"unitAlias": ""
						},
						{
							"abstract": true,
							"baseContracts": [
								{
									"baseName": {
										"id": 1878,
										"name": "IERC165",
										"nameLocations": [
											"754:7:10"
										],
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 1909,
										"src": "754:7:10"
									},
									"id": 1879,
									"nodeType": "InheritanceSpecifier",
									"src": "754:7:10"
								}
							],
							"canonicalName": "ERC165",
							"contractDependencies": [],
							"contractKind": "contract",
							"documentation": {
								"id": 1877,
								"nodeType": "StructuredDocumentation",
								"src": "149:576:10",
								"text": " @dev Implementation of the {IERC165} interface.\n Contracts that want to implement ERC165 should inherit from this contract and override {supportsInterface} to check\n for the additional interface id that will be supported. For example:\n ```solidity\n function supportsInterface(bytes4 interfaceId) public view virtual override returns (bool) {\n     return interfaceId == type(MyInterface).interfaceId || super.supportsInterface(interfaceId);\n }\n ```\n Alternatively, {ERC165Storage} provides an easier to use but more expensive implementation."
							},
							"fullyImplemented": true,
							"id": 1897,
							"linearizedBaseContracts": [
								1897,
								1909
							],
							"name": "ERC165",
							"nameLocation": "744:6:10",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"baseFunctions": [
										1908
									],
									"body": {
										"id": 1895,
										"nodeType": "Block",
										"src": "920:64:10",
										"statements": [
											{
												"expression": {
													"commonType": {
														"typeIdentifier": "t_bytes4",
														"typeString": "bytes4"
													},
													"id": 1893,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 1888,
														"name": "interfaceId",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1882,
														"src": "937:11:10",
														"typeDescriptions": {
															"typeIdentifier": "t_bytes4",
															"typeString": "bytes4"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "==",
													"rightExpression": {
														"expression": {
															"arguments": [
																{
																	"id": 1890,
																	"name": "IERC165",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1909,
																	"src": "957:7:10",
																	"typeDescriptions": {
																		"typeIdentifier": "t_type$_t_contract$_IERC165_$1909_$",
																		"typeString": "type(contract IERC165)"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_type$_t_contract$_IERC165_$1909_$",
																		"typeString": "type(contract IERC165)"
																	}
																],
																"id": 1889,
																"name": "type",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 4294967269,
																"src": "952:4:10",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_metatype_pure$__$returns$__$",
																	"typeString": "function () pure"
																}
															},
															"id": 1891,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "functionCall",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "952:13:10",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_magic_meta_type_t_contract$_IERC165_$1909",
																"typeString": "type(contract IERC165)"
															}
														},
														"id": 1892,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"lValueRequested": false,
														"memberLocation": "966:11:10",
														"memberName": "interfaceId",
														"nodeType": "MemberAccess",
														"src": "952:25:10",
														"typeDescriptions": {
															"typeIdentifier": "t_bytes4",
															"typeString": "bytes4"
														}
													},
													"src": "937:40:10",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"functionReturnParameters": 1887,
												"id": 1894,
												"nodeType": "Return",
												"src": "930:47:10"
											}
										]
									},
									"documentation": {
										"id": 1880,
										"nodeType": "StructuredDocumentation",
										"src": "768:56:10",
										"text": " @dev See {IERC165-supportsInterface}."
									},
									"functionSelector": "01ffc9a7",
									"id": 1896,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "supportsInterface",
									"nameLocation": "838:17:10",
									"nodeType": "FunctionDefinition",
									"overrides": {
										"id": 1884,
										"nodeType": "OverrideSpecifier",
										"overrides": [],
										"src": "896:8:10"
									},
									"parameters": {
										"id": 1883,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1882,
												"mutability": "mutable",
												"name": "interfaceId",
												"nameLocation": "863:11:10",
												"nodeType": "VariableDeclaration",
												"scope": 1896,
												"src": "856:18:10",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes4",
													"typeString": "bytes4"
												},
												"typeName": {
													"id": 1881,
													"name": "bytes4",
													"nodeType": "ElementaryTypeName",
													"src": "856:6:10",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes4",
														"typeString": "bytes4"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "855:20:10"
									},
									"returnParameters": {
										"id": 1887,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1886,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1896,
												"src": "914:4:10",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 1885,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "914:4:10",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "913:6:10"
									},
									"scope": 1897,
									"src": "829:155:10",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "public"
								}
							],
							"scope": 1898,
							"src": "726:260:10",
							"usedErrors": [],
							"usedEvents": []
						}
					],
					"src": "99:888:10"
				},
				"id": 10
			},
			"@openzeppelin/contracts/utils/introspection/IERC165.sol": {
				"ast": {
					"absolutePath": "@openzeppelin/contracts/utils/introspection/IERC165.sol",
					"exportedSymbols": {
						"IERC165": [
							1909
						]
					},
					"id": 1910,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 1899,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".0"
							],
							"nodeType": "PragmaDirective",
							"src": "100:23:11"
						},
						{
							"abstract": false,
							"baseContracts": [],
							"canonicalName": "IERC165",
							"contractDependencies": [],
							"contractKind": "interface",
							"documentation": {
								"id": 1900,
								"nodeType": "StructuredDocumentation",
								"src": "125:279:11",
								"text": " @dev Interface of the ERC165 standard, as defined in the\n https://eips.ethereum.org/EIPS/eip-165[EIP].\n Implementers can declare support of contract interfaces, which can then be\n queried by others ({ERC165Checker}).\n For an implementation, see {ERC165}."
							},
							"fullyImplemented": false,
							"id": 1909,
							"linearizedBaseContracts": [
								1909
							],
							"name": "IERC165",
							"nameLocation": "415:7:11",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"documentation": {
										"id": 1901,
										"nodeType": "StructuredDocumentation",
										"src": "429:340:11",
										"text": " @dev Returns true if this contract implements the interface defined by\n `interfaceId`. See the corresponding\n https://eips.ethereum.org/EIPS/eip-165#how-interfaces-are-identified[EIP section]\n to learn more about how these ids are created.\n This function call must use less than 30 000 gas."
									},
									"functionSelector": "01ffc9a7",
									"id": 1908,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "supportsInterface",
									"nameLocation": "783:17:11",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1904,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1903,
												"mutability": "mutable",
												"name": "interfaceId",
												"nameLocation": "808:11:11",
												"nodeType": "VariableDeclaration",
												"scope": 1908,
												"src": "801:18:11",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes4",
													"typeString": "bytes4"
												},
												"typeName": {
													"id": 1902,
													"name": "bytes4",
													"nodeType": "ElementaryTypeName",
													"src": "801:6:11",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes4",
														"typeString": "bytes4"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "800:20:11"
									},
									"returnParameters": {
										"id": 1907,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1906,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1908,
												"src": "844:4:11",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 1905,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "844:4:11",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "843:6:11"
									},
									"scope": 1909,
									"src": "774:76:11",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								}
							],
							"scope": 1910,
							"src": "405:447:11",
							"usedErrors": [],
							"usedEvents": []
						}
					],
					"src": "100:753:11"
				},
				"id": 11
			},
			"@openzeppelin/contracts/utils/math/Math.sol": {
				"ast": {
					"absolutePath": "@openzeppelin/contracts/utils/math/Math.sol",
					"exportedSymbols": {
						"Math": [
							2774
						]
					},
					"id": 2775,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 1911,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".0"
							],
							"nodeType": "PragmaDirective",
							"src": "103:23:12"
						},
						{
							"abstract": false,
							"baseContracts": [],
							"canonicalName": "Math",
							"contractDependencies": [],
							"contractKind": "library",
							"documentation": {
								"id": 1912,
								"nodeType": "StructuredDocumentation",
								"src": "128:73:12",
								"text": " @dev Standard math utilities missing in the Solidity language."
							},
							"fullyImplemented": true,
							"id": 2774,
							"linearizedBaseContracts": [
								2774
							],
							"name": "Math",
							"nameLocation": "210:4:12",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"canonicalName": "Math.Rounding",
									"id": 1916,
									"members": [
										{
											"id": 1913,
											"name": "Down",
											"nameLocation": "245:4:12",
											"nodeType": "EnumValue",
											"src": "245:4:12"
										},
										{
											"id": 1914,
											"name": "Up",
											"nameLocation": "287:2:12",
											"nodeType": "EnumValue",
											"src": "287:2:12"
										},
										{
											"id": 1915,
											"name": "Zero",
											"nameLocation": "318:4:12",
											"nodeType": "EnumValue",
											"src": "318:4:12"
										}
									],
									"name": "Rounding",
									"nameLocation": "226:8:12",
									"nodeType": "EnumDefinition",
									"src": "221:122:12"
								},
								{
									"body": {
										"id": 1933,
										"nodeType": "Block",
										"src": "480:37:12",
										"statements": [
											{
												"expression": {
													"condition": {
														"commonType": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"id": 1928,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftExpression": {
															"id": 1926,
															"name": "a",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1919,
															"src": "497:1:12",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"nodeType": "BinaryOperation",
														"operator": ">",
														"rightExpression": {
															"id": 1927,
															"name": "b",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1921,
															"src": "501:1:12",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"src": "497:5:12",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"falseExpression": {
														"id": 1930,
														"name": "b",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1921,
														"src": "509:1:12",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"id": 1931,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "Conditional",
													"src": "497:13:12",
													"trueExpression": {
														"id": 1929,
														"name": "a",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1919,
														"src": "505:1:12",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 1925,
												"id": 1932,
												"nodeType": "Return",
												"src": "490:20:12"
											}
										]
									},
									"documentation": {
										"id": 1917,
										"nodeType": "StructuredDocumentation",
										"src": "349:59:12",
										"text": " @dev Returns the largest of two numbers."
									},
									"id": 1934,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "max",
									"nameLocation": "422:3:12",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1922,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1919,
												"mutability": "mutable",
												"name": "a",
												"nameLocation": "434:1:12",
												"nodeType": "VariableDeclaration",
												"scope": 1934,
												"src": "426:9:12",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1918,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "426:7:12",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1921,
												"mutability": "mutable",
												"name": "b",
												"nameLocation": "445:1:12",
												"nodeType": "VariableDeclaration",
												"scope": 1934,
												"src": "437:9:12",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1920,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "437:7:12",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "425:22:12"
									},
									"returnParameters": {
										"id": 1925,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1924,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1934,
												"src": "471:7:12",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1923,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "471:7:12",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "470:9:12"
									},
									"scope": 2774,
									"src": "413:104:12",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1951,
										"nodeType": "Block",
										"src": "655:37:12",
										"statements": [
											{
												"expression": {
													"condition": {
														"commonType": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"id": 1946,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftExpression": {
															"id": 1944,
															"name": "a",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1937,
															"src": "672:1:12",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"nodeType": "BinaryOperation",
														"operator": "<",
														"rightExpression": {
															"id": 1945,
															"name": "b",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1939,
															"src": "676:1:12",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"src": "672:5:12",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"falseExpression": {
														"id": 1948,
														"name": "b",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1939,
														"src": "684:1:12",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"id": 1949,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "Conditional",
													"src": "672:13:12",
													"trueExpression": {
														"id": 1947,
														"name": "a",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1937,
														"src": "680:1:12",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 1943,
												"id": 1950,
												"nodeType": "Return",
												"src": "665:20:12"
											}
										]
									},
									"documentation": {
										"id": 1935,
										"nodeType": "StructuredDocumentation",
										"src": "523:60:12",
										"text": " @dev Returns the smallest of two numbers."
									},
									"id": 1952,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "min",
									"nameLocation": "597:3:12",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1940,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1937,
												"mutability": "mutable",
												"name": "a",
												"nameLocation": "609:1:12",
												"nodeType": "VariableDeclaration",
												"scope": 1952,
												"src": "601:9:12",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1936,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "601:7:12",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1939,
												"mutability": "mutable",
												"name": "b",
												"nameLocation": "620:1:12",
												"nodeType": "VariableDeclaration",
												"scope": 1952,
												"src": "612:9:12",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1938,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "612:7:12",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "600:22:12"
									},
									"returnParameters": {
										"id": 1943,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1942,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1952,
												"src": "646:7:12",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1941,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "646:7:12",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "645:9:12"
									},
									"scope": 2774,
									"src": "588:104:12",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1974,
										"nodeType": "Block",
										"src": "876:82:12",
										"statements": [
											{
												"expression": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 1972,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"components": [
															{
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 1964,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"id": 1962,
																	"name": "a",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1955,
																	"src": "931:1:12",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": "&",
																"rightExpression": {
																	"id": 1963,
																	"name": "b",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1957,
																	"src": "935:1:12",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "931:5:12",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															}
														],
														"id": 1965,
														"isConstant": false,
														"isInlineArray": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"nodeType": "TupleExpression",
														"src": "930:7:12",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "+",
													"rightExpression": {
														"commonType": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"id": 1971,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftExpression": {
															"components": [
																{
																	"commonType": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	"id": 1968,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"leftExpression": {
																		"id": 1966,
																		"name": "a",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1955,
																		"src": "941:1:12",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"nodeType": "BinaryOperation",
																	"operator": "^",
																	"rightExpression": {
																		"id": 1967,
																		"name": "b",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1957,
																		"src": "945:1:12",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"src": "941:5:12",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																}
															],
															"id": 1969,
															"isConstant": false,
															"isInlineArray": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"nodeType": "TupleExpression",
															"src": "940:7:12",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"nodeType": "BinaryOperation",
														"operator": "/",
														"rightExpression": {
															"hexValue": "32",
															"id": 1970,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "number",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "950:1:12",
															"typeDescriptions": {
																"typeIdentifier": "t_rational_2_by_1",
																"typeString": "int_const 2"
															},
															"value": "2"
														},
														"src": "940:11:12",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "930:21:12",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 1961,
												"id": 1973,
												"nodeType": "Return",
												"src": "923:28:12"
											}
										]
									},
									"documentation": {
										"id": 1953,
										"nodeType": "StructuredDocumentation",
										"src": "698:102:12",
										"text": " @dev Returns the average of two numbers. The result is rounded towards\n zero."
									},
									"id": 1975,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "average",
									"nameLocation": "814:7:12",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1958,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1955,
												"mutability": "mutable",
												"name": "a",
												"nameLocation": "830:1:12",
												"nodeType": "VariableDeclaration",
												"scope": 1975,
												"src": "822:9:12",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1954,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "822:7:12",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1957,
												"mutability": "mutable",
												"name": "b",
												"nameLocation": "841:1:12",
												"nodeType": "VariableDeclaration",
												"scope": 1975,
												"src": "833:9:12",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1956,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "833:7:12",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "821:22:12"
									},
									"returnParameters": {
										"id": 1961,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1960,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1975,
												"src": "867:7:12",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1959,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "867:7:12",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "866:9:12"
									},
									"scope": 2774,
									"src": "805:153:12",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1999,
										"nodeType": "Block",
										"src": "1228:123:12",
										"statements": [
											{
												"expression": {
													"condition": {
														"commonType": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"id": 1987,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftExpression": {
															"id": 1985,
															"name": "a",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1978,
															"src": "1316:1:12",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"nodeType": "BinaryOperation",
														"operator": "==",
														"rightExpression": {
															"hexValue": "30",
															"id": 1986,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "number",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "1321:1:12",
															"typeDescriptions": {
																"typeIdentifier": "t_rational_0_by_1",
																"typeString": "int_const 0"
															},
															"value": "0"
														},
														"src": "1316:6:12",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"falseExpression": {
														"commonType": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"id": 1996,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftExpression": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 1994,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"components": [
																	{
																		"commonType": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		},
																		"id": 1991,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftExpression": {
																			"id": 1989,
																			"name": "a",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1978,
																			"src": "1330:1:12",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "BinaryOperation",
																		"operator": "-",
																		"rightExpression": {
																			"hexValue": "31",
																			"id": 1990,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "1334:1:12",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_1_by_1",
																				"typeString": "int_const 1"
																			},
																			"value": "1"
																		},
																		"src": "1330:5:12",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	}
																],
																"id": 1992,
																"isConstant": false,
																"isInlineArray": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"nodeType": "TupleExpression",
																"src": "1329:7:12",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "/",
															"rightExpression": {
																"id": 1993,
																"name": "b",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1980,
																"src": "1339:1:12",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "1329:11:12",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"nodeType": "BinaryOperation",
														"operator": "+",
														"rightExpression": {
															"hexValue": "31",
															"id": 1995,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "number",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "1343:1:12",
															"typeDescriptions": {
																"typeIdentifier": "t_rational_1_by_1",
																"typeString": "int_const 1"
															},
															"value": "1"
														},
														"src": "1329:15:12",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"id": 1997,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "Conditional",
													"src": "1316:28:12",
													"trueExpression": {
														"hexValue": "30",
														"id": 1988,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "1325:1:12",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_0_by_1",
															"typeString": "int_const 0"
														},
														"value": "0"
													},
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 1984,
												"id": 1998,
												"nodeType": "Return",
												"src": "1309:35:12"
											}
										]
									},
									"documentation": {
										"id": 1976,
										"nodeType": "StructuredDocumentation",
										"src": "964:188:12",
										"text": " @dev Returns the ceiling of the division of two numbers.\n This differs from standard division with `/` in that it rounds up instead\n of rounding down."
									},
									"id": 2000,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "ceilDiv",
									"nameLocation": "1166:7:12",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1981,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1978,
												"mutability": "mutable",
												"name": "a",
												"nameLocation": "1182:1:12",
												"nodeType": "VariableDeclaration",
												"scope": 2000,
												"src": "1174:9:12",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1977,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1174:7:12",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1980,
												"mutability": "mutable",
												"name": "b",
												"nameLocation": "1193:1:12",
												"nodeType": "VariableDeclaration",
												"scope": 2000,
												"src": "1185:9:12",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1979,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1185:7:12",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1173:22:12"
									},
									"returnParameters": {
										"id": 1984,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1983,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 2000,
												"src": "1219:7:12",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1982,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1219:7:12",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1218:9:12"
									},
									"scope": 2774,
									"src": "1157:194:12",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 2121,
										"nodeType": "Block",
										"src": "1795:3797:12",
										"statements": [
											{
												"id": 2120,
												"nodeType": "UncheckedBlock",
												"src": "1805:3781:12",
												"statements": [
													{
														"assignments": [
															2013
														],
														"declarations": [
															{
																"constant": false,
																"id": 2013,
																"mutability": "mutable",
																"name": "prod0",
																"nameLocation": "2134:5:12",
																"nodeType": "VariableDeclaration",
																"scope": 2120,
																"src": "2126:13:12",
																"stateVariable": false,
																"storageLocation": "default",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"typeName": {
																	"id": 2012,
																	"name": "uint256",
																	"nodeType": "ElementaryTypeName",
																	"src": "2126:7:12",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"visibility": "internal"
															}
														],
														"id": 2014,
														"nodeType": "VariableDeclarationStatement",
														"src": "2126:13:12"
													},
													{
														"assignments": [
															2016
														],
														"declarations": [
															{
																"constant": false,
																"id": 2016,
																"mutability": "mutable",
																"name": "prod1",
																"nameLocation": "2206:5:12",
																"nodeType": "VariableDeclaration",
																"scope": 2120,
																"src": "2198:13:12",
																"stateVariable": false,
																"storageLocation": "default",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"typeName": {
																	"id": 2015,
																	"name": "uint256",
																	"nodeType": "ElementaryTypeName",
																	"src": "2198:7:12",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"visibility": "internal"
															}
														],
														"id": 2017,
														"nodeType": "VariableDeclarationStatement",
														"src": "2198:13:12"
													},
													{
														"AST": {
															"nativeSrc": "2278:157:12",
															"nodeType": "YulBlock",
															"src": "2278:157:12",
															"statements": [
																{
																	"nativeSrc": "2296:30:12",
																	"nodeType": "YulVariableDeclaration",
																	"src": "2296:30:12",
																	"value": {
																		"arguments": [
																			{
																				"name": "x",
																				"nativeSrc": "2313:1:12",
																				"nodeType": "YulIdentifier",
																				"src": "2313:1:12"
																			},
																			{
																				"name": "y",
																				"nativeSrc": "2316:1:12",
																				"nodeType": "YulIdentifier",
																				"src": "2316:1:12"
																			},
																			{
																				"arguments": [
																					{
																						"kind": "number",
																						"nativeSrc": "2323:1:12",
																						"nodeType": "YulLiteral",
																						"src": "2323:1:12",
																						"type": "",
																						"value": "0"
																					}
																				],
																				"functionName": {
																					"name": "not",
																					"nativeSrc": "2319:3:12",
																					"nodeType": "YulIdentifier",
																					"src": "2319:3:12"
																				},
																				"nativeSrc": "2319:6:12",
																				"nodeType": "YulFunctionCall",
																				"src": "2319:6:12"
																			}
																		],
																		"functionName": {
																			"name": "mulmod",
																			"nativeSrc": "2306:6:12",
																			"nodeType": "YulIdentifier",
																			"src": "2306:6:12"
																		},
																		"nativeSrc": "2306:20:12",
																		"nodeType": "YulFunctionCall",
																		"src": "2306:20:12"
																	},
																	"variables": [
																		{
																			"name": "mm",
																			"nativeSrc": "2300:2:12",
																			"nodeType": "YulTypedName",
																			"src": "2300:2:12",
																			"type": ""
																		}
																	]
																},
																{
																	"nativeSrc": "2343:18:12",
																	"nodeType": "YulAssignment",
																	"src": "2343:18:12",
																	"value": {
																		"arguments": [
																			{
																				"name": "x",
																				"nativeSrc": "2356:1:12",
																				"nodeType": "YulIdentifier",
																				"src": "2356:1:12"
																			},
																			{
																				"name": "y",
																				"nativeSrc": "2359:1:12",
																				"nodeType": "YulIdentifier",
																				"src": "2359:1:12"
																			}
																		],
																		"functionName": {
																			"name": "mul",
																			"nativeSrc": "2352:3:12",
																			"nodeType": "YulIdentifier",
																			"src": "2352:3:12"
																		},
																		"nativeSrc": "2352:9:12",
																		"nodeType": "YulFunctionCall",
																		"src": "2352:9:12"
																	},
																	"variableNames": [
																		{
																			"name": "prod0",
																			"nativeSrc": "2343:5:12",
																			"nodeType": "YulIdentifier",
																			"src": "2343:5:12"
																		}
																	]
																},
																{
																	"nativeSrc": "2378:43:12",
																	"nodeType": "YulAssignment",
																	"src": "2378:43:12",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "mm",
																						"nativeSrc": "2395:2:12",
																						"nodeType": "YulIdentifier",
																						"src": "2395:2:12"
																					},
																					{
																						"name": "prod0",
																						"nativeSrc": "2399:5:12",
																						"nodeType": "YulIdentifier",
																						"src": "2399:5:12"
																					}
																				],
																				"functionName": {
																					"name": "sub",
																					"nativeSrc": "2391:3:12",
																					"nodeType": "YulIdentifier",
																					"src": "2391:3:12"
																				},
																				"nativeSrc": "2391:14:12",
																				"nodeType": "YulFunctionCall",
																				"src": "2391:14:12"
																			},
																			{
																				"arguments": [
																					{
																						"name": "mm",
																						"nativeSrc": "2410:2:12",
																						"nodeType": "YulIdentifier",
																						"src": "2410:2:12"
																					},
																					{
																						"name": "prod0",
																						"nativeSrc": "2414:5:12",
																						"nodeType": "YulIdentifier",
																						"src": "2414:5:12"
																					}
																				],
																				"functionName": {
																					"name": "lt",
																					"nativeSrc": "2407:2:12",
																					"nodeType": "YulIdentifier",
																					"src": "2407:2:12"
																				},
																				"nativeSrc": "2407:13:12",
																				"nodeType": "YulFunctionCall",
																				"src": "2407:13:12"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "2387:3:12",
																			"nodeType": "YulIdentifier",
																			"src": "2387:3:12"
																		},
																		"nativeSrc": "2387:34:12",
																		"nodeType": "YulFunctionCall",
																		"src": "2387:34:12"
																	},
																	"variableNames": [
																		{
																			"name": "prod1",
																			"nativeSrc": "2378:5:12",
																			"nodeType": "YulIdentifier",
																			"src": "2378:5:12"
																		}
																	]
																}
															]
														},
														"evmVersion": "shanghai",
														"externalReferences": [
															{
																"declaration": 2013,
																"isOffset": false,
																"isSlot": false,
																"src": "2343:5:12",
																"valueSize": 1
															},
															{
																"declaration": 2013,
																"isOffset": false,
																"isSlot": false,
																"src": "2399:5:12",
																"valueSize": 1
															},
															{
																"declaration": 2013,
																"isOffset": false,
																"isSlot": false,
																"src": "2414:5:12",
																"valueSize": 1
															},
															{
																"declaration": 2016,
																"isOffset": false,
																"isSlot": false,
																"src": "2378:5:12",
																"valueSize": 1
															},
															{
																"declaration": 2003,
																"isOffset": false,
																"isSlot": false,
																"src": "2313:1:12",
																"valueSize": 1
															},
															{
																"declaration": 2003,
																"isOffset": false,
																"isSlot": false,
																"src": "2356:1:12",
																"valueSize": 1
															},
															{
																"declaration": 2005,
																"isOffset": false,
																"isSlot": false,
																"src": "2316:1:12",
																"valueSize": 1
															},
															{
																"declaration": 2005,
																"isOffset": false,
																"isSlot": false,
																"src": "2359:1:12",
																"valueSize": 1
															}
														],
														"id": 2018,
														"nodeType": "InlineAssembly",
														"src": "2269:166:12"
													},
													{
														"condition": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 2021,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 2019,
																"name": "prod1",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 2016,
																"src": "2516:5:12",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "==",
															"rightExpression": {
																"hexValue": "30",
																"id": 2020,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "2525:1:12",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															},
															"src": "2516:10:12",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"id": 2027,
														"nodeType": "IfStatement",
														"src": "2512:75:12",
														"trueBody": {
															"id": 2026,
															"nodeType": "Block",
															"src": "2528:59:12",
															"statements": [
																{
																	"expression": {
																		"commonType": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		},
																		"id": 2024,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftExpression": {
																			"id": 2022,
																			"name": "prod0",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 2013,
																			"src": "2553:5:12",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "BinaryOperation",
																		"operator": "/",
																		"rightExpression": {
																			"id": 2023,
																			"name": "denominator",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 2007,
																			"src": "2561:11:12",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"src": "2553:19:12",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"functionReturnParameters": 2011,
																	"id": 2025,
																	"nodeType": "Return",
																	"src": "2546:26:12"
																}
															]
														}
													},
													{
														"expression": {
															"arguments": [
																{
																	"commonType": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	"id": 2031,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"leftExpression": {
																		"id": 2029,
																		"name": "denominator",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 2007,
																		"src": "2697:11:12",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"nodeType": "BinaryOperation",
																	"operator": ">",
																	"rightExpression": {
																		"id": 2030,
																		"name": "prod1",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 2016,
																		"src": "2711:5:12",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"src": "2697:19:12",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bool",
																		"typeString": "bool"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_bool",
																		"typeString": "bool"
																	}
																],
																"id": 2028,
																"name": "require",
																"nodeType": "Identifier",
																"overloadedDeclarations": [
																	4294967278,
																	4294967278
																],
																"referencedDeclaration": 4294967278,
																"src": "2689:7:12",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_require_pure$_t_bool_$returns$__$",
																	"typeString": "function (bool) pure"
																}
															},
															"id": 2032,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "2689:28:12",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_tuple$__$",
																"typeString": "tuple()"
															}
														},
														"id": 2033,
														"nodeType": "ExpressionStatement",
														"src": "2689:28:12"
													},
													{
														"assignments": [
															2035
														],
														"declarations": [
															{
																"constant": false,
																"id": 2035,
																"mutability": "mutable",
																"name": "remainder",
																"nameLocation": "2981:9:12",
																"nodeType": "VariableDeclaration",
																"scope": 2120,
																"src": "2973:17:12",
																"stateVariable": false,
																"storageLocation": "default",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"typeName": {
																	"id": 2034,
																	"name": "uint256",
																	"nodeType": "ElementaryTypeName",
																	"src": "2973:7:12",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"visibility": "internal"
															}
														],
														"id": 2036,
														"nodeType": "VariableDeclarationStatement",
														"src": "2973:17:12"
													},
													{
														"AST": {
															"nativeSrc": "3013:291:12",
															"nodeType": "YulBlock",
															"src": "3013:291:12",
															"statements": [
																{
																	"nativeSrc": "3082:38:12",
																	"nodeType": "YulAssignment",
																	"src": "3082:38:12",
																	"value": {
																		"arguments": [
																			{
																				"name": "x",
																				"nativeSrc": "3102:1:12",
																				"nodeType": "YulIdentifier",
																				"src": "3102:1:12"
																			},
																			{
																				"name": "y",
																				"nativeSrc": "3105:1:12",
																				"nodeType": "YulIdentifier",
																				"src": "3105:1:12"
																			},
																			{
																				"name": "denominator",
																				"nativeSrc": "3108:11:12",
																				"nodeType": "YulIdentifier",
																				"src": "3108:11:12"
																			}
																		],
																		"functionName": {
																			"name": "mulmod",
																			"nativeSrc": "3095:6:12",
																			"nodeType": "YulIdentifier",
																			"src": "3095:6:12"
																		},
																		"nativeSrc": "3095:25:12",
																		"nodeType": "YulFunctionCall",
																		"src": "3095:25:12"
																	},
																	"variableNames": [
																		{
																			"name": "remainder",
																			"nativeSrc": "3082:9:12",
																			"nodeType": "YulIdentifier",
																			"src": "3082:9:12"
																		}
																	]
																},
																{
																	"nativeSrc": "3202:41:12",
																	"nodeType": "YulAssignment",
																	"src": "3202:41:12",
																	"value": {
																		"arguments": [
																			{
																				"name": "prod1",
																				"nativeSrc": "3215:5:12",
																				"nodeType": "YulIdentifier",
																				"src": "3215:5:12"
																			},
																			{
																				"arguments": [
																					{
																						"name": "remainder",
																						"nativeSrc": "3225:9:12",
																						"nodeType": "YulIdentifier",
																						"src": "3225:9:12"
																					},
																					{
																						"name": "prod0",
																						"nativeSrc": "3236:5:12",
																						"nodeType": "YulIdentifier",
																						"src": "3236:5:12"
																					}
																				],
																				"functionName": {
																					"name": "gt",
																					"nativeSrc": "3222:2:12",
																					"nodeType": "YulIdentifier",
																					"src": "3222:2:12"
																				},
																				"nativeSrc": "3222:20:12",
																				"nodeType": "YulFunctionCall",
																				"src": "3222:20:12"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "3211:3:12",
																			"nodeType": "YulIdentifier",
																			"src": "3211:3:12"
																		},
																		"nativeSrc": "3211:32:12",
																		"nodeType": "YulFunctionCall",
																		"src": "3211:32:12"
																	},
																	"variableNames": [
																		{
																			"name": "prod1",
																			"nativeSrc": "3202:5:12",
																			"nodeType": "YulIdentifier",
																			"src": "3202:5:12"
																		}
																	]
																},
																{
																	"nativeSrc": "3260:30:12",
																	"nodeType": "YulAssignment",
																	"src": "3260:30:12",
																	"value": {
																		"arguments": [
																			{
																				"name": "prod0",
																				"nativeSrc": "3273:5:12",
																				"nodeType": "YulIdentifier",
																				"src": "3273:5:12"
																			},
																			{
																				"name": "remainder",
																				"nativeSrc": "3280:9:12",
																				"nodeType": "YulIdentifier",
																				"src": "3280:9:12"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "3269:3:12",
																			"nodeType": "YulIdentifier",
																			"src": "3269:3:12"
																		},
																		"nativeSrc": "3269:21:12",
																		"nodeType": "YulFunctionCall",
																		"src": "3269:21:12"
																	},
																	"variableNames": [
																		{
																			"name": "prod0",
																			"nativeSrc": "3260:5:12",
																			"nodeType": "YulIdentifier",
																			"src": "3260:5:12"
																		}
																	]
																}
															]
														},
														"evmVersion": "shanghai",
														"externalReferences": [
															{
																"declaration": 2007,
																"isOffset": false,
																"isSlot": false,
																"src": "3108:11:12",
																"valueSize": 1
															},
															{
																"declaration": 2013,
																"isOffset": false,
																"isSlot": false,
																"src": "3236:5:12",
																"valueSize": 1
															},
															{
																"declaration": 2013,
																"isOffset": false,
																"isSlot": false,
																"src": "3260:5:12",
																"valueSize": 1
															},
															{
																"declaration": 2013,
																"isOffset": false,
																"isSlot": false,
																"src": "3273:5:12",
																"valueSize": 1
															},
															{
																"declaration": 2016,
																"isOffset": false,
																"isSlot": false,
																"src": "3202:5:12",
																"valueSize": 1
															},
															{
																"declaration": 2016,
																"isOffset": false,
																"isSlot": false,
																"src": "3215:5:12",
																"valueSize": 1
															},
															{
																"declaration": 2035,
																"isOffset": false,
																"isSlot": false,
																"src": "3082:9:12",
																"valueSize": 1
															},
															{
																"declaration": 2035,
																"isOffset": false,
																"isSlot": false,
																"src": "3225:9:12",
																"valueSize": 1
															},
															{
																"declaration": 2035,
																"isOffset": false,
																"isSlot": false,
																"src": "3280:9:12",
																"valueSize": 1
															},
															{
																"declaration": 2003,
																"isOffset": false,
																"isSlot": false,
																"src": "3102:1:12",
																"valueSize": 1
															},
															{
																"declaration": 2005,
																"isOffset": false,
																"isSlot": false,
																"src": "3105:1:12",
																"valueSize": 1
															}
														],
														"id": 2037,
														"nodeType": "InlineAssembly",
														"src": "3004:300:12"
													},
													{
														"assignments": [
															2039
														],
														"declarations": [
															{
																"constant": false,
																"id": 2039,
																"mutability": "mutable",
																"name": "twos",
																"nameLocation": "3619:4:12",
																"nodeType": "VariableDeclaration",
																"scope": 2120,
																"src": "3611:12:12",
																"stateVariable": false,
																"storageLocation": "default",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"typeName": {
																	"id": 2038,
																	"name": "uint256",
																	"nodeType": "ElementaryTypeName",
																	"src": "3611:7:12",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"visibility": "internal"
															}
														],
														"id": 2047,
														"initialValue": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 2046,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 2040,
																"name": "denominator",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 2007,
																"src": "3626:11:12",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "&",
															"rightExpression": {
																"components": [
																	{
																		"commonType": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		},
																		"id": 2044,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftExpression": {
																			"id": 2042,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"nodeType": "UnaryOperation",
																			"operator": "~",
																			"prefix": true,
																			"src": "3641:12:12",
																			"subExpression": {
																				"id": 2041,
																				"name": "denominator",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 2007,
																				"src": "3642:11:12",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "BinaryOperation",
																		"operator": "+",
																		"rightExpression": {
																			"hexValue": "31",
																			"id": 2043,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "3656:1:12",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_1_by_1",
																				"typeString": "int_const 1"
																			},
																			"value": "1"
																		},
																		"src": "3641:16:12",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	}
																],
																"id": 2045,
																"isConstant": false,
																"isInlineArray": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"nodeType": "TupleExpression",
																"src": "3640:18:12",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "3626:32:12",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"nodeType": "VariableDeclarationStatement",
														"src": "3611:47:12"
													},
													{
														"AST": {
															"nativeSrc": "3681:362:12",
															"nodeType": "YulBlock",
															"src": "3681:362:12",
															"statements": [
																{
																	"nativeSrc": "3746:37:12",
																	"nodeType": "YulAssignment",
																	"src": "3746:37:12",
																	"value": {
																		"arguments": [
																			{
																				"name": "denominator",
																				"nativeSrc": "3765:11:12",
																				"nodeType": "YulIdentifier",
																				"src": "3765:11:12"
																			},
																			{
																				"name": "twos",
																				"nativeSrc": "3778:4:12",
																				"nodeType": "YulIdentifier",
																				"src": "3778:4:12"
																			}
																		],
																		"functionName": {
																			"name": "div",
																			"nativeSrc": "3761:3:12",
																			"nodeType": "YulIdentifier",
																			"src": "3761:3:12"
																		},
																		"nativeSrc": "3761:22:12",
																		"nodeType": "YulFunctionCall",
																		"src": "3761:22:12"
																	},
																	"variableNames": [
																		{
																			"name": "denominator",
																			"nativeSrc": "3746:11:12",
																			"nodeType": "YulIdentifier",
																			"src": "3746:11:12"
																		}
																	]
																},
																{
																	"nativeSrc": "3850:25:12",
																	"nodeType": "YulAssignment",
																	"src": "3850:25:12",
																	"value": {
																		"arguments": [
																			{
																				"name": "prod0",
																				"nativeSrc": "3863:5:12",
																				"nodeType": "YulIdentifier",
																				"src": "3863:5:12"
																			},
																			{
																				"name": "twos",
																				"nativeSrc": "3870:4:12",
																				"nodeType": "YulIdentifier",
																				"src": "3870:4:12"
																			}
																		],
																		"functionName": {
																			"name": "div",
																			"nativeSrc": "3859:3:12",
																			"nodeType": "YulIdentifier",
																			"src": "3859:3:12"
																		},
																		"nativeSrc": "3859:16:12",
																		"nodeType": "YulFunctionCall",
																		"src": "3859:16:12"
																	},
																	"variableNames": [
																		{
																			"name": "prod0",
																			"nativeSrc": "3850:5:12",
																			"nodeType": "YulIdentifier",
																			"src": "3850:5:12"
																		}
																	]
																},
																{
																	"nativeSrc": "3990:39:12",
																	"nodeType": "YulAssignment",
																	"src": "3990:39:12",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"arguments": [
																							{
																								"kind": "number",
																								"nativeSrc": "4010:1:12",
																								"nodeType": "YulLiteral",
																								"src": "4010:1:12",
																								"type": "",
																								"value": "0"
																							},
																							{
																								"name": "twos",
																								"nativeSrc": "4013:4:12",
																								"nodeType": "YulIdentifier",
																								"src": "4013:4:12"
																							}
																						],
																						"functionName": {
																							"name": "sub",
																							"nativeSrc": "4006:3:12",
																							"nodeType": "YulIdentifier",
																							"src": "4006:3:12"
																						},
																						"nativeSrc": "4006:12:12",
																						"nodeType": "YulFunctionCall",
																						"src": "4006:12:12"
																					},
																					{
																						"name": "twos",
																						"nativeSrc": "4020:4:12",
																						"nodeType": "YulIdentifier",
																						"src": "4020:4:12"
																					}
																				],
																				"functionName": {
																					"name": "div",
																					"nativeSrc": "4002:3:12",
																					"nodeType": "YulIdentifier",
																					"src": "4002:3:12"
																				},
																				"nativeSrc": "4002:23:12",
																				"nodeType": "YulFunctionCall",
																				"src": "4002:23:12"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "4027:1:12",
																				"nodeType": "YulLiteral",
																				"src": "4027:1:12",
																				"type": "",
																				"value": "1"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "3998:3:12",
																			"nodeType": "YulIdentifier",
																			"src": "3998:3:12"
																		},
																		"nativeSrc": "3998:31:12",
																		"nodeType": "YulFunctionCall",
																		"src": "3998:31:12"
																	},
																	"variableNames": [
																		{
																			"name": "twos",
																			"nativeSrc": "3990:4:12",
																			"nodeType": "YulIdentifier",
																			"src": "3990:4:12"
																		}
																	]
																}
															]
														},
														"evmVersion": "shanghai",
														"externalReferences": [
															{
																"declaration": 2007,
																"isOffset": false,
																"isSlot": false,
																"src": "3746:11:12",
																"valueSize": 1
															},
															{
																"declaration": 2007,
																"isOffset": false,
																"isSlot": false,
																"src": "3765:11:12",
																"valueSize": 1
															},
															{
																"declaration": 2013,
																"isOffset": false,
																"isSlot": false,
																"src": "3850:5:12",
																"valueSize": 1
															},
															{
																"declaration": 2013,
																"isOffset": false,
																"isSlot": false,
																"src": "3863:5:12",
																"valueSize": 1
															},
															{
																"declaration": 2039,
																"isOffset": false,
																"isSlot": false,
																"src": "3778:4:12",
																"valueSize": 1
															},
															{
																"declaration": 2039,
																"isOffset": false,
																"isSlot": false,
																"src": "3870:4:12",
																"valueSize": 1
															},
															{
																"declaration": 2039,
																"isOffset": false,
																"isSlot": false,
																"src": "3990:4:12",
																"valueSize": 1
															},
															{
																"declaration": 2039,
																"isOffset": false,
																"isSlot": false,
																"src": "4013:4:12",
																"valueSize": 1
															},
															{
																"declaration": 2039,
																"isOffset": false,
																"isSlot": false,
																"src": "4020:4:12",
																"valueSize": 1
															}
														],
														"id": 2048,
														"nodeType": "InlineAssembly",
														"src": "3672:371:12"
													},
													{
														"expression": {
															"id": 2053,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftHandSide": {
																"id": 2049,
																"name": "prod0",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 2013,
																"src": "4109:5:12",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "Assignment",
															"operator": "|=",
															"rightHandSide": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 2052,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"id": 2050,
																	"name": "prod1",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 2016,
																	"src": "4118:5:12",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": "*",
																"rightExpression": {
																	"id": 2051,
																	"name": "twos",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 2039,
																	"src": "4126:4:12",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "4118:12:12",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "4109:21:12",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"id": 2054,
														"nodeType": "ExpressionStatement",
														"src": "4109:21:12"
													},
													{
														"assignments": [
															2056
														],
														"declarations": [
															{
																"constant": false,
																"id": 2056,
																"mutability": "mutable",
																"name": "inverse",
																"nameLocation": "4456:7:12",
																"nodeType": "VariableDeclaration",
																"scope": 2120,
																"src": "4448:15:12",
																"stateVariable": false,
																"storageLocation": "default",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"typeName": {
																	"id": 2055,
																	"name": "uint256",
																	"nodeType": "ElementaryTypeName",
																	"src": "4448:7:12",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"visibility": "internal"
															}
														],
														"id": 2063,
														"initialValue": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 2062,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"components": [
																	{
																		"commonType": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		},
																		"id": 2059,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftExpression": {
																			"hexValue": "33",
																			"id": 2057,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "4467:1:12",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_3_by_1",
																				"typeString": "int_const 3"
																			},
																			"value": "3"
																		},
																		"nodeType": "BinaryOperation",
																		"operator": "*",
																		"rightExpression": {
																			"id": 2058,
																			"name": "denominator",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 2007,
																			"src": "4471:11:12",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"src": "4467:15:12",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	}
																],
																"id": 2060,
																"isConstant": false,
																"isInlineArray": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"nodeType": "TupleExpression",
																"src": "4466:17:12",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "^",
															"rightExpression": {
																"hexValue": "32",
																"id": 2061,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "4486:1:12",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_2_by_1",
																	"typeString": "int_const 2"
																},
																"value": "2"
															},
															"src": "4466:21:12",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"nodeType": "VariableDeclarationStatement",
														"src": "4448:39:12"
													},
													{
														"expression": {
															"id": 2070,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftHandSide": {
																"id": 2064,
																"name": "inverse",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 2056,
																"src": "4704:7:12",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "Assignment",
															"operator": "*=",
															"rightHandSide": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 2069,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"hexValue": "32",
																	"id": 2065,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "4715:1:12",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_2_by_1",
																		"typeString": "int_const 2"
																	},
																	"value": "2"
																},
																"nodeType": "BinaryOperation",
																"operator": "-",
																"rightExpression": {
																	"commonType": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	"id": 2068,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"leftExpression": {
																		"id": 2066,
																		"name": "denominator",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 2007,
																		"src": "4719:11:12",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"nodeType": "BinaryOperation",
																	"operator": "*",
																	"rightExpression": {
																		"id": 2067,
																		"name": "inverse",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 2056,
																		"src": "4733:7:12",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"src": "4719:21:12",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "4715:25:12",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "4704:36:12",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"id": 2071,
														"nodeType": "ExpressionStatement",
														"src": "4704:36:12"
													},
													{
														"expression": {
															"id": 2078,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftHandSide": {
																"id": 2072,
																"name": "inverse",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 2056,
																"src": "4773:7:12",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "Assignment",
															"operator": "*=",
															"rightHandSide": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 2077,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"hexValue": "32",
																	"id": 2073,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "4784:1:12",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_2_by_1",
																		"typeString": "int_const 2"
																	},
																	"value": "2"
																},
																"nodeType": "BinaryOperation",
																"operator": "-",
																"rightExpression": {
																	"commonType": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	"id": 2076,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"leftExpression": {
																		"id": 2074,
																		"name": "denominator",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 2007,
																		"src": "4788:11:12",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"nodeType": "BinaryOperation",
																	"operator": "*",
																	"rightExpression": {
																		"id": 2075,
																		"name": "inverse",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 2056,
																		"src": "4802:7:12",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"src": "4788:21:12",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "4784:25:12",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "4773:36:12",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"id": 2079,
														"nodeType": "ExpressionStatement",
														"src": "4773:36:12"
													},
													{
														"expression": {
															"id": 2086,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftHandSide": {
																"id": 2080,
																"name": "inverse",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 2056,
																"src": "4843:7:12",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "Assignment",
															"operator": "*=",
															"rightHandSide": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 2085,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"hexValue": "32",
																	"id": 2081,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "4854:1:12",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_2_by_1",
																		"typeString": "int_const 2"
																	},
																	"value": "2"
																},
																"nodeType": "BinaryOperation",
																"operator": "-",
																"rightExpression": {
																	"commonType": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	"id": 2084,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"leftExpression": {
																		"id": 2082,
																		"name": "denominator",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 2007,
																		"src": "4858:11:12",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"nodeType": "BinaryOperation",
																	"operator": "*",
																	"rightExpression": {
																		"id": 2083,
																		"name": "inverse",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 2056,
																		"src": "4872:7:12",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"src": "4858:21:12",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "4854:25:12",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "4843:36:12",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"id": 2087,
														"nodeType": "ExpressionStatement",
														"src": "4843:36:12"
													},
													{
														"expression": {
															"id": 2094,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftHandSide": {
																"id": 2088,
																"name": "inverse",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 2056,
																"src": "4913:7:12",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "Assignment",
															"operator": "*=",
															"rightHandSide": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 2093,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"hexValue": "32",
																	"id": 2089,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "4924:1:12",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_2_by_1",
																		"typeString": "int_const 2"
																	},
																	"value": "2"
																},
																"nodeType": "BinaryOperation",
																"operator": "-",
																"rightExpression": {
																	"commonType": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	"id": 2092,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"leftExpression": {
																		"id": 2090,
																		"name": "denominator",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 2007,
																		"src": "4928:11:12",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"nodeType": "BinaryOperation",
																	"operator": "*",
																	"rightExpression": {
																		"id": 2091,
																		"name": "inverse",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 2056,
																		"src": "4942:7:12",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"src": "4928:21:12",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "4924:25:12",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "4913:36:12",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"id": 2095,
														"nodeType": "ExpressionStatement",
														"src": "4913:36:12"
													},
													{
														"expression": {
															"id": 2102,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftHandSide": {
																"id": 2096,
																"name": "inverse",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 2056,
																"src": "4983:7:12",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "Assignment",
															"operator": "*=",
															"rightHandSide": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 2101,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"hexValue": "32",
																	"id": 2097,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "4994:1:12",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_2_by_1",
																		"typeString": "int_const 2"
																	},
																	"value": "2"
																},
																"nodeType": "BinaryOperation",
																"operator": "-",
																"rightExpression": {
																	"commonType": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	"id": 2100,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"leftExpression": {
																		"id": 2098,
																		"name": "denominator",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 2007,
																		"src": "4998:11:12",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"nodeType": "BinaryOperation",
																	"operator": "*",
																	"rightExpression": {
																		"id": 2099,
																		"name": "inverse",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 2056,
																		"src": "5012:7:12",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"src": "4998:21:12",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "4994:25:12",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "4983:36:12",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"id": 2103,
														"nodeType": "ExpressionStatement",
														"src": "4983:36:12"
													},
													{
														"expression": {
															"id": 2110,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftHandSide": {
																"id": 2104,
																"name": "inverse",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 2056,
																"src": "5054:7:12",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "Assignment",
															"operator": "*=",
															"rightHandSide": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 2109,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"hexValue": "32",
																	"id": 2105,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "5065:1:12",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_2_by_1",
																		"typeString": "int_const 2"
																	},
																	"value": "2"
																},
																"nodeType": "BinaryOperation",
																"operator": "-",
																"rightExpression": {
																	"commonType": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	"id": 2108,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"leftExpression": {
																		"id": 2106,
																		"name": "denominator",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 2007,
																		"src": "5069:11:12",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"nodeType": "BinaryOperation",
																	"operator": "*",
																	"rightExpression": {
																		"id": 2107,
																		"name": "inverse",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 2056,
																		"src": "5083:7:12",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"src": "5069:21:12",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "5065:25:12",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "5054:36:12",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"id": 2111,
														"nodeType": "ExpressionStatement",
														"src": "5054:36:12"
													},
													{
														"expression": {
															"id": 2116,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftHandSide": {
																"id": 2112,
																"name": "result",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 2010,
																"src": "5524:6:12",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "Assignment",
															"operator": "=",
															"rightHandSide": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 2115,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"id": 2113,
																	"name": "prod0",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 2013,
																	"src": "5533:5:12",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": "*",
																"rightExpression": {
																	"id": 2114,
																	"name": "inverse",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 2056,
																	"src": "5541:7:12",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "5533:15:12",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "5524:24:12",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"id": 2117,
														"nodeType": "ExpressionStatement",
														"src": "5524:24:12"
													},
													{
														"expression": {
															"id": 2118,
															"name": "result",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2010,
															"src": "5569:6:12",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"functionReturnParameters": 2011,
														"id": 2119,
														"nodeType": "Return",
														"src": "5562:13:12"
													}
												]
											}
										]
									},
									"documentation": {
										"id": 2001,
										"nodeType": "StructuredDocumentation",
										"src": "1357:305:12",
										"text": " @notice Calculates floor(x * y / denominator) with full precision. Throws if result overflows a uint256 or denominator == 0\n @dev Original credit to Remco Bloemen under MIT license (https://xn--2-umb.com/21/muldiv)\n with further edits by Uniswap Labs also under MIT license."
									},
									"id": 2122,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "mulDiv",
									"nameLocation": "1676:6:12",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 2008,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2003,
												"mutability": "mutable",
												"name": "x",
												"nameLocation": "1700:1:12",
												"nodeType": "VariableDeclaration",
												"scope": 2122,
												"src": "1692:9:12",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2002,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1692:7:12",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2005,
												"mutability": "mutable",
												"name": "y",
												"nameLocation": "1719:1:12",
												"nodeType": "VariableDeclaration",
												"scope": 2122,
												"src": "1711:9:12",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2004,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1711:7:12",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2007,
												"mutability": "mutable",
												"name": "denominator",
												"nameLocation": "1738:11:12",
												"nodeType": "VariableDeclaration",
												"scope": 2122,
												"src": "1730:19:12",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2006,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1730:7:12",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1682:73:12"
									},
									"returnParameters": {
										"id": 2011,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2010,
												"mutability": "mutable",
												"name": "result",
												"nameLocation": "1787:6:12",
												"nodeType": "VariableDeclaration",
												"scope": 2122,
												"src": "1779:14:12",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2009,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1779:7:12",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1778:16:12"
									},
									"scope": 2774,
									"src": "1667:3925:12",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 2165,
										"nodeType": "Block",
										"src": "5872:189:12",
										"statements": [
											{
												"assignments": [
													2138
												],
												"declarations": [
													{
														"constant": false,
														"id": 2138,
														"mutability": "mutable",
														"name": "result",
														"nameLocation": "5890:6:12",
														"nodeType": "VariableDeclaration",
														"scope": 2165,
														"src": "5882:14:12",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 2137,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "5882:7:12",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 2144,
												"initialValue": {
													"arguments": [
														{
															"id": 2140,
															"name": "x",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2125,
															"src": "5906:1:12",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														{
															"id": 2141,
															"name": "y",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2127,
															"src": "5909:1:12",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														{
															"id": 2142,
															"name": "denominator",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2129,
															"src": "5912:11:12",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 2139,
														"name": "mulDiv",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															2122,
															2166
														],
														"referencedDeclaration": 2122,
														"src": "5899:6:12",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$_t_uint256_$returns$_t_uint256_$",
															"typeString": "function (uint256,uint256,uint256) pure returns (uint256)"
														}
													},
													"id": 2143,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "5899:25:12",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "5882:42:12"
											},
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													},
													"id": 2156,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"commonType": {
															"typeIdentifier": "t_enum$_Rounding_$1916",
															"typeString": "enum Math.Rounding"
														},
														"id": 2148,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftExpression": {
															"id": 2145,
															"name": "rounding",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2132,
															"src": "5938:8:12",
															"typeDescriptions": {
																"typeIdentifier": "t_enum$_Rounding_$1916",
																"typeString": "enum Math.Rounding"
															}
														},
														"nodeType": "BinaryOperation",
														"operator": "==",
														"rightExpression": {
															"expression": {
																"id": 2146,
																"name": "Rounding",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1916,
																"src": "5950:8:12",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_enum$_Rounding_$1916_$",
																	"typeString": "type(enum Math.Rounding)"
																}
															},
															"id": 2147,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"lValueRequested": false,
															"memberLocation": "5959:2:12",
															"memberName": "Up",
															"nodeType": "MemberAccess",
															"referencedDeclaration": 1914,
															"src": "5950:11:12",
															"typeDescriptions": {
																"typeIdentifier": "t_enum$_Rounding_$1916",
																"typeString": "enum Math.Rounding"
															}
														},
														"src": "5938:23:12",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "&&",
													"rightExpression": {
														"commonType": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"id": 2155,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftExpression": {
															"arguments": [
																{
																	"id": 2150,
																	"name": "x",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 2125,
																	"src": "5972:1:12",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																{
																	"id": 2151,
																	"name": "y",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 2127,
																	"src": "5975:1:12",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																{
																	"id": 2152,
																	"name": "denominator",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 2129,
																	"src": "5978:11:12",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	{
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	{
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																],
																"id": 2149,
																"name": "mulmod",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 4294967280,
																"src": "5965:6:12",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_mulmod_pure$_t_uint256_$_t_uint256_$_t_uint256_$returns$_t_uint256_$",
																	"typeString": "function (uint256,uint256,uint256) pure returns (uint256)"
																}
															},
															"id": 2153,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "5965:25:12",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"nodeType": "BinaryOperation",
														"operator": ">",
														"rightExpression": {
															"hexValue": "30",
															"id": 2154,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "number",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "5993:1:12",
															"typeDescriptions": {
																"typeIdentifier": "t_rational_0_by_1",
																"typeString": "int_const 0"
															},
															"value": "0"
														},
														"src": "5965:29:12",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"src": "5938:56:12",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 2162,
												"nodeType": "IfStatement",
												"src": "5934:98:12",
												"trueBody": {
													"id": 2161,
													"nodeType": "Block",
													"src": "5996:36:12",
													"statements": [
														{
															"expression": {
																"id": 2159,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftHandSide": {
																	"id": 2157,
																	"name": "result",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 2138,
																	"src": "6010:6:12",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "Assignment",
																"operator": "+=",
																"rightHandSide": {
																	"hexValue": "31",
																	"id": 2158,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "6020:1:12",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_1_by_1",
																		"typeString": "int_const 1"
																	},
																	"value": "1"
																},
																"src": "6010:11:12",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"id": 2160,
															"nodeType": "ExpressionStatement",
															"src": "6010:11:12"
														}
													]
												}
											},
											{
												"expression": {
													"id": 2163,
													"name": "result",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 2138,
													"src": "6048:6:12",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 2136,
												"id": 2164,
												"nodeType": "Return",
												"src": "6041:13:12"
											}
										]
									},
									"documentation": {
										"id": 2123,
										"nodeType": "StructuredDocumentation",
										"src": "5598:121:12",
										"text": " @notice Calculates x * y / denominator with full precision, following the selected rounding direction."
									},
									"id": 2166,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "mulDiv",
									"nameLocation": "5733:6:12",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 2133,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2125,
												"mutability": "mutable",
												"name": "x",
												"nameLocation": "5757:1:12",
												"nodeType": "VariableDeclaration",
												"scope": 2166,
												"src": "5749:9:12",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2124,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "5749:7:12",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2127,
												"mutability": "mutable",
												"name": "y",
												"nameLocation": "5776:1:12",
												"nodeType": "VariableDeclaration",
												"scope": 2166,
												"src": "5768:9:12",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2126,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "5768:7:12",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2129,
												"mutability": "mutable",
												"name": "denominator",
												"nameLocation": "5795:11:12",
												"nodeType": "VariableDeclaration",
												"scope": 2166,
												"src": "5787:19:12",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2128,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "5787:7:12",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2132,
												"mutability": "mutable",
												"name": "rounding",
												"nameLocation": "5825:8:12",
												"nodeType": "VariableDeclaration",
												"scope": 2166,
												"src": "5816:17:12",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_enum$_Rounding_$1916",
													"typeString": "enum Math.Rounding"
												},
												"typeName": {
													"id": 2131,
													"nodeType": "UserDefinedTypeName",
													"pathNode": {
														"id": 2130,
														"name": "Rounding",
														"nameLocations": [
															"5816:8:12"
														],
														"nodeType": "IdentifierPath",
														"referencedDeclaration": 1916,
														"src": "5816:8:12"
													},
													"referencedDeclaration": 1916,
													"src": "5816:8:12",
													"typeDescriptions": {
														"typeIdentifier": "t_enum$_Rounding_$1916",
														"typeString": "enum Math.Rounding"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "5739:100:12"
									},
									"returnParameters": {
										"id": 2136,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2135,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 2166,
												"src": "5863:7:12",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2134,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "5863:7:12",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "5862:9:12"
									},
									"scope": 2774,
									"src": "5724:337:12",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 2277,
										"nodeType": "Block",
										"src": "6337:1585:12",
										"statements": [
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 2176,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 2174,
														"name": "a",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 2169,
														"src": "6351:1:12",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "==",
													"rightExpression": {
														"hexValue": "30",
														"id": 2175,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "6356:1:12",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_0_by_1",
															"typeString": "int_const 0"
														},
														"value": "0"
													},
													"src": "6351:6:12",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 2180,
												"nodeType": "IfStatement",
												"src": "6347:45:12",
												"trueBody": {
													"id": 2179,
													"nodeType": "Block",
													"src": "6359:33:12",
													"statements": [
														{
															"expression": {
																"hexValue": "30",
																"id": 2177,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "6380:1:12",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															},
															"functionReturnParameters": 2173,
															"id": 2178,
															"nodeType": "Return",
															"src": "6373:8:12"
														}
													]
												}
											},
											{
												"assignments": [
													2182
												],
												"declarations": [
													{
														"constant": false,
														"id": 2182,
														"mutability": "mutable",
														"name": "result",
														"nameLocation": "7079:6:12",
														"nodeType": "VariableDeclaration",
														"scope": 2277,
														"src": "7071:14:12",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 2181,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "7071:7:12",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 2191,
												"initialValue": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 2190,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"hexValue": "31",
														"id": 2183,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "7088:1:12",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_1_by_1",
															"typeString": "int_const 1"
														},
														"value": "1"
													},
													"nodeType": "BinaryOperation",
													"operator": "<<",
													"rightExpression": {
														"components": [
															{
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 2188,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"arguments": [
																		{
																			"id": 2185,
																			"name": "a",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 2169,
																			"src": "7099:1:12",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		}
																	],
																	"expression": {
																		"argumentTypes": [
																			{
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		],
																		"id": 2184,
																		"name": "log2",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [
																			2446,
																			2482
																		],
																		"referencedDeclaration": 2446,
																		"src": "7094:4:12",
																		"typeDescriptions": {
																			"typeIdentifier": "t_function_internal_pure$_t_uint256_$returns$_t_uint256_$",
																			"typeString": "function (uint256) pure returns (uint256)"
																		}
																	},
																	"id": 2186,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"kind": "functionCall",
																	"lValueRequested": false,
																	"nameLocations": [],
																	"names": [],
																	"nodeType": "FunctionCall",
																	"src": "7094:7:12",
																	"tryCall": false,
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": ">>",
																"rightExpression": {
																	"hexValue": "31",
																	"id": 2187,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "7105:1:12",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_1_by_1",
																		"typeString": "int_const 1"
																	},
																	"value": "1"
																},
																"src": "7094:12:12",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															}
														],
														"id": 2189,
														"isConstant": false,
														"isInlineArray": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"nodeType": "TupleExpression",
														"src": "7093:14:12",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "7088:19:12",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "7071:36:12"
											},
											{
												"id": 2276,
												"nodeType": "UncheckedBlock",
												"src": "7508:408:12",
												"statements": [
													{
														"expression": {
															"id": 2201,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftHandSide": {
																"id": 2192,
																"name": "result",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 2182,
																"src": "7532:6:12",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "Assignment",
															"operator": "=",
															"rightHandSide": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 2200,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"components": [
																		{
																			"commonType": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			},
																			"id": 2197,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"leftExpression": {
																				"id": 2193,
																				"name": "result",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 2182,
																				"src": "7542:6:12",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"nodeType": "BinaryOperation",
																			"operator": "+",
																			"rightExpression": {
																				"commonType": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				},
																				"id": 2196,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": false,
																				"lValueRequested": false,
																				"leftExpression": {
																					"id": 2194,
																					"name": "a",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 2169,
																					"src": "7551:1:12",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				"nodeType": "BinaryOperation",
																				"operator": "/",
																				"rightExpression": {
																					"id": 2195,
																					"name": "result",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 2182,
																					"src": "7555:6:12",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				"src": "7551:10:12",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"src": "7542:19:12",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		}
																	],
																	"id": 2198,
																	"isConstant": false,
																	"isInlineArray": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"nodeType": "TupleExpression",
																	"src": "7541:21:12",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": ">>",
																"rightExpression": {
																	"hexValue": "31",
																	"id": 2199,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "7566:1:12",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_1_by_1",
																		"typeString": "int_const 1"
																	},
																	"value": "1"
																},
																"src": "7541:26:12",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "7532:35:12",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"id": 2202,
														"nodeType": "ExpressionStatement",
														"src": "7532:35:12"
													},
													{
														"expression": {
															"id": 2212,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftHandSide": {
																"id": 2203,
																"name": "result",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 2182,
																"src": "7581:6:12",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "Assignment",
															"operator": "=",
															"rightHandSide": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 2211,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"components": [
																		{
																			"commonType": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			},
																			"id": 2208,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"leftExpression": {
																				"id": 2204,
																				"name": "result",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 2182,
																				"src": "7591:6:12",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"nodeType": "BinaryOperation",
																			"operator": "+",
																			"rightExpression": {
																				"commonType": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				},
																				"id": 2207,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": false,
																				"lValueRequested": false,
																				"leftExpression": {
																					"id": 2205,
																					"name": "a",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 2169,
																					"src": "7600:1:12",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				"nodeType": "BinaryOperation",
																				"operator": "/",
																				"rightExpression": {
																					"id": 2206,
																					"name": "result",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 2182,
																					"src": "7604:6:12",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				"src": "7600:10:12",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"src": "7591:19:12",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		}
																	],
																	"id": 2209,
																	"isConstant": false,
																	"isInlineArray": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"nodeType": "TupleExpression",
																	"src": "7590:21:12",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": ">>",
																"rightExpression": {
																	"hexValue": "31",
																	"id": 2210,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "7615:1:12",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_1_by_1",
																		"typeString": "int_const 1"
																	},
																	"value": "1"
																},
																"src": "7590:26:12",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "7581:35:12",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"id": 2213,
														"nodeType": "ExpressionStatement",
														"src": "7581:35:12"
													},
													{
														"expression": {
															"id": 2223,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftHandSide": {
																"id": 2214,
																"name": "result",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 2182,
																"src": "7630:6:12",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "Assignment",
															"operator": "=",
															"rightHandSide": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 2222,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"components": [
																		{
																			"commonType": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			},
																			"id": 2219,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"leftExpression": {
																				"id": 2215,
																				"name": "result",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 2182,
																				"src": "7640:6:12",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"nodeType": "BinaryOperation",
																			"operator": "+",
																			"rightExpression": {
																				"commonType": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				},
																				"id": 2218,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": false,
																				"lValueRequested": false,
																				"leftExpression": {
																					"id": 2216,
																					"name": "a",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 2169,
																					"src": "7649:1:12",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				"nodeType": "BinaryOperation",
																				"operator": "/",
																				"rightExpression": {
																					"id": 2217,
																					"name": "result",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 2182,
																					"src": "7653:6:12",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				"src": "7649:10:12",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"src": "7640:19:12",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		}
																	],
																	"id": 2220,
																	"isConstant": false,
																	"isInlineArray": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"nodeType": "TupleExpression",
																	"src": "7639:21:12",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": ">>",
																"rightExpression": {
																	"hexValue": "31",
																	"id": 2221,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "7664:1:12",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_1_by_1",
																		"typeString": "int_const 1"
																	},
																	"value": "1"
																},
																"src": "7639:26:12",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "7630:35:12",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"id": 2224,
														"nodeType": "ExpressionStatement",
														"src": "7630:35:12"
													},
													{
														"expression": {
															"id": 2234,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftHandSide": {
																"id": 2225,
																"name": "result",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 2182,
																"src": "7679:6:12",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "Assignment",
															"operator": "=",
															"rightHandSide": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 2233,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"components": [
																		{
																			"commonType": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			},
																			"id": 2230,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"leftExpression": {
																				"id": 2226,
																				"name": "result",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 2182,
																				"src": "7689:6:12",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"nodeType": "BinaryOperation",
																			"operator": "+",
																			"rightExpression": {
																				"commonType": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				},
																				"id": 2229,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": false,
																				"lValueRequested": false,
																				"leftExpression": {
																					"id": 2227,
																					"name": "a",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 2169,
																					"src": "7698:1:12",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				"nodeType": "BinaryOperation",
																				"operator": "/",
																				"rightExpression": {
																					"id": 2228,
																					"name": "result",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 2182,
																					"src": "7702:6:12",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				"src": "7698:10:12",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"src": "7689:19:12",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		}
																	],
																	"id": 2231,
																	"isConstant": false,
																	"isInlineArray": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"nodeType": "TupleExpression",
																	"src": "7688:21:12",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": ">>",
																"rightExpression": {
																	"hexValue": "31",
																	"id": 2232,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "7713:1:12",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_1_by_1",
																		"typeString": "int_const 1"
																	},
																	"value": "1"
																},
																"src": "7688:26:12",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "7679:35:12",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"id": 2235,
														"nodeType": "ExpressionStatement",
														"src": "7679:35:12"
													},
													{
														"expression": {
															"id": 2245,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftHandSide": {
																"id": 2236,
																"name": "result",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 2182,
																"src": "7728:6:12",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "Assignment",
															"operator": "=",
															"rightHandSide": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 2244,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"components": [
																		{
																			"commonType": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			},
																			"id": 2241,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"leftExpression": {
																				"id": 2237,
																				"name": "result",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 2182,
																				"src": "7738:6:12",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"nodeType": "BinaryOperation",
																			"operator": "+",
																			"rightExpression": {
																				"commonType": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				},
																				"id": 2240,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": false,
																				"lValueRequested": false,
																				"leftExpression": {
																					"id": 2238,
																					"name": "a",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 2169,
																					"src": "7747:1:12",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				"nodeType": "BinaryOperation",
																				"operator": "/",
																				"rightExpression": {
																					"id": 2239,
																					"name": "result",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 2182,
																					"src": "7751:6:12",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				"src": "7747:10:12",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"src": "7738:19:12",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		}
																	],
																	"id": 2242,
																	"isConstant": false,
																	"isInlineArray": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"nodeType": "TupleExpression",
																	"src": "7737:21:12",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": ">>",
																"rightExpression": {
																	"hexValue": "31",
																	"id": 2243,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "7762:1:12",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_1_by_1",
																		"typeString": "int_const 1"
																	},
																	"value": "1"
																},
																"src": "7737:26:12",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "7728:35:12",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"id": 2246,
														"nodeType": "ExpressionStatement",
														"src": "7728:35:12"
													},
													{
														"expression": {
															"id": 2256,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftHandSide": {
																"id": 2247,
																"name": "result",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 2182,
																"src": "7777:6:12",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "Assignment",
															"operator": "=",
															"rightHandSide": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 2255,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"components": [
																		{
																			"commonType": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			},
																			"id": 2252,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"leftExpression": {
																				"id": 2248,
																				"name": "result",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 2182,
																				"src": "7787:6:12",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"nodeType": "BinaryOperation",
																			"operator": "+",
																			"rightExpression": {
																				"commonType": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				},
																				"id": 2251,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": false,
																				"lValueRequested": false,
																				"leftExpression": {
																					"id": 2249,
																					"name": "a",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 2169,
																					"src": "7796:1:12",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				"nodeType": "BinaryOperation",
																				"operator": "/",
																				"rightExpression": {
																					"id": 2250,
																					"name": "result",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 2182,
																					"src": "7800:6:12",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				"src": "7796:10:12",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"src": "7787:19:12",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		}
																	],
																	"id": 2253,
																	"isConstant": false,
																	"isInlineArray": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"nodeType": "TupleExpression",
																	"src": "7786:21:12",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": ">>",
																"rightExpression": {
																	"hexValue": "31",
																	"id": 2254,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "7811:1:12",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_1_by_1",
																		"typeString": "int_const 1"
																	},
																	"value": "1"
																},
																"src": "7786:26:12",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "7777:35:12",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"id": 2257,
														"nodeType": "ExpressionStatement",
														"src": "7777:35:12"
													},
													{
														"expression": {
															"id": 2267,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftHandSide": {
																"id": 2258,
																"name": "result",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 2182,
																"src": "7826:6:12",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "Assignment",
															"operator": "=",
															"rightHandSide": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 2266,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"components": [
																		{
																			"commonType": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			},
																			"id": 2263,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"leftExpression": {
																				"id": 2259,
																				"name": "result",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 2182,
																				"src": "7836:6:12",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"nodeType": "BinaryOperation",
																			"operator": "+",
																			"rightExpression": {
																				"commonType": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				},
																				"id": 2262,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": false,
																				"lValueRequested": false,
																				"leftExpression": {
																					"id": 2260,
																					"name": "a",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 2169,
																					"src": "7845:1:12",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				"nodeType": "BinaryOperation",
																				"operator": "/",
																				"rightExpression": {
																					"id": 2261,
																					"name": "result",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 2182,
																					"src": "7849:6:12",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				"src": "7845:10:12",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"src": "7836:19:12",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		}
																	],
																	"id": 2264,
																	"isConstant": false,
																	"isInlineArray": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"nodeType": "TupleExpression",
																	"src": "7835:21:12",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": ">>",
																"rightExpression": {
																	"hexValue": "31",
																	"id": 2265,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "7860:1:12",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_1_by_1",
																		"typeString": "int_const 1"
																	},
																	"value": "1"
																},
																"src": "7835:26:12",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "7826:35:12",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"id": 2268,
														"nodeType": "ExpressionStatement",
														"src": "7826:35:12"
													},
													{
														"expression": {
															"arguments": [
																{
																	"id": 2270,
																	"name": "result",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 2182,
																	"src": "7886:6:12",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																{
																	"commonType": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	"id": 2273,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"leftExpression": {
																		"id": 2271,
																		"name": "a",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 2169,
																		"src": "7894:1:12",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"nodeType": "BinaryOperation",
																	"operator": "/",
																	"rightExpression": {
																		"id": 2272,
																		"name": "result",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 2182,
																		"src": "7898:6:12",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"src": "7894:10:12",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	{
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																],
																"id": 2269,
																"name": "min",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1952,
																"src": "7882:3:12",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$",
																	"typeString": "function (uint256,uint256) pure returns (uint256)"
																}
															},
															"id": 2274,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "7882:23:12",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"functionReturnParameters": 2173,
														"id": 2275,
														"nodeType": "Return",
														"src": "7875:30:12"
													}
												]
											}
										]
									},
									"documentation": {
										"id": 2167,
										"nodeType": "StructuredDocumentation",
										"src": "6067:208:12",
										"text": " @dev Returns the square root of a number. If the number is not a perfect square, the value is rounded down.\n Inspired by Henry S. Warren, Jr.'s \"Hacker's Delight\" (Chapter 11)."
									},
									"id": 2278,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "sqrt",
									"nameLocation": "6289:4:12",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 2170,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2169,
												"mutability": "mutable",
												"name": "a",
												"nameLocation": "6302:1:12",
												"nodeType": "VariableDeclaration",
												"scope": 2278,
												"src": "6294:9:12",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2168,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "6294:7:12",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "6293:11:12"
									},
									"returnParameters": {
										"id": 2173,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2172,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 2278,
												"src": "6328:7:12",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2171,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "6328:7:12",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "6327:9:12"
									},
									"scope": 2774,
									"src": "6280:1642:12",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 2313,
										"nodeType": "Block",
										"src": "8098:161:12",
										"statements": [
											{
												"id": 2312,
												"nodeType": "UncheckedBlock",
												"src": "8108:145:12",
												"statements": [
													{
														"assignments": [
															2290
														],
														"declarations": [
															{
																"constant": false,
																"id": 2290,
																"mutability": "mutable",
																"name": "result",
																"nameLocation": "8140:6:12",
																"nodeType": "VariableDeclaration",
																"scope": 2312,
																"src": "8132:14:12",
																"stateVariable": false,
																"storageLocation": "default",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"typeName": {
																	"id": 2289,
																	"name": "uint256",
																	"nodeType": "ElementaryTypeName",
																	"src": "8132:7:12",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"visibility": "internal"
															}
														],
														"id": 2294,
														"initialValue": {
															"arguments": [
																{
																	"id": 2292,
																	"name": "a",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 2281,
																	"src": "8154:1:12",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																],
																"id": 2291,
																"name": "sqrt",
																"nodeType": "Identifier",
																"overloadedDeclarations": [
																	2278,
																	2314
																],
																"referencedDeclaration": 2278,
																"src": "8149:4:12",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_internal_pure$_t_uint256_$returns$_t_uint256_$",
																	"typeString": "function (uint256) pure returns (uint256)"
																}
															},
															"id": 2293,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "8149:7:12",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"nodeType": "VariableDeclarationStatement",
														"src": "8132:24:12"
													},
													{
														"expression": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 2310,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 2295,
																"name": "result",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 2290,
																"src": "8177:6:12",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "+",
															"rightExpression": {
																"components": [
																	{
																		"condition": {
																			"commonType": {
																				"typeIdentifier": "t_bool",
																				"typeString": "bool"
																			},
																			"id": 2305,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"leftExpression": {
																				"commonType": {
																					"typeIdentifier": "t_enum$_Rounding_$1916",
																					"typeString": "enum Math.Rounding"
																				},
																				"id": 2299,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": false,
																				"lValueRequested": false,
																				"leftExpression": {
																					"id": 2296,
																					"name": "rounding",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 2284,
																					"src": "8187:8:12",
																					"typeDescriptions": {
																						"typeIdentifier": "t_enum$_Rounding_$1916",
																						"typeString": "enum Math.Rounding"
																					}
																				},
																				"nodeType": "BinaryOperation",
																				"operator": "==",
																				"rightExpression": {
																					"expression": {
																						"id": 2297,
																						"name": "Rounding",
																						"nodeType": "Identifier",
																						"overloadedDeclarations": [],
																						"referencedDeclaration": 1916,
																						"src": "8199:8:12",
																						"typeDescriptions": {
																							"typeIdentifier": "t_type$_t_enum$_Rounding_$1916_$",
																							"typeString": "type(enum Math.Rounding)"
																						}
																					},
																					"id": 2298,
																					"isConstant": false,
																					"isLValue": false,
																					"isPure": true,
																					"lValueRequested": false,
																					"memberLocation": "8208:2:12",
																					"memberName": "Up",
																					"nodeType": "MemberAccess",
																					"referencedDeclaration": 1914,
																					"src": "8199:11:12",
																					"typeDescriptions": {
																						"typeIdentifier": "t_enum$_Rounding_$1916",
																						"typeString": "enum Math.Rounding"
																					}
																				},
																				"src": "8187:23:12",
																				"typeDescriptions": {
																					"typeIdentifier": "t_bool",
																					"typeString": "bool"
																				}
																			},
																			"nodeType": "BinaryOperation",
																			"operator": "&&",
																			"rightExpression": {
																				"commonType": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				},
																				"id": 2304,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": false,
																				"lValueRequested": false,
																				"leftExpression": {
																					"commonType": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					},
																					"id": 2302,
																					"isConstant": false,
																					"isLValue": false,
																					"isPure": false,
																					"lValueRequested": false,
																					"leftExpression": {
																						"id": 2300,
																						"name": "result",
																						"nodeType": "Identifier",
																						"overloadedDeclarations": [],
																						"referencedDeclaration": 2290,
																						"src": "8214:6:12",
																						"typeDescriptions": {
																							"typeIdentifier": "t_uint256",
																							"typeString": "uint256"
																						}
																					},
																					"nodeType": "BinaryOperation",
																					"operator": "*",
																					"rightExpression": {
																						"id": 2301,
																						"name": "result",
																						"nodeType": "Identifier",
																						"overloadedDeclarations": [],
																						"referencedDeclaration": 2290,
																						"src": "8223:6:12",
																						"typeDescriptions": {
																							"typeIdentifier": "t_uint256",
																							"typeString": "uint256"
																						}
																					},
																					"src": "8214:15:12",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				"nodeType": "BinaryOperation",
																				"operator": "<",
																				"rightExpression": {
																					"id": 2303,
																					"name": "a",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 2281,
																					"src": "8232:1:12",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				"src": "8214:19:12",
																				"typeDescriptions": {
																					"typeIdentifier": "t_bool",
																					"typeString": "bool"
																				}
																			},
																			"src": "8187:46:12",
																			"typeDescriptions": {
																				"typeIdentifier": "t_bool",
																				"typeString": "bool"
																			}
																		},
																		"falseExpression": {
																			"hexValue": "30",
																			"id": 2307,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "8240:1:12",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_0_by_1",
																				"typeString": "int_const 0"
																			},
																			"value": "0"
																		},
																		"id": 2308,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"nodeType": "Conditional",
																		"src": "8187:54:12",
																		"trueExpression": {
																			"hexValue": "31",
																			"id": 2306,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "8236:1:12",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_1_by_1",
																				"typeString": "int_const 1"
																			},
																			"value": "1"
																		},
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint8",
																			"typeString": "uint8"
																		}
																	}
																],
																"id": 2309,
																"isConstant": false,
																"isInlineArray": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"nodeType": "TupleExpression",
																"src": "8186:56:12",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint8",
																	"typeString": "uint8"
																}
															},
															"src": "8177:65:12",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"functionReturnParameters": 2288,
														"id": 2311,
														"nodeType": "Return",
														"src": "8170:72:12"
													}
												]
											}
										]
									},
									"documentation": {
										"id": 2279,
										"nodeType": "StructuredDocumentation",
										"src": "7928:89:12",
										"text": " @notice Calculates sqrt(a), following the selected rounding direction."
									},
									"id": 2314,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "sqrt",
									"nameLocation": "8031:4:12",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 2285,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2281,
												"mutability": "mutable",
												"name": "a",
												"nameLocation": "8044:1:12",
												"nodeType": "VariableDeclaration",
												"scope": 2314,
												"src": "8036:9:12",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2280,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "8036:7:12",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2284,
												"mutability": "mutable",
												"name": "rounding",
												"nameLocation": "8056:8:12",
												"nodeType": "VariableDeclaration",
												"scope": 2314,
												"src": "8047:17:12",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_enum$_Rounding_$1916",
													"typeString": "enum Math.Rounding"
												},
												"typeName": {
													"id": 2283,
													"nodeType": "UserDefinedTypeName",
													"pathNode": {
														"id": 2282,
														"name": "Rounding",
														"nameLocations": [
															"8047:8:12"
														],
														"nodeType": "IdentifierPath",
														"referencedDeclaration": 1916,
														"src": "8047:8:12"
													},
													"referencedDeclaration": 1916,
													"src": "8047:8:12",
													"typeDescriptions": {
														"typeIdentifier": "t_enum$_Rounding_$1916",
														"typeString": "enum Math.Rounding"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "8035:30:12"
									},
									"returnParameters": {
										"id": 2288,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2287,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 2314,
												"src": "8089:7:12",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2286,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "8089:7:12",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "8088:9:12"
									},
									"scope": 2774,
									"src": "8022:237:12",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 2445,
										"nodeType": "Block",
										"src": "8444:922:12",
										"statements": [
											{
												"assignments": [
													2323
												],
												"declarations": [
													{
														"constant": false,
														"id": 2323,
														"mutability": "mutable",
														"name": "result",
														"nameLocation": "8462:6:12",
														"nodeType": "VariableDeclaration",
														"scope": 2445,
														"src": "8454:14:12",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 2322,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "8454:7:12",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 2325,
												"initialValue": {
													"hexValue": "30",
													"id": 2324,
													"isConstant": false,
													"isLValue": false,
													"isPure": true,
													"kind": "number",
													"lValueRequested": false,
													"nodeType": "Literal",
													"src": "8471:1:12",
													"typeDescriptions": {
														"typeIdentifier": "t_rational_0_by_1",
														"typeString": "int_const 0"
													},
													"value": "0"
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "8454:18:12"
											},
											{
												"id": 2442,
												"nodeType": "UncheckedBlock",
												"src": "8482:855:12",
												"statements": [
													{
														"condition": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 2330,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 2328,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"id": 2326,
																	"name": "value",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 2317,
																	"src": "8510:5:12",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": ">>",
																"rightExpression": {
																	"hexValue": "313238",
																	"id": 2327,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "8519:3:12",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_128_by_1",
																		"typeString": "int_const 128"
																	},
																	"value": "128"
																},
																"src": "8510:12:12",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">",
															"rightExpression": {
																"hexValue": "30",
																"id": 2329,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "8525:1:12",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															},
															"src": "8510:16:12",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"id": 2340,
														"nodeType": "IfStatement",
														"src": "8506:99:12",
														"trueBody": {
															"id": 2339,
															"nodeType": "Block",
															"src": "8528:77:12",
															"statements": [
																{
																	"expression": {
																		"id": 2333,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"id": 2331,
																			"name": "value",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 2317,
																			"src": "8546:5:12",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": ">>=",
																		"rightHandSide": {
																			"hexValue": "313238",
																			"id": 2332,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "8556:3:12",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_128_by_1",
																				"typeString": "int_const 128"
																			},
																			"value": "128"
																		},
																		"src": "8546:13:12",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 2334,
																	"nodeType": "ExpressionStatement",
																	"src": "8546:13:12"
																},
																{
																	"expression": {
																		"id": 2337,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"id": 2335,
																			"name": "result",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 2323,
																			"src": "8577:6:12",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": "+=",
																		"rightHandSide": {
																			"hexValue": "313238",
																			"id": 2336,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "8587:3:12",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_128_by_1",
																				"typeString": "int_const 128"
																			},
																			"value": "128"
																		},
																		"src": "8577:13:12",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 2338,
																	"nodeType": "ExpressionStatement",
																	"src": "8577:13:12"
																}
															]
														}
													},
													{
														"condition": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 2345,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 2343,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"id": 2341,
																	"name": "value",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 2317,
																	"src": "8622:5:12",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": ">>",
																"rightExpression": {
																	"hexValue": "3634",
																	"id": 2342,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "8631:2:12",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_64_by_1",
																		"typeString": "int_const 64"
																	},
																	"value": "64"
																},
																"src": "8622:11:12",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">",
															"rightExpression": {
																"hexValue": "30",
																"id": 2344,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "8636:1:12",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															},
															"src": "8622:15:12",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"id": 2355,
														"nodeType": "IfStatement",
														"src": "8618:96:12",
														"trueBody": {
															"id": 2354,
															"nodeType": "Block",
															"src": "8639:75:12",
															"statements": [
																{
																	"expression": {
																		"id": 2348,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"id": 2346,
																			"name": "value",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 2317,
																			"src": "8657:5:12",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": ">>=",
																		"rightHandSide": {
																			"hexValue": "3634",
																			"id": 2347,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "8667:2:12",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_64_by_1",
																				"typeString": "int_const 64"
																			},
																			"value": "64"
																		},
																		"src": "8657:12:12",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 2349,
																	"nodeType": "ExpressionStatement",
																	"src": "8657:12:12"
																},
																{
																	"expression": {
																		"id": 2352,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"id": 2350,
																			"name": "result",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 2323,
																			"src": "8687:6:12",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": "+=",
																		"rightHandSide": {
																			"hexValue": "3634",
																			"id": 2351,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "8697:2:12",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_64_by_1",
																				"typeString": "int_const 64"
																			},
																			"value": "64"
																		},
																		"src": "8687:12:12",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 2353,
																	"nodeType": "ExpressionStatement",
																	"src": "8687:12:12"
																}
															]
														}
													},
													{
														"condition": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 2360,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 2358,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"id": 2356,
																	"name": "value",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 2317,
																	"src": "8731:5:12",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": ">>",
																"rightExpression": {
																	"hexValue": "3332",
																	"id": 2357,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "8740:2:12",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_32_by_1",
																		"typeString": "int_const 32"
																	},
																	"value": "32"
																},
																"src": "8731:11:12",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">",
															"rightExpression": {
																"hexValue": "30",
																"id": 2359,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "8745:1:12",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															},
															"src": "8731:15:12",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"id": 2370,
														"nodeType": "IfStatement",
														"src": "8727:96:12",
														"trueBody": {
															"id": 2369,
															"nodeType": "Block",
															"src": "8748:75:12",
															"statements": [
																{
																	"expression": {
																		"id": 2363,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"id": 2361,
																			"name": "value",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 2317,
																			"src": "8766:5:12",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": ">>=",
																		"rightHandSide": {
																			"hexValue": "3332",
																			"id": 2362,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "8776:2:12",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_32_by_1",
																				"typeString": "int_const 32"
																			},
																			"value": "32"
																		},
																		"src": "8766:12:12",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 2364,
																	"nodeType": "ExpressionStatement",
																	"src": "8766:12:12"
																},
																{
																	"expression": {
																		"id": 2367,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"id": 2365,
																			"name": "result",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 2323,
																			"src": "8796:6:12",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": "+=",
																		"rightHandSide": {
																			"hexValue": "3332",
																			"id": 2366,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "8806:2:12",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_32_by_1",
																				"typeString": "int_const 32"
																			},
																			"value": "32"
																		},
																		"src": "8796:12:12",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 2368,
																	"nodeType": "ExpressionStatement",
																	"src": "8796:12:12"
																}
															]
														}
													},
													{
														"condition": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 2375,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 2373,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"id": 2371,
																	"name": "value",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 2317,
																	"src": "8840:5:12",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": ">>",
																"rightExpression": {
																	"hexValue": "3136",
																	"id": 2372,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "8849:2:12",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_16_by_1",
																		"typeString": "int_const 16"
																	},
																	"value": "16"
																},
																"src": "8840:11:12",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">",
															"rightExpression": {
																"hexValue": "30",
																"id": 2374,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "8854:1:12",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															},
															"src": "8840:15:12",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"id": 2385,
														"nodeType": "IfStatement",
														"src": "8836:96:12",
														"trueBody": {
															"id": 2384,
															"nodeType": "Block",
															"src": "8857:75:12",
															"statements": [
																{
																	"expression": {
																		"id": 2378,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"id": 2376,
																			"name": "value",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 2317,
																			"src": "8875:5:12",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": ">>=",
																		"rightHandSide": {
																			"hexValue": "3136",
																			"id": 2377,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "8885:2:12",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_16_by_1",
																				"typeString": "int_const 16"
																			},
																			"value": "16"
																		},
																		"src": "8875:12:12",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 2379,
																	"nodeType": "ExpressionStatement",
																	"src": "8875:12:12"
																},
																{
																	"expression": {
																		"id": 2382,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"id": 2380,
																			"name": "result",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 2323,
																			"src": "8905:6:12",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": "+=",
																		"rightHandSide": {
																			"hexValue": "3136",
																			"id": 2381,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "8915:2:12",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_16_by_1",
																				"typeString": "int_const 16"
																			},
																			"value": "16"
																		},
																		"src": "8905:12:12",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 2383,
																	"nodeType": "ExpressionStatement",
																	"src": "8905:12:12"
																}
															]
														}
													},
													{
														"condition": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 2390,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 2388,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"id": 2386,
																	"name": "value",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 2317,
																	"src": "8949:5:12",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": ">>",
																"rightExpression": {
																	"hexValue": "38",
																	"id": 2387,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "8958:1:12",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_8_by_1",
																		"typeString": "int_const 8"
																	},
																	"value": "8"
																},
																"src": "8949:10:12",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">",
															"rightExpression": {
																"hexValue": "30",
																"id": 2389,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "8962:1:12",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															},
															"src": "8949:14:12",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"id": 2400,
														"nodeType": "IfStatement",
														"src": "8945:93:12",
														"trueBody": {
															"id": 2399,
															"nodeType": "Block",
															"src": "8965:73:12",
															"statements": [
																{
																	"expression": {
																		"id": 2393,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"id": 2391,
																			"name": "value",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 2317,
																			"src": "8983:5:12",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": ">>=",
																		"rightHandSide": {
																			"hexValue": "38",
																			"id": 2392,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "8993:1:12",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_8_by_1",
																				"typeString": "int_const 8"
																			},
																			"value": "8"
																		},
																		"src": "8983:11:12",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 2394,
																	"nodeType": "ExpressionStatement",
																	"src": "8983:11:12"
																},
																{
																	"expression": {
																		"id": 2397,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"id": 2395,
																			"name": "result",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 2323,
																			"src": "9012:6:12",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": "+=",
																		"rightHandSide": {
																			"hexValue": "38",
																			"id": 2396,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "9022:1:12",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_8_by_1",
																				"typeString": "int_const 8"
																			},
																			"value": "8"
																		},
																		"src": "9012:11:12",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 2398,
																	"nodeType": "ExpressionStatement",
																	"src": "9012:11:12"
																}
															]
														}
													},
													{
														"condition": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 2405,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 2403,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"id": 2401,
																	"name": "value",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 2317,
																	"src": "9055:5:12",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": ">>",
																"rightExpression": {
																	"hexValue": "34",
																	"id": 2402,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "9064:1:12",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_4_by_1",
																		"typeString": "int_const 4"
																	},
																	"value": "4"
																},
																"src": "9055:10:12",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">",
															"rightExpression": {
																"hexValue": "30",
																"id": 2404,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "9068:1:12",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															},
															"src": "9055:14:12",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"id": 2415,
														"nodeType": "IfStatement",
														"src": "9051:93:12",
														"trueBody": {
															"id": 2414,
															"nodeType": "Block",
															"src": "9071:73:12",
															"statements": [
																{
																	"expression": {
																		"id": 2408,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"id": 2406,
																			"name": "value",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 2317,
																			"src": "9089:5:12",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": ">>=",
																		"rightHandSide": {
																			"hexValue": "34",
																			"id": 2407,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "9099:1:12",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_4_by_1",
																				"typeString": "int_const 4"
																			},
																			"value": "4"
																		},
																		"src": "9089:11:12",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 2409,
																	"nodeType": "ExpressionStatement",
																	"src": "9089:11:12"
																},
																{
																	"expression": {
																		"id": 2412,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"id": 2410,
																			"name": "result",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 2323,
																			"src": "9118:6:12",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": "+=",
																		"rightHandSide": {
																			"hexValue": "34",
																			"id": 2411,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "9128:1:12",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_4_by_1",
																				"typeString": "int_const 4"
																			},
																			"value": "4"
																		},
																		"src": "9118:11:12",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 2413,
																	"nodeType": "ExpressionStatement",
																	"src": "9118:11:12"
																}
															]
														}
													},
													{
														"condition": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 2420,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 2418,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"id": 2416,
																	"name": "value",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 2317,
																	"src": "9161:5:12",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": ">>",
																"rightExpression": {
																	"hexValue": "32",
																	"id": 2417,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "9170:1:12",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_2_by_1",
																		"typeString": "int_const 2"
																	},
																	"value": "2"
																},
																"src": "9161:10:12",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">",
															"rightExpression": {
																"hexValue": "30",
																"id": 2419,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "9174:1:12",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															},
															"src": "9161:14:12",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"id": 2430,
														"nodeType": "IfStatement",
														"src": "9157:93:12",
														"trueBody": {
															"id": 2429,
															"nodeType": "Block",
															"src": "9177:73:12",
															"statements": [
																{
																	"expression": {
																		"id": 2423,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"id": 2421,
																			"name": "value",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 2317,
																			"src": "9195:5:12",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": ">>=",
																		"rightHandSide": {
																			"hexValue": "32",
																			"id": 2422,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "9205:1:12",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_2_by_1",
																				"typeString": "int_const 2"
																			},
																			"value": "2"
																		},
																		"src": "9195:11:12",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 2424,
																	"nodeType": "ExpressionStatement",
																	"src": "9195:11:12"
																},
																{
																	"expression": {
																		"id": 2427,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"id": 2425,
																			"name": "result",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 2323,
																			"src": "9224:6:12",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": "+=",
																		"rightHandSide": {
																			"hexValue": "32",
																			"id": 2426,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "9234:1:12",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_2_by_1",
																				"typeString": "int_const 2"
																			},
																			"value": "2"
																		},
																		"src": "9224:11:12",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 2428,
																	"nodeType": "ExpressionStatement",
																	"src": "9224:11:12"
																}
															]
														}
													},
													{
														"condition": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 2435,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 2433,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"id": 2431,
																	"name": "value",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 2317,
																	"src": "9267:5:12",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": ">>",
																"rightExpression": {
																	"hexValue": "31",
																	"id": 2432,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "9276:1:12",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_1_by_1",
																		"typeString": "int_const 1"
																	},
																	"value": "1"
																},
																"src": "9267:10:12",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">",
															"rightExpression": {
																"hexValue": "30",
																"id": 2434,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "9280:1:12",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															},
															"src": "9267:14:12",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"id": 2441,
														"nodeType": "IfStatement",
														"src": "9263:64:12",
														"trueBody": {
															"id": 2440,
															"nodeType": "Block",
															"src": "9283:44:12",
															"statements": [
																{
																	"expression": {
																		"id": 2438,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"id": 2436,
																			"name": "result",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 2323,
																			"src": "9301:6:12",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": "+=",
																		"rightHandSide": {
																			"hexValue": "31",
																			"id": 2437,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "9311:1:12",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_1_by_1",
																				"typeString": "int_const 1"
																			},
																			"value": "1"
																		},
																		"src": "9301:11:12",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 2439,
																	"nodeType": "ExpressionStatement",
																	"src": "9301:11:12"
																}
															]
														}
													}
												]
											},
											{
												"expression": {
													"id": 2443,
													"name": "result",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 2323,
													"src": "9353:6:12",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 2321,
												"id": 2444,
												"nodeType": "Return",
												"src": "9346:13:12"
											}
										]
									},
									"documentation": {
										"id": 2315,
										"nodeType": "StructuredDocumentation",
										"src": "8265:113:12",
										"text": " @dev Return the log in base 2, rounded down, of a positive value.\n Returns 0 if given 0."
									},
									"id": 2446,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "log2",
									"nameLocation": "8392:4:12",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 2318,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2317,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "8405:5:12",
												"nodeType": "VariableDeclaration",
												"scope": 2446,
												"src": "8397:13:12",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2316,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "8397:7:12",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "8396:15:12"
									},
									"returnParameters": {
										"id": 2321,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2320,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 2446,
												"src": "8435:7:12",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2319,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "8435:7:12",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "8434:9:12"
									},
									"scope": 2774,
									"src": "8383:983:12",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 2481,
										"nodeType": "Block",
										"src": "9599:165:12",
										"statements": [
											{
												"id": 2480,
												"nodeType": "UncheckedBlock",
												"src": "9609:149:12",
												"statements": [
													{
														"assignments": [
															2458
														],
														"declarations": [
															{
																"constant": false,
																"id": 2458,
																"mutability": "mutable",
																"name": "result",
																"nameLocation": "9641:6:12",
																"nodeType": "VariableDeclaration",
																"scope": 2480,
																"src": "9633:14:12",
																"stateVariable": false,
																"storageLocation": "default",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"typeName": {
																	"id": 2457,
																	"name": "uint256",
																	"nodeType": "ElementaryTypeName",
																	"src": "9633:7:12",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"visibility": "internal"
															}
														],
														"id": 2462,
														"initialValue": {
															"arguments": [
																{
																	"id": 2460,
																	"name": "value",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 2449,
																	"src": "9655:5:12",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																],
																"id": 2459,
																"name": "log2",
																"nodeType": "Identifier",
																"overloadedDeclarations": [
																	2446,
																	2482
																],
																"referencedDeclaration": 2446,
																"src": "9650:4:12",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_internal_pure$_t_uint256_$returns$_t_uint256_$",
																	"typeString": "function (uint256) pure returns (uint256)"
																}
															},
															"id": 2461,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "9650:11:12",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"nodeType": "VariableDeclarationStatement",
														"src": "9633:28:12"
													},
													{
														"expression": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 2478,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 2463,
																"name": "result",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 2458,
																"src": "9682:6:12",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "+",
															"rightExpression": {
																"components": [
																	{
																		"condition": {
																			"commonType": {
																				"typeIdentifier": "t_bool",
																				"typeString": "bool"
																			},
																			"id": 2473,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"leftExpression": {
																				"commonType": {
																					"typeIdentifier": "t_enum$_Rounding_$1916",
																					"typeString": "enum Math.Rounding"
																				},
																				"id": 2467,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": false,
																				"lValueRequested": false,
																				"leftExpression": {
																					"id": 2464,
																					"name": "rounding",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 2452,
																					"src": "9692:8:12",
																					"typeDescriptions": {
																						"typeIdentifier": "t_enum$_Rounding_$1916",
																						"typeString": "enum Math.Rounding"
																					}
																				},
																				"nodeType": "BinaryOperation",
																				"operator": "==",
																				"rightExpression": {
																					"expression": {
																						"id": 2465,
																						"name": "Rounding",
																						"nodeType": "Identifier",
																						"overloadedDeclarations": [],
																						"referencedDeclaration": 1916,
																						"src": "9704:8:12",
																						"typeDescriptions": {
																							"typeIdentifier": "t_type$_t_enum$_Rounding_$1916_$",
																							"typeString": "type(enum Math.Rounding)"
																						}
																					},
																					"id": 2466,
																					"isConstant": false,
																					"isLValue": false,
																					"isPure": true,
																					"lValueRequested": false,
																					"memberLocation": "9713:2:12",
																					"memberName": "Up",
																					"nodeType": "MemberAccess",
																					"referencedDeclaration": 1914,
																					"src": "9704:11:12",
																					"typeDescriptions": {
																						"typeIdentifier": "t_enum$_Rounding_$1916",
																						"typeString": "enum Math.Rounding"
																					}
																				},
																				"src": "9692:23:12",
																				"typeDescriptions": {
																					"typeIdentifier": "t_bool",
																					"typeString": "bool"
																				}
																			},
																			"nodeType": "BinaryOperation",
																			"operator": "&&",
																			"rightExpression": {
																				"commonType": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				},
																				"id": 2472,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": false,
																				"lValueRequested": false,
																				"leftExpression": {
																					"commonType": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					},
																					"id": 2470,
																					"isConstant": false,
																					"isLValue": false,
																					"isPure": false,
																					"lValueRequested": false,
																					"leftExpression": {
																						"hexValue": "31",
																						"id": 2468,
																						"isConstant": false,
																						"isLValue": false,
																						"isPure": true,
																						"kind": "number",
																						"lValueRequested": false,
																						"nodeType": "Literal",
																						"src": "9719:1:12",
																						"typeDescriptions": {
																							"typeIdentifier": "t_rational_1_by_1",
																							"typeString": "int_const 1"
																						},
																						"value": "1"
																					},
																					"nodeType": "BinaryOperation",
																					"operator": "<<",
																					"rightExpression": {
																						"id": 2469,
																						"name": "result",
																						"nodeType": "Identifier",
																						"overloadedDeclarations": [],
																						"referencedDeclaration": 2458,
																						"src": "9724:6:12",
																						"typeDescriptions": {
																							"typeIdentifier": "t_uint256",
																							"typeString": "uint256"
																						}
																					},
																					"src": "9719:11:12",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				"nodeType": "BinaryOperation",
																				"operator": "<",
																				"rightExpression": {
																					"id": 2471,
																					"name": "value",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 2449,
																					"src": "9733:5:12",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				"src": "9719:19:12",
																				"typeDescriptions": {
																					"typeIdentifier": "t_bool",
																					"typeString": "bool"
																				}
																			},
																			"src": "9692:46:12",
																			"typeDescriptions": {
																				"typeIdentifier": "t_bool",
																				"typeString": "bool"
																			}
																		},
																		"falseExpression": {
																			"hexValue": "30",
																			"id": 2475,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "9745:1:12",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_0_by_1",
																				"typeString": "int_const 0"
																			},
																			"value": "0"
																		},
																		"id": 2476,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"nodeType": "Conditional",
																		"src": "9692:54:12",
																		"trueExpression": {
																			"hexValue": "31",
																			"id": 2474,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "9741:1:12",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_1_by_1",
																				"typeString": "int_const 1"
																			},
																			"value": "1"
																		},
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint8",
																			"typeString": "uint8"
																		}
																	}
																],
																"id": 2477,
																"isConstant": false,
																"isInlineArray": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"nodeType": "TupleExpression",
																"src": "9691:56:12",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint8",
																	"typeString": "uint8"
																}
															},
															"src": "9682:65:12",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"functionReturnParameters": 2456,
														"id": 2479,
														"nodeType": "Return",
														"src": "9675:72:12"
													}
												]
											}
										]
									},
									"documentation": {
										"id": 2447,
										"nodeType": "StructuredDocumentation",
										"src": "9372:142:12",
										"text": " @dev Return the log in base 2, following the selected rounding direction, of a positive value.\n Returns 0 if given 0."
									},
									"id": 2482,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "log2",
									"nameLocation": "9528:4:12",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 2453,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2449,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "9541:5:12",
												"nodeType": "VariableDeclaration",
												"scope": 2482,
												"src": "9533:13:12",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2448,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "9533:7:12",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2452,
												"mutability": "mutable",
												"name": "rounding",
												"nameLocation": "9557:8:12",
												"nodeType": "VariableDeclaration",
												"scope": 2482,
												"src": "9548:17:12",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_enum$_Rounding_$1916",
													"typeString": "enum Math.Rounding"
												},
												"typeName": {
													"id": 2451,
													"nodeType": "UserDefinedTypeName",
													"pathNode": {
														"id": 2450,
														"name": "Rounding",
														"nameLocations": [
															"9548:8:12"
														],
														"nodeType": "IdentifierPath",
														"referencedDeclaration": 1916,
														"src": "9548:8:12"
													},
													"referencedDeclaration": 1916,
													"src": "9548:8:12",
													"typeDescriptions": {
														"typeIdentifier": "t_enum$_Rounding_$1916",
														"typeString": "enum Math.Rounding"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "9532:34:12"
									},
									"returnParameters": {
										"id": 2456,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2455,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 2482,
												"src": "9590:7:12",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2454,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "9590:7:12",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "9589:9:12"
									},
									"scope": 2774,
									"src": "9519:245:12",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 2610,
										"nodeType": "Block",
										"src": "9951:828:12",
										"statements": [
											{
												"assignments": [
													2491
												],
												"declarations": [
													{
														"constant": false,
														"id": 2491,
														"mutability": "mutable",
														"name": "result",
														"nameLocation": "9969:6:12",
														"nodeType": "VariableDeclaration",
														"scope": 2610,
														"src": "9961:14:12",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 2490,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "9961:7:12",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 2493,
												"initialValue": {
													"hexValue": "30",
													"id": 2492,
													"isConstant": false,
													"isLValue": false,
													"isPure": true,
													"kind": "number",
													"lValueRequested": false,
													"nodeType": "Literal",
													"src": "9978:1:12",
													"typeDescriptions": {
														"typeIdentifier": "t_rational_0_by_1",
														"typeString": "int_const 0"
													},
													"value": "0"
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "9961:18:12"
											},
											{
												"id": 2607,
												"nodeType": "UncheckedBlock",
												"src": "9989:761:12",
												"statements": [
													{
														"condition": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 2498,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 2494,
																"name": "value",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 2485,
																"src": "10017:5:12",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">=",
															"rightExpression": {
																"commonType": {
																	"typeIdentifier": "t_rational_10000000000000000000000000000000000000000000000000000000000000000_by_1",
																	"typeString": "int_const 1000...(57 digits omitted)...0000"
																},
																"id": 2497,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"leftExpression": {
																	"hexValue": "3130",
																	"id": 2495,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "10026:2:12",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_10_by_1",
																		"typeString": "int_const 10"
																	},
																	"value": "10"
																},
																"nodeType": "BinaryOperation",
																"operator": "**",
																"rightExpression": {
																	"hexValue": "3634",
																	"id": 2496,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "10030:2:12",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_64_by_1",
																		"typeString": "int_const 64"
																	},
																	"value": "64"
																},
																"src": "10026:6:12",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_10000000000000000000000000000000000000000000000000000000000000000_by_1",
																	"typeString": "int_const 1000...(57 digits omitted)...0000"
																}
															},
															"src": "10017:15:12",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"id": 2510,
														"nodeType": "IfStatement",
														"src": "10013:99:12",
														"trueBody": {
															"id": 2509,
															"nodeType": "Block",
															"src": "10034:78:12",
															"statements": [
																{
																	"expression": {
																		"id": 2503,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"id": 2499,
																			"name": "value",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 2485,
																			"src": "10052:5:12",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": "/=",
																		"rightHandSide": {
																			"commonType": {
																				"typeIdentifier": "t_rational_10000000000000000000000000000000000000000000000000000000000000000_by_1",
																				"typeString": "int_const 1000...(57 digits omitted)...0000"
																			},
																			"id": 2502,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"lValueRequested": false,
																			"leftExpression": {
																				"hexValue": "3130",
																				"id": 2500,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"kind": "number",
																				"lValueRequested": false,
																				"nodeType": "Literal",
																				"src": "10061:2:12",
																				"typeDescriptions": {
																					"typeIdentifier": "t_rational_10_by_1",
																					"typeString": "int_const 10"
																				},
																				"value": "10"
																			},
																			"nodeType": "BinaryOperation",
																			"operator": "**",
																			"rightExpression": {
																				"hexValue": "3634",
																				"id": 2501,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"kind": "number",
																				"lValueRequested": false,
																				"nodeType": "Literal",
																				"src": "10065:2:12",
																				"typeDescriptions": {
																					"typeIdentifier": "t_rational_64_by_1",
																					"typeString": "int_const 64"
																				},
																				"value": "64"
																			},
																			"src": "10061:6:12",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_10000000000000000000000000000000000000000000000000000000000000000_by_1",
																				"typeString": "int_const 1000...(57 digits omitted)...0000"
																			}
																		},
																		"src": "10052:15:12",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 2504,
																	"nodeType": "ExpressionStatement",
																	"src": "10052:15:12"
																},
																{
																	"expression": {
																		"id": 2507,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"id": 2505,
																			"name": "result",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 2491,
																			"src": "10085:6:12",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": "+=",
																		"rightHandSide": {
																			"hexValue": "3634",
																			"id": 2506,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "10095:2:12",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_64_by_1",
																				"typeString": "int_const 64"
																			},
																			"value": "64"
																		},
																		"src": "10085:12:12",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 2508,
																	"nodeType": "ExpressionStatement",
																	"src": "10085:12:12"
																}
															]
														}
													},
													{
														"condition": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 2515,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 2511,
																"name": "value",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 2485,
																"src": "10129:5:12",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">=",
															"rightExpression": {
																"commonType": {
																	"typeIdentifier": "t_rational_100000000000000000000000000000000_by_1",
																	"typeString": "int_const 1000...(25 digits omitted)...0000"
																},
																"id": 2514,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"leftExpression": {
																	"hexValue": "3130",
																	"id": 2512,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "10138:2:12",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_10_by_1",
																		"typeString": "int_const 10"
																	},
																	"value": "10"
																},
																"nodeType": "BinaryOperation",
																"operator": "**",
																"rightExpression": {
																	"hexValue": "3332",
																	"id": 2513,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "10142:2:12",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_32_by_1",
																		"typeString": "int_const 32"
																	},
																	"value": "32"
																},
																"src": "10138:6:12",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_100000000000000000000000000000000_by_1",
																	"typeString": "int_const 1000...(25 digits omitted)...0000"
																}
															},
															"src": "10129:15:12",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"id": 2527,
														"nodeType": "IfStatement",
														"src": "10125:99:12",
														"trueBody": {
															"id": 2526,
															"nodeType": "Block",
															"src": "10146:78:12",
															"statements": [
																{
																	"expression": {
																		"id": 2520,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"id": 2516,
																			"name": "value",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 2485,
																			"src": "10164:5:12",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": "/=",
																		"rightHandSide": {
																			"commonType": {
																				"typeIdentifier": "t_rational_100000000000000000000000000000000_by_1",
																				"typeString": "int_const 1000...(25 digits omitted)...0000"
																			},
																			"id": 2519,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"lValueRequested": false,
																			"leftExpression": {
																				"hexValue": "3130",
																				"id": 2517,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"kind": "number",
																				"lValueRequested": false,
																				"nodeType": "Literal",
																				"src": "10173:2:12",
																				"typeDescriptions": {
																					"typeIdentifier": "t_rational_10_by_1",
																					"typeString": "int_const 10"
																				},
																				"value": "10"
																			},
																			"nodeType": "BinaryOperation",
																			"operator": "**",
																			"rightExpression": {
																				"hexValue": "3332",
																				"id": 2518,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"kind": "number",
																				"lValueRequested": false,
																				"nodeType": "Literal",
																				"src": "10177:2:12",
																				"typeDescriptions": {
																					"typeIdentifier": "t_rational_32_by_1",
																					"typeString": "int_const 32"
																				},
																				"value": "32"
																			},
																			"src": "10173:6:12",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_100000000000000000000000000000000_by_1",
																				"typeString": "int_const 1000...(25 digits omitted)...0000"
																			}
																		},
																		"src": "10164:15:12",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 2521,
																	"nodeType": "ExpressionStatement",
																	"src": "10164:15:12"
																},
																{
																	"expression": {
																		"id": 2524,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"id": 2522,
																			"name": "result",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 2491,
																			"src": "10197:6:12",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": "+=",
																		"rightHandSide": {
																			"hexValue": "3332",
																			"id": 2523,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "10207:2:12",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_32_by_1",
																				"typeString": "int_const 32"
																			},
																			"value": "32"
																		},
																		"src": "10197:12:12",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 2525,
																	"nodeType": "ExpressionStatement",
																	"src": "10197:12:12"
																}
															]
														}
													},
													{
														"condition": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 2532,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 2528,
																"name": "value",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 2485,
																"src": "10241:5:12",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">=",
															"rightExpression": {
																"commonType": {
																	"typeIdentifier": "t_rational_10000000000000000_by_1",
																	"typeString": "int_const 10000000000000000"
																},
																"id": 2531,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"leftExpression": {
																	"hexValue": "3130",
																	"id": 2529,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "10250:2:12",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_10_by_1",
																		"typeString": "int_const 10"
																	},
																	"value": "10"
																},
																"nodeType": "BinaryOperation",
																"operator": "**",
																"rightExpression": {
																	"hexValue": "3136",
																	"id": 2530,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "10254:2:12",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_16_by_1",
																		"typeString": "int_const 16"
																	},
																	"value": "16"
																},
																"src": "10250:6:12",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_10000000000000000_by_1",
																	"typeString": "int_const 10000000000000000"
																}
															},
															"src": "10241:15:12",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"id": 2544,
														"nodeType": "IfStatement",
														"src": "10237:99:12",
														"trueBody": {
															"id": 2543,
															"nodeType": "Block",
															"src": "10258:78:12",
															"statements": [
																{
																	"expression": {
																		"id": 2537,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"id": 2533,
																			"name": "value",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 2485,
																			"src": "10276:5:12",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": "/=",
																		"rightHandSide": {
																			"commonType": {
																				"typeIdentifier": "t_rational_10000000000000000_by_1",
																				"typeString": "int_const 10000000000000000"
																			},
																			"id": 2536,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"lValueRequested": false,
																			"leftExpression": {
																				"hexValue": "3130",
																				"id": 2534,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"kind": "number",
																				"lValueRequested": false,
																				"nodeType": "Literal",
																				"src": "10285:2:12",
																				"typeDescriptions": {
																					"typeIdentifier": "t_rational_10_by_1",
																					"typeString": "int_const 10"
																				},
																				"value": "10"
																			},
																			"nodeType": "BinaryOperation",
																			"operator": "**",
																			"rightExpression": {
																				"hexValue": "3136",
																				"id": 2535,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"kind": "number",
																				"lValueRequested": false,
																				"nodeType": "Literal",
																				"src": "10289:2:12",
																				"typeDescriptions": {
																					"typeIdentifier": "t_rational_16_by_1",
																					"typeString": "int_const 16"
																				},
																				"value": "16"
																			},
																			"src": "10285:6:12",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_10000000000000000_by_1",
																				"typeString": "int_const 10000000000000000"
																			}
																		},
																		"src": "10276:15:12",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 2538,
																	"nodeType": "ExpressionStatement",
																	"src": "10276:15:12"
																},
																{
																	"expression": {
																		"id": 2541,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"id": 2539,
																			"name": "result",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 2491,
																			"src": "10309:6:12",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": "+=",
																		"rightHandSide": {
																			"hexValue": "3136",
																			"id": 2540,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "10319:2:12",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_16_by_1",
																				"typeString": "int_const 16"
																			},
																			"value": "16"
																		},
																		"src": "10309:12:12",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 2542,
																	"nodeType": "ExpressionStatement",
																	"src": "10309:12:12"
																}
															]
														}
													},
													{
														"condition": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 2549,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 2545,
																"name": "value",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 2485,
																"src": "10353:5:12",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">=",
															"rightExpression": {
																"commonType": {
																	"typeIdentifier": "t_rational_100000000_by_1",
																	"typeString": "int_const 100000000"
																},
																"id": 2548,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"leftExpression": {
																	"hexValue": "3130",
																	"id": 2546,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "10362:2:12",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_10_by_1",
																		"typeString": "int_const 10"
																	},
																	"value": "10"
																},
																"nodeType": "BinaryOperation",
																"operator": "**",
																"rightExpression": {
																	"hexValue": "38",
																	"id": 2547,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "10366:1:12",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_8_by_1",
																		"typeString": "int_const 8"
																	},
																	"value": "8"
																},
																"src": "10362:5:12",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_100000000_by_1",
																	"typeString": "int_const 100000000"
																}
															},
															"src": "10353:14:12",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"id": 2561,
														"nodeType": "IfStatement",
														"src": "10349:96:12",
														"trueBody": {
															"id": 2560,
															"nodeType": "Block",
															"src": "10369:76:12",
															"statements": [
																{
																	"expression": {
																		"id": 2554,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"id": 2550,
																			"name": "value",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 2485,
																			"src": "10387:5:12",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": "/=",
																		"rightHandSide": {
																			"commonType": {
																				"typeIdentifier": "t_rational_100000000_by_1",
																				"typeString": "int_const 100000000"
																			},
																			"id": 2553,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"lValueRequested": false,
																			"leftExpression": {
																				"hexValue": "3130",
																				"id": 2551,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"kind": "number",
																				"lValueRequested": false,
																				"nodeType": "Literal",
																				"src": "10396:2:12",
																				"typeDescriptions": {
																					"typeIdentifier": "t_rational_10_by_1",
																					"typeString": "int_const 10"
																				},
																				"value": "10"
																			},
																			"nodeType": "BinaryOperation",
																			"operator": "**",
																			"rightExpression": {
																				"hexValue": "38",
																				"id": 2552,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"kind": "number",
																				"lValueRequested": false,
																				"nodeType": "Literal",
																				"src": "10400:1:12",
																				"typeDescriptions": {
																					"typeIdentifier": "t_rational_8_by_1",
																					"typeString": "int_const 8"
																				},
																				"value": "8"
																			},
																			"src": "10396:5:12",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_100000000_by_1",
																				"typeString": "int_const 100000000"
																			}
																		},
																		"src": "10387:14:12",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 2555,
																	"nodeType": "ExpressionStatement",
																	"src": "10387:14:12"
																},
																{
																	"expression": {
																		"id": 2558,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"id": 2556,
																			"name": "result",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 2491,
																			"src": "10419:6:12",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": "+=",
																		"rightHandSide": {
																			"hexValue": "38",
																			"id": 2557,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "10429:1:12",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_8_by_1",
																				"typeString": "int_const 8"
																			},
																			"value": "8"
																		},
																		"src": "10419:11:12",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 2559,
																	"nodeType": "ExpressionStatement",
																	"src": "10419:11:12"
																}
															]
														}
													},
													{
														"condition": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 2566,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 2562,
																"name": "value",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 2485,
																"src": "10462:5:12",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">=",
															"rightExpression": {
																"commonType": {
																	"typeIdentifier": "t_rational_10000_by_1",
																	"typeString": "int_const 10000"
																},
																"id": 2565,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"leftExpression": {
																	"hexValue": "3130",
																	"id": 2563,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "10471:2:12",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_10_by_1",
																		"typeString": "int_const 10"
																	},
																	"value": "10"
																},
																"nodeType": "BinaryOperation",
																"operator": "**",
																"rightExpression": {
																	"hexValue": "34",
																	"id": 2564,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "10475:1:12",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_4_by_1",
																		"typeString": "int_const 4"
																	},
																	"value": "4"
																},
																"src": "10471:5:12",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_10000_by_1",
																	"typeString": "int_const 10000"
																}
															},
															"src": "10462:14:12",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"id": 2578,
														"nodeType": "IfStatement",
														"src": "10458:96:12",
														"trueBody": {
															"id": 2577,
															"nodeType": "Block",
															"src": "10478:76:12",
															"statements": [
																{
																	"expression": {
																		"id": 2571,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"id": 2567,
																			"name": "value",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 2485,
																			"src": "10496:5:12",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": "/=",
																		"rightHandSide": {
																			"commonType": {
																				"typeIdentifier": "t_rational_10000_by_1",
																				"typeString": "int_const 10000"
																			},
																			"id": 2570,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"lValueRequested": false,
																			"leftExpression": {
																				"hexValue": "3130",
																				"id": 2568,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"kind": "number",
																				"lValueRequested": false,
																				"nodeType": "Literal",
																				"src": "10505:2:12",
																				"typeDescriptions": {
																					"typeIdentifier": "t_rational_10_by_1",
																					"typeString": "int_const 10"
																				},
																				"value": "10"
																			},
																			"nodeType": "BinaryOperation",
																			"operator": "**",
																			"rightExpression": {
																				"hexValue": "34",
																				"id": 2569,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"kind": "number",
																				"lValueRequested": false,
																				"nodeType": "Literal",
																				"src": "10509:1:12",
																				"typeDescriptions": {
																					"typeIdentifier": "t_rational_4_by_1",
																					"typeString": "int_const 4"
																				},
																				"value": "4"
																			},
																			"src": "10505:5:12",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_10000_by_1",
																				"typeString": "int_const 10000"
																			}
																		},
																		"src": "10496:14:12",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 2572,
																	"nodeType": "ExpressionStatement",
																	"src": "10496:14:12"
																},
																{
																	"expression": {
																		"id": 2575,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"id": 2573,
																			"name": "result",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 2491,
																			"src": "10528:6:12",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": "+=",
																		"rightHandSide": {
																			"hexValue": "34",
																			"id": 2574,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "10538:1:12",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_4_by_1",
																				"typeString": "int_const 4"
																			},
																			"value": "4"
																		},
																		"src": "10528:11:12",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 2576,
																	"nodeType": "ExpressionStatement",
																	"src": "10528:11:12"
																}
															]
														}
													},
													{
														"condition": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 2583,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 2579,
																"name": "value",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 2485,
																"src": "10571:5:12",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">=",
															"rightExpression": {
																"commonType": {
																	"typeIdentifier": "t_rational_100_by_1",
																	"typeString": "int_const 100"
																},
																"id": 2582,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"leftExpression": {
																	"hexValue": "3130",
																	"id": 2580,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "10580:2:12",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_10_by_1",
																		"typeString": "int_const 10"
																	},
																	"value": "10"
																},
																"nodeType": "BinaryOperation",
																"operator": "**",
																"rightExpression": {
																	"hexValue": "32",
																	"id": 2581,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "10584:1:12",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_2_by_1",
																		"typeString": "int_const 2"
																	},
																	"value": "2"
																},
																"src": "10580:5:12",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_100_by_1",
																	"typeString": "int_const 100"
																}
															},
															"src": "10571:14:12",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"id": 2595,
														"nodeType": "IfStatement",
														"src": "10567:96:12",
														"trueBody": {
															"id": 2594,
															"nodeType": "Block",
															"src": "10587:76:12",
															"statements": [
																{
																	"expression": {
																		"id": 2588,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"id": 2584,
																			"name": "value",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 2485,
																			"src": "10605:5:12",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": "/=",
																		"rightHandSide": {
																			"commonType": {
																				"typeIdentifier": "t_rational_100_by_1",
																				"typeString": "int_const 100"
																			},
																			"id": 2587,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"lValueRequested": false,
																			"leftExpression": {
																				"hexValue": "3130",
																				"id": 2585,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"kind": "number",
																				"lValueRequested": false,
																				"nodeType": "Literal",
																				"src": "10614:2:12",
																				"typeDescriptions": {
																					"typeIdentifier": "t_rational_10_by_1",
																					"typeString": "int_const 10"
																				},
																				"value": "10"
																			},
																			"nodeType": "BinaryOperation",
																			"operator": "**",
																			"rightExpression": {
																				"hexValue": "32",
																				"id": 2586,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"kind": "number",
																				"lValueRequested": false,
																				"nodeType": "Literal",
																				"src": "10618:1:12",
																				"typeDescriptions": {
																					"typeIdentifier": "t_rational_2_by_1",
																					"typeString": "int_const 2"
																				},
																				"value": "2"
																			},
																			"src": "10614:5:12",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_100_by_1",
																				"typeString": "int_const 100"
																			}
																		},
																		"src": "10605:14:12",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 2589,
																	"nodeType": "ExpressionStatement",
																	"src": "10605:14:12"
																},
																{
																	"expression": {
																		"id": 2592,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"id": 2590,
																			"name": "result",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 2491,
																			"src": "10637:6:12",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": "+=",
																		"rightHandSide": {
																			"hexValue": "32",
																			"id": 2591,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "10647:1:12",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_2_by_1",
																				"typeString": "int_const 2"
																			},
																			"value": "2"
																		},
																		"src": "10637:11:12",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 2593,
																	"nodeType": "ExpressionStatement",
																	"src": "10637:11:12"
																}
															]
														}
													},
													{
														"condition": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 2600,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 2596,
																"name": "value",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 2485,
																"src": "10680:5:12",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">=",
															"rightExpression": {
																"commonType": {
																	"typeIdentifier": "t_rational_10_by_1",
																	"typeString": "int_const 10"
																},
																"id": 2599,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"leftExpression": {
																	"hexValue": "3130",
																	"id": 2597,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "10689:2:12",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_10_by_1",
																		"typeString": "int_const 10"
																	},
																	"value": "10"
																},
																"nodeType": "BinaryOperation",
																"operator": "**",
																"rightExpression": {
																	"hexValue": "31",
																	"id": 2598,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "10693:1:12",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_1_by_1",
																		"typeString": "int_const 1"
																	},
																	"value": "1"
																},
																"src": "10689:5:12",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_10_by_1",
																	"typeString": "int_const 10"
																}
															},
															"src": "10680:14:12",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"id": 2606,
														"nodeType": "IfStatement",
														"src": "10676:64:12",
														"trueBody": {
															"id": 2605,
															"nodeType": "Block",
															"src": "10696:44:12",
															"statements": [
																{
																	"expression": {
																		"id": 2603,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"id": 2601,
																			"name": "result",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 2491,
																			"src": "10714:6:12",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": "+=",
																		"rightHandSide": {
																			"hexValue": "31",
																			"id": 2602,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "10724:1:12",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_1_by_1",
																				"typeString": "int_const 1"
																			},
																			"value": "1"
																		},
																		"src": "10714:11:12",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 2604,
																	"nodeType": "ExpressionStatement",
																	"src": "10714:11:12"
																}
															]
														}
													}
												]
											},
											{
												"expression": {
													"id": 2608,
													"name": "result",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 2491,
													"src": "10766:6:12",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 2489,
												"id": 2609,
												"nodeType": "Return",
												"src": "10759:13:12"
											}
										]
									},
									"documentation": {
										"id": 2483,
										"nodeType": "StructuredDocumentation",
										"src": "9770:114:12",
										"text": " @dev Return the log in base 10, rounded down, of a positive value.\n Returns 0 if given 0."
									},
									"id": 2611,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "log10",
									"nameLocation": "9898:5:12",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 2486,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2485,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "9912:5:12",
												"nodeType": "VariableDeclaration",
												"scope": 2611,
												"src": "9904:13:12",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2484,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "9904:7:12",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "9903:15:12"
									},
									"returnParameters": {
										"id": 2489,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2488,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 2611,
												"src": "9942:7:12",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2487,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "9942:7:12",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "9941:9:12"
									},
									"scope": 2774,
									"src": "9889:890:12",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 2646,
										"nodeType": "Block",
										"src": "11014:165:12",
										"statements": [
											{
												"id": 2645,
												"nodeType": "UncheckedBlock",
												"src": "11024:149:12",
												"statements": [
													{
														"assignments": [
															2623
														],
														"declarations": [
															{
																"constant": false,
																"id": 2623,
																"mutability": "mutable",
																"name": "result",
																"nameLocation": "11056:6:12",
																"nodeType": "VariableDeclaration",
																"scope": 2645,
																"src": "11048:14:12",
																"stateVariable": false,
																"storageLocation": "default",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"typeName": {
																	"id": 2622,
																	"name": "uint256",
																	"nodeType": "ElementaryTypeName",
																	"src": "11048:7:12",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"visibility": "internal"
															}
														],
														"id": 2627,
														"initialValue": {
															"arguments": [
																{
																	"id": 2625,
																	"name": "value",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 2614,
																	"src": "11071:5:12",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																],
																"id": 2624,
																"name": "log10",
																"nodeType": "Identifier",
																"overloadedDeclarations": [
																	2611,
																	2647
																],
																"referencedDeclaration": 2611,
																"src": "11065:5:12",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_internal_pure$_t_uint256_$returns$_t_uint256_$",
																	"typeString": "function (uint256) pure returns (uint256)"
																}
															},
															"id": 2626,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "11065:12:12",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"nodeType": "VariableDeclarationStatement",
														"src": "11048:29:12"
													},
													{
														"expression": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 2643,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 2628,
																"name": "result",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 2623,
																"src": "11098:6:12",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "+",
															"rightExpression": {
																"components": [
																	{
																		"condition": {
																			"commonType": {
																				"typeIdentifier": "t_bool",
																				"typeString": "bool"
																			},
																			"id": 2638,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"leftExpression": {
																				"commonType": {
																					"typeIdentifier": "t_enum$_Rounding_$1916",
																					"typeString": "enum Math.Rounding"
																				},
																				"id": 2632,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": false,
																				"lValueRequested": false,
																				"leftExpression": {
																					"id": 2629,
																					"name": "rounding",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 2617,
																					"src": "11108:8:12",
																					"typeDescriptions": {
																						"typeIdentifier": "t_enum$_Rounding_$1916",
																						"typeString": "enum Math.Rounding"
																					}
																				},
																				"nodeType": "BinaryOperation",
																				"operator": "==",
																				"rightExpression": {
																					"expression": {
																						"id": 2630,
																						"name": "Rounding",
																						"nodeType": "Identifier",
																						"overloadedDeclarations": [],
																						"referencedDeclaration": 1916,
																						"src": "11120:8:12",
																						"typeDescriptions": {
																							"typeIdentifier": "t_type$_t_enum$_Rounding_$1916_$",
																							"typeString": "type(enum Math.Rounding)"
																						}
																					},
																					"id": 2631,
																					"isConstant": false,
																					"isLValue": false,
																					"isPure": true,
																					"lValueRequested": false,
																					"memberLocation": "11129:2:12",
																					"memberName": "Up",
																					"nodeType": "MemberAccess",
																					"referencedDeclaration": 1914,
																					"src": "11120:11:12",
																					"typeDescriptions": {
																						"typeIdentifier": "t_enum$_Rounding_$1916",
																						"typeString": "enum Math.Rounding"
																					}
																				},
																				"src": "11108:23:12",
																				"typeDescriptions": {
																					"typeIdentifier": "t_bool",
																					"typeString": "bool"
																				}
																			},
																			"nodeType": "BinaryOperation",
																			"operator": "&&",
																			"rightExpression": {
																				"commonType": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				},
																				"id": 2637,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": false,
																				"lValueRequested": false,
																				"leftExpression": {
																					"commonType": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					},
																					"id": 2635,
																					"isConstant": false,
																					"isLValue": false,
																					"isPure": false,
																					"lValueRequested": false,
																					"leftExpression": {
																						"hexValue": "3130",
																						"id": 2633,
																						"isConstant": false,
																						"isLValue": false,
																						"isPure": true,
																						"kind": "number",
																						"lValueRequested": false,
																						"nodeType": "Literal",
																						"src": "11135:2:12",
																						"typeDescriptions": {
																							"typeIdentifier": "t_rational_10_by_1",
																							"typeString": "int_const 10"
																						},
																						"value": "10"
																					},
																					"nodeType": "BinaryOperation",
																					"operator": "**",
																					"rightExpression": {
																						"id": 2634,
																						"name": "result",
																						"nodeType": "Identifier",
																						"overloadedDeclarations": [],
																						"referencedDeclaration": 2623,
																						"src": "11139:6:12",
																						"typeDescriptions": {
																							"typeIdentifier": "t_uint256",
																							"typeString": "uint256"
																						}
																					},
																					"src": "11135:10:12",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				"nodeType": "BinaryOperation",
																				"operator": "<",
																				"rightExpression": {
																					"id": 2636,
																					"name": "value",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 2614,
																					"src": "11148:5:12",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				"src": "11135:18:12",
																				"typeDescriptions": {
																					"typeIdentifier": "t_bool",
																					"typeString": "bool"
																				}
																			},
																			"src": "11108:45:12",
																			"typeDescriptions": {
																				"typeIdentifier": "t_bool",
																				"typeString": "bool"
																			}
																		},
																		"falseExpression": {
																			"hexValue": "30",
																			"id": 2640,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "11160:1:12",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_0_by_1",
																				"typeString": "int_const 0"
																			},
																			"value": "0"
																		},
																		"id": 2641,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"nodeType": "Conditional",
																		"src": "11108:53:12",
																		"trueExpression": {
																			"hexValue": "31",
																			"id": 2639,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "11156:1:12",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_1_by_1",
																				"typeString": "int_const 1"
																			},
																			"value": "1"
																		},
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint8",
																			"typeString": "uint8"
																		}
																	}
																],
																"id": 2642,
																"isConstant": false,
																"isInlineArray": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"nodeType": "TupleExpression",
																"src": "11107:55:12",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint8",
																	"typeString": "uint8"
																}
															},
															"src": "11098:64:12",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"functionReturnParameters": 2621,
														"id": 2644,
														"nodeType": "Return",
														"src": "11091:71:12"
													}
												]
											}
										]
									},
									"documentation": {
										"id": 2612,
										"nodeType": "StructuredDocumentation",
										"src": "10785:143:12",
										"text": " @dev Return the log in base 10, following the selected rounding direction, of a positive value.\n Returns 0 if given 0."
									},
									"id": 2647,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "log10",
									"nameLocation": "10942:5:12",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 2618,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2614,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "10956:5:12",
												"nodeType": "VariableDeclaration",
												"scope": 2647,
												"src": "10948:13:12",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2613,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "10948:7:12",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2617,
												"mutability": "mutable",
												"name": "rounding",
												"nameLocation": "10972:8:12",
												"nodeType": "VariableDeclaration",
												"scope": 2647,
												"src": "10963:17:12",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_enum$_Rounding_$1916",
													"typeString": "enum Math.Rounding"
												},
												"typeName": {
													"id": 2616,
													"nodeType": "UserDefinedTypeName",
													"pathNode": {
														"id": 2615,
														"name": "Rounding",
														"nameLocations": [
															"10963:8:12"
														],
														"nodeType": "IdentifierPath",
														"referencedDeclaration": 1916,
														"src": "10963:8:12"
													},
													"referencedDeclaration": 1916,
													"src": "10963:8:12",
													"typeDescriptions": {
														"typeIdentifier": "t_enum$_Rounding_$1916",
														"typeString": "enum Math.Rounding"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "10947:34:12"
									},
									"returnParameters": {
										"id": 2621,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2620,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 2647,
												"src": "11005:7:12",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2619,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "11005:7:12",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "11004:9:12"
									},
									"scope": 2774,
									"src": "10933:246:12",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 2733,
										"nodeType": "Block",
										"src": "11493:600:12",
										"statements": [
											{
												"assignments": [
													2656
												],
												"declarations": [
													{
														"constant": false,
														"id": 2656,
														"mutability": "mutable",
														"name": "result",
														"nameLocation": "11511:6:12",
														"nodeType": "VariableDeclaration",
														"scope": 2733,
														"src": "11503:14:12",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 2655,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "11503:7:12",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 2658,
												"initialValue": {
													"hexValue": "30",
													"id": 2657,
													"isConstant": false,
													"isLValue": false,
													"isPure": true,
													"kind": "number",
													"lValueRequested": false,
													"nodeType": "Literal",
													"src": "11520:1:12",
													"typeDescriptions": {
														"typeIdentifier": "t_rational_0_by_1",
														"typeString": "int_const 0"
													},
													"value": "0"
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "11503:18:12"
											},
											{
												"id": 2730,
												"nodeType": "UncheckedBlock",
												"src": "11531:533:12",
												"statements": [
													{
														"condition": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 2663,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 2661,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"id": 2659,
																	"name": "value",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 2650,
																	"src": "11559:5:12",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": ">>",
																"rightExpression": {
																	"hexValue": "313238",
																	"id": 2660,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "11568:3:12",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_128_by_1",
																		"typeString": "int_const 128"
																	},
																	"value": "128"
																},
																"src": "11559:12:12",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">",
															"rightExpression": {
																"hexValue": "30",
																"id": 2662,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "11574:1:12",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															},
															"src": "11559:16:12",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"id": 2673,
														"nodeType": "IfStatement",
														"src": "11555:98:12",
														"trueBody": {
															"id": 2672,
															"nodeType": "Block",
															"src": "11577:76:12",
															"statements": [
																{
																	"expression": {
																		"id": 2666,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"id": 2664,
																			"name": "value",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 2650,
																			"src": "11595:5:12",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": ">>=",
																		"rightHandSide": {
																			"hexValue": "313238",
																			"id": 2665,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "11605:3:12",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_128_by_1",
																				"typeString": "int_const 128"
																			},
																			"value": "128"
																		},
																		"src": "11595:13:12",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 2667,
																	"nodeType": "ExpressionStatement",
																	"src": "11595:13:12"
																},
																{
																	"expression": {
																		"id": 2670,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"id": 2668,
																			"name": "result",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 2656,
																			"src": "11626:6:12",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": "+=",
																		"rightHandSide": {
																			"hexValue": "3136",
																			"id": 2669,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "11636:2:12",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_16_by_1",
																				"typeString": "int_const 16"
																			},
																			"value": "16"
																		},
																		"src": "11626:12:12",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 2671,
																	"nodeType": "ExpressionStatement",
																	"src": "11626:12:12"
																}
															]
														}
													},
													{
														"condition": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 2678,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 2676,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"id": 2674,
																	"name": "value",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 2650,
																	"src": "11670:5:12",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": ">>",
																"rightExpression": {
																	"hexValue": "3634",
																	"id": 2675,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "11679:2:12",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_64_by_1",
																		"typeString": "int_const 64"
																	},
																	"value": "64"
																},
																"src": "11670:11:12",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">",
															"rightExpression": {
																"hexValue": "30",
																"id": 2677,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "11684:1:12",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															},
															"src": "11670:15:12",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"id": 2688,
														"nodeType": "IfStatement",
														"src": "11666:95:12",
														"trueBody": {
															"id": 2687,
															"nodeType": "Block",
															"src": "11687:74:12",
															"statements": [
																{
																	"expression": {
																		"id": 2681,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"id": 2679,
																			"name": "value",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 2650,
																			"src": "11705:5:12",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": ">>=",
																		"rightHandSide": {
																			"hexValue": "3634",
																			"id": 2680,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "11715:2:12",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_64_by_1",
																				"typeString": "int_const 64"
																			},
																			"value": "64"
																		},
																		"src": "11705:12:12",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 2682,
																	"nodeType": "ExpressionStatement",
																	"src": "11705:12:12"
																},
																{
																	"expression": {
																		"id": 2685,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"id": 2683,
																			"name": "result",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 2656,
																			"src": "11735:6:12",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": "+=",
																		"rightHandSide": {
																			"hexValue": "38",
																			"id": 2684,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "11745:1:12",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_8_by_1",
																				"typeString": "int_const 8"
																			},
																			"value": "8"
																		},
																		"src": "11735:11:12",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 2686,
																	"nodeType": "ExpressionStatement",
																	"src": "11735:11:12"
																}
															]
														}
													},
													{
														"condition": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 2693,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 2691,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"id": 2689,
																	"name": "value",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 2650,
																	"src": "11778:5:12",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": ">>",
																"rightExpression": {
																	"hexValue": "3332",
																	"id": 2690,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "11787:2:12",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_32_by_1",
																		"typeString": "int_const 32"
																	},
																	"value": "32"
																},
																"src": "11778:11:12",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">",
															"rightExpression": {
																"hexValue": "30",
																"id": 2692,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "11792:1:12",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															},
															"src": "11778:15:12",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"id": 2703,
														"nodeType": "IfStatement",
														"src": "11774:95:12",
														"trueBody": {
															"id": 2702,
															"nodeType": "Block",
															"src": "11795:74:12",
															"statements": [
																{
																	"expression": {
																		"id": 2696,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"id": 2694,
																			"name": "value",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 2650,
																			"src": "11813:5:12",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": ">>=",
																		"rightHandSide": {
																			"hexValue": "3332",
																			"id": 2695,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "11823:2:12",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_32_by_1",
																				"typeString": "int_const 32"
																			},
																			"value": "32"
																		},
																		"src": "11813:12:12",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 2697,
																	"nodeType": "ExpressionStatement",
																	"src": "11813:12:12"
																},
																{
																	"expression": {
																		"id": 2700,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"id": 2698,
																			"name": "result",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 2656,
																			"src": "11843:6:12",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": "+=",
																		"rightHandSide": {
																			"hexValue": "34",
																			"id": 2699,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "11853:1:12",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_4_by_1",
																				"typeString": "int_const 4"
																			},
																			"value": "4"
																		},
																		"src": "11843:11:12",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 2701,
																	"nodeType": "ExpressionStatement",
																	"src": "11843:11:12"
																}
															]
														}
													},
													{
														"condition": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 2708,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 2706,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"id": 2704,
																	"name": "value",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 2650,
																	"src": "11886:5:12",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": ">>",
																"rightExpression": {
																	"hexValue": "3136",
																	"id": 2705,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "11895:2:12",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_16_by_1",
																		"typeString": "int_const 16"
																	},
																	"value": "16"
																},
																"src": "11886:11:12",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">",
															"rightExpression": {
																"hexValue": "30",
																"id": 2707,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "11900:1:12",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															},
															"src": "11886:15:12",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"id": 2718,
														"nodeType": "IfStatement",
														"src": "11882:95:12",
														"trueBody": {
															"id": 2717,
															"nodeType": "Block",
															"src": "11903:74:12",
															"statements": [
																{
																	"expression": {
																		"id": 2711,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"id": 2709,
																			"name": "value",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 2650,
																			"src": "11921:5:12",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": ">>=",
																		"rightHandSide": {
																			"hexValue": "3136",
																			"id": 2710,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "11931:2:12",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_16_by_1",
																				"typeString": "int_const 16"
																			},
																			"value": "16"
																		},
																		"src": "11921:12:12",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 2712,
																	"nodeType": "ExpressionStatement",
																	"src": "11921:12:12"
																},
																{
																	"expression": {
																		"id": 2715,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"id": 2713,
																			"name": "result",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 2656,
																			"src": "11951:6:12",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": "+=",
																		"rightHandSide": {
																			"hexValue": "32",
																			"id": 2714,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "11961:1:12",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_2_by_1",
																				"typeString": "int_const 2"
																			},
																			"value": "2"
																		},
																		"src": "11951:11:12",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 2716,
																	"nodeType": "ExpressionStatement",
																	"src": "11951:11:12"
																}
															]
														}
													},
													{
														"condition": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 2723,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 2721,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"id": 2719,
																	"name": "value",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 2650,
																	"src": "11994:5:12",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": ">>",
																"rightExpression": {
																	"hexValue": "38",
																	"id": 2720,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "12003:1:12",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_8_by_1",
																		"typeString": "int_const 8"
																	},
																	"value": "8"
																},
																"src": "11994:10:12",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">",
															"rightExpression": {
																"hexValue": "30",
																"id": 2722,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "12007:1:12",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															},
															"src": "11994:14:12",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"id": 2729,
														"nodeType": "IfStatement",
														"src": "11990:64:12",
														"trueBody": {
															"id": 2728,
															"nodeType": "Block",
															"src": "12010:44:12",
															"statements": [
																{
																	"expression": {
																		"id": 2726,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"id": 2724,
																			"name": "result",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 2656,
																			"src": "12028:6:12",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": "+=",
																		"rightHandSide": {
																			"hexValue": "31",
																			"id": 2725,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "12038:1:12",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_1_by_1",
																				"typeString": "int_const 1"
																			},
																			"value": "1"
																		},
																		"src": "12028:11:12",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 2727,
																	"nodeType": "ExpressionStatement",
																	"src": "12028:11:12"
																}
															]
														}
													}
												]
											},
											{
												"expression": {
													"id": 2731,
													"name": "result",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 2656,
													"src": "12080:6:12",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 2654,
												"id": 2732,
												"nodeType": "Return",
												"src": "12073:13:12"
											}
										]
									},
									"documentation": {
										"id": 2648,
										"nodeType": "StructuredDocumentation",
										"src": "11185:240:12",
										"text": " @dev Return the log in base 256, rounded down, of a positive value.\n Returns 0 if given 0.\n Adding one to the result gives the number of pairs of hex symbols needed to represent `value` as a hex string."
									},
									"id": 2734,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "log256",
									"nameLocation": "11439:6:12",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 2651,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2650,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "11454:5:12",
												"nodeType": "VariableDeclaration",
												"scope": 2734,
												"src": "11446:13:12",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2649,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "11446:7:12",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "11445:15:12"
									},
									"returnParameters": {
										"id": 2654,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2653,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 2734,
												"src": "11484:7:12",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2652,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "11484:7:12",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "11483:9:12"
									},
									"scope": 2774,
									"src": "11430:663:12",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 2772,
										"nodeType": "Block",
										"src": "12329:173:12",
										"statements": [
											{
												"id": 2771,
												"nodeType": "UncheckedBlock",
												"src": "12339:157:12",
												"statements": [
													{
														"assignments": [
															2746
														],
														"declarations": [
															{
																"constant": false,
																"id": 2746,
																"mutability": "mutable",
																"name": "result",
																"nameLocation": "12371:6:12",
																"nodeType": "VariableDeclaration",
																"scope": 2771,
																"src": "12363:14:12",
																"stateVariable": false,
																"storageLocation": "default",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"typeName": {
																	"id": 2745,
																	"name": "uint256",
																	"nodeType": "ElementaryTypeName",
																	"src": "12363:7:12",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"visibility": "internal"
															}
														],
														"id": 2750,
														"initialValue": {
															"arguments": [
																{
																	"id": 2748,
																	"name": "value",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 2737,
																	"src": "12387:5:12",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																],
																"id": 2747,
																"name": "log256",
																"nodeType": "Identifier",
																"overloadedDeclarations": [
																	2734,
																	2773
																],
																"referencedDeclaration": 2734,
																"src": "12380:6:12",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_internal_pure$_t_uint256_$returns$_t_uint256_$",
																	"typeString": "function (uint256) pure returns (uint256)"
																}
															},
															"id": 2749,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "12380:13:12",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"nodeType": "VariableDeclarationStatement",
														"src": "12363:30:12"
													},
													{
														"expression": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 2769,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 2751,
																"name": "result",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 2746,
																"src": "12414:6:12",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "+",
															"rightExpression": {
																"components": [
																	{
																		"condition": {
																			"commonType": {
																				"typeIdentifier": "t_bool",
																				"typeString": "bool"
																			},
																			"id": 2764,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"leftExpression": {
																				"commonType": {
																					"typeIdentifier": "t_enum$_Rounding_$1916",
																					"typeString": "enum Math.Rounding"
																				},
																				"id": 2755,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": false,
																				"lValueRequested": false,
																				"leftExpression": {
																					"id": 2752,
																					"name": "rounding",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 2740,
																					"src": "12424:8:12",
																					"typeDescriptions": {
																						"typeIdentifier": "t_enum$_Rounding_$1916",
																						"typeString": "enum Math.Rounding"
																					}
																				},
																				"nodeType": "BinaryOperation",
																				"operator": "==",
																				"rightExpression": {
																					"expression": {
																						"id": 2753,
																						"name": "Rounding",
																						"nodeType": "Identifier",
																						"overloadedDeclarations": [],
																						"referencedDeclaration": 1916,
																						"src": "12436:8:12",
																						"typeDescriptions": {
																							"typeIdentifier": "t_type$_t_enum$_Rounding_$1916_$",
																							"typeString": "type(enum Math.Rounding)"
																						}
																					},
																					"id": 2754,
																					"isConstant": false,
																					"isLValue": false,
																					"isPure": true,
																					"lValueRequested": false,
																					"memberLocation": "12445:2:12",
																					"memberName": "Up",
																					"nodeType": "MemberAccess",
																					"referencedDeclaration": 1914,
																					"src": "12436:11:12",
																					"typeDescriptions": {
																						"typeIdentifier": "t_enum$_Rounding_$1916",
																						"typeString": "enum Math.Rounding"
																					}
																				},
																				"src": "12424:23:12",
																				"typeDescriptions": {
																					"typeIdentifier": "t_bool",
																					"typeString": "bool"
																				}
																			},
																			"nodeType": "BinaryOperation",
																			"operator": "&&",
																			"rightExpression": {
																				"commonType": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				},
																				"id": 2763,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": false,
																				"lValueRequested": false,
																				"leftExpression": {
																					"commonType": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					},
																					"id": 2761,
																					"isConstant": false,
																					"isLValue": false,
																					"isPure": false,
																					"lValueRequested": false,
																					"leftExpression": {
																						"hexValue": "31",
																						"id": 2756,
																						"isConstant": false,
																						"isLValue": false,
																						"isPure": true,
																						"kind": "number",
																						"lValueRequested": false,
																						"nodeType": "Literal",
																						"src": "12451:1:12",
																						"typeDescriptions": {
																							"typeIdentifier": "t_rational_1_by_1",
																							"typeString": "int_const 1"
																						},
																						"value": "1"
																					},
																					"nodeType": "BinaryOperation",
																					"operator": "<<",
																					"rightExpression": {
																						"components": [
																							{
																								"commonType": {
																									"typeIdentifier": "t_uint256",
																									"typeString": "uint256"
																								},
																								"id": 2759,
																								"isConstant": false,
																								"isLValue": false,
																								"isPure": false,
																								"lValueRequested": false,
																								"leftExpression": {
																									"id": 2757,
																									"name": "result",
																									"nodeType": "Identifier",
																									"overloadedDeclarations": [],
																									"referencedDeclaration": 2746,
																									"src": "12457:6:12",
																									"typeDescriptions": {
																										"typeIdentifier": "t_uint256",
																										"typeString": "uint256"
																									}
																								},
																								"nodeType": "BinaryOperation",
																								"operator": "*",
																								"rightExpression": {
																									"hexValue": "38",
																									"id": 2758,
																									"isConstant": false,
																									"isLValue": false,
																									"isPure": true,
																									"kind": "number",
																									"lValueRequested": false,
																									"nodeType": "Literal",
																									"src": "12466:1:12",
																									"typeDescriptions": {
																										"typeIdentifier": "t_rational_8_by_1",
																										"typeString": "int_const 8"
																									},
																									"value": "8"
																								},
																								"src": "12457:10:12",
																								"typeDescriptions": {
																									"typeIdentifier": "t_uint256",
																									"typeString": "uint256"
																								}
																							}
																						],
																						"id": 2760,
																						"isConstant": false,
																						"isInlineArray": false,
																						"isLValue": false,
																						"isPure": false,
																						"lValueRequested": false,
																						"nodeType": "TupleExpression",
																						"src": "12456:12:12",
																						"typeDescriptions": {
																							"typeIdentifier": "t_uint256",
																							"typeString": "uint256"
																						}
																					},
																					"src": "12451:17:12",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				"nodeType": "BinaryOperation",
																				"operator": "<",
																				"rightExpression": {
																					"id": 2762,
																					"name": "value",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 2737,
																					"src": "12471:5:12",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				"src": "12451:25:12",
																				"typeDescriptions": {
																					"typeIdentifier": "t_bool",
																					"typeString": "bool"
																				}
																			},
																			"src": "12424:52:12",
																			"typeDescriptions": {
																				"typeIdentifier": "t_bool",
																				"typeString": "bool"
																			}
																		},
																		"falseExpression": {
																			"hexValue": "30",
																			"id": 2766,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "12483:1:12",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_0_by_1",
																				"typeString": "int_const 0"
																			},
																			"value": "0"
																		},
																		"id": 2767,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"nodeType": "Conditional",
																		"src": "12424:60:12",
																		"trueExpression": {
																			"hexValue": "31",
																			"id": 2765,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "12479:1:12",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_1_by_1",
																				"typeString": "int_const 1"
																			},
																			"value": "1"
																		},
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint8",
																			"typeString": "uint8"
																		}
																	}
																],
																"id": 2768,
																"isConstant": false,
																"isInlineArray": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"nodeType": "TupleExpression",
																"src": "12423:62:12",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint8",
																	"typeString": "uint8"
																}
															},
															"src": "12414:71:12",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"functionReturnParameters": 2744,
														"id": 2770,
														"nodeType": "Return",
														"src": "12407:78:12"
													}
												]
											}
										]
									},
									"documentation": {
										"id": 2735,
										"nodeType": "StructuredDocumentation",
										"src": "12099:143:12",
										"text": " @dev Return the log in base 10, following the selected rounding direction, of a positive value.\n Returns 0 if given 0."
									},
									"id": 2773,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "log256",
									"nameLocation": "12256:6:12",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 2741,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2737,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "12271:5:12",
												"nodeType": "VariableDeclaration",
												"scope": 2773,
												"src": "12263:13:12",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2736,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "12263:7:12",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2740,
												"mutability": "mutable",
												"name": "rounding",
												"nameLocation": "12287:8:12",
												"nodeType": "VariableDeclaration",
												"scope": 2773,
												"src": "12278:17:12",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_enum$_Rounding_$1916",
													"typeString": "enum Math.Rounding"
												},
												"typeName": {
													"id": 2739,
													"nodeType": "UserDefinedTypeName",
													"pathNode": {
														"id": 2738,
														"name": "Rounding",
														"nameLocations": [
															"12278:8:12"
														],
														"nodeType": "IdentifierPath",
														"referencedDeclaration": 1916,
														"src": "12278:8:12"
													},
													"referencedDeclaration": 1916,
													"src": "12278:8:12",
													"typeDescriptions": {
														"typeIdentifier": "t_enum$_Rounding_$1916",
														"typeString": "enum Math.Rounding"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "12262:34:12"
									},
									"returnParameters": {
										"id": 2744,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2743,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 2773,
												"src": "12320:7:12",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2742,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "12320:7:12",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "12319:9:12"
									},
									"scope": 2774,
									"src": "12247:255:12",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								}
							],
							"scope": 2775,
							"src": "202:12302:12",
							"usedErrors": [],
							"usedEvents": []
						}
					],
					"src": "103:12402:12"
				},
				"id": 12
			},
			"contracts/SmashNFT_Marketplace_1.sol": {
				"ast": {
					"absolutePath": "contracts/SmashNFT_Marketplace_1.sol",
					"exportedSymbols": {
						"Address": [
							1602
						],
						"Context": [
							1624
						],
						"Counters": [
							1698
						],
						"ERC165": [
							1897
						],
						"ERC721": [
							1111
						],
						"IERC165": [
							1909
						],
						"IERC721": [
							1227
						],
						"IERC721Metadata": [
							1272
						],
						"IERC721Receiver": [
							1245
						],
						"Math": [
							2774
						],
						"Ownable": [
							112
						],
						"ReentrancyGuard": [
							166
						],
						"SmashNFT_Marketplace": [
							3611
						],
						"Strings": [
							1873
						]
					},
					"id": 3612,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 2776,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".13"
							],
							"nodeType": "PragmaDirective",
							"src": "32:24:13"
						},
						{
							"absolutePath": "@openzeppelin/contracts/utils/Counters.sol",
							"file": "@openzeppelin/contracts/utils/Counters.sol",
							"id": 2777,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 3612,
							"sourceUnit": 1699,
							"src": "58:52:13",
							"symbolAliases": [],
							"unitAlias": ""
						},
						{
							"absolutePath": "@openzeppelin/contracts/token/ERC721/ERC721.sol",
							"file": "@openzeppelin/contracts/token/ERC721/ERC721.sol",
							"id": 2778,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 3612,
							"sourceUnit": 1112,
							"src": "111:57:13",
							"symbolAliases": [],
							"unitAlias": ""
						},
						{
							"absolutePath": "@openzeppelin/contracts/access/Ownable.sol",
							"file": "@openzeppelin/contracts/access/Ownable.sol",
							"id": 2779,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 3612,
							"sourceUnit": 113,
							"src": "169:52:13",
							"symbolAliases": [],
							"unitAlias": ""
						},
						{
							"absolutePath": "@openzeppelin/contracts/security/ReentrancyGuard.sol",
							"file": "@openzeppelin/contracts/security/ReentrancyGuard.sol",
							"id": 2780,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 3612,
							"sourceUnit": 167,
							"src": "222:62:13",
							"symbolAliases": [],
							"unitAlias": ""
						},
						{
							"abstract": false,
							"baseContracts": [
								{
									"baseName": {
										"id": 2782,
										"name": "ReentrancyGuard",
										"nameLocations": [
											"350:15:13"
										],
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 166,
										"src": "350:15:13"
									},
									"id": 2783,
									"nodeType": "InheritanceSpecifier",
									"src": "350:15:13"
								},
								{
									"baseName": {
										"id": 2784,
										"name": "Ownable",
										"nameLocations": [
											"368:7:13"
										],
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 112,
										"src": "368:7:13"
									},
									"id": 2785,
									"nodeType": "InheritanceSpecifier",
									"src": "368:7:13"
								}
							],
							"canonicalName": "SmashNFT_Marketplace",
							"contractDependencies": [],
							"contractKind": "contract",
							"documentation": {
								"id": 2781,
								"nodeType": "StructuredDocumentation",
								"src": "287:29:13",
								"text": " @title MarketPlace"
							},
							"fullyImplemented": true,
							"id": 3611,
							"linearizedBaseContracts": [
								3611,
								112,
								1624,
								166
							],
							"name": "SmashNFT_Marketplace",
							"nameLocation": "326:20:13",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"global": false,
									"id": 2789,
									"libraryName": {
										"id": 2786,
										"name": "Counters",
										"nameLocations": [
											"392:8:13"
										],
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 1698,
										"src": "392:8:13"
									},
									"nodeType": "UsingForDirective",
									"src": "386:36:13",
									"typeName": {
										"id": 2788,
										"nodeType": "UserDefinedTypeName",
										"pathNode": {
											"id": 2787,
											"name": "Counters.Counter",
											"nameLocations": [
												"405:8:13",
												"414:7:13"
											],
											"nodeType": "IdentifierPath",
											"referencedDeclaration": 1630,
											"src": "405:16:13"
										},
										"referencedDeclaration": 1630,
										"src": "405:16:13",
										"typeDescriptions": {
											"typeIdentifier": "t_struct$_Counter_$1630_storage_ptr",
											"typeString": "struct Counters.Counter"
										}
									}
								},
								{
									"constant": false,
									"functionSelector": "31824a49",
									"id": 2792,
									"mutability": "mutable",
									"name": "_nftsSold",
									"nameLocation": "451:9:13",
									"nodeType": "VariableDeclaration",
									"scope": 3611,
									"src": "427:33:13",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_struct$_Counter_$1630_storage",
										"typeString": "struct Counters.Counter"
									},
									"typeName": {
										"id": 2791,
										"nodeType": "UserDefinedTypeName",
										"pathNode": {
											"id": 2790,
											"name": "Counters.Counter",
											"nameLocations": [
												"427:8:13",
												"436:7:13"
											],
											"nodeType": "IdentifierPath",
											"referencedDeclaration": 1630,
											"src": "427:16:13"
										},
										"referencedDeclaration": 1630,
										"src": "427:16:13",
										"typeDescriptions": {
											"typeIdentifier": "t_struct$_Counter_$1630_storage_ptr",
											"typeString": "struct Counters.Counter"
										}
									},
									"visibility": "public"
								},
								{
									"constant": false,
									"functionSelector": "d6cbb202",
									"id": 2795,
									"mutability": "mutable",
									"name": "_nftCount",
									"nameLocation": "490:9:13",
									"nodeType": "VariableDeclaration",
									"scope": 3611,
									"src": "466:33:13",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_struct$_Counter_$1630_storage",
										"typeString": "struct Counters.Counter"
									},
									"typeName": {
										"id": 2794,
										"nodeType": "UserDefinedTypeName",
										"pathNode": {
											"id": 2793,
											"name": "Counters.Counter",
											"nameLocations": [
												"466:8:13",
												"475:7:13"
											],
											"nodeType": "IdentifierPath",
											"referencedDeclaration": 1630,
											"src": "466:16:13"
										},
										"referencedDeclaration": 1630,
										"src": "466:16:13",
										"typeDescriptions": {
											"typeIdentifier": "t_struct$_Counter_$1630_storage_ptr",
											"typeString": "struct Counters.Counter"
										}
									},
									"visibility": "public"
								},
								{
									"constant": false,
									"functionSelector": "2b86ae38",
									"id": 2798,
									"mutability": "mutable",
									"name": "LISTING_FEE",
									"nameLocation": "525:11:13",
									"nodeType": "VariableDeclaration",
									"scope": 3611,
									"src": "510:30:13",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_uint256",
										"typeString": "uint256"
									},
									"typeName": {
										"id": 2796,
										"name": "uint256",
										"nodeType": "ElementaryTypeName",
										"src": "510:7:13",
										"typeDescriptions": {
											"typeIdentifier": "t_uint256",
											"typeString": "uint256"
										}
									},
									"value": {
										"hexValue": "30",
										"id": 2797,
										"isConstant": false,
										"isLValue": false,
										"isPure": true,
										"kind": "number",
										"lValueRequested": false,
										"nodeType": "Literal",
										"src": "539:1:13",
										"typeDescriptions": {
											"typeIdentifier": "t_rational_0_by_1",
											"typeString": "int_const 0"
										},
										"value": "0"
									},
									"visibility": "public"
								},
								{
									"constant": false,
									"id": 2800,
									"mutability": "mutable",
									"name": "_marketOwner",
									"nameLocation": "571:12:13",
									"nodeType": "VariableDeclaration",
									"scope": 3611,
									"src": "547:36:13",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_address_payable",
										"typeString": "address payable"
									},
									"typeName": {
										"id": 2799,
										"name": "address",
										"nodeType": "ElementaryTypeName",
										"src": "547:15:13",
										"stateMutability": "payable",
										"typeDescriptions": {
											"typeIdentifier": "t_address_payable",
											"typeString": "address payable"
										}
									},
									"visibility": "private"
								},
								{
									"constant": false,
									"functionSelector": "7ca7349b",
									"id": 2804,
									"mutability": "mutable",
									"name": "FirstOwner",
									"nameLocation": "622:10:13",
									"nodeType": "VariableDeclaration",
									"scope": 3611,
									"src": "589:43:13",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_mapping$_t_uint256_$_t_address_$",
										"typeString": "mapping(uint256 => address)"
									},
									"typeName": {
										"id": 2803,
										"keyName": "",
										"keyNameLocation": "-1:-1:-1",
										"keyType": {
											"id": 2801,
											"name": "uint",
											"nodeType": "ElementaryTypeName",
											"src": "598:4:13",
											"typeDescriptions": {
												"typeIdentifier": "t_uint256",
												"typeString": "uint256"
											}
										},
										"nodeType": "Mapping",
										"src": "589:25:13",
										"typeDescriptions": {
											"typeIdentifier": "t_mapping$_t_uint256_$_t_address_$",
											"typeString": "mapping(uint256 => address)"
										},
										"valueName": "",
										"valueNameLocation": "-1:-1:-1",
										"valueType": {
											"id": 2802,
											"name": "address",
											"nodeType": "ElementaryTypeName",
											"src": "606:7:13",
											"stateMutability": "nonpayable",
											"typeDescriptions": {
												"typeIdentifier": "t_address",
												"typeString": "address"
											}
										}
									},
									"visibility": "public"
								},
								{
									"constant": false,
									"functionSelector": "5f72f450",
									"id": 2809,
									"mutability": "mutable",
									"name": "check",
									"nameLocation": "672:5:13",
									"nodeType": "VariableDeclaration",
									"scope": 3611,
									"src": "638:39:13",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_mapping$_t_uint256_$_t_struct$_Check_$2832_storage_$",
										"typeString": "mapping(uint256 => struct SmashNFT_Marketplace.Check)"
									},
									"typeName": {
										"id": 2808,
										"keyName": "",
										"keyNameLocation": "-1:-1:-1",
										"keyType": {
											"id": 2805,
											"name": "uint256",
											"nodeType": "ElementaryTypeName",
											"src": "647:7:13",
											"typeDescriptions": {
												"typeIdentifier": "t_uint256",
												"typeString": "uint256"
											}
										},
										"nodeType": "Mapping",
										"src": "638:26:13",
										"typeDescriptions": {
											"typeIdentifier": "t_mapping$_t_uint256_$_t_struct$_Check_$2832_storage_$",
											"typeString": "mapping(uint256 => struct SmashNFT_Marketplace.Check)"
										},
										"valueName": "",
										"valueNameLocation": "-1:-1:-1",
										"valueType": {
											"id": 2807,
											"nodeType": "UserDefinedTypeName",
											"pathNode": {
												"id": 2806,
												"name": "Check",
												"nameLocations": [
													"658:5:13"
												],
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 2832,
												"src": "658:5:13"
											},
											"referencedDeclaration": 2832,
											"src": "658:5:13",
											"typeDescriptions": {
												"typeIdentifier": "t_struct$_Check_$2832_storage_ptr",
												"typeString": "struct SmashNFT_Marketplace.Check"
											}
										}
									},
									"visibility": "public"
								},
								{
									"constant": false,
									"id": 2814,
									"mutability": "mutable",
									"name": "_idToNFT",
									"nameLocation": "715:8:13",
									"nodeType": "VariableDeclaration",
									"scope": 3611,
									"src": "683:40:13",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_mapping$_t_uint256_$_t_struct$_NFT_$2827_storage_$",
										"typeString": "mapping(uint256 => struct SmashNFT_Marketplace.NFT)"
									},
									"typeName": {
										"id": 2813,
										"keyName": "",
										"keyNameLocation": "-1:-1:-1",
										"keyType": {
											"id": 2810,
											"name": "uint256",
											"nodeType": "ElementaryTypeName",
											"src": "691:7:13",
											"typeDescriptions": {
												"typeIdentifier": "t_uint256",
												"typeString": "uint256"
											}
										},
										"nodeType": "Mapping",
										"src": "683:23:13",
										"typeDescriptions": {
											"typeIdentifier": "t_mapping$_t_uint256_$_t_struct$_NFT_$2827_storage_$",
											"typeString": "mapping(uint256 => struct SmashNFT_Marketplace.NFT)"
										},
										"valueName": "",
										"valueNameLocation": "-1:-1:-1",
										"valueType": {
											"id": 2812,
											"nodeType": "UserDefinedTypeName",
											"pathNode": {
												"id": 2811,
												"name": "NFT",
												"nameLocations": [
													"702:3:13"
												],
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 2827,
												"src": "702:3:13"
											},
											"referencedDeclaration": 2827,
											"src": "702:3:13",
											"typeDescriptions": {
												"typeIdentifier": "t_struct$_NFT_$2827_storage_ptr",
												"typeString": "struct SmashNFT_Marketplace.NFT"
											}
										}
									},
									"visibility": "private"
								},
								{
									"canonicalName": "SmashNFT_Marketplace.NFT",
									"id": 2827,
									"members": [
										{
											"constant": false,
											"id": 2816,
											"mutability": "mutable",
											"name": "nftContract",
											"nameLocation": "758:11:13",
											"nodeType": "VariableDeclaration",
											"scope": 2827,
											"src": "750:19:13",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_address",
												"typeString": "address"
											},
											"typeName": {
												"id": 2815,
												"name": "address",
												"nodeType": "ElementaryTypeName",
												"src": "750:7:13",
												"stateMutability": "nonpayable",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												}
											},
											"visibility": "internal"
										},
										{
											"constant": false,
											"id": 2818,
											"mutability": "mutable",
											"name": "tokenId",
											"nameLocation": "787:7:13",
											"nodeType": "VariableDeclaration",
											"scope": 2827,
											"src": "779:15:13",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_uint256",
												"typeString": "uint256"
											},
											"typeName": {
												"id": 2817,
												"name": "uint256",
												"nodeType": "ElementaryTypeName",
												"src": "779:7:13",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												}
											},
											"visibility": "internal"
										},
										{
											"constant": false,
											"id": 2820,
											"mutability": "mutable",
											"name": "seller",
											"nameLocation": "820:6:13",
											"nodeType": "VariableDeclaration",
											"scope": 2827,
											"src": "804:22:13",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_address_payable",
												"typeString": "address payable"
											},
											"typeName": {
												"id": 2819,
												"name": "address",
												"nodeType": "ElementaryTypeName",
												"src": "804:15:13",
												"stateMutability": "payable",
												"typeDescriptions": {
													"typeIdentifier": "t_address_payable",
													"typeString": "address payable"
												}
											},
											"visibility": "internal"
										},
										{
											"constant": false,
											"id": 2822,
											"mutability": "mutable",
											"name": "owner",
											"nameLocation": "852:5:13",
											"nodeType": "VariableDeclaration",
											"scope": 2827,
											"src": "836:21:13",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_address_payable",
												"typeString": "address payable"
											},
											"typeName": {
												"id": 2821,
												"name": "address",
												"nodeType": "ElementaryTypeName",
												"src": "836:15:13",
												"stateMutability": "payable",
												"typeDescriptions": {
													"typeIdentifier": "t_address_payable",
													"typeString": "address payable"
												}
											},
											"visibility": "internal"
										},
										{
											"constant": false,
											"id": 2824,
											"mutability": "mutable",
											"name": "price",
											"nameLocation": "875:5:13",
											"nodeType": "VariableDeclaration",
											"scope": 2827,
											"src": "867:13:13",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_uint256",
												"typeString": "uint256"
											},
											"typeName": {
												"id": 2823,
												"name": "uint256",
												"nodeType": "ElementaryTypeName",
												"src": "867:7:13",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												}
											},
											"visibility": "internal"
										},
										{
											"constant": false,
											"id": 2826,
											"mutability": "mutable",
											"name": "listed",
											"nameLocation": "895:6:13",
											"nodeType": "VariableDeclaration",
											"scope": 2827,
											"src": "890:11:13",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_bool",
												"typeString": "bool"
											},
											"typeName": {
												"id": 2825,
												"name": "bool",
												"nodeType": "ElementaryTypeName",
												"src": "890:4:13",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												}
											},
											"visibility": "internal"
										}
									],
									"name": "NFT",
									"nameLocation": "736:3:13",
									"nodeType": "StructDefinition",
									"scope": 3611,
									"src": "729:179:13",
									"visibility": "public"
								},
								{
									"canonicalName": "SmashNFT_Marketplace.Check",
									"id": 2832,
									"members": [
										{
											"constant": false,
											"id": 2829,
											"mutability": "mutable",
											"name": "_check",
											"nameLocation": "940:6:13",
											"nodeType": "VariableDeclaration",
											"scope": 2832,
											"src": "935:11:13",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_bool",
												"typeString": "bool"
											},
											"typeName": {
												"id": 2828,
												"name": "bool",
												"nodeType": "ElementaryTypeName",
												"src": "935:4:13",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												}
											},
											"visibility": "internal"
										},
										{
											"constant": false,
											"id": 2831,
											"mutability": "mutable",
											"name": "_address",
											"nameLocation": "964:8:13",
											"nodeType": "VariableDeclaration",
											"scope": 2832,
											"src": "956:16:13",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_address",
												"typeString": "address"
											},
											"typeName": {
												"id": 2830,
												"name": "address",
												"nodeType": "ElementaryTypeName",
												"src": "956:7:13",
												"stateMutability": "nonpayable",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												}
											},
											"visibility": "internal"
										}
									],
									"name": "Check",
									"nameLocation": "920:5:13",
									"nodeType": "StructDefinition",
									"scope": 3611,
									"src": "913:66:13",
									"visibility": "public"
								},
								{
									"anonymous": false,
									"eventSelector": "a0c6c0d02d86fdacecbaa5fdf5894bab204e31a778250474108540733a9b8d19",
									"id": 2844,
									"name": "NFTListed",
									"nameLocation": "990:9:13",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 2843,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2834,
												"indexed": false,
												"mutability": "mutable",
												"name": "nftContract",
												"nameLocation": "1008:11:13",
												"nodeType": "VariableDeclaration",
												"scope": 2844,
												"src": "1000:19:13",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 2833,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1000:7:13",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2836,
												"indexed": false,
												"mutability": "mutable",
												"name": "tokenId",
												"nameLocation": "1028:7:13",
												"nodeType": "VariableDeclaration",
												"scope": 2844,
												"src": "1020:15:13",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2835,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1020:7:13",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2838,
												"indexed": false,
												"mutability": "mutable",
												"name": "seller",
												"nameLocation": "1044:6:13",
												"nodeType": "VariableDeclaration",
												"scope": 2844,
												"src": "1036:14:13",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 2837,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1036:7:13",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2840,
												"indexed": false,
												"mutability": "mutable",
												"name": "owner",
												"nameLocation": "1059:5:13",
												"nodeType": "VariableDeclaration",
												"scope": 2844,
												"src": "1051:13:13",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 2839,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1051:7:13",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2842,
												"indexed": false,
												"mutability": "mutable",
												"name": "price",
												"nameLocation": "1073:5:13",
												"nodeType": "VariableDeclaration",
												"scope": 2844,
												"src": "1065:13:13",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2841,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1065:7:13",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "999:80:13"
									},
									"src": "984:96:13"
								},
								{
									"anonymous": false,
									"eventSelector": "16f1dbd97e6bf646d429ed186cce832f1f7fd9907814293b83181e9970ab7bd2",
									"id": 2856,
									"name": "NFTSold",
									"nameLocation": "1091:7:13",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 2855,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2846,
												"indexed": false,
												"mutability": "mutable",
												"name": "nftContract",
												"nameLocation": "1107:11:13",
												"nodeType": "VariableDeclaration",
												"scope": 2856,
												"src": "1099:19:13",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 2845,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1099:7:13",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2848,
												"indexed": false,
												"mutability": "mutable",
												"name": "tokenId",
												"nameLocation": "1127:7:13",
												"nodeType": "VariableDeclaration",
												"scope": 2856,
												"src": "1119:15:13",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2847,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1119:7:13",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2850,
												"indexed": false,
												"mutability": "mutable",
												"name": "seller",
												"nameLocation": "1143:6:13",
												"nodeType": "VariableDeclaration",
												"scope": 2856,
												"src": "1135:14:13",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 2849,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1135:7:13",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2852,
												"indexed": false,
												"mutability": "mutable",
												"name": "owner",
												"nameLocation": "1158:5:13",
												"nodeType": "VariableDeclaration",
												"scope": 2856,
												"src": "1150:13:13",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 2851,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1150:7:13",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2854,
												"indexed": false,
												"mutability": "mutable",
												"name": "price",
												"nameLocation": "1172:5:13",
												"nodeType": "VariableDeclaration",
												"scope": 2856,
												"src": "1164:13:13",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2853,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1164:7:13",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1098:80:13"
									},
									"src": "1085:94:13"
								},
								{
									"constant": false,
									"id": 2859,
									"mutability": "mutable",
									"name": "token",
									"nameLocation": "1191:5:13",
									"nodeType": "VariableDeclaration",
									"scope": 3611,
									"src": "1184:12:13",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_contract$_ERC721_$1111",
										"typeString": "contract ERC721"
									},
									"typeName": {
										"id": 2858,
										"nodeType": "UserDefinedTypeName",
										"pathNode": {
											"id": 2857,
											"name": "ERC721",
											"nameLocations": [
												"1184:6:13"
											],
											"nodeType": "IdentifierPath",
											"referencedDeclaration": 1111,
											"src": "1184:6:13"
										},
										"referencedDeclaration": 1111,
										"src": "1184:6:13",
										"typeDescriptions": {
											"typeIdentifier": "t_contract$_ERC721_$1111",
											"typeString": "contract ERC721"
										}
									},
									"visibility": "internal"
								},
								{
									"constant": false,
									"id": 2861,
									"mutability": "mutable",
									"name": "MinterAddress",
									"nameLocation": "1210:13:13",
									"nodeType": "VariableDeclaration",
									"scope": 3611,
									"src": "1202:21:13",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_address",
										"typeString": "address"
									},
									"typeName": {
										"id": 2860,
										"name": "address",
										"nodeType": "ElementaryTypeName",
										"src": "1202:7:13",
										"stateMutability": "nonpayable",
										"typeDescriptions": {
											"typeIdentifier": "t_address",
											"typeString": "address"
										}
									},
									"visibility": "internal"
								},
								{
									"body": {
										"id": 2876,
										"nodeType": "Block",
										"src": "1263:83:13",
										"statements": [
											{
												"expression": {
													"id": 2870,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 2866,
														"name": "token",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 2859,
														"src": "1273:5:13",
														"typeDescriptions": {
															"typeIdentifier": "t_contract$_ERC721_$1111",
															"typeString": "contract ERC721"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"arguments": [
															{
																"id": 2868,
																"name": "contractAddr",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 2863,
																"src": "1288:12:13",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															],
															"id": 2867,
															"name": "ERC721",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1111,
															"src": "1281:6:13",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_contract$_ERC721_$1111_$",
																"typeString": "type(contract ERC721)"
															}
														},
														"id": 2869,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "typeConversion",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "1281:20:13",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_contract$_ERC721_$1111",
															"typeString": "contract ERC721"
														}
													},
													"src": "1273:28:13",
													"typeDescriptions": {
														"typeIdentifier": "t_contract$_ERC721_$1111",
														"typeString": "contract ERC721"
													}
												},
												"id": 2871,
												"nodeType": "ExpressionStatement",
												"src": "1273:28:13"
											},
											{
												"expression": {
													"id": 2874,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 2872,
														"name": "MinterAddress",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 2861,
														"src": "1311:13:13",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"id": 2873,
														"name": "contractAddr",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 2863,
														"src": "1327:12:13",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "1311:28:13",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"id": 2875,
												"nodeType": "ExpressionStatement",
												"src": "1311:28:13"
											}
										]
									},
									"id": 2877,
									"implemented": true,
									"kind": "constructor",
									"modifiers": [],
									"name": "",
									"nameLocation": "-1:-1:-1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 2864,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2863,
												"mutability": "mutable",
												"name": "contractAddr",
												"nameLocation": "1250:12:13",
												"nodeType": "VariableDeclaration",
												"scope": 2877,
												"src": "1242:20:13",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 2862,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1242:7:13",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1241:22:13"
									},
									"returnParameters": {
										"id": 2865,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1263:0:13"
									},
									"scope": 3611,
									"src": "1230:116:13",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "public"
								},
								{
									"body": {
										"id": 2970,
										"nodeType": "Block",
										"src": "1651:573:13",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 2889,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 2887,
																"name": "_price",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 2881,
																"src": "1670:6:13",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">",
															"rightExpression": {
																"hexValue": "30",
																"id": 2888,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "1679:1:13",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															},
															"src": "1670:10:13",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "5072696365206d757374206265206174206c65617374203120776569",
															"id": 2890,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "1682:30:13",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_ed429417bc253b1d285ade089363828076314dff0c77fc211ca9115957f5bdf9",
																"typeString": "literal_string \"Price must be at least 1 wei\""
															},
															"value": "Price must be at least 1 wei"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_ed429417bc253b1d285ade089363828076314dff0c77fc211ca9115957f5bdf9",
																"typeString": "literal_string \"Price must be at least 1 wei\""
															}
														],
														"id": 2886,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "1662:7:13",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 2891,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1662:51:13",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 2892,
												"nodeType": "ExpressionStatement",
												"src": "1662:51:13"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 2899,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"nodeType": "UnaryOperation",
															"operator": "!",
															"prefix": true,
															"src": "1731:25:13",
															"subExpression": {
																"components": [
																	{
																		"expression": {
																			"baseExpression": {
																				"id": 2894,
																				"name": "check",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 2809,
																				"src": "1733:5:13",
																				"typeDescriptions": {
																					"typeIdentifier": "t_mapping$_t_uint256_$_t_struct$_Check_$2832_storage_$",
																					"typeString": "mapping(uint256 => struct SmashNFT_Marketplace.Check storage ref)"
																				}
																			},
																			"id": 2896,
																			"indexExpression": {
																				"id": 2895,
																				"name": "_tokenId",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 2879,
																				"src": "1739:8:13",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"isConstant": false,
																			"isLValue": true,
																			"isPure": false,
																			"lValueRequested": false,
																			"nodeType": "IndexAccess",
																			"src": "1733:15:13",
																			"typeDescriptions": {
																				"typeIdentifier": "t_struct$_Check_$2832_storage",
																				"typeString": "struct SmashNFT_Marketplace.Check storage ref"
																			}
																		},
																		"id": 2897,
																		"isConstant": false,
																		"isLValue": true,
																		"isPure": false,
																		"lValueRequested": false,
																		"memberLocation": "1749:6:13",
																		"memberName": "_check",
																		"nodeType": "MemberAccess",
																		"referencedDeclaration": 2829,
																		"src": "1733:22:13",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bool",
																			"typeString": "bool"
																		}
																	}
																],
																"id": 2898,
																"isConstant": false,
																"isInlineArray": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"nodeType": "TupleExpression",
																"src": "1732:24:13",
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																}
															},
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "4f6e6520546f6b656e204944204c6973746564204f6e652054696d65",
															"id": 2900,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "1757:30:13",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_00a2a60daad916a80621f3a1cf99deb91c2ee23995b0e12d7b477dbb9833db5b",
																"typeString": "literal_string \"One Token ID Listed One Time\""
															},
															"value": "One Token ID Listed One Time"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_00a2a60daad916a80621f3a1cf99deb91c2ee23995b0e12d7b477dbb9833db5b",
																"typeString": "literal_string \"One Token ID Listed One Time\""
															}
														],
														"id": 2893,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "1723:7:13",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 2901,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1723:65:13",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 2902,
												"nodeType": "ExpressionStatement",
												"src": "1723:65:13"
											},
											{
												"expression": {
													"arguments": [
														{
															"expression": {
																"id": 2906,
																"name": "msg",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 4294967281,
																"src": "1866:3:13",
																"typeDescriptions": {
																	"typeIdentifier": "t_magic_message",
																	"typeString": "msg"
																}
															},
															"id": 2907,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "1870:6:13",
															"memberName": "sender",
															"nodeType": "MemberAccess",
															"src": "1866:10:13",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"arguments": [
																{
																	"id": 2910,
																	"name": "this",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 4294967268,
																	"src": "1886:4:13",
																	"typeDescriptions": {
																		"typeIdentifier": "t_contract$_SmashNFT_Marketplace_$3611",
																		"typeString": "contract SmashNFT_Marketplace"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_contract$_SmashNFT_Marketplace_$3611",
																		"typeString": "contract SmashNFT_Marketplace"
																	}
																],
																"id": 2909,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "1878:7:13",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_address_$",
																	"typeString": "type(address)"
																},
																"typeName": {
																	"id": 2908,
																	"name": "address",
																	"nodeType": "ElementaryTypeName",
																	"src": "1878:7:13",
																	"typeDescriptions": {}
																}
															},
															"id": 2911,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "typeConversion",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "1878:13:13",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 2912,
															"name": "_tokenId",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2879,
															"src": "1893:8:13",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"expression": {
															"id": 2903,
															"name": "token",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2859,
															"src": "1847:5:13",
															"typeDescriptions": {
																"typeIdentifier": "t_contract$_ERC721_$1111",
																"typeString": "contract ERC721"
															}
														},
														"id": 2905,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "1853:12:13",
														"memberName": "transferFrom",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 503,
														"src": "1847:18:13",
														"typeDescriptions": {
															"typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,address,uint256) external"
														}
													},
													"id": 2913,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1847:55:13",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 2914,
												"nodeType": "ExpressionStatement",
												"src": "1847:55:13"
											},
											{
												"expression": {
													"arguments": [],
													"expression": {
														"argumentTypes": [],
														"expression": {
															"id": 2915,
															"name": "_nftCount",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2795,
															"src": "1912:9:13",
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_Counter_$1630_storage",
																"typeString": "struct Counters.Counter storage ref"
															}
														},
														"id": 2917,
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "1922:9:13",
														"memberName": "increment",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 1656,
														"src": "1912:19:13",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_struct$_Counter_$1630_storage_ptr_$returns$__$attached_to$_t_struct$_Counter_$1630_storage_ptr_$",
															"typeString": "function (struct Counters.Counter storage pointer)"
														}
													},
													"id": 2918,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1912:21:13",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 2919,
												"nodeType": "ExpressionStatement",
												"src": "1912:21:13"
											},
											{
												"expression": {
													"id": 2941,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"baseExpression": {
															"id": 2920,
															"name": "_idToNFT",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2814,
															"src": "1943:8:13",
															"typeDescriptions": {
																"typeIdentifier": "t_mapping$_t_uint256_$_t_struct$_NFT_$2827_storage_$",
																"typeString": "mapping(uint256 => struct SmashNFT_Marketplace.NFT storage ref)"
															}
														},
														"id": 2922,
														"indexExpression": {
															"id": 2921,
															"name": "_tokenId",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2879,
															"src": "1952:8:13",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"nodeType": "IndexAccess",
														"src": "1943:18:13",
														"typeDescriptions": {
															"typeIdentifier": "t_struct$_NFT_$2827_storage",
															"typeString": "struct SmashNFT_Marketplace.NFT storage ref"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"arguments": [
															{
																"id": 2924,
																"name": "MinterAddress",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 2861,
																"src": "1968:13:13",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															{
																"id": 2925,
																"name": "_tokenId",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 2879,
																"src": "1982:8:13",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															{
																"arguments": [
																	{
																		"expression": {
																			"id": 2928,
																			"name": "msg",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 4294967281,
																			"src": "1999:3:13",
																			"typeDescriptions": {
																				"typeIdentifier": "t_magic_message",
																				"typeString": "msg"
																			}
																		},
																		"id": 2929,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"memberLocation": "2003:6:13",
																		"memberName": "sender",
																		"nodeType": "MemberAccess",
																		"src": "1999:10:13",
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	],
																	"id": 2927,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"lValueRequested": false,
																	"nodeType": "ElementaryTypeNameExpression",
																	"src": "1991:8:13",
																	"typeDescriptions": {
																		"typeIdentifier": "t_type$_t_address_payable_$",
																		"typeString": "type(address payable)"
																	},
																	"typeName": {
																		"id": 2926,
																		"name": "address",
																		"nodeType": "ElementaryTypeName",
																		"src": "1991:8:13",
																		"stateMutability": "payable",
																		"typeDescriptions": {}
																	}
																},
																"id": 2930,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "typeConversion",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "1991:19:13",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_address_payable",
																	"typeString": "address payable"
																}
															},
															{
																"arguments": [
																	{
																		"arguments": [
																			{
																				"id": 2935,
																				"name": "this",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 4294967268,
																				"src": "2027:4:13",
																				"typeDescriptions": {
																					"typeIdentifier": "t_contract$_SmashNFT_Marketplace_$3611",
																					"typeString": "contract SmashNFT_Marketplace"
																				}
																			}
																		],
																		"expression": {
																			"argumentTypes": [
																				{
																					"typeIdentifier": "t_contract$_SmashNFT_Marketplace_$3611",
																					"typeString": "contract SmashNFT_Marketplace"
																				}
																			],
																			"id": 2934,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"lValueRequested": false,
																			"nodeType": "ElementaryTypeNameExpression",
																			"src": "2019:7:13",
																			"typeDescriptions": {
																				"typeIdentifier": "t_type$_t_address_$",
																				"typeString": "type(address)"
																			},
																			"typeName": {
																				"id": 2933,
																				"name": "address",
																				"nodeType": "ElementaryTypeName",
																				"src": "2019:7:13",
																				"typeDescriptions": {}
																			}
																		},
																		"id": 2936,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"kind": "typeConversion",
																		"lValueRequested": false,
																		"nameLocations": [],
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "2019:13:13",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	],
																	"id": 2932,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"lValueRequested": false,
																	"nodeType": "ElementaryTypeNameExpression",
																	"src": "2011:8:13",
																	"typeDescriptions": {
																		"typeIdentifier": "t_type$_t_address_payable_$",
																		"typeString": "type(address payable)"
																	},
																	"typeName": {
																		"id": 2931,
																		"name": "address",
																		"nodeType": "ElementaryTypeName",
																		"src": "2011:8:13",
																		"stateMutability": "payable",
																		"typeDescriptions": {}
																	}
																},
																"id": 2937,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "typeConversion",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "2011:22:13",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_address_payable",
																	"typeString": "address payable"
																}
															},
															{
																"id": 2938,
																"name": "_price",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 2881,
																"src": "2034:6:13",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															{
																"hexValue": "66616c7365",
																"id": 2939,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "bool",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "2041:5:13",
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																},
																"value": "false"
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																},
																{
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																{
																	"typeIdentifier": "t_address_payable",
																	"typeString": "address payable"
																},
																{
																	"typeIdentifier": "t_address_payable",
																	"typeString": "address payable"
																},
																{
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																{
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																}
															],
															"id": 2923,
															"name": "NFT",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2827,
															"src": "1964:3:13",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_struct$_NFT_$2827_storage_ptr_$",
																"typeString": "type(struct SmashNFT_Marketplace.NFT storage pointer)"
															}
														},
														"id": 2940,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "structConstructorCall",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "1964:83:13",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_struct$_NFT_$2827_memory_ptr",
															"typeString": "struct SmashNFT_Marketplace.NFT memory"
														}
													},
													"src": "1943:104:13",
													"typeDescriptions": {
														"typeIdentifier": "t_struct$_NFT_$2827_storage",
														"typeString": "struct SmashNFT_Marketplace.NFT storage ref"
													}
												},
												"id": 2942,
												"nodeType": "ExpressionStatement",
												"src": "1943:104:13"
											},
											{
												"expression": {
													"id": 2948,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"baseExpression": {
															"id": 2943,
															"name": "FirstOwner",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2804,
															"src": "2057:10:13",
															"typeDescriptions": {
																"typeIdentifier": "t_mapping$_t_uint256_$_t_address_$",
																"typeString": "mapping(uint256 => address)"
															}
														},
														"id": 2945,
														"indexExpression": {
															"id": 2944,
															"name": "_tokenId",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2879,
															"src": "2068:8:13",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"nodeType": "IndexAccess",
														"src": "2057:20:13",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"expression": {
															"id": 2946,
															"name": "msg",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 4294967281,
															"src": "2078:3:13",
															"typeDescriptions": {
																"typeIdentifier": "t_magic_message",
																"typeString": "msg"
															}
														},
														"id": 2947,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "2082:6:13",
														"memberName": "sender",
														"nodeType": "MemberAccess",
														"src": "2078:10:13",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "2057:31:13",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"id": 2949,
												"nodeType": "ExpressionStatement",
												"src": "2057:31:13"
											},
											{
												"expression": {
													"id": 2956,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"expression": {
															"baseExpression": {
																"id": 2950,
																"name": "check",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 2809,
																"src": "2098:5:13",
																"typeDescriptions": {
																	"typeIdentifier": "t_mapping$_t_uint256_$_t_struct$_Check_$2832_storage_$",
																	"typeString": "mapping(uint256 => struct SmashNFT_Marketplace.Check storage ref)"
																}
															},
															"id": 2952,
															"indexExpression": {
																"id": 2951,
																"name": "_tokenId",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 2879,
																"src": "2104:8:13",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"isConstant": false,
															"isLValue": true,
															"isPure": false,
															"lValueRequested": false,
															"nodeType": "IndexAccess",
															"src": "2098:15:13",
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_Check_$2832_storage",
																"typeString": "struct SmashNFT_Marketplace.Check storage ref"
															}
														},
														"id": 2953,
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"memberLocation": "2114:8:13",
														"memberName": "_address",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 2831,
														"src": "2098:24:13",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"expression": {
															"id": 2954,
															"name": "msg",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 4294967281,
															"src": "2123:3:13",
															"typeDescriptions": {
																"typeIdentifier": "t_magic_message",
																"typeString": "msg"
															}
														},
														"id": 2955,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "2127:6:13",
														"memberName": "sender",
														"nodeType": "MemberAccess",
														"src": "2123:10:13",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "2098:35:13",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"id": 2957,
												"nodeType": "ExpressionStatement",
												"src": "2098:35:13"
											},
											{
												"eventCall": {
													"arguments": [
														{
															"id": 2959,
															"name": "MinterAddress",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2861,
															"src": "2158:13:13",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 2960,
															"name": "_tokenId",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2879,
															"src": "2173:8:13",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														{
															"expression": {
																"id": 2961,
																"name": "msg",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 4294967281,
																"src": "2183:3:13",
																"typeDescriptions": {
																	"typeIdentifier": "t_magic_message",
																	"typeString": "msg"
																}
															},
															"id": 2962,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "2187:6:13",
															"memberName": "sender",
															"nodeType": "MemberAccess",
															"src": "2183:10:13",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"arguments": [
																{
																	"id": 2965,
																	"name": "this",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 4294967268,
																	"src": "2203:4:13",
																	"typeDescriptions": {
																		"typeIdentifier": "t_contract$_SmashNFT_Marketplace_$3611",
																		"typeString": "contract SmashNFT_Marketplace"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_contract$_SmashNFT_Marketplace_$3611",
																		"typeString": "contract SmashNFT_Marketplace"
																	}
																],
																"id": 2964,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "2195:7:13",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_address_$",
																	"typeString": "type(address)"
																},
																"typeName": {
																	"id": 2963,
																	"name": "address",
																	"nodeType": "ElementaryTypeName",
																	"src": "2195:7:13",
																	"typeDescriptions": {}
																}
															},
															"id": 2966,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "typeConversion",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "2195:13:13",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 2967,
															"name": "_price",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2881,
															"src": "2210:6:13",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 2958,
														"name": "NFTListed",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 2844,
														"src": "2148:9:13",
														"typeDescriptions": {
															"typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_uint256_$_t_address_$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,uint256,address,address,uint256)"
														}
													},
													"id": 2968,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2148:69:13",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 2969,
												"nodeType": "EmitStatement",
												"src": "2143:74:13"
											}
										]
									},
									"functionSelector": "e03de05c",
									"id": 2971,
									"implemented": true,
									"kind": "function",
									"modifiers": [
										{
											"id": 2884,
											"kind": "modifierInvocation",
											"modifierName": {
												"id": 2883,
												"name": "nonReentrant",
												"nameLocations": [
													"1638:12:13"
												],
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 142,
												"src": "1638:12:13"
											},
											"nodeType": "ModifierInvocation",
											"src": "1638:12:13"
										}
									],
									"name": "ListNft",
									"nameLocation": "1581:7:13",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 2882,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2879,
												"mutability": "mutable",
												"name": "_tokenId",
												"nameLocation": "1597:8:13",
												"nodeType": "VariableDeclaration",
												"scope": 2971,
												"src": "1589:16:13",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2878,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1589:7:13",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2881,
												"mutability": "mutable",
												"name": "_price",
												"nameLocation": "1615:6:13",
												"nodeType": "VariableDeclaration",
												"scope": 2971,
												"src": "1607:14:13",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2880,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1607:7:13",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1588:34:13"
									},
									"returnParameters": {
										"id": 2885,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1651:0:13"
									},
									"scope": 3611,
									"src": "1572:652:13",
									"stateMutability": "payable",
									"virtual": false,
									"visibility": "public"
								},
								{
									"body": {
										"id": 3086,
										"nodeType": "Block",
										"src": "2479:704:13",
										"statements": [
											{
												"assignments": [
													2980
												],
												"declarations": [
													{
														"constant": false,
														"id": 2980,
														"mutability": "mutable",
														"name": "nft",
														"nameLocation": "2501:3:13",
														"nodeType": "VariableDeclaration",
														"scope": 3086,
														"src": "2489:15:13",
														"stateVariable": false,
														"storageLocation": "storage",
														"typeDescriptions": {
															"typeIdentifier": "t_struct$_NFT_$2827_storage_ptr",
															"typeString": "struct SmashNFT_Marketplace.NFT"
														},
														"typeName": {
															"id": 2979,
															"nodeType": "UserDefinedTypeName",
															"pathNode": {
																"id": 2978,
																"name": "NFT",
																"nameLocations": [
																	"2489:3:13"
																],
																"nodeType": "IdentifierPath",
																"referencedDeclaration": 2827,
																"src": "2489:3:13"
															},
															"referencedDeclaration": 2827,
															"src": "2489:3:13",
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_NFT_$2827_storage_ptr",
																"typeString": "struct SmashNFT_Marketplace.NFT"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 2984,
												"initialValue": {
													"baseExpression": {
														"id": 2981,
														"name": "_idToNFT",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 2814,
														"src": "2507:8:13",
														"typeDescriptions": {
															"typeIdentifier": "t_mapping$_t_uint256_$_t_struct$_NFT_$2827_storage_$",
															"typeString": "mapping(uint256 => struct SmashNFT_Marketplace.NFT storage ref)"
														}
													},
													"id": 2983,
													"indexExpression": {
														"id": 2982,
														"name": "_tokenId",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 2973,
														"src": "2516:8:13",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"isConstant": false,
													"isLValue": true,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "IndexAccess",
													"src": "2507:18:13",
													"typeDescriptions": {
														"typeIdentifier": "t_struct$_NFT_$2827_storage",
														"typeString": "struct SmashNFT_Marketplace.NFT storage ref"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "2489:36:13"
											},
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 2990,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"expression": {
																	"id": 2986,
																	"name": "msg",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 4294967281,
																	"src": "2543:3:13",
																	"typeDescriptions": {
																		"typeIdentifier": "t_magic_message",
																		"typeString": "msg"
																	}
																},
																"id": 2987,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"memberLocation": "2547:5:13",
																"memberName": "value",
																"nodeType": "MemberAccess",
																"src": "2543:9:13",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">=",
															"rightExpression": {
																"expression": {
																	"id": 2988,
																	"name": "nft",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 2980,
																	"src": "2556:3:13",
																	"typeDescriptions": {
																		"typeIdentifier": "t_struct$_NFT_$2827_storage_ptr",
																		"typeString": "struct SmashNFT_Marketplace.NFT storage pointer"
																	}
																},
																"id": 2989,
																"isConstant": false,
																"isLValue": true,
																"isPure": false,
																"lValueRequested": false,
																"memberLocation": "2560:5:13",
																"memberName": "price",
																"nodeType": "MemberAccess",
																"referencedDeclaration": 2824,
																"src": "2556:9:13",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "2543:22:13",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "4e6f7420656e6f75676820657468657220746f20636f7665722061736b696e67207072696365",
															"id": 2991,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "2568:40:13",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_288468593cf2e83c7107f8d1f595b66d7cf49de550d8901b5e7e75f7dc15cf6e",
																"typeString": "literal_string \"Not enough ether to cover asking price\""
															},
															"value": "Not enough ether to cover asking price"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_288468593cf2e83c7107f8d1f595b66d7cf49de550d8901b5e7e75f7dc15cf6e",
																"typeString": "literal_string \"Not enough ether to cover asking price\""
															}
														],
														"id": 2985,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "2535:7:13",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 2992,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2535:74:13",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 2993,
												"nodeType": "ExpressionStatement",
												"src": "2535:74:13"
											},
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															"id": 3001,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"expression": {
																	"baseExpression": {
																		"id": 2995,
																		"name": "_idToNFT",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 2814,
																		"src": "2627:8:13",
																		"typeDescriptions": {
																			"typeIdentifier": "t_mapping$_t_uint256_$_t_struct$_NFT_$2827_storage_$",
																			"typeString": "mapping(uint256 => struct SmashNFT_Marketplace.NFT storage ref)"
																		}
																	},
																	"id": 2997,
																	"indexExpression": {
																		"id": 2996,
																		"name": "_tokenId",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 2973,
																		"src": "2636:8:13",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"isConstant": false,
																	"isLValue": true,
																	"isPure": false,
																	"lValueRequested": false,
																	"nodeType": "IndexAccess",
																	"src": "2627:18:13",
																	"typeDescriptions": {
																		"typeIdentifier": "t_struct$_NFT_$2827_storage",
																		"typeString": "struct SmashNFT_Marketplace.NFT storage ref"
																	}
																},
																"id": 2998,
																"isConstant": false,
																"isLValue": true,
																"isPure": false,
																"lValueRequested": false,
																"memberLocation": "2646:6:13",
																"memberName": "seller",
																"nodeType": "MemberAccess",
																"referencedDeclaration": 2820,
																"src": "2627:25:13",
																"typeDescriptions": {
																	"typeIdentifier": "t_address_payable",
																	"typeString": "address payable"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "!=",
															"rightExpression": {
																"expression": {
																	"id": 2999,
																	"name": "msg",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 4294967281,
																	"src": "2656:3:13",
																	"typeDescriptions": {
																		"typeIdentifier": "t_magic_message",
																		"typeString": "msg"
																	}
																},
																"id": 3000,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"memberLocation": "2660:6:13",
																"memberName": "sender",
																"nodeType": "MemberAccess",
																"src": "2656:10:13",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"src": "2627:39:13",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "416e206f666665722063616e6e6f742062757920746869732053656c6c6572",
															"id": 3002,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "2668:33:13",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_c3387487059bdef6bd8bd04aa3389df9f9fdc35f3503893b91dc4184d0b7d4da",
																"typeString": "literal_string \"An offer cannot buy this Seller\""
															},
															"value": "An offer cannot buy this Seller"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_c3387487059bdef6bd8bd04aa3389df9f9fdc35f3503893b91dc4184d0b7d4da",
																"typeString": "literal_string \"An offer cannot buy this Seller\""
															}
														],
														"id": 2994,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "2619:7:13",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 3003,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2619:83:13",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 3004,
												"nodeType": "ExpressionStatement",
												"src": "2619:83:13"
											},
											{
												"assignments": [
													3006
												],
												"declarations": [
													{
														"constant": false,
														"id": 3006,
														"mutability": "mutable",
														"name": "buyer",
														"nameLocation": "2728:5:13",
														"nodeType": "VariableDeclaration",
														"scope": 3086,
														"src": "2712:21:13",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_address_payable",
															"typeString": "address payable"
														},
														"typeName": {
															"id": 3005,
															"name": "address",
															"nodeType": "ElementaryTypeName",
															"src": "2712:15:13",
															"stateMutability": "payable",
															"typeDescriptions": {
																"typeIdentifier": "t_address_payable",
																"typeString": "address payable"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 3012,
												"initialValue": {
													"arguments": [
														{
															"expression": {
																"id": 3009,
																"name": "msg",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 4294967281,
																"src": "2744:3:13",
																"typeDescriptions": {
																	"typeIdentifier": "t_magic_message",
																	"typeString": "msg"
																}
															},
															"id": 3010,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "2748:6:13",
															"memberName": "sender",
															"nodeType": "MemberAccess",
															"src": "2744:10:13",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"id": 3008,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"lValueRequested": false,
														"nodeType": "ElementaryTypeNameExpression",
														"src": "2736:8:13",
														"typeDescriptions": {
															"typeIdentifier": "t_type$_t_address_payable_$",
															"typeString": "type(address payable)"
														},
														"typeName": {
															"id": 3007,
															"name": "address",
															"nodeType": "ElementaryTypeName",
															"src": "2736:8:13",
															"stateMutability": "payable",
															"typeDescriptions": {}
														}
													},
													"id": 3011,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "typeConversion",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2736:19:13",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_address_payable",
														"typeString": "address payable"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "2712:43:13"
											},
											{
												"assignments": [
													3014
												],
												"declarations": [
													{
														"constant": false,
														"id": 3014,
														"mutability": "mutable",
														"name": "result",
														"nameLocation": "2770:6:13",
														"nodeType": "VariableDeclaration",
														"scope": 3086,
														"src": "2765:11:13",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 3013,
															"name": "uint",
															"nodeType": "ElementaryTypeName",
															"src": "2765:4:13",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 3019,
												"initialValue": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 3018,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"expression": {
															"id": 3015,
															"name": "nft",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2980,
															"src": "2779:3:13",
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_NFT_$2827_storage_ptr",
																"typeString": "struct SmashNFT_Marketplace.NFT storage pointer"
															}
														},
														"id": 3016,
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "2783:5:13",
														"memberName": "price",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 2824,
														"src": "2779:9:13",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "-",
													"rightExpression": {
														"id": 3017,
														"name": "LISTING_FEE",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 2798,
														"src": "2791:11:13",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "2779:23:13",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "2765:37:13"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 3026,
															"name": "result",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 3014,
															"src": "2841:6:13",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"expression": {
															"arguments": [
																{
																	"expression": {
																		"id": 3022,
																		"name": "nft",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 2980,
																		"src": "2820:3:13",
																		"typeDescriptions": {
																			"typeIdentifier": "t_struct$_NFT_$2827_storage_ptr",
																			"typeString": "struct SmashNFT_Marketplace.NFT storage pointer"
																		}
																	},
																	"id": 3023,
																	"isConstant": false,
																	"isLValue": true,
																	"isPure": false,
																	"lValueRequested": false,
																	"memberLocation": "2824:6:13",
																	"memberName": "seller",
																	"nodeType": "MemberAccess",
																	"referencedDeclaration": 2820,
																	"src": "2820:10:13",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address_payable",
																		"typeString": "address payable"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_address_payable",
																		"typeString": "address payable"
																	}
																],
																"id": 3021,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "2812:8:13",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_address_payable_$",
																	"typeString": "type(address payable)"
																},
																"typeName": {
																	"id": 3020,
																	"name": "address",
																	"nodeType": "ElementaryTypeName",
																	"src": "2812:8:13",
																	"stateMutability": "payable",
																	"typeDescriptions": {}
																}
															},
															"id": 3024,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "typeConversion",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "2812:19:13",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address_payable",
																"typeString": "address payable"
															}
														},
														"id": 3025,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "2832:8:13",
														"memberName": "transfer",
														"nodeType": "MemberAccess",
														"src": "2812:28:13",
														"typeDescriptions": {
															"typeIdentifier": "t_function_transfer_nonpayable$_t_uint256_$returns$__$",
															"typeString": "function (uint256)"
														}
													},
													"id": 3027,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2812:36:13",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 3028,
												"nodeType": "ExpressionStatement",
												"src": "2812:36:13"
											},
											{
												"expression": {
													"arguments": [
														{
															"arguments": [
																{
																	"id": 3034,
																	"name": "this",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 4294967268,
																	"src": "2885:4:13",
																	"typeDescriptions": {
																		"typeIdentifier": "t_contract$_SmashNFT_Marketplace_$3611",
																		"typeString": "contract SmashNFT_Marketplace"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_contract$_SmashNFT_Marketplace_$3611",
																		"typeString": "contract SmashNFT_Marketplace"
																	}
																],
																"id": 3033,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "2877:7:13",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_address_$",
																	"typeString": "type(address)"
																},
																"typeName": {
																	"id": 3032,
																	"name": "address",
																	"nodeType": "ElementaryTypeName",
																	"src": "2877:7:13",
																	"typeDescriptions": {}
																}
															},
															"id": 3035,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "typeConversion",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "2877:13:13",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 3036,
															"name": "buyer",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 3006,
															"src": "2892:5:13",
															"typeDescriptions": {
																"typeIdentifier": "t_address_payable",
																"typeString": "address payable"
															}
														},
														{
															"expression": {
																"id": 3037,
																"name": "nft",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 2980,
																"src": "2899:3:13",
																"typeDescriptions": {
																	"typeIdentifier": "t_struct$_NFT_$2827_storage_ptr",
																	"typeString": "struct SmashNFT_Marketplace.NFT storage pointer"
																}
															},
															"id": 3038,
															"isConstant": false,
															"isLValue": true,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "2903:7:13",
															"memberName": "tokenId",
															"nodeType": "MemberAccess",
															"referencedDeclaration": 2818,
															"src": "2899:11:13",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address_payable",
																"typeString": "address payable"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"expression": {
															"id": 3029,
															"name": "token",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2859,
															"src": "2858:5:13",
															"typeDescriptions": {
																"typeIdentifier": "t_contract$_ERC721_$1111",
																"typeString": "contract ERC721"
															}
														},
														"id": 3031,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "2864:12:13",
														"memberName": "transferFrom",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 503,
														"src": "2858:18:13",
														"typeDescriptions": {
															"typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,address,uint256) external"
														}
													},
													"id": 3039,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2858:53:13",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 3040,
												"nodeType": "ExpressionStatement",
												"src": "2858:53:13"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 3048,
															"name": "LISTING_FEE",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2798,
															"src": "2962:11:13",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"expression": {
															"arguments": [
																{
																	"baseExpression": {
																		"id": 3043,
																		"name": "FirstOwner",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 2804,
																		"src": "2931:10:13",
																		"typeDescriptions": {
																			"typeIdentifier": "t_mapping$_t_uint256_$_t_address_$",
																			"typeString": "mapping(uint256 => address)"
																		}
																	},
																	"id": 3045,
																	"indexExpression": {
																		"id": 3044,
																		"name": "_tokenId",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 2973,
																		"src": "2942:8:13",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"isConstant": false,
																	"isLValue": true,
																	"isPure": false,
																	"lValueRequested": false,
																	"nodeType": "IndexAccess",
																	"src": "2931:20:13",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																],
																"id": 3042,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "2923:8:13",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_address_payable_$",
																	"typeString": "type(address payable)"
																},
																"typeName": {
																	"id": 3041,
																	"name": "address",
																	"nodeType": "ElementaryTypeName",
																	"src": "2923:8:13",
																	"stateMutability": "payable",
																	"typeDescriptions": {}
																}
															},
															"id": 3046,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "typeConversion",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "2923:29:13",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address_payable",
																"typeString": "address payable"
															}
														},
														"id": 3047,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "2953:8:13",
														"memberName": "transfer",
														"nodeType": "MemberAccess",
														"src": "2923:38:13",
														"typeDescriptions": {
															"typeIdentifier": "t_function_transfer_nonpayable$_t_uint256_$returns$__$",
															"typeString": "function (uint256)"
														}
													},
													"id": 3049,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2923:51:13",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 3050,
												"nodeType": "ExpressionStatement",
												"src": "2923:51:13"
											},
											{
												"expression": {
													"id": 3055,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"expression": {
															"id": 3051,
															"name": "nft",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2980,
															"src": "2984:3:13",
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_NFT_$2827_storage_ptr",
																"typeString": "struct SmashNFT_Marketplace.NFT storage pointer"
															}
														},
														"id": 3053,
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"memberLocation": "2988:5:13",
														"memberName": "owner",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 2822,
														"src": "2984:9:13",
														"typeDescriptions": {
															"typeIdentifier": "t_address_payable",
															"typeString": "address payable"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"id": 3054,
														"name": "buyer",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 3006,
														"src": "2996:5:13",
														"typeDescriptions": {
															"typeIdentifier": "t_address_payable",
															"typeString": "address payable"
														}
													},
													"src": "2984:17:13",
													"typeDescriptions": {
														"typeIdentifier": "t_address_payable",
														"typeString": "address payable"
													}
												},
												"id": 3056,
												"nodeType": "ExpressionStatement",
												"src": "2984:17:13"
											},
											{
												"expression": {
													"id": 3061,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"expression": {
															"id": 3057,
															"name": "nft",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2980,
															"src": "3011:3:13",
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_NFT_$2827_storage_ptr",
																"typeString": "struct SmashNFT_Marketplace.NFT storage pointer"
															}
														},
														"id": 3059,
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"memberLocation": "3015:6:13",
														"memberName": "listed",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 2826,
														"src": "3011:10:13",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"hexValue": "74727565",
														"id": 3060,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "bool",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "3022:4:13",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														},
														"value": "true"
													},
													"src": "3011:15:13",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 3062,
												"nodeType": "ExpressionStatement",
												"src": "3011:15:13"
											},
											{
												"expression": {
													"id": 3068,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"expression": {
															"baseExpression": {
																"id": 3063,
																"name": "check",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 2809,
																"src": "3036:5:13",
																"typeDescriptions": {
																	"typeIdentifier": "t_mapping$_t_uint256_$_t_struct$_Check_$2832_storage_$",
																	"typeString": "mapping(uint256 => struct SmashNFT_Marketplace.Check storage ref)"
																}
															},
															"id": 3065,
															"indexExpression": {
																"id": 3064,
																"name": "_tokenId",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 2973,
																"src": "3042:8:13",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"isConstant": false,
															"isLValue": true,
															"isPure": false,
															"lValueRequested": false,
															"nodeType": "IndexAccess",
															"src": "3036:15:13",
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_Check_$2832_storage",
																"typeString": "struct SmashNFT_Marketplace.Check storage ref"
															}
														},
														"id": 3066,
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"memberLocation": "3052:6:13",
														"memberName": "_check",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 2829,
														"src": "3036:22:13",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"hexValue": "74727565",
														"id": 3067,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "bool",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "3061:4:13",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														},
														"value": "true"
													},
													"src": "3036:29:13",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 3069,
												"nodeType": "ExpressionStatement",
												"src": "3036:29:13"
											},
											{
												"expression": {
													"arguments": [],
													"expression": {
														"argumentTypes": [],
														"expression": {
															"id": 3070,
															"name": "_nftsSold",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2792,
															"src": "3075:9:13",
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_Counter_$1630_storage",
																"typeString": "struct Counters.Counter storage ref"
															}
														},
														"id": 3072,
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "3085:9:13",
														"memberName": "increment",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 1656,
														"src": "3075:19:13",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_struct$_Counter_$1630_storage_ptr_$returns$__$attached_to$_t_struct$_Counter_$1630_storage_ptr_$",
															"typeString": "function (struct Counters.Counter storage pointer)"
														}
													},
													"id": 3073,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "3075:21:13",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 3074,
												"nodeType": "ExpressionStatement",
												"src": "3075:21:13"
											},
											{
												"eventCall": {
													"arguments": [
														{
															"id": 3076,
															"name": "MinterAddress",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2861,
															"src": "3119:13:13",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"expression": {
																"id": 3077,
																"name": "nft",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 2980,
																"src": "3134:3:13",
																"typeDescriptions": {
																	"typeIdentifier": "t_struct$_NFT_$2827_storage_ptr",
																	"typeString": "struct SmashNFT_Marketplace.NFT storage pointer"
																}
															},
															"id": 3078,
															"isConstant": false,
															"isLValue": true,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "3138:7:13",
															"memberName": "tokenId",
															"nodeType": "MemberAccess",
															"referencedDeclaration": 2818,
															"src": "3134:11:13",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														{
															"expression": {
																"id": 3079,
																"name": "nft",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 2980,
																"src": "3147:3:13",
																"typeDescriptions": {
																	"typeIdentifier": "t_struct$_NFT_$2827_storage_ptr",
																	"typeString": "struct SmashNFT_Marketplace.NFT storage pointer"
																}
															},
															"id": 3080,
															"isConstant": false,
															"isLValue": true,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "3151:6:13",
															"memberName": "seller",
															"nodeType": "MemberAccess",
															"referencedDeclaration": 2820,
															"src": "3147:10:13",
															"typeDescriptions": {
																"typeIdentifier": "t_address_payable",
																"typeString": "address payable"
															}
														},
														{
															"id": 3081,
															"name": "buyer",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 3006,
															"src": "3159:5:13",
															"typeDescriptions": {
																"typeIdentifier": "t_address_payable",
																"typeString": "address payable"
															}
														},
														{
															"expression": {
																"id": 3082,
																"name": "msg",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 4294967281,
																"src": "3166:3:13",
																"typeDescriptions": {
																	"typeIdentifier": "t_magic_message",
																	"typeString": "msg"
																}
															},
															"id": 3083,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "3170:5:13",
															"memberName": "value",
															"nodeType": "MemberAccess",
															"src": "3166:9:13",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															{
																"typeIdentifier": "t_address_payable",
																"typeString": "address payable"
															},
															{
																"typeIdentifier": "t_address_payable",
																"typeString": "address payable"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 3075,
														"name": "NFTSold",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 2856,
														"src": "3111:7:13",
														"typeDescriptions": {
															"typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_uint256_$_t_address_$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,uint256,address,address,uint256)"
														}
													},
													"id": 3084,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "3111:65:13",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 3085,
												"nodeType": "EmitStatement",
												"src": "3106:70:13"
											}
										]
									},
									"functionSelector": "243adbdd",
									"id": 3087,
									"implemented": true,
									"kind": "function",
									"modifiers": [
										{
											"id": 2976,
											"kind": "modifierInvocation",
											"modifierName": {
												"id": 2975,
												"name": "nonReentrant",
												"nameLocations": [
													"2466:12:13"
												],
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 142,
												"src": "2466:12:13"
											},
											"nodeType": "ModifierInvocation",
											"src": "2466:12:13"
										}
									],
									"name": "buyNft",
									"nameLocation": "2426:6:13",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 2974,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2973,
												"mutability": "mutable",
												"name": "_tokenId",
												"nameLocation": "2441:8:13",
												"nodeType": "VariableDeclaration",
												"scope": 3087,
												"src": "2433:16:13",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2972,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2433:7:13",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2432:18:13"
									},
									"returnParameters": {
										"id": 2977,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2479:0:13"
									},
									"scope": 3611,
									"src": "2417:766:13",
									"stateMutability": "payable",
									"virtual": false,
									"visibility": "public"
								},
								{
									"body": {
										"id": 3215,
										"nodeType": "Block",
										"src": "3511:759:13",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 3099,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 3097,
																"name": "_price",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 3091,
																"src": "3529:6:13",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">",
															"rightExpression": {
																"hexValue": "30",
																"id": 3098,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "3538:1:13",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															},
															"src": "3529:10:13",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "5072696365206d757374206265206174206c65617374203120776569",
															"id": 3100,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "3541:30:13",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_ed429417bc253b1d285ade089363828076314dff0c77fc211ca9115957f5bdf9",
																"typeString": "literal_string \"Price must be at least 1 wei\""
															},
															"value": "Price must be at least 1 wei"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_ed429417bc253b1d285ade089363828076314dff0c77fc211ca9115957f5bdf9",
																"typeString": "literal_string \"Price must be at least 1 wei\""
															}
														],
														"id": 3096,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "3521:7:13",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 3101,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "3521:51:13",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 3102,
												"nodeType": "ExpressionStatement",
												"src": "3521:51:13"
											},
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															"id": 3110,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"expression": {
																	"baseExpression": {
																		"id": 3104,
																		"name": "_idToNFT",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 2814,
																		"src": "3590:8:13",
																		"typeDescriptions": {
																			"typeIdentifier": "t_mapping$_t_uint256_$_t_struct$_NFT_$2827_storage_$",
																			"typeString": "mapping(uint256 => struct SmashNFT_Marketplace.NFT storage ref)"
																		}
																	},
																	"id": 3106,
																	"indexExpression": {
																		"id": 3105,
																		"name": "_tokenId",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 3089,
																		"src": "3599:8:13",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"isConstant": false,
																	"isLValue": true,
																	"isPure": false,
																	"lValueRequested": false,
																	"nodeType": "IndexAccess",
																	"src": "3590:18:13",
																	"typeDescriptions": {
																		"typeIdentifier": "t_struct$_NFT_$2827_storage",
																		"typeString": "struct SmashNFT_Marketplace.NFT storage ref"
																	}
																},
																"id": 3107,
																"isConstant": false,
																"isLValue": true,
																"isPure": false,
																"lValueRequested": false,
																"memberLocation": "3609:5:13",
																"memberName": "owner",
																"nodeType": "MemberAccess",
																"referencedDeclaration": 2822,
																"src": "3590:24:13",
																"typeDescriptions": {
																	"typeIdentifier": "t_address_payable",
																	"typeString": "address payable"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "==",
															"rightExpression": {
																"expression": {
																	"id": 3108,
																	"name": "msg",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 4294967281,
																	"src": "3618:3:13",
																	"typeDescriptions": {
																		"typeIdentifier": "t_magic_message",
																		"typeString": "msg"
																	}
																},
																"id": 3109,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"memberLocation": "3622:6:13",
																"memberName": "sender",
																"nodeType": "MemberAccess",
																"src": "3618:10:13",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"src": "3590:38:13",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "4f6e6c79206f776e6572204f66207468697320546f6b656e2043616e20526573656c6c",
															"id": 3111,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "3629:37:13",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_d845632d98b9fd2d13e8dbaf0c8cf1267b41fc0621502f1ee910180b73047c73",
																"typeString": "literal_string \"Only owner Of this Token Can Resell\""
															},
															"value": "Only owner Of this Token Can Resell"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_d845632d98b9fd2d13e8dbaf0c8cf1267b41fc0621502f1ee910180b73047c73",
																"typeString": "literal_string \"Only owner Of this Token Can Resell\""
															}
														],
														"id": 3103,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "3582:7:13",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 3112,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "3582:85:13",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 3113,
												"nodeType": "ExpressionStatement",
												"src": "3582:85:13"
											},
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_address_payable",
														"typeString": "address payable"
													},
													"id": 3122,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"expression": {
															"baseExpression": {
																"id": 3114,
																"name": "_idToNFT",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 2814,
																"src": "3680:8:13",
																"typeDescriptions": {
																	"typeIdentifier": "t_mapping$_t_uint256_$_t_struct$_NFT_$2827_storage_$",
																	"typeString": "mapping(uint256 => struct SmashNFT_Marketplace.NFT storage ref)"
																}
															},
															"id": 3116,
															"indexExpression": {
																"id": 3115,
																"name": "_tokenId",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 3089,
																"src": "3689:8:13",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"isConstant": false,
															"isLValue": true,
															"isPure": false,
															"lValueRequested": false,
															"nodeType": "IndexAccess",
															"src": "3680:18:13",
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_NFT_$2827_storage",
																"typeString": "struct SmashNFT_Marketplace.NFT storage ref"
															}
														},
														"id": 3117,
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "3699:6:13",
														"memberName": "seller",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 2820,
														"src": "3680:25:13",
														"typeDescriptions": {
															"typeIdentifier": "t_address_payable",
															"typeString": "address payable"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "!=",
													"rightExpression": {
														"expression": {
															"baseExpression": {
																"id": 3118,
																"name": "_idToNFT",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 2814,
																"src": "3709:8:13",
																"typeDescriptions": {
																	"typeIdentifier": "t_mapping$_t_uint256_$_t_struct$_NFT_$2827_storage_$",
																	"typeString": "mapping(uint256 => struct SmashNFT_Marketplace.NFT storage ref)"
																}
															},
															"id": 3120,
															"indexExpression": {
																"id": 3119,
																"name": "_tokenId",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 3089,
																"src": "3718:8:13",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"isConstant": false,
															"isLValue": true,
															"isPure": false,
															"lValueRequested": false,
															"nodeType": "IndexAccess",
															"src": "3709:18:13",
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_NFT_$2827_storage",
																"typeString": "struct SmashNFT_Marketplace.NFT storage ref"
															}
														},
														"id": 3121,
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "3728:5:13",
														"memberName": "owner",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 2822,
														"src": "3709:24:13",
														"typeDescriptions": {
															"typeIdentifier": "t_address_payable",
															"typeString": "address payable"
														}
													},
													"src": "3680:53:13",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 3136,
												"nodeType": "IfStatement",
												"src": "3677:172:13",
												"trueBody": {
													"id": 3135,
													"nodeType": "Block",
													"src": "3734:115:13",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"commonType": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		},
																		"id": 3131,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftExpression": {
																			"arguments": [
																				{
																					"expression": {
																						"baseExpression": {
																							"id": 3125,
																							"name": "_idToNFT",
																							"nodeType": "Identifier",
																							"overloadedDeclarations": [],
																							"referencedDeclaration": 2814,
																							"src": "3771:8:13",
																							"typeDescriptions": {
																								"typeIdentifier": "t_mapping$_t_uint256_$_t_struct$_NFT_$2827_storage_$",
																								"typeString": "mapping(uint256 => struct SmashNFT_Marketplace.NFT storage ref)"
																							}
																						},
																						"id": 3127,
																						"indexExpression": {
																							"id": 3126,
																							"name": "_tokenId",
																							"nodeType": "Identifier",
																							"overloadedDeclarations": [],
																							"referencedDeclaration": 3089,
																							"src": "3780:8:13",
																							"typeDescriptions": {
																								"typeIdentifier": "t_uint256",
																								"typeString": "uint256"
																							}
																						},
																						"isConstant": false,
																						"isLValue": true,
																						"isPure": false,
																						"lValueRequested": false,
																						"nodeType": "IndexAccess",
																						"src": "3771:18:13",
																						"typeDescriptions": {
																							"typeIdentifier": "t_struct$_NFT_$2827_storage",
																							"typeString": "struct SmashNFT_Marketplace.NFT storage ref"
																						}
																					},
																					"id": 3128,
																					"isConstant": false,
																					"isLValue": true,
																					"isPure": false,
																					"lValueRequested": false,
																					"memberLocation": "3790:5:13",
																					"memberName": "price",
																					"nodeType": "MemberAccess",
																					"referencedDeclaration": 2824,
																					"src": "3771:24:13",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				}
																			],
																			"expression": {
																				"argumentTypes": [
																					{
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				],
																				"id": 3124,
																				"name": "ClaculatePrice",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 3301,
																				"src": "3756:14:13",
																				"typeDescriptions": {
																					"typeIdentifier": "t_function_internal_pure$_t_uint256_$returns$_t_uint256_$",
																					"typeString": "function (uint256) pure returns (uint256)"
																				}
																			},
																			"id": 3129,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"kind": "functionCall",
																			"lValueRequested": false,
																			"nameLocations": [],
																			"names": [],
																			"nodeType": "FunctionCall",
																			"src": "3756:40:13",
																			"tryCall": false,
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "BinaryOperation",
																		"operator": ">=",
																		"rightExpression": {
																			"id": 3130,
																			"name": "_price",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 3091,
																			"src": "3800:6:13",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"src": "3756:50:13",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bool",
																			"typeString": "bool"
																		}
																	},
																	{
																		"hexValue": "54686973205072696365204973204d6f7265205468616e20323025",
																		"id": 3132,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "string",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "3808:29:13",
																		"typeDescriptions": {
																			"typeIdentifier": "t_stringliteral_61f51060552d0392f4e47808f23bc9cbf7c6eab1ae2ff99074f6276698231311",
																			"typeString": "literal_string \"This Price Is More Than 20%\""
																		},
																		"value": "This Price Is More Than 20%"
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_bool",
																			"typeString": "bool"
																		},
																		{
																			"typeIdentifier": "t_stringliteral_61f51060552d0392f4e47808f23bc9cbf7c6eab1ae2ff99074f6276698231311",
																			"typeString": "literal_string \"This Price Is More Than 20%\""
																		}
																	],
																	"id": 3123,
																	"name": "require",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [
																		4294967278,
																		4294967278
																	],
																	"referencedDeclaration": 4294967278,
																	"src": "3748:7:13",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
																		"typeString": "function (bool,string memory) pure"
																	}
																},
																"id": 3133,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "3748:90:13",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$__$",
																	"typeString": "tuple()"
																}
															},
															"id": 3134,
															"nodeType": "ExpressionStatement",
															"src": "3748:90:13"
														}
													]
												}
											},
											{
												"expression": {
													"arguments": [
														{
															"expression": {
																"id": 3140,
																"name": "msg",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 4294967281,
																"src": "3877:3:13",
																"typeDescriptions": {
																	"typeIdentifier": "t_magic_message",
																	"typeString": "msg"
																}
															},
															"id": 3141,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "3881:6:13",
															"memberName": "sender",
															"nodeType": "MemberAccess",
															"src": "3877:10:13",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"arguments": [
																{
																	"id": 3144,
																	"name": "this",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 4294967268,
																	"src": "3897:4:13",
																	"typeDescriptions": {
																		"typeIdentifier": "t_contract$_SmashNFT_Marketplace_$3611",
																		"typeString": "contract SmashNFT_Marketplace"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_contract$_SmashNFT_Marketplace_$3611",
																		"typeString": "contract SmashNFT_Marketplace"
																	}
																],
																"id": 3143,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "3889:7:13",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_address_$",
																	"typeString": "type(address)"
																},
																"typeName": {
																	"id": 3142,
																	"name": "address",
																	"nodeType": "ElementaryTypeName",
																	"src": "3889:7:13",
																	"typeDescriptions": {}
																}
															},
															"id": 3145,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "typeConversion",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "3889:13:13",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 3146,
															"name": "_tokenId",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 3089,
															"src": "3904:8:13",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"expression": {
															"id": 3137,
															"name": "token",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2859,
															"src": "3858:5:13",
															"typeDescriptions": {
																"typeIdentifier": "t_contract$_ERC721_$1111",
																"typeString": "contract ERC721"
															}
														},
														"id": 3139,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "3864:12:13",
														"memberName": "transferFrom",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 503,
														"src": "3858:18:13",
														"typeDescriptions": {
															"typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,address,uint256) external"
														}
													},
													"id": 3147,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "3858:55:13",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 3148,
												"nodeType": "ExpressionStatement",
												"src": "3858:55:13"
											},
											{
												"assignments": [
													3151
												],
												"declarations": [
													{
														"constant": false,
														"id": 3151,
														"mutability": "mutable",
														"name": "nft",
														"nameLocation": "3935:3:13",
														"nodeType": "VariableDeclaration",
														"scope": 3215,
														"src": "3923:15:13",
														"stateVariable": false,
														"storageLocation": "storage",
														"typeDescriptions": {
															"typeIdentifier": "t_struct$_NFT_$2827_storage_ptr",
															"typeString": "struct SmashNFT_Marketplace.NFT"
														},
														"typeName": {
															"id": 3150,
															"nodeType": "UserDefinedTypeName",
															"pathNode": {
																"id": 3149,
																"name": "NFT",
																"nameLocations": [
																	"3923:3:13"
																],
																"nodeType": "IdentifierPath",
																"referencedDeclaration": 2827,
																"src": "3923:3:13"
															},
															"referencedDeclaration": 2827,
															"src": "3923:3:13",
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_NFT_$2827_storage_ptr",
																"typeString": "struct SmashNFT_Marketplace.NFT"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 3155,
												"initialValue": {
													"baseExpression": {
														"id": 3152,
														"name": "_idToNFT",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 2814,
														"src": "3941:8:13",
														"typeDescriptions": {
															"typeIdentifier": "t_mapping$_t_uint256_$_t_struct$_NFT_$2827_storage_$",
															"typeString": "mapping(uint256 => struct SmashNFT_Marketplace.NFT storage ref)"
														}
													},
													"id": 3154,
													"indexExpression": {
														"id": 3153,
														"name": "_tokenId",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 3089,
														"src": "3950:8:13",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"isConstant": false,
													"isLValue": true,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "IndexAccess",
													"src": "3941:18:13",
													"typeDescriptions": {
														"typeIdentifier": "t_struct$_NFT_$2827_storage",
														"typeString": "struct SmashNFT_Marketplace.NFT storage ref"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "3923:36:13"
											},
											{
												"expression": {
													"id": 3164,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"expression": {
															"id": 3156,
															"name": "nft",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 3151,
															"src": "3969:3:13",
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_NFT_$2827_storage_ptr",
																"typeString": "struct SmashNFT_Marketplace.NFT storage pointer"
															}
														},
														"id": 3158,
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"memberLocation": "3973:6:13",
														"memberName": "seller",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 2820,
														"src": "3969:10:13",
														"typeDescriptions": {
															"typeIdentifier": "t_address_payable",
															"typeString": "address payable"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"arguments": [
															{
																"expression": {
																	"id": 3161,
																	"name": "msg",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 4294967281,
																	"src": "3990:3:13",
																	"typeDescriptions": {
																		"typeIdentifier": "t_magic_message",
																		"typeString": "msg"
																	}
																},
																"id": 3162,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"memberLocation": "3994:6:13",
																"memberName": "sender",
																"nodeType": "MemberAccess",
																"src": "3990:10:13",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															],
															"id": 3160,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"lValueRequested": false,
															"nodeType": "ElementaryTypeNameExpression",
															"src": "3982:8:13",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_address_payable_$",
																"typeString": "type(address payable)"
															},
															"typeName": {
																"id": 3159,
																"name": "address",
																"nodeType": "ElementaryTypeName",
																"src": "3982:8:13",
																"stateMutability": "payable",
																"typeDescriptions": {}
															}
														},
														"id": 3163,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "typeConversion",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "3982:19:13",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_address_payable",
															"typeString": "address payable"
														}
													},
													"src": "3969:32:13",
													"typeDescriptions": {
														"typeIdentifier": "t_address_payable",
														"typeString": "address payable"
													}
												},
												"id": 3165,
												"nodeType": "ExpressionStatement",
												"src": "3969:32:13"
											},
											{
												"expression": {
													"id": 3176,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"expression": {
															"id": 3166,
															"name": "nft",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 3151,
															"src": "4011:3:13",
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_NFT_$2827_storage_ptr",
																"typeString": "struct SmashNFT_Marketplace.NFT storage pointer"
															}
														},
														"id": 3168,
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"memberLocation": "4015:5:13",
														"memberName": "owner",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 2822,
														"src": "4011:9:13",
														"typeDescriptions": {
															"typeIdentifier": "t_address_payable",
															"typeString": "address payable"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"arguments": [
															{
																"arguments": [
																	{
																		"id": 3173,
																		"name": "this",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 4294967268,
																		"src": "4039:4:13",
																		"typeDescriptions": {
																			"typeIdentifier": "t_contract$_SmashNFT_Marketplace_$3611",
																			"typeString": "contract SmashNFT_Marketplace"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_contract$_SmashNFT_Marketplace_$3611",
																			"typeString": "contract SmashNFT_Marketplace"
																		}
																	],
																	"id": 3172,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"lValueRequested": false,
																	"nodeType": "ElementaryTypeNameExpression",
																	"src": "4031:7:13",
																	"typeDescriptions": {
																		"typeIdentifier": "t_type$_t_address_$",
																		"typeString": "type(address)"
																	},
																	"typeName": {
																		"id": 3171,
																		"name": "address",
																		"nodeType": "ElementaryTypeName",
																		"src": "4031:7:13",
																		"typeDescriptions": {}
																	}
																},
																"id": 3174,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "typeConversion",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "4031:13:13",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															],
															"id": 3170,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"lValueRequested": false,
															"nodeType": "ElementaryTypeNameExpression",
															"src": "4023:8:13",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_address_payable_$",
																"typeString": "type(address payable)"
															},
															"typeName": {
																"id": 3169,
																"name": "address",
																"nodeType": "ElementaryTypeName",
																"src": "4023:8:13",
																"stateMutability": "payable",
																"typeDescriptions": {}
															}
														},
														"id": 3175,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "typeConversion",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "4023:22:13",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_address_payable",
															"typeString": "address payable"
														}
													},
													"src": "4011:34:13",
													"typeDescriptions": {
														"typeIdentifier": "t_address_payable",
														"typeString": "address payable"
													}
												},
												"id": 3177,
												"nodeType": "ExpressionStatement",
												"src": "4011:34:13"
											},
											{
												"expression": {
													"id": 3182,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"expression": {
															"id": 3178,
															"name": "nft",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 3151,
															"src": "4055:3:13",
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_NFT_$2827_storage_ptr",
																"typeString": "struct SmashNFT_Marketplace.NFT storage pointer"
															}
														},
														"id": 3180,
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"memberLocation": "4059:6:13",
														"memberName": "listed",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 2826,
														"src": "4055:10:13",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"hexValue": "66616c7365",
														"id": 3181,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "bool",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "4068:5:13",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														},
														"value": "false"
													},
													"src": "4055:18:13",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 3183,
												"nodeType": "ExpressionStatement",
												"src": "4055:18:13"
											},
											{
												"expression": {
													"id": 3188,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"expression": {
															"id": 3184,
															"name": "nft",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 3151,
															"src": "4083:3:13",
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_NFT_$2827_storage_ptr",
																"typeString": "struct SmashNFT_Marketplace.NFT storage pointer"
															}
														},
														"id": 3186,
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"memberLocation": "4087:5:13",
														"memberName": "price",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 2824,
														"src": "4083:9:13",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"id": 3187,
														"name": "_price",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 3091,
														"src": "4095:6:13",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "4083:18:13",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 3189,
												"nodeType": "ExpressionStatement",
												"src": "4083:18:13"
											},
											{
												"expression": {
													"id": 3196,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"expression": {
															"baseExpression": {
																"id": 3190,
																"name": "check",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 2809,
																"src": "4111:5:13",
																"typeDescriptions": {
																	"typeIdentifier": "t_mapping$_t_uint256_$_t_struct$_Check_$2832_storage_$",
																	"typeString": "mapping(uint256 => struct SmashNFT_Marketplace.Check storage ref)"
																}
															},
															"id": 3192,
															"indexExpression": {
																"id": 3191,
																"name": "_tokenId",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 3089,
																"src": "4117:8:13",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"isConstant": false,
															"isLValue": true,
															"isPure": false,
															"lValueRequested": false,
															"nodeType": "IndexAccess",
															"src": "4111:15:13",
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_Check_$2832_storage",
																"typeString": "struct SmashNFT_Marketplace.Check storage ref"
															}
														},
														"id": 3193,
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"memberLocation": "4127:8:13",
														"memberName": "_address",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 2831,
														"src": "4111:24:13",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"expression": {
															"id": 3194,
															"name": "msg",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 4294967281,
															"src": "4138:3:13",
															"typeDescriptions": {
																"typeIdentifier": "t_magic_message",
																"typeString": "msg"
															}
														},
														"id": 3195,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "4142:6:13",
														"memberName": "sender",
														"nodeType": "MemberAccess",
														"src": "4138:10:13",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "4111:37:13",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"id": 3197,
												"nodeType": "ExpressionStatement",
												"src": "4111:37:13"
											},
											{
												"expression": {
													"arguments": [],
													"expression": {
														"argumentTypes": [],
														"expression": {
															"id": 3198,
															"name": "_nftsSold",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2792,
															"src": "4158:9:13",
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_Counter_$1630_storage",
																"typeString": "struct Counters.Counter storage ref"
															}
														},
														"id": 3200,
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "4168:9:13",
														"memberName": "decrement",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 1684,
														"src": "4158:19:13",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_struct$_Counter_$1630_storage_ptr_$returns$__$attached_to$_t_struct$_Counter_$1630_storage_ptr_$",
															"typeString": "function (struct Counters.Counter storage pointer)"
														}
													},
													"id": 3201,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "4158:21:13",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 3202,
												"nodeType": "ExpressionStatement",
												"src": "4158:21:13"
											},
											{
												"eventCall": {
													"arguments": [
														{
															"id": 3204,
															"name": "MinterAddress",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2861,
															"src": "4204:13:13",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 3205,
															"name": "_tokenId",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 3089,
															"src": "4219:8:13",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														{
															"expression": {
																"id": 3206,
																"name": "msg",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 4294967281,
																"src": "4229:3:13",
																"typeDescriptions": {
																	"typeIdentifier": "t_magic_message",
																	"typeString": "msg"
																}
															},
															"id": 3207,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "4233:6:13",
															"memberName": "sender",
															"nodeType": "MemberAccess",
															"src": "4229:10:13",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"arguments": [
																{
																	"id": 3210,
																	"name": "this",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 4294967268,
																	"src": "4249:4:13",
																	"typeDescriptions": {
																		"typeIdentifier": "t_contract$_SmashNFT_Marketplace_$3611",
																		"typeString": "contract SmashNFT_Marketplace"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_contract$_SmashNFT_Marketplace_$3611",
																		"typeString": "contract SmashNFT_Marketplace"
																	}
																],
																"id": 3209,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "4241:7:13",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_address_$",
																	"typeString": "type(address)"
																},
																"typeName": {
																	"id": 3208,
																	"name": "address",
																	"nodeType": "ElementaryTypeName",
																	"src": "4241:7:13",
																	"typeDescriptions": {}
																}
															},
															"id": 3211,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "typeConversion",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "4241:13:13",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 3212,
															"name": "_price",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 3091,
															"src": "4256:6:13",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 3203,
														"name": "NFTListed",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 2844,
														"src": "4194:9:13",
														"typeDescriptions": {
															"typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_uint256_$_t_address_$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,uint256,address,address,uint256)"
														}
													},
													"id": 3213,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "4194:69:13",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 3214,
												"nodeType": "EmitStatement",
												"src": "4189:74:13"
											}
										]
									},
									"functionSelector": "e47f018a",
									"id": 3216,
									"implemented": true,
									"kind": "function",
									"modifiers": [
										{
											"id": 3094,
											"kind": "modifierInvocation",
											"modifierName": {
												"id": 3093,
												"name": "nonReentrant",
												"nameLocations": [
													"3498:12:13"
												],
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 142,
												"src": "3498:12:13"
											},
											"nodeType": "ModifierInvocation",
											"src": "3498:12:13"
										}
									],
									"name": "ReSellNft",
									"nameLocation": "3439:9:13",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 3092,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 3089,
												"mutability": "mutable",
												"name": "_tokenId",
												"nameLocation": "3457:8:13",
												"nodeType": "VariableDeclaration",
												"scope": 3216,
												"src": "3449:16:13",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 3088,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3449:7:13",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 3091,
												"mutability": "mutable",
												"name": "_price",
												"nameLocation": "3475:6:13",
												"nodeType": "VariableDeclaration",
												"scope": 3216,
												"src": "3467:14:13",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 3090,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3467:7:13",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3448:34:13"
									},
									"returnParameters": {
										"id": 3095,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "3511:0:13"
									},
									"scope": 3611,
									"src": "3430:840:13",
									"stateMutability": "payable",
									"virtual": false,
									"visibility": "public"
								},
								{
									"body": {
										"id": 3274,
										"nodeType": "Block",
										"src": "4485:319:13",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															"id": 3228,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"expression": {
																	"baseExpression": {
																		"id": 3222,
																		"name": "check",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 2809,
																		"src": "4503:5:13",
																		"typeDescriptions": {
																			"typeIdentifier": "t_mapping$_t_uint256_$_t_struct$_Check_$2832_storage_$",
																			"typeString": "mapping(uint256 => struct SmashNFT_Marketplace.Check storage ref)"
																		}
																	},
																	"id": 3224,
																	"indexExpression": {
																		"id": 3223,
																		"name": "_tokenId",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 3218,
																		"src": "4509:8:13",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"isConstant": false,
																	"isLValue": true,
																	"isPure": false,
																	"lValueRequested": false,
																	"nodeType": "IndexAccess",
																	"src": "4503:15:13",
																	"typeDescriptions": {
																		"typeIdentifier": "t_struct$_Check_$2832_storage",
																		"typeString": "struct SmashNFT_Marketplace.Check storage ref"
																	}
																},
																"id": 3225,
																"isConstant": false,
																"isLValue": true,
																"isPure": false,
																"lValueRequested": false,
																"memberLocation": "4519:8:13",
																"memberName": "_address",
																"nodeType": "MemberAccess",
																"referencedDeclaration": 2831,
																"src": "4503:24:13",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "==",
															"rightExpression": {
																"expression": {
																	"id": 3226,
																	"name": "msg",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 4294967281,
																	"src": "4531:3:13",
																	"typeDescriptions": {
																		"typeIdentifier": "t_magic_message",
																		"typeString": "msg"
																	}
																},
																"id": 3227,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"memberLocation": "4535:6:13",
																"memberName": "sender",
																"nodeType": "MemberAccess",
																"src": "4531:10:13",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"src": "4503:38:13",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "4f6e6c79204f776e65722063616e2043616e63656c",
															"id": 3229,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "4542:23:13",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_727c3a12b158040924757c03f361b4f9478c9475f21c278861c9612a31524eb2",
																"typeString": "literal_string \"Only Owner can Cancel\""
															},
															"value": "Only Owner can Cancel"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_727c3a12b158040924757c03f361b4f9478c9475f21c278861c9612a31524eb2",
																"typeString": "literal_string \"Only Owner can Cancel\""
															}
														],
														"id": 3221,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "4495:7:13",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 3230,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "4495:71:13",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 3231,
												"nodeType": "ExpressionStatement",
												"src": "4495:71:13"
											},
											{
												"expression": {
													"id": 3237,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"expression": {
															"baseExpression": {
																"id": 3232,
																"name": "check",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 2809,
																"src": "4576:5:13",
																"typeDescriptions": {
																	"typeIdentifier": "t_mapping$_t_uint256_$_t_struct$_Check_$2832_storage_$",
																	"typeString": "mapping(uint256 => struct SmashNFT_Marketplace.Check storage ref)"
																}
															},
															"id": 3234,
															"indexExpression": {
																"id": 3233,
																"name": "_tokenId",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 3218,
																"src": "4582:8:13",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"isConstant": false,
															"isLValue": true,
															"isPure": false,
															"lValueRequested": false,
															"nodeType": "IndexAccess",
															"src": "4576:15:13",
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_Check_$2832_storage",
																"typeString": "struct SmashNFT_Marketplace.Check storage ref"
															}
														},
														"id": 3235,
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"memberLocation": "4592:6:13",
														"memberName": "_check",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 2829,
														"src": "4576:22:13",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"hexValue": "74727565",
														"id": 3236,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "bool",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "4601:4:13",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														},
														"value": "true"
													},
													"src": "4576:29:13",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 3238,
												"nodeType": "ExpressionStatement",
												"src": "4576:29:13"
											},
											{
												"expression": {
													"id": 3244,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"expression": {
															"baseExpression": {
																"id": 3239,
																"name": "_idToNFT",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 2814,
																"src": "4615:8:13",
																"typeDescriptions": {
																	"typeIdentifier": "t_mapping$_t_uint256_$_t_struct$_NFT_$2827_storage_$",
																	"typeString": "mapping(uint256 => struct SmashNFT_Marketplace.NFT storage ref)"
																}
															},
															"id": 3241,
															"indexExpression": {
																"id": 3240,
																"name": "_tokenId",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 3218,
																"src": "4624:8:13",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"isConstant": false,
															"isLValue": true,
															"isPure": false,
															"lValueRequested": false,
															"nodeType": "IndexAccess",
															"src": "4615:18:13",
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_NFT_$2827_storage",
																"typeString": "struct SmashNFT_Marketplace.NFT storage ref"
															}
														},
														"id": 3242,
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"memberLocation": "4634:6:13",
														"memberName": "listed",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 2826,
														"src": "4615:25:13",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"hexValue": "74727565",
														"id": 3243,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "bool",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "4641:4:13",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														},
														"value": "true"
													},
													"src": "4615:30:13",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 3245,
												"nodeType": "ExpressionStatement",
												"src": "4615:30:13"
											},
											{
												"expression": {
													"arguments": [
														{
															"arguments": [
																{
																	"id": 3251,
																	"name": "this",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 4294967268,
																	"src": "4682:4:13",
																	"typeDescriptions": {
																		"typeIdentifier": "t_contract$_SmashNFT_Marketplace_$3611",
																		"typeString": "contract SmashNFT_Marketplace"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_contract$_SmashNFT_Marketplace_$3611",
																		"typeString": "contract SmashNFT_Marketplace"
																	}
																],
																"id": 3250,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "4674:7:13",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_address_$",
																	"typeString": "type(address)"
																},
																"typeName": {
																	"id": 3249,
																	"name": "address",
																	"nodeType": "ElementaryTypeName",
																	"src": "4674:7:13",
																	"typeDescriptions": {}
																}
															},
															"id": 3252,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "typeConversion",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "4674:13:13",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"expression": {
																"id": 3253,
																"name": "msg",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 4294967281,
																"src": "4689:3:13",
																"typeDescriptions": {
																	"typeIdentifier": "t_magic_message",
																	"typeString": "msg"
																}
															},
															"id": 3254,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "4693:6:13",
															"memberName": "sender",
															"nodeType": "MemberAccess",
															"src": "4689:10:13",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 3255,
															"name": "_tokenId",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 3218,
															"src": "4701:8:13",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"expression": {
															"id": 3246,
															"name": "token",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2859,
															"src": "4655:5:13",
															"typeDescriptions": {
																"typeIdentifier": "t_contract$_ERC721_$1111",
																"typeString": "contract ERC721"
															}
														},
														"id": 3248,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "4661:12:13",
														"memberName": "transferFrom",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 503,
														"src": "4655:18:13",
														"typeDescriptions": {
															"typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,address,uint256) external"
														}
													},
													"id": 3256,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "4655:55:13",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 3257,
												"nodeType": "ExpressionStatement",
												"src": "4655:55:13"
											},
											{
												"expression": {
													"id": 3267,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"expression": {
															"baseExpression": {
																"id": 3258,
																"name": "_idToNFT",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 2814,
																"src": "4720:8:13",
																"typeDescriptions": {
																	"typeIdentifier": "t_mapping$_t_uint256_$_t_struct$_NFT_$2827_storage_$",
																	"typeString": "mapping(uint256 => struct SmashNFT_Marketplace.NFT storage ref)"
																}
															},
															"id": 3260,
															"indexExpression": {
																"id": 3259,
																"name": "_tokenId",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 3218,
																"src": "4729:8:13",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"isConstant": false,
															"isLValue": true,
															"isPure": false,
															"lValueRequested": false,
															"nodeType": "IndexAccess",
															"src": "4720:18:13",
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_NFT_$2827_storage",
																"typeString": "struct SmashNFT_Marketplace.NFT storage ref"
															}
														},
														"id": 3261,
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"memberLocation": "4739:5:13",
														"memberName": "owner",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 2822,
														"src": "4720:24:13",
														"typeDescriptions": {
															"typeIdentifier": "t_address_payable",
															"typeString": "address payable"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"arguments": [
															{
																"expression": {
																	"id": 3264,
																	"name": "msg",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 4294967281,
																	"src": "4755:3:13",
																	"typeDescriptions": {
																		"typeIdentifier": "t_magic_message",
																		"typeString": "msg"
																	}
																},
																"id": 3265,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"memberLocation": "4759:6:13",
																"memberName": "sender",
																"nodeType": "MemberAccess",
																"src": "4755:10:13",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															],
															"id": 3263,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"lValueRequested": false,
															"nodeType": "ElementaryTypeNameExpression",
															"src": "4747:8:13",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_address_payable_$",
																"typeString": "type(address payable)"
															},
															"typeName": {
																"id": 3262,
																"name": "address",
																"nodeType": "ElementaryTypeName",
																"src": "4747:8:13",
																"stateMutability": "payable",
																"typeDescriptions": {}
															}
														},
														"id": 3266,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "typeConversion",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "4747:19:13",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_address_payable",
															"typeString": "address payable"
														}
													},
													"src": "4720:46:13",
													"typeDescriptions": {
														"typeIdentifier": "t_address_payable",
														"typeString": "address payable"
													}
												},
												"id": 3268,
												"nodeType": "ExpressionStatement",
												"src": "4720:46:13"
											},
											{
												"expression": {
													"arguments": [],
													"expression": {
														"argumentTypes": [],
														"expression": {
															"id": 3269,
															"name": "_nftsSold",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2792,
															"src": "4776:9:13",
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_Counter_$1630_storage",
																"typeString": "struct Counters.Counter storage ref"
															}
														},
														"id": 3271,
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "4786:9:13",
														"memberName": "increment",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 1656,
														"src": "4776:19:13",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_struct$_Counter_$1630_storage_ptr_$returns$__$attached_to$_t_struct$_Counter_$1630_storage_ptr_$",
															"typeString": "function (struct Counters.Counter storage pointer)"
														}
													},
													"id": 3272,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "4776:21:13",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 3273,
												"nodeType": "ExpressionStatement",
												"src": "4776:21:13"
											}
										]
									},
									"functionSelector": "4e455dbe",
									"id": 3275,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "CancelOffer",
									"nameLocation": "4449:11:13",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 3219,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 3218,
												"mutability": "mutable",
												"name": "_tokenId",
												"nameLocation": "4469:8:13",
												"nodeType": "VariableDeclaration",
												"scope": 3275,
												"src": "4461:16:13",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 3217,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "4461:7:13",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4460:18:13"
									},
									"returnParameters": {
										"id": 3220,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "4485:0:13"
									},
									"scope": 3611,
									"src": "4440:364:13",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "public"
								},
								{
									"body": {
										"id": 3300,
										"nodeType": "Block",
										"src": "5070:110:13",
										"statements": [
											{
												"assignments": [
													3283
												],
												"declarations": [
													{
														"constant": false,
														"id": 3283,
														"mutability": "mutable",
														"name": "a",
														"nameLocation": "5085:1:13",
														"nodeType": "VariableDeclaration",
														"scope": 3300,
														"src": "5080:6:13",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 3282,
															"name": "uint",
															"nodeType": "ElementaryTypeName",
															"src": "5080:4:13",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 3285,
												"initialValue": {
													"hexValue": "35",
													"id": 3284,
													"isConstant": false,
													"isLValue": false,
													"isPure": true,
													"kind": "number",
													"lValueRequested": false,
													"nodeType": "Literal",
													"src": "5089:1:13",
													"typeDescriptions": {
														"typeIdentifier": "t_rational_5_by_1",
														"typeString": "int_const 5"
													},
													"value": "5"
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "5080:10:13"
											},
											{
												"assignments": [
													3287
												],
												"declarations": [
													{
														"constant": false,
														"id": 3287,
														"mutability": "mutable",
														"name": "result",
														"nameLocation": "5105:6:13",
														"nodeType": "VariableDeclaration",
														"scope": 3300,
														"src": "5100:11:13",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 3286,
															"name": "uint",
															"nodeType": "ElementaryTypeName",
															"src": "5100:4:13",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 3288,
												"nodeType": "VariableDeclarationStatement",
												"src": "5100:11:13"
											},
											{
												"expression": {
													"id": 3296,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 3289,
														"name": "result",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 3287,
														"src": "5122:6:13",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"commonType": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"id": 3295,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftExpression": {
															"id": 3290,
															"name": "_price",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 3277,
															"src": "5131:6:13",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"nodeType": "BinaryOperation",
														"operator": "+",
														"rightExpression": {
															"components": [
																{
																	"commonType": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	"id": 3293,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"leftExpression": {
																		"id": 3291,
																		"name": "_price",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 3277,
																		"src": "5141:6:13",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"nodeType": "BinaryOperation",
																	"operator": "/",
																	"rightExpression": {
																		"id": 3292,
																		"name": "a",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 3283,
																		"src": "5148:1:13",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"src": "5141:8:13",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																}
															],
															"id": 3294,
															"isConstant": false,
															"isInlineArray": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"nodeType": "TupleExpression",
															"src": "5140:10:13",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"src": "5131:19:13",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "5122:28:13",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 3297,
												"nodeType": "ExpressionStatement",
												"src": "5122:28:13"
											},
											{
												"expression": {
													"id": 3298,
													"name": "result",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 3287,
													"src": "5167:6:13",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 3281,
												"id": 3299,
												"nodeType": "Return",
												"src": "5160:13:13"
											}
										]
									},
									"functionSelector": "a33f6c68",
									"id": 3301,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "ClaculatePrice",
									"nameLocation": "5017:14:13",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 3278,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 3277,
												"mutability": "mutable",
												"name": "_price",
												"nameLocation": "5037:6:13",
												"nodeType": "VariableDeclaration",
												"scope": 3301,
												"src": "5032:11:13",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 3276,
													"name": "uint",
													"nodeType": "ElementaryTypeName",
													"src": "5032:4:13",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "5031:13:13"
									},
									"returnParameters": {
										"id": 3281,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 3280,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 3301,
												"src": "5065:4:13",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 3279,
													"name": "uint",
													"nodeType": "ElementaryTypeName",
													"src": "5065:4:13",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "5064:6:13"
									},
									"scope": 3611,
									"src": "5008:172:13",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "public"
								},
								{
									"body": {
										"id": 3308,
										"nodeType": "Block",
										"src": "5380:35:13",
										"statements": [
											{
												"expression": {
													"id": 3306,
													"name": "LISTING_FEE",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 2798,
													"src": "5397:11:13",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 3305,
												"id": 3307,
												"nodeType": "Return",
												"src": "5390:18:13"
											}
										]
									},
									"functionSelector": "73a0c166",
									"id": 3309,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "GetListingFee",
									"nameLocation": "5334:13:13",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 3302,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "5347:2:13"
									},
									"returnParameters": {
										"id": 3305,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 3304,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 3309,
												"src": "5371:7:13",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 3303,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "5371:7:13",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "5370:9:13"
									},
									"scope": 3611,
									"src": "5325:90:13",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "public"
								},
								{
									"body": {
										"id": 3320,
										"nodeType": "Block",
										"src": "5664:42:13",
										"statements": [
											{
												"expression": {
													"id": 3318,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 3316,
														"name": "LISTING_FEE",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 2798,
														"src": "5674:11:13",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"id": 3317,
														"name": "_ListingFee",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 3311,
														"src": "5688:11:13",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "5674:25:13",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 3319,
												"nodeType": "ExpressionStatement",
												"src": "5674:25:13"
											}
										]
									},
									"functionSelector": "36958adb",
									"id": 3321,
									"implemented": true,
									"kind": "function",
									"modifiers": [
										{
											"id": 3314,
											"kind": "modifierInvocation",
											"modifierName": {
												"id": 3313,
												"name": "onlyOwner",
												"nameLocations": [
													"5655:9:13"
												],
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 31,
												"src": "5655:9:13"
											},
											"nodeType": "ModifierInvocation",
											"src": "5655:9:13"
										}
									],
									"name": "SetListingFee",
									"nameLocation": "5613:13:13",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 3312,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 3311,
												"mutability": "mutable",
												"name": "_ListingFee",
												"nameLocation": "5635:11:13",
												"nodeType": "VariableDeclaration",
												"scope": 3321,
												"src": "5627:19:13",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 3310,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "5627:7:13",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "5626:21:13"
									},
									"returnParameters": {
										"id": 3315,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "5664:0:13"
									},
									"scope": 3611,
									"src": "5604:102:13",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "public"
								},
								{
									"body": {
										"id": 3394,
										"nodeType": "Block",
										"src": "5952:419:13",
										"statements": [
											{
												"assignments": [
													3329
												],
												"declarations": [
													{
														"constant": false,
														"id": 3329,
														"mutability": "mutable",
														"name": "nftCount",
														"nameLocation": "5970:8:13",
														"nodeType": "VariableDeclaration",
														"scope": 3394,
														"src": "5962:16:13",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 3328,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "5962:7:13",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 3333,
												"initialValue": {
													"arguments": [],
													"expression": {
														"argumentTypes": [],
														"expression": {
															"id": 3330,
															"name": "_nftCount",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2795,
															"src": "5981:9:13",
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_Counter_$1630_storage",
																"typeString": "struct Counters.Counter storage ref"
															}
														},
														"id": 3331,
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "5991:7:13",
														"memberName": "current",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 1642,
														"src": "5981:17:13",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_view$_t_struct$_Counter_$1630_storage_ptr_$returns$_t_uint256_$attached_to$_t_struct$_Counter_$1630_storage_ptr_$",
															"typeString": "function (struct Counters.Counter storage pointer) view returns (uint256)"
														}
													},
													"id": 3332,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "5981:19:13",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "5962:38:13"
											},
											{
												"assignments": [
													3335
												],
												"declarations": [
													{
														"constant": false,
														"id": 3335,
														"mutability": "mutable",
														"name": "unsoldNftsCount",
														"nameLocation": "6018:15:13",
														"nodeType": "VariableDeclaration",
														"scope": 3394,
														"src": "6010:23:13",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 3334,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "6010:7:13",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 3341,
												"initialValue": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 3340,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 3336,
														"name": "nftCount",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 3329,
														"src": "6036:8:13",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "-",
													"rightExpression": {
														"arguments": [],
														"expression": {
															"argumentTypes": [],
															"expression": {
																"id": 3337,
																"name": "_nftsSold",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 2792,
																"src": "6047:9:13",
																"typeDescriptions": {
																	"typeIdentifier": "t_struct$_Counter_$1630_storage",
																	"typeString": "struct Counters.Counter storage ref"
																}
															},
															"id": 3338,
															"isConstant": false,
															"isLValue": true,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "6057:7:13",
															"memberName": "current",
															"nodeType": "MemberAccess",
															"referencedDeclaration": 1642,
															"src": "6047:17:13",
															"typeDescriptions": {
																"typeIdentifier": "t_function_internal_view$_t_struct$_Counter_$1630_storage_ptr_$returns$_t_uint256_$attached_to$_t_struct$_Counter_$1630_storage_ptr_$",
																"typeString": "function (struct Counters.Counter storage pointer) view returns (uint256)"
															}
														},
														"id": 3339,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "functionCall",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "6047:19:13",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "6036:30:13",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "6010:56:13"
											},
											{
												"assignments": [
													3346
												],
												"declarations": [
													{
														"constant": false,
														"id": 3346,
														"mutability": "mutable",
														"name": "nfts",
														"nameLocation": "6089:4:13",
														"nodeType": "VariableDeclaration",
														"scope": 3394,
														"src": "6076:17:13",
														"stateVariable": false,
														"storageLocation": "memory",
														"typeDescriptions": {
															"typeIdentifier": "t_array$_t_struct$_NFT_$2827_memory_ptr_$dyn_memory_ptr",
															"typeString": "struct SmashNFT_Marketplace.NFT[]"
														},
														"typeName": {
															"baseType": {
																"id": 3344,
																"nodeType": "UserDefinedTypeName",
																"pathNode": {
																	"id": 3343,
																	"name": "NFT",
																	"nameLocations": [
																		"6076:3:13"
																	],
																	"nodeType": "IdentifierPath",
																	"referencedDeclaration": 2827,
																	"src": "6076:3:13"
																},
																"referencedDeclaration": 2827,
																"src": "6076:3:13",
																"typeDescriptions": {
																	"typeIdentifier": "t_struct$_NFT_$2827_storage_ptr",
																	"typeString": "struct SmashNFT_Marketplace.NFT"
																}
															},
															"id": 3345,
															"nodeType": "ArrayTypeName",
															"src": "6076:5:13",
															"typeDescriptions": {
																"typeIdentifier": "t_array$_t_struct$_NFT_$2827_storage_$dyn_storage_ptr",
																"typeString": "struct SmashNFT_Marketplace.NFT[]"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 3353,
												"initialValue": {
													"arguments": [
														{
															"id": 3351,
															"name": "unsoldNftsCount",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 3335,
															"src": "6106:15:13",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 3350,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"lValueRequested": false,
														"nodeType": "NewExpression",
														"src": "6096:9:13",
														"typeDescriptions": {
															"typeIdentifier": "t_function_objectcreation_pure$_t_uint256_$returns$_t_array$_t_struct$_NFT_$2827_memory_ptr_$dyn_memory_ptr_$",
															"typeString": "function (uint256) pure returns (struct SmashNFT_Marketplace.NFT memory[] memory)"
														},
														"typeName": {
															"baseType": {
																"id": 3348,
																"nodeType": "UserDefinedTypeName",
																"pathNode": {
																	"id": 3347,
																	"name": "NFT",
																	"nameLocations": [
																		"6100:3:13"
																	],
																	"nodeType": "IdentifierPath",
																	"referencedDeclaration": 2827,
																	"src": "6100:3:13"
																},
																"referencedDeclaration": 2827,
																"src": "6100:3:13",
																"typeDescriptions": {
																	"typeIdentifier": "t_struct$_NFT_$2827_storage_ptr",
																	"typeString": "struct SmashNFT_Marketplace.NFT"
																}
															},
															"id": 3349,
															"nodeType": "ArrayTypeName",
															"src": "6100:5:13",
															"typeDescriptions": {
																"typeIdentifier": "t_array$_t_struct$_NFT_$2827_storage_$dyn_storage_ptr",
																"typeString": "struct SmashNFT_Marketplace.NFT[]"
															}
														}
													},
													"id": 3352,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "6096:26:13",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_array$_t_struct$_NFT_$2827_memory_ptr_$dyn_memory_ptr",
														"typeString": "struct SmashNFT_Marketplace.NFT memory[] memory"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "6076:46:13"
											},
											{
												"assignments": [
													3355
												],
												"declarations": [
													{
														"constant": false,
														"id": 3355,
														"mutability": "mutable",
														"name": "nftsIndex",
														"nameLocation": "6137:9:13",
														"nodeType": "VariableDeclaration",
														"scope": 3394,
														"src": "6132:14:13",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 3354,
															"name": "uint",
															"nodeType": "ElementaryTypeName",
															"src": "6132:4:13",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 3357,
												"initialValue": {
													"hexValue": "30",
													"id": 3356,
													"isConstant": false,
													"isLValue": false,
													"isPure": true,
													"kind": "number",
													"lValueRequested": false,
													"nodeType": "Literal",
													"src": "6149:1:13",
													"typeDescriptions": {
														"typeIdentifier": "t_rational_0_by_1",
														"typeString": "int_const 0"
													},
													"value": "0"
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "6132:18:13"
											},
											{
												"body": {
													"id": 3390,
													"nodeType": "Block",
													"src": "6196:148:13",
													"statements": [
														{
															"condition": {
																"id": 3374,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"nodeType": "UnaryOperation",
																"operator": "!",
																"prefix": true,
																"src": "6214:23:13",
																"subExpression": {
																	"expression": {
																		"baseExpression": {
																			"id": 3368,
																			"name": "_idToNFT",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 2814,
																			"src": "6215:8:13",
																			"typeDescriptions": {
																				"typeIdentifier": "t_mapping$_t_uint256_$_t_struct$_NFT_$2827_storage_$",
																				"typeString": "mapping(uint256 => struct SmashNFT_Marketplace.NFT storage ref)"
																			}
																		},
																		"id": 3372,
																		"indexExpression": {
																			"commonType": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			},
																			"id": 3371,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"leftExpression": {
																				"id": 3369,
																				"name": "i",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 3359,
																				"src": "6224:1:13",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"nodeType": "BinaryOperation",
																			"operator": "+",
																			"rightExpression": {
																				"hexValue": "31",
																				"id": 3370,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"kind": "number",
																				"lValueRequested": false,
																				"nodeType": "Literal",
																				"src": "6228:1:13",
																				"typeDescriptions": {
																					"typeIdentifier": "t_rational_1_by_1",
																					"typeString": "int_const 1"
																				},
																				"value": "1"
																			},
																			"src": "6224:5:13",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"isConstant": false,
																		"isLValue": true,
																		"isPure": false,
																		"lValueRequested": false,
																		"nodeType": "IndexAccess",
																		"src": "6215:15:13",
																		"typeDescriptions": {
																			"typeIdentifier": "t_struct$_NFT_$2827_storage",
																			"typeString": "struct SmashNFT_Marketplace.NFT storage ref"
																		}
																	},
																	"id": 3373,
																	"isConstant": false,
																	"isLValue": true,
																	"isPure": false,
																	"lValueRequested": false,
																	"memberLocation": "6231:6:13",
																	"memberName": "listed",
																	"nodeType": "MemberAccess",
																	"referencedDeclaration": 2826,
																	"src": "6215:22:13",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bool",
																		"typeString": "bool"
																	}
																},
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																}
															},
															"id": 3389,
															"nodeType": "IfStatement",
															"src": "6210:124:13",
															"trueBody": {
																"id": 3388,
																"nodeType": "Block",
																"src": "6239:95:13",
																"statements": [
																	{
																		"expression": {
																			"id": 3383,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"leftHandSide": {
																				"baseExpression": {
																					"id": 3375,
																					"name": "nfts",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 3346,
																					"src": "6257:4:13",
																					"typeDescriptions": {
																						"typeIdentifier": "t_array$_t_struct$_NFT_$2827_memory_ptr_$dyn_memory_ptr",
																						"typeString": "struct SmashNFT_Marketplace.NFT memory[] memory"
																					}
																				},
																				"id": 3377,
																				"indexExpression": {
																					"id": 3376,
																					"name": "nftsIndex",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 3355,
																					"src": "6262:9:13",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				"isConstant": false,
																				"isLValue": true,
																				"isPure": false,
																				"lValueRequested": true,
																				"nodeType": "IndexAccess",
																				"src": "6257:15:13",
																				"typeDescriptions": {
																					"typeIdentifier": "t_struct$_NFT_$2827_memory_ptr",
																					"typeString": "struct SmashNFT_Marketplace.NFT memory"
																				}
																			},
																			"nodeType": "Assignment",
																			"operator": "=",
																			"rightHandSide": {
																				"baseExpression": {
																					"id": 3378,
																					"name": "_idToNFT",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 2814,
																					"src": "6275:8:13",
																					"typeDescriptions": {
																						"typeIdentifier": "t_mapping$_t_uint256_$_t_struct$_NFT_$2827_storage_$",
																						"typeString": "mapping(uint256 => struct SmashNFT_Marketplace.NFT storage ref)"
																					}
																				},
																				"id": 3382,
																				"indexExpression": {
																					"commonType": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					},
																					"id": 3381,
																					"isConstant": false,
																					"isLValue": false,
																					"isPure": false,
																					"lValueRequested": false,
																					"leftExpression": {
																						"id": 3379,
																						"name": "i",
																						"nodeType": "Identifier",
																						"overloadedDeclarations": [],
																						"referencedDeclaration": 3359,
																						"src": "6284:1:13",
																						"typeDescriptions": {
																							"typeIdentifier": "t_uint256",
																							"typeString": "uint256"
																						}
																					},
																					"nodeType": "BinaryOperation",
																					"operator": "+",
																					"rightExpression": {
																						"hexValue": "31",
																						"id": 3380,
																						"isConstant": false,
																						"isLValue": false,
																						"isPure": true,
																						"kind": "number",
																						"lValueRequested": false,
																						"nodeType": "Literal",
																						"src": "6288:1:13",
																						"typeDescriptions": {
																							"typeIdentifier": "t_rational_1_by_1",
																							"typeString": "int_const 1"
																						},
																						"value": "1"
																					},
																					"src": "6284:5:13",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				"isConstant": false,
																				"isLValue": true,
																				"isPure": false,
																				"lValueRequested": false,
																				"nodeType": "IndexAccess",
																				"src": "6275:15:13",
																				"typeDescriptions": {
																					"typeIdentifier": "t_struct$_NFT_$2827_storage",
																					"typeString": "struct SmashNFT_Marketplace.NFT storage ref"
																				}
																			},
																			"src": "6257:33:13",
																			"typeDescriptions": {
																				"typeIdentifier": "t_struct$_NFT_$2827_memory_ptr",
																				"typeString": "struct SmashNFT_Marketplace.NFT memory"
																			}
																		},
																		"id": 3384,
																		"nodeType": "ExpressionStatement",
																		"src": "6257:33:13"
																	},
																	{
																		"expression": {
																			"id": 3386,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"nodeType": "UnaryOperation",
																			"operator": "++",
																			"prefix": false,
																			"src": "6308:11:13",
																			"subExpression": {
																				"id": 3385,
																				"name": "nftsIndex",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 3355,
																				"src": "6308:9:13",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"id": 3387,
																		"nodeType": "ExpressionStatement",
																		"src": "6308:11:13"
																	}
																]
															}
														}
													]
												},
												"condition": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 3364,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 3362,
														"name": "i",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 3359,
														"src": "6177:1:13",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "<",
													"rightExpression": {
														"id": 3363,
														"name": "nftCount",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 3329,
														"src": "6181:8:13",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "6177:12:13",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 3391,
												"initializationExpression": {
													"assignments": [
														3359
													],
													"declarations": [
														{
															"constant": false,
															"id": 3359,
															"mutability": "mutable",
															"name": "i",
															"nameLocation": "6170:1:13",
															"nodeType": "VariableDeclaration",
															"scope": 3391,
															"src": "6165:6:13",
															"stateVariable": false,
															"storageLocation": "default",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"typeName": {
																"id": 3358,
																"name": "uint",
																"nodeType": "ElementaryTypeName",
																"src": "6165:4:13",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"visibility": "internal"
														}
													],
													"id": 3361,
													"initialValue": {
														"hexValue": "30",
														"id": 3360,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "6174:1:13",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_0_by_1",
															"typeString": "int_const 0"
														},
														"value": "0"
													},
													"nodeType": "VariableDeclarationStatement",
													"src": "6165:10:13"
												},
												"loopExpression": {
													"expression": {
														"id": 3366,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"nodeType": "UnaryOperation",
														"operator": "++",
														"prefix": false,
														"src": "6191:3:13",
														"subExpression": {
															"id": 3365,
															"name": "i",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 3359,
															"src": "6191:1:13",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"id": 3367,
													"nodeType": "ExpressionStatement",
													"src": "6191:3:13"
												},
												"nodeType": "ForStatement",
												"src": "6160:184:13"
											},
											{
												"expression": {
													"id": 3392,
													"name": "nfts",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 3346,
													"src": "6360:4:13",
													"typeDescriptions": {
														"typeIdentifier": "t_array$_t_struct$_NFT_$2827_memory_ptr_$dyn_memory_ptr",
														"typeString": "struct SmashNFT_Marketplace.NFT memory[] memory"
													}
												},
												"functionReturnParameters": 3327,
												"id": 3393,
												"nodeType": "Return",
												"src": "6353:11:13"
											}
										]
									},
									"functionSelector": "8d6cb3fb",
									"id": 3395,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "getListedNfts",
									"nameLocation": "5901:13:13",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 3322,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "5914:2:13"
									},
									"returnParameters": {
										"id": 3327,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 3326,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 3395,
												"src": "5938:12:13",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_array$_t_struct$_NFT_$2827_memory_ptr_$dyn_memory_ptr",
													"typeString": "struct SmashNFT_Marketplace.NFT[]"
												},
												"typeName": {
													"baseType": {
														"id": 3324,
														"nodeType": "UserDefinedTypeName",
														"pathNode": {
															"id": 3323,
															"name": "NFT",
															"nameLocations": [
																"5938:3:13"
															],
															"nodeType": "IdentifierPath",
															"referencedDeclaration": 2827,
															"src": "5938:3:13"
														},
														"referencedDeclaration": 2827,
														"src": "5938:3:13",
														"typeDescriptions": {
															"typeIdentifier": "t_struct$_NFT_$2827_storage_ptr",
															"typeString": "struct SmashNFT_Marketplace.NFT"
														}
													},
													"id": 3325,
													"nodeType": "ArrayTypeName",
													"src": "5938:5:13",
													"typeDescriptions": {
														"typeIdentifier": "t_array$_t_struct$_NFT_$2827_storage_$dyn_storage_ptr",
														"typeString": "struct SmashNFT_Marketplace.NFT[]"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "5937:14:13"
									},
									"scope": 3611,
									"src": "5892:479:13",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "public"
								},
								{
									"body": {
										"id": 3492,
										"nodeType": "Block",
										"src": "6623:553:13",
										"statements": [
											{
												"assignments": [
													3403
												],
												"declarations": [
													{
														"constant": false,
														"id": 3403,
														"mutability": "mutable",
														"name": "nftCount",
														"nameLocation": "6638:8:13",
														"nodeType": "VariableDeclaration",
														"scope": 3492,
														"src": "6633:13:13",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 3402,
															"name": "uint",
															"nodeType": "ElementaryTypeName",
															"src": "6633:4:13",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 3407,
												"initialValue": {
													"arguments": [],
													"expression": {
														"argumentTypes": [],
														"expression": {
															"id": 3404,
															"name": "_nftCount",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2795,
															"src": "6649:9:13",
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_Counter_$1630_storage",
																"typeString": "struct Counters.Counter storage ref"
															}
														},
														"id": 3405,
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "6659:7:13",
														"memberName": "current",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 1642,
														"src": "6649:17:13",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_view$_t_struct$_Counter_$1630_storage_ptr_$returns$_t_uint256_$attached_to$_t_struct$_Counter_$1630_storage_ptr_$",
															"typeString": "function (struct Counters.Counter storage pointer) view returns (uint256)"
														}
													},
													"id": 3406,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "6649:19:13",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "6633:35:13"
											},
											{
												"assignments": [
													3409
												],
												"declarations": [
													{
														"constant": false,
														"id": 3409,
														"mutability": "mutable",
														"name": "myNftCount",
														"nameLocation": "6683:10:13",
														"nodeType": "VariableDeclaration",
														"scope": 3492,
														"src": "6678:15:13",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 3408,
															"name": "uint",
															"nodeType": "ElementaryTypeName",
															"src": "6678:4:13",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 3411,
												"initialValue": {
													"hexValue": "30",
													"id": 3410,
													"isConstant": false,
													"isLValue": false,
													"isPure": true,
													"kind": "number",
													"lValueRequested": false,
													"nodeType": "Literal",
													"src": "6696:1:13",
													"typeDescriptions": {
														"typeIdentifier": "t_rational_0_by_1",
														"typeString": "int_const 0"
													},
													"value": "0"
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "6678:19:13"
											},
											{
												"body": {
													"id": 3436,
													"nodeType": "Block",
													"src": "6743:110:13",
													"statements": [
														{
															"condition": {
																"commonType": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																},
																"id": 3430,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"expression": {
																		"baseExpression": {
																			"id": 3422,
																			"name": "_idToNFT",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 2814,
																			"src": "6761:8:13",
																			"typeDescriptions": {
																				"typeIdentifier": "t_mapping$_t_uint256_$_t_struct$_NFT_$2827_storage_$",
																				"typeString": "mapping(uint256 => struct SmashNFT_Marketplace.NFT storage ref)"
																			}
																		},
																		"id": 3426,
																		"indexExpression": {
																			"commonType": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			},
																			"id": 3425,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"leftExpression": {
																				"id": 3423,
																				"name": "i",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 3413,
																				"src": "6770:1:13",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"nodeType": "BinaryOperation",
																			"operator": "+",
																			"rightExpression": {
																				"hexValue": "31",
																				"id": 3424,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"kind": "number",
																				"lValueRequested": false,
																				"nodeType": "Literal",
																				"src": "6774:1:13",
																				"typeDescriptions": {
																					"typeIdentifier": "t_rational_1_by_1",
																					"typeString": "int_const 1"
																				},
																				"value": "1"
																			},
																			"src": "6770:5:13",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"isConstant": false,
																		"isLValue": true,
																		"isPure": false,
																		"lValueRequested": false,
																		"nodeType": "IndexAccess",
																		"src": "6761:15:13",
																		"typeDescriptions": {
																			"typeIdentifier": "t_struct$_NFT_$2827_storage",
																			"typeString": "struct SmashNFT_Marketplace.NFT storage ref"
																		}
																	},
																	"id": 3427,
																	"isConstant": false,
																	"isLValue": true,
																	"isPure": false,
																	"lValueRequested": false,
																	"memberLocation": "6777:5:13",
																	"memberName": "owner",
																	"nodeType": "MemberAccess",
																	"referencedDeclaration": 2822,
																	"src": "6761:21:13",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address_payable",
																		"typeString": "address payable"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": "==",
																"rightExpression": {
																	"expression": {
																		"id": 3428,
																		"name": "msg",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 4294967281,
																		"src": "6786:3:13",
																		"typeDescriptions": {
																			"typeIdentifier": "t_magic_message",
																			"typeString": "msg"
																		}
																	},
																	"id": 3429,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"memberLocation": "6790:6:13",
																	"memberName": "sender",
																	"nodeType": "MemberAccess",
																	"src": "6786:10:13",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																"src": "6761:35:13",
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																}
															},
															"id": 3435,
															"nodeType": "IfStatement",
															"src": "6757:86:13",
															"trueBody": {
																"id": 3434,
																"nodeType": "Block",
																"src": "6798:45:13",
																"statements": [
																	{
																		"expression": {
																			"id": 3432,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"nodeType": "UnaryOperation",
																			"operator": "++",
																			"prefix": false,
																			"src": "6816:12:13",
																			"subExpression": {
																				"id": 3431,
																				"name": "myNftCount",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 3409,
																				"src": "6816:10:13",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"id": 3433,
																		"nodeType": "ExpressionStatement",
																		"src": "6816:12:13"
																	}
																]
															}
														}
													]
												},
												"condition": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 3418,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 3416,
														"name": "i",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 3413,
														"src": "6724:1:13",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "<",
													"rightExpression": {
														"id": 3417,
														"name": "nftCount",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 3403,
														"src": "6728:8:13",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "6724:12:13",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 3437,
												"initializationExpression": {
													"assignments": [
														3413
													],
													"declarations": [
														{
															"constant": false,
															"id": 3413,
															"mutability": "mutable",
															"name": "i",
															"nameLocation": "6717:1:13",
															"nodeType": "VariableDeclaration",
															"scope": 3437,
															"src": "6712:6:13",
															"stateVariable": false,
															"storageLocation": "default",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"typeName": {
																"id": 3412,
																"name": "uint",
																"nodeType": "ElementaryTypeName",
																"src": "6712:4:13",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"visibility": "internal"
														}
													],
													"id": 3415,
													"initialValue": {
														"hexValue": "30",
														"id": 3414,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "6721:1:13",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_0_by_1",
															"typeString": "int_const 0"
														},
														"value": "0"
													},
													"nodeType": "VariableDeclarationStatement",
													"src": "6712:10:13"
												},
												"loopExpression": {
													"expression": {
														"id": 3420,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"nodeType": "UnaryOperation",
														"operator": "++",
														"prefix": false,
														"src": "6738:3:13",
														"subExpression": {
															"id": 3419,
															"name": "i",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 3413,
															"src": "6738:1:13",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"id": 3421,
													"nodeType": "ExpressionStatement",
													"src": "6738:3:13"
												},
												"nodeType": "ForStatement",
												"src": "6707:146:13"
											},
											{
												"assignments": [
													3442
												],
												"declarations": [
													{
														"constant": false,
														"id": 3442,
														"mutability": "mutable",
														"name": "nfts",
														"nameLocation": "6875:4:13",
														"nodeType": "VariableDeclaration",
														"scope": 3492,
														"src": "6862:17:13",
														"stateVariable": false,
														"storageLocation": "memory",
														"typeDescriptions": {
															"typeIdentifier": "t_array$_t_struct$_NFT_$2827_memory_ptr_$dyn_memory_ptr",
															"typeString": "struct SmashNFT_Marketplace.NFT[]"
														},
														"typeName": {
															"baseType": {
																"id": 3440,
																"nodeType": "UserDefinedTypeName",
																"pathNode": {
																	"id": 3439,
																	"name": "NFT",
																	"nameLocations": [
																		"6862:3:13"
																	],
																	"nodeType": "IdentifierPath",
																	"referencedDeclaration": 2827,
																	"src": "6862:3:13"
																},
																"referencedDeclaration": 2827,
																"src": "6862:3:13",
																"typeDescriptions": {
																	"typeIdentifier": "t_struct$_NFT_$2827_storage_ptr",
																	"typeString": "struct SmashNFT_Marketplace.NFT"
																}
															},
															"id": 3441,
															"nodeType": "ArrayTypeName",
															"src": "6862:5:13",
															"typeDescriptions": {
																"typeIdentifier": "t_array$_t_struct$_NFT_$2827_storage_$dyn_storage_ptr",
																"typeString": "struct SmashNFT_Marketplace.NFT[]"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 3449,
												"initialValue": {
													"arguments": [
														{
															"id": 3447,
															"name": "myNftCount",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 3409,
															"src": "6892:10:13",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 3446,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"lValueRequested": false,
														"nodeType": "NewExpression",
														"src": "6882:9:13",
														"typeDescriptions": {
															"typeIdentifier": "t_function_objectcreation_pure$_t_uint256_$returns$_t_array$_t_struct$_NFT_$2827_memory_ptr_$dyn_memory_ptr_$",
															"typeString": "function (uint256) pure returns (struct SmashNFT_Marketplace.NFT memory[] memory)"
														},
														"typeName": {
															"baseType": {
																"id": 3444,
																"nodeType": "UserDefinedTypeName",
																"pathNode": {
																	"id": 3443,
																	"name": "NFT",
																	"nameLocations": [
																		"6886:3:13"
																	],
																	"nodeType": "IdentifierPath",
																	"referencedDeclaration": 2827,
																	"src": "6886:3:13"
																},
																"referencedDeclaration": 2827,
																"src": "6886:3:13",
																"typeDescriptions": {
																	"typeIdentifier": "t_struct$_NFT_$2827_storage_ptr",
																	"typeString": "struct SmashNFT_Marketplace.NFT"
																}
															},
															"id": 3445,
															"nodeType": "ArrayTypeName",
															"src": "6886:5:13",
															"typeDescriptions": {
																"typeIdentifier": "t_array$_t_struct$_NFT_$2827_storage_$dyn_storage_ptr",
																"typeString": "struct SmashNFT_Marketplace.NFT[]"
															}
														}
													},
													"id": 3448,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "6882:21:13",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_array$_t_struct$_NFT_$2827_memory_ptr_$dyn_memory_ptr",
														"typeString": "struct SmashNFT_Marketplace.NFT memory[] memory"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "6862:41:13"
											},
											{
												"assignments": [
													3451
												],
												"declarations": [
													{
														"constant": false,
														"id": 3451,
														"mutability": "mutable",
														"name": "nftsIndex",
														"nameLocation": "6922:9:13",
														"nodeType": "VariableDeclaration",
														"scope": 3492,
														"src": "6917:14:13",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 3450,
															"name": "uint",
															"nodeType": "ElementaryTypeName",
															"src": "6917:4:13",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 3453,
												"initialValue": {
													"hexValue": "30",
													"id": 3452,
													"isConstant": false,
													"isLValue": false,
													"isPure": true,
													"kind": "number",
													"lValueRequested": false,
													"nodeType": "Literal",
													"src": "6934:1:13",
													"typeDescriptions": {
														"typeIdentifier": "t_rational_0_by_1",
														"typeString": "int_const 0"
													},
													"value": "0"
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "6917:18:13"
											},
											{
												"body": {
													"id": 3488,
													"nodeType": "Block",
													"src": "6985:164:13",
													"statements": [
														{
															"condition": {
																"commonType": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																},
																"id": 3472,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"expression": {
																		"baseExpression": {
																			"id": 3464,
																			"name": "_idToNFT",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 2814,
																			"src": "7007:8:13",
																			"typeDescriptions": {
																				"typeIdentifier": "t_mapping$_t_uint256_$_t_struct$_NFT_$2827_storage_$",
																				"typeString": "mapping(uint256 => struct SmashNFT_Marketplace.NFT storage ref)"
																			}
																		},
																		"id": 3468,
																		"indexExpression": {
																			"commonType": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			},
																			"id": 3467,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"leftExpression": {
																				"id": 3465,
																				"name": "i",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 3455,
																				"src": "7016:1:13",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"nodeType": "BinaryOperation",
																			"operator": "+",
																			"rightExpression": {
																				"hexValue": "31",
																				"id": 3466,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"kind": "number",
																				"lValueRequested": false,
																				"nodeType": "Literal",
																				"src": "7020:1:13",
																				"typeDescriptions": {
																					"typeIdentifier": "t_rational_1_by_1",
																					"typeString": "int_const 1"
																				},
																				"value": "1"
																			},
																			"src": "7016:5:13",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"isConstant": false,
																		"isLValue": true,
																		"isPure": false,
																		"lValueRequested": false,
																		"nodeType": "IndexAccess",
																		"src": "7007:15:13",
																		"typeDescriptions": {
																			"typeIdentifier": "t_struct$_NFT_$2827_storage",
																			"typeString": "struct SmashNFT_Marketplace.NFT storage ref"
																		}
																	},
																	"id": 3469,
																	"isConstant": false,
																	"isLValue": true,
																	"isPure": false,
																	"lValueRequested": false,
																	"memberLocation": "7023:5:13",
																	"memberName": "owner",
																	"nodeType": "MemberAccess",
																	"referencedDeclaration": 2822,
																	"src": "7007:21:13",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address_payable",
																		"typeString": "address payable"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": "==",
																"rightExpression": {
																	"expression": {
																		"id": 3470,
																		"name": "msg",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 4294967281,
																		"src": "7032:3:13",
																		"typeDescriptions": {
																			"typeIdentifier": "t_magic_message",
																			"typeString": "msg"
																		}
																	},
																	"id": 3471,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"memberLocation": "7036:6:13",
																	"memberName": "sender",
																	"nodeType": "MemberAccess",
																	"src": "7032:10:13",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																"src": "7007:35:13",
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																}
															},
															"id": 3487,
															"nodeType": "IfStatement",
															"src": "7003:136:13",
															"trueBody": {
																"id": 3486,
																"nodeType": "Block",
																"src": "7044:95:13",
																"statements": [
																	{
																		"expression": {
																			"id": 3481,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"leftHandSide": {
																				"baseExpression": {
																					"id": 3473,
																					"name": "nfts",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 3442,
																					"src": "7062:4:13",
																					"typeDescriptions": {
																						"typeIdentifier": "t_array$_t_struct$_NFT_$2827_memory_ptr_$dyn_memory_ptr",
																						"typeString": "struct SmashNFT_Marketplace.NFT memory[] memory"
																					}
																				},
																				"id": 3475,
																				"indexExpression": {
																					"id": 3474,
																					"name": "nftsIndex",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 3451,
																					"src": "7067:9:13",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				"isConstant": false,
																				"isLValue": true,
																				"isPure": false,
																				"lValueRequested": true,
																				"nodeType": "IndexAccess",
																				"src": "7062:15:13",
																				"typeDescriptions": {
																					"typeIdentifier": "t_struct$_NFT_$2827_memory_ptr",
																					"typeString": "struct SmashNFT_Marketplace.NFT memory"
																				}
																			},
																			"nodeType": "Assignment",
																			"operator": "=",
																			"rightHandSide": {
																				"baseExpression": {
																					"id": 3476,
																					"name": "_idToNFT",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 2814,
																					"src": "7080:8:13",
																					"typeDescriptions": {
																						"typeIdentifier": "t_mapping$_t_uint256_$_t_struct$_NFT_$2827_storage_$",
																						"typeString": "mapping(uint256 => struct SmashNFT_Marketplace.NFT storage ref)"
																					}
																				},
																				"id": 3480,
																				"indexExpression": {
																					"commonType": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					},
																					"id": 3479,
																					"isConstant": false,
																					"isLValue": false,
																					"isPure": false,
																					"lValueRequested": false,
																					"leftExpression": {
																						"id": 3477,
																						"name": "i",
																						"nodeType": "Identifier",
																						"overloadedDeclarations": [],
																						"referencedDeclaration": 3455,
																						"src": "7089:1:13",
																						"typeDescriptions": {
																							"typeIdentifier": "t_uint256",
																							"typeString": "uint256"
																						}
																					},
																					"nodeType": "BinaryOperation",
																					"operator": "+",
																					"rightExpression": {
																						"hexValue": "31",
																						"id": 3478,
																						"isConstant": false,
																						"isLValue": false,
																						"isPure": true,
																						"kind": "number",
																						"lValueRequested": false,
																						"nodeType": "Literal",
																						"src": "7093:1:13",
																						"typeDescriptions": {
																							"typeIdentifier": "t_rational_1_by_1",
																							"typeString": "int_const 1"
																						},
																						"value": "1"
																					},
																					"src": "7089:5:13",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				"isConstant": false,
																				"isLValue": true,
																				"isPure": false,
																				"lValueRequested": false,
																				"nodeType": "IndexAccess",
																				"src": "7080:15:13",
																				"typeDescriptions": {
																					"typeIdentifier": "t_struct$_NFT_$2827_storage",
																					"typeString": "struct SmashNFT_Marketplace.NFT storage ref"
																				}
																			},
																			"src": "7062:33:13",
																			"typeDescriptions": {
																				"typeIdentifier": "t_struct$_NFT_$2827_memory_ptr",
																				"typeString": "struct SmashNFT_Marketplace.NFT memory"
																			}
																		},
																		"id": 3482,
																		"nodeType": "ExpressionStatement",
																		"src": "7062:33:13"
																	},
																	{
																		"expression": {
																			"id": 3484,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"nodeType": "UnaryOperation",
																			"operator": "++",
																			"prefix": false,
																			"src": "7113:11:13",
																			"subExpression": {
																				"id": 3483,
																				"name": "nftsIndex",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 3451,
																				"src": "7113:9:13",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"id": 3485,
																		"nodeType": "ExpressionStatement",
																		"src": "7113:11:13"
																	}
																]
															}
														}
													]
												},
												"condition": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 3460,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 3458,
														"name": "i",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 3455,
														"src": "6966:1:13",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "<",
													"rightExpression": {
														"id": 3459,
														"name": "nftCount",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 3403,
														"src": "6970:8:13",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "6966:12:13",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 3489,
												"initializationExpression": {
													"assignments": [
														3455
													],
													"declarations": [
														{
															"constant": false,
															"id": 3455,
															"mutability": "mutable",
															"name": "i",
															"nameLocation": "6959:1:13",
															"nodeType": "VariableDeclaration",
															"scope": 3489,
															"src": "6954:6:13",
															"stateVariable": false,
															"storageLocation": "default",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"typeName": {
																"id": 3454,
																"name": "uint",
																"nodeType": "ElementaryTypeName",
																"src": "6954:4:13",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"visibility": "internal"
														}
													],
													"id": 3457,
													"initialValue": {
														"hexValue": "30",
														"id": 3456,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "6963:1:13",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_0_by_1",
															"typeString": "int_const 0"
														},
														"value": "0"
													},
													"nodeType": "VariableDeclarationStatement",
													"src": "6954:10:13"
												},
												"loopExpression": {
													"expression": {
														"id": 3462,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"nodeType": "UnaryOperation",
														"operator": "++",
														"prefix": false,
														"src": "6980:3:13",
														"subExpression": {
															"id": 3461,
															"name": "i",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 3455,
															"src": "6980:1:13",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"id": 3463,
													"nodeType": "ExpressionStatement",
													"src": "6980:3:13"
												},
												"nodeType": "ForStatement",
												"src": "6949:200:13"
											},
											{
												"expression": {
													"id": 3490,
													"name": "nfts",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 3442,
													"src": "7165:4:13",
													"typeDescriptions": {
														"typeIdentifier": "t_array$_t_struct$_NFT_$2827_memory_ptr_$dyn_memory_ptr",
														"typeString": "struct SmashNFT_Marketplace.NFT memory[] memory"
													}
												},
												"functionReturnParameters": 3401,
												"id": 3491,
												"nodeType": "Return",
												"src": "7158:11:13"
											}
										]
									},
									"functionSelector": "047b07bf",
									"id": 3493,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "getMyNfts",
									"nameLocation": "6576:9:13",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 3396,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "6585:2:13"
									},
									"returnParameters": {
										"id": 3401,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 3400,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 3493,
												"src": "6609:12:13",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_array$_t_struct$_NFT_$2827_memory_ptr_$dyn_memory_ptr",
													"typeString": "struct SmashNFT_Marketplace.NFT[]"
												},
												"typeName": {
													"baseType": {
														"id": 3398,
														"nodeType": "UserDefinedTypeName",
														"pathNode": {
															"id": 3397,
															"name": "NFT",
															"nameLocations": [
																"6609:3:13"
															],
															"nodeType": "IdentifierPath",
															"referencedDeclaration": 2827,
															"src": "6609:3:13"
														},
														"referencedDeclaration": 2827,
														"src": "6609:3:13",
														"typeDescriptions": {
															"typeIdentifier": "t_struct$_NFT_$2827_storage_ptr",
															"typeString": "struct SmashNFT_Marketplace.NFT"
														}
													},
													"id": 3399,
													"nodeType": "ArrayTypeName",
													"src": "6609:5:13",
													"typeDescriptions": {
														"typeIdentifier": "t_array$_t_struct$_NFT_$2827_storage_$dyn_storage_ptr",
														"typeString": "struct SmashNFT_Marketplace.NFT[]"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "6608:14:13"
									},
									"scope": 3611,
									"src": "6567:609:13",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "public"
								},
								{
									"body": {
										"id": 3609,
										"nodeType": "Block",
										"src": "7464:621:13",
										"statements": [
											{
												"assignments": [
													3501
												],
												"declarations": [
													{
														"constant": false,
														"id": 3501,
														"mutability": "mutable",
														"name": "nftCount",
														"nameLocation": "7479:8:13",
														"nodeType": "VariableDeclaration",
														"scope": 3609,
														"src": "7474:13:13",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 3500,
															"name": "uint",
															"nodeType": "ElementaryTypeName",
															"src": "7474:4:13",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 3505,
												"initialValue": {
													"arguments": [],
													"expression": {
														"argumentTypes": [],
														"expression": {
															"id": 3502,
															"name": "_nftCount",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2795,
															"src": "7490:9:13",
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_Counter_$1630_storage",
																"typeString": "struct Counters.Counter storage ref"
															}
														},
														"id": 3503,
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "7500:7:13",
														"memberName": "current",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 1642,
														"src": "7490:17:13",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_view$_t_struct$_Counter_$1630_storage_ptr_$returns$_t_uint256_$attached_to$_t_struct$_Counter_$1630_storage_ptr_$",
															"typeString": "function (struct Counters.Counter storage pointer) view returns (uint256)"
														}
													},
													"id": 3504,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "7490:19:13",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "7474:35:13"
											},
											{
												"assignments": [
													3507
												],
												"declarations": [
													{
														"constant": false,
														"id": 3507,
														"mutability": "mutable",
														"name": "myListedNftCount",
														"nameLocation": "7524:16:13",
														"nodeType": "VariableDeclaration",
														"scope": 3609,
														"src": "7519:21:13",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 3506,
															"name": "uint",
															"nodeType": "ElementaryTypeName",
															"src": "7519:4:13",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 3509,
												"initialValue": {
													"hexValue": "30",
													"id": 3508,
													"isConstant": false,
													"isLValue": false,
													"isPure": true,
													"kind": "number",
													"lValueRequested": false,
													"nodeType": "Literal",
													"src": "7543:1:13",
													"typeDescriptions": {
														"typeIdentifier": "t_rational_0_by_1",
														"typeString": "int_const 0"
													},
													"value": "0"
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "7519:25:13"
											},
											{
												"body": {
													"id": 3544,
													"nodeType": "Block",
													"src": "7590:148:13",
													"statements": [
														{
															"condition": {
																"commonType": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																},
																"id": 3538,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"components": [
																		{
																			"commonType": {
																				"typeIdentifier": "t_address",
																				"typeString": "address"
																			},
																			"id": 3528,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"leftExpression": {
																				"expression": {
																					"baseExpression": {
																						"id": 3520,
																						"name": "_idToNFT",
																						"nodeType": "Identifier",
																						"overloadedDeclarations": [],
																						"referencedDeclaration": 2814,
																						"src": "7609:8:13",
																						"typeDescriptions": {
																							"typeIdentifier": "t_mapping$_t_uint256_$_t_struct$_NFT_$2827_storage_$",
																							"typeString": "mapping(uint256 => struct SmashNFT_Marketplace.NFT storage ref)"
																						}
																					},
																					"id": 3524,
																					"indexExpression": {
																						"commonType": {
																							"typeIdentifier": "t_uint256",
																							"typeString": "uint256"
																						},
																						"id": 3523,
																						"isConstant": false,
																						"isLValue": false,
																						"isPure": false,
																						"lValueRequested": false,
																						"leftExpression": {
																							"id": 3521,
																							"name": "i",
																							"nodeType": "Identifier",
																							"overloadedDeclarations": [],
																							"referencedDeclaration": 3511,
																							"src": "7618:1:13",
																							"typeDescriptions": {
																								"typeIdentifier": "t_uint256",
																								"typeString": "uint256"
																							}
																						},
																						"nodeType": "BinaryOperation",
																						"operator": "+",
																						"rightExpression": {
																							"hexValue": "31",
																							"id": 3522,
																							"isConstant": false,
																							"isLValue": false,
																							"isPure": true,
																							"kind": "number",
																							"lValueRequested": false,
																							"nodeType": "Literal",
																							"src": "7622:1:13",
																							"typeDescriptions": {
																								"typeIdentifier": "t_rational_1_by_1",
																								"typeString": "int_const 1"
																							},
																							"value": "1"
																						},
																						"src": "7618:5:13",
																						"typeDescriptions": {
																							"typeIdentifier": "t_uint256",
																							"typeString": "uint256"
																						}
																					},
																					"isConstant": false,
																					"isLValue": true,
																					"isPure": false,
																					"lValueRequested": false,
																					"nodeType": "IndexAccess",
																					"src": "7609:15:13",
																					"typeDescriptions": {
																						"typeIdentifier": "t_struct$_NFT_$2827_storage",
																						"typeString": "struct SmashNFT_Marketplace.NFT storage ref"
																					}
																				},
																				"id": 3525,
																				"isConstant": false,
																				"isLValue": true,
																				"isPure": false,
																				"lValueRequested": false,
																				"memberLocation": "7625:6:13",
																				"memberName": "seller",
																				"nodeType": "MemberAccess",
																				"referencedDeclaration": 2820,
																				"src": "7609:22:13",
																				"typeDescriptions": {
																					"typeIdentifier": "t_address_payable",
																					"typeString": "address payable"
																				}
																			},
																			"nodeType": "BinaryOperation",
																			"operator": "==",
																			"rightExpression": {
																				"expression": {
																					"id": 3526,
																					"name": "msg",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 4294967281,
																					"src": "7635:3:13",
																					"typeDescriptions": {
																						"typeIdentifier": "t_magic_message",
																						"typeString": "msg"
																					}
																				},
																				"id": 3527,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": false,
																				"lValueRequested": false,
																				"memberLocation": "7639:6:13",
																				"memberName": "sender",
																				"nodeType": "MemberAccess",
																				"src": "7635:10:13",
																				"typeDescriptions": {
																					"typeIdentifier": "t_address",
																					"typeString": "address"
																				}
																			},
																			"src": "7609:36:13",
																			"typeDescriptions": {
																				"typeIdentifier": "t_bool",
																				"typeString": "bool"
																			}
																		}
																	],
																	"id": 3529,
																	"isConstant": false,
																	"isInlineArray": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"nodeType": "TupleExpression",
																	"src": "7608:38:13",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bool",
																		"typeString": "bool"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": "&&",
																"rightExpression": {
																	"components": [
																		{
																			"id": 3536,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"nodeType": "UnaryOperation",
																			"operator": "!",
																			"prefix": true,
																			"src": "7651:23:13",
																			"subExpression": {
																				"expression": {
																					"baseExpression": {
																						"id": 3530,
																						"name": "_idToNFT",
																						"nodeType": "Identifier",
																						"overloadedDeclarations": [],
																						"referencedDeclaration": 2814,
																						"src": "7652:8:13",
																						"typeDescriptions": {
																							"typeIdentifier": "t_mapping$_t_uint256_$_t_struct$_NFT_$2827_storage_$",
																							"typeString": "mapping(uint256 => struct SmashNFT_Marketplace.NFT storage ref)"
																						}
																					},
																					"id": 3534,
																					"indexExpression": {
																						"commonType": {
																							"typeIdentifier": "t_uint256",
																							"typeString": "uint256"
																						},
																						"id": 3533,
																						"isConstant": false,
																						"isLValue": false,
																						"isPure": false,
																						"lValueRequested": false,
																						"leftExpression": {
																							"id": 3531,
																							"name": "i",
																							"nodeType": "Identifier",
																							"overloadedDeclarations": [],
																							"referencedDeclaration": 3511,
																							"src": "7661:1:13",
																							"typeDescriptions": {
																								"typeIdentifier": "t_uint256",
																								"typeString": "uint256"
																							}
																						},
																						"nodeType": "BinaryOperation",
																						"operator": "+",
																						"rightExpression": {
																							"hexValue": "31",
																							"id": 3532,
																							"isConstant": false,
																							"isLValue": false,
																							"isPure": true,
																							"kind": "number",
																							"lValueRequested": false,
																							"nodeType": "Literal",
																							"src": "7665:1:13",
																							"typeDescriptions": {
																								"typeIdentifier": "t_rational_1_by_1",
																								"typeString": "int_const 1"
																							},
																							"value": "1"
																						},
																						"src": "7661:5:13",
																						"typeDescriptions": {
																							"typeIdentifier": "t_uint256",
																							"typeString": "uint256"
																						}
																					},
																					"isConstant": false,
																					"isLValue": true,
																					"isPure": false,
																					"lValueRequested": false,
																					"nodeType": "IndexAccess",
																					"src": "7652:15:13",
																					"typeDescriptions": {
																						"typeIdentifier": "t_struct$_NFT_$2827_storage",
																						"typeString": "struct SmashNFT_Marketplace.NFT storage ref"
																					}
																				},
																				"id": 3535,
																				"isConstant": false,
																				"isLValue": true,
																				"isPure": false,
																				"lValueRequested": false,
																				"memberLocation": "7668:6:13",
																				"memberName": "listed",
																				"nodeType": "MemberAccess",
																				"referencedDeclaration": 2826,
																				"src": "7652:22:13",
																				"typeDescriptions": {
																					"typeIdentifier": "t_bool",
																					"typeString": "bool"
																				}
																			},
																			"typeDescriptions": {
																				"typeIdentifier": "t_bool",
																				"typeString": "bool"
																			}
																		}
																	],
																	"id": 3537,
																	"isConstant": false,
																	"isInlineArray": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"nodeType": "TupleExpression",
																	"src": "7650:25:13",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bool",
																		"typeString": "bool"
																	}
																},
																"src": "7608:67:13",
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																}
															},
															"id": 3543,
															"nodeType": "IfStatement",
															"src": "7604:124:13",
															"trueBody": {
																"id": 3542,
																"nodeType": "Block",
																"src": "7677:51:13",
																"statements": [
																	{
																		"expression": {
																			"id": 3540,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"nodeType": "UnaryOperation",
																			"operator": "++",
																			"prefix": false,
																			"src": "7695:18:13",
																			"subExpression": {
																				"id": 3539,
																				"name": "myListedNftCount",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 3507,
																				"src": "7695:16:13",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"id": 3541,
																		"nodeType": "ExpressionStatement",
																		"src": "7695:18:13"
																	}
																]
															}
														}
													]
												},
												"condition": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 3516,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 3514,
														"name": "i",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 3511,
														"src": "7571:1:13",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "<",
													"rightExpression": {
														"id": 3515,
														"name": "nftCount",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 3501,
														"src": "7575:8:13",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "7571:12:13",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 3545,
												"initializationExpression": {
													"assignments": [
														3511
													],
													"declarations": [
														{
															"constant": false,
															"id": 3511,
															"mutability": "mutable",
															"name": "i",
															"nameLocation": "7564:1:13",
															"nodeType": "VariableDeclaration",
															"scope": 3545,
															"src": "7559:6:13",
															"stateVariable": false,
															"storageLocation": "default",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"typeName": {
																"id": 3510,
																"name": "uint",
																"nodeType": "ElementaryTypeName",
																"src": "7559:4:13",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"visibility": "internal"
														}
													],
													"id": 3513,
													"initialValue": {
														"hexValue": "30",
														"id": 3512,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "7568:1:13",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_0_by_1",
															"typeString": "int_const 0"
														},
														"value": "0"
													},
													"nodeType": "VariableDeclarationStatement",
													"src": "7559:10:13"
												},
												"loopExpression": {
													"expression": {
														"id": 3518,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"nodeType": "UnaryOperation",
														"operator": "++",
														"prefix": false,
														"src": "7585:3:13",
														"subExpression": {
															"id": 3517,
															"name": "i",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 3511,
															"src": "7585:1:13",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"id": 3519,
													"nodeType": "ExpressionStatement",
													"src": "7585:3:13"
												},
												"nodeType": "ForStatement",
												"src": "7554:184:13"
											},
											{
												"assignments": [
													3550
												],
												"declarations": [
													{
														"constant": false,
														"id": 3550,
														"mutability": "mutable",
														"name": "nfts",
														"nameLocation": "7760:4:13",
														"nodeType": "VariableDeclaration",
														"scope": 3609,
														"src": "7747:17:13",
														"stateVariable": false,
														"storageLocation": "memory",
														"typeDescriptions": {
															"typeIdentifier": "t_array$_t_struct$_NFT_$2827_memory_ptr_$dyn_memory_ptr",
															"typeString": "struct SmashNFT_Marketplace.NFT[]"
														},
														"typeName": {
															"baseType": {
																"id": 3548,
																"nodeType": "UserDefinedTypeName",
																"pathNode": {
																	"id": 3547,
																	"name": "NFT",
																	"nameLocations": [
																		"7747:3:13"
																	],
																	"nodeType": "IdentifierPath",
																	"referencedDeclaration": 2827,
																	"src": "7747:3:13"
																},
																"referencedDeclaration": 2827,
																"src": "7747:3:13",
																"typeDescriptions": {
																	"typeIdentifier": "t_struct$_NFT_$2827_storage_ptr",
																	"typeString": "struct SmashNFT_Marketplace.NFT"
																}
															},
															"id": 3549,
															"nodeType": "ArrayTypeName",
															"src": "7747:5:13",
															"typeDescriptions": {
																"typeIdentifier": "t_array$_t_struct$_NFT_$2827_storage_$dyn_storage_ptr",
																"typeString": "struct SmashNFT_Marketplace.NFT[]"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 3557,
												"initialValue": {
													"arguments": [
														{
															"id": 3555,
															"name": "myListedNftCount",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 3507,
															"src": "7777:16:13",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 3554,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"lValueRequested": false,
														"nodeType": "NewExpression",
														"src": "7767:9:13",
														"typeDescriptions": {
															"typeIdentifier": "t_function_objectcreation_pure$_t_uint256_$returns$_t_array$_t_struct$_NFT_$2827_memory_ptr_$dyn_memory_ptr_$",
															"typeString": "function (uint256) pure returns (struct SmashNFT_Marketplace.NFT memory[] memory)"
														},
														"typeName": {
															"baseType": {
																"id": 3552,
																"nodeType": "UserDefinedTypeName",
																"pathNode": {
																	"id": 3551,
																	"name": "NFT",
																	"nameLocations": [
																		"7771:3:13"
																	],
																	"nodeType": "IdentifierPath",
																	"referencedDeclaration": 2827,
																	"src": "7771:3:13"
																},
																"referencedDeclaration": 2827,
																"src": "7771:3:13",
																"typeDescriptions": {
																	"typeIdentifier": "t_struct$_NFT_$2827_storage_ptr",
																	"typeString": "struct SmashNFT_Marketplace.NFT"
																}
															},
															"id": 3553,
															"nodeType": "ArrayTypeName",
															"src": "7771:5:13",
															"typeDescriptions": {
																"typeIdentifier": "t_array$_t_struct$_NFT_$2827_storage_$dyn_storage_ptr",
																"typeString": "struct SmashNFT_Marketplace.NFT[]"
															}
														}
													},
													"id": 3556,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "7767:27:13",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_array$_t_struct$_NFT_$2827_memory_ptr_$dyn_memory_ptr",
														"typeString": "struct SmashNFT_Marketplace.NFT memory[] memory"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "7747:47:13"
											},
											{
												"assignments": [
													3559
												],
												"declarations": [
													{
														"constant": false,
														"id": 3559,
														"mutability": "mutable",
														"name": "nftsIndex",
														"nameLocation": "7809:9:13",
														"nodeType": "VariableDeclaration",
														"scope": 3609,
														"src": "7804:14:13",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 3558,
															"name": "uint",
															"nodeType": "ElementaryTypeName",
															"src": "7804:4:13",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 3561,
												"initialValue": {
													"hexValue": "30",
													"id": 3560,
													"isConstant": false,
													"isLValue": false,
													"isPure": true,
													"kind": "number",
													"lValueRequested": false,
													"nodeType": "Literal",
													"src": "7821:1:13",
													"typeDescriptions": {
														"typeIdentifier": "t_rational_0_by_1",
														"typeString": "int_const 0"
													},
													"value": "0"
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "7804:18:13"
											},
											{
												"body": {
													"id": 3605,
													"nodeType": "Block",
													"src": "7868:190:13",
													"statements": [
														{
															"condition": {
																"commonType": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																},
																"id": 3589,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"commonType": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	},
																	"id": 3580,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"leftExpression": {
																		"expression": {
																			"baseExpression": {
																				"id": 3572,
																				"name": "_idToNFT",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 2814,
																				"src": "7886:8:13",
																				"typeDescriptions": {
																					"typeIdentifier": "t_mapping$_t_uint256_$_t_struct$_NFT_$2827_storage_$",
																					"typeString": "mapping(uint256 => struct SmashNFT_Marketplace.NFT storage ref)"
																				}
																			},
																			"id": 3576,
																			"indexExpression": {
																				"commonType": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				},
																				"id": 3575,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": false,
																				"lValueRequested": false,
																				"leftExpression": {
																					"id": 3573,
																					"name": "i",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 3563,
																					"src": "7895:1:13",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				"nodeType": "BinaryOperation",
																				"operator": "+",
																				"rightExpression": {
																					"hexValue": "31",
																					"id": 3574,
																					"isConstant": false,
																					"isLValue": false,
																					"isPure": true,
																					"kind": "number",
																					"lValueRequested": false,
																					"nodeType": "Literal",
																					"src": "7899:1:13",
																					"typeDescriptions": {
																						"typeIdentifier": "t_rational_1_by_1",
																						"typeString": "int_const 1"
																					},
																					"value": "1"
																				},
																				"src": "7895:5:13",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"isConstant": false,
																			"isLValue": true,
																			"isPure": false,
																			"lValueRequested": false,
																			"nodeType": "IndexAccess",
																			"src": "7886:15:13",
																			"typeDescriptions": {
																				"typeIdentifier": "t_struct$_NFT_$2827_storage",
																				"typeString": "struct SmashNFT_Marketplace.NFT storage ref"
																			}
																		},
																		"id": 3577,
																		"isConstant": false,
																		"isLValue": true,
																		"isPure": false,
																		"lValueRequested": false,
																		"memberLocation": "7902:6:13",
																		"memberName": "seller",
																		"nodeType": "MemberAccess",
																		"referencedDeclaration": 2820,
																		"src": "7886:22:13",
																		"typeDescriptions": {
																			"typeIdentifier": "t_address_payable",
																			"typeString": "address payable"
																		}
																	},
																	"nodeType": "BinaryOperation",
																	"operator": "==",
																	"rightExpression": {
																		"expression": {
																			"id": 3578,
																			"name": "msg",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 4294967281,
																			"src": "7912:3:13",
																			"typeDescriptions": {
																				"typeIdentifier": "t_magic_message",
																				"typeString": "msg"
																			}
																		},
																		"id": 3579,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"memberLocation": "7916:6:13",
																		"memberName": "sender",
																		"nodeType": "MemberAccess",
																		"src": "7912:10:13",
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	},
																	"src": "7886:36:13",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bool",
																		"typeString": "bool"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": "&&",
																"rightExpression": {
																	"components": [
																		{
																			"id": 3587,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"nodeType": "UnaryOperation",
																			"operator": "!",
																			"prefix": true,
																			"src": "7927:23:13",
																			"subExpression": {
																				"expression": {
																					"baseExpression": {
																						"id": 3581,
																						"name": "_idToNFT",
																						"nodeType": "Identifier",
																						"overloadedDeclarations": [],
																						"referencedDeclaration": 2814,
																						"src": "7928:8:13",
																						"typeDescriptions": {
																							"typeIdentifier": "t_mapping$_t_uint256_$_t_struct$_NFT_$2827_storage_$",
																							"typeString": "mapping(uint256 => struct SmashNFT_Marketplace.NFT storage ref)"
																						}
																					},
																					"id": 3585,
																					"indexExpression": {
																						"commonType": {
																							"typeIdentifier": "t_uint256",
																							"typeString": "uint256"
																						},
																						"id": 3584,
																						"isConstant": false,
																						"isLValue": false,
																						"isPure": false,
																						"lValueRequested": false,
																						"leftExpression": {
																							"id": 3582,
																							"name": "i",
																							"nodeType": "Identifier",
																							"overloadedDeclarations": [],
																							"referencedDeclaration": 3563,
																							"src": "7937:1:13",
																							"typeDescriptions": {
																								"typeIdentifier": "t_uint256",
																								"typeString": "uint256"
																							}
																						},
																						"nodeType": "BinaryOperation",
																						"operator": "+",
																						"rightExpression": {
																							"hexValue": "31",
																							"id": 3583,
																							"isConstant": false,
																							"isLValue": false,
																							"isPure": true,
																							"kind": "number",
																							"lValueRequested": false,
																							"nodeType": "Literal",
																							"src": "7941:1:13",
																							"typeDescriptions": {
																								"typeIdentifier": "t_rational_1_by_1",
																								"typeString": "int_const 1"
																							},
																							"value": "1"
																						},
																						"src": "7937:5:13",
																						"typeDescriptions": {
																							"typeIdentifier": "t_uint256",
																							"typeString": "uint256"
																						}
																					},
																					"isConstant": false,
																					"isLValue": true,
																					"isPure": false,
																					"lValueRequested": false,
																					"nodeType": "IndexAccess",
																					"src": "7928:15:13",
																					"typeDescriptions": {
																						"typeIdentifier": "t_struct$_NFT_$2827_storage",
																						"typeString": "struct SmashNFT_Marketplace.NFT storage ref"
																					}
																				},
																				"id": 3586,
																				"isConstant": false,
																				"isLValue": true,
																				"isPure": false,
																				"lValueRequested": false,
																				"memberLocation": "7944:6:13",
																				"memberName": "listed",
																				"nodeType": "MemberAccess",
																				"referencedDeclaration": 2826,
																				"src": "7928:22:13",
																				"typeDescriptions": {
																					"typeIdentifier": "t_bool",
																					"typeString": "bool"
																				}
																			},
																			"typeDescriptions": {
																				"typeIdentifier": "t_bool",
																				"typeString": "bool"
																			}
																		}
																	],
																	"id": 3588,
																	"isConstant": false,
																	"isInlineArray": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"nodeType": "TupleExpression",
																	"src": "7926:25:13",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bool",
																		"typeString": "bool"
																	}
																},
																"src": "7886:65:13",
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																}
															},
															"id": 3604,
															"nodeType": "IfStatement",
															"src": "7882:166:13",
															"trueBody": {
																"id": 3603,
																"nodeType": "Block",
																"src": "7953:95:13",
																"statements": [
																	{
																		"expression": {
																			"id": 3598,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"leftHandSide": {
																				"baseExpression": {
																					"id": 3590,
																					"name": "nfts",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 3550,
																					"src": "7971:4:13",
																					"typeDescriptions": {
																						"typeIdentifier": "t_array$_t_struct$_NFT_$2827_memory_ptr_$dyn_memory_ptr",
																						"typeString": "struct SmashNFT_Marketplace.NFT memory[] memory"
																					}
																				},
																				"id": 3592,
																				"indexExpression": {
																					"id": 3591,
																					"name": "nftsIndex",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 3559,
																					"src": "7976:9:13",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				"isConstant": false,
																				"isLValue": true,
																				"isPure": false,
																				"lValueRequested": true,
																				"nodeType": "IndexAccess",
																				"src": "7971:15:13",
																				"typeDescriptions": {
																					"typeIdentifier": "t_struct$_NFT_$2827_memory_ptr",
																					"typeString": "struct SmashNFT_Marketplace.NFT memory"
																				}
																			},
																			"nodeType": "Assignment",
																			"operator": "=",
																			"rightHandSide": {
																				"baseExpression": {
																					"id": 3593,
																					"name": "_idToNFT",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 2814,
																					"src": "7989:8:13",
																					"typeDescriptions": {
																						"typeIdentifier": "t_mapping$_t_uint256_$_t_struct$_NFT_$2827_storage_$",
																						"typeString": "mapping(uint256 => struct SmashNFT_Marketplace.NFT storage ref)"
																					}
																				},
																				"id": 3597,
																				"indexExpression": {
																					"commonType": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					},
																					"id": 3596,
																					"isConstant": false,
																					"isLValue": false,
																					"isPure": false,
																					"lValueRequested": false,
																					"leftExpression": {
																						"id": 3594,
																						"name": "i",
																						"nodeType": "Identifier",
																						"overloadedDeclarations": [],
																						"referencedDeclaration": 3563,
																						"src": "7998:1:13",
																						"typeDescriptions": {
																							"typeIdentifier": "t_uint256",
																							"typeString": "uint256"
																						}
																					},
																					"nodeType": "BinaryOperation",
																					"operator": "+",
																					"rightExpression": {
																						"hexValue": "31",
																						"id": 3595,
																						"isConstant": false,
																						"isLValue": false,
																						"isPure": true,
																						"kind": "number",
																						"lValueRequested": false,
																						"nodeType": "Literal",
																						"src": "8002:1:13",
																						"typeDescriptions": {
																							"typeIdentifier": "t_rational_1_by_1",
																							"typeString": "int_const 1"
																						},
																						"value": "1"
																					},
																					"src": "7998:5:13",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				"isConstant": false,
																				"isLValue": true,
																				"isPure": false,
																				"lValueRequested": false,
																				"nodeType": "IndexAccess",
																				"src": "7989:15:13",
																				"typeDescriptions": {
																					"typeIdentifier": "t_struct$_NFT_$2827_storage",
																					"typeString": "struct SmashNFT_Marketplace.NFT storage ref"
																				}
																			},
																			"src": "7971:33:13",
																			"typeDescriptions": {
																				"typeIdentifier": "t_struct$_NFT_$2827_memory_ptr",
																				"typeString": "struct SmashNFT_Marketplace.NFT memory"
																			}
																		},
																		"id": 3599,
																		"nodeType": "ExpressionStatement",
																		"src": "7971:33:13"
																	},
																	{
																		"expression": {
																			"id": 3601,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"nodeType": "UnaryOperation",
																			"operator": "++",
																			"prefix": false,
																			"src": "8022:11:13",
																			"subExpression": {
																				"id": 3600,
																				"name": "nftsIndex",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 3559,
																				"src": "8022:9:13",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"id": 3602,
																		"nodeType": "ExpressionStatement",
																		"src": "8022:11:13"
																	}
																]
															}
														}
													]
												},
												"condition": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 3568,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 3566,
														"name": "i",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 3563,
														"src": "7849:1:13",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "<",
													"rightExpression": {
														"id": 3567,
														"name": "nftCount",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 3501,
														"src": "7853:8:13",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "7849:12:13",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 3606,
												"initializationExpression": {
													"assignments": [
														3563
													],
													"declarations": [
														{
															"constant": false,
															"id": 3563,
															"mutability": "mutable",
															"name": "i",
															"nameLocation": "7842:1:13",
															"nodeType": "VariableDeclaration",
															"scope": 3606,
															"src": "7837:6:13",
															"stateVariable": false,
															"storageLocation": "default",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"typeName": {
																"id": 3562,
																"name": "uint",
																"nodeType": "ElementaryTypeName",
																"src": "7837:4:13",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"visibility": "internal"
														}
													],
													"id": 3565,
													"initialValue": {
														"hexValue": "30",
														"id": 3564,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "7846:1:13",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_0_by_1",
															"typeString": "int_const 0"
														},
														"value": "0"
													},
													"nodeType": "VariableDeclarationStatement",
													"src": "7837:10:13"
												},
												"loopExpression": {
													"expression": {
														"id": 3570,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"nodeType": "UnaryOperation",
														"operator": "++",
														"prefix": false,
														"src": "7863:3:13",
														"subExpression": {
															"id": 3569,
															"name": "i",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 3563,
															"src": "7863:1:13",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"id": 3571,
													"nodeType": "ExpressionStatement",
													"src": "7863:3:13"
												},
												"nodeType": "ForStatement",
												"src": "7832:226:13"
											},
											{
												"expression": {
													"id": 3607,
													"name": "nfts",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 3550,
													"src": "8074:4:13",
													"typeDescriptions": {
														"typeIdentifier": "t_array$_t_struct$_NFT_$2827_memory_ptr_$dyn_memory_ptr",
														"typeString": "struct SmashNFT_Marketplace.NFT memory[] memory"
													}
												},
												"functionReturnParameters": 3499,
												"id": 3608,
												"nodeType": "Return",
												"src": "8067:11:13"
											}
										]
									},
									"functionSelector": "1f4cc4db",
									"id": 3610,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "getMyListedNfts",
									"nameLocation": "7411:15:13",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 3494,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "7426:2:13"
									},
									"returnParameters": {
										"id": 3499,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 3498,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 3610,
												"src": "7450:12:13",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_array$_t_struct$_NFT_$2827_memory_ptr_$dyn_memory_ptr",
													"typeString": "struct SmashNFT_Marketplace.NFT[]"
												},
												"typeName": {
													"baseType": {
														"id": 3496,
														"nodeType": "UserDefinedTypeName",
														"pathNode": {
															"id": 3495,
															"name": "NFT",
															"nameLocations": [
																"7450:3:13"
															],
															"nodeType": "IdentifierPath",
															"referencedDeclaration": 2827,
															"src": "7450:3:13"
														},
														"referencedDeclaration": 2827,
														"src": "7450:3:13",
														"typeDescriptions": {
															"typeIdentifier": "t_struct$_NFT_$2827_storage_ptr",
															"typeString": "struct SmashNFT_Marketplace.NFT"
														}
													},
													"id": 3497,
													"nodeType": "ArrayTypeName",
													"src": "7450:5:13",
													"typeDescriptions": {
														"typeIdentifier": "t_array$_t_struct$_NFT_$2827_storage_$dyn_storage_ptr",
														"typeString": "struct SmashNFT_Marketplace.NFT[]"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "7449:14:13"
									},
									"scope": 3611,
									"src": "7402:683:13",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "public"
								}
							],
							"scope": 3612,
							"src": "317:7770:13",
							"usedErrors": [],
							"usedEvents": [
								13,
								2844,
								2856
							]
						}
					],
					"src": "32:8056:13"
				},
				"id": 13
			}
		}
	}
}